{
    "004010e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004010e0(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401116:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    if (*0x54dcb8 != NULL) {\n                        *(*0x20 + -0x38) = *0x54dcb8;\n                        iVar6 = 0;\n                        puVar5 = *0x54dcb8;\n                        puVar4 = *0x54dcb0;\n                        while( true ) {\n                            uVar1 = *puVar4;\n                            if (*(puVar4 + 3) != '\\0') {\n                                if ((*(puVar4 + 0x19) == '\\0') || (*puVar4[2] != '\\0')) {\n                                    *puVar4[2] = *(puVar4 + 0x19);\n                                }\n                                else {\n                                    *(*0x20 + -0x40) = puVar4[1];\n                                    *(*0x20 + -0x10) = uVar1;\n                                    *(*0x20 + -0x48) = iVar6;\n                                    *(*0x20 + -0x18) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4013bb;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x90) = 0x4013cc;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x90) = 0x4013db;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x90) = 0x4013ec;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x90) = 0x4013f1;\n                                    fcn.00433120();\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar4 = *(*0x20 + -0x18);\n                                    iVar6 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar6 = iVar6 + 1;\n                            if (puVar5 <= iVar6) break;\n                            puVar4 = puVar4 + 4;\n                        }\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040112d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040112d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401610;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401605;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x0040118c;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x0040118c:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401308;\n                fcn.004330a0();\n                *(*0x20 + -0x90) = 0x401319;\n                fcn.004339a0();\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.004339a0();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.004339a0();\n                *(*0x20 + -0x90) = 0x40133e;\n                fcn.00433120();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401116;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x0040128c:\n                                *(*0x20 + -0x90) = 0x401291;\n                                fcn.004330a0();\n                                *(*0x20 + -0x90) = 0x4012a5;\n                                fcn.004339a0();\n                                *(*0x20 + -0x90) = 0x4012b4;\n                                fcn.004339a0();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.004339a0();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.004339a0();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.004339a0();\n                                *(*0x20 + -0x90) = 0x4012ea;\n                                fcn.00433120();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401116;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x0040128c;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x54dcb8;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x54dcb8;\n                                if (*0x54dcb8 <= puVar3) {\ncode_r0x004015d7:\n                                    *(*0x20 + -0x90) = 0x4015dc;\n                                    fcn.004599e0(puVar7);\n                                    goto code_r0x004015dc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x54dcb0 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x54dcb0;\n                                if (*0x54dcb8 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015d7;\n                                    puVar7 = *0x54dcb8;\n                                    fcn.004599e0(*0x54dcb8);\n                                    goto code_r0x004015d7;\n                                }\ncode_r0x0040158a:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x54dcb8;\n                            puVar4 = NULL;\n                            arg2 = *0x54dcb8;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x54dcb8;\n                                puVar10 = *0x54dcb0;\n                                if (*0x54dcb8 <= puVar4) {\ncode_r0x00401585:\n                                    *(*0x20 + -0x90) = 0x40158a;\n                                    iVar6 = fcn.004599e0(puVar7);\n                                    goto code_r0x0040158a;\n                                }\n                                puVar7 = (*0x54dcb0)[puVar4 * 4 + 1];\n                                puVar10 = (*0x54dcb0)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014b0;\n                                    cVar2 = fcn.004025a0(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x54dcb8;\n                                        in_RAX = *0x54dcb0;\n                                        if (puVar3 < *0x54dcb8) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x54dcb0 + 3 + puVar10) = 1;\n                                            in_RAX = *0x54dcb0;\n                                            if (puVar3 < *0x54dcb8) {\n                                                *(*0x54dcb0 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401116;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40157f;\n                                            puVar7 = *0x54dcb8;\n                                            fcn.004599e0(*0x54dcb8);\n                                        }\n                                        *(*0x20 + -0x90) = 0x401585;\n                                        fcn.004599e0(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x00401585;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401535;\n                            fcn.004330a0();\n                            *(*0x20 + -0x90) = 0x401546;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x40156b;\n                            fcn.00433120();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401116;\n                    }\ncode_r0x004015dc:\n                    *(*0x20 + -0x90) = 0x4015e5;\n                    fcn.00459aa0(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x4015f2;\n                arg2 = puVar7;\n                fcn.00459aa0(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401605;\n            fcn.00459a20(arg2, puVar7);\ncode_r0x00401605:\n            *(*0x20 + -0x90) = 0x401610;\n            puVar7 = unaff_RBX;\n            fcn.00459aa0(unaff_RBX);\ncode_r0x00401610:\n            *(*0x20 + -0x90) = 0x401618;\n            in_RAX = fcn.00459a20(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401628;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3443
    },
    "00401640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d88)\n\nvoid fcn.00401640(ulong param_1, ulong *param_2, ulong *param_3, ulong *param_4)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    ulong uVar9;\n    int64_t unaff_R14;\n    int32_t iStack96;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint64_t arg2;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    puVar1 = fcn.0040bba0();\n    puVar1[1] = 3;\n    *puVar1 = 0x47f07a;\n    puVar1[2] = 0x5a2261;\n    puVar1[5] = 3;\n    puVar1[4] = 0x47f07d;\n    puVar1[6] = 0x5a2260;\n    puVar1[9] = 4;\n    puVar1[8] = 0x47f157;\n    puVar1[10] = 0x5a2266;\n    puVar1[0xd] = 9;\n    puVar1[0xc] = 0x47fa75;\n    puVar1[0xe] = 0x5a2269;\n    puVar1[0x11] = 6;\n    puVar1[0x10] = 0x47f3df;\n    puVar3 = 0x5a226b;\n    puVar1[0x12] = 0x5a226b;\n    *0x54dcb8 = 0x5;\n    *0x54dcc0 = 0x5;\n    if (*0x5a1da0 != 0) {\n        fcn.00459540(0x5a226b, param_2, param_3, param_4);\n        puVar1 = *0x54dcb0;\n    }\n    *0x54dcb0 = puVar1;\n    fcn.00401f00();\n    puVar1 = *0x54dcb0;\n    if (iStack96 < 2) {\n        puVar3 = *0x54dcb8 + 5;\n        puVar2 = *0x54dcb0;\n        puVar8 = *0x54dcb8;\n        if ((*0x54dcc0 < puVar3) &&\n           (puVar4 = *0x54dcb8,  puVar2 = fcn.00443500(*0x54dcb8),  puVar8 = puVar1,  puVar1 = puVar2, \n           *0x54dcc0 = puVar4,  *0x5a1da0 != 0)) {\n            puVar2 = fcn.00459540(puVar4, puVar3, param_3, param_4);\n            puVar1 = *0x54dcb0;\n        }\n        *0x54dcb0 = puVar1;\n        *0x54dcb8 = puVar8 + 5;\n        iVar7 = puVar8 * 0x20;\n        puVar2[puVar8 * 4 + 1] = 6;\n        *(puVar2 + puVar8 * 4 + 3) = 0;\n        *(puVar2 + iVar7 + 0x19) = 0;\n        param_3 = puVar2 + puVar8 * 4 + 4;\n        param_4 = puVar2 + puVar8 * 4 + 6;\n        puVar3 = puVar2 + puVar8 * 4 + 0x10;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4] = 0x47f3d9;\n            puVar2[puVar8 * 4 + 2] = 0x5a226a;\n        }\n        else {\n            uVar9 = 0x47f3d9;\n            fcn.004596e0(puVar3, puVar2 + puVar8 * 4 + 2, param_3);\n            iStack96 = fcn.00459660(puVar3, 0x5a226a, param_3, uVar9);\n        }\n        puVar2[puVar8 * 4 + 5] = 4;\n        *(puVar2 + puVar8 * 4 + 7) = 0;\n        *(puVar2 + iVar7 + 0x39) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 4] = 0x47f177;\n            puVar2[puVar8 * 4 + 6] = 0x5a226c;\n        }\n        else {\n            fcn.00459660(puVar3, 0x47f177, param_3, param_4);\n            iStack96 = fcn.00459660(puVar3, 0x5a226c, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 9] = 5;\n        *(puVar2 + puVar8 * 4 + 0xb) = 0;\n        *(puVar2 + iVar7 + 0x59) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 8] = 0x47f273;\n            puVar2[puVar8 * 4 + 10] = 0x5a226e;\n        }\n        else {\n            fcn.00459660(puVar3, 0x47f273, param_3, param_4);\n            iStack96 = fcn.00459660(puVar3, 0x5a226e, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 0xd] = 5;\n        *(puVar2 + puVar8 * 4 + 0xf) = 0;\n        *(puVar2 + iVar7 + 0x79) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 0xc] = 0x47f278;\n            puVar2[puVar8 * 4 + 0xe] = 0x5a226f;\n        }\n        else {\n            fcn.00459660(puVar3, 0x47f278, param_3, param_4);\n            iStack96 = fcn.00459660(puVar3, 0x5a226f, param_3, param_4);\n        }\n        puVar2[puVar8 * 4 + 0x11] = 5;\n        *(puVar2 + puVar8 * 4 + 0x13) = 0;\n        *(puVar2 + iVar7 + 0x99) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 0x10] = 0x47f27d;\n            param_2 = 0x5a226d;\n            puVar2[puVar8 * 4 + 0x12] = 0x5a226d;\n        }\n        else {\n            fcn.00459660(puVar3, 0x47f27d, param_3, param_4);\n            param_2 = 0x5a226d;\n            iStack96 = fcn.00459660(puVar3, 0x5a226d, param_3, param_4);\n        }\n    }\n    puVar1 = *0x54dcb0;\n    if (iStack96 < 3) {\n        puVar3 = *0x54dcb8 + 5;\n        puVar2 = *0x54dcb0;\n        puVar8 = *0x54dcb8;\n        if ((*0x54dcc0 < puVar3) &&\n           (puVar4 = *0x54dcb8,  puVar2 = fcn.00443500(*0x54dcb8),  puVar8 = puVar1,  puVar1 = puVar2, \n           *0x54dcc0 = puVar4,  *0x5a1da0 != 0)) {\n            puVar2 = fcn.00459540(puVar4, puVar3, param_3, param_4);\n            puVar1 = *0x54dcb0;\n        }\n        *0x54dcb0 = puVar1;\n        *0x54dcb8 = puVar8 + 5;\n        iVar7 = puVar8 * 0x20;\n        puVar2[puVar8 * 4 + 1] = 3;\n        *(puVar2 + puVar8 * 4 + 3) = 0;\n        *(puVar2 + iVar7 + 0x19) = 0;\n        puVar3 = puVar2 + puVar8 * 4 + 4;\n        param_2 = puVar2 + puVar8 * 4 + 6;\n        puVar1 = puVar2 + puVar8 * 4 + 8;\n        puVar4 = puVar2 + puVar8 * 4 + 10;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4] = 0x47f080;\n            puVar2[puVar8 * 4 + 2] = 0x5a2262;\n        }\n        else {\n            uVar9 = 0x47f080;\n            fcn.004596e0(puVar3, param_2, puVar1);\n            fcn.00459540(puVar3, param_2, puVar1, uVar9);\n        }\n        puVar2[puVar8 * 4 + 5] = 4;\n        *(puVar2 + puVar8 * 4 + 7) = 0;\n        *(puVar2 + iVar7 + 0x39) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 4] = 0x47f11f;\n            puVar2[puVar8 * 4 + 6] = 0x5a2263;\n        }\n        else {\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 9] = 4;\n        *(puVar2 + puVar8 * 4 + 0xb) = 0;\n        *(puVar2 + iVar7 + 0x59) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 8] = 0x47f12b;\n            puVar2[puVar8 * 4 + 10] = 0x5a2264;\n        }\n        else {\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 0xd] = 4;\n        *(puVar2 + puVar8 * 4 + 0xf) = 0;\n        *(puVar2 + iVar7 + 0x79) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 0xc] = 0x47f12f;\n            puVar2[puVar8 * 4 + 0xe] = 0x5a2265;\n        }\n        else {\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n        }\n        puVar2[puVar8 * 4 + 0x11] = 3;\n        *(puVar2 + puVar8 * 4 + 0x13) = 0;\n        *(puVar2 + iVar7 + 0x99) = 0;\n        if (*0x5a1da0 == 0) {\n            puVar2[puVar8 * 4 + 0x10] = 0x47f089;\n            puVar2[puVar8 * 4 + 0x12] = 0x5a2267;\n        }\n        else {\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n            fcn.00459540(puVar3, param_2, puVar1, puVar4);\n        }\n    }\n    fcn.00401ec0(puVar3, param_2);\n    if (uStack88 != 0) {\n        fcn.00401ec0(puVar3, param_2);\n        *0x5a1b58 = uStack88;\n        fcn.00401ec0(puVar3, param_2);\n        *0x5a226c = (uStack80 & 1) != 0;\n        *0x5a2269 = (uStack80 >> 1 & 1) != 0;\n        *0x5a226d = (uStack80 >> 9 & 1) != 0;\n        *0x5a226e = (uStack80 >> 0x13 & 1) != 0;\n        *0x5a226f = (uStack80 >> 0x14 & 1) != 0;\n        *0x5a226a = (uStack80 >> 0x17 & 1) != 0;\n        *0x5a2260 = (uStack80 >> 0x19 & 1) != 0;\n        *0x5a2268 = (uStack80 >> 0x1b & 1) != 0;\n        uVar5 = puVar3 & 0xffffffffffffff00 | *0x5a2268;\n        uVar6 = (param_2 & 0xffffff00 | (uStack80 >> 0xc & 1) != 0) & uVar5;\n        arg2 = uVar6;\n        *0x5a2267 = uVar6;\n        if ((uStack80 >> 0x1b & 1) != 0) {\n            fcn.00401ee0(uVar5, arg2);\n        }\n        uVar5 = 0;\n        *0x5a2262 = 0;\n        if (6 < uStack88) {\n            fcn.00401ec0(0, arg2);\n            *0x5a2264 = (uStack84 >> 3 & 1) != 0;\n            uVar5 = uVar5 & 0xffffffffffffff00 | (uStack84 >> 5 & 1) != 0;\n            uVar9 = 0;\n            *0x5a2263 = 0;\n            *0x5a2265 = (uStack84 >> 8 & 1) != 0;\n            *0x5a2266 = (uStack84 >> 9 & 1) != 0;\n            *0x5a2261 = (uStack84 >> 0x13 & 1) != 0;\n            fcn.00401ec0(uVar5, 0);\n            if (uStack88 < 0x80000001) {\n                return;\n            }\n            fcn.00401ec0(uVar5, uVar9);\n            *0x5a226b = (uStack76 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x5a2262 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 3759
    },
    "00403980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403980(uint64_t arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint64_t unaff_RBX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t unaff_RDI;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    uVar7 = *(in_RAX + 8) - arg1;\n    if (uVar7 < unaff_RDI) {\n        unaff_RDI = uVar7;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00403d20(arg1);\n        return;\n    }\n    if (*0x54d5e8 == NULL) {\n        iVar8 = 0;\n        iVar10 = 0;\n    }\n    else {\n        iVar10 = **0x54d5e8;\n        iVar8 = (*0x54d5e8)[1];\n    }\n    for (iVar12 = 0; iVar12 < iVar8; iVar12 = iVar12 + 1) {\n        iVar2 = *(iVar10 + iVar12 * 8);\n        if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) {\n            fcn.00403d20(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n            return;\n        }\n        if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n            fcn.00403d20(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n            return;\n        }\n    }\n    uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        if (*(*(*(*(uVar7 * 8 + 0x573fb0) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99) == '\\x02') {\n            fcn.004571e0();\n            return;\n        }\n        uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar11 = unaff_RBX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x573fb0) + (uVar11 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar11 = 0;\n                uVar13 = 0;\n                puVar14 = NULL;\n                puVar9 = NULL;\n            }\n            else {\n                puVar9 = (unaff_RBX >> 5 & 0x1ffff) + iVar10;\n                uVar13 = unaff_RBX >> 3 & 3;\n                puVar14 = iVar10 + 0x1ffff;\n            }\n            uVar5 = 0;\n            uVar7 = unaff_RBX;\n            do {\n                if (unaff_RDI + arg1 <= uVar5) {\n                    return;\n                }\n                if ((arg1 <= uVar5) && ((*puVar9 >> (uVar13 & 0x1f) & 1) != 0)) {\n                    puVar1 = unaff_RBX + uVar5;\n                    unaff_RBX = uVar7;\n                    cVar4 = fcn.00403580(*puVar1);\n                    if (cVar4 != '\\0') {\n                        fcn.004317e0();\n                        break;\n                    }\n                    uVar11 = uVar11 & 0xffffffff;\n                    uVar7 = unaff_RBX;\n                }\n                if (uVar13 < 3) {\n                    uVar13 = uVar13 + 1;\n                }\n                else if (puVar14 == puVar9) {\n                    uVar6 = uVar11 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar9 = fcn.0040fcc0(uVar11 & 0xffffffff);\n                    uVar11 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar9 = puVar9 + 1;\n                    uVar13 = 0;\n                }\n                uVar5 = uVar5 + 8;\n            } while( true );\n        }\n        fcn.00459a00(0x40);\n    }\n    fcn.00459a00(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1183
    },
    "0040a440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a440(void)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53d064 == 0x10) {\n                if (*0x5a1cd8 != 0) {\n                    if (*0x5a1cd8 < 0x80001) {\n                        if (0xfff < *0x5a1cd8) {\n                            if ((*0x5a1cd8 & *0x5a1cd8 - 1) == 0) {\n                                if ((*0x5a1cd0 & *0x5a1cd0 - 1) == 0) {\n                                    if (0x400000 < *0x5a1cd0) {\n                                        *0x5a1cd0 = 0;\n                                    }\n                                    if (*0x5a1cd0 != 0) {\n                                        while (*0x5a1cd0 != (1 << (*0x5a1cc8 & 0x3f) & -(*0x5a1cc8 < 0x40))) {\n                                            *0x5a1cc8 = *0x5a1cc8 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x28) = 0x40a4f2;\n                                    fcn.004220e0();\n                                    *(*0x20 + -0x28) = 0x40a4f7;\n                                    *0x5a1c90 = fcn.004122a0();\n                                    for (iVar1 = 0; iVar1 < 3; iVar1 = iVar1 + 1) {\n                                    }\n                                    for (iVar1 = 0x7f; -1 < iVar1; iVar1 = iVar1 + -1) {\n                                        *(*0x20 + -0x10) = iVar1;\n                                        *(*0x20 + -0x28) = 0x40a525;\n                                        puVar2 = fcn.00414360();\n                                        iVar1 = *(*0x20 + -0x10);\n                                        *puVar2 = iVar1 << 0x28 | 0xc000000000;\n                                        puVar2[2] = *0x5741d0;\n                                        *0x5741d0 = puVar2;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x28) = 0x40a59d;\n                                fcn.004330a0();\n                                *(*0x20 + -0x28) = 0x40a5ae;\n                                fcn.004339a0();\n                                *(*0x20 + -0x28) = 0x40a5ba;\n                                fcn.004336a0();\n                                *(*0x20 + -0x28) = 0x40a5cb;\n                                fcn.004339a0();\n                                *(*0x20 + -0x28) = 0x40a5d0;\n                                fcn.00433120();\n                                *(*0x20 + -0x28) = 0x40a5e5;\n                                fcn.004317e0();\n                            }\n                            *(*0x20 + -0x28) = 0x40a5ea;\n                            fcn.004330a0();\n                            *(*0x20 + -0x28) = 0x40a5fb;\n                            fcn.004339a0();\n                            *(*0x20 + -0x28) = 0x40a607;\n                            fcn.004336a0();\n                            *(*0x20 + -0x28) = 0x40a618;\n                            fcn.004339a0();\n                            *(*0x20 + -0x28) = 0x40a61d;\n                            fcn.00433120();\n                            *(*0x20 + -0x28) = 0x40a62e;\n                            fcn.004317e0();\n                        }\n                        *(*0x20 + -0x28) = 0x40a633;\n                        fcn.004330a0();\n                        *(*0x20 + -0x28) = 0x40a645;\n                        fcn.004339a0();\n                        *(*0x20 + -0x28) = 0x40a651;\n                        fcn.004336a0();\n                        *(*0x20 + -0x28) = 0x40a665;\n                        fcn.004339a0();\n                        *(*0x20 + -0x28) = 0x40a66f;\n                        fcn.004337a0();\n                        *(*0x20 + -0x28) = 0x40a685;\n                        fcn.004339a0();\n                        *(*0x20 + -0x28) = 0x40a68a;\n                        fcn.00433120();\n                        *(*0x20 + -0x28) = 0x40a69b;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x28) = 0x40a6a5;\n                    fcn.004330a0();\n                    *(*0x20 + -0x28) = 0x40a6b6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x28) = 0x40a6c5;\n                    fcn.004336a0();\n                    *(*0x20 + -0x28) = 0x40a6d6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x28) = 0x40a6e5;\n                    fcn.004337a0();\n                    *(*0x20 + -0x28) = 0x40a6f6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x28) = 0x40a6fb;\n                    fcn.00433120();\n                    *(*0x20 + -0x28) = 0x40a70c;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x28) = 0x40a71d;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x28) = 0x40a72e;\n            fcn.004317e0();\n        }\n        *(puVar3 + -8) = 0x40a734;\n        fcn.00457320();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1548
    },
    "0040cba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040cba0(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.004318e0();\n        }\n        uVar3 = (***(in_RAX + 0x48))(arg1);\n        uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar7 = uVar7 >> 1;\n            }\n            iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n            if (2 < *(iVar1 + iVar8) - 2U) {\n                iVar5 = iVar1 + iVar8;\n            }\n        }\n        uVar4 = uVar3 >> 0x38;\n        uVar7 = uVar4;\n        if (uVar3 >> 0x38 < 5) {\n            uVar4 = (uVar3 >> 0x38) + 5;\n            uVar7 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x5a2ca0;\n            }\n            for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n                if (uVar4 == *(uVar3 + iVar5)) {\n                    piVar6 = *(in_RAX + 0x50) * uVar3 + iVar5 + 8;\n                    if ((*(in_RAX + 0x54) & 1) != 0) {\n                        piVar6 = *piVar6;\n                    }\n                    cVar2 = (***(*(in_RAX + 0x30) + 0x18))(piVar6);\n                    if (cVar2 != '\\0') {\n                        piVar6 = iVar5 + *(in_RAX + 0x51) * uVar3 + *(in_RAX + 0x50) * 8 + 8;\n                        if ((*(in_RAX + 0x54) >> 1 & 1) != 0) {\n                            piVar6 = *piVar6;\n                        }\n                        return piVar6;\n                    }\n                    uVar4 = uVar7 & 0xff;\n                }\n                else if (*(uVar3 + iVar5) == '\\0') {\n                    return 0x5a2ca0;\n                }\n            }\n            iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n        (***(in_RAX + 0x48))();\n    }\n    return 0x5a2ca0;\n}\n",
        "token_count": 846
    },
    "0040d600": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d600(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *arg1_01;\n    int64_t **arg1_02;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040db6a:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40db7e;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + -0x90) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_02 = pcVar6 + 8;\n            arg1_01 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar3 = pcVar6[iVar8];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_02;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_02;\n                        }\n                        *(*0x20 + -0x88) = iVar8;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_02;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40d85d;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x80) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40d8a2;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar8 = *(*0x20 + -0x88);\n                            arg1_01 = *(*0x20 + -0x58);\n                            arg1_02 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar8] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar7 = bVar10 * 0x20;\n                            *(*0x20 + -0x78) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40d985;\n                                iVar8 = fcn.0040c3e0(arg1_00);\n                                iVar7 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40da65;\n                                fcn.0040f460(arg1_02);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar7 + -0x38);\n                                if (*0x5a1da0 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40da45;\n                                    in_RAX = fcn.004596a0(arg1, arg2, arg3, iVar7);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40daef;\n                                fcn.0040f460(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar8 = *(*0x20 + -0x88);\n                                iVar7 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x58);\n                                arg1_02 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar7 + -0x30);\n                                if (*0x5a1da0 == 0) {\n                                    *arg3_00 = *arg1_01;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40dad0;\n                                    in_RAX = fcn.004596a0(arg1, arg2, arg3_00, iVar7);\n                                }\n                            }\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            uVar4 = arg1 & 0xffffffff;\n                            iVar7 = *(*0x20 + -0x90);\n                            goto code_r0x0040d7d3;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40db58;\n                        fcn.004599e0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40db69;\n                    in_RAX = fcn.004317e0();\n                    goto code_r0x0040db6a;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040d7d3:\n                arg1_02 = arg1_02 + *(in_RAX + 0x50);\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40d7b4;\n            fcn.0040f760(uVar1 * arg2 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x90);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40d739;\n        fcn.0040dba0(iVar7, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 3304
    },
    "0040dba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dba0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint32_t uVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(in_RAX + 0x20);\n    *(in_RAX + 0x20) = iVar1 + 1;\n    arg2 = iVar1 + 0x401;\n    if (arg1 < arg2) {\n        arg2 = arg1;\n    }\n    while ((uVar2 = *(in_RAX + 0x20),  uVar2 != arg2 &&\n           (uVar3 = *(*(unaff_RBX + 0x52) * uVar2 + *(in_RAX + 0x18)) - 2,  arg3 = uVar3,  uVar3 < 3))) {\n        *(in_RAX + 0x20) = uVar2 + 1;\n    }\n    if (arg1 == uVar2) {\n        if (*0x5a1da0 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.00459640(0, arg2, arg3, in_R9);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x5a1da0 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.00459640(0, arg2, arg3, in_R9);\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "0040dca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040dca0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.004318e0();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x5a2ca0;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + iVar3 + 0x28;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(iVar3 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    return 0x5a2ca0;\n}\n",
        "token_count": 587
    },
    "0040de40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040de40(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.004318e0();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x5a2ca0;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + iVar3 + 0x28;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(iVar3 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    return 0x5a2ca0;\n}\n",
        "token_count": 586
    },
    "0040e3c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e3c0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    char *pcVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint *puVar9;\n    char *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040e74b:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40e75f;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *pcVar5 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x28;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x28;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + -0x80) = iVar7;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        arg1 = uVar6;\n        for (; pcVar5 != NULL; pcVar5 = *(pcVar5 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar5;\n            puVar9 = pcVar5 + 8;\n            arg1_01 = pcVar5 + 0x28;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar5[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40e5e2;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar5[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40e665;\n                                iVar8 = fcn.0040c3e0(arg1_00);\n                                iVar7 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x28;\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar7 + -0x38) = *puVar9;\n                            *(*0x20 + -0xa8) = 0x40e6d6;\n                            fcn.0040f460(arg1_01);\n                            iVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar8 = *(*0x20 + -0x78);\n                            goto code_r0x0040e569;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40e739;\n                        fcn.004599e0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40e74a;\n                    in_RAX = fcn.004317e0();\n                    goto code_r0x0040e74b;\n                }\n                pcVar5[iVar8] = '\\x04';\ncode_r0x0040e569:\n                puVar9 = puVar9 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40e54a;\n            fcn.0040f760(uVar1 * uVar3 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            uVar3 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40e4d9;\n        fcn.0040dba0(iVar7, in_RAX, iVar7);\n    }\n    return;\n}\n",
        "token_count": 2278
    },
    "0040e780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040e780(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *unaff_RBX;\n    int32_t *unaff_RDI;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0x5a2ca0;\n    }\n    if ((*(unaff_RBX + 1) & 4) != 0) {\n        fcn.004318e0();\n    }\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040e82d:\n        uVar8 = (***(in_RAX + 0x48))();\n        uVar6 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar6 & uVar8) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar6 = uVar6 >> 1;\n            }\n            iVar9 = *(in_RAX + 0x52) * (uVar6 & uVar8);\n            if (2 < *(iVar1 + iVar9) - 2U) {\n                iVar5 = iVar1 + iVar9;\n            }\n        }\n        uVar4 = uVar8 >> 0x38;\n        uVar6 = uVar4;\n        if (uVar8 >> 0x38 < 5) {\n            uVar4 = (uVar8 >> 0x38) + 5;\n            uVar6 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x5a2ca0;\n            }\n            ppiVar7 = iVar5 + 8;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if ((ppiVar7[1] == unaff_RDI) && (*(uVar8 + iVar5) == uVar4)) {\n                    if ((arg1 == *ppiVar7) || (cVar3 = fcn.004025a0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                        return iVar5 + uVar8 * *(in_RAX + 0x51) + 0x88;\n                    }\n                    uVar4 = uVar6 & 0xff;\n                }\n                ppiVar7 = ppiVar7 + 2;\n            }\n            iVar5 = *(iVar5 + *(in_RAX + 0x52) + -8);\n        } while( true );\n    }\n    iVar1 = unaff_RBX[2];\n    if (unaff_RDI < 0x20) {\n        ppiVar7 = iVar1 + 8;\n        uVar6 = 0;\n        do {\n            if (7 < uVar6) {\n                return 0x5a2ca0;\n            }\n            if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar6 + iVar1))) {\n                if ((arg1 == *ppiVar7) || (cVar3 = fcn.004025a0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                    return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n                }\n            }\n            else if (*(uVar6 + iVar1) == '\\0') {\n                return 0x5a2ca0;\n            }\n            uVar6 = uVar6 + 1;\n            ppiVar7 = ppiVar7 + 2;\n        } while( true );\n    }\n    ppiVar7 = iVar1 + 8;\n    uVar6 = 8;\n    for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n        if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar8 + iVar1))) {\n            piVar2 = *ppiVar7;\n            if (arg1 == piVar2) {\n                return uVar8 * *(in_RAX + 0x51) + iVar1 + 0x88;\n            }\n            if (((*piVar2 == *arg1) && (*(piVar2 + unaff_RDI + -4) == *(arg1 + unaff_RDI + -4))) &&\n               (bVar10 = uVar6 != 8,  uVar6 = uVar8,  bVar10)) goto code_r0x0040e82d;\n        }\n        else if (*(uVar8 + iVar1) == '\\0') break;\n        ppiVar7 = ppiVar7 + 2;\n    }\n    if ((uVar6 != 8) && (cVar3 = fcn.004025a0(unaff_RDI, uVar8),  cVar3 != '\\0')) {\n        return iVar1 + uVar6 * *(in_RAX + 0x51) + 0x88;\n    }\n    return 0x5a2ca0;\n}\n",
        "token_count": 1308
    },
    "0040f040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f040(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *arg4;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f41b:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40f42f;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar7 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar7 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar4;\n        *(*0x20 + -0x80) = iVar7;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            puVar9 = pcVar6 + 8;\n            arg1_00 = pcVar6 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar6[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = puVar9;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40f262;\n                            uVar4 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar4 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x70);\n                            iVar8 = *(*0x20 + -0x78);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar6[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar7 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar7;\n                            if (*(*0x20 + iVar7 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar7 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f2e6;\n                                iVar8 = fcn.0040c3e0(uVar3);\n                                iVar7 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar7 + -0x48) = iVar8;\n                                *(*0x20 + iVar7 + -0x40) = 0;\n                                *(*0x20 + iVar7 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar7 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x70);\n                                puVar9 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar7 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar7 + -0x48) + (*(*0x20 + iVar7 + -0x40) & 7)) = uVar10;\n                            arg4 = *(*0x20 + iVar7 + -0x38);\n                            uVar3 = *puVar9;\n                            arg4[1] = puVar9[1];\n                            if (*0x5a1da0 == 0) {\n                                *arg4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x40f38d;\n                                fcn.004596c0(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x40f3a5;\n                            fcn.0040f460(arg1_00);\n                            iVar7 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar7 + -0x40) = *(*0x20 + iVar7 + -0x40) + 1;\n                            *(*0x20 + iVar7 + -0x38) = *(*0x20 + iVar7 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar7 + -0x30) = *(*0x20 + iVar7 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar6 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar4 = *(*0x20 + -0x81);\n                            iVar7 = *(*0x20 + -0x80);\n                            puVar9 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040f1f3;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40f409;\n                        fcn.004599e0(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40f41a;\n                    in_RAX = fcn.004317e0();\n                    goto code_r0x0040f41b;\n                }\n                pcVar6[iVar8] = '\\x04';\ncode_r0x0040f1f3:\n                puVar9 = puVar9 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar7 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40f1d4;\n            fcn.0040f760(uVar1 * arg2 + iVar7 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar7 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40f15f;\n        fcn.0040dba0(iVar7, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 2448
    },
    "0040fee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fee0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    uint64_t unaff_RBX;\n    int64_t iVar12;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    int64_t iVar15;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) == 0) {\n        if (*0x5a1da4 == '\\0') {\n            return;\n        }\n        uVar6 = in_RAX + 0x800000000000 >> 0x16;\n        uVar10 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar10 < 0x40) {\n            iVar12 = *(uVar10 * 8 + 0x573fb0);\n            if (iVar12 == 0) {\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = *(iVar12 + (uVar6 & 0xfffff) * 8);\n                if (iVar12 == 0) {\n                    iVar12 = 0;\n                }\n                else {\n                    iVar12 = *(iVar12 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                }\n            }\n        }\n        else {\n            iVar12 = 0;\n        }\n        if (iVar12 == 0) {\n            if (*0x54d5e8 == NULL) {\n                iVar15 = 0;\n                iVar12 = 0;\n            }\n            else {\n                iVar12 = **0x54d5e8;\n                iVar15 = (*0x54d5e8)[1];\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (iVar15 <= iVar7) {\n                    if (*0x54d5e8 == NULL) {\n                        iVar15 = 0;\n                        iVar12 = 0;\n                    }\n                    else {\n                        iVar12 = **0x54d5e8;\n                        iVar15 = (*0x54d5e8)[1];\n                    }\n                    iVar7 = 0;\n                    while( true ) {\n                        if (iVar15 <= iVar7) {\n                            return;\n                        }\n                        iVar2 = *(iVar12 + iVar7 * 8);\n                        if ((*(iVar2 + 0xe0) <= in_RAX) &&\n                           (puVar1 = iVar2 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n                        iVar7 = iVar7 + 1;\n                    }\n                    fcn.00410560(arg1);\n                    return;\n                }\n                iVar2 = *(iVar12 + iVar7 * 8);\n                if ((*(iVar2 + 0xd0) <= in_RAX) && (puVar1 = iVar2 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar7 = iVar7 + 1;\n            }\n            fcn.00410560(arg1);\n            return;\n        }\n        if (((*(iVar12 + 99) != '\\x01') || (in_RAX <= *(iVar12 + 0x18) && *(iVar12 + 0x18) != in_RAX)) ||\n           (*(iVar12 + 0x70) < in_RAX || *(iVar12 + 0x70) == in_RAX)) {\n            return;\n        }\n        iVar12 = *(*(unaff_R14 + 0x30) + 0xa0);\n        if (uVar10 < 0x40) {\n            iVar15 = *(*(uVar10 * 8 + 0x573fb0) + (uVar6 & 0xfffff) * 8);\n            if (iVar15 == 0) {\n                uVar6 = 0;\n                uVar13 = 0;\n                puVar11 = NULL;\n                puVar14 = NULL;\n            }\n            else {\n                puVar14 = iVar15 + (in_RAX >> 5 & 0x1ffff);\n                uVar13 = in_RAX >> 3 & 3;\n                puVar11 = iVar15 + 0x1ffff;\n            }\n            if (unaff_RBX == 0) {\n                for (uVar10 = 0; uVar10 < arg1; uVar10 = uVar10 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1268);\n                        *puVar4 = *(uVar10 + in_RAX);\n                        puVar4[1] = 0;\n                        iVar15 = *(iVar12 + 0x1268) + 0x10;\n                        *(iVar12 + 0x1268) = iVar15;\n                        if (*(iVar12 + 0x1270) == iVar15) {\n                            fcn.0042b040();\n                            uVar6 = uVar6 & 0xffffffff;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        puVar14 = fcn.0040fcc0(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            else {\n                uVar10 = unaff_RBX;\n                for (uVar8 = 0; uVar8 < arg1; uVar8 = uVar8 + 8) {\n                    if ((*puVar14 >> (uVar13 & 0x1f) & 1) != 0) {\n                        puVar4 = *(iVar12 + 0x1268);\n                        uVar3 = *(uVar8 + unaff_RBX);\n                        *puVar4 = *(uVar8 + in_RAX);\n                        puVar4[1] = uVar3;\n                        iVar15 = *(iVar12 + 0x1268) + 0x10;\n                        *(iVar12 + 0x1268) = iVar15;\n                        if (*(iVar12 + 0x1270) == iVar15) {\n                            unaff_RBX = uVar10;\n                            fcn.0042b040();\n                            uVar6 = uVar6 & 0xffffffff;\n                            uVar10 = unaff_RBX;\n                        }\n                    }\n                    if (uVar13 < 3) {\n                        uVar13 = uVar13 + 1;\n                    }\n                    else if (puVar11 == puVar14) {\n                        uVar9 = uVar6 & 0xffffffff;\n                        unaff_RBX = uVar10;\n                        puVar14 = fcn.0040fcc0(uVar6 & 0xffffffff);\n                        uVar6 = uVar9;\n                        uVar10 = unaff_RBX;\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                        uVar13 = 0;\n                    }\n                }\n            }\n            return;\n        }\n        fcn.00459a00(0x40);\n    }\n    fcn.004317e0();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 1722
    },
    "00410360": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410360(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int64_t unaff_R14;\n    \n    if (((unaff_RBX | in_RAX | arg1) & 7) == 0) {\n        if (*0x5a1da4 == '\\0') {\n            return;\n        }\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n        if (uVar7 < 0x40) {\n            uVar9 = in_RAX + 0x800000000000 >> 0x16;\n            iVar10 = *(*(uVar7 * 8 + 0x573fb0) + (uVar9 & 0xfffff) * 8);\n            if (iVar10 == 0) {\n                uVar9 = 0;\n                uVar11 = 0;\n                puVar8 = NULL;\n                puVar12 = NULL;\n            }\n            else {\n                puVar12 = iVar10 + (in_RAX >> 5 & 0x1ffff);\n                uVar11 = in_RAX >> 3 & 3;\n                puVar8 = iVar10 + 0x1ffff;\n            }\n            uVar7 = unaff_RBX;\n            for (uVar5 = 0; uVar5 < arg1; uVar5 = uVar5 + 8) {\n                if ((*puVar12 >> (uVar11 & 0x1f) & 1) != 0) {\n                    puVar2 = *(iVar1 + 0x1268);\n                    uVar3 = *(uVar5 + unaff_RBX);\n                    *puVar2 = 0;\n                    puVar2[1] = uVar3;\n                    iVar10 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar10;\n                    if (*(iVar1 + 0x1270) == iVar10) {\n                        unaff_RBX = uVar7;\n                        fcn.0042b040();\n                        uVar9 = uVar9 & 0xffffffff;\n                        uVar7 = unaff_RBX;\n                    }\n                }\n                if (uVar11 < 3) {\n                    uVar11 = uVar11 + 1;\n                }\n                else if (puVar8 == puVar12) {\n                    uVar6 = uVar9 & 0xffffffff;\n                    unaff_RBX = uVar7;\n                    puVar12 = fcn.0040fcc0(uVar9 & 0xffffffff);\n                    uVar9 = uVar6;\n                    uVar7 = unaff_RBX;\n                }\n                else {\n                    puVar12 = puVar12 + 1;\n                    uVar11 = 0;\n                }\n            }\n            return;\n        }\n        fcn.00459a00(0x40);\n    }\n    fcn.004317e0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 784
    },
    "00410aa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410aa0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    ulong uVar3;\n    int8_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t *puVar8;\n    uint64_t *unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar15;\n    uint8_t uVar16;\n    uint8_t uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    uint8_t *puVar22;\n    uint8_t *puVar23;\n    int64_t unaff_R14;\n    uint8_t *puVar24;\n    uint64_t uVar25;\n    bool bVar26;\n    uint32_t uVar14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa0 && *0x20 + -0xa0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x120;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            uVar5 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar5 < 0x40) {\n                puVar23 = in_RAX + 0x800000000000 >> 0x16;\n                uVar18 = puVar23 & 0xfffff;\n                iVar19 = *(*(uVar5 * 8 + 0x573fb0) + uVar18 * 8);\n                if (iVar19 == 0) {\n                    puVar2 = NULL;\n                    uVar11 = 0;\n                    puVar24 = NULL;\n                    puVar22 = NULL;\n                }\n                else {\n                    puVar2 = iVar19 + (in_RAX >> 5 & 0x1ffff);\n                    uVar11 = in_RAX >> 3 & 3;\n                    puVar24 = iVar19 + 0x1ffff;\n                    puVar22 = puVar23;\n                }\n                puVar8 = unaff_RDI[4];\n                uVar10 = uVar11;\n                if (unaff_RBX == 0x10) {\n                    iVar4 = uVar11;\n                    if (*unaff_RDI != 8) {\n                        *puVar2 = ~(0x33 << iVar4 & -(uVar10 < 0x20)) & *puVar2 |\n                                  (*puVar8 & 3 |\n                                  (-(unaff_RDI[1] >> 3 < 0x20) & 0x10 << (unaff_RDI[1] >> 3 & 0x1f)) - 1 & 0xf0) <<\n                                  iVar4 & -(uVar10 < 0x20);\n                        return;\n                    }\n                    *puVar2 = *puVar2 | 0x33 << iVar4 & -(uVar10 < 0x20);\n                    return;\n                }\n                if (unaff_RBX == 0x18) {\n                    uVar12 = *puVar8;\n                    if (*unaff_RDI == 8) {\n                        uVar12 = 7;\n                    }\n                    uVar12 = (uVar12 & 7) << 4 | uVar12 & 7;\n                    uVar14 = (uVar12 & 0x40) >> 1;\n                    uVar13 = uVar14 | uVar12;\n                    uVar15 = uVar13 | 0x10;\n                    uVar17 = uVar15;\n                    if (uVar10 < 2) {\n                        if (uVar10 == 0) {\n                            *puVar2 = *puVar2 & 0x88 | uVar13 | 0x10;\n                        }\n                        else {\n                            *puVar2 = uVar15 << 1 | *puVar2 & 0x11;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0xdb) = uVar17;\n                        if (uVar10 == 2) {\n                            *puVar2 = (uVar14 | uVar12 & 0x33 | 0x10) << 2 | *puVar2 & 0x33;\n                            if (puVar2 == puVar24) {\n                                *(*0x20 + -0x128) = 0x410d94;\n                                puVar2 = fcn.0040fcc0(puVar22 & 0xffffffff);\n                                uVar17 = *(*0x20 + -0xdb);\n                            }\n                            else {\n                                puVar2 = puVar2 + 1;\n                            }\n                            *puVar2 = uVar17 >> 2 & 0x11 | *puVar2 & 0xee;\n                        }\n                        else if (uVar10 == 3) {\n                            *puVar2 = *puVar2 & 0x77 | (uVar12 & 0x11 | 0x10) << 3;\n                            if (puVar2 == puVar24) {\n                                *(*0x20 + -0x128) = 0x410deb;\n                                puVar2 = fcn.0040fcc0(puVar22 & 0xffffffff);\n                                uVar17 = *(*0x20 + -0xdb);\n                            }\n                            else {\n                                puVar2 = puVar2 + 1;\n                            }\n                            *puVar2 = uVar17 >> 1 & 0x33 | *puVar2 & 0xcc;\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0xd0) = uVar18;\n                *(*0x20 + -0x30) = puVar2;\n                uVar18 = puVar22 & 0xffffffff;\n                uVar6 = in_RAX + unaff_RBX + 0x7fffffffffff >> 0x16;\n                puVar2 = in_RAX;\n                if (uVar18 == uVar6) {\n                    puVar2 = *(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = uVar18;\n                *(*0x20 + -0x68) = uVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x70) = puVar23;\n                if ((*(unaff_RDI + 0x17) & 0x40) == 0) {\n                    *(*0x20 + -0x38) = puVar2;\n                    uVar5 = *unaff_RDI;\n                    puVar22 = puVar8;\n                    if (arg1 <= uVar5) {\n                        uVar3 = 0;\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                        *(*0x20 + -0xa8) = 0;\n                        goto code_r0x00411125;\n                    }\n                    *(*0x20 + -0x78) = uVar5;\n                    uVar25 = unaff_RDI[1] >> 3;\n                    if (uVar25 < 0x3a) {\n                        *(*0x20 + 0x18) = arg1;\n                        *(*0x20 + -0xb0) = 0;\n                        *(*0x20 + -0x98) = 0;\n                        puVar23 = puVar8;\n                        while (uVar21 = *(*0x20 + -0xb0),  uVar21 < uVar25) {\n                            uVar17 = *puVar23;\n                            puVar23 = puVar23 + 1;\n                            uVar18 = *(*0x20 + -0x60);\n                            *(*0x20 + -0xb0) = uVar21 + 8;\n                            *(*0x20 + -0x98) = *(*0x20 + -0x98) | uVar17 << (uVar21 & 0x3f) & -(uVar21 < 0x40);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar6 = *(*0x20 + -0x58);\n                        }\n                        uVar5 = uVar5 >> 3;\n                        if (uVar5 * 2 < 0x3a) {\n                            uVar25 = *(*0x20 + -0x98);\n                            for (uVar6 = uVar5; uVar6 < 0x41; uVar6 = uVar6 * 2) {\n                                *(*0x20 + -0xc0) = uVar25;\n                                uVar25 = uVar25 << (uVar6 & 0x3f) & -(uVar6 < 0x40) | *(*0x20 + -0xc0);\n                                arg1 = *(*0x20 + 0x18);\n                            }\n                            if (uVar5 == '\\0') {\n                                *(*0x20 + -0x128) = 0x41168a;\n                                fcn.0042fe00();\n                                goto code_r0x0041168a;\n                            }\n                            *(*0x20 + -0xda) = uVar5 & 0xff;\n                            uVar5 = uVar5 * (0x39 / *(*0x20 + -0xda));\n                            uVar25 = uVar25 & (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n                            uVar6 = *(*0x20 + -0x58);\n                            puVar2 = *(*0x20 + -0x38);\n                        }\n                        else {\n                            uVar25 = *(*0x20 + -0x98);\n                        }\n                        *(*0x20 + -0xb8) = uVar5;\n                        puVar23 = NULL;\n                        *(*0x20 + -0xc0) = uVar25;\n                        puVar22 = NULL;\n                    }\n                    else {\n                        uVar25 = uVar25 + 7 >> 3;\n                        uVar5 = (uVar5 >> 3) + (uVar25 - 1) * -8;\n                        puVar23 = puVar8 + (uVar25 - 1);\n                        *(*0x20 + -0xb8) = 0;\n                        *(*0x20 + -0xc0) = 0;\n                    }\n                    break;\n                }\n                uVar5 = unaff_RDI[1];\n                uVar18 = *unaff_RDI;\n                *(*0x20 + -0x128) = 0x410cd0;\n                fcn.004116e0(puVar22 & 0xffffffff, uVar5, uVar18, arg1);\n                bVar26 = *(*0x20 + -0x60) == *(*0x20 + -0x58);\n                goto code_r0x00410eb7;\n            }\ncode_r0x0041168a:\n            arg1 = 0x40;\n            *(*0x20 + -0x128) = 0x411697;\n            in_RAX = fcn.00459a00(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x4116b1;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\ncode_r0x0041150a:\n    *(*0x20 + -0x28) = puVar23;\n    *(*0x20 + -0xa8) = uVar5;\n    puVar23 = *(*0x20 + -0x70);\n    uVar5 = *(*0x20 + -0x78);\n    uVar3 = *(*0x20 + -0xb8);\ncode_r0x00411125:\n    if (puVar22 == NULL) {\n        puVar24 = *(*0x20 + -0xc0);\n        *(*0x20 + -0xb8) = uVar3;\n        puVar23 = *(*0x20 + -0x70);\n    }\n    else {\n        puVar24 = *puVar22;\n        puVar22 = puVar22 + 1;\n        *(*0x20 + -0x90) = puVar2;\n        *(*0x20 + -0xb8) = 8;\n        puVar2 = *(*0x20 + -0x90);\n    }\n    if (arg1 == uVar5) {\n        uVar5 = unaff_RDI[1];\ncode_r0x004111a4:\n        uVar5 = uVar5 >> 3;\n        if (uVar5 != 0) {\n            if (uVar11 == 0) {\n                uVar17 = puVar24 & 0xf | 0xf0;\n                if (4 < uVar5) {\n                    *puVar2 = uVar17;\n                    iVar1 = 4;\n                    iVar19 = *(*0x20 + -0xb8) + -4;\n                    uVar25 = 4;\n                    goto code_r0x00411269;\n                }\n                puVar23 = puVar2;\n                uVar11 = 4;\n                goto code_r0x004113f6;\n            }\n            if (uVar11 == 2) goto code_r0x004111f9;\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x128) = 0x41149e;\n            fcn.004317e0();\n        }\n        *(*0x20 + -0x128) = 0x4114a6;\n        uVar3 = fcn.00452a40();\n        *(*0x20 + -0x18) = uVar3;\n        *(*0x20 + -0x88) = unaff_RBX;\n        *(*0x20 + -0x128) = 0x4114bb;\n        fcn.004330a0();\n        *(*0x20 + -0x128) = 0x4114cc;\n        fcn.004339a0();\n        *(*0x20 + -0x128) = 0x4114e5;\n        fcn.004339a0();\n        *(*0x20 + -0x128) = 0x4114ea;\n        fcn.00433300();\n        *(*0x20 + -0x128) = 0x4114ef;\n        fcn.00433120();\n        unaff_RBX = 0x2d;\n        *(*0x20 + -0x128) = 0x411505;\n        fcn.004317e0();\n    }\n    else if (uVar5 != 0) {\n        uVar5 = uVar5 * (arg1 / uVar5 - 1) + unaff_RDI[1];\n        puVar2 = *(*0x20 + -0x38);\n        arg1 = uVar6;\n        goto code_r0x004111a4;\n    }\n    puVar8 = puVar22;\n    *(*0x20 + -0x128) = 0x41150a;\n    puVar2 = fcn.0042fe00();\n    puVar22 = puVar24;\n    goto code_r0x0041150a;\ncode_r0x004111f9:\n    uVar17 = (puVar24 & 3) << 2;\n    uVar16 = uVar17 | 0x40;\n    if (1 < uVar5) {\n        uVar16 = uVar17 | 0xc0;\n    }\n    *puVar2 = uVar16 | *puVar2 & 0x33;\n    puVar23 = puVar2 + 1;\n    if (uVar5 < 3) {\n        uVar17 = 0;\n        uVar11 = 6;\n    }\n    else {\n        iVar1 = 2;\n        iVar19 = *(*0x20 + -0xb8) + -2;\n        uVar25 = 2;\ncode_r0x00411269:\n        puVar23 = puVar2 + 1;\n        uVar11 = puVar24 >> iVar1;\n        iVar9 = *(*0x20 + -0xc0);\n        uVar21 = iVar19 - 4;\n        while( true ) {\n            *(*0x20 + -0x98) = uVar11;\n            uVar17 = uVar11 & 0xf | 0xf0;\n            uVar11 = uVar25 + 4;\n            if (uVar5 <= uVar25 + 4) break;\n            *puVar23 = uVar17;\n            uVar11 = *(*0x20 + -0x98) >> 4;\n            uVar17 = uVar21;\n            if (puVar22 == *(*0x20 + -0x28)) {\n                if (puVar22 == NULL) {\n                    if (uVar21 < 8) {\n                        uVar11 = uVar11 | iVar9 << (uVar17 & 0x3f);\n                        uVar21 = uVar21 + *(*0x20 + -0xa8);\n                        iVar9 = *(*0x20 + -0xc0);\n                    }\n                    uVar20 = uVar21 - 8;\n                }\n                else {\n                    uVar11 = uVar11 | -(uVar21 < 0x40) & *puVar22 << (uVar17 & 0x3f);\n                    uVar20 = uVar21 + *(*0x20 + -0xa8);\n                    if (uVar20 < 8) {\n                        uVar11 = uVar11 | *puVar8 << (uVar20 & 0x3f);\n                        puVar22 = puVar8 + 1;\n                    }\n                    else {\n                        uVar20 = (uVar21 + *(*0x20 + -0xa8)) - 8;\n                        puVar22 = puVar8;\n                    }\n                }\n            }\n            else if (uVar21 < 8) {\n                uVar11 = uVar11 | *puVar22 << (uVar17 & 0x3f);\n                uVar20 = uVar21;\n                puVar22 = puVar22 + 1;\n            }\n            else {\n                uVar20 = uVar21 - 8;\n            }\n            *(*0x20 + -0x98) = uVar11;\n            uVar17 = uVar11 & 0xf | 0xf0;\n            uVar25 = uVar25 + 8;\n            if (uVar5 <= uVar25) {\n                puVar23 = puVar23 + 1;\n                uVar6 = *(*0x20 + -0x58);\n                uVar11 = uVar25;\n                break;\n            }\n            puVar23[1] = uVar17;\n            uVar11 = *(*0x20 + -0x98) >> 4;\n            puVar23 = puVar23 + 2;\n            uVar6 = *(*0x20 + -0x58);\n            uVar21 = uVar20;\n        }\n    }\ncode_r0x004113f6:\n    if (uVar5 < uVar11) {\n        uVar5 = -((uVar11 - uVar5) + -4);\n        uVar16 = (1 << (uVar5 & 0x3f) & -(uVar5 < 0x40)) - 1;\n        uVar17 = uVar17 & (uVar16 * '\\x10' | uVar16);\n    }\n    uVar5 = unaff_RBX >> 3;\n    if (uVar11 <= uVar5) {\n        *puVar23 = uVar17;\n        while( true ) {\n            puVar23 = puVar23 + 1;\n            uVar11 = uVar11 + 4;\n            if (uVar5 < uVar11) break;\n            *puVar23 = 0;\n        }\n        uVar17 = 0;\n    }\n    if (uVar11 == uVar5 + 2) {\n        *puVar23 = uVar17 | *puVar23 & 0xcc;\n        bVar26 = uVar18 == uVar6;\n    }\n    else {\n        bVar26 = uVar18 == uVar6;\n    }\ncode_r0x00410eb7:\n    if (!bVar26) {\n        iVar19 = *(*(*(*0x20 + -0x68) * 8 + 0x573fb0) + *(*0x20 + -0xd0) * 8);\n        if (iVar19 == 0) {\n            puVar2 = *(*0x20 + -0x50);\n            puVar23 = NULL;\n            puVar22 = NULL;\n            uVar5 = 0;\n            uVar10 = 0;\n        }\n        else {\n            puVar2 = *(*0x20 + -0x50);\n            puVar23 = iVar19 + (puVar2 >> 5 & 0x1ffff);\n            uVar10 = puVar2 >> 3 & 3;\n            puVar22 = iVar19 + 0x1ffff;\n            uVar5 = *(*0x20 + -0x70);\n        }\n        uVar18 = *(*0x20 + 0x10) >> 3;\n        puVar24 = puVar2;\n        if (uVar10 == 2) {\n            *puVar23 = *puVar2 | *puVar23 & 0x33;\n            if (puVar22 == puVar23) {\n                *(*0x20 + -0x10) = puVar2;\n                *(*0x20 + -0x80) = uVar18;\n                uVar10 = 3;\n                *(*0x20 + -0x128) = 0x410f86;\n                puVar23 = fcn.0040fcc0(uVar5);\n                uVar18 = *(*0x20 + -0x80);\n                puVar24 = *(*0x20 + -0x50);\n                puVar2 = *(*0x20 + -0x10);\n            }\n            else {\n                puVar23 = puVar23 + 1;\n                uVar10 = 0;\n            }\n            uVar18 = uVar18 - 2;\n            puVar2 = puVar2 + 1;\n        }\n        while (*(*0x20 + -0x48) = puVar2,  3 < uVar18) {\n            *(*0x20 + -0x40) = puVar23;\n            *(*0x20 + -0xa0) = uVar18;\n            *(*0x20 + -0x128) = 0x410ff1;\n            uVar3 = fcn.0040fe40(uVar5);\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0xd4) = uVar10;\n            *(*0x20 + -0xd8) = uVar5;\n            *(*0x20 + -0x20) = puVar22;\n            *(*0x20 + -200) = uVar18 & 0xfffffffffffffffc;\n            *(*0x20 + -0x58) = uVar18 >> 2;\n            *(*0x20 + -0x128) = 0x411032;\n            fcn.0045a340(uVar18 >> 2);\n            puVar2 = *(*0x20 + -0x48) + *(*0x20 + -0x58);\n            puVar23 = *(*0x20 + -0x18);\n            uVar10 = *(*0x20 + -0xd4);\n            puVar22 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0xd8);\n            puVar24 = *(*0x20 + -0x50);\n            uVar18 = *(*0x20 + -0xa0) - *(*0x20 + -200);\n        }\n        if (uVar18 == 2) {\n            *puVar23 = *puVar2 | *puVar23 & 0xcc;\n            if (uVar10 < 3) {\n                uVar10 = uVar10 + 1;\n            }\n            else if (puVar22 == puVar23) {\n                *(*0x20 + -0x128) = 0x4110c5;\n                puVar23 = fcn.0040fcc0(uVar5);\n                puVar24 = *(*0x20 + -0x50);\n            }\n            else {\n                puVar23 = puVar23 + 1;\n                uVar10 = 0;\n            }\n            if ((2 < uVar10) && (puVar23 == puVar22)) {\n                *(*0x20 + -0x128) = 0x4110f7;\n                fcn.0040fcc0(uVar5);\n                puVar24 = *(*0x20 + -0x50);\n            }\n        }\n        *(*0x20 + -0x128) = 0x41111b;\n        fcn.0045a040(puVar24);\n    }\n    return;\n}\n",
        "token_count": 5766
    },
    "00415780": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415cca)\n// WARNING: Removing unreachable block (ram,0x004157c5)\n// WARNING: Removing unreachable block (ram,0x004157e3)\n// WARNING: Removing unreachable block (ram,0x00415cf5)\n\nvoid fcn.00415780(ulong param_1, uint64_t param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5a1b84 = 2;\n            *0x5a1da4 = 1;\n            *0x5a1da0 = *0x5a1da0 & 0xffffff00 | 1;\n            *0x54e2a0 = *0x5a2508;\n            *(*0x20 + -0x1b8) = 0x415805;\n            fcn.0045b2e0();\n            uVar13 = 0;\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            iVar8 = **(in_GS_OFFSET + 0x28);\n            iVar11 = *(iVar8 + 0x30);\n            uVar5 = *(*0x20 + -0x1b0);\n            *(*0x20 + -0x178) = uVar5;\n            piVar1 = iVar11 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar11 = *(iVar8 + 0x30);\n            *(*0x20 + -0x30) = iVar11;\n            *(iVar11 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar11 + 200;\n            if (*0x5a1da0 == 0) {\n                *(iVar11 + 200) = 0x47f22d;\n                uVar10 = param_3;\n            }\n            else {\n                *(*0x20 + -0x1b8) = 0x415885;\n                fcn.004596a0(uVar5, param_2, param_3, param_4);\n                uVar10 = param_3;\n            }\n            *(*0x20 + -0x20) = iVar8;\n            *(*(iVar8 + 0x30) + 0xf9) = 2;\n            *(*0x20 + -0x28) = *(*(iVar8 + 0x30) + 0x90);\n            *(*0x20 + -0x1b8) = 0x4158ba;\n            fcn.00435c80(4);\n            *(*(*0x20 + -0x28) + 0xb0) = 6;\n            *(*0x20 + -0xf8) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n            *(*0x20 + -0xf8) = 0x416480;\n            *(*0x20 + -0xf0) = *(*0x20 + -0x178);\n            *(*0x20 + -0x1b0) = *0x20 + -0xf8;\n            *(*0x20 + -0x1b8) = 0x4158ff;\n            fcn.004571e0();\n            *(*0x20 + -0x1b0) = 0x4dc3a8;\n            *(*0x20 + -0x1b8) = 0x415925;\n            fcn.004571e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            param_2 = *(*(*0x20 + -0x20) + 0x30);\n            *(param_2 + 0xf9) = 0;\n            *(*0x20 + -0x1b8) = 0x415965;\n            fcn.00435c80(2);\n            if (*0x553d30 != '\\0') {\n                *(*0x20 + -0x1b8) = 0x415987;\n                fcn.0044cd00(0);\n            }\n            iVar8 = *(*0x20 + -0x30);\n            *(iVar8 + 0xd0) = 0;\n            if (*0x5a1da0 == 0) {\n                *(iVar8 + 200) = 0;\n            }\n            else {\n                param_2 = 0;\n                *(*0x20 + -0x1b8) = 0x4159bf;\n                fcn.00459660(iVar8, 0, uVar10, param_4);\n            }\n            param_3 = uVar10;\n            if (*0x5a1b84 == 0) {\n                *0x5a56b0 = *0x5a25b0;\n                *(*0x20 + -0x1b0) = 0x4dc388;\n                *(*0x20 + -0x1b8) = 0x4159ea;\n                fcn.004571e0();\n                *(*0x20 + -0x1b8) = 0x415a05;\n                fcn.0045b2e0();\n                *(*0x20 + -0x180) = *(*0x20 + -0x1b0);\n                *(*0x20 + -0x1b8) = 0x415a27;\n                fcn.0045b340(iVar8, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar8 = *(*0x20 + -0x1b0);\n                iVar4 = *(*0x20 + -0x1a8);\n                param_2 = *(*0x20 + -0x180);\n                *0x54e288 = *0x54e288 + (param_2 - *0x54e290);\n                param_3 = param_2 - *0x54e290;\n                *0x54e280 = param_2;\n                if (param_3 < 0) {\n                    LOCK();\n                    *0x5a6d40 = *0x5a6d40 + 1;\n                    param_3 = uVar10;\ncode_r0x00415b34:\n                    *0x5a4688 = iVar8 * 1000000000 + iVar4;\n                    *0x5a56a8 = param_2;\n                    *((*0x5a5698 & 0xff) * 8 + 0x5a4698) = *0x54e288;\n                    *((*0x5a5698 & 0xff) * 8 + 0x5a4e98) = iVar8 * 1000000000 + iVar4;\n                    *0x5a4690 = *0x5a4690 + *0x54e288;\n                    iVar8 = (*0x54e270 - *0x54e268) * *0x54e25c;\n                    *(*0x20 + -0x170) = iVar8;\n                    iVar11 = (*0x54e280 - *0x54e278) * *0x54e25c;\n                    *(*0x20 + -0x158) = iVar11;\n                    *0x54e220 = *0x5a2568 + *0x5a2560 + *0x5a2570 + iVar8 + iVar11 + *0x54e220;\n                    *0x5a56a0 = *0x54e220 / ((param_2 - *0x54e7c0) * *0x5a1b88 + *0x54e7c8);\n                    *0x573f30 = 0;\n                    *0x54de94 = 0;\n                    if (*0x54e218 != '\\0') {\n                        *0x5a569c = *0x5a569c + 1;\n                    }\n                    *(*0x20 + -0x1b8) = 0x415c65;\n                    fcn.00409aa0();\n                    *0x5a5698 = *0x5a5698 + 1;\n                    *(*0x20 + -0x1b8) = 0x415c77;\n                    fcn.00439d00();\n                    *(*0x20 + -0x1b8) = 0x415c85;\n                    fcn.00409cc0();\n                    *(*0x20 + -0x1b8) = 0x415c96;\n                    fcn.00417880();\n                    *0x5a1b8c = ((*0x5a1b8c >> 1) + (((*0x5a1b8c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                    param_2 = *0x5a1b8c;\n                    LOCK();\n                    if ((*0x54de9c & 0x80000000) == 0) {\n                        *0x54de9c = *0x54de9c + 1;\n                        LOCK();\n                        *(*0x20 + -0x184) = 0;\n                        *(*0x20 + -0x188) = *0x573f58;\n                        *(*0x20 + -0x1b0) = 0x4dc3b0;\n                        *(*0x20 + -0x1b8) = 0x415d2f;\n                        fcn.004571e0();\n                        *(*0x20 + -0x1b8) = 0x415d48;\n                        fcn.00428d20();\n                        *(*0x20 + -0x1b8) = 0x415d4d;\n                        fcn.00421b40();\n                        *(*0x20 + -0x1b0) = 0x4dc370;\n                        *(*0x20 + -0x1b8) = 0x415d5d;\n                        fcn.004571e0();\n                        *(*0x20 + -0x1b0) = 0x4dc3c0;\n                        *(*0x20 + -0x1b8) = 0x415d85;\n                        fcn.004571e0();\n                        uVar13 = 0;\n                        uVar14 = 0;\n                        uVar15 = 0;\n                        uVar16 = 0;\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        *(*0x20 + -0x1b8) = 0x415db2;\n                        fcn.0041f5a0();\n                        if (*0x5a1ffc < 1) {\ncode_r0x00415e14:\n                            *(*0x20 + -0x1b8) = 0x415e25;\n                            fcn.00441c00(0);\n                            *(*0x20 + -0x1b8) = 0x415e36;\n                            fcn.00441c00(0);\n                            iVar4 = *(*(*0x20 + -0x30) + 0xd8);\n                            *(*(*0x20 + -0x30) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x100) = *0x4f0bf0 * *0x5a56a0;\n                        *(*0x20 + -0xe8) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                        *(*0x20 + -0xe0) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                        *(*0x20 + -0x1b8) = 0x415deb;\n                        fcn.004330a0();\n                        param_2 = (*0x54e268 - *0x5a1d18) / 1000000;\n                        uVar10 = 0x17;\n                        while ((cVar3 = param_2,  9 < param_2 || (0x13 < uVar10))) {\n                            param_2 = param_2 / 10;\n                            if (0x17 < uVar10) goto code_r0x00416426;\n                            *(*0x20 + (uVar10 - 0xe8)) = cVar3 + param_2 * -10 + '0';\n                            bVar12 = uVar10 == 0x15;\n                            uVar10 = uVar10 - 1;\n                            if (bVar12) {\n                                *(*0x20 + -0xd4) = 0x2e;\n                                uVar10 = 0x13;\n                            }\n                        }\n                        if (uVar10 < 0x18) {\n                            *(*0x20 + (uVar10 - 0xe8)) = cVar3 + '0';\n                            *(*0x20 + -0x108) = *0x5a5698;\n                            *(*0x20 + -0x1b8) = 0x415f2c;\n                            uVar5 = fcn.004473c0(-(uVar10 - 0x18));\n                            *(*0x20 + -0x18) = uVar5;\n                            *(*0x20 + -0x110) = *0x20 + ((uVar10 & uVar10 - 0x18 >> 0x3f) - 0xe8);\n                            *(*0x20 + -0x1b8) = 0x415f45;\n                            fcn.004330a0();\n                            *(*0x20 + -0x1b8) = 0x415f56;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x415f65;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x415f76;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x415f8b;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x415f9c;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x415faf;\n                            fcn.004337a0(*(*0x20 + -0x100));\n                            *(*0x20 + -0x1b8) = 0x415fc5;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x415fca;\n                            fcn.00433120();\n                            *(*0x20 + -0xd0) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -200) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0xd0) = *0x54e270;\n                            *(*0x20 + -200) = *0x54e278;\n                            *(*0x20 + -0xc0) = *0x54e280;\n                            iVar11 = 0;\n                            iVar8 = *0x54e268;\n                            while (iVar11 < 3) {\n                                *(*0x20 + -0x148) = iVar11;\n                                *(*0x20 + -0x168) = *(*0x20 + iVar11 * 8 + -0xd0);\n                                if (iVar11 != 0) {\n                                    *(*0x20 + -0x118) = iVar8;\n                                    *(*0x20 + -0x1b8) = 0x4160b6;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x1b8) = 0x4160c7;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x1b8) = 0x4160cc;\n                                    fcn.00433120();\n                                }\n                                *(*0x20 + -0x1b8) = 0x41602c;\n                                uVar5 = fcn.004175a0(0x18);\n                                *(*0x20 + -0x1b8) = 0x41603f;\n                                uVar6 = fcn.004473c0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x416054;\n                                fcn.004330a0();\n                                *(*0x20 + -0x1b8) = 0x416069;\n                                fcn.004339a0();\n                                *(*0x20 + -0x1b8) = 0x41606e;\n                                fcn.00433120();\n                                iVar8 = *(*0x20 + -0x168);\n                                iVar11 = *(*0x20 + -0x148) + 1;\n                            }\n                            *(*0x20 + -0x1b8) = 0x4160e5;\n                            fcn.004330a0();\n                            *(*0x20 + -0x1b8) = 0x4160f6;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x4160fb;\n                            fcn.00433120();\n                            *(*0x20 + -0x58) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x50) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x40) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n                            *(*0x20 + -0x58) = *(*0x20 + -0x170);\n                            *(*0x20 + -0x50) = *0x5a2560;\n                            *(*0x20 + -0x48) = *0x5a2568 + *0x5a2570;\n                            *(*0x20 + -0x40) = *0x5a2578;\n                            *(*0x20 + -0x38) = *(*0x20 + -0x158);\n                            iVar8 = 0;\n                            while (iVar8 < 5) {\n                                *(*0x20 + -0x150) = iVar8;\n                                *(*0x20 + -0x160) = *(*0x20 + iVar8 * 8 + -0x58);\n                                if ((iVar8 == 2) || (iVar8 == 3)) {\n                                    *(*0x20 + -0x1b8) = 0x4161f6;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x1b8) = 0x416207;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x1b8) = 0x41620c;\n                                    fcn.00433120();\n                                }\n                                else if (iVar8 != 0) {\n                                    *(*0x20 + -0x1b8) = 0x416225;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x1b8) = 0x416236;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x1b8) = 0x41623b;\n                                    fcn.00433120();\n                                }\n                                *(*0x20 + -0x1b8) = 0x41617e;\n                                uVar5 = fcn.004175a0(0x18);\n                                *(*0x20 + -0x1b8) = 0x416191;\n                                uVar6 = fcn.004473c0(0x18);\n                                *(*0x20 + -0x18) = uVar6;\n                                *(*0x20 + -0x110) = uVar5;\n                                *(*0x20 + -0x1b8) = 0x4161a6;\n                                fcn.004330a0();\n                                *(*0x20 + -0x1b8) = 0x4161bb;\n                                fcn.004339a0();\n                                *(*0x20 + -0x1b8) = 0x4161c5;\n                                fcn.00433120();\n                                iVar8 = *(*0x20 + -0x150) + 1;\n                            }\n                            *(*0x20 + -0x108) = *0x5a2528;\n                            *(*0x20 + -0x120) = *0x54e298;\n                            *(*0x20 + -0x128) = *0x54e2a0;\n                            *(*0x20 + -0x130) = *0x54e2a8;\n                            *(*0x20 + -0x138) = *0x5a2500;\n                            *(*0x20 + -0x140) = *0x5a2530;\n                            *(*0x20 + -0x118) = *0x54e260;\n                            *(*0x20 + -0x1b8) = 0x4162b2;\n                            fcn.004330a0();\n                            *(*0x20 + -0x1b8) = 0x4162c5;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x4162d6;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x4162e7;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x4162f8;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x416309;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x41631a;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x41632b;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x416339;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x41634a;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x41635b;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x41636c;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x41637a;\n                            fcn.004336a0();\n                            *(*0x20 + -0x1b8) = 0x41638b;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x416398;\n                            fcn.004337a0();\n                            *(*0x20 + -0x1b8) = 0x4163a9;\n                            fcn.004339a0();\n                            *(*0x20 + -0x1b8) = 0x4163ae;\n                            fcn.00433120();\n                            if (*0x54e218 != '\\0') {\n                                *(*0x20 + -0x1b8) = 0x4163bc;\n                                fcn.004330a0();\n                                *(*0x20 + -0x1b8) = 0x4163cd;\n                                fcn.004339a0();\n                                *(*0x20 + -0x1b8) = 0x4163d2;\n                                fcn.00433120();\n                            }\n                            *(*0x20 + -0x1b8) = 0x4163d7;\n                            fcn.004330a0();\n                            *(*0x20 + -0x1b8) = 0x4163dc;\n                            fcn.00433300();\n                            *(*0x20 + -0x1b8) = 0x4163e5;\n                            fcn.00433120();\n                            cVar3 = *(*(unaff_R14 + 0x30) + 0xe7);\n                            *(*(unaff_R14 + 0x30) + 0xe7) = cVar3 + -1;\n                            if (cVar3 == '\\x01') {\n                                *(*0x20 + -0x1b8) = 0x416417;\n                                fcn.00409cc0();\n                            }\n                            goto code_r0x00415e14;\n                        }\n                        *(*0x20 + -0x1b8) = 0x416426;\n                        fcn.004599e0(0x18);\ncode_r0x00416426:\n                        *(*0x20 + -0x1b8) = 0x416433;\n                        fcn.004599e0(0x18);\n                    }\n                    *(*0x20 + -0x1b8) = 0x416445;\n                    fcn.004317e0();\n                }\n                else {\n                    if (param_3 < 0x10) {\n                        iVar11 = 0;\n                    }\n                    else {\n                        iVar7 = 0x3f;\n                        if (param_3 != 0) {\n                            for (; param_3 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                            }\n                        }\n                        if (param_3 == 0) {\n                            iVar7 = -1;\n                        }\n                        iVar11 = iVar7 + -3;\n                        if (iVar11 * 0x10 < 0x2d0) {\n                            iVar7 = param_3 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                            param_3 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                        }\n                        else {\n                            iVar11 = 0x2c;\n                            param_3 = 0xf;\n                        }\n                    }\n                    uVar10 = iVar11 * 0x10 + param_3;\n                    if (uVar10 < 0x2d0) {\n                        piVar2 = uVar10 * 8 + 0x5a56c0;\n                        LOCK();\n                        *piVar2 = *piVar2 + 1;\n                        goto code_r0x00415b34;\n                    }\n                }\n                *(*0x20 + -0x1b8) = 0x416452;\n                fcn.00459a00(0x2d0);\n            }\n            *(*0x20 + -0x1b8) = 0x416465;\n            fcn.004317e0();\n        }\n        *(puVar9 + -8) = 0x41646b;\n        fcn.00457320();\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 6360
    },
    "004179c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004179c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x004179c0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar5 = *(in_RAX + 0x40);\n        if (unaff_RBX < iVar5) {\n            return;\n        }\n        *(in_RAX + 0x40) = unaff_RBX;\n        arg1 = *(in_RAX + 0x28);\n        iVar5 = (unaff_RBX - iVar5) * *(in_RAX + 0x4c);\n        if (arg1 != 0) {\n            LOCK();\n            *(in_RAX + 0x28) = *(in_RAX + 0x28) - arg1;\n        }\n        iVar7 = *(in_RAX + 0x38);\n        if (iVar7 != 0) {\n            LOCK();\n            *(in_RAX + 0x38) = *(in_RAX + 0x38) - iVar7;\n        }\n        if (*(in_RAX + 0x50) != '\\0') {\ncode_r0x00417a86:\n            if (*(in_RAX + 0x20) != '\\0') {\n                arg1 = arg1 + iVar5 * *0x4f0b90;\n            }\n            *(*0x20 + -0x68) = 0x417ab6;\n            fcn.00417bc0(arg1);\n            return;\n        }\n        *(*0x20 + -0x48) = iVar5;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x20) = unaff_RBX;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x10) = *0x54dd10;\n        *(*0x20 + -0x28) = *0x54dd18;\n        iVar9 = *(unaff_R14 + 0x30);\n        *(*0x20 + -0x18) = iVar9;\n        iVar4 = 0;\n        iVar8 = *0x54dd18;\n        do {\n            if (iVar8 <= iVar4) {\n                iVar2 = *(iVar9 + 0xd8);\n                *(iVar9 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                goto code_r0x00417a86;\n            }\n            *(*0x20 + -0x30) = iVar4;\n            *(*0x20 + -0x40) = iVar7;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x68) = 0x417b0f;\n            uVar3 = fcn.00417da0();\n            if (uVar3 < 2) {\n                if (uVar3 != 0) goto code_r0x00417b3f;\n                arg1 = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else if ((uVar3 == 2) || (uVar3 == 3)) {\n                arg1 = *(*0x20 + -0x38) + unaff_RBX;\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else {\n                if (uVar3 != 4) goto code_r0x00417b88;\ncode_r0x00417b3f:\n                iVar7 = *(*0x20 + -0x40) + unaff_RBX;\n                arg1 = *(*0x20 + -0x38);\n            }\n            iVar4 = *(*0x20 + -0x30) + 1;\n            in_RAX = *(*0x20 + 8);\n            iVar5 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x20);\n            iVar8 = *(*0x20 + -0x28);\n            iVar9 = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x00417b9a;\ncode_r0x00417b88:\n    unaff_RBX = 0x20;\n    *(*0x20 + -0x68) = 0x417b99;\n    in_RAX = fcn.004317e0();\ncode_r0x00417b9a:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x417ba9;\n    fcn.00457320();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x004179c0;\n}\n",
        "token_count": 1316
    },
    "00417e40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00417e40(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar3 = uVar1 >> 0x3d;\n                if (unaff_BL != uVar1 >> 0x3d) goto code_r0x00417f1a;\n                LOCK();\n                bVar6 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar6 * *in_RAX;\n            } while (!bVar6);\n            uVar4 = arg1 & 0xe000000000000000 | uVar1 & 0x1fffffffffffffff;\n            uVar3 = 0;\n            bVar2 = arg1 < uVar4;\n            arg1 = arg1 - uVar4;\n            if (bVar2) {\n                arg1 = 0;\n            }\n            if (arg1 == 0) {\n                return uVar1 ^ !bVar6 * (uVar1 ^ *in_RAX);\n            }\n            if (unaff_BL < 3) {\n                if (unaff_BL == 1) {\ncode_r0x00417ee9:\n                    LOCK();\n                    *0x5a2078 = *0x5a2078 + arg1;\n                    return 0x5a2078;\n                }\n                if (unaff_BL == 2) {\ncode_r0x00417ed2:\n                    LOCK();\n                    *0x5a2068 = *0x5a2068 + arg1;\n                    return 0x5a2068;\n                }\n            }\n            else {\n                if (unaff_BL == 3) goto code_r0x00417ed2;\n                if (unaff_BL == 4) goto code_r0x00417ee9;\n            }\n            unaff_BL = 0x33;\n            *(*0x20 + -0x28) = 0x417f1a;\n            fcn.004317e0();\ncode_r0x00417f1a:\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x10) = uVar3;\n            *(*0x20 + -0x28) = 0x417f28;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x417f39;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x417f46;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x417f57;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x417f65;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x417f6a;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x417f6f;\n            fcn.00433120();\n            unaff_BL = 0x3e;\n            *(*0x20 + -0x28) = 0x417f85;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x417f99;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1014
    },
    "004183c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004183c0(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x54e1c8) || (*0x54e1cc <= unaff_EBX)) {\n        if ((unaff_EBX < *0x54e1cc) || (*0x54e1d0 <= unaff_EBX)) {\n            puVar4 = *0x5a1c00;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041869b:\n                    puStack88 = puVar4;\n                    fcn.0041a880(0x5a1f40);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.004571e0();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x54e1d0) || (*0x54e1d4 <= unaff_EBX)) {\n                    puVar4 = *0x54e1d4;\n                    if ((*0x54e1d4 <= unaff_EBX) && (unaff_EBX < *0x54e1d8)) {\n                        if (unaff_EBX - *0x54e1d4 < *0x54e1e8) {\n                            iVar3 = *(*0x54e1e0 + (unaff_EBX - *0x54e1d4) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x54e198;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x418820);\n                            auStack24 = CONCAT88(&iStack96, in_RAX);\n                            fcn.004571e0();\n                            piVar2 = 0x5a2548;\n                            goto code_r0x004185a8;\n                        }\n                        fcn.004599e0(*0x54e1e8);\n                    }\n                    fcn.004330a0();\n                    uStack64 = *0x54e1d4;\n                    uStack72 = *0x54e1d8;\n                    fcn.004330a0();\n                    fcn.004339a0();\n                    fcn.004336a0();\n                    fcn.004339a0();\n                    fcn.004336a0();\n                    fcn.004339a0();\n                    fcn.004336a0();\n                    fcn.004339a0();\n                    fcn.00433120();\n                    fcn.004317e0();\n                    goto code_r0x0041869b;\n                }\n                fcn.00418b60();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x54d5e8 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x54d5e8;\n                iVar3 = (*0x54d5e8)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.00418980(*(*(iStack56 + iVar1 * 8) + 0x208));\n                iStack96 = iVar1 + iStack96;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x5a2550;\n        }\n    }\n    else {\n        if (*0x54d5e8 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x54d5e8;\n            iVar3 = (*0x54d5e8)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.00418980(*(*(iStack48 + iVar1 * 8) + 0x1f8));\n            iStack96 = iVar1 + iStack96;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x5a2550;\n    }\ncode_r0x004185a8:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.004196a0();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1239
    },
    "00419fe0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419fe0(ulong arg1)\n\n{\n    int64_t arg1_00;\n    uint64_t uVar1;\n    int32_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar5;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    int64_t iVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar3 = *in_RAX;\n    if (iVar3 == 0) {\n        uVar7 = 0;\n        bVar9 = false;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(iVar3 + 0x24) == '\\x03';\n        bVar9 = *(iVar3 + 0x24) == '\\x05';\n    }\n    cVar5 = uVar7;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar5 == '\\0')) && (!bVar9)) {\n        iVar4 = 0;\n        iVar2 = fcn.00446440();\n        if (0 < iVar2) {\n            fcn.0041a880(unaff_RBX);\n        }\n        if (0 < iVar4) {\n            fcn.0041a880(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar10 = unaff_RSI;\n            for (iVar3 = 0; iVar3 < uVar7; iVar3 = iVar3 + 1) {\n                arg1_00 = unaff_RSI + iVar3 * 0x10;\n                iVar2 = *(unaff_RSI + iVar3 * 0x10);\n                iVar8 = in_RAX[7];\n                if (-1 < iVar2) {\n                    iVar8 = in_RAX[8];\n                }\n                uVar1 = iVar8 + iVar2;\n                if (in_RAX[5] < uVar1 || in_RAX[5] == uVar1) {\n                    unaff_RSI = iVar10;\n                    fcn.0041f120(arg1_00);\n                    iVar10 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.0041ad80(0);\n        uVar7 = uVar7 & 0xff;\n    }\n    cVar6 = uVar7;\n    if (in_RAX[9] != 0) {\n        fcn.0041ad80(0);\n        cVar6 = cVar5;\n    }\n    if ((cVar6 != '\\0') || (bVar9)) {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    return;\n}\n",
        "token_count": 745
    },
    "0041aa20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041aa20(void)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t *unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar6 < 0x40) {\n                uVar8 = in_RAX + 0x800000000000 >> 0x16;\n                iVar4 = *(*(uVar6 * 8 + 0x573fb0) + (uVar8 & 0xfffff) * 8);\n                if (iVar4 == 0) {\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    puVar11 = NULL;\n                    puVar10 = NULL;\n                }\n                else {\n                    puVar10 = iVar4 + (in_RAX >> 5 & 0x1ffff);\n                    uVar9 = in_RAX >> 3 & 3;\n                    puVar11 = iVar4 + 0x1ffff;\n                }\n                iVar4 = *(iVar4 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n                uVar6 = *(iVar4 + 0x68);\n                if (uVar6 != 0) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x30) = in_RAX;\n                    if (uVar6 < 0x20001) goto code_r0x0041ab51;\n                    if (*(iVar4 + 0x18) != in_RAX) {\ncode_r0x0041ac8e:\n                        uVar6 = (*(iVar4 + 0x68) + *(iVar4 + 0x18)) - in_RAX;\n                        if (0x20000 < uVar6) {\n                            uVar6 = 0x20000;\n                        }\ncode_r0x0041ab51:\n                        *(*0x20 + -0x40) = uVar6;\n                        uVar3 = 0;\n                        while ((uVar3 < uVar6 && (uVar1 = *puVar10,  ((uVar1 >> (uVar9 & 0x1f)) >> 4 & 1) != 0))) {\n                            *(*0x20 + -0x38) = uVar3;\n                            if (((uVar1 >> (uVar9 & 0x1f) & 1) != 0) &&\n                               ((*(uVar3 + in_RAX) != 0 && (uVar6 <= *(uVar3 + in_RAX) - in_RAX)))) {\n                                *(*0x20 + -0x18) = puVar10;\n                                *(*0x20 + -0x20) = puVar11;\n                                *(*0x20 + -0x5c) = uVar8;\n                                *(*0x20 + -0x54) = uVar9;\n                                *(*0x20 + -0x98) = 0x41abd1;\n                                iVar4 = fcn.0040fb60(uVar3);\n                                if (iVar4 != 0) {\n                                    *(*0x20 + -0x98) = 0x41abf3;\n                                    fcn.0041b040(*(*0x20 + -0x38), uVar6, uVar3);\n                                }\n                                uVar3 = *(*0x20 + -0x38);\n                                uVar9 = *(*0x20 + -0x54);\n                                uVar6 = *(*0x20 + -0x40);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                in_RAX = *(*0x20 + -0x30);\n                                uVar8 = *(*0x20 + -0x5c);\n                                puVar10 = *(*0x20 + -0x18);\n                                puVar11 = *(*0x20 + -0x20);\n                            }\n                            if (uVar9 < 3) {\n                                uVar9 = uVar9 + 1;\n                            }\n                            else if (puVar11 == puVar10) {\n                                uVar5 = uVar8 & 0xffffffff;\n                                *(*0x20 + -0x98) = 0x41ac4e;\n                                puVar10 = fcn.0040fcc0(uVar8 & 0xffffffff);\n                                uVar6 = *(*0x20 + -0x40);\n                                in_RAX = *(*0x20 + -0x30);\n                                uVar8 = uVar5;\n                                uVar3 = *(*0x20 + -0x38);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            else {\n                                puVar10 = puVar10 + 1;\n                                uVar9 = 0;\n                            }\n                            uVar3 = uVar3 + 8;\n                        }\n                        unaff_RBX[2] = unaff_RBX[2] + uVar6;\n                        unaff_RBX[3] = unaff_RBX[3] + uVar3;\n                        return;\n                    }\n                    if ((*(iVar4 + 0x62) & 1) != 0) {\n                        unaff_RBX[2] = unaff_RBX[2] + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = iVar4;\n                    *(*0x20 + -0x28) = puVar11;\n                    *(*0x20 + -0x58) = uVar8;\n                    *(*0x20 + -0x60) = uVar9;\n                    *(*0x20 + -0x10) = puVar10;\n                    uVar6 = in_RAX;\ncode_r0x0041acb6:\n                    uVar6 = uVar6 + 0x20000;\n                    if (*(iVar4 + 0x68) + *(iVar4 + 0x18) <= uVar6) goto code_r0x0041ac8e;\n                    iVar2 = *unaff_RBX;\n                    if (iVar2 == 0) {\ncode_r0x0041ace6:\n                        *(*0x20 + -0x48) = uVar6;\n                        *(*0x20 + -0x98) = 0x41acf6;\n                        fcn.00421020();\n                        uVar6 = *(*0x20 + -0x48);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        in_RAX = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + -0x58);\n                        uVar9 = *(*0x20 + -0x60);\n                        puVar10 = *(*0x20 + -0x10);\n                        iVar4 = *(*0x20 + -0x50);\n                        puVar11 = *(*0x20 + -0x28);\n                        goto code_r0x0041acb6;\n                    }\n                    uVar3 = *(iVar2 + 0x10);\n                    if (uVar3 == 0xfd) goto code_r0x0041ace6;\n                    if (uVar3 < 0xfd) {\n                        *(iVar2 + 0x18 + uVar3 * 8) = uVar6;\n                        *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                        goto code_r0x0041acb6;\n                    }\n                    *(*0x20 + -0x98) = 0x41ad30;\n                    fcn.004599e0(0xfd);\n                }\n                unaff_RBX = 0x11;\n                *(*0x20 + -0x98) = 0x41ad45;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x98) = 0x41ad52;\n            in_RAX = fcn.00459a00(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x41ad65;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2038
    },
    "0041ce00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ce2b)\n// WARNING: Removing unreachable block (ram,0x0041ce32)\n// WARNING: Removing unreachable block (ram,0x0041ce38)\n\nint64_t fcn.0041ce00(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00406960();\n    iVar1 = fcn.00447e00();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 169
    },
    "0041ce80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ceb4)\n// WARNING: Removing unreachable block (ram,0x0041cebb)\n// WARNING: Removing unreachable block (ram,0x0041cec2)\n// WARNING: Removing unreachable block (ram,0x0041cef3)\n\nulong fcn.0041ce80(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00406960();\n    uVar1 = fcn.00447ee0();\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "0041fec0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041fec0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t **in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    char unaff_BL;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint32_t uVar12;\n    ulong *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint16_t uVar16;\n    int64_t iVar17;\n    uint32_t uVar18;\n    int64_t unaff_R14;\n    uint8_t *unaff_R15;\n    \ncode_r0x0041fec0:\n    puVar11 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x50 && *0x20 + -0x50 != *(unaff_R14 + 0x10)) {\n        puVar11 = *0x20 + -0xd0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar1 = *(unaff_R14 + 0x30);\n        if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n            puVar10 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = NULL;\n            }\n            *(*0x20 + -0xb0) = *0x573f58;\n            uVar3 = puVar10[99];\n            *(*0x20 + -0xb5) = uVar3;\n            if ((uVar3 == 1) && (*(puVar10 + 0x58) == *0x573f58 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x98) = puVar10;\n                *(*0x20 + -0xac) = *0x573f58 - 1;\n                uVar12 = *0x573f58;\n                if (*0x553d30 != '\\0') {\n                    *(*0x20 + -0xd8) = 0x41ff71;\n                    fcn.0044dd80();\n                    puVar10 = *(*0x20 + -0x98);\n                    uVar12 = *(*0x20 + -0xb0);\n                }\n                LOCK();\n                *0x573f80 = *0x573f80 + *(puVar10 + 0x20);\n                uVar3 = puVar10[0x62];\n                *(*0x20 + -0xb8) = uVar3;\n                uVar8 = *(puVar10 + 0x68);\n                *(*0x20 + -0xa0) = uVar8;\n                uVar14 = *(puVar10 + 0x80);\n                *(*0x20 + -0x50) = uVar14;\n                *(*0x20 + -0x48) = puVar10 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar4 = uVar3;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(puVar10 + 0x80) == 0)) {\n                            puVar13 = *(puVar10 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x00420925:\n                                uVar5 = 0;\n                                *(*0x20 + -0xd8) = 0x420932;\n                                fcn.00459a00(0x40);\n                                goto code_r0x00420932;\n                            }\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x573fb0) + puVar13 * 8);\n                            uVar5 = *(puVar10 + 0x18) >> 0xd;\n                            uVar6 = (uVar5 & 0x1ff) >> 3;\n                            if (0x3f < uVar6) {\n                                *(*0x20 + -0xd8) = 0x420925;\n                                fcn.00459a00(0x40);\n                                goto code_r0x00420925;\n                            }\n                            puVar9 = uVar14 + uVar6 + 0x21080;\n                            LOCK();\n                            *puVar9 = *puVar9 & ~(1 << (uVar5 & 7));\n                        }\n                        if ((*0x5a2028 != 0) || (*0x5a1fe4 != 0)) {\n                            *(*0x20 + -0x38) = *(puVar10 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(puVar10 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(puVar10 + 0x38) && *(puVar10 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(puVar10 + 0x30) && *(puVar10 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar15 = *(puVar10 + 0x68) * uVar14 + *(puVar10 + 0x18);\n                                    if (*0x5a2028 != 0) {\n                                        *(*0x20 + -0x80) = uVar14;\n                                        *(*0x20 + -0xa8) = iVar15;\n                                        *(*0x20 + -0xd8) = 0x42085e;\n                                        fcn.00429ba0();\n                                        uVar14 = *(*0x20 + -0x80);\n                                        puVar10 = *(*0x20 + -0x98);\n                                        uVar8 = *(*0x20 + -0xa0);\n                                        iVar15 = *(*0x20 + -0xa8);\n                                    }\n                                    if (*0x5a1fe4 != 0) {\n                                        for (uVar4 = 0; uVar4 < uVar8; uVar4 = uVar4 + 4) {\n                                            *(iVar15 + uVar4) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(puVar10 + 0x30);\n                        if (*(puVar10 + 0x38) < uVar14 || *(puVar10 + 0x38) == uVar14) goto code_r0x00420246;\n                        uVar8 = uVar14 >> 3;\n                        if ((~*(uVar8 + *(puVar10 + 0x48)) & *(uVar8 + *(puVar10 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x58) = uVar8;\n                            *(*0x20 + -0xd8) = 0x420212;\n                            fcn.00420ac0();\n                            uVar8 = *(*0x20 + -0x58);\n                            puVar10 = *(*0x20 + -0x98);\n                        }\n                        do {\n                            while (uVar8 = uVar8 + 1,  uVar8 < *(puVar10 + 0x38) + 7U >> 3) {\n                                if ((*(uVar8 + *(puVar10 + 0x50)) & ~*(uVar8 + *(puVar10 + 0x48))) != 0) {\n                                    *(*0x20 + -0x88) = uVar8;\n                                    *(*0x20 + -0xd8) = 0x4207b2;\n                                    fcn.00420ac0();\n                                    uVar8 = *(*0x20 + -0x88);\n                                    puVar10 = *(*0x20 + -0x98);\n                                }\n                            }\ncode_r0x00420246:\n                            uVar14 = *(puVar10 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x58) = uVar14;\n                            iVar15 = 0;\n                            for (uVar8 = 0; *(*0x20 + -0x70) = iVar15,  uVar8 < uVar14; uVar8 = uVar8 + 8) {\n                                if (*0x5a1b54 == '\\0') {\n                                    *(*0x20 + -0x90) = uVar8;\n                                    *(*0x20 + -0xd8) = 0x420299;\n                                    iVar17 = fcn.004020e0();\n                                    uVar14 = *(*0x20 + -0x58);\n                                    puVar10 = *(*0x20 + -0x98);\n                                    iVar15 = *(*0x20 + -0x70);\n                                    uVar8 = *(*0x20 + -0x90);\n                                }\n                                else {\n                                    iVar17 = popcnt(*(*(puVar10 + 0x50) + uVar8));\n                                }\n                                iVar15 = iVar15 + iVar17;\n                            }\n                            uVar16 = *(puVar10 + 0x60);\n                            uVar14 = uVar16;\n                            uVar12 = uVar16 - iVar15;\n                            uVar8 = uVar12;\n                            *(*0x20 + -0xb4) = uVar12;\n                            if (iVar15 <= uVar16) {\n                                *(puVar10 + 0x60) = iVar15;\n                                *(puVar10 + 0x30) = 0;\n                                *(puVar10 + 0x88) = 0;\n                                if (*0x553d30 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(puVar10 + 0x68) * (uVar12 & 0xffff);\n                                }\n                                uVar16 = uVar14;\n                                *(puVar10 + 0x48) = *(puVar10 + 0x50);\n                                *(*0x20 + -0xd8) = 0x420345;\n                                uVar7 = fcn.004244c0();\n                                uVar14 = *(*0x20 + -0x98);\n                                *(uVar14 + 0x50) = uVar7;\n                                *(*0x20 + -0xd8) = 0x420358;\n                                fcn.0040f7a0();\n                                iVar15 = *(*0x20 + -0x98);\n                                uVar3 = *(iVar15 + 99);\n                                uVar8 = uVar14 & 0xffffffffffffff00 | uVar3;\n                                *(*0x20 + -0xb5) = uVar3;\n                                if (uVar3 == 1) {\n                                    uVar12 = *(iVar15 + 0x58);\n                                    puVar10 = uVar12;\n                                    if (uVar12 == *(*0x20 + -0xac)) {\n                                        uVar18 = *(*0x20 + -0xb0);\n                                        if ((uVar12 != uVar18 + 1) && (uVar12 != uVar18 + 3)) {\n                                            puVar10 = uVar18;\n                                            *(iVar15 + 0x58) = uVar18;\n                                            uVar14 = *(*0x20 + -0xb8);\n                                            uVar3 = *(*0x20 + -0xb8) >> 1;\n                                            if (uVar3 == 0) {\n                                                if (*(*0x20 + 0x10) != '\\0') {\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -0xb4) != 0) {\n                                                    if (*0x5a1fe8 < 1) {\n                                                        *(*0x20 + -0xd8) = 0x420556;\n                                                        fcn.004238e0();\n                                                    }\n                                                    else {\n                                                        *(iVar15 + 0x70) = 0;\n                                                        *(*0x20 + -0xd8) = 0x420548;\n                                                        fcn.00413800();\n                                                    }\n                                                    *(*0x20 + -0xd8) = 0x420565;\n                                                    iVar15 = fcn.0042ae00();\n                                                    LOCK();\n                                                    *(iVar15 + 0x270) = *(iVar15 + 0x270) + 1;\n                                                    LOCK();\n                                                    piVar1 = iVar15 + 0x268;\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xa0);\n                                                    *(*0x20 + -0xd8) = 0x42058d;\n                                                    fcn.0042aee0(iVar15);\n                                                    LOCK();\n                                                    *0x5a25d0 = *0x5a25d0 + *(*0x20 + -0xa0);\n                                                    return 1;\n                                                }\n                                                if (uVar14 < 0x88) {\n                                                    *(*0x20 + -0xd8) = 0x4205e6;\n                                                    fcn.0042a7a0(uVar14 * 0xc0 + 0x5742b0, (uVar18 >> 1 & 1) * 5);\n                                                    return 0;\n                                                }\n                                                *(*0x20 + -0xd8) = 0x420605;\n                                                fcn.004599e0(0x88);\ncode_r0x00420605:\n                                                *(*0x20 + -0xd8) = 0x420611;\n                                                fcn.004599e0(0x88);\ncode_r0x00420611:\n                                                *(*0x20 + -0xd8) = 0x42061d;\n                                                fcn.004599e0(0x88);\n                                            }\n                                            else {\n                                                if (*(*0x20 + -0xb4) == 0) {\n                                                    cVar2 = *(*0x20 + 0x10);\ncode_r0x00420449:\n                                                    if (cVar2 != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0x70) == 0) {\n                                                        *(*0x20 + -0xd8) = 0x4204f1;\n                                                        fcn.004238e0();\n                                                        return 1;\n                                                    }\n                                                    if (*(iVar15 + 0x38) != (*(*0x20 + -0x70) & 0xffff)) {\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xd8) = 0x4204db;\n                                                            fcn.0042a7a0(uVar14 * 0xc0 + 0x574260, \n                                                                         (puVar10 >> 1 & 1) * 5);\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x00420605;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xd8) = 0x42049c;\n                                                        fcn.0042a7a0(uVar14 * 0xc0 + 0x5742b0, (puVar10 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    goto code_r0x00420611;\n                                                }\n                                                *(*0x20 + -0xb6) = uVar3;\n                                                *(iVar15 + 100) = 1;\n                                                *(*0x20 + -0xd8) = 0x4203da;\n                                                iVar15 = fcn.0042ae00();\n                                                if (*(*0x20 + -0xb6) < 0x44) {\n                                                    piVar1 = iVar15 + *(*0x20 + -0xb6) * 8 + 0x278;\n                                                    *(*0x20 + -0x60) = *(*0x20 + -0xb4);\n                                                    LOCK();\n                                                    iVar15 = *piVar1;\n                                                    *piVar1 = *piVar1 + *(*0x20 + -0xb4);\n                                                    *(*0x20 + -0xd8) = 0x420418;\n                                                    fcn.0042aee0(piVar1, iVar15);\n                                                    iVar15 = *(*0x20 + -0x98);\n                                                    LOCK();\n                                                    *0x5a25d0 = *0x5a25d0 + *(*0x20 + -0x60) * *(iVar15 + 0x68);\n                                                    cVar2 = *(*0x20 + 0x10);\n                                                    puVar10 = *(*0x20 + -0xb0);\n                                                    uVar14 = *(*0x20 + -0xb8);\n                                                    goto code_r0x00420449;\n                                                }\n                                            }\n                                            uVar8 = 0x44;\n                                            *(*0x20 + -0xd8) = 0x42062a;\n                                            fcn.004599e0(0x44);\n                                        }\n                                        iVar15 = 0x11;\n                                        *(*0x20 + -0xd8) = 0x42063b;\n                                        fcn.004317e0();\n                                    }\n                                }\n                                *(*0x20 + -0x68) = *(iVar15 + 0x58);\n                                *(*0x20 + -0xd8) = 0x420648;\n                                fcn.004330a0();\n                                *(*0x20 + -0xd8) = 0x420659;\n                                fcn.004339a0();\n                                *(*0x20 + -0xd8) = 0x420666;\n                                fcn.004336a0();\n                                *(*0x20 + -0xd8) = 0x420677;\n                                fcn.004339a0();\n                                *(*0x20 + -0xd8) = 0x420685;\n                                fcn.004336a0();\n                                *(*0x20 + -0xd8) = 0x420696;\n                                fcn.004339a0();\n                                *(*0x20 + -0xd8) = 0x42069f;\n                                fcn.004336a0();\n                                *(*0x20 + -0xd8) = 0x4206a5;\n                                fcn.00433300();\n                                *(*0x20 + -0xd8) = 0x4206aa;\n                                fcn.00433120();\n                                *(*0x20 + -0xd8) = 0x4206bb;\n                                fcn.004317e0();\n                            }\n                            *(*0x20 + -0xb2) = uVar16;\n                            *(*0x20 + -0x58) = *(puVar10 + 0x38);\n                            *(*0x20 + -0xd8) = 0x4206cf;\n                            fcn.004330a0();\n                            *(*0x20 + -0xd8) = 0x4206e5;\n                            fcn.004339a0();\n                            *(*0x20 + -0xd8) = 0x4206ef;\n                            fcn.004336a0();\n                            *(*0x20 + -0xd8) = 0x420705;\n                            fcn.004339a0();\n                            *(*0x20 + -0xd8) = 0x420712;\n                            fcn.004336a0();\n                            *(*0x20 + -0xd8) = 0x420725;\n                            fcn.004339a0();\n                            *(*0x20 + -0xd8) = 0x42072f;\n                            fcn.004336a0();\n                            *(*0x20 + -0xd8) = 0x420745;\n                            fcn.004339a0();\n                            *(*0x20 + -0xd8) = 0x420752;\n                            fcn.004336a0();\n                            *(*0x20 + -0xd8) = 0x420757;\n                            fcn.00433300();\n                            *(*0x20 + -0xd8) = 0x42075c;\n                            fcn.00433120();\n                            *(*0x20 + -0xd8) = 0x42076d;\n                            fcn.004317e0();\n                        } while( true );\n                    }\n                    if (uVar8 == 0) goto code_r0x004209f3;\n                    uVar4 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0);\n                    uVar18 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar8), 0) & 7;\n                    uVar5 = uVar18;\n                    puVar9 = (uVar4 >> 3) + *(puVar10 + 0x50);\n                    uVar3 = *puVar9;\n                    uVar12 = uVar3;\n                    if ((1 << uVar18 & uVar3) == 0) {\n                        uVar4 = uVar4 * uVar8 + uVar8;\n                        unaff_R15 = puVar10;\n                        for (; puVar10 = puVar9,  puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar4 <= *(puVar13 + 1)) {\n                                cVar2 = '\\0';\n                                goto code_r0x004200c8;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                *puVar10 = uVar12 | 1 << (uVar5 & 0x1f);\n                                cVar2 = '\\x01';\n                                goto code_r0x004200c8;\n                            }\ncode_r0x00420932:\n                            puVar9 = puVar10;\n                        }\n                        cVar2 = '\\0';\ncode_r0x004200c8:\n                        *(*0x20 + -0x78) = uVar4;\n                        *(*0x20 + -0xb7) = cVar2;\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar10 = unaff_R15,  puVar13 != NULL &&\n                               (*(puVar13 + 1) < uVar4))) {\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar2 == '\\0')) {\n                                uVar7 = *puVar13;\n                                *(*0x20 + -0x40) = uVar7;\n                                **(*0x20 + -0x48) = uVar7;\n                                *(*0x20 + -0xd8) = 0x4209c5;\n                                fcn.00424380(uVar8);\n                                cVar2 = *(*0x20 + -0xb7);\n                                uVar4 = *(*0x20 + -0x78);\n                                uVar8 = *(*0x20 + -0xa0);\n                                uVar14 = *(*0x20 + -0x50);\n                                unaff_R15 = *(*0x20 + -0x98);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else if (*(puVar13 + 10) == '\\x03') {\n                        uVar7 = *puVar13;\n                        *(*0x20 + -0x40) = uVar7;\n                        **(*0x20 + -0x48) = uVar7;\n                        *(puVar13 + 0x11) = 1;\n                        *(*0x20 + -0xd8) = 0x420085;\n                        fcn.00424380(uVar8);\n                        uVar8 = *(*0x20 + -0xa0);\n                        uVar14 = *(*0x20 + -0x50);\n                        puVar10 = *(*0x20 + -0x98);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = puVar13;\n                        *(*0x20 + -0x40) = *puVar13;\n                    }\n                    uVar12 = *(*0x20 + -0xb0);\n                    uVar3 = *(*0x20 + -0xb8);\n                    unaff_R15 = puVar10;\n                } while( true );\n            }\n            goto code_r0x004209f8;\n        }\n        goto code_r0x00420a7b;\n    }\n    goto code_r0x00420a8d;\ncode_r0x004209f3:\n    *(*0x20 + -0xd8) = 0x4209f8;\n    fcn.0042fe00();\ncode_r0x004209f8:\n    *(*0x20 + -0x68) = *(puVar10 + 0x58);\n    *(*0x20 + -0xd8) = 0x420a05;\n    fcn.004330a0();\n    *(*0x20 + -0xd8) = 0x420a16;\n    fcn.004339a0();\n    *(*0x20 + -0xd8) = 0x420a25;\n    fcn.004336a0();\n    *(*0x20 + -0xd8) = 0x420a36;\n    fcn.004339a0();\n    *(*0x20 + -0xd8) = 0x420a45;\n    fcn.004336a0();\n    *(*0x20 + -0xd8) = 0x420a56;\n    fcn.004339a0();\n    *(*0x20 + -0xd8) = 0x420a5f;\n    fcn.004336a0();\n    *(*0x20 + -0xd8) = 0x420a65;\n    fcn.00433300();\n    *(*0x20 + -0xd8) = 0x420a6a;\n    fcn.00433120();\n    *(*0x20 + -0xd8) = 0x420a7b;\n    fcn.004317e0();\ncode_r0x00420a7b:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xd8) = 0x420a8c;\n    in_RAX = fcn.004317e0();\ncode_r0x00420a8d:\n    *(puVar11 + 8) = in_RAX;\n    puVar11[0x10] = unaff_BL;\n    *(puVar11 + -8) = 0x420a9b;\n    fcn.00457320();\n    in_RAX = *(puVar11 + 8);\n    unaff_BL = puVar11[0x10];\n    *0x20 = puVar11;\n    goto code_r0x0041fec0;\n}\n",
        "token_count": 6387
    },
    "00422dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00422dc0(uint64_t param_1)\n\n{\n    int64_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t *piVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uchar (*pauVar14) [16];\n    uchar uVar15;\n    uint64_t unaff_RDI;\n    uint64_t uVar16;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar17;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        uVar15 = unaff_RDI;\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x18)) {\n            puVar13 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x19) = uVar15;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = iVar7;\n            if ((iVar7 == 0) || (0xf < unaff_RBX)) {\n                iVar7 = 0;\n                pauVar14 = NULL;\n                unaff_RBX = 0;\ncode_r0x00422f0a:\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x28) = pauVar14;\n                *(*0x20 + -0x40) = iVar7;\n                *(*0x20 + -0x98) = 0x422f25;\n                fcn.00409aa0();\n                iVar7 = *(*0x20 + -0x40);\n                if (iVar7 == 0) {\n                    *(*0x20 + -0x18) = *(*0x20 + 8) + 0x10;\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x422f5f;\n                    iVar7 = fcn.00426500();\n                    if (iVar7 != 0) {\n                        uVar8 = 0;\n                        goto code_r0x00422fce;\n                    }\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x422f7e;\n                    uVar8 = fcn.00423620();\n                    if (uVar6 == '\\0') {\n                        *(*0x20 + -0x98) = 0x422f93;\n                        fcn.00409cc0();\n                        return 0;\n                    }\n                    *(*0x20 + -0x50) = uVar8;\n                    uVar6 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x98) = 0x422fbc;\n                    iVar7 = fcn.00426500();\n                    if (iVar7 != 0) {\n                        uVar8 = *(*0x20 + -0x50);\n                        goto code_r0x00422fce;\n                    }\n                }\n                else {\n                    uVar8 = 0;\n                    uVar6 = *(*0x20 + -0x58);\ncode_r0x00422fce:\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x50) = uVar8;\n                    *(*0x20 + -0x40) = iVar7;\n                    iVar7 = *(*0x20 + -0x28);\n                    if (iVar7 == 0) {\n                        *(*0x20 + -0x98) = 0x422ff4;\n                        iVar7 = fcn.00422ca0();\n                    }\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x98) = 0x42300b;\n                    fcn.00409cc0();\n                    pauVar14 = *(*0x20 + -0x28);\n                    iVar7 = *(*0x20 + -0x40);\n                    uVar6 = *(*0x20 + -0x50);\n                    unaff_RBX = *(*0x20 + -0x58);\ncode_r0x0042301f:\n                    *(*0x20 + -0x60) = pauVar14;\n                    *(*0x20 + -0x40) = iVar7;\n                    *(*0x20 + -0x58) = unaff_RBX;\n                    *(*0x20 + -0x50) = uVar6;\n                    *pauVar14 = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *pauVar14[1] = 0;\n                    *(pauVar14[1] + 8) = iVar7;\n                    uVar6 = *(*0x20 + 0x10);\n                    *pauVar14[2] = uVar6;\n                    *pauVar14[6] = 0;\n                    pauVar14[6][2] = 0;\n                    *(pauVar14[6] + 8) = 0;\n                    *(pauVar14[7] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    pauVar14[6][4] = 0;\n                    *pauVar14[3] = 0;\n                    *(pauVar14[8] + 8) = 0;\n                    *(pauVar14[4] + 8) =\n                         CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                    *(*0x20 + -0x20) = pauVar14[6] + 3;\n                    pauVar14[6][3] = 0;\n                    *(*0x20 + -0x98) = 0x4230a8;\n                    cVar5 = fcn.00422b40(uVar6);\n                    if (cVar5 == '\\0') {\n                        iVar7 = *(*0x20 + -0x60);\n                    }\n                    else {\n                        iVar7 = *(*0x20 + -0x60);\n                        *(iVar7 + 100) = 1;\n                    }\n                    uVar12 = *(*0x20 + 0x10) << 0xd;\n                    *(*0x20 + -0x30) = uVar12;\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        uVar3 = *(*0x20 + 0x19);\n                        *(iVar7 + 0x62) = uVar3;\n                        if (uVar3 >> 1 == 0) {\n                            *(iVar7 + 0x68) = uVar12;\n                            *(iVar7 + 0x38) = 1;\n                            *(iVar7 + 0x5c) = 0;\ncode_r0x00423186:\n                            *(iVar7 + 0x30) = 0;\n                            *(iVar7 + 0x88) = 0;\n                            *(iVar7 + 0x40) = 0xffffffffffffffff;\n                            *(*0x20 + -0x98) = 0x4231aa;\n                            uVar6 = fcn.004244c0();\n                            *(*(*0x20 + -0x60) + 0x50) = uVar6;\n                            *(*0x20 + -0x98) = 0x4231bc;\n                            uVar6 = fcn.004247e0();\n                            iVar7 = *(*0x20 + -0x60);\n                            *(iVar7 + 0x48) = uVar6;\n                            *(iVar7 + 0x58) = *(*(*0x20 + 8) + 0x10138);\n                            **(*0x20 + -0x20) = 1;\n                            goto code_r0x004231fd;\n                        }\n                        unaff_RDI = uVar3 >> 1;\n                        if (unaff_RDI < 0x44) {\n                            uVar10 = *(unaff_RDI * 2 + 0x53d060);\n                            *(iVar7 + 0x68) = uVar10;\n                            if (uVar10 != 0) {\n                                *(iVar7 + 0x38) = uVar12 / uVar10;\n                                *(iVar7 + 0x5c) = *(unaff_RDI * 4 + 0x53dea0);\n                                goto code_r0x00423186;\n                            }\n                            goto code_r0x004235a5;\n                        }\n                    }\n                    else {\n                        *(iVar7 + 0x28) = 0;\n                        *(iVar7 + 0x38) = 0;\n                        *(iVar7 + 0x70) = *(iVar7 + 0x20) * 0x2000 + *(iVar7 + 0x18);\n                        **(*0x20 + -0x20) = 2;\ncode_r0x004231fd:\n                        if (*0x5a2044 == '\\0') {\n                            iVar11 = *(*0x20 + -0x58);\n                            uVar12 = 0;\n                            if (*0x5a2488 < *0x5a25d8 + iVar11) {\n                                uVar12 = (*0x5a25d8 + iVar11) - *0x5a2488;\n                            }\n                        }\n                        else {\n                            iVar11 = *(*0x20 + -0x58);\n                            uVar12 = 0;\n                        }\n                        if (*0x5a1d90 == 0xffffffffffffffff) {\n                            bVar17 = *(*0x20 + -0x10) == 0;\n                        }\n                        else {\n                            uVar10 = *(*0x20 + -0x50);\n                            if (uVar10 == 0) {\n                                bVar17 = *(*0x20 + -0x10) == 0;\n                            }\n                            else {\n                                uVar16 = *0x5a25b0 + *0x5a25c0 + uVar10;\n                                if (*0x5a1d90 < uVar16) {\n                                    uVar16 = uVar16 - *0x5a1d90;\n                                    if (uVar16 < uVar10) {\n                                        uVar10 = uVar16;\n                                    }\n                                    if (uVar12 < uVar10) {\n                                        uVar12 = uVar10;\n                                    }\n                                    bVar17 = *(*0x20 + -0x10) == 0;\n                                }\n                                else {\n                                    bVar17 = *(*0x20 + -0x10) == 0;\n                                }\n                            }\n                        }\n                        if ((!bVar17) && (uVar12 != 0)) {\n                            *(*0x20 + -0x48) = uVar12;\n                            *(*0x20 + -0x98) = 0x4232c9;\n                            fcn.0045b2e0(iVar11, iVar7);\n                            *(*0x20 + -0x68) = *(*0x20 + -0x90);\n                            uVar12 = *(*(*0x20 + -0x10) + 0x1228);\n                            *(*0x20 + -0x38) = uVar12 >> 0x3d;\n                            if (uVar12 >> 0x3d == 0) {\n                                *(*(*0x20 + -0x10) + 0x1228) =\n                                     *(*0x20 + -0x90) & 0x1fffffffffffffff | 0x6000000000000000;\n                            }\n                            *(*0x20 + -0x98) = 0x423349;\n                            fcn.0041dfe0(0x4dc298);\n                            *(*0x20 + -0x98) = 0x42334f;\n                            fcn.0045b2e0();\n                            in_XMM15_Da = 0;\n                            in_XMM15_Db = 0;\n                            in_XMM15_Dc = 0;\n                            in_XMM15_Dd = 0;\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            iVar7 = *(*0x20 + -0x90);\n                            if (*(*0x20 + -0x38) == '\\0') {\n                                *(*0x20 + -0x70) = iVar7;\n                                *(*0x20 + -0x98) = 0x42338d;\n                                fcn.00417e40(iVar7);\n                                iVar7 = *(*0x20 + -0x70);\n                            }\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10110) = *(*(*0x20 + 8) + 0x10110) + (iVar7 - *(*0x20 + -0x68));\n                            iVar11 = *(*0x20 + -0x58);\n                        }\n                        if (iVar11 != 0) {\n                            *(*0x20 + -0x98) = 0x4233d9;\n                            fcn.00413740(iVar11);\n                            *(*0x20 + -0x98) = 0x4233ed;\n                            fcn.0042ad40();\n                        }\n                        *(*0x20 + -0x98) = 0x423409;\n                        fcn.0042ad40();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x98) = 0x423426;\n                            fcn.0042ad40();\n                        }\n                        *(*0x20 + -0x98) = 0x423432;\n                        piVar9 = fcn.0042ae00();\n                        iVar7 = *(*0x20 + -0x58);\n                        LOCK();\n                        *piVar9 = *piVar9 + iVar7;\n                        LOCK();\n                        piVar1 = piVar9 + 1;\n                        iVar11 = *piVar1;\n                        *piVar1 = *piVar1 - iVar7;\n                        uVar3 = *(*0x20 + 0x18);\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                piVar9 = piVar9 + 2;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                            else {\n                                LOCK();\n                                piVar9 = piVar9 + 3;\n                                iVar11 = *piVar9;\n                                *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            piVar9 = piVar9 + 5;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            piVar9 = piVar9 + 4;\n                            iVar11 = *piVar9;\n                            *piVar9 = *piVar9 + *(*0x20 + -0x30);\n                        }\n                        *(*0x20 + -0x98) = 0x4234a5;\n                        fcn.0042aee0(uVar3, iVar11);\n                        unaff_RDI = *(*0x20 + -0x60);\n                        *(*0x20 + -0x98) = 0x4234c5;\n                        fcn.00422a40(*(*0x20 + 0x10));\n                        if (*(*0x20 + 0x18) != '\\0') {\ncode_r0x0042356b:\n                            *(*0x20 + -0x98) = 0x423570;\n                            fcn.00459120();\n                            return *(*0x20 + -0x60);\n                        }\n                        uVar12 = *(*(*0x20 + -0x60) + 0x18);\n                        uVar10 = uVar12 + 0x800000000000 >> 0x2a;\n                        if (uVar10 < 0x40) {\n                            puVar2 = *(*(uVar10 * 8 + 0x573fb0) + (uVar12 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                     (uVar12 >> 0x10 & 0x3f) + 0x21000;\n                            LOCK();\n                            *puVar2 = *puVar2 | 1 << (uVar12 >> 0xd & 7);\n                            LOCK();\n                            *(*(*0x20 + 8) + 0x10158) = *(*(*0x20 + 8) + 0x10158) + *(*0x20 + 0x10);\n                            goto code_r0x0042356b;\n                        }\n                        *(*0x20 + -0x98) = 0x4235a5;\n                        fcn.00459a00(0x40);\ncode_r0x004235a5:\n                        *(*0x20 + -0x98) = 0x4235aa;\n                        fcn.0042fe00();\n                    }\n                    *(*0x20 + -0x98) = 0x4235b7;\n                    fcn.004599e0(0x44);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x98) = 0x4235c8;\n                fcn.004317e0();\n            }\n            else {\n                if (*(iVar7 + 0x50) == 0) {\n                    *(*0x20 + -0x98) = 0x422e45;\n                    fcn.00409aa0();\n                    param_1 = *(*0x20 + 8) + 0x10;\n                    *(*0x20 + -0x98) = 0x422e59;\n                    uVar6 = fcn.00427b60();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x48) = uVar6;\n                    *(iVar7 + 0x50) = unaff_RBX;\n                    *(iVar7 + 0x58) = param_1;\n                    *(*0x20 + -0x98) = 0x422e7c;\n                    fcn.00409cc0();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x98) = 0x422e95;\n                iVar7 = fcn.00427760(param_1);\n                if (iVar7 == 0) {\n                    pauVar14 = NULL;\n                    goto code_r0x00422f0a;\n                }\n                iVar11 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar11 == 0) || (iVar4 = *(iVar11 + 0xdc8),  iVar4 == 0)) {\n                    pauVar14 = NULL;\ncode_r0x00422ee0:\n                    if (pauVar14 == NULL) goto code_r0x00422f0a;\n                    uVar6 = 0;\n                    goto code_r0x0042301f;\n                }\n                unaff_RDI = iVar4 - 1;\n                if (unaff_RDI < 0x80) {\n                    pauVar14 = *(iVar11 + 0xdc8 + iVar4 * 8);\n                    *(iVar11 + 0xdc8) = unaff_RDI;\n                    goto code_r0x00422ee0;\n                }\n            }\n            uVar15 = unaff_RDI;\n            param_1 = 0x80;\n            *(*0x20 + -0x98) = 0x4235d5;\n            in_RAX = fcn.004599e0(0x80);\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        puVar13[0x19] = uVar15;\n        *(puVar13 + -8) = 0x4235ee;\n        fcn.0045ba20();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        unaff_RDI = puVar13[0x19];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 4778
    },
    "00423a60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423a60(uchar param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    ulong arg1;\n    ulong *puVar5;\n    int64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                iVar4 = *(unaff_RBX + 0x60);\n                *(*0x20 + -0x2a) = iVar4;\n                if ((iVar4 == 0) && (*(in_RAX + 0x10138) == *(unaff_RBX + 0x58))) {\n                    LOCK();\n                    *(in_RAX + 0x10158) = *(in_RAX + 0x10158) - *(unaff_RBX + 0x20);\n                    uVar7 = *(unaff_RBX + 0x18);\n                    uVar9 = uVar7 + 0x800000000000 >> 0x2a;\n                    if (uVar9 < 0x40) {\n                        puVar2 = *(*(uVar9 * 8 + 0x573fb0) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                                 (uVar7 >> 0x10 & 0x3f) + 0x21000;\n                        LOCK();\n                        *puVar2 = *puVar2 & ~(1 << (uVar7 >> 0xd & 7));\ncode_r0x00423b54:\n                        *(*0x20 + -0x10) = *(unaff_RBX + 0x20) << 0xd;\n                        *(*0x20 + -0x58) = 0x423b70;\n                        fcn.0042ad40();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x58) = 0x423b8d;\n                            fcn.0042ad40();\n                        }\n                        *(*0x20 + -0x58) = 0x423b99;\n                        iVar6 = fcn.0042ae00();\n                        uVar3 = *(*0x20 + 0x18);\n                        uVar7 = uVar3;\n                        if (uVar3 < 2) {\n                            if (uVar3 == 0) {\n                                LOCK();\n                                puVar1 = iVar6 + 0x10;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar6 + 0x18;\n                                uVar7 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar3 == 2) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x28;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar3 == 3) {\n                            LOCK();\n                            puVar1 = iVar6 + 0x20;\n                            uVar7 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x423bff;\n                        fcn.0042aee0(uVar7);\n                        arg1 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x423c28;\n                        fcn.004267c0(arg1);\n                        puVar5 = *(*0x20 + 0x10);\n                        *(puVar5 + 99) = 0;\n                        iVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar6 == 0) {\ncode_r0x00423c69:\n                            iVar6 = *(*0x20 + 8);\n                            *(iVar6 + 0x16a68) = *(iVar6 + 0x16a68) - *(iVar6 + 0x16a38);\n                            *puVar5 = *(iVar6 + 0x16a50);\n                            *(iVar6 + 0x16a50) = puVar5;\n                            return;\n                        }\n                        uVar7 = *(iVar6 + 0xdc8);\n                        if (0x7f < uVar7) goto code_r0x00423c69;\n                        if (uVar7 < 0x80) {\n                            *(iVar6 + 0xdd0 + uVar7 * 8) = puVar5;\n                            *(iVar6 + 0xdc8) = *(iVar6 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x423ca8;\n                        fcn.004599e0(0x80);\n                        goto code_r0x00423ca8;\n                    }\n                    goto code_r0x00423cca;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) goto code_r0x00423b54;\ncode_r0x00423ca8:\n                    *(*0x20 + -0x58) = 0x423cb9;\n                    fcn.004317e0();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x423cca;\n                fcn.004317e0();\ncode_r0x00423cca:\n                *(*0x20 + -0x58) = 0x423cd7;\n                in_RAX = fcn.00459a00(0x40);\n            }\n            uVar7 = *(unaff_RBX + 0x58);\n            *(*0x20 + -0x18) = uVar7;\n            *(*0x20 + -0x20) = *(in_RAX + 0x10138);\n            *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n            *(*0x20 + -0x58) = 0x423cf8;\n            fcn.004330a0();\n            param_1 = uVar7;\n            *(*0x20 + -0x58) = 0x423d09;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x423d13;\n            fcn.00433960();\n            *(*0x20 + -0x58) = 0x423d25;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x423d2f;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x423d45;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x423d4f;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x423d65;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x423d6f;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x423d85;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x423d8f;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x423d94;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x423d99;\n            fcn.00433120();\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x58) = 0x423daa;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x423dbe;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2149
    },
    "00424380": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424380(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x424430;\n                fcn.00413f40(uVar2);\n                *(*0x20 + -0x38) = 0x42443e;\n                fcn.00409aa0();\n                *0x57a918 = *0x57a918 - *0x57a8e8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x57a900;\n                *(*0x20 + -0x38) = 0x424478;\n                *0x57a900 = puVar3;\n                fcn.00409cc0();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x4243cc;\n                fcn.00429120(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x4243da;\n                fcn.00409aa0();\n                *0x57a960 = *0x57a960 - *0x57a930;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x57a948;\n                *(*0x20 + -0x38) = 0x424413;\n                *0x57a948 = puVar3;\n                fcn.00409cc0();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x424493;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4244a8;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 760
    },
    "00428900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00428900(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x42894d;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x428958;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "00428960": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.00428960(ulong *arg1)\n\n{\n    ulong *in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *arg2;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    ulong *unaff_RDI;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \ncode_r0x00428960:\n    puVar4 = *0x54d5b8;\n    cVar7 = in_R8;\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x54d5b8 != NULL) {\ncode_r0x00428a12:\n            cVar7 = in_R8;\n            uVar8 = 0;\n            for (iVar3 = 0; iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n                uVar8 = (arg1[iVar3] + uVar8) * 0x401;\n                uVar8 = uVar8 >> 6 ^ uVar8;\n            }\n            uVar8 = (uVar8 + unaff_RBX) * 0x401;\n            uVar8 = (uVar8 >> 6 ^ uVar8) * 9;\n            uVar8 = uVar8 >> 0xb ^ uVar8;\n            if (uVar8 % 179999 < 179999) {\n                puVar4 = puVar4 + uVar8 % 179999;\n                puVar1 = *puVar4;\n                do {\n                    cVar7 = in_R8;\n                    if (puVar1 == NULL) {\n                        if (cVar7 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x30) = uVar8;\n                        *(*0x20 + -0x10) = puVar4;\n                        *(*0x20 + -0x50) = 0x428af3;\n                        fcn.00409aa0();\n                        arg1 = *(*0x20 + -0x10);\n                        arg2 = *arg1;\n                        iVar3 = *(*0x20 + 0x18);\n                        puVar4 = *(*0x20 + 0x20);\n                        unaff_RDI = *(*0x20 + 0x10);\n                        in_R8 = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + 8);\n                        puVar5 = in_RAX;\n                        do {\n                            if (arg2 == NULL) {\n                                *(*0x20 + -0x50) = 0x428b65;\n                                puVar1 = fcn.00428800();\n                                arg2 = puVar1[5];\n                                if (0x20 < arg2) {\n                                    iVar3 = 0x20;\n                                    *(*0x20 + -0x50) = 0x428c2b;\n                                    iVar2 = fcn.00459b00(arg1, arg2);\n                                    goto code_r0x00428c2b;\n                                }\n                                *(*0x20 + -0x20) = puVar1;\n                                if (*(*0x20 + 0x20) < arg2) {\n                                    arg2 = *(*0x20 + 0x20);\n                                }\n                                if (*(*0x20 + 0x18) != puVar1 + 6) {\n                                    *(*0x20 + -0x50) = 0x428ba5;\n                                    fcn.0045a340(arg2 << 3);\n                                    puVar1 = *(*0x20 + -0x20);\n                                }\n                                puVar1[3] = *(*0x20 + -0x30);\n                                puVar1[4] = *(*0x20 + 0x10);\n                                if (*(*0x20 + 8) == 1) {\n                                    puVar4 = 0x54d5e0;\n                                }\n                                else if (*(*0x20 + 8) == 3) {\n                                    puVar4 = 0x54d630;\n                                }\n                                else {\n                                    puVar4 = 0x54d5b0;\n                                }\n                                puVar5 = *(*0x20 + -0x10);\n                                *puVar1 = *puVar5;\n                                puVar1[1] = *puVar4;\n                                *puVar5 = puVar1;\n                                *puVar4 = puVar1;\n                                *(*0x20 + -0x50) = 0x428c11;\n                                fcn.00409cc0();\n                                return *(*0x20 + -0x20);\n                            }\n                            if (((arg2[2] == uVar8) && (arg2[3] == in_R8)) && (arg2[4] == unaff_RDI)) {\n                                puVar5 = arg2[5];\n                                if (0x20 < puVar5) {\n                                    unaff_RBX = 0x20;\n                                    *(*0x20 + -0x50) = 0x428c79;\n                                    in_RAX = puVar5;\n                                    iVar3 = fcn.00459b00(arg1, puVar5);\n                                    goto code_r0x00428c79;\n                                }\n                                if (puVar4 == puVar5) {\n                                    iVar2 = 0;\n                                    while( true ) {\n                                        if (puVar5 <= iVar2) {\n                                            *(*0x20 + -0x28) = arg2;\n                                            *(*0x20 + -0x50) = 0x428c5d;\n                                            fcn.00409cc0();\n                                            return *(*0x20 + -0x28);\n                                        }\n                                        puVar1 = arg2[iVar2 + 6];\n                                        if (*(iVar3 + iVar2 * 8) != puVar1) break;\ncode_r0x00428c2b:\n                                        iVar2 = iVar2 + 1;\n                                    }\n                                }\n                            }\n                            arg2 = *arg2;\n                        } while( true );\n                    }\n                    if (((puVar1[2] == in_RAX) && (puVar1[3] == uVar8)) && (puVar1[4] == unaff_RBX)) {\n                        puVar5 = puVar1[5];\n                        if (0x20 < puVar5) goto code_r0x00428ca5;\n                        if (unaff_RDI == puVar5) {\n                            iVar3 = 0;\n                            while( true ) {\n                                if (puVar5 <= iVar3) {\n                                    return puVar1;\n                                }\n                                if (arg1[iVar3] != puVar1[iVar3 + 6]) break;\ncode_r0x00428c79:\n                                iVar3 = iVar3 + 1;\n                            }\n                        }\n                    }\n                    puVar1 = *puVar1;\n                } while( true );\n            }\n            goto code_r0x00428caf;\n        }\n        *(*0x20 + 0x30) = cVar7;\n        *(*0x20 + -0x50) = 0x4289ab;\n        fcn.00409aa0();\n        puVar1 = *0x54d5b8;\n        if (*0x54d5b8 != NULL) {\ncode_r0x004289e0:\n            *0x54d5b8 = puVar1;\n            *(*0x20 + -0x18) = *0x54d5b8;\n            *(*0x20 + -0x50) = 0x4289f3;\n            fcn.00409cc0();\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            puVar4 = *(*0x20 + -0x18);\n            goto code_r0x00428a12;\n        }\n        *(*0x20 + -0x50) = 0x4289c9;\n        arg1 = *0x54d5b8;\n        puVar1 = fcn.00413640();\n        if (puVar1 != NULL) goto code_r0x004289e0;\n        goto code_r0x00428cb9;\n    }\n    goto code_r0x00428ccb;\ncode_r0x00428ca5:\n    *(*0x20 + -0x50) = 0x428caf;\n    fcn.00459b00(arg1, puVar5);\ncode_r0x00428caf:\n    arg1 = 0x2bf1f;\n    *(*0x20 + -0x50) = 0x428cb9;\n    fcn.004599e0(179999);\ncode_r0x00428cb9:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x50) = 0x428cca;\n    in_RAX = fcn.004317e0();\n    unaff_RSI = puVar4;\ncode_r0x00428ccb:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    puVar6[0x30] = cVar7;\n    *(puVar6 + -8) = 0x428cee;\n    fcn.00457320();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    in_R8 = puVar6[0x30];\n    *0x20 = puVar6;\n    goto code_r0x00428960;\n}\n",
        "token_count": 2414
    },
    "00428d20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00428d50)\n\nvoid fcn.00428d20(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if ((*0x5a1b8c & 1) != 0) {\n                *0x5a1b8c = *0x5a1b8c | 1;\n                return;\n            }\n            *(*0x20 + -0x14) = *0x5a1b8c;\n            *(*0x20 + -0x30) = 0x428d74;\n            *0x5a1b8c = *0x5a1b8c | 1;\n            fcn.00409aa0();\n            uVar1 = (*(*0x20 + -0x14) >> 1) % 3;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x10) = uVar1 * 8 + 0x5a1dd0;\n                *(*0x20 + -0x30) = 0x428daf;\n                fcn.00409aa0();\n                *(*0x20 + -0x30) = 0x428db8;\n                fcn.00428e00();\n                *(*0x20 + -0x30) = 0x428dc5;\n                fcn.00409cc0();\n                *(*0x20 + -0x30) = 0x428dd3;\n                fcn.00409cc0();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x428df1;\n            fcn.004599e0(3);\n        }\n        *(puVar2 + -8) = 0x428df7;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 549
    },
    "00428e00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00428e00(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_EAX;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x10) = uVar1;\n                iVar3 = *0x54d5e0;\n                while (iVar3 != 0) {\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x428e46;\n                    piVar2 = fcn.004288a0();\n                    uVar1 = *(*0x20 + -0x10);\n                    *piVar2 = *piVar2 + piVar2[uVar1 * 4 + 4];\n                    piVar2[1] = piVar2[1] + piVar2[uVar1 * 4 + 5];\n                    piVar2[2] = piVar2[2] + piVar2[uVar1 * 4 + 6];\n                    piVar2[3] = piVar2[3] + piVar2[uVar1 * 4 + 7];\n                    piVar2[uVar1 * 4 + 4] = 0;\n                    piVar2[uVar1 * 4 + 5] = 0;\n                    piVar2[uVar1 * 4 + 6] = 0;\n                    piVar2[uVar1 * 4 + 7] = 0;\n                    iVar3 = *(*(*0x20 + -0x18) + 8);\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x30) = 0x428ebf;\n            in_EAX = fcn.004599e0(3);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x428ec9;\n        fcn.00457320();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "00428ee0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428ee0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar3;\n    uint32_t uVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xf0 && *0x20 + -0xf0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x170;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x180) = *0x20 + -8;\n            *(*0x20 + -0x178) = 0x428f2f;\n            fcn.00459c34();\n            unaff_RBP = *(*0x20 + -0x180);\n            unaff_RBX = *0x20 + -0x130;\n            *(*0x20 + -0x178) = 0x428f4a;\n            arg1 = fcn.00451960(0x20);\n            if (arg1 < 0x21) {\n                *(*0x20 + -0x13c) = (*0x5a1b8c >> 1) + (((*0x5a1b8c >> 1) + 2) / 3) * -3;\n                unaff_RBX = *(*0x20 + 0x10);\n                *(*0x20 + -0x178) = 0x428f9d;\n                uVar3 = fcn.00428960(*0x20 + -0x130);\n                *(*0x20 + -0x138) = uVar3;\n                *(*0x20 + -0x178) = 0x428fa7;\n                uVar3 = fcn.004288a0();\n                uVar4 = *(*0x20 + -0x13c) + 2;\n                if (uVar4 < 3) {\n                    *(*0x20 + -0x140) = uVar4;\n                    *(*0x20 + -0x30) = uVar3;\n                    *(*0x20 + -0x28) = uVar4 * 8 + 0x5a1dd0;\n                    *(*0x20 + -0x178) = 0x428fdf;\n                    fcn.00409aa0();\n                    uVar4 = *(*0x20 + -0x140);\n                    iVar2 = *(*0x20 + -0x30);\n                    piVar1 = iVar2 + 0x20 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + 1;\n                    piVar1 = iVar2 + 0x30 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                    *(*0x20 + -0x178) = 0x429010;\n                    fcn.00409cc0();\n                    *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x20) = 0x4290e0;\n                    *(*0x20 + -0x18) = *(*0x20 + 8);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x138);\n                    *(*0x20 + -0x170) = *0x20 + -0x20;\n                    *(*0x20 + -0x178) = 0x429065;\n                    fcn.004571e0();\n                    return;\n                }\n                *(*0x20 + -0x178) = 0x429095;\n                arg1 = fcn.004599e0(3);\n            }\n            *(*0x20 + -0x178) = 0x4290a5;\n            in_RAX = fcn.00459a20(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x4290b5;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1138
    },
    "00429120": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429120(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x5a1b8c;\n            *(*0x20 + -0x38) = 0x42914d;\n            uVar3 = fcn.004288a0();\n            uVar4 = (*(*0x20 + -0x20) >> 1) + 1;\n            unaff_RBX = uVar4 / 3;\n            uVar4 = (*(*0x20 + -0x20) >> 1) + (uVar4 / 3) * -3 + 1;\n            if (uVar4 < 3) {\n                *(*0x20 + -0x1c) = uVar4;\n                *(*0x20 + -0x18) = uVar3;\n                *(*0x20 + -0x10) = uVar4 * 8 + 0x5a1dd0;\n                *(*0x20 + -0x38) = 0x429191;\n                fcn.00409aa0();\n                uVar4 = *(*0x20 + -0x1c);\n                iVar2 = *(*0x20 + -0x18);\n                piVar1 = iVar2 + 0x28 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar2 + 0x38 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x38) = 0x4291b9;\n                fcn.00409cc0();\n                return;\n            }\n            *(*0x20 + -0x38) = 0x4291cf;\n            in_RAX = fcn.004599e0(3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x4291df;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "0042ae00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0042ae00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.00409aa0(in_RAX + 0xdd0);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x227c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x0042ae92;\n    }\n    uVar5 = *(in_RAX + 0xdc8) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x498;\n    }\n    fcn.004599e0(3);\ncode_r0x0042ae92:\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004317e0();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 337
    },
    "0042ca40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042ca40(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x54d570;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42ca9e;\n            fcn.0042ec20();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42cae5;\n            iVar3 = fcn.0042eac0();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42cb10;\n            fcn.0042d300(0x21);\n            uVar5 = *0x5a1d38;\n            if (*0x5a1d38 < 0x106) {\n                *(*0x20 + -0x18) = *0x5a1d38;\n                *(*0x20 + -0x78) = 0x42cb45;\n                fcn.0045a340(*0x5a1d38);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042ccc5;\n                    *(uVar5 + 0x5a2840) = *((*(iVar4 + 0x5a2a2a) >> 4) + 0x480d05);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042ccb5;\n                    *(uVar5 + 0x5a2841) = *((*(iVar4 + 0x5a2a2a) & 0xf) + 0x480d05);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x5a2840;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42cc33;\n                        fcn.0042ee20();\n                        *(*0x20 + -0x78) = 0x42cc4c;\n                        fcn.0045ae80();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x5a1b41 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42cc77;\n                        fcn.004330a0();\n                        *(*0x20 + -0x78) = 0x42cc88;\n                        fcn.004339a0();\n                        *(*0x20 + -0x78) = 0x42cc8d;\n                        fcn.00433120();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x5a2840) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42ccb5;\n                fcn.004599e0(0x20b);\ncode_r0x0042ccb5:\n                *(*0x20 + -0x78) = 0x42ccc5;\n                fcn.004599e0(0x20b);\ncode_r0x0042ccc5:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42ccd2;\n                fcn.004599e0(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42ccdc;\n            fcn.00459a40(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42cce5;\n        fcn.00457320();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1539
    },
    "00432300": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00432300(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00432300:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar7 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar7 == 0) || (*(iVar7 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            iVar7 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar4) {\n                                    bVar11 = *(iVar4 + 0x300) == iVar5;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x432418;\n                                cVar2 = fcn.00435ba0(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar4 = *(*0x20 + -0x20);\n                                    iVar5 = *(*0x20 + -0x50);\n                                    iVar7 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + 8);\n                                    *(iVar7 + 0xb1) = 0x101;\n                                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                                    iVar7 = *(iVar7 + 0x30);\n                                    *(*0x20 + -0x10) = iVar7;\n                                    iVar5 = *(iVar7 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar5;\n                                    if (*(*0x20 + -0x20) == iVar7) {\n                                        bVar11 = iVar5 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x432485;\n                                    fcn.004357e0(2);\n                                    if ((*0x5a2018 == 0) && (*(*0x20 + -0x59) != '\\0')) {\n                                        *(*0x20 + -0x78) = 0x43249d;\n                                        fcn.0045b2e0();\n                                        iVar7 = *(*0x20 + -0x38);\n                                        if (iVar7 <= *(*0x20 + -0x70)) {\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x78) = 0x4324ce;\n                                            fcn.0042f140();\n                                            iVar7 = *(*0x20 + -0x48) + 5000;\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar4 = *(*0x20 + -0x10);\n                                    iVar5 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x004325f0;\n                        }\n                        if (uVar10 < 3) goto code_r0x0043255a;\n                    }\ncode_r0x004325b2:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x4325c6;\n                    cVar2 = fcn.00435ba0(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar4 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + -0x50);\n                    iVar7 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x43257a;\n                            cVar2 = fcn.00436140(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x004325b2;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar4 = *(*0x20 + -0x20);\n                            iVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x0043255a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00432713;\n                        }\n                    }\n                }\ncode_r0x004325f0:\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x20) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x43260c;\n                    fcn.0045b2e0();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x432635;\n                fcn.0045b2e0();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x432665;\n                    fcn.00459100();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x4dc540;\n                    *(*0x20 + -0x78) = 0x432695;\n                    fcn.004571e0();\n                    *(*0x20 + -0x78) = 0x4326ae;\n                    fcn.0045b2e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                iVar5 = *(*0x20 + -0x50);\n                iVar4 = *(*0x20 + -0x20);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x0043282b;\n    }\n    goto code_r0x0043283d;\ncode_r0x00432713:\n    *(*0x20 + -0x18) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x432733;\n    fcn.004330a0();\n    *(*0x20 + -0x78) = 0x432745;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x43274f;\n    fcn.00433920();\n    *(*0x20 + -0x78) = 0x432765;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x43276f;\n    fcn.004337a0();\n    *(*0x20 + -0x78) = 0x432785;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x432790;\n    fcn.004336a0();\n    *(*0x20 + -0x78) = 0x432795;\n    fcn.00433300();\n    *(*0x20 + -0x78) = 0x43279a;\n    fcn.00433120();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x18) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n    *(*0x20 + -0x78) = 0x4327ba;\n    fcn.004330a0();\n    *(*0x20 + -0x78) = 0x4327cb;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x4327d5;\n    fcn.00433920();\n    *(*0x20 + -0x78) = 0x4327e6;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x4327f0;\n    fcn.004337a0();\n    *(*0x20 + -0x78) = 0x432805;\n    fcn.004339a0();\n    *(*0x20 + -0x78) = 0x432810;\n    fcn.004336a0();\n    *(*0x20 + -0x78) = 0x432815;\n    fcn.00433300();\n    *(*0x20 + -0x78) = 0x43281a;\n    fcn.00433120();\n    *(*0x20 + -0x78) = 0x43282b;\n    fcn.004317e0();\ncode_r0x0043282b:\n    *(*0x20 + -0x78) = 0x43283c;\n    in_RAX = fcn.004317e0();\ncode_r0x0043283d:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x432847;\n    fcn.0045ba20();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00432300;\n}\n",
        "token_count": 3000
    },
    "00432b60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00432b60(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x53a348)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x432c07;\n            iVar4 = fcn.004490a0();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x432c29;\n            iVar3 = fcn.00449f00(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x27) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x27 + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x130) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x25) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x27;\n            *(*0x20 + -0x78) = 0x432caf;\n            piVar5 = fcn.00449820();\n            if (*(*(*0x20 + -0x10) + 0x27) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x00432d6a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x432db4;\n                        cVar2 = fcn.004025a0(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x432e6a;\n                    fcn.00449040();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x432ed3;\n                fcn.004317e0();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x432d25;\n                iVar3 = fcn.00449e60(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x00432d6a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar3 * 0x14);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x432d54;\n                    piVar5 = fcn.00449960(uVar1);\n                    goto code_r0x00432d6a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x432edd;\n            in_RAX = fcn.004599e0(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x432ef7;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1939
    },
    "004357e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004357e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x43584b;\n                fcn.004330a0();\n                *(*0x20 + -0x48) = 0x43585c;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x435866;\n                fcn.00433920();\n                *(*0x20 + -0x48) = 0x435877;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x435885;\n                fcn.00433800();\n                *(*0x20 + -0x48) = 0x435896;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x4358a5;\n                fcn.00433800();\n                *(*0x20 + -0x48) = 0x4358aa;\n                fcn.00433300();\n                *(*0x20 + -0x48) = 0x4358af;\n                fcn.00433120();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x4358d5;\n                fcn.004330a0();\n                *(*0x20 + -0x48) = 0x4358e6;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x4358f0;\n                fcn.00433920();\n                *(*0x20 + -0x48) = 0x435905;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x43590f;\n                fcn.004337a0();\n                *(*0x20 + -0x48) = 0x435925;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x435930;\n                fcn.004336a0();\n                *(*0x20 + -0x48) = 0x435935;\n                fcn.00433300();\n                *(*0x20 + -0x48) = 0x43593a;\n                fcn.00433120();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x43595a;\n                fcn.004330a0();\n                *(*0x20 + -0x48) = 0x43596b;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x435975;\n                fcn.00433920();\n                *(*0x20 + -0x48) = 0x435986;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x435990;\n                fcn.004337a0();\n                *(*0x20 + -0x48) = 0x4359a5;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x4359b0;\n                fcn.004336a0();\n                *(*0x20 + -0x48) = 0x4359b5;\n                fcn.00433300();\n                *(*0x20 + -0x48) = 0x4359ba;\n                fcn.00433120();\n                *(*0x20 + -0x48) = 0x4359cb;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x48) = 0x4359d0;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x4359e5;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x4359ef;\n            fcn.00433920();\n            *(*0x20 + -0x48) = 0x435a05;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435a10;\n            fcn.00433800();\n            *(*0x20 + -0x48) = 0x435a25;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435a30;\n            fcn.00433800();\n            *(*0x20 + -0x48) = 0x435a35;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x435a3a;\n            fcn.00433120();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x435a65;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x435a76;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435a85;\n            fcn.00433920();\n            *(*0x20 + -0x48) = 0x435a96;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435aa5;\n            fcn.004337a0();\n            *(*0x20 + -0x48) = 0x435ab6;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435ac5;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x435aca;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x435acf;\n            fcn.00433120();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x435aef;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x435b05;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435b0f;\n            fcn.00433920();\n            *(*0x20 + -0x48) = 0x435b25;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435b2f;\n            fcn.004337a0();\n            *(*0x20 + -0x48) = 0x435b45;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x435b50;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x435b55;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x435b5a;\n            fcn.00433120();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x435b6b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x435b7e;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2270
    },
    "00435ba0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00435ba0(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                bVar3 = unaff_EBX == *puVar1;\n                if (bVar3) {\n                    *puVar1 = arg1;\n                }\n                else {\n                    unaff_EBX = *puVar1;\n                }\n                return unaff_EBX & 0xffffff00 | bVar3;\n            }\n            *(*0x20 + -0x20) = 0x435bf1;\n            fcn.004330a0();\n            *(*0x20 + -0x20) = 0x435c05;\n            fcn.004339a0();\n            *(*0x20 + -0x20) = 0x435c10;\n            fcn.00433800();\n            *(*0x20 + -0x20) = 0x435c25;\n            fcn.004339a0();\n            *(*0x20 + -0x20) = 0x435c30;\n            fcn.00433800();\n            *(*0x20 + -0x20) = 0x435c35;\n            fcn.00433300();\n            *(*0x20 + -0x20) = 0x435c3a;\n            fcn.00433120();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x435c4b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_EBX;\n        *(puVar2 + 0x14) = arg1;\n        *(puVar2 + -8) = 0x435c5e;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_EBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x14);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 692
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004394e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.004394e0(void)\n\n{\n    uint32_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uchar uVar10;\n    uint64_t arg1;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar6;\n            iVar5 = 0;\n            iVar8 = 0;\n            uVar10 = 0;\n            while( true ) {\n                if (3 < iVar5) {\n                    return 0;\n                }\n                uVar11 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar11) * ZEXT816(uVar11 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar11;\n                if (*0x54de60 == 0) goto code_r0x00439832;\n                uVar11 = (SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0)) & 0xffffffff;\n                if (*0x54de70 == 0) goto code_r0x0043982d;\n                uVar12 = (uVar11 / *0x54de60) % (*0x54de70 & 0xffffffff);\n                arg1 = *0x54de70;\n                if (*0x54de70 <= uVar12) break;\n                *(*0x20 + -0x50) = iVar5;\n                uVar1 = *(*0x54de68 + uVar12 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x54de60;\n                *(*0x20 + -0x20) = uVar11 % *0x54de60;\n                *(*0x20 + -0x1c) = uVar1;\n                uVar11 = uVar1 & 0xffffff00 | iVar5 == 3;\n                *(*0x20 + -0x5b) = iVar5 == 3;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x54e780 != 0) {\n                        return 0;\n                    }\n                    uVar1 = *(*0x20 + -0x20);\n                    arg1 = *0x54dd18;\n                    if (*0x54dd18 <= uVar1) {\ncode_r0x0043981d:\n                        *(*0x20 + -0x80) = 0x439825;\n                        fcn.004599e0(arg1);\n                        goto code_r0x00439825;\n                    }\n                    arg1 = *(*0x54dd10 + uVar1 * 8);\n                    uVar12 = *0x54dd10;\n                    if (uVar6 != arg1) {\n                        if (iVar5 != 3) {\n                            bVar13 = false;\ncode_r0x00439680:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x5a) = uVar10;\n                                *(*0x20 + -0x80) = 0x4396a5;\n                                iVar3 = fcn.0043a280();\n                                if (in_RAX == 0) {\n                                    iVar7 = *(*0x20 + -0x30);\ncode_r0x004396c0:\n                                    iVar8 = iVar7;\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + -0x30);\n                                    iVar8 = in_RAX;\n                                    if ((iVar7 != 0) && (iVar7 <= in_RAX)) goto code_r0x004396c0;\n                                }\n                                if (iVar5 == '\\0') {\n                                    uVar10 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar3;\n                                    *(*0x20 + -0x38) = iVar8;\n                                    *(*0x20 + -0x80) = 0x4396e5;\n                                    iVar5 = fcn.00440160();\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar3 = *(*0x20 + -0x58);\n                                    iVar8 = *(*0x20 + -0x38);\n                                    uVar10 = 1;\n                                }\n                                uVar11 = *(*0x20 + -0x5b);\n                                arg1 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x10);\n                                iVar5 = *(*0x20 + -0x50);\n                                in_RAX = iVar3;\n                            }\n                            uVar4 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x54dd98;\n                            if (uVar4 < *0x54dd98) {\n                                uVar1 = *(*0x54dd90 + uVar4 * 4);\n                                uVar12 = uVar1;\n                                if ((uVar1 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar8;\n                                    *(*0x20 + -0x59) = uVar10;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x439772;\n                                    iVar5 = fcn.004404c0(uVar11);\n                                    if (iVar5 != 0) {\n                                        return iVar5;\n                                    }\n                                    iVar5 = *(*0x20 + -0x50);\n                                    uVar11 = *(*0x20 + -0x5b);\n                                    iVar8 = *(*0x20 + -0x40);\n                                    uVar10 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar6 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043979f;\n                            }\n                            goto code_r0x0043980d;\n                        }\n                        uVar12 = *0x54ddd8;\n                        if (uVar1 >> 5 < *0x54ddd8) {\n                            bVar13 = (*(*0x54ddd0 + (uVar1 >> 5) * 4) >> (uVar1 & 0x1f) & 1) != 0;\n                            goto code_r0x00439680;\n                        }\ncode_r0x00439815:\n                        *(*0x20 + -0x80) = 0x43981d;\n                        fcn.004599e0(uVar12);\n                        goto code_r0x0043981d;\n                    }\ncode_r0x0043979f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                    arg1 = uVar1;\n                    if (uVar1 == 0) {\n                        *(*0x20 + -0x80) = 0x43980d;\n                        fcn.0042fe00();\ncode_r0x0043980d:\n                        *(*0x20 + -0x80) = 0x439815;\n                        fcn.004599e0(uVar12);\n                        goto code_r0x00439815;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar1;\n                }\n                iVar5 = iVar5 + 1;\n            }\ncode_r0x00439825:\n            *(*0x20 + -0x80) = 0x43982d;\n            fcn.004599e0(arg1);\ncode_r0x0043982d:\n            *(*0x20 + -0x80) = 0x439832;\n            fcn.0042fe00();\ncode_r0x00439832:\n            *(*0x20 + -0x80) = 0x439837;\n            in_RAX = fcn.0042fe00();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x439845;\n        fcn.00457320();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2141
    },
    "00443100": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004431d3)\n// WARNING: Removing unreachable block (ram,0x004431f4)\n\nulong fcn.00443100(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x5a1fbc + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x5a1f94) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x5a1f88);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x5a1f88;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x5a1fbc = *0x5a1fbc + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x5a1fb8 == 0) {\n                    LOCK();\n                    *0x5a1fb8 = 2;\ncode_r0x00443218:\n                    LOCK();\n                    *0x5a1fbc = *0x5a1fbc + -1;\n                    return 1;\n                }\n                if (*0x5a1fb8 == 1) {\n                    LOCK();\n                    *0x5a1fb8 = 0;\n                    *(*0x20 + -0x20) = 0x443211;\n                    fcn.00409da0();\n                    goto code_r0x00443218;\n                }\n                if (*0x5a1fb8 == 2) goto code_r0x00443218;\n                *(*0x20 + -0x20) = 0x443248;\n                fcn.004317e0();\n                iVar3 = *0x5a1fbc;\n            }\n            *0x5a1fbc = iVar3;\n            *(*0x20 + -0x20) = 0x443252;\n            in_EAX = fcn.004599e0(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x44325c;\n        fcn.00457320();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 782
    },
    "0044ce20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ce20(int64_t *arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t uVar5;\n    code *unaff_RDI;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = unaff_RDI;\n            *(*0x20 + 0x40) = unaff_SIL;\n            *(*0x20 + 0x44) = arg3;\n            *(*0x20 + 0x48) = arg4;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar1 = *unaff_RDI;\n            *(*0x20 + -0x28) = in_RAX + 0x34;\n            if ((iVar1 == 0) || (-(*(iVar1 + 0x10) + -0xfbe8) < in_RAX + 0x34)) {\n                *(*0x20 + -0x60) = 0x44ce8c;\n                iVar1 = fcn.0044d560();\n                arg1 = *(*0x20 + 0x38);\n                *arg1 = iVar1;\n            }\n            *(*0x20 + -0x20) = iVar1;\n            *(*0x20 + -0x60) = 0x44cea5;\n            fcn.004593e0(arg1, iVar1);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            unaff_RBX = *(*0x20 + -0x20);\n            uVar2 = (*(*0x20 + -0x58) >> 6) - *(unaff_RBX + 8);\n            uVar3 = *(*0x20 + -0x58) >> 6;\n            if (uVar2 == 0) {\n                uVar3 = *(unaff_RBX + 8) + 1;\n            }\n            *(unaff_RBX + 8) = uVar3;\n            if (uVar2 == 0) {\n                uVar2 = 1;\n            }\n            uVar3 = *(*0x20 + 0x44);\n            if (*(*0x20 + 0x44) == 0) {\n                uVar5 = *(*0x20 + 0x48);\n                if (-1 < uVar5) goto code_r0x0044cf09;\n                uVar8 = *(*0x20 + 0x10);\n                uVar10 = uVar8;\n            }\n            else {\n                uVar5 = *(*0x20 + 0x48);\ncode_r0x0044cf09:\n                uVar8 = *(*0x20 + 0x10);\n                uVar10 = uVar8 + 1;\n            }\n            uVar6 = uVar10;\n            if (3 < uVar10) {\n                uVar6 = 3;\n            }\n            arg4 = *(unaff_RBX + 0x10);\n            uVar10 = uVar6;\n            uVar9 = *(*0x20 + 0x40);\n            arg3._0_4_ = uVar6 << 6 | *(*0x20 + 0x40);\n            if (arg4 < 0xfbe8) {\n                *(unaff_RBX + 0x418 + arg4) = arg3;\n                uVar7 = *(unaff_RBX + 0x10) + 1;\n                *(unaff_RBX + 0x10) = uVar7;\n                if (uVar6 != '\\x03') {\n                    unaff_RDI = NULL;\n                    goto code_r0x0044cf72;\n                }\n                unaff_RDI = NULL;\ncode_r0x0044d264:\n                if (unaff_RDI < pe_nt_image_headers64) {\n                    if (uVar7 < 0xfbe8) {\n                        *(unaff_RBX + 0x418 + uVar7) = unaff_RDI;\n                        uVar10 = uVar7 + 1;\n                        *(unaff_RBX + 0x10) = uVar10;\n                        unaff_RDI = unaff_RBX + uVar7 + 0x418;\ncode_r0x0044cf72:\n                        uVar7 = *(unaff_RBX + 0x10);\n                        while (0x7f < uVar2) {\n                            if (0xfbe7 < uVar7) goto code_r0x0044d23f;\n                            *(unaff_RBX + 0x418 + uVar7) = uVar2 | 0x80;\n                            uVar7 = uVar7 + 1;\n                            uVar2 = uVar2 >> 7;\n                            uVar10 = uVar2;\n                        }\n                        if (uVar7 < 0xfbe8) {\n                            *(unaff_RBX + 0x418 + uVar7) = uVar2;\n                            *(unaff_RBX + 0x10) = uVar7 + 1;\n                            uVar7 = *(*0x20 + 8);\n                            iVar1 = 0;\n                            do {\n                                if (iVar1 < uVar8) {\n                                    uVar10 = *(uVar7 + iVar1 * 8);\n                                    uVar9 = *(unaff_RBX + 0x10);\n                                    goto code_r0x0044d200;\n                                }\n                                if (uVar3 == 0) {\n                                    if (uVar5 != 0) {\n                                        if (uVar5 < 1) goto code_r0x0044d062;\n                                        *(*0x20 + -0x30) = arg4;\n                                        *(*0x20 + -0x18) = unaff_RDI;\n                                        unaff_RBX = unaff_RBX + 0x18;\n                                        unaff_RDI = pe_nt_image_headers64;\n                                        *(*0x20 + -0x60) = 0x44d055;\n                                        uVar3 = fcn.0044d340(0x80);\n                                        uVar8 = *(*0x20 + -0x20);\n                                        uVar7 = *(uVar8 + 0x10);\n                                        goto code_r0x0044d0b1;\n                                    }\n                                    uVar8 = *(unaff_RBX + 0x10);\n                                    uVar3 = 0;\n                                    goto code_r0x0044d129;\n                                }\n                                uVar8 = uVar3 & 0xffffffff;\n                                uVar5 = *(unaff_RBX + 0x10);\ncode_r0x0044d18e:\n                                if (uVar8 < 0x80) {\n                                    if (uVar5 < 0xfbe8) {\n                                        *(unaff_RBX + 0x418 + uVar5) = uVar8;\n                                        *(unaff_RBX + 0x10) = uVar5 + 1;\ncode_r0x0044d062:\n                                        do {\n                                            iVar1 = *(unaff_RBX + 0x10) - arg4;\n                                            uVar8 = *(*0x20 + -0x28);\n                                            if (iVar1 <= uVar8) {\n                                                if (unaff_RDI != NULL) {\n                                                    *unaff_RDI = iVar1 + -2;\n                                                }\n                                                return;\n                                            }\n                                            unaff_RBX = 0x1d;\n                                            *(*0x20 + -0x60) = 0x44d099;\n                                            uVar3 = fcn.004317e0();\n                                            do {\n                                                *(uVar8 + 0x418 + uVar7) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar7 = uVar7 + 1;\ncode_r0x0044d0b1:\n                                                if (uVar3 < 0x80) {\n                                                    if (uVar7 < 0xfbe8) {\n                                                        *(uVar8 + 0x418 + uVar7) = uVar3;\n                                                        *(uVar8 + 0x10) = uVar7 + 1;\n                                                        unaff_RDI = *(*0x20 + -0x18);\n                                                        arg4 = *(*0x20 + -0x30);\n                                                        unaff_RBX = uVar8;\n                                                        goto code_r0x0044d062;\n                                                    }\n                                                    *(*0x20 + -0x60) = 0x44d105;\n                                                    fcn.004599e0(0xfbe8);\n                                                    break;\n                                                }\n                                            } while (uVar7 < 0xfbe8);\n                                            *(*0x20 + -0x60) = 0x44d112;\n                                            uVar3 = fcn.004599e0(0xfbe8);\n                                            while( true ) {\n                                                *(unaff_RBX + 0x418 + uVar8) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar8 = uVar8 + 1;\n                                                uVar5 = uVar3;\ncode_r0x0044d129:\n                                                if (uVar3 < 0x80) break;\n                                                if (0xfbe7 < uVar8) goto code_r0x0044d16a;\n                                            }\n                                            if (0xfbe7 < uVar8) goto code_r0x0044d15d;\n                                            *(unaff_RBX + 0x418 + uVar8) = uVar3;\n                                            *(unaff_RBX + 0x10) = uVar8 + 1;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x60) = 0x44d1d5;\n                                    fcn.004599e0(0xfbe8);\n                                }\n                                else if (uVar5 < 0xfbe8) goto code_r0x0044d177;\n                                uVar3 = 0xfbe8;\n                                *(*0x20 + -0x60) = 0x44d1e5;\n                                iVar1 = fcn.004599e0(0xfbe8);\n                                while( true ) {\n                                    *(unaff_RBX + 0x418 + uVar9) = uVar10 | 0x80;\n                                    uVar10 = uVar10 >> 7;\n                                    uVar9 = uVar9 + 1;\ncode_r0x0044d200:\n                                    if (uVar10 < 0x80) break;\n                                    if (0xfbe7 < uVar9) goto code_r0x0044d225;\n                                }\n                                if (0xfbe7 < uVar9) goto code_r0x0044d218;\n                                *(unaff_RBX + 0x418 + uVar9) = uVar10;\n                                uVar10 = uVar9 + 1;\n                                *(unaff_RBX + 0x10) = uVar10;\n                                iVar1 = iVar1 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044d232;\n                    }\n                    *(*0x20 + -0x60) = 0x44d2b6;\n                    fcn.004599e0(0xfbe8);\n                }\n                else if (uVar7 < 0xfbe8) goto code_r0x0044d24c;\n                arg3._0_4_ = uVar7;\n                *(*0x20 + -0x60) = 0x44d2c5;\n                fcn.004599e0(0xfbe8);\n            }\n            unaff_SIL = uVar5;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x60) = 0x44d2d2;\n            in_RAX = fcn.004599e0(0xfbe8);\n        }\n        *(puVar4 + 0x20) = in_RAX;\n        *(puVar4 + 0x28) = unaff_RBX;\n        *(puVar4 + 0x30) = arg1;\n        *(puVar4 + 0x38) = unaff_RDI;\n        puVar4[0x40] = unaff_SIL;\n        *(puVar4 + 0x44) = arg3;\n        *(puVar4 + 0x48) = arg4;\n        *(puVar4 + -8) = 0x44d2fa;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 0x20);\n        unaff_RBX = *(puVar4 + 0x28);\n        arg1 = *(puVar4 + 0x30);\n        unaff_RDI = *(puVar4 + 0x38);\n        unaff_SIL = puVar4[0x40];\n        arg3._0_4_ = *(puVar4 + 0x44);\n        arg4 = *(puVar4 + 0x48);\n        *0x20 = puVar4;\n    } while( true );\ncode_r0x0044d15d:\n    *(*0x20 + -0x60) = 0x44d16a;\n    fcn.004599e0(0xfbe8);\ncode_r0x0044d16a:\n    *(*0x20 + -0x60) = 0x44d177;\n    fcn.004599e0(0xfbe8);\ncode_r0x0044d177:\n    *(unaff_RBX + 0x418 + uVar5) = uVar8 | 0x80;\n    uVar8 = uVar8 >> 7;\n    uVar5 = uVar5 + 1;\n    uVar7 = uVar8;\n    goto code_r0x0044d18e;\ncode_r0x0044d218:\n    *(*0x20 + -0x60) = 0x44d225;\n    fcn.004599e0(0xfbe8);\ncode_r0x0044d225:\n    *(*0x20 + -0x60) = 0x44d232;\n    fcn.004599e0(0xfbe8);\ncode_r0x0044d232:\n    *(*0x20 + -0x60) = 0x44d23f;\n    fcn.004599e0(0xfbe8);\ncode_r0x0044d23f:\n    uVar3 = 0xfbe8;\n    *(*0x20 + -0x60) = 0x44d24c;\n    uVar2 = fcn.004599e0(0xfbe8);\ncode_r0x0044d24c:\n    *(unaff_RBX + 0x418 + uVar7) = unaff_RDI | 0x80;\n    unaff_RDI = unaff_RDI >> 7;\n    uVar7 = uVar7 + 1;\n    goto code_r0x0044d264;\n}\n",
        "token_count": 3477
    },
    "0044e660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.0044e660(uchar *arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uchar *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong *puVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong uVar13;\n    uint32_t uVar14;\n    uchar *puVar15;\n    ulong *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uchar *unaff_RDI;\n    int64_t *piVar17;\n    uchar *puVar18;\n    uint64_t uVar19;\n    code **ppcVar20;\n    uchar *in_R10;\n    int64_t in_R11;\n    int64_t iVar21;\n    uchar *unaff_R14;\n    int64_t iVar22;\n    bool bVar23;\n    uint8_t uVar24;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044e660:\n    puVar16 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x2f0 && *0x20 + -0x2f0 != *(unaff_R14 + 0x10)) {\n        puVar16 = *0x20 + -0x370;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) != unaff_R14)) {\n                uVar24 = *(*(unaff_R14 + 0x30) + 0xf9);\n                uVar14 = uVar24;\n                if ((uVar24 == 0) && (uVar14 = *0x53a28c >> 2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n                    uVar14 = 2;\n                }\n                if ((in_RAX == -1) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = *(unaff_RDI + 0x70);\n                    if (unaff_RBX == NULL) {\n                        in_RAX = *(unaff_RDI + 0x40);\n                        unaff_RBX = *(unaff_RDI + 0x38);\n                        uVar8 = *(unaff_RDI + 0x50);\n                    }\n                    else {\n                        in_RAX = *(unaff_RDI + 0x78);\n                        uVar8 = 0;\n                    }\n                }\n                else {\n                    uVar8 = 0;\n                }\n                *(*0x20 + -0x68) = in_R11;\n                *(*0x20 + -0x334) = uVar14;\n                *(*0x20 + -0x60) = in_XMM15;\n                *(*0x20 + -0x380) = unaff_RBP;\n                *(*0x20 + -0x378) = 0x44e74f;\n                puVar6 = fcn.00459c70();\n                unaff_RBP = *(*0x20 + -0x380);\n                *(*0x20 + -0x50) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                iVar9 = puVar6[0x2a];\n                iVar22 = puVar6[0x2b];\n                uVar13 = puVar6[1];\n                uVar10 = *puVar6;\n                if (arg3 == 0) {\n                    *(*0x20 + -0x342) = in_R10 == NULL;\n                    uVar14 = *(*0x20 + -0x334);\n                }\n                else {\n                    *(*0x20 + -0x288) = puVar6;\n                    *(*0x20 + -0x342) = 0;\n                    puVar6 = *(*0x20 + -0x288);\n                }\n                puVar18 = uVar14;\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x2c8) = iVar22;\n                *(*0x20 + -0xa8) = iVar9;\n                *(*0x20 + -0x238) = in_RAX;\n                *(*0x20 + -0x240) = unaff_RBX;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + -0x70) = puVar6;\n                *(*0x20 + -0x248) = uVar13;\n                *(*0x20 + -0x250) = uVar10;\n                *(*0x20 + -0xb0) = uVar8;\n                if (in_RAX == 0) {\n                    *(*0x20 + -0x50) = *unaff_RBX;\n                    puVar18 = *(*0x20 + -0x240) + 8;\n                    *(*0x20 + -0x38) = puVar18;\n                }\n                *(*0x20 + -0x378) = 0x44e83e;\n                iVar7 = fcn.004490a0();\n                if (iVar7 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (puVar15 = in_R10,  puVar1 = arg1,  *(*0x20 + -0x342) != '\\0')) {\n                        *(*0x20 + -600) = *(*(*0x20 + -0x70) + 0x98);\n                        *(*0x20 + -0x238) = *(*0x20 + -0x50);\n                        *(*0x20 + -0x378) = 0x44e91f;\n                        fcn.004330a0();\n                        *(*0x20 + -0x378) = 0x44e930;\n                        fcn.004339a0();\n                        *(*0x20 + -0x378) = 0x44e93d;\n                        fcn.004337a0();\n                        *(*0x20 + -0x378) = 0x44e94e;\n                        fcn.004339a0();\n                        *(*0x20 + -0x378) = 0x44e95b;\n                        fcn.00433800();\n                        *(*0x20 + -0x378) = 0x44e965;\n                        fcn.00433300();\n                        *(*0x20 + -0x378) = 0x44e96a;\n                        fcn.00433120();\n                        arg1 = *0x20 + -0x60;\n                        puVar18 = NULL;\n                        *(*0x20 + -0x378) = 0x44e989;\n                        fcn.004522c0(arg1);\n                        puVar15 = in_R10;\n                        puVar1 = *(*0x20 + 0x48);\n                    }\n                    uVar24 = puVar1 == NULL;\n                    if (uVar24) {\n                        return NULL;\n                    }\n                    iVar7 = 10;\n                    *(*0x20 + -0x378) = 0x44e9be;\n                    iVar12 = fcn.004317e0();\n                    goto code_r0x0044e9be;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x380) = unaff_RBP;\n                *(*0x20 + -0x378) = 0x44e870;\n                fcn.00459c34();\n                unaff_RBP = *(*0x20 + -0x380);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg1 = *(*0x20 + -0x70);\n                arg4 = *(*0x20 + -0x240);\n                in_R10 = *(*0x20 + -0x238);\n                uVar8 = *(*0x20 + -0x250);\n                uVar13 = *(*0x20 + -0x248);\n                iVar12 = *(*0x20 + 0x30);\n                iVar9 = *(*0x20 + -0xa8);\n                iVar22 = *(*0x20 + -0x2c8);\n                uVar10 = *(*0x20 + -0xb0);\n                unaff_RDI = NULL;\n                arg3 = 0;\n                *(*0x20 + -0x300) = 0;\n                puVar15 = NULL;\n                while( true ) {\n                    if (unaff_RSI <= puVar15) {\n                        puVar18 = *(*0x20 + -0x300);\n                        goto code_r0x0044f849;\n                    }\n                    *(*0x20 + -0x310) = uVar13;\n                    *(*0x20 + -0x318) = uVar8;\n                    iVar7 = *(*0x20 + -0x60);\n                    if (*(iVar7 + 0x10) == 0) break;\n                    *(*0x20 + -0x78) = *(*0x20 + -0x58);\n                    *(*0x20 + -0x80) = iVar7;\n                    uVar24 = *(iVar7 + 0x25);\n                    cVar4 = *(iVar7 + 0x24);\n                    if (cVar4 == '\\x04') {\n                        uVar24 = uVar24 & 0xfd;\n                    }\n                    if ((((*(*0x20 + -0x50) == in_R10) && (*(*0x20 + -0x38) == arg4)) && (*(arg1 + 0x78) == in_R10)) &&\n                       (*(arg1 + 0x70) == arg4)) {\n                        uVar24 = uVar24 & 0xfd;\n                    }\n                    *(*0x20 + -0x2e8) = puVar15;\n                    *(*0x20 + -0x260) = iVar12;\n                    *(*0x20 + -0x341) = arg3;\n                    *(*0x20 + -0xb0) = uVar10;\n                    *(*0x20 + -0x343) = unaff_RDI;\n                    if (*(*0x20 + -0x30) == 0) {\n                        if ((((*(*0x20 + 8) >> 2 & 1) == 0) || (**(arg1 + 0x30) != arg1)) ||\n                           (uVar11 = (*(arg1 + 0x30))[0x12],  uVar11 == 0)) {\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                            uVar13 = *(*0x20 + -0x310);\n                            uVar8 = *(*0x20 + -0x318);\n                        }\n                        else if (cVar4 == '\\f') {\n                            *(*0x20 + -0x50) = *(uVar11 + 0x40);\n                            *(*0x20 + -0x378) = 0x44ec2d;\n                            iVar7 = fcn.004490a0();\n                            *(*0x20 + -0x60) = iVar7;\n                            *(*0x20 + -0x58) = uVar10;\n                            iVar9 = *(*0x20 + -0x70);\n                            uVar24 = *(iVar7 + 0x25);\n                            *(*0x20 + -0x40) = *(*(*(iVar9 + 0x30) + 0x90) + 0x60);\n                            *(*0x20 + -0x38) = *(*(*(iVar9 + 0x30) + 0x90) + 0x38);\n                            puVar6 = *(*(iVar9 + 0x30) + 0x90);\n                            uVar8 = *puVar6;\n                            uVar13 = puVar6[1];\n                            iVar9 = puVar6[0x2a];\n                            iVar22 = puVar6[0x2b];\n                            *(*0x20 + -0xb8) = iVar7;\n                            *(*0x20 + -0xc0) = uVar10;\n                        }\n                        else if (cVar4 == '\\x13') {\n                            *(*0x20 + -0x38) = *(uVar11 + 0x38);\n                            puVar6 = *(*(arg1 + 0x30) + 0x90);\n                            uVar8 = *puVar6;\n                            uVar13 = puVar6[1];\n                            iVar9 = puVar6[0x2a];\n                            iVar22 = puVar6[0x2b];\n                            uVar24 = uVar24 & 0xfd;\n                            *(*0x20 + -0x290) = iVar12;\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0x298) = arg1;\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = *(*0x20 + -0x80);\n                            *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                            uVar13 = *(*0x20 + -0x310);\n                            uVar8 = *(*0x20 + -0x318);\n                        }\n                        *(*0x20 + -0x2c8) = iVar22;\n                        *(*0x20 + -0xa8) = iVar9;\n                        *(*0x20 + -0x310) = uVar13;\n                        *(*0x20 + -0x318) = uVar8;\n                        *(*0x20 + -0x340) = uVar24;\n                        *(*0x20 + -0x378) = 0x44ed69;\n                        iVar5 = fcn.00449c60(*(*0x20 + -0x50));\n                        *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38);\n                        *(*0x20 + -0x30) = iVar5 + *(*0x20 + -0x38) + 8;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        uVar10 = *(*0x20 + -0xb0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        arg4 = *(*0x20 + -0x240);\n                        in_R10 = *(*0x20 + -0x238);\n                        uVar24 = *(*0x20 + -0x340);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        iVar9 = *(*0x20 + -0xa8);\n                    }\n                    else {\n                        *(*0x20 + -0xc0) = *(*0x20 + -0x78);\n                        in_R11 = *(*0x20 + -0x80);\n                    }\n                    *(*0x20 + -0xa8) = iVar9;\n                    *(*0x20 + -0x2c8) = iVar22;\n                    *(*0x20 + -0xb8) = in_R11;\n                    if ((uVar24 & 1) == 0) {\n                        if ((uVar24 & 2) == 0) {\ncode_r0x0044ee8d:\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x2e0) = *(*0x20 + -0x30) + -8;\n                                *(*0x20 + -0x40) = *(*(*0x20 + -0x30) + -8);\n                            }\n                            else {\n                                *(*0x20 + -0x2a0) = iVar12;\n                                *(*0x20 + -0x2e0) = 0;\n                            }\n                            *(*0x20 + -0x378) = 0x44eed8;\n                            iVar7 = fcn.004490a0();\n                            if (iVar7 == 0) {\n                                arg4 = *(*0x20 + -0x342);\n                                if (*(*0x20 + -0x342) == 0) {\n                                    arg1 = *(*0x20 + -0x70);\n                                    in_R10 = *(*0x20 + -0xb8);\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x70);\n                                    if (*(*(arg1 + 0x30) + 0xe8) == '\\0') {\n                                        in_R10 = *(*0x20 + -0xb8);\n                                    }\n                                    else {\n                                        in_R10 = *(*0x20 + -0xb8);\n                                        if (in_R10[0x24] == '\\x12') {\n                                            arg4 = 0;\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x88) = 0;\n                                *(*0x20 + -0x90) = uVar10;\n                                in_R11 = *(*0x20 + 0x48);\n                                if ((in_R11 != 0) || (iVar9 = in_R11,  arg4 != '\\0')) {\n                                    uVar8 = *(*0x20 + -0xc0);\n                                    *(*0x20 + -0x378) = 0x44ef95;\n                                    uVar13 = fcn.00449820();\n                                    *(*0x20 + -0x98) = uVar13;\n                                    *(*0x20 + -0x268) = uVar8;\n                                    *(*0x20 + -600) = *(*(*0x20 + -0x70) + 0x98);\n                                    unaff_RSI = *(*0x20 + -0x40);\n                                    *(*0x20 + -0x248) = unaff_RSI;\n                                    *(*0x20 + -0x378) = 0x44efd1;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x378) = 0x44efe5;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x378) = 0x44eff2;\n                                    fcn.004337a0();\n                                    *(*0x20 + -0x378) = 0x44f005;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x378) = 0x44f01a;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x378) = 0x44f02b;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x378) = 0x44f038;\n                                    fcn.00433800();\n                                    *(*0x20 + -0x378) = 0x44f03d;\n                                    fcn.00433300();\n                                    *(*0x20 + -0x378) = 0x44f045;\n                                    fcn.00433120();\n                                    unaff_RDI = *(*0x20 + -0x2e0);\n                                    *(*0x20 + -0x378) = 0x44f065;\n                                    fcn.004522c0(*0x20 + -0x60);\n                                    iVar7 = *(*0x20 + -0x88);\n                                    arg1 = *(*0x20 + -0x70);\n                                    uVar10 = *(*0x20 + -0x90);\n                                    in_R10 = *(*0x20 + -0xb8);\n                                    in_R11 = *(*0x20 + 0x48);\n                                    iVar9 = *(*0x20 + 0x48);\n                                }\n                                if (iVar9 != 0) goto code_r0x00450359;\n                            }\n                            else {\n                                arg1 = *(*0x20 + -0x70);\n                            }\n                            puVar15 = *(*0x20 + -0x2e8);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                            *(*0x20 + -0xe0) = iVar7;\n                            *(*0x20 + -0xe8) = uVar10;\n                            uVar8 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            if (*(*0x20 + 0x48) != 0) {\n                                if (puVar15 < 1) goto code_r0x0044ee8d;\n                                if (*(*0x20 + 0x48) != 0) goto code_r0x0045036a;\n                            }\n                            *(*0x20 + -0x40) = 0;\n                            *(*0x20 + -0x2a8) = iVar12;\n                            *(*0x20 + -0xe0) = 0;\n                            *(*0x20 + -0xe8) = 0;\n                            uVar8 = *(*0x20 + -0x2a8);\n                        }\n                        iVar7 = *(*0x20 + -0xe0);\n                        *(*0x20 + -0x2b0) = uVar8;\n                        *(*0x20 + -200) = *(*0x20 + -0xe8);\n                        iVar12 = *(*0x20 + -0x2b0);\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0;\n                        *(*0x20 + -200) = 0;\n                        iVar7 = 0;\n                    }\n                    iVar2 = *(*0x20 + -0x30);\n                    *(*0x20 + -0x28) = iVar2;\n                    *(*0x20 + -0x28) = iVar2 - 8U;\n                    if (*(*0x20 + -0x38) < iVar2 - 8U) {\n                        *(*0x20 + -0x28) = iVar2 + -0x10;\n                    }\n                    *(*0x20 + -0xe0) = iVar7;\n                    ppcVar20 = *(*0x20 + 0x48);\n                    if (ppcVar20 == NULL) {\n                        in_R10 = *(*0x20 + -0x342);\n                        if (*(*0x20 + -0x342) != 0) goto code_r0x0044f19f;\n                    }\n                    else {\n                        in_R10 = *(*0x20 + -0x342);\ncode_r0x0044f19f:\n                        *(*0x20 + -0x20) = *(*0x20 + -0x30);\n                        if (ppcVar20 == NULL) {\n                            bVar23 = false;\n                        }\n                        else {\n                            bVar23 = *(in_R11 + 8) == -0x80000000;\n                        }\n                        *(*0x20 + -0x18) = *(in_R11 + 8);\n                        *(*0x20 + -0x10) = 0;\n                        if (bVar23) {\n                            *(*0x20 + -0x378) = 0x44f205;\n                            uVar8 = fcn.004509c0(*(*0x20 + -0xc0));\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x10) = in_R11;\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x2e8);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            ppcVar20 = *(*0x20 + 0x48);\n                            in_R10 = *(*0x20 + -0x342);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                        }\n                        iVar7 = *(*0x20 + -0xe0);\n                        iVar9 = *(*0x20 + -0xa8);\n                    }\n                    *(*0x20 + -0x48) = *(*0x20 + -0x50);\n                    if (unaff_RDI == '\\0') {\n                        bVar23 = ppcVar20 == NULL;\n                    }\n                    else if (*(*(*0x20 + -0x60) + 0xc) == 0) {\n                        *(*0x20 + -0x48) = 0;\n                        bVar23 = ppcVar20 == NULL;\n                    }\n                    else {\n                        *(*0x20 + -0x378) = 0x44f2bf;\n                        iVar9 = fcn.00448f20();\n                        *(*0x20 + -0x48) = iVar9 + *(*(*0x20 + -0x60) + 0xc) + 1;\n                        bVar23 = *(*0x20 + 0x48) == 0;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        ppcVar20 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (bVar23) {\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar2 = iVar21;\n                    }\n                    else {\n                        pcVar3 = *ppcVar20;\n                        *(*0x20 + -0x378) = 0x44f36f;\n                        cVar4 = (*pcVar3)(pcVar3, ppcVar20);\n                        if (cVar4 == '\\0') {\n                            return *(*0x20 + -0x2e8);\n                        }\n                        iVar2 = *(*0x20 + 0x38);\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        ppcVar20 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (iVar2 == 0) goto code_r0x0044f58e;\n                    iVar9 = *(*0x20 + -0x50);\n                    if (((puVar15 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (unaff_RDI != '\\0')) {\ncode_r0x0044f49c:\n                        iVar22 = iVar9 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x308) = iVar9;\n                        *(*0x20 + -0x378) = 0x44f434;\n                        iVar9 = fcn.00448f20();\n                        if (iVar9 == *(*0x20 + -0x308)) {\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x2e8);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x343);\n                            arg3 = *(*0x20 + -0x341);\n                            iVar9 = *(*0x20 + -0x308);\n                            in_R10 = *(*0x20 + -0x342);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar21 = *(*0x20 + 0x38);\n                            goto code_r0x0044f49c;\n                        }\n                        iVar9 = *(*0x20 + -0x308) + -1;\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x2e8);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x341);\n                        in_R10 = *(*0x20 + -0x342);\n                        in_R11 = *(*0x20 + -0xb8);\n                        iVar21 = *(*0x20 + 0x38);\n                        iVar22 = *(*0x20 + -0x308);\n                    }\n                    *(*0x20 + -800) = iVar9;\n                    if (*(in_R11 + 0x27) < 4) {\n                        *(*0x20 + -0x2b8) = iVar12;\n                        *(*0x20 + -0x100) = 0;\n                        iVar12 = *(*0x20 + -0x2b8);\n                    }\n                    else {\n                        uVar14 = *(in_R11 + *(in_R11 + 0x1c) * 4 + 0x34);\n                        in_R10 = *(*0x20 + -0x342);\n                        *(*0x20 + -0x100) = uVar14 + *(*(*0x20 + -0xc0) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                    }\n                    arg4 = *(*0x20 + -0x100);\n                    if (arg4 == 0) goto code_r0x004502d2;\n                    while( true ) {\n                        *(*0x20 + -0x260) = iVar12;\n                        *(*0x20 + -0x248) = iVar22;\n                        *(*0x20 + -0x268) = puVar15;\n                        *(*0x20 + -0x341) = arg3;\n                        unaff_RDI = *(*0x20 + -800);\n                        unaff_RSI = *0x20 + -0x208;\n                        *(*0x20 + -0x378) = 0x450185;\n                        iVar5 = fcn.00449e60(2);\n                        if (iVar5 < 0) break;\n                        uVar11 = iVar5;\n                        if (0xfffff < uVar11) {\ncode_r0x0045034f:\n                            arg1 = 0x100000;\n                            *(*0x20 + -0x378) = 0x450359;\n                            fcn.004599e0(0x100000);\n                            goto code_r0x00450359;\n                        }\n                        *(*0x20 + -0x278) = uVar11 * 5;\n                        unaff_RSI = *(*0x20 + -0x100);\n                        unaff_RDI = unaff_RSI + uVar11 * 0x14;\n                        if ((((unaff_RSI[uVar11 * 0x14 + 2] == '\\x15') && (cVar4 = *(*0x20 + -0x341),  cVar4 != '\\t'))\n                            && (cVar4 != '\\x12')) && (cVar4 != '\\x0e')) {\n                            uVar11 = *(*0x20 + -0x268);\n                            arg3 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            arg3 = *(*0x20 + -0x260);\n                            if (arg3 < 1) {\n                                arg4 = *(*0x20 + 0x40);\n                                uVar11 = *(*0x20 + -0x268);\n                                if (uVar11 < arg4) {\n                                    if (0xfffff < uVar11) goto code_r0x00450345;\n                                    in_R10 = *(*0x20 + 0x38);\n                                    *(in_R10 + uVar11 * 8) = *(*0x20 + -0x248);\n                                    uVar11 = uVar11 + 1;\n                                }\n                                else {\n                                    in_R10 = *(*0x20 + 0x38);\n                                }\n                            }\n                            else {\n                                arg3 = arg3 - 1;\n                                in_R10 = *(*0x20 + 0x38);\n                                uVar11 = *(*0x20 + -0x268);\n                            }\n                        }\ncode_r0x004500c9:\n                        *(*0x20 + -0x260) = arg3;\n                        *(*0x20 + -0x268) = uVar11;\n                        *(*0x20 + -0x341) = unaff_RDI[2];\n                        *(*0x20 + -0x378) = 0x4500f9;\n                        iVar9 = fcn.00448f20();\n                        arg4 = iVar9 + *(*(*0x20 + -0x100) + *(*0x20 + -0x278) * 4 + 0x10);\n                        iVar22 = iVar9 + *(*(*0x20 + -0x100) + *(*0x20 + -0x278) * 4 + 0x10) + 1;\n                        in_R11 = *(*0x20 + -0xb8);\n                        *(*0x20 + -800) = arg4;\n                        arg3 = *(*0x20 + -0x341);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar12 = *(*0x20 + -0x260);\n                    }\n                    arg1 = *(*0x20 + -0x70);\n                    iVar7 = *(*0x20 + -0xe0);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    unaff_RDI = *(*0x20 + -0x343);\n                    in_R10 = *(*0x20 + -0x342);\n                    in_R11 = *(*0x20 + -0xb8);\n                    iVar21 = *(*0x20 + 0x38);\n                    arg3 = *(*0x20 + -0x341);\n                    puVar15 = *(*0x20 + -0x268);\n                    iVar22 = *(*0x20 + -0x248);\n                    iVar12 = *(*0x20 + -0x260);\ncode_r0x004502d2:\n                    if (((*(in_R11 + 0x24) != '\\x15') || (cVar4 = arg3,  cVar4 == '\\t')) ||\n                       ((cVar4 == '\\x12' || (cVar4 == '\\x0e')))) {\n                        if (iVar12 < 1) {\n                            if (puVar15 < unaff_RSI) {\n                                if (0xfffff < puVar15) {\n                                    *(*0x20 + -0x378) = 0x450345;\n                                    fcn.004599e0(0x100000);\ncode_r0x00450345:\n                                    *(*0x20 + -0x378) = 0x45034f;\n                                    fcn.004599e0(0x100000);\n                                    goto code_r0x0045034f;\n                                }\n                                *(iVar21 + puVar15 * 8) = iVar22;\n                                puVar15 = puVar15 + 1;\n                            }\n                        }\n                        else {\n                            iVar12 = iVar12 + -1;\n                        }\n                    }\n                    arg3 = *(in_R11 + 0x24);\n                    puVar15 = puVar15 + -1;\n                    ppcVar20 = *(*0x20 + 0x48);\n                    iVar9 = *(*0x20 + -0xa8);\n                    iVar22 = *(*0x20 + -0x2c8);\ncode_r0x0044f58e:\n                    cVar4 = unaff_RDI;\n                    *(*0x20 + -0x260) = iVar12;\n                    if (in_R10 == '\\0') {\n                        puVar18 = *(*0x20 + -0x300);\n                        goto code_r0x0044f70a;\n                    }\n                    *(*0x20 + -0x33d) = arg3;\n                    *(*0x20 + -0x268) = puVar15;\n                    unaff_RDI = *(*0x20 + -0x50);\n                    *(*0x20 + -0x328) = unaff_RDI;\n                    if ((puVar15 < 1) && (uVar11 = *(*0x20 + 8),  (uVar11 >> 1 & 1) != 0)) {\n                        *(*0x20 + -0x2c0) = iVar12;\n                        *(*0x20 + -0x33e) = 0;\n                        iVar12 = *(*0x20 + -0x2c0);\n                    }\n                    else {\n                        *(*0x20 + -0x378) = 0x44f5f5;\n                        uVar19 = fcn.00448f20();\n                        iVar12 = *(*0x20 + -0x260);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        cVar4 = *(*0x20 + -0x343);\n                        arg3 = *(*0x20 + -0x33d);\n                        unaff_RDI = *(*0x20 + -0x328);\n                        in_R11 = *(*0x20 + -0xb8);\n                        uVar11 = *(*0x20 + 8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        *(*0x20 + -0x33e) = uVar19 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar19;\n                        arg1 = *(*0x20 + -0x70);\n                    }\n                    if ((*(*0x20 + -0x33e) != '\\0') && (cVar4 == '\\0')) {\n                        unaff_RDI = unaff_RDI + -1;\n                    }\n                    if (*(in_R11 + 0x27) < 4) {\n                        uVar19 = 0;\n                    }\n                    else {\n                        uVar14 = *(in_R11 + *(in_R11 + 0x1c) * 4 + 0x34);\n                        uVar19 = uVar14 + *(*(*0x20 + -0xc0) + 0x130) & (uVar14 == 0xffffffff) - 1;\n                        iVar22 = *(*0x20 + -0x2c8);\n                    }\n                    if (uVar19 != 0) {\n                        *(*0x20 + -0x108) = uVar19;\n                        *(*0x20 + -0x230) = in_XMM15;\n                        *(*0x20 + -0x228) = in_XMM15;\n                        *(*0x20 + -0x218) = in_XMM15;\n                        uVar8 = *(*0x20 + -0x300);\n                        goto code_r0x0044fad7;\n                    }\n                    puVar18 = *(*0x20 + -0x300);\n                    while( true ) {\n                        *(*0x20 + -0x300) = puVar18;\n                        *(*0x20 + -0x328) = unaff_RDI;\n                        if ((uVar11 & 1) == 0) {\n                            *(*0x20 + -0x378) = 0x44fd2a;\n                            cVar4 = fcn.00451b80(arg1, puVar15 & 0xffffffffffffff00 | puVar18 == NULL, arg3);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x268);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            puVar18 = *(*0x20 + -0x300);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                            iVar12 = *(*0x20 + -0x260);\n                        }\n                        else {\n                            cVar4 = '\\x01';\n                        }\n                        if (cVar4 != '\\0') {\n                            uVar8 = *(*0x20 + -0xc0);\n                            *(*0x20 + -0x378) = 0x44fd99;\n                            uVar13 = fcn.00449820();\n                            *(*0x20 + -0xf8) = uVar13;\n                            *(*0x20 + -0x2f8) = uVar8;\n                            uVar8 = *(*0x20 + -0x328);\n                            uVar13 = *(*0x20 + -0xc0);\n                            *(*0x20 + -0x378) = 0x44fdc5;\n                            uVar10 = fcn.00449c00(uVar8);\n                            *(*0x20 + -0xd8) = uVar10;\n                            *(*0x20 + -0x2d8) = uVar13;\n                            *(*0x20 + -0x33c) = uVar8;\n                            iVar9 = *(*0x20 + -0x2f8);\n                            if (iVar9 == 0xf) {\n                                piVar17 = *(*0x20 + -0xf8);\n                                if ((((*piVar17 == 0x2e656d69746e7572) && (*(piVar17 + 1) == 0x61706f67)) &&\n                                    (*(piVar17 + 0xc) == 0x696e)) && (*(piVar17 + 0xe) == 'c')) {\n                                    iVar9 = 5;\n                                    piVar17 = 0x47f25a;\n                                }\n                            }\n                            else {\n                                piVar17 = *(*0x20 + -0xf8);\n                            }\n                            *(*0x20 + -0xf8) = piVar17;\n                            *(*0x20 + -0x2f8) = iVar9;\n                            *(*0x20 + -0x378) = 0x44fe3c;\n                            fcn.004330a0();\n                            *(*0x20 + -0x378) = 0x44fe4e;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fe5f;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fe65;\n                            fcn.00433120();\n                            *(*0x20 + -0x378) = 0x44fe87;\n                            fcn.00450460(*(*0x20 + -0x20));\n                            *(*0x20 + -0x378) = 0x44fe8c;\n                            fcn.004330a0();\n                            *(*0x20 + -0x378) = 0x44fe9d;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fea5;\n                            fcn.00433120();\n                            *(*0x20 + -0x378) = 0x44feaa;\n                            fcn.004330a0();\n                            *(*0x20 + -0x378) = 0x44febb;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fed0;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fee5;\n                            fcn.004339a0();\n                            *(*0x20 + -0x378) = 0x44fef1;\n                            fcn.004337a0();\n                            *(*0x20 + -0x378) = 0x44fef6;\n                            fcn.00433120();\n                            *(*0x20 + -0x378) = 0x44ff0d;\n                            uVar11 = fcn.00448f20();\n                            if (uVar11 <= *(*0x20 + -0x50) && *(*0x20 + -0x50) != uVar11) {\n                                *(*0x20 + -0x378) = 0x44ff2e;\n                                uVar8 = fcn.00448f20();\n                                *(*0x20 + -0x330) = uVar8;\n                                *(*0x20 + -0x248) = *(*0x20 + -0x50);\n                                *(*0x20 + -0x378) = 0x44ff48;\n                                fcn.004330a0();\n                                *(*0x20 + -0x378) = 0x44ff59;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44ff6e;\n                                fcn.00433800(*(*0x20 + -0x330));\n                                *(*0x20 + -0x378) = 0x44ff73;\n                                fcn.00433120();\n                            }\n                            iVar9 = *(*(*0x20 + -0x70) + 0x30);\n                            if ((((iVar9 != 0) && (1 < *(iVar9 + 0xc4))) && (*(iVar9 + 0x90) == *(*0x20 + -0x70))) ||\n                               (1 < *(*0x20 + -0x334))) {\n                                *(*0x20 + -0x248) = *(*0x20 + -0x30);\n                                *(*0x20 + -0x250) = *(*0x20 + -0x38);\n                                *(*0x20 + -0x280) = *(*0x20 + -0x50);\n                                *(*0x20 + -0x378) = 0x44ffde;\n                                fcn.004330a0();\n                                *(*0x20 + -0x378) = 0x44ffef;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fffc;\n                                fcn.00433800();\n                                *(*0x20 + -0x378) = 0x45000d;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x45001a;\n                                fcn.00433800();\n                                *(*0x20 + -0x378) = 0x45002b;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x450038;\n                                fcn.00433800();\n                                *(*0x20 + -0x378) = 0x45003d;\n                                fcn.00433120();\n                            }\n                            *(*0x20 + -0x378) = 0x450045;\n                            fcn.004330a0();\n                            *(*0x20 + -0x378) = 0x45004a;\n                            fcn.00433300();\n                            *(*0x20 + -0x378) = 0x45004f;\n                            fcn.00433120();\n                            puVar18 = *(*0x20 + -0x300) + 1;\n                            iVar12 = *(*0x20 + -0x260);\n                            arg1 = *(*0x20 + -0x70);\n                            puVar15 = *(*0x20 + -0x268);\n                            iVar7 = *(*0x20 + -0xe0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            in_R11 = *(*0x20 + -0xb8);\n                            iVar9 = *(*0x20 + -0xa8);\n                            iVar22 = *(*0x20 + -0x2c8);\n                        }\n                        arg3 = *(in_R11 + 0x24);\n                        ppcVar20 = *(*0x20 + 0x48);\ncode_r0x0044f70a:\n                        puVar15 = puVar15 + 1;\n                        if ((*(in_R11 + 0x24) == '\\x04') && (iVar22 != 0)) {\n                            uVar8 = *(iVar9 + -8 + iVar22 * 8);\n                            if ((iVar12 == 0) && (ppcVar20 == NULL)) {\n                                *(*0x20 + -0x270) = puVar18;\n                                *(*0x20 + -0x33f) = arg3;\n                                *(*0x20 + -0x378) = 0x44f75b;\n                                puVar15 = fcn.00450ba0(uVar8);\n                                arg1 = *(*0x20 + -0x70);\n                                iVar7 = *(*0x20 + -0xe0);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                puVar18 = *(*0x20 + -0x270);\n                                arg3 = *(*0x20 + -0x33f);\n                                in_R11 = *(*0x20 + -0xb8);\n                                iVar9 = *(*0x20 + -0xa8);\n                                iVar22 = *(*0x20 + -0x2c8);\n                                iVar12 = *(*0x20 + -0x260);\n                            }\n                            iVar22 = iVar22 + -1;\n                        }\n                        cVar4 = *(in_R11 + 0x24);\n                        in_R10 = puVar15;\n                        if (iVar7 == 0) goto code_r0x0044f849;\n                        if (*(*0x20 + -0x40) != *(*0x20 + -0x50)) break;\n                        *(*0x20 + -0x248) = *(*0x20 + -0x50);\n                        if (*(*0x20 + -0x30) != *(*0x20 + -0x38)) {\n                            uVar24 = cVar4 == '\\x12';\n                            goto code_r0x0044e9be;\n                        }\n                        *(*0x20 + -0x238) = *(*0x20 + -0x38);\n                        *(*0x20 + -0x378) = 0x44f9fd;\n                        fcn.004330a0();\n                        *(*0x20 + -0x378) = 0x44fa0e;\n                        fcn.004339a0();\n                        *(*0x20 + -0x378) = 0x44fa1b;\n                        fcn.00433800();\n                        *(*0x20 + -0x378) = 0x44fa2c;\n                        fcn.004339a0();\n                        *(*0x20 + -0x378) = 0x44fa39;\n                        fcn.00433800();\n                        *(*0x20 + -0x378) = 0x44fa3e;\n                        fcn.00433300();\n                        *(*0x20 + -0x378) = 0x44fa45;\n                        fcn.00433120();\n                        iVar9 = *(*0x20 + -0x38);\n                        *(*0x20 + -0x378) = 0x44fa65;\n                        fcn.004522c0(*0x20 + -0x60);\n                        *(*0x20 + -0x378) = 0x44fa76;\n                        fcn.004317e0();\n                        while( true ) {\n                            *(*0x20 + -0x300) = iVar9;\n                            *(*0x20 + -0x341) = *(*(*0x20 + -0xa0) + 2);\n                            *(*0x20 + -0x378) = 0x44faa5;\n                            iVar9 = fcn.00448f20();\n                            unaff_RDI = iVar9 + *(*(*0x20 + -0x108) + *(*0x20 + -0x278) * 4 + 0x10);\n                            arg3 = *(*0x20 + -0x341);\n                            uVar8 = *(*0x20 + -0x300);\ncode_r0x0044fad7:\n                            *(*0x20 + -0x300) = uVar8;\n                            *(*0x20 + -0x341) = arg3;\n                            *(*0x20 + -0x328) = unaff_RDI;\n                            *(*0x20 + -0x378) = 0x44fb05;\n                            in_R10 = unaff_RDI;\n                            iVar5 = fcn.00449e60(2);\n                            if (iVar5 < 0) break;\n                            uVar11 = iVar5;\n                            if (0xfffff < uVar11) {\n                                uVar11 = 0x100000;\n                                *(*0x20 + -0x378) = 0x4500c9;\n                                fcn.004599e0(0x100000);\n                                goto code_r0x004500c9;\n                            }\n                            *(*0x20 + -0x278) = uVar11 * 5;\n                            iVar9 = *(*0x20 + -0x108);\n                            *(*0x20 + -0x22c) = *(iVar9 + 0xc + uVar11 * 0x14);\n                            *(*0x20 + -0x20c) = *(iVar9 + uVar11 * 0x14 + 2);\n                            *(*0x20 + -0xa0) = iVar9 + uVar11 * 0x14;\n                            if ((*(*0x20 + 8) & 1) == 0) {\n                                *(*0x20 + -0x378) = 0x44fb9b;\n                                cVar4 = fcn.00451b80(*(*0x20 + -0x70), *(*0x20 + -0x300), *(*0x20 + -0x341));\n                                if (cVar4 != '\\0') goto code_r0x0044fba8;\n                                iVar9 = *(*0x20 + -0x300);\n                            }\n                            else {\ncode_r0x0044fba8:\n                                uVar8 = *(*0x20 + -0xc0);\n                                *(*0x20 + -0x378) = 0x44fbbd;\n                                uVar13 = fcn.00449820();\n                                *(*0x20 + -0xf0) = uVar13;\n                                *(*0x20 + -0x2f0) = uVar8;\n                                uVar8 = *(*0x20 + -0x328);\n                                uVar13 = *(*0x20 + -0xc0);\n                                *(*0x20 + -0x378) = 0x44fbe7;\n                                uVar10 = fcn.00449c00(uVar8);\n                                *(*0x20 + -0xd0) = uVar10;\n                                *(*0x20 + -0x2d0) = uVar13;\n                                *(*0x20 + -0x338) = uVar8;\n                                *(*0x20 + -0x378) = 0x44fc05;\n                                fcn.004330a0();\n                                *(*0x20 + -0x378) = 0x44fc1a;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fc2b;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fc30;\n                                fcn.00433120();\n                                *(*0x20 + -0x378) = 0x44fc35;\n                                fcn.004330a0();\n                                *(*0x20 + -0x378) = 0x44fc46;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fc5b;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fc6c;\n                                fcn.004339a0();\n                                *(*0x20 + -0x378) = 0x44fc78;\n                                fcn.004337a0(*(*0x20 + -0x338));\n                                *(*0x20 + -0x378) = 0x44fc7d;\n                                fcn.00433300();\n                                *(*0x20 + -0x378) = 0x44fc85;\n                                fcn.00433120();\n                                iVar9 = *(*0x20 + -0x300) + 1;\n                            }\n                        }\n                        iVar12 = *(*0x20 + -0x260);\n                        arg1 = *(*0x20 + -0x70);\n                        puVar15 = *(*0x20 + -0x268);\n                        iVar7 = *(*0x20 + -0xe0);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        in_R11 = *(*0x20 + -0xb8);\n                        uVar11 = *(*0x20 + 8);\n                        iVar9 = *(*0x20 + -0xa8);\n                        iVar22 = *(*0x20 + -0x2c8);\n                        arg3 = *(*0x20 + -0x341);\n                        unaff_RDI = *(*0x20 + -0x328);\n                        puVar18 = *(*0x20 + -0x300);\n                    }\n                    uVar24 = cVar4 == '\\x12';\ncode_r0x0044e9be:\n                    *(*0x20 + -0x60) = iVar7;\n                    *(*0x20 + -0x58) = *(*0x20 + -200);\n                    *(*0x20 + -0x50) = *(*0x20 + -0x40);\n                    *(*0x20 + -0x40) = 0;\n                    uVar11 = *(*0x20 + -0x30);\n                    *(*0x20 + -0x38) = uVar11;\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x10) = 0;\n                    arg4 = *(*0x20 + -0x240);\n                    uVar13 = *(*0x20 + -0x310);\n                    uVar8 = *(*0x20 + -0x318);\n                    *(*0x20 + -0x300) = puVar18;\n                    in_R10 = *(*0x20 + -0x238);\n                    unaff_RDI = uVar11 & 0xffffff00 | uVar24;\n                    uVar10 = 0;\n                }\n                puVar18 = *(*0x20 + -0x300);\ncode_r0x0044f849:\n                while( true ) {\n                    if (*(*0x20 + -0x342) != '\\0') {\n                        puVar15 = puVar18;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= puVar15)) break;\n                    puVar18 = *(arg1 + 0x80);\n                    if (puVar18 == *(*0x20 + -0x38)) {\n                        return puVar15;\n                    }\n                    *(*0x20 + -0x238) = *(*0x20 + -0x38);\n                    *(*0x20 + -0x240) = puVar18;\n                    *(*0x20 + -0x2e8) = puVar15;\n                    *(*0x20 + -600) = *(arg1 + 0x98);\n                    *(*0x20 + -0x378) = 0x44f8bd;\n                    fcn.004330a0();\n                    *(*0x20 + -0x378) = 0x44f8ce;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f8db;\n                    fcn.004337a0();\n                    *(*0x20 + -0x378) = 0x44f8ec;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f8f9;\n                    fcn.00433800();\n                    *(*0x20 + -0x378) = 0x44f90a;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f917;\n                    fcn.00433800();\n                    *(*0x20 + -0x378) = 0x44f91c;\n                    fcn.00433300();\n                    *(*0x20 + -0x378) = 0x44f925;\n                    fcn.00433120();\n                    arg1 = **(*0x20 + -0x70);\n                    *(*0x20 + -0x238) = arg1;\n                    *(*0x20 + -0x240) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x378) = 0x44f949;\n                    fcn.004330a0();\n                    *(*0x20 + -0x378) = 0x44f95a;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f967;\n                    fcn.00433800();\n                    *(*0x20 + -0x378) = 0x44f978;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f985;\n                    fcn.00433800();\n                    *(*0x20 + -0x378) = 0x44f996;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f9a5;\n                    fcn.004337a0();\n                    *(*0x20 + -0x378) = 0x44f9b6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x378) = 0x44f9c5;\n                    fcn.004337a0();\n                    *(*0x20 + -0x378) = 0x44f9ca;\n                    fcn.00433300();\n                    *(*0x20 + -0x378) = 0x44f9cf;\n                    fcn.00433120();\n                    *(*0x20 + -0x378) = 0x44f9e5;\n                    puVar15 = in_R10;\n                    fcn.004317e0();\n                    in_R10 = puVar15;\n                }\n                return puVar15;\n            }\n            goto code_r0x004503d6;\n        }\n        goto code_r0x004503e7;\n    }\n    goto code_r0x004503f9;\ncode_r0x00450359:\n    *(*0x20 + -0x378) = 0x45036a;\n    fcn.004317e0();\ncode_r0x0045036a:\n    uVar8 = *(*0x20 + -0xc0);\n    *(*0x20 + -0x378) = 0x45037a;\n    uVar13 = fcn.00449820();\n    *(*0x20 + -0x98) = uVar13;\n    *(*0x20 + -0x260) = uVar8;\n    *(*0x20 + -0x378) = 0x45038f;\n    fcn.004330a0();\n    *(*0x20 + -0x378) = 0x4503a5;\n    fcn.004339a0();\n    *(*0x20 + -0x378) = 0x4503ba;\n    fcn.004339a0();\n    *(*0x20 + -0x378) = 0x4503bf;\n    fcn.00433300();\n    *(*0x20 + -0x378) = 0x4503c5;\n    fcn.00433120();\n    *(*0x20 + -0x378) = 0x4503d6;\n    fcn.004317e0();\ncode_r0x004503d6:\n    *(*0x20 + -0x378) = 0x4503e7;\n    fcn.004317e0();\ncode_r0x004503e7:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x378) = 0x4503f8;\n    in_RAX = fcn.004317e0();\ncode_r0x004503f9:\n    *(puVar16 + 0x10) = in_RAX;\n    *(puVar16 + 0x18) = unaff_RBX;\n    *(puVar16 + 0x20) = arg1;\n    *(puVar16 + 0x28) = unaff_RDI;\n    *(puVar16 + 0x30) = unaff_RSI;\n    *(puVar16 + 0x38) = arg3;\n    *(puVar16 + 0x40) = arg4;\n    *(puVar16 + 0x48) = in_R10;\n    *(puVar16 + 0x50) = in_R11;\n    *(puVar16 + -8) = 0x45042b;\n    fcn.00457320();\n    in_RAX = *(puVar16 + 0x10);\n    unaff_RBX = *(puVar16 + 0x18);\n    arg1 = *(puVar16 + 0x20);\n    unaff_RDI = *(puVar16 + 0x28);\n    unaff_RSI = *(puVar16 + 0x30);\n    arg3 = *(puVar16 + 0x38);\n    arg4 = *(puVar16 + 0x40);\n    in_R10 = *(puVar16 + 0x48);\n    in_R11 = *(puVar16 + 0x50);\n    *0x20 = puVar16;\n    goto code_r0x0044e660;\n}\n",
        "token_count": 14978
    },
    "00451180": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451180(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (((((*0x5a1b4a != '\\0') && (iVar1 = *(unaff_RDI + 0x30),  iVar1 != 0)) && (0 < *(iVar1 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar1 + 0x110) != NULL)))) && (**(iVar1 + 0x110) != 0)) {\n        *(iVar1 + 0x10c) = 1;\n        iVar1 = fcn.00459f40();\n        **(*(iVar1 + 0x30) + 0x110) = 0;\n        *(*(iVar1 + 0x30) + 0x10c) = 0;\n        fcn.004525c0();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = *(unaff_RDI + 0x30);\n    if ((iVar1 != 0) && (*(iVar1 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar1 = fcn.0044e660(arg1, iVar1, 0, 100);\n    if ((iVar1 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar1 = fcn.0044e660(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar1 == 100) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    fcn.00450e20();\n    puStack56 = *(unaff_RDI + 0x130);\n    if (puStack56 == NULL) {\n        return;\n    }\n    iVar1 = puStack56[1];\n    puStack56 = *puStack56;\n    if (iVar1 != 0) {\n        iVar2 = 0;\n        while( true ) {\n            uStack48 = *puStack56;\n            uStack40 = *(puStack56 + 1);\n            uStack36 = *(puStack56 + 0xc);\n            uStack32 = *(puStack56 + 2);\n            uStack28 = *(puStack56 + 0x14);\n            uStack24 = *(puStack56 + 3);\n            uStack20 = *(puStack56 + 0x1c);\n            uStack16 = *(puStack56 + 4);\n            uStack12 = *(puStack56 + 0x24);\n            fcn.004514e0(puStack56[2]);\n            iVar2 = iVar2 + 1;\n            if (iVar1 <= iVar2) break;\n            puStack56 = puStack56 + 5;\n        }\n    }\n    return;\n}\n",
        "token_count": 830
    },
    "004516a0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004516a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x4516df;\n            uVar3 = fcn.00449820();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x27) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x0045179e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x451753;\n            iVar2 = fcn.00449e60(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x00451794;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 0xc + iVar2 * 0x14);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x451788;\n                uVar3 = fcn.00449960(uVar1);\ncode_r0x00451794:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x0045179e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x4517c5;\n                uVar4 = fcn.00449ae0(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x47f25a;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x45182b;\n                fcn.004330a0();\n                *(*0x20 + -0x80) = 0x45183a;\n                fcn.004339a0();\n                *(*0x20 + -0x80) = 0x45184b;\n                fcn.004339a0();\n                *(*0x20 + -0x80) = 0x451850;\n                fcn.00433120();\n                *(*0x20 + -0x80) = 0x451855;\n                fcn.004330a0();\n                *(*0x20 + -0x80) = 0x451866;\n                fcn.004339a0();\n                *(*0x20 + -0x80) = 0x451875;\n                fcn.004339a0();\n                *(*0x20 + -0x80) = 0x451886;\n                fcn.004339a0();\n                *(*0x20 + -0x80) = 0x451892;\n                fcn.004337a0();\n                *(*0x20 + -0x80) = 0x451897;\n                fcn.00433120();\n                *(*0x20 + -0x80) = 0x4518a8;\n                uVar5 = fcn.00448f20();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x4518c6;\n                    uVar3 = fcn.00448f20();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x4518d0;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x4518e5;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x4518fa;\n                    fcn.00433800(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x4518ff;\n                    fcn.00433120();\n                }\n                *(*0x20 + -0x80) = 0x451905;\n                fcn.004330a0();\n                *(*0x20 + -0x80) = 0x45190a;\n                fcn.00433300();\n                *(*0x20 + -0x80) = 0x45190f;\n                fcn.00433120();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x451925;\n            in_RAX = fcn.004599e0(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x45193a;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1804
    },
    "00451e40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00451e40(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if (((uVar2 == 4) || (uVar2 == 3)) && (*(in_RAX + 0xa8) != 0)) {\n        fcn.0045b2e0();\n        iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004339a0();\n    fcn.00433120();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    if (0 < iVar3) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 453
    },
    "00454900": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00454900(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.004599e0(0);\n    }\n    fcn.00459aa0(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 800
    },
    "00454ae0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00454ae0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x00454c2c;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00454b80;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.004599e0(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00454b80:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.004599e0(unaff_RBX);\n    }\n    fcn.004599e0(unaff_RBX);\ncode_r0x00454c2c:\n    fcn.004599e0(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 598
    },
    "004553c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004553c0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00455456:\n            uVar1 = 4;\n            goto code_r0x00455492;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00455492;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00455492;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00455492;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00455456;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00455492;\n        }\n    }\n    uVar3 = fcn.00447e00();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00455492:\n    if ((*0x5a1b4b != '\\0') || (*0x5a1b49 != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x53a28c;\n    *0x53a28c = uVar1 | *0x5a1bb4;\n    return uVar2;\n}\n",
        "token_count": 607
    },
    "00464f00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00464f00(uint64_t arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    uint64_t in_R10;\n    uint64_t in_R11;\n    uint32_t unaff_R12D;\n    int64_t unaff_R14;\n    \ncode_r0x00464f00:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x38;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x24) = 0;\n        uVar3 = 0;\n        do {\n            if (3 < uVar3) {\n                uVar3 = 4;\n                unaff_RSI = 0;\n                unaff_RDI = 0;\n                goto code_r0x00465065;\n            }\n            if (arg3 == in_R10) {\n                if (uVar3 == 0) {\n                    return in_R10;\n                }\n                if ((uVar3 != 1) && (*(in_RAX + 0x140) == -1)) {\n                    unaff_RSI = 0;\n                    unaff_RDI = 0;\n                    goto code_r0x00465065;\n                }\n                *(*0x20 + -0x10) = in_R10;\n                *(*0x20 + -0x40) = 0x465028;\n                fcn.00409500();\n                return *(*0x20 + -0x10);\n            }\n            if (arg3 <= in_R10) goto code_r0x004652d7;\n            uVar1 = *(in_R10 + unaff_RSI);\n            arg4 = uVar1;\n            in_R11 = in_R10 + 1;\n            uVar2 = *(in_RAX + 0x40 + arg4);\n            unaff_R12D = uVar2;\n            if (uVar2 == 0xff) {\n                if ((uVar1 != 10) && (uVar1 != 0xd)) {\n                    *(*0x20 + -0x10) = in_R11;\n                    unaff_R12D = *(in_RAX + 0x140);\n                    if (unaff_R12D != uVar1) {\n                        *(*0x20 + -0x40) = 0x464fe9;\n                        fcn.00409500();\n                        return *(*0x20 + -0x10);\n                    }\n                    if (uVar3 < 2) {\n                        *(*0x20 + -0x40) = 0x464fc5;\n                        fcn.00409500();\n                        return *(*0x20 + -0x10);\n                    }\n                    arg1_00 = arg1;\n                    if (uVar3 == 2) goto code_r0x00465233;\n                    goto code_r0x004651b6;\n                }\n                uVar3 = uVar3 - 1;\n            }\n            else {\n                if (3 < uVar3) goto code_r0x004652ca;\n                *(*0x20 + (uVar3 - 0x24)) = uVar2;\n            }\n            uVar3 = uVar3 + 1;\n            in_R10 = in_R11;\n        } while( true );\n    }\n    goto code_r0x004652e6;\ncode_r0x004651b6:\n    arg1_00 = arg3;\n    if (arg1_00 <= in_R11) {\ncode_r0x00465219:\n        unaff_RSI = 0;\n        unaff_RDI = 0;\n        in_R10 = in_R11;\ncode_r0x00465065:\n        *(*0x20 + -0x10) = in_R10;\n        uVar5 = *(*0x20 + -0x24) << 0x12 | *(*0x20 + -0x23) << 0xc;\n        uVar1 = *(*0x20 + -0x22);\n        arg1_00 = *(*0x20 + -0x21) | uVar1 << 6 | uVar5;\n        *(*0x20 + -0x22) = arg1_00;\n        *(*0x20 + -0x23) = (uVar1 << 6 | uVar5) >> 8;\n        arg4 = uVar5 >> 0x10;\n        *(*0x20 + -0x24) = uVar5 >> 0x10;\n        if (uVar3 == 2) {\ncode_r0x00465132:\n            arg1_00 = *(*0x20 + -0x24);\n            if (arg1 != 0) {\n                *unaff_RBX = *(*0x20 + -0x24);\n                if ((*(in_RAX + 0x144) != '\\0') && ((*(*0x20 + -0x23) != '\\0' || (*(*0x20 + -0x22) != '\\0')))) {\n                    *(*0x20 + -0x40) = 0x465165;\n                    fcn.00409500();\n                    return *(*0x20 + -0x10);\n                }\n                return in_R10;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x46519f;\n            fcn.004599e0(0);\ncode_r0x0046519f:\n            *(*0x20 + -0x40) = 0x4651a9;\n            fcn.004599e0(arg1);\n        }\n        else {\n            if (uVar3 == 3) {\ncode_r0x004650e3:\n                arg1_00 = *(*0x20 + -0x23);\n                if (1 < arg1) {\n                    unaff_RBX[1] = *(*0x20 + -0x23);\n                    if ((*(in_RAX + 0x144) != '\\0') && (*(*0x20 + -0x22) != '\\0')) {\n                        *(*0x20 + -0x40) = 0x465112;\n                        fcn.00409500();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x23) = 0;\n                    goto code_r0x00465132;\n                }\n                goto code_r0x0046519f;\n            }\n            if (uVar3 != 4) {\n                return in_R10;\n            }\n            if (2 < arg1) {\n                unaff_RBX[2] = arg1_00;\n                *(*0x20 + -0x22) = 0;\n                goto code_r0x004650e3;\n            }\n        }\n        *(*0x20 + -0x40) = 0x4651b3;\n        in_RAX = fcn.004599e0(arg1);\ncode_r0x004651b3:\n        in_R11 = in_R11 + 1;\n        arg3 = arg1_00;\n        goto code_r0x004651b6;\n    }\n    if (in_R11 < arg1_00) {\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n        if ((uVar1 != 10) && (uVar1 != 0xd)) {\n            if (arg1_00 <= in_R11) goto code_r0x00465219;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = uVar3;\n            *(*0x20 + -0x18) = in_R11;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x40) = 0x4651f4;\n            unaff_RDI = fcn.00409500();\n            arg1 = *(*0x20 + 0x18);\n            uVar3 = *(*0x20 + -0x20);\n            unaff_RBX = *(*0x20 + 0x10);\n            in_R11 = *(*0x20 + -0x18);\n            unaff_RSI = 0x4f0ea8;\n            in_RAX = *(*0x20 + 8);\n            in_R10 = in_R11;\n            goto code_r0x00465065;\n        }\n        goto code_r0x004651b3;\n    }\n    *(*0x20 + -0x40) = 0x465230;\n    arg3 = arg1_00;\n    in_RAX = fcn.004599e0(arg1_00);\n    do {\n        in_R11 = in_R11 + 1;\ncode_r0x00465233:\n        if (arg3 <= in_R11) break;\n        if (arg3 <= in_R11) goto code_r0x004652bf;\n        uVar1 = *(in_R11 + unaff_RSI);\n        arg4 = uVar1;\n    } while ((uVar1 == 10) || (uVar1 == 0xd));\n    *(*0x20 + -0x10) = in_R11;\n    if (arg3 == in_R11) {\n        *(*0x20 + -0x40) = 0x465299;\n        fcn.00409500();\n        return *(*0x20 + -0x10);\n    }\n    if (arg3 <= in_R11) goto code_r0x004652b4;\n    arg4 = *(unaff_RSI + in_R11);\n    if (unaff_R12D != *(unaff_RSI + in_R11)) {\n        *(*0x20 + -0x40) = 0x465276;\n        fcn.00409500();\n        return *(*0x20 + -0x10);\n    }\n    in_R11 = in_R11 + 1;\n    arg1 = arg1_00;\n    goto code_r0x004651b6;\ncode_r0x004652b4:\n    *(*0x20 + -0x40) = 0x4652bf;\n    fcn.004599e0(arg3);\ncode_r0x004652bf:\n    *(*0x20 + -0x40) = 0x4652ca;\n    fcn.004599e0(arg3);\ncode_r0x004652ca:\n    *(*0x20 + -0x40) = 0x4652d7;\n    fcn.004599e0(4);\ncode_r0x004652d7:\n    arg1 = arg3;\n    *(*0x20 + -0x40) = 0x4652e5;\n    arg3 = arg1;\n    in_RAX = fcn.004599e0(arg1);\ncode_r0x004652e6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + 0x30) = arg3;\n    *(puVar4 + 0x38) = arg4;\n    *(puVar4 + 0x40) = in_R10;\n    *(puVar4 + -8) = 0x465313;\n    fcn.00457320();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    arg3 = *(puVar4 + 0x30);\n    arg4 = *(puVar4 + 0x38);\n    in_R10 = *(puVar4 + 0x40);\n    *0x20 = puVar4;\n    goto code_r0x00464f00;\n}\n",
        "token_count": 2845
    },
    "004025a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004025a0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x5a2263 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4147
    },
    "00402700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402700(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x5a2263 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x004026e3;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x004026e3:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "00402c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402c40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (((*0x5a2260 != '\\0') && (*0x5a226d != '\\0')) && (*0x5a226e != '\\0')) {\n        *0x5a1b4f = 1;\n        fcn.0042d300(0x80);\n        return;\n    }\n    fcn.0042d300(0x20);\n    *0x5a1e00 = *0x5a1e00 | 1;\n    *0x5a1e08 = *0x5a1e08 | 1;\n    *0x5a1e10 = *0x5a1e10 | 1;\n    *0x5a1e18 = *0x5a1e18 | 1;\n    return;\n}\n",
        "token_count": 244
    },
    "00402d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402d60(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x5a1da0 != '\\0') {\n        fcn.00402d00();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 68
    },
    "00403660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403660(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403580();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403580();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x5a1cc0;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.004571e0();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "00403820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403820(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403580();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403580();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00403980(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "004038c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004038c0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403580();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403580();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00403980(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00404040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404040(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *noname_0;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t arg2;\n    ulong uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar3 = *puVar1;\n            if (uVar3 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar2 = ZEXT816(unaff_RBX) * ZEXT816(uVar3);\n                    uVar3 = SUB168(auVar2, 0);\n                    if (((SUB168(auVar2 >> 0x40, 0) == 0) && (uVar4 = 0xffffffffffa0,  uVar3 < 0xffffffffffa1)) &&\n                       (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar3 == 0) {\n                            *(*0x20 + -0x40) = 0x404166;\n                            arg2 = fcn.0040b1e0(1);\n                            if (*0x5a1da0 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404185;\n                                arg2 = fcn.00459640(arg2 + 0x10, uVar4, param_3, param_4);\n                            }\n                        }\n                        else if (*(*(*0x20 + -0x18) + 8) == 0) {\n                            uVar4 = 1;\n                            *(*0x20 + -0x40) = 0x4040d3;\n                            arg2 = fcn.0040b1e0();\n                            if (*0x5a1da0 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x60;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x4040f4;\n                                arg2 = fcn.00459660(uVar4, arg2 + 0x60, param_3, param_4);\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = uVar3;\n                            *(*0x20 + -0x40) = 0x40410a;\n                            uVar4 = fcn.0040bba0();\n                            *(*0x20 + -0x10) = uVar4;\n                            *(*0x20 + -0x40) = 0x404125;\n                            uVar4 = fcn.0040b1e0(1);\n                            if (*0x5a1da0 == 0) {\n                                arg2 = *(*0x20 + -0x10);\n                                *(arg2 + 0x10) = uVar4;\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x40414d;\n                                fcn.00459540(arg2 + 0x10, arg2, param_3, param_4);\n                            }\n                        }\n                        noname_0 = *(*0x20 + -0x18);\n                        uVar4 = *noname_0;\n                        *(arg2 + 0x18) = uVar4;\n                        if (*0x5a1da0 == 0) {\n                            *(arg2 + 0x20) = noname_0;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x4041ab;\n                            arg2 = fcn.00459640(noname_0, uVar4, param_3, param_4);\n                        }\n                        *(arg2 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x4041d1;\n                    fcn.00431040();\n                }\n                *(*0x20 + -0x40) = 0x4041e5;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x4041f6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x404206;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1262
    },
    "00404260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404260(uint64_t *param_1, uint64_t param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *noname_0;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t iVar9;\n    int64_t *arg3;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                noname_0 = 0x4;\n                *(*0x20 + -0x88) = 0x404365;\n                fcn.00434240();\n                *(*0x20 + -0x88) = 0x404376;\n                fcn.004317e0();\n                param_1 = noname_0;\ncode_r0x00404379:\n                do {\n                    piVar3 = noname_0[7];\n                    if (piVar3 == NULL) {\n                        piVar3 = NULL;\n                        break;\n                    }\n                    arg1 = noname_0 + 7;\n                    uVar6 = piVar3[1];\n                    if (uVar6 == 0) {\n                        if (*0x5a1da0 == 0) {\n                            *(noname_0 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar7 = 0;\n                            *(*0x20 + -0x88) = 0x4043f7;\n                            fcn.004596c0(param_1, piVar3, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404405;\n                            noname_0 = fcn.004596c0(param_1, piVar3, uVar7, param_4);\n                        }\n                    }\n                    else if (*0x5a1da0 == 0) {\n                        *(uVar6 + 0x10) = 0;\n                        noname_0[7] = uVar6;\n                        piVar3[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar6 + 0x10;\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x4043c9;\n                        fcn.00459660(arg1, 0, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x4043d1;\n                        fcn.004596c0(arg1, uVar7, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x4043da;\n                        noname_0 = fcn.00459660(arg1, uVar7, uVar6, iVar4);\n                    }\n                    if (*(piVar3 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar3;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar12 = *piVar1 == 0;\n                        if (bVar12) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar12) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = noname_0;\n                } while (param_3 != '\\0');\n                if (piVar3 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x4048c0;\n                    *(*0x20 + -0x10) = noname_0;\n                    *(*0x20 + -0x88) = 0x40480b;\n                    fcn.00404900(*(*0x20 + 0x10), piVar3, 0x4048c0);\n                    return 1;\n                }\n                if (*noname_0 <= noname_0[1] && noname_0[1] != *noname_0) {\n                    *(*0x20 + -0x88) = 0x404798;\n                    fcn.0040f460(*(*0x20 + 0x10));\n                    piVar3 = *(*0x20 + 8);\n                    iVar4 = piVar3[5];\n                    piVar3[5] = iVar4 + 1;\n                    if (piVar3[1] == iVar4 + 1) {\n                        piVar3[5] = 0;\n                    }\n                    *piVar3 = *piVar3 + 1;\n                    *(*0x20 + -0x88) = 0x4047c8;\n                    fcn.00409cc0();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == 0) {\n                    *(*0x20 + -0x88) = 0x404485;\n                    fcn.00409cc0();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x40449b;\n                piVar3 = fcn.00434460(noname_0, *(*0x20 + 0x18));\n                piVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    piVar3[5] = -1;\n                }\n                if (*0x5a1da0 == 0) {\n                    noname_1 = *(*0x20 + 0x10);\n                    piVar3[3] = noname_1;\n                    piVar3[8] = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    *piVar3 = iVar9;\n                }\n                else {\n                    noname_1 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x4044ed;\n                    fcn.00459660(iVar4, noname_1, param_3, param_4);\n                    uVar7 = 0;\n                    *(*0x20 + -0x88) = 0x4044f9;\n                    fcn.004596c0(iVar4, noname_1, 0, param_4);\n                    iVar9 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404506;\n                    piVar3 = fcn.004596e0(iVar4, noname_1, uVar7);\n                }\n                *(piVar3 + 0x34) = 0;\n                arg3 = piVar3 + 10;\n                if (*0x5a1da0 == 0) {\n                    param_4 = *(*0x20 + 8);\n                    piVar3[10] = param_4;\n                }\n                else {\n                    param_4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x40453b;\n                    piVar3 = fcn.004596e0(iVar4, noname_1, arg3);\n                }\n                iVar10 = iVar9 + 0x148;\n                iVar11 = iVar9 + 0x88;\n                if (*0x5a1da0 == 0) {\n                    *(iVar9 + 0x148) = piVar3;\n                    *(iVar9 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404576;\n                    fcn.00459540(iVar4, noname_1, arg3, param_4);\n                    *(*0x20 + -0x88) = 0x404585;\n                    piVar3 = fcn.004596c0(iVar4, noname_1, 0, param_4);\n                }\n                if (*0x5a1da0 == 0) {\n                    piVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4045b4;\n                    piVar3 = fcn.004596c0(iVar4, noname_1, 0, param_4);\n                }\n                *(*0x20 + -0x48) = piVar3;\n                *(*0x20 + -0x20) = arg3;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x30) = iVar11;\n                iVar10 = *(param_4 + 0x50);\n                if (iVar10 == 0) {\n                    if (*0x5a1da0 == 0) {\n                        piVar3[2] = 0;\n                        *(param_4 + 0x48) = piVar3;\n                        *(param_4 + 0x50) = piVar3;\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x404652;\n                        fcn.004596c0(iVar4, noname_1, 0, param_4);\n                        *(*0x20 + -0x88) = 0x40465b;\n                        fcn.00459540(iVar4, noname_1, uVar7, param_4);\n                        *(*0x20 + -0x88) = 0x404665;\n                        fcn.00459540(iVar4, noname_1, uVar7, param_4);\n                    }\n                }\n                else if (*0x5a1da0 == 0) {\n                    piVar3[2] = iVar10;\n                    *(iVar10 + 8) = piVar3;\n                    *(param_4 + 0x50) = piVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404607;\n                    fcn.004596e0(iVar4, noname_1, arg3);\n                    *(*0x20 + -0x88) = 0x404610;\n                    fcn.00459540(iVar4, noname_1, arg3, iVar10);\n                    *(*0x20 + -0x88) = 0x404618;\n                    fcn.00459540(iVar4, noname_1, arg3, iVar10);\n                }\n                uVar2 = *(iVar9 + 0xb9);\n                *(iVar9 + 0xb9) = 1;\n                param_3 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x40469b;\n                fcn.00434240();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x5a1da0 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x4046d4;\n                        iVar4 = fcn.00459640(0, param_2, param_3, param_4);\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar6 = *(iVar4 + 0x35);\n                    if (*0x5a1da0 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x404705;\n                        iVar4 = fcn.00459660(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar6;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x404727;\n                        fcn.00429200();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar6 = *(*0x20 + -0x51);\n                    }\n                    if (*0x5a1da0 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x404750;\n                        fcn.00459660(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x404755;\n                    fcn.00434760();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x404839;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x88) = 0x40484c;\n                    fcn.00431040();\n                }\n                *(*0x20 + -0x88) = 0x40485d;\n                fcn.004317e0();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar6 = in_RAX[1];\n                    if (uVar6 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar6 & 0xffffffffffffff00 | *in_RAX == uVar6;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5a1c20 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4042e7;\n                    fcn.004593e0(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x404325;\n                fcn.00409aa0();\n                noname_0 = *(*0x20 + 8);\n                if (*(noname_0 + 0x1c) == 0) goto code_r0x00404379;\n            }\n            *(*0x20 + -0x88) = 0x404869;\n            fcn.00409cc0();\n            unaff_RBX = 0x4f0d98;\n            *(*0x20 + -0x88) = 0x40487c;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x404895;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4045
    },
    "00404900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404900(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.00404a60(arg1);\n        if (*0x5a1da0 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            fcn.00459680(unaff_RBX, noname_1, arg3, in_R9);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x5a1da0 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00459640(unaff_RBX, unaff_RDI, arg3, in_R9);\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.004593e0(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00434380();\n    return;\n}\n",
        "token_count": 385
    },
    "00404b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404b60(ulong param_1, int64_t *param_2, int64_t *param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t **arg1;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x404ba5;\n                fcn.00409aa0();\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x404f5a;\n                fcn.00409cc0();\n                *(*0x20 + -0x40) = 0x404f6d;\n                fcn.00431040();\n            }\n            *(*0x20 + -0x40) = 0x404f85;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x404f90;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n    *(iVar4 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x00404cb4:\n    arg1 = *(iVar4 + 0x38);\n    if (arg1 != NULL) goto code_r0x00404cc9;\n    arg1 = NULL;\n    goto code_r0x00404bec;\ncode_r0x00404cc9:\n    iVar6 = iVar4 + 0x38;\n    piVar5 = arg1[1];\n    if (piVar5 == NULL) {\n        if (*0x5a1da0 == 0) {\n            *(iVar4 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404d3a;\n            fcn.004596a0(arg1, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x404d45;\n            iVar4 = fcn.004596a0(arg1, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x5a1da0 == 0) {\n        piVar5[2] = 0;\n        *(iVar4 + 0x38) = piVar5;\n        arg1[1] = NULL;\n    }\n    else {\n        param_3 = piVar5 + 2;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x404d07;\n        fcn.004596e0(arg1, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x404d0f;\n        fcn.004596a0(arg1, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x404d18;\n        iVar4 = fcn.004596e0(arg1, iVar6, param_3);\n    }\n    if (*(arg1 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        piVar2 = *arg1;\n        LOCK();\n        piVar5 = piVar2 + 0x2f;\n        bVar8 = *piVar5 == 0;\n        if (bVar8) {\n            *piVar5 = 1;\n        }\n        param_2 = (piVar2 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x00404bec:\n        if (arg1 != NULL) {\n            *(*0x20 + -0x18) = arg1;\n            if (arg1[3] != NULL) {\n                *(*0x20 + -0x40) = 0x404c0e;\n                fcn.0040f700();\n                if (*0x5a1da0 == 0) {\n                    arg1 = *(*0x20 + -0x18);\n                    arg1[3] = NULL;\n                }\n                else {\n                    param_2 = NULL;\n                    *(*0x20 + -0x40) = 0x404c3c;\n                    arg1 = fcn.00459660(*(*0x20 + -0x18) + 0x18, 0, param_3, param_4);\n                }\n                iVar4 = *(*0x20 + 8);\n            }\n            if (arg1[5] != NULL) {\n                *(*0x20 + -0x40) = 0x404c55;\n                fcn.004593e0(arg1, param_2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                arg1 = *(*0x20 + -0x18);\n                arg1[5] = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + 8);\n            }\n            param_2 = *arg1;\n            if (*0x5a1da0 == 0) {\n                param_2[0x11] = arg1;\n            }\n            else {\n                param_3 = param_2 + 0x11;\n                *(*0x20 + -0x40) = 0x404cac;\n                iVar4 = fcn.00459640(arg1, param_2, param_3, param_4);\n            }\n            *(arg1 + 0x35) = 0;\n            param_2[0x14] = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = param_2;\n            goto code_r0x00404cb4;\n        }\n        goto code_r0x00404e45;\n    }\n    goto code_r0x00404cb4;\ncode_r0x00404e45:\n    piVar5 = *(iVar4 + 0x48);\n    if (piVar5 != NULL) goto code_r0x00404e52;\n    piVar5 = NULL;\n    goto code_r0x00404da0;\ncode_r0x00404e52:\n    iVar6 = iVar4 + 0x48;\n    iVar3 = piVar5[1];\n    if (iVar3 == 0) {\n        if (*0x5a1da0 == 0) {\n            *(iVar4 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404ec7;\n            fcn.00459680(piVar5, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x404ed0;\n            iVar4 = fcn.00459680(piVar5, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x5a1da0 == 0) {\n        *(iVar3 + 0x10) = 0;\n        *(iVar4 + 0x48) = iVar3;\n        piVar5[1] = 0;\n    }\n    else {\n        param_3 = iVar3 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x404e90;\n        fcn.004596e0(piVar5, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x404e98;\n        fcn.00459680(piVar5, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x404ea5;\n        iVar4 = fcn.004596e0(piVar5, iVar6, param_3);\n    }\n    if (*(piVar5 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        iVar6 = *piVar5;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar8 = *piVar1 == 0;\n        if (bVar8) {\n            *piVar1 = 1;\n        }\n        param_2 = (iVar6 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x00404da0:\n        if (piVar5 == NULL) {\n            *(*0x20 + -0x40) = 0x404f09;\n            fcn.00409cc0();\n            while (iVar4 = *(*0x20 + -0x28),  iVar4 != 0) {\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x28) = *(iVar4 + 0xa0);\n                }\n                *(iVar4 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x404f25;\n                fcn.00434380();\n            }\n            return;\n        }\n        if (*0x5a1da0 == 0) {\n            piVar5[3] = 0;\n        }\n        else {\n            param_2 = piVar5 + 3;\n            *(*0x20 + -0x40) = 0x404dcd;\n            iVar4 = fcn.00459680(piVar5, param_2, param_3, param_4);\n        }\n        if (piVar5[5] != 0) {\n            *(*0x20 + -0x20) = piVar5;\n            *(*0x20 + -0x40) = 0x404de5;\n            fcn.004593e0(piVar5, param_2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar5 = *(*0x20 + -0x20);\n            piVar5[5] = *(*0x20 + -0x38);\n            iVar4 = *(*0x20 + 8);\n        }\n        param_2 = *piVar5;\n        if (*0x5a1da0 == 0) {\n            param_2[0x11] = piVar5;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404e3c;\n            iVar4 = fcn.00459640(piVar5, param_2, param_3, param_4);\n        }\n        *(piVar5 + 0x35) = 0;\n        param_2[0x14] = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = param_2;\n    }\n    goto code_r0x00404e45;\n}\n",
        "token_count": 2776
    },
    "00404fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00404fe0(uint64_t param_1, int64_t *param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t *piStackX8;\n    int64_t iStackX16;\n    uint8_t uStackX24;\n    int64_t *piStack136;\n    int64_t *piStack88;\n    \n    while (uVar4 = param_1, \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        param_1 = param_1 & 0xff;\n        piStackX8 = in_RAX;\n        iStackX16 = unaff_RBX;\n        uStackX24 = uVar4;\n    }\n    if (in_RAX == NULL) {\n        if (uVar4 != 0) {\n            fcn.00434240();\n            in_RAX = fcn.004317e0();\n            goto code_r0x004051a5;\n        }\n        return 0;\n    }\n    if (uVar4 == 0) {\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    if (uVar5 != '\\0') {\n        if (*(in_RAX + 0x1c) == 0) {\n            return 0;\n        }\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n        }\n        if (uVar5 != '\\0') {\n            if (unaff_RBX != 0) {\n                fcn.0040f700();\n            }\n            return 1;\n        }\n    }\n    if (*0x5a1c20 == 0) {\n        piStack136 = NULL;\n    }\n    else {\n        fcn.004593e0(param_1, uVar5);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar2 = in_RAX + 0xb;\n    param_2 = piStack136;\n    fcn.00409aa0();\n    piStackX8 = in_RAX;\n    iStackX16 = unaff_RBX;\n    uStackX24 = uVar4;\n    piStack88 = piStack136;\n    if (*(in_RAX + 0x1c) != 0) {\n        if (*in_RAX != 0) goto code_r0x004051a5;\n        fcn.00409cc0();\n        if (unaff_RBX != 0) {\n            fcn.0040f700();\n        }\n        return 1;\n    }\ncode_r0x00405558:\n    param_2 = in_RAX[9];\n    if (param_2 != NULL) goto code_r0x00405569;\n    param_2 = NULL;\n    goto code_r0x00405630;\ncode_r0x00405569:\n    piVar3 = in_RAX + 9;\n    iVar6 = param_2[1];\n    if (iVar6 == 0) {\n        if (*0x5a1da0 == 0) {\n            *(in_RAX + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar8 = 0;\n            fcn.004596c0(piVar2, param_2, 0, param_4);\n            in_RAX = fcn.004596c0(piVar2, param_2, uVar8, param_4);\n        }\n    }\n    else if (*0x5a1da0 == 0) {\n        *(iVar6 + 0x10) = 0;\n        in_RAX[9] = iVar6;\n        param_2[1] = 0;\n    }\n    else {\n        iVar9 = iVar6 + 0x10;\n        uVar8 = 0;\n        fcn.00459660(piVar3, 0, iVar6, iVar9);\n        fcn.004596c0(piVar3, uVar8, iVar6, iVar9);\n        in_RAX = fcn.00459660(piVar3, uVar8, iVar6, iVar9);\n    }\n    if (*(param_2 + 0x34) == '\\0') {\n        param_3 = 0;\n    }\n    else {\n        iVar6 = *param_2;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar10 = *piVar1 == 0;\n        if (bVar10) {\n            *piVar1 = 1;\n        }\n        param_3 = (iVar6 & 0xffffff00 | bVar10) ^ 1;\n    }\n    param_4 = 1;\n    piVar2 = in_RAX;\n    if (param_3 == '\\0') {\ncode_r0x00405630:\n        if (param_2 != NULL) {\n            fcn.00405700(iStackX16);\n            return 1;\n        }\ncode_r0x004051a5:\n        if (*in_RAX != 0) {\n            if (iStackX16 != 0) {\n                fcn.0040f460(in_RAX[6] * *(in_RAX + 3) + in_RAX[2]);\n                in_RAX = piStackX8;\n            }\n            fcn.0040f700(in_RAX[4]);\n            iVar6 = piStackX8[6];\n            piStackX8[6] = iVar6 + 1;\n            if (piStackX8[1] == iVar6 + 1) {\n                piStackX8[6] = 0;\n            }\n            *piStackX8 = *piStackX8 + -1;\n            fcn.00409cc0();\n            return 1;\n        }\n        if (uStackX24 == 0) {\n            fcn.00409cc0();\n            return 0;\n        }\n        piVar2 = fcn.00434460(uStackX24, param_2);\n        piVar2[5] = 0;\n        if (piStack88 != NULL) {\n            piVar2[5] = -1;\n        }\n        piVar3 = piStack88;\n        if (*0x5a1da0 == 0) {\n            piVar2[3] = iStackX16;\n            piVar2[8] = 0;\n        }\n        else {\n            fcn.00459660(piStack88, iStackX16, param_3, param_4);\n            piVar2 = fcn.00459660(piVar3, 0, param_3, param_4);\n        }\n        iVar6 = unaff_R14 + 0x148;\n        if (*0x5a1da0 == 0) {\n            *(unaff_R14 + 0x148) = piVar2;\n            *piVar2 = unaff_R14;\n        }\n        else {\n            fcn.00459540(piVar3, iVar6, param_3, param_4);\n            piVar2 = fcn.00459680(piVar3, iVar6, param_3, param_4);\n        }\n        *(piVar2 + 0x34) = 0;\n        param_4 = unaff_R14 + 0x88;\n        piVar7 = piStackX8;\n        if (*0x5a1da0 == 0) {\n            piVar2[10] = piStackX8;\n            *(unaff_R14 + 0x88) = 0;\n        }\n        else {\n            fcn.00459660(piVar3, piStackX8, piVar2 + 10, param_4);\n            piVar2 = fcn.004596c0(piVar3, piVar7, 0, param_4);\n        }\n        if (*0x5a1da0 == 0) {\n            piVar2[1] = 0;\n        }\n        else {\n            piVar2 = fcn.004596c0(piVar3, iVar6, 0, param_4);\n        }\n        iVar9 = piVar7[8];\n        if (iVar9 == 0) {\n            if (*0x5a1da0 == 0) {\n                piVar2[2] = 0;\n                piVar7[7] = piVar2;\n                piVar7[8] = piVar2;\n            }\n            else {\n                uVar8 = 0;\n                fcn.004596c0(piVar3, iVar6, 0, param_4);\n                fcn.00459540(piVar3, iVar6, uVar8, param_4);\n                fcn.00459540(piVar3, iVar6, uVar8, param_4);\n            }\n        }\n        else if (*0x5a1da0 == 0) {\n            piVar2[2] = iVar9;\n            *(iVar9 + 8) = piVar2;\n            piVar7[8] = piVar2;\n        }\n        else {\n            fcn.004596c0(piVar3, iVar6, iVar9, param_4);\n            fcn.00459540(piVar3, iVar6, iVar9, param_4);\n            fcn.00459540(piVar3, iVar6, iVar9, param_4);\n        }\n        uVar4 = *(unaff_R14 + 0xb9);\n        *(unaff_R14 + 0xb9) = 1;\n        param_3 = uVar4;\n        in_RAX = 0xe;\n        fcn.00434240();\n        if (*(unaff_R14 + 0x148) == piVar2) {\n            iVar6 = unaff_R14;\n            if (*0x5a1da0 == 0) {\n                *(unaff_R14 + 0x148) = 0;\n                piVar3 = piVar2;\n            }\n            else {\n                piVar3 = fcn.00459640(0, unaff_R14, param_3, param_4);\n            }\n            *(iVar6 + 0xb8) = 0;\n            if (0 < piVar3[5]) {\n                fcn.00429200();\n                piVar3 = piVar2;\n                iVar6 = unaff_R14;\n            }\n            uVar5 = *(piVar3 + 0x35);\n            if (*0x5a1da0 == 0) {\n                *(iVar6 + 0x88) = 0;\n                piVar3[10] = 0;\n            }\n            else {\n                fcn.00459660(uVar5, 0, param_3, param_4);\n                fcn.00459660(uVar5, 0, param_3, param_4);\n            }\n            fcn.00434760();\n            return 1;\n        }\n        fcn.004317e0();\n        piVar2 = in_RAX;\n    }\n    goto code_r0x00405558;\n}\n",
        "token_count": 2779
    },
    "00405700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405700(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    int64_t iVar2;\n    code **unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00404ae0(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        in_R8 = *(in_RAX + 0x18);\n        if (arg1 != 0) {\n            fcn.0040f460(*(in_RAX + 0x30) * in_R8 + *(in_RAX + 0x10));\n        }\n        fcn.0040f460(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x5a1da0 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        in_R8 = 0;\n        fcn.004596c0(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x5a1da0 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00459640(unaff_RBX, unaff_RDI, in_R8, in_R9);\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.004593e0(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00434380();\n    return;\n}\n",
        "token_count": 597
    },
    "004088a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004088a0(uint64_t param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint32_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            noname_1 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *noname_1;\n                    *(*0x20 + -0x48) = 0x408abc;\n                    fcn.00452c00();\n                    *(*0x20 + -0x48) = 0x408ac5;\n                    uVar4 = fcn.00453360(param_1, noname_1, param_3, param_4);\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x408adb;\n                    iVar5 = fcn.0040bba0();\n                    if (*0x5a1da0 == 0) {\n                        *(iVar5 + 8) = *(*0x20 + 0x10);\n                        *(iVar5 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408b45;\n                        fcn.00459640(*(*0x20 + 0x10), noname_1, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x408b53;\n                        iVar5 = fcn.00459640(*(*0x20 + 8), noname_1, param_3, param_4);\n                    }\n                    *(iVar5 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5a1da0 != 0) goto code_r0x00408b25;\n                    *(iVar5 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408b25;\n                        fcn.00431040();\ncode_r0x00408b25:\n                        *(*0x20 + -0x48) = 0x408b33;\n                        fcn.00459640(*(*0x20 + -0x18), noname_1, param_3, param_4);\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x40890d;\n                iVar5 = *0x546b38;\n                iVar2 = fcn.00408ba0(unaff_RBX);\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x48) = 0x408925;\n                    fcn.00409aa0();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40893b;\n                    iVar2 = fcn.00408ba0(*(*0x20 + 0x10));\n                    if (iVar2 == 0) {\n                        uVar4 = *(*0x20 + 8);\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x408987;\n                        puVar3 = fcn.0040bf00(0x5a4680);\n                        if (*0x5a1da0 == 0) {\n                            *puVar3 = *(*0x20 + 8);\n                            iVar5 = *(*0x20 + 0x10);\n                            puVar3[1] = iVar5;\n                        }\n                        else {\n                            noname_0 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x4089b2;\n                            iVar5 = fcn.00459640(noname_0, uVar4, param_3, param_4);\n                            iVar5 = iVar5 + 8;\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x4089c5;\n                            puVar3 = fcn.00459680(noname_0, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar3;\n                        *(puVar3 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x4089d6;\n                        fcn.00408da0();\n                        *(*0x20 + -0x48) = 0x4089e5;\n                        fcn.00408c00();\n                        *(*0x20 + -0x48) = 0x4089f3;\n                        fcn.00409cc0();\n                        iVar2 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar2;\n                        *(*0x20 + -0x48) = 0x408958;\n                        fcn.00409cc0();\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar2 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x408a25;\n                    uVar4 = fcn.00408da0();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x408a3b;\n                    iVar2 = fcn.0040bba0();\n                    if (*0x5a1da0 == 0) {\n                        *(iVar2 + 8) = *(*0x20 + 0x10);\n                        *(iVar2 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408aa5;\n                        fcn.00459640(*(*0x20 + 0x10), iVar5, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x408ab3;\n                        iVar2 = fcn.00459640(*(*0x20 + 8), iVar5, param_3, param_4);\n                    }\n                    *(iVar2 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x5a1da0 != 0) goto code_r0x00408a85;\n                    *(iVar2 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408a85;\n                        fcn.00431040();\ncode_r0x00408a85:\n                        *(*0x20 + -0x48) = 0x408a93;\n                        fcn.00459640(*(*0x20 + -0x18), iVar5, param_3, param_4);\n                    } while( true );\n                }\n                return iVar2;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x408b66;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x408b7a;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2048
    },
    "00408c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408c00(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x546b38;\n                puVar2 = *0x546b38;\n                if ((*0x546b38)[1] < (uVar1 >> 2) * 3) goto code_r0x00408cea;\n                *(*0x20 + -0x30) = *0x546b38;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x408c6d;\n                piVar3 = fcn.0040b1e0(1, *0x546b38, uVar1);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45bc00;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x408ca5;\n                fcn.00409780();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x5a1da0 != '\\0') {\n                        *(*0x20 + -0x50) = 0x408ccf;\n                        fcn.00402d00();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x00408cea:\n                    *0x546b38 = puVar2;\n                    *(*0x20 + -0x50) = 0x408cf5;\n                    fcn.00408d40();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x408d10;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x50) = 0x408d25;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x408d30;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 746
    },
    "00408da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00408da0(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    ulong arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t *noname_0;\n    uint64_t arg1;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    int64_t noname_2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *in_RAX;\n            *(*0x20 + -0x40) = in_RAX[1];\n            *(*0x20 + -0xb0) = 0x408de7;\n            iVar3 = fcn.00452ae0();\n            arg1 = *(*0x20 + -0x30);\n            uVar9 = *(arg1 + 0x40);\n            uVar10 = *(iVar3 + 4);\n            uVar1 = *(iVar3 + 8);\n            if (uVar10 < 0x10001) {\n                if (uVar9 < 0x10001) {\n                    *(*0x20 + -0x48) = iVar3;\n                    *(*0x20 + -0x50) = uVar1 + iVar3;\n                    *(*0x20 + -0x90) = uVar9;\n                    *(*0x20 + -0x60) = uVar10;\n                    uVar10 = 0;\n                    uVar6 = 0;\n                    arg4 = 0;\ncode_r0x00408e60:\n                    if (uVar9 <= uVar10) {\n                        *(*(*0x20 + 8) + 0x18) = arg4;\n                        return 0;\n                    }\n                    uVar4 = *(arg1 + 0x38);\n                    arg1 = *(arg1 + 0x40);\n                    if (uVar10 < arg1) {\n                        *(*0x20 + -0x88) = uVar10;\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0x80) = uVar6;\n                        *(*0x20 + -0x20) = arg4;\n                        *(*0x20 + -0xb0) = 0x408ea5;\n                        uVar4 = fcn.00452ea0();\n                        *(*0x20 + -0x58) = uVar4;\n                        iVar3 = *(*0x20 + -0x88);\n                        iVar8 = *(*0x20 + -0x10);\n                        uVar9 = *(iVar8 + iVar3 * 8);\n                        *(*0x20 + -0xb0) = 0x408ec5;\n                        uVar4 = fcn.00452c00();\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0xb0) = 0x408ed2;\n                        uVar4 = fcn.00453360(iVar3, iVar8, uVar6, arg4);\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x70) = uVar9;\n                        *(*0x20 + -0xb0) = 0x408eec;\n                        uVar5 = fcn.00453520(iVar3, iVar8, uVar6, arg4);\n                        uVar4 = arg4;\n                        if (uVar9 == 0) {\n                            *(*0x20 + -0xb0) = 0x408eff;\n                            uVar5 = fcn.00453360(*(*0x20 + -0x30), iVar8, uVar6, arg4);\n                            uVar4 = arg4;\n                        }\n                        *(*0x20 + -0x38) = uVar5;\n                        *(*0x20 + -0x78) = uVar9;\n                        uVar9 = *(*0x20 + -0x40);\n                        uVar10 = *(*0x20 + -0x60);\n                        uVar12 = *(*0x20 + -0x80);\n                        do {\n                            if (uVar10 <= uVar12) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (uVar10 <= uVar12) {\n                                *(*0x20 + -0xb0) = 0x409111;\n                                fcn.004599e0(uVar10);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar12;\n                            noname_2 = uVar12 << 4;\n                            *(*0x20 + -0x68) = noname_2;\n                            *(*0x20 + -0xb0) = 0x408ff3;\n                            uVar6 = fcn.00452c00();\n                            *(*0x20 + -0x18) = uVar6;\n                            iVar3 = *(*0x20 + -0x50);\n                            uVar10 = *(iVar3 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x409013;\n                            iVar7 = fcn.00452ea0();\n                            iVar8 = *(*0x20 + -0x58);\n                            uVar9 = uVar10;\n                            if (iVar7 == iVar8) {\n                                *(*0x20 + -0xb0) = 0x40902f;\n                                fcn.00453360(iVar8, iVar3, noname_2, uVar4);\n                                if (*(*0x20 + -0x70) == uVar10) {\n                                    uVar9 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x40904d;\n                                    cVar2 = fcn.004025a0(uVar10, iVar3);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar8 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x40906c;\n                                fcn.00453520(iVar8, iVar3, noname_2, uVar4);\n                                if (uVar9 == 0) {\n                                    noname_0 = *(*0x20 + -0x48);\n                                    uVar9 = *noname_0;\n                                    *(*0x20 + -0xb0) = 0x409085;\n                                    fcn.00452c00();\n                                    *(*0x20 + -0xb0) = 0x40908a;\n                                    fcn.00453360(noname_0, iVar3, noname_2, uVar4);\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar9) {\n                                        *(*0x20 + -0xb0) = 0x4090c5;\n                                        cVar2 = fcn.004025a0(uVar9, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00408f25;\n                            }\n                            uVar12 = *(*0x20 + -0x80) + 1;\n                            uVar9 = *(*0x20 + -0x40);\n                            uVar10 = *(*0x20 + -0x60);\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x40911c;\n                    fcn.004599e0(arg1);\n                }\n                uVar10 = 0x10000;\n                *(*0x20 + -0xb0) = 0x409126;\n                fcn.00459ae0(arg1, uVar9);\n            }\n            *(*0x20 + -0xb0) = 0x409133;\n            in_RAX = fcn.00459ae0(arg1, uVar10);\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x40913e;\n        fcn.00457320();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\ncode_r0x00408f25:\n    *(*0x20 + -0xb0) = 0x408f3d;\n    arg4 = fcn.00453160();\n    iVar3 = *(*0x20 + -0x88);\n    if (iVar3 != 0) {\n        if (*0x5a1da0 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar3 * 8) = arg4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x408f79;\n            fcn.00459540(iVar3, *(*0x20 + 8), noname_2, uVar4);\n        }\n        arg4 = *(*0x20 + -0x20);\n    }\n    uVar10 = iVar3 + 1;\n    uVar9 = *(*0x20 + -0x90);\n    arg1 = *(*0x20 + -0x30);\n    uVar6 = *(*0x20 + -0x80);\n    goto code_r0x00408e60;\n}\n",
        "token_count": 2302
    },
    "00409240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409240(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    puVar1 = fcn.0040bba0();\n    if (*0x5a1da0 != 0) goto code_r0x004092aa;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00431040();\ncode_r0x004092aa:\n        iVar2 = fcn.00459640(arg1, in_RDX, in_R8, in_R9);\n        in_RDX = in_RAX;\n        fcn.00459660(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.00459640(unaff_RBX, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 324
    },
    "00409320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00409320(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong arg2;\n    ulong noname_1;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX == 0) {\n        noname_1 = 0;\n    }\n    else {\n        noname_1 = *(in_RAX + 8);\n    }\n    arg2 = noname_1;\n    puVar1 = fcn.0040bba0();\n    if (*0x5a1da0 != 0) goto code_r0x0040939c;\n    *puVar1 = arg1;\n    puVar1[1] = noname_1;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.00431040();\ncode_r0x0040939c:\n        iVar2 = fcn.00459640(arg1, arg2, in_R8, in_R9);\n        arg2 = noname_1;\n        fcn.00459660(iVar2 + 8, noname_1, in_R8, in_R9);\n        puVar1 = fcn.00459640(unaff_RBX, arg2, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00409580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00409580(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x5a2ca0;\n    }\n    else {\n        puVar1 = fcn.0040b1e0(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x5a1da0 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.00459640(in_RAX, unaff_RBX, param_3, param_4);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 239
    },
    "00409620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00409620(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX == 0) {\n        piVar1 = 0x5a2ca0;\n    }\n    else {\n        arg1_00 = 1;\n        piVar1 = fcn.0040b1e0();\n        piVar1[1] = unaff_RBX;\n        piVar1[2] = arg1;\n        if (*0x5a1da0 == 0) {\n            *piVar1 = in_RAX;\n        }\n        else {\n            piVar1 = fcn.00459660(arg1_00, in_RAX, in_R8, in_R9);\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 266
    },
    "00409aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409aa0(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x409afb;\n                fcn.0042e180();\n                iVar4 = 0;\n                if (1 < *0x5a1b90) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x409bb6;\n                        fcn.00459100();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x4dc540;\n                        *(*0x20 + -0x48) = 0x409b8f;\n                        fcn.004571e0();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x409c38;\n                                    fcn.0042dc60();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x409c65;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x409c70;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1114
    },
    "00409cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409cc0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x00409d36;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x409d36;\n            uVar5 = fcn.0042e000();\ncode_r0x00409d36:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x409d85;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x409d90;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 644
    },
    "00409da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409da0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x409dee;\n                uVar1 = fcn.0042e000();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x409e09;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x409e14;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00409e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00409e20(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x409e5b;\n                fcn.0042e180();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x546b30 == 0) {\n                        *(*0x20 + -0x30) = 0x409ea5;\n                        fcn.0042dc60();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x409eec;\n                            fcn.0042dc60(iVar1);\n                            *(*0x20 + -0x28) = **0x546b30;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x409f08;\n                            fcn.00459140();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x409ec8;\n                    fcn.004317e0();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x409f45;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x409f50;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 726
    },
    "00409f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00409f60(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x546b30 == 0) {\n                fcn.0042dc60();\n            }\n            else {\n                while (iVar4 = fcn.0042dc60(),  iVar4 < 0) {\n                    fcn.00459140();\n                }\n            }\n            goto code_r0x0040a18f;\n        }\n        fcn.0045b2e0();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.004317e0();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042dc60();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x546b30;\n        if (iVar2 != 0) {\n            fcn.00459140();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045b2e0();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042dc60();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.004317e0();\n    }\n    fcn.004317e0();\ncode_r0x0040a18f:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 761
    },
    "0040b1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040b1e0(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t *puVar6;\n    char cVar7;\n    uint64_t in_RAX;\n    int64_t iVar8;\n    uchar (*pauVar9) [16];\n    uchar uVar10;\n    uint64_t uVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t iVar13;\n    uint8_t uVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint8_t uVar18;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1b84 != 2) {\n                if (in_RAX == 0) {\n                    return 0x5a1d60;\n                }\n                if (*0x5a2024 != '\\0') {\n                    if (*0x5a2030 != 0) {\n                        *(*0x20 + -0x78) = 0x40b279;\n                        iVar8 = fcn.0040bf00(0x5a4680);\n                        return iVar8;\n                    }\n                    if ((*0x5a1e20 != '\\0') && (*(unaff_R14 + 0x98) == *0x5a1e28)) {\n                        *0x5a1e30 = *0x5a1e30 + 1;\n                    }\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5a1b7c == 0) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar8 = *(*(unaff_R14 + 0x30) + 0x90);\n                    if (iVar8 == 0) {\n                        *(*0x20 + -0x18) = unaff_R14;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                    iVar13 = *(iVar8 + 0x180) - in_RAX;\n                    *(iVar8 + 0x180) = iVar13;\n                    if (iVar13 < 0) {\n                        *(*0x20 + -0x10) = iVar8;\n                        *(*0x20 + -0x78) = 0x40b2ff;\n                        fcn.00418e20();\n                        in_RAX = *(*0x20 + 8);\n                        param_1 = *(*0x20 + 0x18);\n                        iVar8 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                }\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                iVar13 = *(unaff_R14 + 0x30);\n                if (*(iVar13 + 0xc0) == 0) {\n                    if (*(iVar13 + 0x50) != unaff_R14) {\n                        *(iVar13 + 0xc0) = 1;\n                        iVar15 = *0x5a1c90;\n                        if (*(iVar13 + 0xa0) != 0) {\n                            iVar15 = *(*(iVar13 + 0xa0) + 0x40);\n                        }\n                        if (iVar15 != 0) {\n                            if (unaff_RBX == 0) {\n                                uVar18 = true;\n                            }\n                            else {\n                                uVar18 = *(unaff_RBX + 8) == 0;\n                            }\n                            *(*0x20 + -0x28) = iVar13;\n                            *(*0x20 + -0x38) = iVar15;\n                            *(*0x20 + -0x4a) = uVar18;\n                            *(*0x20 + -0x18) = iVar8;\n                            if (in_RAX < 0x8001) {\n                                if ((uVar18 != false) && (in_RAX < 0x10)) {\n                                    uVar16 = *(iVar15 + 0x18);\n                                    if ((in_RAX & 7) == 0) {\n                                        uVar16 = uVar16 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((in_RAX & 3) == 0) {\n                                        uVar16 = uVar16 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((in_RAX & 1) == 0) {\n                                        uVar16 = uVar16 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((in_RAX + uVar16 < 0x11) && (iVar8 = *(iVar15 + 0x10),  iVar8 != 0)) {\n                                        *(iVar15 + 0x18) = in_RAX + uVar16;\n                                        *(iVar15 + 0x20) = *(iVar15 + 0x20) + 1;\n                                        *(iVar13 + 0xc0) = 0;\n                                        iVar5 = *(iVar13 + 0xd8);\n                                        *(iVar13 + 0xd8) = iVar5 + -1;\n                                        if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar8 + uVar16;\n                                    }\n                                    uVar17 = *(iVar15 + 0x50);\n                                    uVar16 = *(uVar17 + 0x40);\n                                    uVar11 = 0;\n                                    if (uVar16 != 0) {\n                                        for (; (uVar16 >> uVar11 & 1) == 0; uVar11 = uVar11 + 1) {\n                                        }\n                                    }\n                                    if (uVar16 == 0) {\n                                        uVar11 = 0x40;\n                                    }\n                                    if (uVar11 < 0x40) {\n                                        uVar3 = *(uVar17 + 0x30) + uVar11;\n                                        if (*(uVar17 + 0x38) <= uVar3) goto code_r0x0040b4e6;\n                                        uVar4 = *(uVar17 + 0x30) + uVar11 + 1;\n                                        if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                            pauVar9 = NULL;\n                                        }\n                                        else {\n                                            uVar11 = uVar11 + 1;\n                                            *(uVar17 + 0x40) = uVar16 >> (uVar11 & 0x3f) & -(uVar11 < 0x40);\n                                            *(uVar17 + 0x30) = uVar4;\n                                            *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                            pauVar9 = *(uVar17 + 0x68) * uVar3 + *(uVar17 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040b4e6:\n                                        pauVar9 = NULL;\n                                    }\n                                    uVar10 = uVar11;\n                                    if (pauVar9 == NULL) {\n                                        *(*0x20 + -0x78) = 0x40b4ff;\n                                        pauVar9 = fcn.0040afc0();\n                                        iVar15 = *(*0x20 + -0x38);\n                                        uVar18 = *(*0x20 + -0x4a);\n                                        uVar17 = 5;\n                                        in_RAX = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar10 = 0;\n                                    }\n                                    *pauVar9 = CONCAT412(in_XMM15_Dd, \n                                                         CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((in_RAX <= *(iVar15 + 0x18) && *(iVar15 + 0x18) != in_RAX) ||\n                                       (*(iVar15 + 0x10) == 0)) {\n                                        *(iVar15 + 0x10) = pauVar9;\n                                        *(iVar15 + 0x18) = in_RAX;\n                                    }\n                                    uVar16 = 0x10;\ncode_r0x0040b749:\n                                    uVar14 = 0;\n                                    goto code_r0x0040b7fa;\n                                }\n                                if (0x3f8 < in_RAX) {\n                                    uVar16 = in_RAX - 0x381 >> 7;\n                                    if (uVar16 < 0xf9) {\n                                        uVar14 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                 [uVar16];\n                                        goto code_r0x0040b5a2;\n                                    }\n                                    goto code_r0x0040ba45;\n                                }\n                                uVar16 = in_RAX + 7 >> 3;\n                                if (uVar16 < 0x81) {\n                                    uVar14 = *(uVar16 + 0x53cf20);\ncode_r0x0040b5a2:\n                                    if (uVar14 < 0x44) {\n                                        uVar16 = *(uVar14 * 2 + 0x53d060);\n                                        uVar17 = uVar14 << 1 & 0xff | uVar18;\n                                        if (uVar17 < 0x88) {\n                                            uVar17 = *(iVar15 + 0x28 + uVar17 * 8);\n                                            uVar11 = *(uVar17 + 0x40);\n                                            iVar8 = 0;\n                                            if (uVar11 != 0) {\n                                                for (; (uVar11 >> iVar8 & 1) == 0; iVar8 = iVar8 + 1) {\n                                                }\n                                            }\n                                            if (uVar11 == 0) {\n                                                iVar8 = 0x40;\n                                            }\n                                            if (iVar8 < 0x40) {\n                                                uVar3 = *(uVar17 + 0x30) + iVar8;\n                                                if (*(uVar17 + 0x38) <= uVar3) {\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                    goto code_r0x0040b68c;\n                                                }\n                                                uVar4 = *(uVar17 + 0x30) + iVar8 + 1;\n                                                if (((uVar4 & 0x3f) == 0) && (*(uVar17 + 0x38) != uVar4)) {\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                    pauVar9 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar17 + 0x40) =\n                                                         uVar11 >> (iVar8 + 1U & 0x3f) & -(iVar8 + 1U < 0x40);\n                                                    *(uVar17 + 0x30) = uVar4;\n                                                    *(uVar17 + 0x60) = *(uVar17 + 0x60) + 1;\n                                                    pauVar9 = *(uVar17 + 0x68) * uVar3 + *(uVar17 + 0x18);\n                                                    param_1 = *(*0x20 + 0x18);\n                                                    iVar15 = *(*0x20 + -0x38);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040b68c:\n                                                pauVar9 = NULL;\n                                            }\n                                            *(*0x20 + -0x30) = uVar16;\n                                            if (pauVar9 == NULL) {\n                                                uVar17 = uVar14 << 1 | uVar18;\n                                                *(*0x20 + -0x78) = 0x40b6a8;\n                                                pauVar9 = fcn.0040afc0(param_1, 0, iVar15);\n                                                iVar15 = *(*0x20 + -0x38);\n                                                uVar18 = *(*0x20 + -0x4a);\n                                                uVar16 = *(*0x20 + -0x30);\n                                                uVar10 = param_1;\n                                                in_RAX = *(*0x20 + 8);\n                                                param_1 = *(*0x20 + 0x18);\n                                            }\n                                            else {\n                                                uVar10 = 0;\n                                            }\n                                            if ((param_1 != '\\0') && (*(uVar17 + 100) != '\\0')) {\n                                                *(*0x20 + -0x20) = pauVar9;\n                                                *(*0x20 + -0x4b) = uVar10;\n                                                *(*0x20 + -0x48) = uVar17;\n                                                *(*0x20 + -0x78) = 0x40b706;\n                                                fcn.0045a040(param_1, pauVar9, iVar15);\n                                                in_RAX = *(*0x20 + 8);\n                                                pauVar9 = *(*0x20 + -0x20);\n                                                uVar18 = *(*0x20 + -0x4a);\n                                                uVar10 = *(*0x20 + -0x4b);\n                                                uVar16 = *(*0x20 + -0x30);\n                                                uVar17 = *(*0x20 + -0x48);\n                                            }\n                                            goto code_r0x0040b749;\n                                        }\n                                        goto code_r0x0040ba29;\n                                    }\n                                    goto code_r0x0040ba36;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x40b75e;\n                                uVar17 = fcn.00412780();\n                                *(uVar17 + 0x30) = 1;\n                                *(uVar17 + 0x60) = 1;\n                                uVar16 = *(uVar17 + 0x68);\n                                pauVar9 = *(uVar17 + 0x18);\n                                if ((*(*0x20 + 0x18) == '\\0') || (*(uVar17 + 100) == '\\0')) {\n                                    uVar14 = 0;\n                                    uVar18 = *(*0x20 + -0x4a);\n                                }\n                                else {\n                                    uVar14 = *(*0x20 + -0x4a);\n                                    uVar18 = uVar14;\n                                    if (uVar14 == 0) {\n                                        *(*0x20 + -0x48) = uVar17;\n                                        *(*0x20 + -0x30) = uVar16;\n                                        *(*0x20 + -0x20) = pauVar9;\n                                        *(*0x20 + -0x78) = 0x40b7ac;\n                                        fcn.0045a040();\n                                        uVar17 = *(*0x20 + -0x48);\n                                        pauVar9 = *(*0x20 + -0x20);\n                                        uVar16 = *(*0x20 + -0x30);\n                                        uVar14 = *(*0x20 + -0x4a);\n                                        uVar18 = uVar14;\n                                    }\n                                }\n                                uVar10 = 1;\n                                in_RAX = *(*0x20 + 8);\ncode_r0x0040b7fa:\n                                *(*0x20 + -0x20) = pauVar9;\n                                *(*0x20 + -0x30) = uVar16;\n                                *(*0x20 + -0x4b) = uVar10;\n                                *(*0x20 + -0x49) = uVar14;\n                                *(*0x20 + -0x48) = uVar17;\n                                if (uVar18 == 0) {\n                                    *(*0x20 + -0x78) = 0x40b82d;\n                                    fcn.00410aa0(in_RAX);\n                                    puVar6 = *(*0x20 + 0x10);\n                                    if (*puVar6 < *(*0x20 + 8)) {\n                                        uVar16 = 0;\n                                        if (puVar6[1] != 0) {\n                                            uVar16 = (*(*0x20 + 8) - *puVar6) + puVar6[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar16 = puVar6[1];\n                                    }\n                                    *(*(*0x20 + -0x38) + 8) = *(*(*0x20 + -0x38) + 8) + uVar16;\n                                }\n                                else {\n                                    uVar16 = 0;\n                                }\n                                *(*0x20 + -0x40) = uVar16;\n                                *(*0x20 + -0x78) = 0x40b87f;\n                                fcn.00459120();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                                *(*(*0x20 + -0x48) + 0x88) = *(*(*0x20 + -0x48) + 0x30);\n                                if (*0x5a1b84 != 0) {\n                                    *(*0x20 + -0x78) = 0x40b8c5;\n                                    fcn.0041b7a0(*(*0x20 + -0x30));\n                                }\n                                if (*0x5a1bf8 < 1) {\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\n                                else {\n                                    if (*0x5a1bf8 == 1) {\n                                        uVar16 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        uVar17 = **(*0x20 + -0x38);\n                                        uVar16 = *(*0x20 + -0x30);\n                                        if (uVar16 < uVar17) {\n                                            **(*0x20 + -0x38) = uVar17 - uVar16;\n                                            goto code_r0x0040b911;\n                                        }\n                                    }\n                                    *(*0x20 + -0x78) = 0x40b905;\n                                    fcn.0040bcc0(uVar16);\n                                    uVar16 = *(*0x20 + -0x30);\n                                }\ncode_r0x0040b911:\n                                iVar8 = *(*0x20 + -0x28);\n                                *(iVar8 + 0xc0) = 0;\n                                iVar5 = *(iVar8 + 0xd8);\n                                *(iVar8 + 0xd8) = iVar5 + -1;\n                                if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x49) == '\\0') {\ncode_r0x0040b96f:\n                                    if (*0x5a2024 != '\\0') {\n                                        if (*0x5a2028 != 0) {\n                                            *(*0x20 + -0x78) = 0x40b997;\n                                            fcn.00429900(*(*0x20 + 0x10));\n                                            uVar16 = *(*0x20 + -0x30);\n                                        }\n                                        if ((*0x5a1e20 != '\\0') && (*(unaff_R14 + 0x98) == *0x5a1e28)) {\n                                            *0x5a1e38 = *0x5a1e38 + uVar16;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x18) != 0) {\n                                        piVar2 = *(*0x20 + -0x18) + 0x180;\n                                        *piVar2 = *piVar2 - (uVar16 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x4b) != '\\0') {\n                                        *(*0x20 + -0x78) = 0x40b9e9;\n                                        cVar7 = fcn.004147a0(0);\n                                        if (cVar7 != '\\0') {\n                                            *(*0x20 + -0x78) = 0x40b9f8;\n                                            fcn.00414900(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x20);\n                                }\n                                if (*(*0x20 + -0x4a) != '\\0') {\n                                    *(*0x20 + -0x78) = 0x40b96a;\n                                    fcn.0040bae0();\n                                    uVar16 = *(*0x20 + -0x30);\n                                    goto code_r0x0040b96f;\n                                }\n                                *(*0x20 + -0x78) = 0x40ba29;\n                                fcn.004317e0();\ncode_r0x0040ba29:\n                                *(*0x20 + -0x78) = 0x40ba36;\n                                fcn.004599e0(0x88);\ncode_r0x0040ba36:\n                                *(*0x20 + -0x78) = 0x40ba45;\n                                fcn.004599e0(0x44);\ncode_r0x0040ba45:\n                                *(*0x20 + -0x78) = 0x40ba52;\n                                fcn.00459a00(0xf9);\n                            }\n                            param_1 = 0x81;\n                            *(*0x20 + -0x78) = 0x40ba5f;\n                            fcn.00459a00(0x81);\n                        }\n                        *(*0x20 + -0x78) = 0x40ba70;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x78) = 0x40ba85;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x78) = 0x40ba96;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x78) = 0x40baa7;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        puVar12[0x18] = param_1;\n        *(puVar12 + -8) = 0x40babb;\n        fcn.00457320();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        param_1 = puVar12[0x18];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 5266
    },
    "0040bae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040bae0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.00457160();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.0045a040(uVar2);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0040bc00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bc00(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40bc6f;\n                fcn.0040b1e0(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40bc52;\n                fcn.0040b1e0(1);\n                return;\n            }\n            unaff_RBX = 0x4f0dc8;\n            *(*0x20 + -0x28) = 0x40bc8c;\n            in_RAX = fcn.00431040(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40bc9c;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 492
    },
    "0040bcc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bcc0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x5a1c90;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x5a1bf8 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40bd1e;\n                    iVar1 = fcn.0040bda0();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40bd45;\n                fcn.00428ee0(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40bd65;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40bd7a;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "0040c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c020(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040c073:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40c14d;\n                        iVar5 = fcn.00413640();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40c0cc;\n                        fcn.00409aa0();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x5a1db8;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40c12a;\n                        puVar8 = fcn.00413640();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x5a1db8) goto code_r0x0040c271;\n                            do {\n                                *(*0x20 + -0x48) = 0x40c26f;\n                                fcn.004317e0();\ncode_r0x0040c271:\n                                *(*0x20 + -0x48) = 0x40c27d;\n                                fcn.00409cc0();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x5a1cc0;\n                            **ppuVar7 = *0x5a1cc0;\n                            LOCK();\n                            bVar9 = uVar4 == *0x5a1cc0;\n                            *0x5a1cc0 = *0x5a1cc0 ^ bVar9 * (*0x5a1cc0 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x5a1db8) {\n                        *(*0x20 + -0x48) = 0x40c1b7;\n                        fcn.00409cc0();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x5a4680) {\n                        *(*0x20 + -0x48) = 0x40c1dd;\n                        fcn.0042ad40();\n                        *(*0x20 + -0x48) = 0x40c1f1;\n                        fcn.0042ad40();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040c073;\n                    *(*0x20 + -0x48) = 0x40c290;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x48) = 0x40c2a5;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40c2b6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40c2cb;\n        fcn.0045ba20();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1645
    },
    "0040c2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c2e0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar2 = (arg1 + *in_RAX) - 1 & -arg1;\n    uVar3 = uVar2 + unaff_RBX;\n    if (uVar3 <= in_RAX[2]) {\n        *in_RAX = uVar3;\n        uVar1 = in_RAX[1];\n        uVar3 = -*0x5a1cd8 & (uVar3 + *0x5a1cd8) - 2;\n        if (uVar1 < uVar3) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.00413860(unaff_RDI);\n                fcn.00413740(uVar3 - uVar1);\n            }\n            in_RAX[1] = uVar3;\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 312
    },
    "0040c3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c3e0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uchar auVar4 [16];\n    int64_t in_RAX;\n    int64_t iVar5;\n    int64_t arg4;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t unaff_RBX;\n    int64_t *in_R8;\n    int64_t arg4_00;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar7 = *(in_RAX + 0x28);\n    iVar5 = in_RAX;\n    iVar8 = arg1;\n    if ((iVar7 == 0) || (arg4 = *(iVar7 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040b1e0(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar9 = in_R8 + arg4 + -8;\n        if (*piVar9 == 0) {\n            if (*0x5a1da0 == 0) {\n                *(iVar7 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                iVar5 = fcn.00459660(arg1, arg4 + in_R8, in_R8, arg4);\n            }\n        }\n        else {\n            if (*0x5a1da0 == 0) {\n                *piVar9 = 0;\n            }\n            else {\n                iVar5 = fcn.00459660(arg1, 0, in_R8, arg4);\n            }\n            if (*0x5a1da0 == 0) {\n                *(*(iVar5 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar5 = fcn.00459660(iVar8, 0, in_R8, arg4);\n            }\n        }\n    }\n    uVar2 = *(iVar5 + 9);\n    if (uVar2 < 0x10) {\n        *(iVar5 + 10) = *(iVar5 + 10) + 1;\n    }\n    else {\n        uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar4 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n        uVar2 = uVar2 - 0xf;\n        uVar1 = (1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) - 1;\n        in_R8 = uVar1;\n        if ((uVar1 & (SUB164(auVar4, 0) ^ SUB164(auVar4 >> 0x40, 0))) == 0) {\n            *(iVar5 + 10) = *(iVar5 + 10) + 1;\n        }\n    }\n    iVar7 = *(unaff_RBX + 0x40);\n    if (*(iVar7 + 8) == 0) {\n        if (*(iVar5 + 0x28) == 0) {\n            iVar7 = arg4;\n            uVar6 = fcn.0040bba0();\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 0x28) = uVar6;\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n            else {\n                iVar5 = in_RAX;\n                fcn.00459540(in_RAX, in_RAX + 0x28, in_R8, iVar7);\n                iVar8 = arg1;\n            }\n        }\n        piVar9 = *(iVar5 + 0x28);\n        if (*piVar9 == 0) {\n            iVar7 = arg4;\n            uVar6 = fcn.0040bba0();\n            if (*0x5a1da0 == 0) {\n                **(in_RAX + 0x28) = uVar6;\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n            else {\n                fcn.00459540(in_RAX, piVar9, in_R8, iVar7);\n                iVar5 = in_RAX;\n                iVar8 = arg1;\n            }\n        }\n        in_R8 = **(iVar5 + 0x28);\n        iVar5 = in_R8[1];\n        iVar3 = *in_R8;\n        iVar7 = iVar3;\n        if (in_R8[2] < iVar5 + 1U) {\n            iVar8 = iVar3;\n            piVar9 = in_R8;\n            arg4_00 = arg4;\n            iVar7 = fcn.00443500(iVar5);\n            in_R8[2] = iVar5;\n            if (*0x5a1da0 == 0) {\n                *in_R8 = iVar7;\n                iVar5 = iVar3;\n                iVar8 = arg1;\n            }\n            else {\n                iVar7 = fcn.00459540(iVar5, iVar8, piVar9, arg4_00);\n                iVar5 = iVar3;\n                iVar8 = arg1;\n            }\n        }\n        in_R8[1] = iVar5 + 1;\n        if (*0x5a1da0 == 0) {\n            *(iVar7 + iVar5 * 8) = arg4;\n        }\n        else {\n            iVar8 = fcn.004596e0(iVar7 + iVar5 * 8, iVar7, in_R8);\n        }\n    }\n    if (*0x5a1da0 == 0) {\n        *(iVar8 + *(unaff_RBX + 0x52) + -8) = arg4;\n    }\n    else {\n        fcn.004596e0(*(unaff_RBX + 0x52), iVar7, in_R8);\n    }\n    return arg4;\n}\n",
        "token_count": 1432
    },
    "0040c780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040c780(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040bba0();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        uVar5 = fcn.0040c940(0);\n        if (*0x5a1da0 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.00459540(arg1 + 0x10, arg1, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040bba0();\n            if (*0x5a1da0 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.00459540(arg1 + 0x28, arg1, in_R8, in_R9);\n                fcn.00459640(uVar4, arg1, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 772
    },
    "0040c940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c940(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040ca72;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x53d060);\n                            goto code_r0x0040ca40;\n                        }\n                        goto code_r0x0040cb2c;\n                    }\n                    goto code_r0x0040cb39;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x53cf20);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x53d060);\n                        goto code_r0x0040ca40;\n                    }\n                    goto code_r0x0040cb46;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040ca40:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040ca72;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040ca72:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x20) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40cace;\n                        iVar3 = fcn.0040bc00(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40cab5;\n                            fcn.0045a040();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40caa8;\n                            fcn.0040f760();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x28);\n                    if (*(*0x20 + -0x20) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x5a1da0 == 0) {\n                            *((*(*0x20 + -0x20) + -1) * uVar7 + iVar3 + uVar7 + -8) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40cb16;\n                            fcn.00459540(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40cb2c;\n                fcn.0042fe00();\ncode_r0x0040cb2c:\n                *(*0x20 + -0x40) = 0x40cb39;\n                fcn.004599e0(0x44);\ncode_r0x0040cb39:\n                *(*0x20 + -0x40) = 0x40cb46;\n                fcn.00459a00(0xf9);\ncode_r0x0040cb46:\n                *(*0x20 + -0x40) = 0x40cb53;\n                fcn.004599e0(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40cb65;\n            in_RAX = fcn.00459a00(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40cb79;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1577
    },
    "0040cde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040cde0(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *piVar9;\n    uint64_t arg1_00;\n    int64_t arg1_01;\n    ulong uVar10;\n    ulong arg1_02;\n    int64_t **ppiVar11;\n    int64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    int64_t arg3;\n    ulong in_R9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4f0dd8;\n            *(*0x20 + -0x88) = 0x40d2fd;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + 0x18) = arg1;\n        *(puVar12 + -8) = 0x40d312;\n        fcn.00457320();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        arg1 = *(puVar12 + 0x18);\n        *0x20 = puVar12;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = arg1;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x88) = 0x40ce39;\n        fcn.004318e0();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x88) = 0x40ce62;\n    uVar4 = (*pcVar2)();\n    *(*0x20 + -0x58) = uVar4;\n    piVar9 = *(*0x20 + 0x10);\n    *(piVar9 + 1) = *(piVar9 + 1) ^ 4;\n    if (piVar9[2] == 0) {\n        uVar10 = *(*0x20 + 8);\n        *(*0x20 + -0x88) = 0x40ce9b;\n        iVar5 = fcn.0040b1e0();\n        if (*0x5a1da0 == 0) {\n            piVar9 = *(*0x20 + 0x10);\n            piVar9[2] = iVar5;\n        }\n        else {\n            piVar9 = *(*0x20 + 0x10);\n            *(*0x20 + -0x88) = 0x40cec9;\n            fcn.00459540(piVar9, uVar10, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x58);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        arg1_00 = (1 << (*(piVar9 + 9) & 0x3f)) - 1U & uVar4;\n        if (piVar9[3] != 0) {\n            *(*0x20 + -0x50) = arg1_00;\n            *(*0x20 + -0x88) = 0x40cf2c;\n            fcn.0040d560(arg1_00);\n            uVar4 = *(*0x20 + -0x58);\n            arg1_00 = *(*0x20 + -0x50);\n            piVar9 = *(*0x20 + 0x10);\n            iVar5 = *(*0x20 + 8);\n        }\n        uVar1 = *(iVar5 + 0x52);\n        iVar7 = piVar9[2];\n        uVar6 = uVar4 >> 0x38;\n        if (uVar4 >> 0x38 < 5) {\n            uVar6 = (uVar4 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x61) = uVar6;\n        arg2 = 0;\n        arg3 = 0;\n        arg4 = 0;\n        iVar7 = arg1_00 * uVar1 + iVar7;\n        do {\n            arg1_01 = iVar7;\n            *(*0x20 + -0x28) = arg1_01;\n            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                uVar8 = *(arg1_01 + uVar4);\n                if (uVar6 == uVar8) {\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x30) = arg4;\n                    *(*0x20 + -0x40) = arg3;\n                    *(*0x20 + -0x38) = arg2;\n                    piVar9 = *(iVar5 + 0x50) * uVar4 + arg1_01 + 8;\n                    if ((*(iVar5 + 0x54) & 1) != 0) {\n                        piVar9 = *piVar9;\n                    }\n                    *(*0x20 + -0x48) = piVar9;\n                    pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                    *(*0x20 + -0x88) = 0x40d0d7;\n                    cVar3 = (*pcVar2)();\n                    if (cVar3 != '\\0') {\n                        iVar5 = *(*0x20 + 8);\n                        if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                            *(*0x20 + -0x88) = 0x40d137;\n                            fcn.0040f460(*(*0x20 + -0x10));\n                            iVar5 = *(*0x20 + 8);\n                        }\n                        ppiVar11 = *(*0x20 + -0x28) + *(iVar5 + 0x51) * *(*0x20 + -0x60) + *(iVar5 + 0x50) * 8 + 8;\n                        goto code_r0x0040d28a;\n                    }\n                    uVar6 = *(*0x20 + -0x61);\n                    arg1_01 = *(*0x20 + -0x28);\n                    piVar9 = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    arg2 = *(*0x20 + -0x38);\n                    arg3 = *(*0x20 + -0x40);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                else {\n                    if ((uVar8 < 2) && (arg2 == 0)) {\n                        arg3 = uVar4 * *(iVar5 + 0x50) + arg1_01 + 8;\n                        arg4 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + arg1_01 + 8;\n                        arg2 = arg1_01 + uVar4;\n                    }\n                    if (uVar8 == 0) goto code_r0x0040cf74;\n                }\n            }\n            iVar7 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n        } while (iVar7 != 0);\ncode_r0x0040cf74:\n        if (piVar9[3] != 0) goto code_r0x0040d169;\n        uVar8 = *(piVar9 + 9);\n        if ((*piVar9 + 1U < 9) ||\n           (uVar4 = 1 << (uVar8 & 0x3f),  *piVar9 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(piVar9 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040d169:\n                if (arg2 == 0) {\n                    *(*0x20 + -0x88) = 0x40d17c;\n                    arg2 = fcn.0040c3e0(arg1_01);\n                    iVar5 = *(*0x20 + 8);\n                    arg3 = arg2 + 8;\n                    arg4 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n                }\n                *(*0x20 + -0x30) = arg4;\n                *(*0x20 + -0x38) = arg2;\n                iVar7 = arg3;\n                if ((*(iVar5 + 0x54) & 1) != 0) {\n                    *(*0x20 + -0x18) = arg3;\n                    uVar10 = 1;\n                    *(*0x20 + -0x88) = 0x40d1d3;\n                    iVar7 = fcn.0040b1e0();\n                    if (*0x5a1da0 == 0) {\n                        **(*0x20 + -0x18) = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40d1ed;\n                        iVar7 = fcn.00459540(uVar10, arg2, arg3, arg4);\n                    }\n                    arg2 = *(*0x20 + -0x38);\n                    iVar5 = *(*0x20 + 8);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    *(*0x20 + -0x40) = iVar7;\n                    arg1_02 = 1;\n                    *(*0x20 + -0x88) = 0x40d22e;\n                    uVar10 = fcn.0040b1e0();\n                    if (*0x5a1da0 == 0) {\n                        **(*0x20 + -0x30) = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40d248;\n                        fcn.00459540(arg1_02, arg2, iVar7, arg4);\n                    }\n                }\n                *(*0x20 + -0x88) = 0x40d266;\n                fcn.0040f460(*(*0x20 + -0x10));\n                **(*0x20 + -0x38) = *(*0x20 + -0x61);\n                **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n                iVar5 = *(*0x20 + 8);\n                ppiVar11 = *(*0x20 + -0x30);\ncode_r0x0040d28a:\n                iVar7 = *(*0x20 + 0x10);\n                if ((*(iVar7 + 8) & 4) == 0) {\n                    *(*0x20 + -0x20) = ppiVar11;\n                    *(*0x20 + -0x88) = 0x40d2b2;\n                    fcn.004318e0();\n                    ppiVar11 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + 0x10);\n                }\n                *(iVar7 + 8) = *(iVar7 + 8) & 0xfb;\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    ppiVar11 = *ppiVar11;\n                }\n                return ppiVar11;\n            }\n        }\n        *(*0x20 + -0x88) = 0x40cee5;\n        fcn.0040d340();\n        piVar9 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x58);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2963
    },
    "0040d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d340(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *arg2;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar6 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar6 >> 1) * 5 + (uVar6 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar6 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40d3b9;\n            uVar1 = fcn.0040c940(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfffffffc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x5a1da0 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = uVar1;\n                puVar3 = uVar4;\n            }\n            else {\n                puVar3 = arg2 + 3;\n                *(*0x20 + -0x40) = 0x40d40d;\n                fcn.004596a0(puVar3, arg2, param_3, param_4);\n                *(*0x20 + -0x40) = 0x40d416;\n                fcn.00459540(puVar3, arg2, param_3, param_4);\n                puVar3 = arg2;\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1 = arg2[5];\n            if ((arg1 == NULL) || (puVar3 = *arg1,  puVar3 == NULL)) goto code_r0x0040d492;\n            if (arg1[1] == 0) {\n                if (*0x5a1da0 == 0) {\n                    arg1[1] = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40d465;\n                    arg2 = fcn.00459660(arg1 + 1, puVar3, param_3, param_4);\n                }\n                arg1 = arg2[5];\n                if (*0x5a1da0 == 0) {\n                    *arg1 = 0;\n                }\n                else {\n                    puVar3 = NULL;\n                    *(*0x20 + -0x40) = 0x40d48f;\n                    arg2 = fcn.00459660(arg1, 0, param_3, param_4);\n                }\ncode_r0x0040d492:\n                if (uVar6 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x40) = 0x40d4af;\n                        uVar1 = fcn.0040bba0();\n                        if (*0x5a1da0 == 0) {\n                            arg1 = *(*0x20 + 0x10);\n                            arg1[5] = uVar1;\n                        }\n                        else {\n                            arg1 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40d4d7;\n                            fcn.00459540(arg1 + 5, arg1, param_3, param_4);\n                            puVar3 = arg1;\n                        }\n                        uVar6 = *(*0x20 + -0x10);\n                        arg2 = arg1;\n                    }\n                    if (*0x5a1da0 == 0) {\n                        *(arg2[5] + 0x10) = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40d505;\n                        fcn.00459680(arg1, puVar3, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40d525;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x40d535;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1418
    },
    "0040d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d560(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040d600((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040d600(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040dfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040dfe0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    int64_t *arg1_00;\n    uint64_t uVar8;\n    int64_t arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4f0dd8;\n            *(*0x20 + -0x40) = 0x40e2da;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + -8) = 0x40e2ee;\n        fcn.00457320();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1._0_4_ = *(puVar9 + 0x18);\n        *0x20 = puVar9;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x40) = 0x40e02d;\n        fcn.004318e0();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar1 = **(in_RAX + 0x48);\n    *(*0x20 + -0x40) = 0x40e04b;\n    uVar4 = (*pcVar1)();\n    *(*0x20 + -0x20) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        *(*0x20 + -0x40) = 0x40e07c;\n        iVar5 = fcn.0040b1e0();\n        if (*0x5a1da0 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x40) = 0x40e0a5;\n            fcn.00459540(arg1_00, arg1_00 + 2, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x20);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        uVar8 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x18) = uVar8;\n            *(*0x20 + -0x40) = 0x40e0fa;\n            fcn.0040e320(uVar8);\n            uVar4 = *(*0x20 + -0x20);\n            uVar8 = *(*0x20 + -0x18);\n            iVar5 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + 0x10);\n        }\n        uVar3 = uVar4 >> 0x38;\n        iVar6 = 0;\n        uVar4 = 0;\n        iVar2 = uVar8 * *(iVar5 + 0x52) + arg1_00[2];\n        do {\n            arg1_01 = iVar2;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if (*(arg1_01 + uVar8) < 2) {\n                    uVar10 = uVar8;\n                    iVar2 = arg1_01;\n                    if (iVar6 != 0) {\n                        uVar10 = uVar4;\n                        iVar2 = iVar6;\n                    }\n                    iVar6 = iVar2;\n                    uVar4 = uVar10;\n                    if (*(arg1_01 + uVar8) == 0) goto code_r0x0040e12b;\n                }\n                else if (*(*0x20 + 0x18) == *(arg1_01 + uVar8 * 4 + 8)) goto code_r0x0040e27a;\n            }\n            iVar2 = *(arg1_01 + *(iVar5 + 0x52) + -8);\n        } while (iVar2 != 0);\ncode_r0x0040e12b:\n        if (arg1_00[3] != 0) goto code_r0x0040e222;\n        uVar7 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar8 = 1 << (uVar7 & 0x3f),  *arg1_00 + 1U <= (uVar8 >> 1) * 5 + (uVar8 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar7) {\n                uVar7 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar7 & 0xf)) {\ncode_r0x0040e222:\n                uVar8 = uVar4;\n                if (iVar6 == 0) {\n                    *(*0x20 + -0x40) = 0x40e235;\n                    iVar6 = fcn.0040c3e0(arg1_01);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    uVar8 = 0;\n                    uVar3 = *(*0x20 + -0x20) >> 0x38;\n                }\n                arg1_01 = iVar6;\n                if (uVar3 < 5) {\n                    uVar3 = uVar3 + 5;\n                }\n                *(arg1_01 + (uVar8 & 7)) = uVar3;\n                *(arg1_01 + uVar8 * 4 + 8) = *(*0x20 + 0x18);\n                *arg1_00 = *arg1_00 + 1;\ncode_r0x0040e27a:\n                iVar5 = uVar8 * *(iVar5 + 0x51) + arg1_01 + 0x28;\n                if ((*(arg1_00 + 1) & 4) == 0) {\n                    *(*0x20 + -0x10) = iVar5;\n                    *(*0x20 + -0x40) = 0x40e2a9;\n                    fcn.004318e0();\n                    iVar5 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + 0x10);\n                }\n                *(arg1_00 + 1) = *(arg1_00 + 1) & 0xfb;\n                return iVar5;\n            }\n        }\n        *(*0x20 + -0x40) = 0x40e0bc;\n        fcn.0040d340();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x20);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 1936
    },
    "0040e320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040e320(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e3c0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e3c0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040eb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040eb80(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    uint8_t uVar9;\n    int64_t *arg1_01;\n    uint64_t uVar10;\n    int64_t arg1_02;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t *arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x4f0dd8;\n            *(*0x20 + -0x70) = 0x40ef5a;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + 0x20) = unaff_RDI;\n        *(puVar11 + -8) = 0x40ef74;\n        fcn.00457320();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        unaff_RDI = *(puVar11 + 0x20);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x70) = 0x40ebd6;\n        fcn.004318e0();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x70) = 0x40ebf7;\n    uVar6 = (*pcVar2)();\n    *(*0x20 + -0x40) = uVar6;\n    arg1_01 = *(*0x20 + 0x10);\n    *(arg1_01 + 1) = *(arg1_01 + 1) ^ 4;\n    if (arg1_01[2] == 0) {\n        *(*0x20 + -0x70) = 0x40ec28;\n        iVar7 = fcn.0040b1e0();\n        if (*0x5a1da0 == 0) {\n            arg1_01 = *(*0x20 + 0x10);\n            arg1_01[2] = iVar7;\n        }\n        else {\n            arg1_01 = *(*0x20 + 0x10);\n            *(*0x20 + -0x70) = 0x40ec50;\n            fcn.00459540(arg1_01, arg1_01 + 2, in_R8, in_R9);\n        }\n        uVar6 = *(*0x20 + -0x40);\n    }\n    iVar7 = *(*0x20 + 8);\n    do {\n        uVar10 = (1 << (*(arg1_01 + 9) & 0x3f)) - 1U & uVar6;\n        if (arg1_01[3] != 0) {\n            *(*0x20 + -0x38) = uVar10;\n            *(*0x20 + -0x70) = 0x40eca5;\n            fcn.0040efa0(uVar10);\n            uVar6 = *(*0x20 + -0x40);\n            uVar10 = *(*0x20 + -0x38);\n            iVar7 = *(*0x20 + 8);\n            arg1_01 = *(*0x20 + 0x10);\n        }\n        uVar1 = *(iVar7 + 0x52);\n        iVar3 = arg1_01[2];\n        uVar8 = uVar6 >> 0x38;\n        if (uVar6 >> 0x38 < 5) {\n            uVar8 = (uVar6 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x49) = uVar8;\n        arg3 = 0;\n        uVar6 = 0;\n        iVar3 = uVar10 * uVar1 + iVar3;\n        do {\n            arg1_02 = iVar3;\n            *(*0x20 + -0x10) = arg1_02;\n            for (uVar10 = 0; uVar5 = uVar8,  uVar10 < 8; uVar10 = uVar10 + 1) {\n                uVar9 = *(arg1_02 + uVar10);\n                if (uVar5 == uVar9) {\n                    iVar3 = uVar10 * 0x10 + arg1_02;\n                    arg4 = iVar3 + 8;\n                    if (*(iVar3 + 0x10) == *(*0x20 + 0x20)) {\n                        if (*(*0x20 + 0x18) == *arg4) {\n                            uVar5 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = uVar10;\n                            *(*0x20 + -0x20) = arg4;\n                            *(*0x20 + -0x48) = uVar6;\n                            *(*0x20 + -0x18) = arg3;\n                            *(*0x20 + -0x70) = 0x40ee16;\n                            uVar5 = fcn.004025a0(*(*0x20 + 0x20), iVar7);\n                            uVar5 = uVar5 ^ 1;\n                            iVar7 = *(*0x20 + 8);\n                            arg1_01 = *(*0x20 + 0x10);\n                            arg3 = *(*0x20 + -0x18);\n                            uVar6 = *(*0x20 + -0x48);\n                            arg4 = *(*0x20 + -0x20);\n                            uVar10 = *(*0x20 + -0x30);\n                            arg1_02 = *(*0x20 + -0x10);\n                            uVar8 = *(*0x20 + -0x49);\n                        }\n                        if (uVar5 == 0) {\n                            if (*0x5a1da0 == 0) {\n                                *arg4 = *(*0x20 + 0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40ee78;\n                                fcn.00459640(*(*0x20 + 0x18), iVar7, uVar6, arg4);\n                            }\n                            goto code_r0x0040eef7;\n                        }\n                    }\n                }\n                else {\n                    if ((uVar9 < 2) && (arg3 == 0)) {\n                        arg3 = arg1_02;\n                        uVar6 = uVar10;\n                    }\n                    if (uVar9 == 0) goto code_r0x0040ece8;\n                }\n            }\n            iVar3 = *(arg1_02 + *(iVar7 + 0x52) + -8);\n        } while (iVar3 != 0);\ncode_r0x0040ece8:\n        if (arg1_01[3] != 0) goto code_r0x0040ee80;\n        uVar9 = *(arg1_01 + 9);\n        if ((*arg1_01 + 1U < 9) ||\n           (uVar10 = 1 << (uVar9 & 0x3f),  *arg1_01 + 1U <= (uVar10 >> 1) * 5 + (uVar10 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar9) {\n                uVar9 = 0xf;\n            }\n            if (*(arg1_01 + 10) < 1 << (uVar9 & 0xf)) {\ncode_r0x0040ee80:\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = 0x40ee93;\n                    arg3 = fcn.0040c3e0(arg1_02);\n                    iVar7 = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + 0x10);\n                    uVar6 = 0;\n                    uVar5 = *(*0x20 + -0x49);\n                }\n                *(arg3 + (uVar6 & 7)) = uVar5;\n                iVar3 = arg3 + uVar6 * 0x10;\n                arg1_00 = *(*0x20 + 0x20);\n                uVar4 = *(*0x20 + 0x18);\n                *(iVar3 + 0x10) = arg1_00;\n                if (*0x5a1da0 == 0) {\n                    *(iVar3 + 8) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x40eeee;\n                    fcn.004596e0(arg1_00, iVar7, arg3);\n                }\n                *arg1_01 = *arg1_01 + 1;\n                uVar10 = uVar6;\n                arg1_02 = arg3;\ncode_r0x0040eef7:\n                iVar7 = uVar10 * *(iVar7 + 0x51) + arg1_02 + 0x88;\n                if ((*(arg1_01 + 1) & 4) == 0) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x70) = 0x40ef29;\n                    fcn.004318e0();\n                    iVar7 = *(*0x20 + -0x28);\n                    arg1_01 = *(*0x20 + 0x10);\n                }\n                *(arg1_01 + 1) = *(arg1_01 + 1) & 0xfb;\n                return iVar7;\n            }\n        }\n        *(*0x20 + -0x70) = 0x40ec67;\n        fcn.0040d340();\n        arg1_01 = *(*0x20 + 0x10);\n        uVar6 = *(*0x20 + -0x40);\n        iVar7 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2550
    },
    "0040efa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040efa0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040f040((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040f040(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0040f460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f460(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x5a1da4 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.0040fee0(in_RAX[1]);\n        }\n        fcn.0045a340(*in_RAX);\n        if (*0x5a1da5 != '\\0') {\n            fcn.00403820(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040f620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0040f620(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x5a1da5 != '\\0') {\n        fcn.004038c0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x5a1da4 != '\\0') {\n            fcn.0040fee0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.0045a340(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 231
    },
    "0040f700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f700(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x5a1da4 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.0040fee0(in_RAX[1]);\n    }\n    fcn.0045a040(*in_RAX);\n    return;\n}\n",
        "token_count": 80
    },
    "0040f920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f920(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433120();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        else {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.00433120();\n    }\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    if (arg1 != 0) goto code_r0x0040fa70;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.004317e0();\ncode_r0x0040fa70:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433120();\n        fcn.0041b360(arg1);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0040fb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040fb60(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x573fb0);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x5a2000 != 0) {\n                fcn.0040f920(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x5a2000 != 0)) {\n        fcn.0040f920(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 466
    },
    "00410560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410560(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x004105e9;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x004105e9:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1268);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar6;\n                    if (*(iVar1 + 0x1270) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042b040();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1268);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1268) + 0x10;\n                    *(iVar1 + 0x1268) = iVar6;\n                    if (*(iVar1 + 0x1270) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.0042b040();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 670
    },
    "00410700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410700(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x5a1da4 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1268);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1268) + 0x10;\n                            *(iVar1 + 0x1268) = iVar8;\n                            if (*(iVar1 + 0x1270) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.0042b040();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00452a40();\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.00433120();\n            fcn.004317e0();\n        }\n        fcn.00452a40();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.00433300();\n        fcn.00433120();\n        fcn.004317e0();\n    }\n    fcn.004317e0();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 691
    },
    "004116e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004116e0(ulong arg1, ulong noname_1, uint64_t arg3, uint64_t arg4)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint unaff_EBX;\n    uint64_t uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong unaff_RDI;\n    uint64_t uVar6;\n    uint64_t in_R10;\n    ulong in_R11;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        uVar4 = unaff_RSI;\n        uVar6 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            if ((in_R10 & 0x1f) == 0) {\n                *(*0x20 + 0x38) = in_R10;\n                *(*0x20 + 0x20) = unaff_RSI;\n                *(*0x20 + -0x10) = in_RAX;\n                if (arg4 == arg3) {\n                    unaff_RDI = 2;\n                    *(*0x20 + -0x70) = 0x4117ac;\n                    arg3 = fcn.00411b80(in_RAX);\n                    uVar4 = *(*0x20 + 0x20);\n                    if (uVar4 != arg3 * 8) {\n                        *(*0x20 + -0x40) = arg3;\n                        *(*0x20 + -0x70) = 0x411808;\n                        fcn.004330a0();\n                        *(*0x20 + -0x70) = 0x411819;\n                        fcn.004339a0();\n                        *(*0x20 + -0x70) = 0x411825;\n                        fcn.004336a0();\n                        *(*0x20 + -0x70) = 0x411836;\n                        fcn.004339a0();\n                        *(*0x20 + -0x70) = 0x411845;\n                        fcn.004336a0();\n                        *(*0x20 + -0x70) = 0x41184a;\n                        fcn.00433300();\n                        *(*0x20 + -0x70) = 0x41184f;\n                        fcn.00433120();\n                        uVar2 = 0x2b;\n                        *(*0x20 + -0x70) = 0x411865;\n                        uVar1 = fcn.004317e0();\n                        goto code_r0x00411865;\n                    }\ncode_r0x004117c5:\n                    *(*0x20 + -0x70) = 0x4117f4;\n                    fcn.0045a040(*(*0x20 + -0x10) + (arg3 + 3 >> 2), *(*0x20 + 0x38) >> 5);\n                    return;\n                }\n                if (arg3 != 0) {\n                    uVar1 = arg4 / arg3;\n                    *(*0x20 + -0x38) = in_XMM15;\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    unaff_R12 = arg3 >> 3;\n                    uVar4 = unaff_RSI >> 3;\n                    uVar6 = unaff_R12 - uVar4;\n                    arg4 = unaff_RSI;\n                    if (uVar6 == 0) {\n                        uVar2 = 0;\n                        goto code_r0x00411865;\n                    }\n                    *(*0x20 + -0x38) = 1;\n                    if (uVar6 < 2) {\n                        uVar2 = 2;\n                        goto code_r0x00411865;\n                    }\n                    *(*0x20 + -0x36) = 0x81;\n                    uVar4 = uVar6 - 1;\n                    uVar2 = 3;\ncode_r0x004119b0:\n                    if (0x7f < uVar4) {\n                        if (0x27 < uVar2) goto code_r0x004119e5;\ncode_r0x00411999:\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4 | 0x80;\n                        uVar4 = uVar4 >> 7;\n                        uVar2 = uVar2 + 1;\n                        uVar6 = uVar4;\n                        goto code_r0x004119b0;\n                    }\n                    if (uVar2 < 0x28) {\n                        *(*0x20 + (uVar2 - 0x38)) = uVar4;\n                        uVar2 = uVar2 + 1;\ncode_r0x00411865:\n                        if (uVar2 < 0x28) {\n                            *(*0x20 + (uVar2 - 0x38)) = 0x80;\n                            uVar6 = uVar2;\n                            while( true ) {\n                                uVar4 = uVar6 + 1;\n                                if (unaff_R12 < 0x80) break;\n                                if (0x27 < uVar4) goto code_r0x0041197f;\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12 | 0x80;\n                                unaff_R12 = unaff_R12 >> 7;\n                                uVar6 = uVar4;\n                            }\n                            if (uVar4 < 0x28) {\n                                *(*0x20 + (uVar6 - 0x37)) = unaff_R12;\n                                uVar6 = uVar1 - 1;\n                                uVar5 = uVar4;\n                                while( true ) {\n                                    uVar4 = uVar5 + 1;\n                                    if (uVar6 < 0x80) break;\n                                    if (0x27 < uVar4) goto code_r0x00411965;\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6 | 0x80;\n                                    uVar6 = uVar6 >> 7;\n                                    unaff_R12 = uVar6;\n                                    uVar5 = uVar4;\n                                }\n                                if (uVar4 < 0x28) {\n                                    *(*0x20 + (uVar5 - 0x37)) = uVar6;\n                                    if (uVar5 + 2 < 0x28) {\n                                        *(*0x20 + -0x40) = arg3;\n                                        *(*0x20 + -0x48) = uVar1 - 1;\n                                        *(*0x20 + (uVar5 - 0x36)) = 0;\n                                        *(*0x20 + -0x70) = 0x411927;\n                                        fcn.00411b80(in_RAX);\n                                        arg3 = *(*0x20 + -0x40) * *(*0x20 + -0x48) + *(*0x20 + 0x20) >> 3;\n                                        goto code_r0x004117c5;\n                                    }\n                                    *(*0x20 + -0x70) = 0x411956;\n                                    fcn.004599e0(0x28);\n                                }\n                                *(*0x20 + -0x70) = 0x411965;\n                                fcn.004599e0(0x28);\ncode_r0x00411965:\n                                *(*0x20 + -0x70) = 0x411972;\n                                fcn.004599e0(0x28);\n                            }\n                            *(*0x20 + -0x70) = 0x41197f;\n                            fcn.004599e0(0x28);\ncode_r0x0041197f:\n                            *(*0x20 + -0x70) = 0x41198c;\n                            fcn.004599e0(0x28);\n                        }\n                        in_RAX = 0x28;\n                        *(*0x20 + -0x70) = 0x411999;\n                        uVar1 = fcn.004599e0(0x28);\n                        goto code_r0x00411999;\n                    }\n                    *(*0x20 + -0x70) = 0x4119e5;\n                    fcn.004599e0(0x28);\ncode_r0x004119e5:\n                    arg1._0_4_ = 0x28;\n                    *(*0x20 + -0x70) = 0x4119f2;\n                    fcn.004599e0(0x28);\n                }\n                *(*0x20 + -0x70) = 0x4119f7;\n                fcn.0042fe00();\n            }\n            unaff_EBX = 0x27;\n            *(*0x20 + -0x70) = 0x411a08;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + 0x14) = arg1;\n        *(puVar3 + 0x18) = unaff_RDI;\n        *(puVar3 + 0x20) = uVar4;\n        *(puVar3 + 0x28) = uVar6;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + 0x40) = in_R11;\n        *(puVar3 + -8) = 0x411a39;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x14);\n        unaff_RDI = *(puVar3 + 0x18);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        in_R11 = *(puVar3 + 0x40);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 2427
    },
    "00411b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.00411b80(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *unaff_RBX;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    int64_t unaff_RDI;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint64_t uVar14;\n    int64_t iVar15;\n    uint8_t *puVar16;\n    \n    puVar12 = NULL;\n    puVar8 = arg1;\n    puVar9 = arg1;\n    puVar7 = NULL;\ncode_r0x00411d52:\n    while( true ) {\n        while( true ) {\n            for (; 0x7 < puVar7; puVar7 = puVar7 + -8) {\n                if (unaff_RDI == 1) {\n                    *puVar8 = puVar12;\n                    puVar8 = puVar8 + 1;\n                }\n                else {\n                    *puVar8 = puVar12 & 0xf | 0xf0;\n                    puVar8[1] = puVar12 >> 4 & 0xf | 0xf0;\n                    puVar8 = puVar8 + 2;\n                }\n                puVar12 = puVar12 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar3 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            uVar5 = puVar7;\n            if (uVar1 < '\\0') break;\n            if (puVar3 == NULL) {\n                if (unaff_RBX == NULL) {\n                    if (unaff_RDI == 1) {\n                        iVar15 = (puVar8 - puVar9) * 8;\n                        for (puVar9 = puVar7 + (-puVar7 & 7); puVar9 != NULL; puVar9 = puVar9 + -8) {\n                            *puVar8 = puVar12;\n                            puVar12 = puVar12 >> 8;\n                            puVar8 = puVar8 + 1;\n                        }\n                    }\n                    else {\n                        iVar15 = (puVar8 - puVar9) * 4;\n                        for (puVar9 = puVar7 + (-puVar7 & 3); puVar9 != NULL; puVar9 = puVar9 + -4) {\n                            *puVar8 = puVar12 & 0xf | 0xf0;\n                            puVar12 = puVar12 >> 4;\n                            puVar8 = puVar8 + 1;\n                        }\n                    }\n                    return puVar7 + iVar15;\n                }\n                in_RAX = unaff_RBX;\n                unaff_RBX = NULL;\n            }\n            else {\n                for (uVar4 = 0; uVar4 < (uVar1 & 0x7f) >> 3; uVar4 = uVar4 + 1) {\n                    uVar14 = puVar12 | *in_RAX << (uVar5 & 0x3f);\n                    if (unaff_RDI == 1) {\n                        *puVar8 = uVar14;\n                        puVar8 = puVar8 + 1;\n                    }\n                    else {\n                        *puVar8 = uVar14 & 0xf | 0xf0;\n                        puVar8[1] = uVar14 >> 4 & 0xf | 0xf0;\n                        puVar8 = puVar8 + 2;\n                    }\n                    puVar12 = uVar14 >> 8;\n                    in_RAX = in_RAX + 1;\n                }\n                if ((uVar1 & 7) != 0) {\n                    puVar12 = puVar12 | *in_RAX << (uVar5 & 0x3f);\n                    puVar7 = puVar7 + (uVar1 & 7);\n                    in_RAX = in_RAX + 1;\n                }\n            }\n        }\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            uVar4 = 0;\n            while( true ) {\n                uVar1 = *in_RAX;\n                puVar3 = puVar3 | (uVar1 & 0x7f) << (uVar4 & 0x3f) & -(uVar4 < 0x40);\n                in_RAX = in_RAX + 1;\n                if (-1 < uVar1) break;\n                uVar4 = uVar4 + 7;\n            }\n        }\n        uVar14 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *in_RAX;\n            uVar14 = uVar14 | -(uVar4 < 0x40) & (uVar1 & 0x7f) << (uVar4 & 0x3f);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar4 = uVar4 + 7;\n        }\n        puVar2 = uVar14 * puVar3;\n        if (puVar3 < 0x3a) break;\n        iVar15 = puVar3 - puVar7;\n        if (unaff_RDI == 1) {\n            uVar4 = iVar15 & 7;\n            puVar3 = puVar8 + -(iVar15 + 7U >> 3);\n            if (uVar4 != 0) {\n                puVar12 = puVar12 | (*puVar3 >> (-(uVar4 - 8) & 0x3f) & -(-(uVar4 - 8) < 0x40)) << (uVar5 & 0x3f);\n                puVar7 = puVar7 + uVar4;\n                puVar2 = puVar2 + -uVar4;\n                puVar3 = puVar3 + 1;\n                puVar9 = arg1;\n            }\n            for (uVar4 = puVar2 >> 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar14 = puVar12 | *puVar3 << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                *puVar8 = uVar14;\n                puVar12 = uVar14 >> 8;\n                puVar3 = puVar3 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = puVar2 & 7;\n            if (uVar6 != 0) {\n                puVar12 = puVar12 | ((1 << uVar6) - 1U & *puVar3) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                puVar7 = puVar7 + uVar6;\n            }\n        }\n        else {\n            uVar4 = iVar15 & 3;\n            puVar3 = puVar8 + -(iVar15 + 3U >> 2);\n            if (uVar4 != 0) {\n                puVar12 = puVar12 | ((*puVar3 & 0xf) >> (-(uVar4 - 4) & 0x3f) & -(-(uVar4 - 4) < 0x40)) <<\n                                    (uVar5 & 0x3f);\n                puVar7 = puVar7 + uVar4;\n                puVar2 = puVar2 + -uVar4;\n                puVar3 = puVar3 + 1;\n                puVar9 = arg1;\n            }\n            for (uVar4 = puVar2 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                uVar14 = puVar12 | (*puVar3 & 0xf) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                *puVar8 = uVar14 & 0xf | 0xf0;\n                puVar12 = uVar14 >> 4;\n                puVar3 = puVar3 + 1;\n                puVar8 = puVar8 + 1;\n            }\n            uVar6 = puVar2 & 3;\n            if (uVar6 != 0) {\n                puVar12 = puVar12 | ((1 << uVar6) - 1U & *puVar3) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n                puVar7 = puVar7 + uVar6;\n            }\n        }\n    }\n    puVar11 = puVar7;\n    puVar13 = puVar12;\n    puVar16 = puVar8;\n    if (unaff_RDI != 1) {\n        do {\n            puVar16 = puVar16 + -1;\n            puVar10 = puVar7;\n            if (puVar3 <= puVar11) goto code_r0x00411f05;\n            puVar11 = puVar11 + 4;\n            puVar13 = puVar13 << 4 | *puVar16 & 0xf;\n        } while( true );\n    }\n    do {\n        puVar16 = puVar16 + -1;\n        puVar10 = puVar7;\n        if (puVar3 <= puVar11) {\ncode_r0x00411f05:\n            puVar7 = puVar11;\n            if (puVar3 < puVar11) {\n                puVar16 = -(puVar11 - puVar3 < 0x40);\n                puVar13 = puVar13 >> (puVar11 - puVar3 & 0x3f) & puVar16;\n                puVar7 = puVar3;\n            }\n            if (puVar7 == 0x1) {\n                puVar7 = puVar2;\n                if (puVar13 == 0x1) {\n                    puVar13 = 0x1ffffffffffffff;\n                    puVar7 = 0x39;\n                }\n                goto code_r0x00411f6e;\n            }\n            puVar11 = puVar7 * 2;\n            puVar3 = puVar7;\n            if (0x39 < puVar11) goto code_r0x00411f6e;\n            for (; puVar3 < 0x41; puVar3 = puVar3 * 2) {\n                puVar11 = puVar13;\n                puVar13 = puVar13 << (puVar3 & 0x3f) & -(puVar3 < 0x40) | puVar13;\n                puVar16 = puVar7;\n            }\n            if (puVar7 != NULL) break;\n            puVar2 = fcn.0042fe00();\n        }\n        puVar11 = puVar11 + 8;\n        puVar13 = puVar13 << 8 | *puVar16;\n    } while( true );\n    puVar7 = puVar7 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar7), 0);\n    puVar13 = puVar13 & (1 << (puVar7 & 0x3f) & -(puVar7 < 0x40)) - 1;\ncode_r0x00411f6e:\n    while (puVar7 <= puVar2) {\n        puVar12 = puVar12 | puVar13 << (puVar10 & 0x3f) & -(puVar10 < 0x40);\n        puVar10 = puVar7 + puVar10;\n        if (unaff_RDI == 1) {\n            for (; 0x7 < puVar10; puVar10 = puVar10 + -8) {\n                *puVar8 = puVar12;\n                puVar12 = puVar12 >> 8;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        else {\n            for (; 0x3 < puVar10; puVar10 = puVar10 + -4) {\n                *puVar8 = puVar12 & 0xf | 0xf0;\n                puVar12 = puVar12 >> 4;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        puVar2 = puVar2 + -puVar7;\n    }\n    puVar7 = puVar10;\n    if (puVar2 != NULL) {\n        puVar12 = puVar12 | (puVar13 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar10 & 0x3f) &\n                            -(puVar10 < 0x40);\n        puVar7 = puVar10 + puVar2;\n    }\n    goto code_r0x00411d52;\n}\n",
        "token_count": 2913
    },
    "004122a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.004122a0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x412380);\n    fcn.004571e0();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x5a22c0;\n    }\n    if (*0x5a1bf8 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040bda0();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 250
    },
    "00412cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412de9)\n\nint64_t fcn.00412cc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x412d06;\n                fcn.00420dc0();\n                if (*0x553d30 != '\\0') {\n                    *(*0x20 + -0x58) = 0x412d14;\n                    fcn.0044dd20();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar7 = *0x573f58 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar7;\n                *(*0x20 + -0x10) = uVar7 * 5;\n                *(*0x20 + -0x58) = 0x412d4b;\n                iVar2 = fcn.0042a940();\n                if (iVar2 != 0) {\n                    cVar6 = '\\0';\n                    goto code_r0x00412d54;\n                }\ncode_r0x00412dc9:\n                uVar7 = *0x54de9c & 0x80000000;\n                if (uVar7 == 0) {\n                    *0x54de9c = *0x54de9c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x573f58;\n                *(*0x20 + -0x2c) = uVar7 == 0;\n                if (uVar7 == 0) {\n                    iVar1 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + 8);\n                    iVar2 = 100;\n                    while (-1 < iVar2) {\n                        if (1 < -(iVar1 + -1)) goto code_r0x00412fed;\n                        *(*0x20 + -0x38) = iVar2;\n                        *(*0x20 + -0x58) = 0x412e65;\n                        iVar2 = fcn.0042a940();\n                        if (iVar2 == 0) {\n                            iVar1 = *(*0x20 + -0x3c);\n                            iVar2 = *(*0x20 + -0x38);\n                            uVar3 = *(*0x20 + 8);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar2;\n                        *(*0x20 + -0x58) = 0x412e7c;\n                        uVar3 = fcn.0041f9e0();\n                        *(*0x20 + -0x20) = uVar3;\n                        if (iVar2 != '\\0') {\n                            *(*0x20 + -0x58) = 0x412e94;\n                            fcn.0041fec0();\n                            *(*0x20 + -0x58) = 0x412ea9;\n                            fcn.0041f5a0();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00412d54;\n                        }\n                        iVar1 = *(*0x20 + -0x3c);\n                        uVar3 = *(*0x20 + 8);\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar2 < 0) goto code_r0x00412f93;\n                        if (1 < -(iVar1 + -1)) {\n                            *(*0x20 + -0x58) = 0x412fed;\n                            fcn.004599e0(2);\ncode_r0x00412fed:\n                            *(*0x20 + -0x58) = 0x412ff9;\n                            fcn.004599e0(2);\n                            goto code_r0x00412ff9;\n                        }\n                        *(*0x20 + -0x38) = iVar2;\n                        iVar2 = -(iVar1 + -1) * 5;\n                        *(*0x20 + -0x58) = 0x412f05;\n                        iVar4 = fcn.0042a940();\n                        if (iVar4 == 0) goto code_r0x00412f93;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x58) = 0x412f25;\n                        uVar5 = fcn.0041f9e0();\n                        *(*0x20 + -0x28) = uVar5;\n                        if (iVar4 == '\\0') goto code_r0x00412ec5;\n                        *(*0x20 + -0x58) = 0x412f3d;\n                        fcn.0041fec0();\n                        *(*0x20 + -0x58) = 0x412f47;\n                        iVar2 = fcn.0040f7c0(iVar2, uVar3, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar2) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar2;\n                            *(*0x20 + -0x58) = 0x412f87;\n                            fcn.0041f5a0();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00412d54;\n                        }\n                        *(*0x20 + -0x58) = 0x412f69;\n                        fcn.0042a7a0(*(*0x20 + -0x10), *(*0x20 + 8));\ncode_r0x00412ec5:\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                        uVar3 = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x00412fa8;\n            }\ncode_r0x00412ff9:\n            *(*0x20 + -0x58) = 0x413006;\n            in_RAX = fcn.004599e0(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x413011;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00412f93:\n    *(*0x20 + -0x58) = 0x412fa8;\n    fcn.0041f5a0();\ncode_r0x00412fa8:\n    *(*0x20 + -0x3d) = *0x553d30;\n    if (*0x553d30 != '\\0') {\n        *(*0x20 + -0x58) = 0x412fbc;\n        fcn.0044de20();\n    }\n    *(*0x20 + -0x58) = 0x412fc6;\n    iVar2 = fcn.00413120();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar6 = *(*0x20 + -0x3d);\ncode_r0x00412d54:\n    *(*0x20 + -0x18) = iVar2;\n    if ((*0x553d30 != '\\0') && (cVar6 == '\\0')) {\n        *(*0x20 + -0x58) = 0x412d6b;\n        fcn.0044de20();\n        iVar2 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar2 + 0x38) != *(iVar2 + 0x60)) && (*(iVar2 + 0x30) != *(iVar2 + 0x38))) {\n        *(*0x20 + -0x58) = 0x412d93;\n        fcn.0040f7a0();\n        iVar2 = *(*0x20 + -0x18);\n        *(iVar2 + 0x40) = *(iVar2 + 0x40) >> (*(iVar2 + 0x30) & 0x3f);\n        return iVar2;\n    }\n    *(*0x20 + -0x58) = 0x412dc8;\n    fcn.004317e0();\n    goto code_r0x00412dc9;\n}\n",
        "token_count": 2113
    },
    "00413020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413020(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x573f58;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x573f58 + 1) {\n                    *(unaff_RBX + 0x58) = *0x573f58 - 1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x4130c5;\n                    fcn.0041fec0();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x573f58;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x4130ad;\n                        fcn.0042a7a0((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x413093;\n                        fcn.0042a7a0((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x4130e5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4130f5;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 581
    },
    "004138c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004138c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x413905;\n            fcn.0042ec20();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x4139b0;\n                        fcn.0042ec20();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x4139ee;\n            fcn.0045ae80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x413a0f;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x413a25;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x413a2f;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x413a45;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x413a4f;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x413a54;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x413a59;\n            fcn.00433120();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x413a6a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x413a7a;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1122
    },
    "00413aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00413aa0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x413aee;\n            fcn.0042eca0();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x413ba5;\n                        fcn.0042eca0();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x413bf3;\n            fcn.0045ae80();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00413c69;\n            do {\n                *(*0x20 + -0x60) = 0x413c18;\n                fcn.004330a0();\n                *(*0x20 + -0x60) = 0x413c29;\n                fcn.004339a0();\n                *(*0x20 + -0x60) = 0x413c33;\n                fcn.004336a0();\n                *(*0x20 + -0x60) = 0x413c45;\n                fcn.004339a0();\n                *(*0x20 + -0x60) = 0x413c4e;\n                fcn.004336a0();\n                *(*0x20 + -0x60) = 0x413c53;\n                fcn.00433300();\n                *(*0x20 + -0x60) = 0x413c58;\n                fcn.00433120();\n                *(*0x20 + -0x60) = 0x413c69;\n                iVar1 = fcn.004317e0();\ncode_r0x00413c69:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x413c75;\n            fcn.004330a0();\n            *(*0x20 + -0x60) = 0x413c86;\n            fcn.004339a0();\n            *(*0x20 + -0x60) = 0x413c90;\n            fcn.004336a0();\n            *(*0x20 + -0x60) = 0x413ca5;\n            fcn.004339a0();\n            *(*0x20 + -0x60) = 0x413cae;\n            fcn.004336a0();\n            *(*0x20 + -0x60) = 0x413cb3;\n            fcn.00433300();\n            *(*0x20 + -0x60) = 0x413cb8;\n            fcn.00433120();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x413cc9;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x413cd9;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1479
    },
    "00413d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413d00(void)\n\n{\n    code *pcVar1;\n    int64_t iStack32;\n    \n    fcn.0042ec20();\n    if (iStack32 != 0) {\n        return;\n    }\n    fcn.0045ae80();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004317e0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 152
    },
    "00413f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413f40(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong *puVar5;\n    ulong arg4;\n    int64_t unaff_R14;\n    \ncode_r0x00413f40:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x5a1b84 == 0) {\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = 0x413f8d;\n            fcn.00409aa0();\n            if ((*0x5a1c70 != NULL) && (*(*0x5a1c70 + 2) != 0x65)) goto code_r0x0041400f;\n            if (*0x5a1c60 != NULL) goto code_r0x00413feb;\n            *(*0x20 + -0x28) = 0x413fbc;\n            *0x5a1c60 = fcn.0040bf00(0x5a4678);\n            **0x5a1c60 = *0x5a1c00;\n            *0x5a1c00 = *0x5a1c60;\n            if (*0x5a1f40 != '\\0') goto code_r0x00413feb;\n            iVar2 = 0;\n            do {\n                if (iVar2 < 0x40) {\n                    uVar1 = iVar2 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 2) * -5\n                    ;\n                    if (4 < uVar1) goto code_r0x00414146;\n                }\n                else {\ncode_r0x00413feb:\n                    puVar5 = *0x5a1c60;\n                    puVar3 = *0x5a1c60 + 1;\n                    *0x5a1c60 = (*0x5a1c60)[1];\n                    *puVar3 = *0x5a1c70;\n                    *0x5a1c70 = puVar5;\ncode_r0x0041400f:\n                    puVar3 = *0x5a1c70;\n                    uVar1 = *(*0x5a1c70 + 2);\n                    if (uVar1 < 0x65) {\n                        LOCK();\n                        *(*0x5a1c70 + 2) = *(*0x5a1c70 + 2) + 1;\n                        iVar2 = uVar1 * 5;\n                        puVar5 = puVar3 + uVar1 * 5 + 4;\n                        if (*0x5a1da0 == 0) {\n                            puVar3[uVar1 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x414078;\n                            fcn.004596e0(iVar2, puVar3, puVar5);\n                        }\n                        arg4 = *(*0x20 + 0x18);\n                        puVar3[iVar2 + 5] = arg4;\n                        if (*0x5a1da0 == 0) {\n                            puVar3[iVar2 + 6] = *(*0x20 + 0x20);\n                            puVar3[iVar2 + 7] = *(*0x20 + 0x28);\n                            puVar3[iVar2 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4140b8;\n                            fcn.00459640(*(*0x20 + 0x20), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x4140c5;\n                            fcn.00459640(*(*0x20 + 0x28), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x4140d2;\n                            fcn.00459640(*(*0x20 + 8), puVar3, puVar5, arg4);\n                        }\n                        *0x5a1b46 = 1;\n                        *(*0x20 + -0x28) = 0x4140e7;\n                        fcn.00409cc0();\n                        return;\n                    }\n                    iVar2 = 0x65;\n                    *(*0x20 + -0x28) = 0x4140fb;\n                    uVar1 = fcn.004599e0(0x65);\n                }\n                unaff_RSI = 0x5a1f40;\n                *(iVar2 + 0x5a1f40) = *(uVar1 + 0x53a294);\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n        goto code_r0x00414150;\n    }\n    goto code_r0x00414166;\ncode_r0x00414146:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x414150;\n    fcn.004599e0(5);\ncode_r0x00414150:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x414165;\n    in_RAX = fcn.004317e0();\ncode_r0x00414166:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + -8) = 0x414185;\n    fcn.00457320();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    *0x20 = puVar4;\n    goto code_r0x00413f40;\n}\n",
        "token_count": 1618
    },
    "004141c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004141c0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    if ((*0x5a1b45 == '\\0') || (*0x5a1b46 == '\\0')) {\n        uVar1 = 0;\n    }\n    else {\n        *0x5a1b45 = '\\0';\n        *0x5a1b46 = '\\0';\n        uVar1 = *0x54d5d0;\n    }\n    fcn.00409cc0();\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "00414240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414240(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x5a1da0 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x41429f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.00459640(arg1, arg2, unaff_RDI, in_R9);\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x4142a8;\n                    in_RAX = fcn.004596c0(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x5a1da0 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4142ed;\n                        fcn.004596a0(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x414305;\n                fcn.0042fe00();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x414316;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x414335;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 928
    },
    "00414360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t * fcn.00414360(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x4143b6;\n                        fcn.0045a040();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x4143e6;\n                    uVar3 = fcn.0040bf00(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x414416;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x414446;\n            fcn.004330a0();\n            *(*0x20 + -0x38) = 0x414457;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x41445c;\n            fcn.00433120();\n            *(*0x20 + -0x38) = 0x41446d;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x414478;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "00414520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414520(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    noname_0 = fcn.00404040();\n    puVar1 = fcn.0040bba0();\n    *puVar1 = 0x414680;\n    if (*0x5a1da0 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.00459640(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043c0c0();\n    puVar1 = fcn.0040bba0();\n    *puVar1 = 0x414620;\n    if (*0x5a1da0 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.00459640(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043c0c0();\n    fcn.00404fa0();\n    fcn.00404fa0();\n    *0x5a56b8 = 1;\n    return;\n}\n",
        "token_count": 340
    },
    "004147a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004147a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (((*0x5a56b8 == '\\0') || (*0x5a1ba4 != 0)) || (*0x5a1b84 != 0)) {\n        return 0;\n    }\n    if (in_RAX == 0) {\n        uVar1 = fcn.0041cb60();\n        return uVar1 & 0xffffffffffffff00 | uVar1 <= *0x5a2508;\n    }\n    if (in_RAX == 1) {\n        if (-1 < *0x5a2480) {\n            if (*0x5a56a8 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *0x5a56a8 & 0xffffffffffffff00 | *0x53a350 < unaff_RBX - *0x5a56a8;\n            }\n            return uVar1 & 0xffffffff;\n        }\n        return 0;\n    }\n    if (in_RAX == 2) {\n        return 0 < arg1 - *0x54e258;\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "00414900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414cac)\n// WARNING: Removing unreachable block (ram,0x00414cc3)\n\nvoid fcn.00414900(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    ulong uVar8;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            while( true ) {\n                *(*0x20 + -0x88) = 0x4149c5;\n                cVar5 = fcn.004147a0(arg1);\n                if (cVar5 == '\\0') {\n                    bVar9 = false;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x4149d2;\n                    iVar6 = fcn.0041fae0();\n                    bVar9 = iVar6 != -1;\n                }\n                if (!bVar9) break;\n                *0x54de94 = *0x54de94 + 1;\n                arg1 = *(*0x20 + -0x4c);\n            }\n            *(*0x20 + -0x88) = 0x4149f0;\n            fcn.004418c0(0);\n            *(*0x20 + -0x88) = 0x414a05;\n            cVar5 = fcn.004147a0(*(*0x20 + -0x4c));\n            if (cVar5 == '\\0') {\n                *(*0x20 + -0x88) = 0x414ad0;\n                fcn.00441c00(0);\n                return;\n            }\n            *0x54e218 = *(*0x20 + -0x38) == 2;\n            if (*0x5a1ff8 == 1) {\n                uVar8 = 1;\n            }\n            else {\n                uVar8 = 0;\n                if (*0x5a1ff8 == 2) {\n                    uVar8 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar8;\n            *(*0x20 + -0x88) = 0x414a58;\n            fcn.004418c0(0);\n            *(*0x20 + -0x88) = 0x414a6b;\n            fcn.004418c0(0);\n            if (*0x553d30 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x553d60;\n                *(*0x20 + -0x88) = 0x414aa6;\n                fcn.0044cd00(*0x20 + -0x28);\n                *0x553d60 = *0x553d60 + 1;\n            }\n            iVar6 = 0;\n            while( true ) {\n                if (*0x54dd18 <= iVar6) {\n                    *(*0x20 + -0x88) = 0x414b0a;\n                    fcn.004164c0();\n                    *(*0x20 + -0x80) = 0x4dc3d0;\n                    *(*0x20 + -0x88) = 0x414b1a;\n                    fcn.004571e0();\n                    *0x54e25c = *0x5a1b88;\n                    *0x54e260 = *0x5a1b88;\n                    if (*0x5a1b90 < *0x5a1b88) {\n                        *0x54e25c = *0x5a1b90;\n                    }\n                    *0x54e298 = *0x5a2508;\n                    *0x54e288 = 0;\n                    *0x54e210 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x88) = 0x414b7a;\n                    fcn.0045b2e0();\n                    *0x54e268 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x48) = *0x54e268;\n                    *0x54e290 = *0x54e268;\n                    if (*0x553d30 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x88) = 0x414bdf;\n                        fcn.0044cd00(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x80) = 0x4dc520;\n                    *(*0x20 + -0x88) = 0x414bef;\n                    fcn.004571e0();\n                    *(*0x20 + -0x80) = 0x4dc3d8;\n                    *(*0x20 + -0x88) = 0x414c13;\n                    fcn.004571e0();\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    uVar12 = 0;\n                    uVar13 = 0;\n                    iVar4 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x88) = 0x414c2c;\n                    fcn.00417400();\n                    *0x54e258 = *0x54e258 + 1;\n                    arg3 = *(*0x20 + -0x4c);\n                    *(*0x20 + -0x88) = 0x414c59;\n                    fcn.0041baa0(*0x5a1b88, iVar6, arg3);\n                    *(*0x20 + -0x88) = 0x414c6f;\n                    fcn.004177c0(*(*0x20 + -0x48));\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x88) = 0x414c85;\n                        fcn.0043f620();\n                    }\n                    *0x5a1b84 = 1;\n                    *0x5a1da4 = 1;\n                    *0x5a1da0 = 1;\n                    *0x54e190 = 0xffffffff;\n                    *0x54e1a0 = 0xffffffff;\n                    *(*0x20 + -0x88) = 0x414cea;\n                    fcn.00417fc0(1, 0x5a1b84, arg3);\n                    *(*0x20 + -0x88) = 0x414cef;\n                    fcn.0041b8c0();\n                    *0x5a1b7c = 1;\n                    piVar1 = *(iVar4 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar4 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar13, CONCAT48(uVar12, CONCAT44(uVar11, uVar10)));\n                    *(*0x20 + -0x18) = 0x414ea0;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x80) = *0x20 + -0x18;\n                    *(*0x20 + -0x88) = 0x414d3b;\n                    fcn.004571e0();\n                    iVar6 = **(in_GS_OFFSET + 0x28);\n                    *(*0x20 + -0x88) = 0x414d65;\n                    fcn.00441c00(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar6 + 0xb1) == '\\0') {\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar6 + 0x10) = 0xfffffffffffffade;\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar9 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar9) {\n                        *(*0x20 + -0x88) = 0x414dbc;\n                        fcn.00457160();\n                    }\n                    *(*0x20 + -0x88) = 0x414dcd;\n                    fcn.00441c00(0);\n                    return;\n                }\n                piVar1 = *(*0x54dd10 + iVar6 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x573f58) break;\n                iVar6 = iVar6 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x573f58;\n            *(*0x20 + -0x30) = *piVar1;\n            *(*0x20 + -0x88) = 0x414dec;\n            arg1 = *0x54dd18;\n            fcn.004330a0();\n            *(*0x20 + -0x88) = 0x414dfd;\n            fcn.004339a0();\n            *(*0x20 + -0x88) = 0x414e07;\n            fcn.004337a0();\n            *(*0x20 + -0x88) = 0x414e18;\n            fcn.004339a0();\n            *(*0x20 + -0x88) = 0x414e25;\n            fcn.004336a0();\n            *(*0x20 + -0x88) = 0x414e36;\n            fcn.004339a0();\n            *(*0x20 + -0x88) = 0x414e3f;\n            fcn.004336a0();\n            *(*0x20 + -0x88) = 0x414e45;\n            fcn.00433300();\n            *(*0x20 + -0x88) = 0x414e4a;\n            fcn.00433120();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x88) = 0x414e5b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x414e6f;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3008
    },
    "00415200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415200(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004418c0(0);\n    while ((*0x5a1b84 == 1 && (*0x54e190 == *0x54e1a0))) {\n        if (*0x54e100 == 0) {\n            if (*0x54e188 < *0x54e18c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.004418c0(0);\n        *0x5a1b80 = 0;\n        fcn.004571e0();\n        if (*0x5a1b80 == 0) {\n            fcn.0045b2e0();\n            uVar3 = 0x4dc398;\n            *0x54e278 = 0x4dc398;\n            *0x54e290 = 0x4dc398;\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x5a1da0 == 0) {\n                arg2 = 0x47f22d;\n                *(iVar1 + 200) = 0x47f22d;\n            }\n            else {\n                arg2 = 0x47f22d;\n                uVar3 = fcn.00459660(arg1, 0x47f22d, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x553d30 != '\\0') {\n                uStack32 = 0;\n                fcn.0044cd00(&uStack32);\n            }\n            fcn.004571e0();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x415520);\n            arg1_00 = auStack24;\n            fcn.004571e0();\n            if (cStack41 == '\\0') {\n                fcn.00446cc0();\n                *0x5a1b7c = 0;\n                fcn.004177c0(uStack40);\n                fcn.004194e0();\n                fcn.00441c00(0);\n                fcn.0043f620();\n                fcn.0041bfc0(*0x5a1b88);\n                fcn.00415780();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x5a1da0 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.00459540(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.004571e0();\n            fcn.00441c00(0);\n        }\n        else {\n            fcn.00441c00(0);\n        }\n    }\n    fcn.00441c00(0);\n    return;\n}\n",
        "token_count": 865
    },
    "00416c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416c40(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x5a2028) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x416c6c;\n                fcn.00429d40();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x5a1b84 == 2) {\n                *(*0x20 + -0x20) = *0x54e100;\n                *0x54e198 = in_RAX;\n                if ((*0x54e100 == 0) && (arg2 = *0x54e188,  *0x54e18c <= *0x54e188)) {\n                    if (0 < *0x5a1fec) {\n                        *(*0x20 + -0x78) = 0x416cba;\n                        fcn.004181c0();\n                    }\n                    if (*0x54e100 == 0) {\n                        *0x54e1e8 = in_XMM15;\n                        if (*0x5a1da0 == 0) {\n                            *0x54e1e0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x416cf4;\n                            fcn.00459640(0, arg2, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x10) = *0x54dd10;\n                        *(*0x20 + -0x28) = *0x54dd18;\n                        iVar3 = 0;\n                        iVar4 = *0x54dd10;\n                        iVar5 = *0x54dd18;\n                        while( true ) {\n                            iVar2 = *0x54dd18;\n                            iVar1 = *0x54dd10;\n                            if (iVar5 <= iVar3) {\n                                for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n                                    iVar5 = *(*(iVar1 + iVar4 * 8) + 0x40);\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x416dd5;\n                                fcn.0041c820();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x5a1fec < 1) {\n                                *(*0x20 + -0x78) = 0x416d65;\n                                fcn.0042af80();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x416d51;\n                                fcn.0042b100();\n                            }\n                            iVar4 = *(*(*0x20 + -0x18) + 0x1240);\n                            if ((iVar4 != 0) &&\n                               ((*(iVar4 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1248) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x416d1b;\n                            fcn.00421420();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x416de5;\n                        fcn.004330a0();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x498);\n                        *(*0x20 + -0x78) = 0x416e05;\n                        fcn.004330a0();\n                        *(*0x20 + -0x78) = 0x416e16;\n                        fcn.004339a0();\n                        *(*0x20 + -0x78) = 0x416e25;\n                        fcn.004337a0();\n                        *(*0x20 + -0x78) = 0x416e36;\n                        fcn.004339a0();\n                        *(*0x20 + -0x78) = 0x416e45;\n                        fcn.00433340();\n                        *(*0x20 + -0x78) = 0x416e4a;\n                        fcn.00433120();\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) {\n                            *(*0x20 + -0x78) = 0x416f11;\n                            fcn.004330a0();\n                            *(*0x20 + -0x78) = 0x416f25;\n                            fcn.004339a0();\n                            *(*0x20 + -0x78) = 0x416f2a;\n                            fcn.00433120();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                            *(*0x20 + -0x78) = 0x416e6d;\n                            fcn.004330a0();\n                            *(*0x20 + -0x78) = 0x416e7e;\n                            fcn.004339a0();\n                            *(*0x20 + -0x78) = 0x416e88;\n                            fcn.004337a0();\n                            *(*0x20 + -0x78) = 0x416e8d;\n                            fcn.00433120();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1248) == 0) goto code_r0x00416eec;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1248) + 0x10);\n                        *(*0x20 + -0x78) = 0x416eac;\n                        fcn.004330a0();\n                        *(*0x20 + -0x78) = 0x416ebd;\n                        fcn.004339a0();\n                        *(*0x20 + -0x78) = 0x416ec7;\n                        fcn.004337a0();\n                        *(*0x20 + -0x78) = 0x416ecc;\n                        fcn.00433120();\n                        do {\n                            *(*0x20 + -0x78) = 0x416ed1;\n                            fcn.004330a0();\n                            *(*0x20 + -0x78) = 0x416ed6;\n                            fcn.00433300();\n                            *(*0x20 + -0x78) = 0x416edb;\n                            fcn.00433120();\n                            *(*0x20 + -0x78) = 0x416eec;\n                            fcn.004317e0();\ncode_r0x00416eec:\n                            *(*0x20 + -0x78) = 0x416ef1;\n                            fcn.004330a0();\n                            *(*0x20 + -0x78) = 0x416f05;\n                            fcn.004339a0();\n                            *(*0x20 + -0x78) = 0x416f0a;\n                            fcn.00433120();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x416f45;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x40) = *0x54e188;\n                *(*0x20 + -0x48) = *0x54e18c;\n                *(*0x20 + -0x28) = *0x54e1a8;\n                *(*0x20 + -0x30) = *0x54e1b0;\n                *(*0x20 + -0x50) = *0x54e1b8;\n                *(*0x20 + -0x58) = *0x54e1c0;\n                *(*0x20 + -0x78) = 0x416f90;\n                fcn.004330a0();\n                *(*0x20 + -0x78) = 0x416fa5;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x416faf;\n                fcn.00433800();\n                *(*0x20 + -0x78) = 0x416fc5;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x416fcf;\n                fcn.004336a0();\n                *(*0x20 + -0x78) = 0x416fe5;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x416fef;\n                fcn.004336a0();\n                *(*0x20 + -0x78) = 0x417005;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x41700f;\n                fcn.004337a0();\n                *(*0x20 + -0x78) = 0x417025;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x41702f;\n                fcn.004337a0();\n                *(*0x20 + -0x78) = 0x417045;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x41704f;\n                fcn.004337a0();\n                *(*0x20 + -0x78) = 0x417065;\n                fcn.004339a0();\n                *(*0x20 + -0x78) = 0x41706f;\n                fcn.004337a0();\n                *(*0x20 + -0x78) = 0x417074;\n                fcn.00433300();\n                *(*0x20 + -0x78) = 0x417079;\n                fcn.00433120();\n                *(*0x20 + -0x78) = 0x41708c;\n                fcn.00431040();\n            }\n            *(*0x20 + -0x78) = 0x41709d;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x4170a8;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2649
    },
    "004170c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041726a)\n\nvoid fcn.004170c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1b84 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x4170f9;\n                fcn.00409aa0();\n                *0x573f58 = *0x573f58 + 2;\n                *0x54de9c = 0;\n                *0x573f80 = 0;\n                *0x574218 = *0x574200;\n                *0x574220 = *0x574208;\n                if (*0x5a1da0 == 0) {\n                    *0x574210 = *0x5741f8;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x41715b;\n                    fcn.00459640(*0x5741f8, *0x574200, param_3, param_4);\n                }\n                *0x573fa0 = 0;\n                *0x573fa8 = 0;\n                *(*0x20 + -0x28) = 0x417185;\n                fcn.00409cc0();\n                *0x54dea0 = 0;\n                if (*(*0x20 + 8) != 2) {\n                    *(*0x20 + -0x28) = 0x4171d5;\n                    fcn.00409aa0();\n                    if (*0x54de90 != '\\0') {\n                        *0x54de90 = '\\0';\n                        *(*0x20 + -0x28) = 0x4171f8;\n                        fcn.00435520(1);\n                    }\n                    *(*0x20 + -0x28) = 0x417206;\n                    fcn.00409cc0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4171aa;\n                fcn.00409aa0();\n                *0x573f98 = 0;\n                *(*0x20 + -0x28) = 0x4171c5;\n                fcn.00409cc0();\n                while( true ) {\n                    *(*0x20 + -0x28) = 0x41721b;\n                    iVar2 = fcn.0041fae0();\n                    if (iVar2 == -1) break;\n                    *0x54de98 = *0x54de98 + 1;\n                }\n                *(*0x20 + -0x28) = 0x41722b;\n                fcn.00421b40();\n                do {\n                    *(*0x20 + -0x28) = 0x417232;\n                    cVar1 = fcn.00421c40();\n                } while (cVar1 != '\\0');\n                *0x5a1b8c = ((*0x5a1b8c >> 1) + (((*0x5a1b8c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                *(*0x20 + -0x28) = 0x417279;\n                fcn.00428d20();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x417294;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41729f;\n        fcn.0045ba20();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1001
    },
    "00417400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417400(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54d600 != NULL) {\n        (***0x54d600)();\n    }\n    arg2 = *0x54dd38;\n    iVar3 = *0x54dd30;\n    for (iVar2 = 0; iVar2 < arg2; iVar2 = iVar2 + 1) {\n        puVar1 = *(iVar3 + iVar2 * 8);\n        if (*0x5a1da0 != '\\0') {\n            fcn.00402d00();\n        }\n        *puVar1 = 0;\n    }\n    fcn.00409aa0();\n    iVar3 = *0x54e760;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 8);\n        if (*0x5a1da0 == 0) {\n            *(iVar3 + 8) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.00459640(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x5a1da0 == 0) {\n        *0x54e760 = 0;\n    }\n    else {\n        fcn.00459640(0, arg2, param_3, param_4);\n    }\n    fcn.00409cc0();\n    fcn.00409aa0();\n    iVar3 = *0x54e770;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 0x28);\n        if (*0x5a1da0 == 0) {\n            *(iVar3 + 0x28) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.00459640(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x5a1da0 == 0) {\n        *0x54e770 = 0;\n    }\n    else {\n        fcn.00459640(0, arg2, param_3, param_4);\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 608
    },
    "004175a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.004175a0(uint64_t arg1)\n\n{\n    uchar *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t aiStack96 [3];\n    char acStack72 [8];\n    int32_t *apiStack64 [5];\n    uchar auStack24 [16];\n    \n    puVar4 = &stack0xfffffffffffffff8;\n    if (unaff_RDI < 10000000) {\n        uVar5 = (unaff_RDI >> 1) / 500;\n        if (uVar5 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                uVar5 = 0;\n                fcn.00459a60(1, 0);\n            }\n            arg1 = 0;\n            iVar1 = fcn.004599e0(0);\n            goto code_r0x0041763b;\n        }\n        iVar1 = 3;\n        for (; 99 < uVar5; uVar5 = uVar5 / 10) {\ncode_r0x0041763b:\n            iVar1 = iVar1 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar1;\n        uVar2 = arg1_00 - 1;\n        uVar6 = unaff_RBX - 1;\ncode_r0x0041766c:\n        uVar10 = uVar6;\n        if ((uVar5 < 10) && (uVar10 < uVar2)) {\n            if (uVar10 < unaff_RBX) {\n                in_RAX[uVar10] = uVar5 + '0';\n                return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n            }\n            fcn.004599e0(unaff_RBX);\n            goto code_r0x004176fe;\n        }\n        uVar6 = uVar5 / 10;\n        arg1_00 = uVar5 % 10;\n        uVar5 = uVar6;\n        if (uVar10 < unaff_RBX) goto code_r0x0041769a;\n        goto code_r0x00417706;\n    }\n    uVar5 = unaff_RDI / 1000000;\n    uVar2 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar6 = uVar2;\ncode_r0x00417717:\n    uVar10 = uVar6;\n    cVar7 = uVar5;\n    if ((uVar5 < 10) && (uVar10 < uVar2)) {\n        if (uVar10 < arg1_00) {\n            in_RAX[uVar10] = cVar7 + '0';\n            return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n        }\n        fcn.004599e0(arg1_00);\n        goto code_r0x004177ac;\n    }\n    uVar5 = uVar5 / 10;\n    if (uVar10 < arg1_00) goto code_r0x0041774b;\n    goto code_r0x004177b4;\ncode_r0x0041769a:\n    in_RAX[uVar10] = arg1_00 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 != uVar2) goto code_r0x0041766c;\n    if (uVar6 < unaff_RBX) {\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n        goto code_r0x0041766c;\n    }\ncode_r0x004176fe:\n    fcn.004599e0(unaff_RBX);\ncode_r0x00417706:\n    arg1 = unaff_RBX;\n    uVar2 = arg1;\n    uVar6 = fcn.004599e0(arg1);\n    goto code_r0x00417717;\ncode_r0x0041774b:\n    in_RAX[uVar10] = cVar7 + uVar5 * -10 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 == uVar2) {\n        if (arg1_00 <= uVar6) {\ncode_r0x004177ac:\n            fcn.004599e0(arg1_00);\ncode_r0x004177b4:\n            uVar5 = arg1_00;\n            piVar3 = fcn.004599e0(arg1_00);\n            puVar8 = auStack24;\n            do {\n                cVar7 = arg1_00;\n                puVar9 = puVar8;\n                if (*(unaff_R14 + 0x10) <= puVar8 && puVar8 != *(unaff_R14 + 0x10)) {\n                    puVar9 = puVar8 + -0x20;\n                    *(puVar8 + -8) = puVar4;\n                    puVar4 = puVar8 + -8;\n                    LOCK();\n                    if (*piVar3 == 0) {\n                        *piVar3 = 1;\n                        if (*(piVar3 + 8) != cVar7) {\n                            *(puVar8 + -0x10) = piVar3;\n                            puVar8[0x10] = cVar7;\n                            *(puVar8 + -0x28) = 0x417808;\n                            puVar4 = fcn.004179c0();\n                            iVar1 = *(puVar8 + -0x10);\n                            *(iVar1 + 0x20) = puVar8[0x10];\n                            *(iVar1 + 0x21) = 1;\n                            return puVar4;\n                        }\n                        *(puVar8 + -0x28) = 0x417834;\n                        fcn.004317e0();\n                    }\n                    cVar7 = '/';\n                    *(puVar8 + -0x28) = 0x417845;\n                    piVar3 = fcn.004317e0();\n                }\n                *(puVar9 + 8) = piVar3;\n                puVar9[0x10] = cVar7;\n                *(puVar9 + 0x18) = uVar5;\n                *(puVar9 + -8) = 0x417859;\n                fcn.00457320();\n                piVar3 = *(puVar9 + 8);\n                arg1_00 = puVar9[0x10];\n                uVar5 = *(puVar9 + 0x18);\n                puVar8 = puVar9;\n            } while( true );\n        }\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n    }\n    goto code_r0x00417717;\n}\n",
        "token_count": 1638
    },
    "00417880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417880(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x21) != '\\0') {\n                iVar2 = *(in_RAX + 0x40);\n                if (iVar2 <= unaff_RBX) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    iVar1 = *(in_RAX + 0x4c);\n                    *(*0x20 + -0x28) = 0x4178c5;\n                    fcn.00417bc0((unaff_RBX - iVar2) * iVar1);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x40) = unaff_RBX;\n                *(in_RAX + 0x21) = 0;\n                *(*0x20 + -0x28) = 0x4178dd;\n                fcn.00417c60();\n                return;\n            }\n            unaff_RBX = 0x2f;\n            *(*0x20 + -0x28) = 0x4178f8;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x417908;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00417920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00417920(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX != 0) {\n                return *in_RAX;\n            }\n            *in_RAX = 1;\n            if (*(in_RAX + 0x21) == '\\0') {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x41795c;\n                fcn.004179c0();\n                *(*0x20 + -0x28) = 0x417966;\n                uVar1 = fcn.00417c60();\n                return uVar1;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x28) = 0x41798b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41799b;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 434
    },
    "00417c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417c60(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            *in_RAX = 0;\n            if (iVar1 == 1) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x417c98;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x417ca5;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 282
    },
    "00417fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417fc0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54d5e8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x54d5e8;\n        iVar5 = (*0x54d5e8)[1];\n    }\n    *0x54e1a8 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x54e1a8 < uVar8) {\n            *0x54e1a8 = CONCAT88(*0x54e1b0, uVar8);\n        }\n    }\n    if (*0x54d5e8 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x54d5e8;\n        iVar5 = (*0x54d5e8)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x54e1b0 < uVar8) {\n            *0x54e1a8 = CONCAT88(uVar8, *0x54e1a8);\n        }\n    }\n    *0x574230 = *0x574200;\n    *0x574238 = *0x574200;\n    if (*0x5a1da0 == 0) {\n        *0x574228 = *0x5741f8;\n        *0x54e1b8 = *0x574200;\n    }\n    else {\n        *0x54e1b8 = fcn.00459640(*0x5741f8, iVar7, arg3, in_R9);\n    }\n    *0x54e1e8 = *0x54dcf8;\n    *0x54e1f0 = *0x54dcf8;\n    if (*0x5a1da0 == 0) {\n        *0x54e1e0 = *0x54dcf0;\n        *0x54e1c0 = *0x54dcf8;\n    }\n    else {\n        *0x54e1c0 = fcn.00459640(*0x54dcf0, iVar7, arg3, in_R9);\n    }\n    iVar3 = SUB164(*0x54e1a8, 0);\n    iVar4 = SUB164(*0x54e1a8 >> 0x40, 0);\n    iVar2 = *0x54e1b8;\n    *0x54e188 = 0;\n    *0x54e18c = iVar3 + iVar4 + iVar2 + *0x54e1c0 + 2;\n    *0x54e1c8 = 2;\n    *0x54e1cc = iVar3 + 2;\n    *0x54e1d0 = iVar4 + iVar3 + 2;\n    *0x54e1d4 = iVar2 + iVar3 + iVar4 + 2;\n    *0x54e1d8 = *0x54e1c0 + iVar3 + iVar4 + iVar2 + 2;\n    return;\n}\n",
        "token_count": 978
    },
    "00418b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418b60(void)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *0x574230;\n            if (unaff_RBX < *0x574230) {\n                uVar5 = *(*0x574228 + unaff_RBX * 8);\n                unaff_RBX = uVar5 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x573f58;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x573fb0) + (uVar5 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar4 = 0;\n                    uVar6 = *0x573f58;\n                    do {\n                        if (0x3f < iVar4) {\n                            return;\n                        }\n                        uVar9 = *(unaff_RBX + iVar4 + 0x21080);\n                        if (uVar9 != 0) {\n                            *(*0x20 + -0x30) = iVar4;\n                            *(*0x20 + -0x4a) = uVar9;\n                            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                                if ((uVar9 & 1 << (uVar5 & 0x1f)) != 0) {\n                                    uVar1 = uVar5 + iVar4 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar4 = *(unaff_RBX + 0x20000 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar4 + 99);\n                                        if (*(iVar4 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar5;\n                                            if (*0x5a1b50 == '\\0') {\n                                                uVar3 = *(iVar4 + 0x58);\n                                                in_R10 = uVar3;\n                                                if ((uVar3 != uVar6) && (uVar3 != uVar6 + 3)) {\ncode_r0x00418d3a:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x418d45;\n                                                    fcn.004330a0();\n                                                    *(*0x20 + -0x80) = 0x418d56;\n                                                    fcn.004339a0();\n                                                    *(*0x20 + -0x80) = 0x418d5f;\n                                                    fcn.004336a0();\n                                                    *(*0x20 + -0x80) = 0x418d65;\n                                                    fcn.004332c0();\n                                                    *(*0x20 + -0x80) = 0x418d6e;\n                                                    fcn.004336a0();\n                                                    *(*0x20 + -0x80) = 0x418d73;\n                                                    fcn.00433300();\n                                                    *(*0x20 + -0x80) = 0x418d78;\n                                                    fcn.00433120();\n                                                    *(*0x20 + -0x80) = 0x418d89;\n                                                    fcn.004317e0();\n                                                    goto code_r0x00418d89;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar4;\n                                            *(*0x20 + -0x18) = iVar4 + 0x78;\n                                            *(*0x20 + -0x80) = 0x418c89;\n                                            fcn.00409aa0();\n                                            iVar4 = *(*0x20 + -0x38);\n                                            for (puVar7 = *(iVar4 + 0x80); puVar7 != NULL; puVar7 = *puVar7) {\n                                                if (*(puVar7 + 10) == '\\x01') {\n                                                    uVar2 = *(puVar7 + 1);\n                                                    uVar5 = *(iVar4 + 0x68);\n                                                    if (uVar5 == 0) {\n                                                        *(*0x20 + -0x80) = 0x418d3a;\n                                                        fcn.0042fe00();\n                                                        goto code_r0x00418d3a;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar7;\n                                                    *(*0x20 + -0x80) = 0x418d05;\n                                                    fcn.0041aa20(iVar4, uVar2 % uVar5);\n                                                    *(*0x20 + -0x80) = 0x418d29;\n                                                    fcn.0041a880(0x53a280);\n                                                    iVar4 = *(*0x20 + -0x38);\n                                                    puVar7 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x418ca5;\n                                            fcn.00409cc0();\n                                            uVar5 = *(*0x20 + -0x20);\n                                            uVar6 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar9 = *(*0x20 + -0x4a);\n                                            iVar4 = *(*0x20 + -0x30);\n                                            goto code_r0x00418c09;\n                                        }\ncode_r0x00418d89:\n                                        *(*0x20 + -0x49) = in_R10;\n                                        *(*0x20 + -0x80) = 0x418d93;\n                                        fcn.004330a0();\n                                        *(*0x20 + -0x80) = 0x418da5;\n                                        fcn.004339a0();\n                                        *(*0x20 + -0x80) = 0x418db2;\n                                        fcn.004336a0();\n                                        *(*0x20 + -0x80) = 0x418db7;\n                                        fcn.00433300();\n                                        *(*0x20 + -0x80) = 0x418dbc;\n                                        fcn.00433120();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x418dcd;\n                                        fcn.004317e0();\n                                    }\n                                    *(*0x20 + -0x80) = 0x418dda;\n                                    fcn.00459a00(0x200);\n                                    goto code_r0x00418dda;\n                                }\ncode_r0x00418c09:\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                    } while( true );\n                }\ncode_r0x00418dda:\n                uVar5 = 0x40;\n                *(*0x20 + -0x80) = 0x418de7;\n                fcn.00459a00(0x40);\n            }\n            *(*0x20 + -0x80) = 0x418def;\n            in_RAX = fcn.004599e0(uVar5);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x418dff;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1879
    },
    "00418e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418e20(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar3 = *0x5a2558;\n            if (*0x5a2044 != '\\0') {\n                if (bVar1) {\n                    fcn.0044cd00(0);\n                }\n                return;\n            }\n            iVar4 = -*(in_RAX + 0x180) * *0x5a2598;\n            arg4 = -*(in_RAX + 0x180);\n            if (iVar4 < 0x10000) {\n                iVar4 = 0x10000;\n                arg4 = *0x4f0c00 * *0x5a25a0;\n            }\n            if (0 < *0x5a2558) {\n                if (*0x5a2558 < iVar4) {\n                    *(in_RAX + 0x180) = *0x5a2558 * *0x5a25a0 + *(in_RAX + 0x180) + 1;\n                    arg4 = iVar3;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + arg4;\n                    arg4 = iVar4;\n                }\n                LOCK();\n                *0x5a2558 = *0x5a2558 - arg4;\n                if (iVar4 == arg4) {\n                    if (bVar1) {\n                        fcn.0044cd00(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x553d30 != '\\0') && (!bVar1)) {\n                fcn.0044cd00(0);\n                bVar1 = true;\n            }\n            fcn.004571e0();\n            iVar3 = *(in_RAX + 0x88);\n            iVar4 = in_RAX;\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                iVar3 = fcn.004596c0(in_RAX, in_RAX + 0x88, 0, arg4);\n            }\n            if (iVar3 != 0) {\n                fcn.00415200();\n                iVar4 = in_RAX;\n            }\n            if (-1 < *(iVar4 + 0x180)) goto code_r0x00419096;\n            if (*(iVar4 + 0xb1) == '\\0') break;\n            fcn.00457160();\n        }\n        cVar2 = fcn.00419560();\n    } while (cVar2 == '\\0');\ncode_r0x00419096:\n    if (bVar1) {\n        fcn.0044cd00(0);\n    }\n    return;\n}\n",
        "token_count": 790
    },
    "00419140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419140(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t iVar4;\n    double dVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint32_t uVar9;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar11;\n    uint64_t uVar10;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = in_RAX + 0x88;\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x41917e;\n                in_RAX = fcn.00459640(0, arg2, arg3, in_R9);\n            }\n            if (*0x5a1b7c == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar7;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x68) = 0x4191b2;\n            fcn.0045b2e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            arg2 = *(*0x20 + -0x60);\n            uVar1 = *(*(*(*(*0x20 + 8) + 0x30) + 0xa0) + 0x1228);\n            if (uVar1 >> 0x3d == 0) {\n                *(*(*(*(*0x20 + 8) + 0x30) + 0xa0) + 0x1228) = arg2 & 0x1fffffffffffffff | 0x4000000000000000;\n            }\n            LOCK();\n            iVar2 = *0x54e1a0 + -1;\n            uVar9 = *0x54e1a0 - 1;\n            uVar10 = uVar9;\n            arg3 = *0x54e190;\n            *0x54e1a0 = iVar2;\n            if (*0x54e190 != uVar9) {\n                *(*0x20 + -0x28) = uVar1 >> 0x3d;\n                *(*0x20 + -0x38) = arg2;\n                *(*0x20 + -0x68) = 0x419245;\n                fcn.00435c80(4);\n                *(*(*0x20 + 8) + 0xb0) = 1;\n                *(*0x20 + -0x68) = 0x41926e;\n                uVar6 = fcn.0041a640();\n                *(*0x20 + -0x30) = uVar6;\n                uVar6 = 2;\n                *(*0x20 + -0x68) = 0x419287;\n                fcn.00435c80(2);\n                dVar5 = *0x5a25a0;\n                dVar11 = *(*0x20 + -0x30) * *0x5a25a0;\n                uVar10 = *(*0x20 + 8);\n                *(uVar10 + 0x180) = dVar11 + *(uVar10 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x54e1a0 + 1;\n                uVar9 = *0x54e1a0 + 1;\n                arg2 = uVar9;\n                *0x54e1a0 = iVar2;\n                if (uVar9 <= *0x54e190) {\n                    if (*0x54e190 == uVar9) {\n                        if (*0x54e100 == 0) {\n                            if (*0x54e188 < *0x54e18c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x5a1da0 == 0) {\n                                *(uVar10 + 0x88) = uVar10;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x419338;\n                                fcn.004596a0(uVar6, arg2, arg3, in_R9);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x68) = 0x41933e;\n                    fcn.0045b2e0();\n                    iVar7 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    *(*0x20 + -0x18) = iVar7;\n                    arg1 = *(*0x20 + -0x60);\n                    *(iVar7 + 0x1218) = *(iVar7 + 0x1218) + (arg1 - *(*0x20 + -0x38));\n                    if (*(*0x20 + -0x28) == '\\0') {\n                        *(*0x20 + -0x20) = arg1;\n                        *(*0x20 + -0x68) = 0x4193a5;\n                        fcn.00417e40(arg1);\n                        iVar7 = *(*0x20 + -0x18);\n                        arg1 = *(*0x20 + -0x20);\n                    }\n                    iVar4 = *0x5a2560;\n                    if (5000 < *(iVar7 + 0x1218)) {\n                        LOCK();\n                        *0x5a2560 = *0x5a2560 + *(iVar7 + 0x1218);\n                        *(*0x20 + -0x68) = 0x4193db;\n                        fcn.00417920(iVar4, arg1);\n                        *(*(*0x20 + -0x18) + 0x1218) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x44) = uVar9;\n                *(*0x20 + -0x3c) = *0x54e190;\n                *(*0x20 + -0x68) = 0x419405;\n                fcn.004330a0(dVar11, dVar5);\n                *(*0x20 + -0x68) = 0x419416;\n                fcn.004339a0();\n                *(*0x20 + -0x68) = 0x41941f;\n                fcn.004336a0();\n                *(*0x20 + -0x68) = 0x419430;\n                fcn.004339a0();\n                *(*0x20 + -0x68) = 0x419439;\n                fcn.004336a0();\n                *(*0x20 + -0x68) = 0x41943e;\n                fcn.00433300();\n                *(*0x20 + -0x68) = 0x419445;\n                fcn.00433120();\n                *(*0x20 + -0x68) = 0x419456;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x40) = uVar10;\n            *(*0x20 + -0x3c) = arg3;\n            *(*0x20 + -0x68) = 0x419465;\n            fcn.004330a0();\n            *(*0x20 + -0x68) = 0x419476;\n            fcn.004339a0();\n            *(*0x20 + -0x68) = 0x41947f;\n            fcn.004336a0();\n            *(*0x20 + -0x68) = 0x419490;\n            fcn.004339a0();\n            *(*0x20 + -0x68) = 0x419499;\n            fcn.004336a0();\n            *(*0x20 + -0x68) = 0x41949e;\n            fcn.00433300();\n            *(*0x20 + -0x68) = 0x4194a5;\n            fcn.00433120();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x68) = 0x4194b6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4194c6;\n        fcn.0045ba20();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2146
    },
    "004196a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004196a0(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x5a25a0,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54e238 == 0) {\n        LOCK();\n        iVar2 = *0x5a2558;\n        *0x5a2558 = *0x5a2558 + in_RAX;\n        return iVar2;\n    }\n    fcn.00409aa0();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x54e238;\n        if ((*0x54e238 == 0) || (iVar2 < 1)) goto code_r0x004197c9;\n        if ((*0x54e238 != 0) && (*0x54e238 = *(*0x54e238 + 0xa0),  *0x54e238 == 0)) {\n            *0x54e240 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00435520(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x54e240 != 0) {\n        *(*0x54e240 + 0xa0) = iVar3;\n        iVar2 = *0x54e238;\n    }\n    *0x54e238 = iVar2;\n    *0x54e240 = iVar3;\n    iVar2 = 0;\ncode_r0x004197c9:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x5a2558;\n        *0x5a2558 = *0x5a2558 + iVar2 * *0x5a2598;\n    }\n    iVar2 = fcn.00409cc0(iVar3);\n    return iVar2;\n}\n",
        "token_count": 546
    },
    "00419840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00419840(void)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x180 && *0x20 + -0x180 != *(unaff_R14 + 0x18)) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar7 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar7 < 3) {\n                    if (uVar7 == 1) goto code_r0x004198a9;\n                }\n                else {\n                    if (4 < uVar7) {\n                        if (uVar7 == 6) {\n                            return 0;\n                        }\ncode_r0x00419a4a:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x90);\n                        puVar8 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar8;\n                        *(*0x20 + -0x208) = 0x419a65;\n                        fcn.004330a0();\n                        *(*0x20 + -0x208) = 0x419a76;\n                        fcn.004339a0();\n                        *(*0x20 + -0x208) = 0x419a85;\n                        fcn.00433920();\n                        *(*0x20 + -0x208) = 0x419a96;\n                        fcn.004339a0();\n                        *(*0x20 + -0x208) = 0x419aa5;\n                        fcn.004337a0();\n                        *(*0x20 + -0x208) = 0x419ab6;\n                        fcn.004339a0();\n                        *(*0x20 + -0x208) = 0x419ac5;\n                        fcn.004336a0();\n                        *(*0x20 + -0x208) = 0x419aca;\n                        fcn.00433300();\n                        *(*0x20 + -0x208) = 0x419acf;\n                        fcn.00433120();\n                        *(*0x20 + -0x208) = 0x419ae5;\n                        fcn.004317e0();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x00419af9:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x419b36;\n                                fcn.0041a880(0x53a280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x419b72;\n                                fcn.0041a880(0x53a280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x419bb6;\n                                fcn.0041a880(0x53a280);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar8 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x419bdd;\n                            fcn.0041eea0(0);\n                        }\n                        iVar6 = 0;\n                        *(*0x20 + -0x208) = 0x419bf5;\n                        uVar4 = fcn.0041f2c0(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar4;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x419c0a;\n                                iVar5 = fcn.0041efe0();\n                                if (iVar5 == 0) {\n                                    while (iVar6 = *(*0x20 + -0x50),  iVar6 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar6 + 0x18);\n                                        *(iVar6 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x419c68;\n                                        fcn.00421920();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar6 = 0x19;\n                                    *(*0x20 + -0x208) = 0x419cbe;\n                                    iVar5 = fcn.004317e0();\n                                }\n                                else {\n                                    iVar5 = iVar5 - *(*0x20 + -0x80);\n                                    puVar8 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar6,  puVar8 != NULL) {\n                                    if (iVar5 < *puVar8) {\n                                        puVar8 = *(puVar8 + 4);\n                                    }\n                                    else {\n                                        if (iVar5 < *puVar8 + puVar8[1]) goto code_r0x00419c29;\n                                        puVar8 = *(puVar8 + 6);\n                                    }\n                                }\n                                puVar8 = NULL;\ncode_r0x00419c29:\n                            } while ((puVar8 == NULL) || (uVar2 = *(puVar8 + 2),  uVar2 == 0));\n                            *(puVar8 + 2) = 0;\n                            for (iVar6 = 0x53f2c0; iVar6 != 0; iVar6 = *(iVar6 + 0x220)) {\n                                if ((*(iVar6 + 0x130) < uVar2 || *(iVar6 + 0x130) == uVar2) &&\n                                   (uVar2 <= *(iVar6 + 0x100) && *(iVar6 + 0x100) != uVar2)) goto code_r0x00419d16;\n                            }\n                            iVar6 = 0;\ncode_r0x00419d16:\n                            iVar6 = *(uVar2 + 0xc) + *(iVar6 + 0x128);\n                            if (*(uVar2 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar8;\n                                *(*0x20 + -0x28) = uVar2;\n                                *(*0x20 + -0x208) = 0x419d4d;\n                                iVar5 = fcn.00412200();\n                                iVar6 = *(iVar5 + 0x18);\n                                puVar8 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar5 = 0;\n                            }\n                            *(*0x20 + -400) = iVar5;\n                            puVar8 = *puVar8 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x419ddc;\n                                fcn.0041a880(iVar6);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x419da8;\n                                fcn.0041ad80(iVar6);\n                            }\n                            iVar6 = *(*0x20 + -400);\n                            if (iVar6 != 0) {\n                                *(*0x20 + -0x208) = 0x419dfc;\n                                fcn.004239e0(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x004198a9:\n                    if (unaff_R14 != in_RAX) {\n                        iVar6 = *(in_RAX + 0x70);\n                        if (iVar6 == 0) {\n                            iVar6 = *(in_RAX + 0x38);\n                        }\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        iVar6 = *(in_RAX + 8) - iVar6;\n                        piVar1 = iVar5 + 0x22b8;\n                        *piVar1 = *piVar1 + iVar6;\n                        piVar1 = iVar5 + 0x22c0;\n                        *piVar1 = *piVar1 + 1;\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + -0x198) = iVar6;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x419927;\n                            fcn.00446100();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x419957;\n                        puVar3 = fcn.00459c14();\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x80) = *puVar3;\n                        *(*0x20 + -0x78) = uVar4;\n                        if (puVar3[10] != 0) {\n                            *(*0x20 + -0x208) = 0x41999c;\n                            fcn.0041a880(0x53a280);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x419f80;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x419a1a;\n                        fcn.0044e660(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar8 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar8 + 10);\n                        goto code_r0x00419af9;\n                    }\n                    *(*0x20 + -0x208) = 0x419e16;\n                    iVar6 = unaff_R14;\n                    in_RAX = fcn.004317e0();\n                    uVar7 = iVar6;\n                }\n                if (uVar7 != 2) goto code_r0x00419a4a;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x208) = 0x419e3a;\n                fcn.004330a0();\n                *(*0x20 + -0x208) = 0x419e4b;\n                fcn.004339a0();\n                *(*0x20 + -0x208) = 0x419e58;\n                fcn.00433920();\n                *(*0x20 + -0x208) = 0x419e69;\n                fcn.004339a0();\n                *(*0x20 + -0x208) = 0x419e73;\n                fcn.004337a0();\n                *(*0x20 + -0x208) = 0x419e85;\n                fcn.004339a0();\n                *(*0x20 + -0x208) = 0x419e90;\n                fcn.004336a0();\n                *(*0x20 + -0x208) = 0x419e95;\n                fcn.00433300();\n                *(*0x20 + -0x208) = 0x419e9a;\n                fcn.00433120();\n                *(*0x20 + -0x208) = 0x419eab;\n                in_RAX = fcn.004317e0();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x208) = 0x419ec6;\n            fcn.004330a0();\n            *(*0x20 + -0x208) = 0x419ed7;\n            fcn.004339a0();\n            *(*0x20 + -0x208) = 0x419ee5;\n            fcn.00433920();\n            *(*0x20 + -0x208) = 0x419ef6;\n            fcn.004339a0();\n            *(*0x20 + -0x208) = 0x419f05;\n            fcn.004337a0();\n            *(*0x20 + -0x208) = 0x419f16;\n            fcn.004339a0();\n            *(*0x20 + -0x208) = 0x419f25;\n            fcn.00433800();\n            *(*0x20 + -0x208) = 0x419f2a;\n            fcn.00433300();\n            *(*0x20 + -0x208) = 0x419f2f;\n            fcn.00433120();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x419f45;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x419f55;\n        fcn.0045ba20();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3562
    },
    "0041a220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a220(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1da4 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x41a605;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x41a615;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x4dc4a0;\n            }\n        }\n        else {\n            uVar8 = 0x4dc4a8;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x54e18c <= *0x54e188) goto code_r0x0041a2ef;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x0041a562:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x54e780 != 0;\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x0041a2ef:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x54e780 != 0;\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041a4ed;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x54e100 == 0) {\n                *(*0x20 + -0x60) = 0x41a345;\n                fcn.00421520();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if ((iVar4 == 0) || (iVar1 = *(iVar4 + 0x10),  iVar1 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                *(iVar4 + 0x10) = iVar1 - 1U;\n                if (0xfc < iVar1 - 1U) goto code_r0x0041a52f;\n                iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x41a3a5;\n                iVar4 = fcn.00421340(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x41a3b3;\n                    fcn.0042b040();\n                    *(*0x20 + -0x60) = 0x41a3bd;\n                    iVar4 = fcn.00421340();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x0041a4ed;\n            }\n            *(*0x20 + -0x60) = 0x41a3f4;\n            fcn.0041aa20(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x5a2540 = *0x5a2540 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x41a43d;\n                    fcn.004196a0();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x41a482;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x0041a4ed;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x54e188 + 1;\n    bVar10 = *0x54e18c <= *0x54e188;\n    *0x54e188 = uVar7;\n    if (bVar10) goto code_r0x0041a2ef;\n    *(*0x20 + -0x60) = 0x41a5bf;\n    fcn.004183c0();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x41a5d2;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x0041a4ed:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x5a2540 = *0x5a2540 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x41a518;\n                fcn.004196a0(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x0041a53c;\ncode_r0x0041a52f:\n    *(*0x20 + -0x60) = 0x41a53c;\n    fcn.004599e0(0xfd);\ncode_r0x0041a53c:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x0041a562;\n}\n",
        "token_count": 2456
    },
    "0041a640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041a640(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x0041a640:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x5a1da4 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0' || *0x5a2044 != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5))\n                goto code_r0x0041a81a;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x54e100 == 0) {\n                    *(*0x20 + -0x30) = 0x41a6e5;\n                    fcn.00421520();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if ((iVar3 == 0) || (iVar1 = *(iVar3 + 0x10),  iVar1 == 0)) {\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar3 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x0041a82c;\n                    iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x41a745;\n                    iVar3 = fcn.00421340();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x41a753;\n                        fcn.0042b040();\n                        *(*0x20 + -0x30) = 0x41a75d;\n                        iVar3 = fcn.00421340();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x54e18c <= *0x54e188) {\ncode_r0x0041a81a:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x54e188 + 1;\n                    bVar6 = *0x54e18c <= *0x54e188;\n                    *0x54e188 = uVar2;\n                    if (bVar6) goto code_r0x0041a81a;\n                    *(*0x20 + -0x30) = 0x41a7b2;\n                    iVar5 = fcn.004183c0(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41a7d2;\n                    fcn.0041aa20();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x5a2540 = *0x5a2540 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x0041a839;\n    }\n    goto code_r0x0041a84b;\ncode_r0x0041a82c:\n    *(*0x20 + -0x30) = 0x41a839;\n    fcn.004599e0(0xfd);\ncode_r0x0041a839:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41a84a;\n    in_RAX = fcn.004317e0();\ncode_r0x0041a84b:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41a85a;\n    fcn.0045ba20();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x0041a640;\n}\n",
        "token_count": 1298
    },
    "0041b040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b040(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar7 = arg3 >> 3;\n                if (*0x5a1b50 == '\\0') {\n                    uVar5 = 1 << (arg3 & 7);\n                    if (((*0x5a1fec < 1) || (arg3 <= *(unaff_RDI + 0x88) && *(unaff_RDI + 0x88) != arg3)) ||\n                       (arg3 = puVar7,  (uVar5 & puVar7[*(unaff_RDI + 0x48)]) != 0)) {\n                        if ((uVar5 & puVar7[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar7[iVar1] = puVar7[iVar1] | uVar5;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x573fb0) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar4 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar4 + 0x21040;\n                            uVar5 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar5 & *(iVar1 + 0x21040 + uVar4)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar5;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x0041b1b6;\n                        }\n                        goto code_r0x0041b206;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x41b1a5;\n                    cVar3 = fcn.00413440(arg1, iVar1, arg3);\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x0041b1b6:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\ncode_r0x0041b1d8:\n                        *(*0x20 + -0x50) = 0x41b1e5;\n                        fcn.00421020();\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) goto code_r0x0041b1d8;\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x41b206;\n                    fcn.004599e0(0xfd);\ncode_r0x0041b206:\n                    *(*0x20 + -0x50) = 0x41b213;\n                    fcn.00459a00(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x41b225;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x41b236;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x41b245;\n                fcn.00433800();\n                *(*0x20 + -0x50) = 0x41b256;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x41b265;\n                fcn.00433800();\n                *(*0x20 + -0x50) = 0x41b276;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x41b285;\n                fcn.00433800();\n                *(*0x20 + -0x50) = 0x41b296;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x41b29b;\n                fcn.00433120();\n                *(*0x20 + -0x50) = 0x41b2b6;\n                fcn.0041b360(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x41b2d3;\n                fcn.0041b360(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x41b2ef;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x41b305;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x41b329;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1775
    },
    "0041b360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041b360(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x573fb0);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x20000 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433120();\n    if (iVar3 == 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n        return;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.00433120();\n    if (*(iVar3 + 99) < *0x5474b8) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433300();\n        fcn.00433120();\n    }\n    else {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n            }\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.00433800();\n            fcn.00433120();\n            if (unaff_RDI == uVar4) {\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n            }\n            fcn.004330a0();\n            fcn.00433300();\n            fcn.00433120();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    return;\n}\n",
        "token_count": 946
    },
    "0041b7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b7a0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x5a1b50 == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = (uVar7 >> 0x23) + *(in_RAX + 0x50);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x573fb0) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x21040;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x21040 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1250;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.00459a00(0x40);\n    }\n    fcn.004317e0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 501
    },
    "0041baa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041baa0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = 0;\n    *(in_RAX + 0xd0) = 0;\n    *(in_RAX + 0xd8) = 0;\n    uVar2 = *(in_RAX + 0xe0);\n    *(in_RAX + 0xe0) = 0;\n    *(in_RAX + 0xe8) = in_XMM15;\n    *(in_RAX + 0xf8) = 0;\n    *(in_RAX + 0x100) = unaff_RBX;\n    uVar2 = fcn.0041cb60(arg1, uVar2);\n    *(in_RAX + 0x78) = uVar2;\n    dVar5 = *0x4f0b90 * arg1;\n    iVar4 = *0x4f0ba0 + dVar5;\n    *(in_RAX + 0x108) = iVar4;\n    dVar6 = iVar4 / dVar5 - *0x4f0bb0;\n    if ((dVar6 < str.333333._0_8_) || (*0x4f0b98 < dVar6)) {\n        if (dVar5 < iVar4) {\n            *(in_RAX + 0x108) = iVar4 + -1;\n        }\n        *(in_RAX + 0x128) = (dVar5 - *(in_RAX + 0x108)) / arg1;\n    }\n    else {\n        *(in_RAX + 0x128) = 0;\n    }\n    if (0 < *0x5a1ff8) {\n        *(in_RAX + 0x108) = arg1;\n        *(in_RAX + 0x128) = 0;\n    }\n    iVar1 = *0x54dd18;\n    iVar4 = *0x54dd10;\n    for (iVar3 = 0; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n        *(*(iVar4 + iVar3 * 8) + 0x1218) = in_XMM15;\n    }\n    if (unaff_RDI == 1) {\n        if (*(in_RAX + 0x108) < 1) {\n            fcn.0041d240();\n        }\n        else {\n            fcn.0041d240();\n        }\n    }\n    else {\n        fcn.0041d240(in_RAX, arg1 - *(in_RAX + 0x108));\n    }\n    fcn.0041bde0();\n    if (0 < *0x5a1ff0) {\n        uVar2 = *(in_RAX + 0x118);\n        arg2 = *0x5a2510;\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004333a0(uVar2, arg2);\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004333a0(uVar2, arg2);\n        fcn.00433300();\n        fcn.00433120();\n    }\n    return;\n}\n",
        "token_count": 927
    },
    "0041bfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bfc0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong noname_0;\n    uint64_t uVar3;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    ulong extraout_XMM0_Qa;\n    double dVar4;\n    double dVar5;\n    double dVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *0x5a2500 = fcn.0041ca20();\n    iVar2 = unaff_RBX - *(in_RAX + 0x100);\n    dVar5 = *0x4f0b90;\n    if (0 < iVar2) {\n        dVar5 = *0x4f0b90 + *(in_RAX + 0xe0) / (iVar2 * arg1);\n    }\n    if (*(in_RAX + 0x88) <= *(in_RAX + 0x78)) {\n        return;\n    }\n    if (iVar2 < 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        dVar4 = *(in_RAX + 0xf8) / (iVar2 * arg1);\n    }\n    uVar3 = *(in_RAX + 0x88) - *(in_RAX + 0x78);\n    if (uVar3 < 0) {\n        dVar6 = uVar3 >> 1 | uVar3 & 1;\n        dVar6 = dVar6 + dVar6;\n    }\n    else {\n        dVar6 = uVar3;\n    }\n    cVar1 = fcn.0041cf60(*(in_RAX + 0x20), \n                         ((dVar4 + dVar5) * dVar6) /\n                         ((*0x4f0bb0 - dVar5) * (*(in_RAX + 0xc0) + *(in_RAX + 200) + *(in_RAX + 0xd0))), *0x4f0bb0, \n                         in_RAX + 0x28);\n    *(in_RAX + 0x20) = extraout_XMM0_Qa;\n    if (cVar1 == '\\0') {\n        *(in_RAX + 0x20) = 0;\n    }\n    if (0 < *0x5a1ff0) {\n        fcn.004330a0();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004337a0(dVar5 * *0x4f0bf0);\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        fcn.004330a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        arg2 = *(in_RAX + 0x88);\n        noname_0 = *(in_RAX + 0x80);\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004333a0(noname_0, arg2);\n        fcn.004339a0();\n        fcn.00433120();\n        if (cVar1 == '\\0') {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        fcn.004330a0();\n        fcn.00433300();\n        fcn.00433120();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.00409cc0();\n        }\n    }\n    return;\n}\n",
        "token_count": 1025
    },
    "0041c400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c400(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x108) < 1) {\n                return;\n            }\n            if (*0x5a1b88 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x5a1b88;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x54dd18 <= iVar6) break;\n                if (*(*(*0x54dd10 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41c510;\n                    cVar3 = fcn.0043ec00();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41c549;\n            in_RAX = fcn.004599e0(*0x54dd18);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41c554;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 775
    },
    "0041c560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041c663)\n\nulong fcn.0041c560(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1b7c != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41c7ea;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41c7ff;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == 0) {\n        *(*0x20 + -0x38) = 0x41c59b;\n        fcn.0045b2e0();\n        arg1 = *(*0x20 + -0x30);\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\n    *(*0x20 + -0x20) = arg1;\n    if (10000000 < arg1 - *0x5a2080) {\n        *(*0x20 + -0x38) = 0x41c5e7;\n        fcn.00417920();\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n        arg1 = *(*0x20 + -0x20);\n    }\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1240) == 0)) ||\n       ((*(*(unaff_RBX + 0x1240) + 0x10) == 0 && (*(*(unaff_RBX + 0x1248) + 0x10) == 0)))) {\n        if (*0x54e100 == 0) {\n            if (*0x54e188 < *0x54e18c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x5a1c78 == 0) {\n        piVar5 = NULL;\n    }\n    else {\n        piVar5 = (*0x5a1c78 >> 0x13) << 3;\n        *0x5a1c78 = *piVar5;\n        LOCK();\n    }\n    if (piVar5 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0x108);\n        if (uVar2 < 1) goto code_r0x0041c6f1;\n        *(*0x20 + -0x18) = uVar2;\n        LOCK();\n        puVar1 = in_RAX + 0x108;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    uVar2 = *(*0x20 + -0x18);\ncode_r0x0041c6f1:\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0x128) == 0.0) {\n            *(*0x20 + -0x38) = 0x41c775;\n            fcn.00409840();\n            return 0;\n        }\n        iVar7 = arg1 - *(in_RAX + 0x100);\n        if ((0 < iVar7) && (*(in_RAX + 0x128) < *(unaff_RBX + 0x1220) / iVar7)) {\n            *(*0x20 + -0x38) = 0x41c74a;\n            fcn.00409840(in_RAX, piVar5, arg1, 0x5a1c78);\n            return 0;\n        }\n        *(unaff_RBX + 0x1230) = 2;\n    }\n    else {\n        *(unaff_RBX + 0x1230) = 1;\n    }\n    *(*0x20 + -0x10) = piVar5[2];\n    *(*0x20 + -0x38) = 0x41c7ab;\n    fcn.00435c80(1);\n    if (*0x553d30 != '\\0') {\n        *(*0x20 + -0x38) = 0x41c7c5;\n        fcn.0044e200();\n    }\n    return *(*0x20 + -0x10);\n}\n",
        "token_count": 1366
    },
    "0041c820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c820(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(in_RAX + 0xb8) = unaff_RBX;\n    *(in_RAX + 0x88) = unaff_RBX;\n    *(in_RAX + 0x90) = *(in_RAX + 0xc0);\n    *(in_RAX + 0x98) = *(in_RAX + 0xc0);\n    *(in_RAX + 0xa0) = *(in_RAX + 200);\n    *(in_RAX + 0x78) = 0xffffffffffffffff;\n    if (*0x553d30 != '\\0') {\n        uStack16 = *0x5a2508;\n        fcn.0044cd00(&uStack16);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0041c980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c980(int64_t arg1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        *0x5a2508 = *0x5a2508 + unaff_RBX;\n        if (*0x553d30 != '\\0') {\n            fcn.0044e4a0();\n        }\n    }\n    if (*0x5a1b7c == 0) {\n        if (arg1 != 0) {\n            LOCK();\n            *0x5a2510 = *0x5a2510 + arg1;\n        }\n    }\n    else {\n        fcn.0041bde0();\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0041d720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d720(ulong noname_0, int64_t arg2, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t noname_0_00;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 8) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 8) = unaff_R14;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41d769;\n                    fcn.00459640(unaff_R14, arg2, arg3, in_R9);\n                }\n                *(*0x20 + -0x20) = 0x41d775;\n                iVar1 = fcn.0040bba0();\n                if (*0x5a1da0 == 0) {\n                    noname_0_00 = *(*0x20 + 8);\n                    *(noname_0_00 + 0x18) = iVar1;\n                }\n                else {\n                    arg2 = *(*0x20 + 8);\n                    *(*0x20 + -0x20) = 0x41d79d;\n                    iVar1 = fcn.00459540(arg2 + 0x18, arg2, arg3, in_R9);\n                    noname_0_00 = arg2;\n                }\n                *(iVar1 + 0x20) = 0x479680;\n                if (*0x5a1da0 == 0) {\n                    *(iVar1 + 0x28) = noname_0_00;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41d7c9;\n                    fcn.00459640(noname_0_00, arg2, arg3, in_R9);\n                }\n                if (*0x5a1da0 == 0) {\n                    *(*(noname_0_00 + 0x18) + 0x18) = 0x4dc2a8;\n                    iVar1 = 0x4dc2a8;\n                }\n                else {\n                    arg2 = 0x4dc2a8;\n                    *(*0x20 + -0x20) = 0x41d7fe;\n                    fcn.00459660(noname_0_00, 0x4dc2a8, arg3, in_R9);\n                    iVar1 = noname_0_00;\n                }\n                *(noname_0_00 + 0x38) = 0x3fd599999999999a;\n                *(noname_0_00 + 0x40) = 0x41486a0000000000;\n                *(noname_0_00 + 0x48) = 0x41cdcd6500000000;\n                *(noname_0_00 + 0x50) = 0x3f50624dd2f1a9fc;\n                *(noname_0_00 + 0x58) = 0x408f400000000000;\n                *(noname_0_00 + 0x60) = in_XMM15;\n                *(noname_0_00 + 0x30) = *0x4f0b80;\n                if (*(noname_0_00 + 0x88) == 0) {\n                    if (*0x5a1da0 == 0) {\n                        *(noname_0_00 + 0x88) = 0x4dc2b0;\n                    }\n                    else {\n                        arg2 = 0x4dc2b0;\n                        *(*0x20 + -0x20) = 0x41d895;\n                        fcn.00459660(noname_0_00, 0x4dc2b0, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x90) == 0) {\n                    if (*0x5a1da0 == 0) {\n                        *(noname_0_00 + 0x90) = 0x4dc2b8;\n                    }\n                    else {\n                        arg2 = 0x4dc2b8;\n                        *(*0x20 + -0x20) = 0x41d8d4;\n                        fcn.00459660(noname_0_00, 0x4dc2b8, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x98) == 0) {\n                    if (*0x5a1da0 == 0) {\n                        *(noname_0_00 + 0x98) = 0x4dc2c0;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41d90e;\n                        fcn.00459540(iVar1, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41d929;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x41d934;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1372
    },
    "0041d9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041d9e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    if (*(in_RAX + 0x10) != '\\0') {\n        *(in_RAX + 0x20) = 0;\n        *(in_RAX + 0x10) = 0;\n        *(*(in_RAX + 8) + 0xa0) = 0;\n        fcn.00439d00();\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 178
    },
    "0041e180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041e180(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x41e1a6;\n            fcn.004330a0();\n            unaff_RBX = *0x5a25c0;\n            if (*0x5a25b0 + *0x5a25c0 != 0) {\n                *(*0x20 + -0x18) = *0x5a25b8;\n                *(*0x20 + -0x10) = (*0x5a25b0 * 100) / (*0x5a25b0 + *0x5a25c0);\n                *(*0x20 + -0x30) = 0x41e1e9;\n                fcn.004330a0();\n                *(*0x20 + -0x30) = 0x41e1fa;\n                fcn.004339a0();\n                *(*0x20 + -0x30) = 0x41e208;\n                fcn.004336a0();\n                *(*0x20 + -0x30) = 0x41e219;\n                fcn.004339a0();\n                *(*0x20 + -0x30) = 0x41e227;\n                fcn.004336a0();\n                *(*0x20 + -0x30) = 0x41e238;\n                fcn.004339a0();\n                *(*0x20 + -0x30) = 0x41e245;\n                fcn.004336a0();\n                *(*0x20 + -0x30) = 0x41e256;\n                fcn.004339a0();\n                *(*0x20 + -0x30) = 0x41e25b;\n                fcn.00433120();\n                if (*(*0x20 + 0x10) == '\\0') {\n                    if (*0x54df38 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41e272;\n                        fcn.004330a0();\n                        *(*0x20 + -0x30) = 0x41e285;\n                        fcn.004339a0();\n                        *(*0x20 + -0x30) = 0x41e28a;\n                        fcn.00433120();\n                        *0x54df38 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41e298;\n                    fcn.004330a0();\n                    *(*0x20 + -0x30) = 0x41e2a9;\n                    fcn.004339a0();\n                    *(*0x20 + -0x30) = 0x41e2ae;\n                    fcn.00433120();\n                }\n                *(*0x20 + -0x30) = 0x41e2b3;\n                fcn.004330a0();\n                *(*0x20 + -0x30) = 0x41e2b8;\n                fcn.00433300();\n                *(*0x20 + -0x30) = 0x41e2bd;\n                fcn.00433120();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41e2e5;\n                    fcn.00409cc0();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41e2f4;\n            in_RAX = fcn.0042fe00();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_RBX;\n        *(puVar2 + -8) = 0x41e305;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = puVar2[0x10];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1111
    },
    "0041e320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e41d)\n\nint64_t fcn.0041e320(uint64_t arg1)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t *piVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = *0x5a1cd8;\n            uVar1 = *(in_RAX + 0x10108);\n            *(*0x20 + -0x70) = 0x41e368;\n            fcn.00409aa0(*0x5a1cd8, uVar1);\n            uVar5 = *(*0x20 + -0x10) >> 0xd;\n            if (uVar5 == 0) {\n                uVar5 = 1;\n            }\n            unaff_RDI = *(*0x20 + 0x20) >> 0xd;\n            if ((*(*0x20 + 0x20) & 0x1fff) != 0) {\n                unaff_RDI = unaff_RDI + 1;\n            }\n            iVar3 = *(*0x20 + 8);\n            unaff_RBX = *(iVar3 + 0x68);\n            uVar2 = *(*0x20 + 0x10);\n            if (uVar2 < unaff_RBX) {\n                uVar8 = *(*(iVar3 + 0x60) + uVar2 * 8);\n                if (uVar8 < 0) {\n                    uVar8 = 0x200000;\n                }\n                else {\n                    uVar8 = uVar8 >> 0x15 & 0x1fffff;\n                }\n                if (uVar8 < uVar5) {\n                    uVar5 = *(iVar3 + 0x100d0);\n                    unaff_RBX = *(iVar3 + 0x100c8);\n                    if (uVar2 >> 3 < uVar5) {\n                        puVar6 = unaff_RBX + (uVar2 >> 3);\n                        LOCK();\n                        *puVar6 = *puVar6 & ~(1 << (uVar2 & 7));\n                        *(*0x20 + -0x70) = 0x41e46c;\n                        fcn.00409cc0();\n                        return 0;\n                    }\ncode_r0x0041e5e5:\n                    *(*0x20 + -0x70) = 0x41e5ea;\n                    fcn.00459a00(uVar5);\n                }\n                else if (uVar2 >> 0xd < 0x2000) {\n                    *(*0x20 + -0x18) = uVar2 >> 0xd;\n                    *(*0x20 + -0x20) = (uVar2 & 0x1fff) << 7;\n                    *(*0x20 + -0x70) = 0x41e418;\n                    iVar3 = fcn.0041e800(uVar5);\n                    *(*0x20 + -0x40) = iVar3;\n                    *(*0x20 + -0x48) = 0x1ff;\n                    unaff_RDI = 0xffff800000000000;\n                    *(*0x20 + -0x38) = *(*0x20 + 0x10) * 0x400000 + iVar3 * 0x2000 + -0x800000000000;\n                    uVar5 = 0x1ff;\n                    *(*0x20 + -0x70) = 0x41e4b4;\n                    iVar3 = fcn.00425340(0x1ff);\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x70) = 0x41e4cf;\n                        fcn.00409cc0();\n                        if (*(*(*0x20 + 8) + 0x10120) == '\\0') {\n                            *(*0x20 + -0x70) = 0x41e4f0;\n                            fcn.004136e0();\n                            *(*0x20 + -0x28) = *(*0x20 + -0x48) << 0xd;\n                            *(*0x20 + -0x70) = 0x41e50a;\n                            fcn.0042ad40();\n                            *(*0x20 + -0x30) = -*(*0x20 + -0x28);\n                            *(*0x20 + -0x70) = 0x41e525;\n                            fcn.0042ad40();\n                            *(*0x20 + -0x70) = 0x41e531;\n                            piVar4 = fcn.0042ae00();\n                            LOCK();\n                            *piVar4 = *piVar4 + *(*0x20 + -0x30);\n                            LOCK();\n                            piVar4 = piVar4 + 1;\n                            iVar3 = *piVar4;\n                            *piVar4 = *piVar4 + *(*0x20 + -0x28);\n                            *(*0x20 + -0x70) = 0x41e552;\n                            fcn.0042aee0(iVar3);\n                        }\n                        *(*0x20 + -0x70) = 0x41e565;\n                        fcn.00409aa0();\n                        *(*0x20 + -0x70) = 0x41e57e;\n                        fcn.004267c0(*(*0x20 + -0x48));\n                        *(*0x20 + -0x70) = 0x41e5ab;\n                        fcn.00427e40(*(*0x20 + -0x48));\n                        *(*0x20 + -0x70) = 0x41e5bd;\n                        fcn.00409cc0();\n                        return *(*0x20 + -0x48) << 0xd;\n                    }\n                    unaff_RBX = 0xf;\n                    *(*0x20 + -0x70) = 0x41e5e5;\n                    fcn.004317e0();\n                    goto code_r0x0041e5e5;\n                }\n                *(*0x20 + -0x70) = 0x41e5f4;\n                fcn.00459a00(0x2000);\n            }\n            *(*0x20 + -0x70) = 0x41e5fc;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00459a00(unaff_RBX);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + -8) = 0x41e616;\n        fcn.0045ba20();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1809
    },
    "0041e640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e640(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041e786;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041e786:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041e786;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041e786;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041e786;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041e786;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41e7c5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41e7d5;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 861
    },
    "0041efe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041efe0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0041efe0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x41f0d9;\n                    fcn.00421920(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0041f09b;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x41f06f;\n                    fcn.00421920(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0041f09b;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041f106;\ncode_r0x0041f09b:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x41f105;\n    in_RAX = fcn.004599e0(0xfc);\ncode_r0x0041f106:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x41f110;\n    fcn.00457320();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0041efe0;\n}\n",
        "token_count": 914
    },
    "0041f3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f516)\n// WARNING: Removing unreachable block (ram,0x0041f4e3)\n\nint64_t fcn.0041f3e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10138);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x54dea0;\ncode_r0x0041f420:\n            if (0x10f < uVar3) {\n                if (*0x54dea0 != 0xffffffff) {\n                    LOCK();\n                    *0x54dea0 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x0041f565;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x0041f559;\n                *(*0x20 + -0x28) = 0x41f48a;\n                iVar1 = fcn.0042a940();\ncode_r0x0041f4c0:\n                if (iVar1 != 0) {\n                    if (*0x54dea0 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x54dea0 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x0041f420;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x41f4b7;\n                iVar1 = fcn.0042a940();\n                goto code_r0x0041f4c0;\n            }\n            *(*0x20 + -0x28) = 0x41f559;\n            fcn.004599e0(2);\ncode_r0x0041f559:\n            *(*0x20 + -0x28) = 0x41f565;\n            fcn.004599e0(2);\ncode_r0x0041f565:\n            *(*0x20 + -0x28) = 0x41f572;\n            in_RAX = fcn.004599e0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41f57d;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 811
    },
    "0041f5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0041f5a0(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x573f58 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x5a1ff0) {\n                                *(*0x20 + -0x28) = *0x573f80;\n                                *(*0x20 + -0x10) = *0x5a2508;\n                                *(*0x20 + -0x18) = *0x573f90;\n                                *(*0x20 + -0x20) = *0x573f98;\n                                *(*0x20 + -0x40) = 0x41f650;\n                                arg2 = *0x573f90;\n                                fcn.004330a0();\n                                *(*0x20 + -0x40) = 0x41f665;\n                                fcn.004339a0();\n                                *(*0x20 + -0x40) = 0x41f673;\n                                fcn.004336a0();\n                                *(*0x20 + -0x40) = 0x41f685;\n                                fcn.004339a0();\n                                noname_0 = *(*0x20 + -0x18);\n                                *(*0x20 + -0x40) = 0x41f69b;\n                                fcn.004336a0();\n                                *(*0x20 + -0x40) = 0x41f6ac;\n                                fcn.004339a0();\n                                *(*0x20 + -0x40) = 0x41f6b6;\n                                fcn.004336a0();\n                                *(*0x20 + -0x40) = 0x41f6c7;\n                                fcn.004339a0();\n                                *(*0x20 + -0x40) = 0x41f6d2;\n                                fcn.004333a0(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x41f6e5;\n                                fcn.004339a0();\n                                *(*0x20 + -0x40) = 0x41f6ea;\n                                uVar2 = fcn.00433120();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x41f70f;\n                fcn.004317e0();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x41f725;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x41f738;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 992
    },
    "0041f760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041f760(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x41f785;\n                iVar2 = fcn.0041fae0();\n                if (iVar2 == -1) break;\n                *0x54de98 = *0x54de98 + 1;\n            }\n            if ((*0x54de9c & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x573f58;\n                iVar2 = 0;\n                uVar1 = *0x573f58;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x41f834;\n                        fcn.0041d9e0();\n                        *(*0x20 + -0x40) = 0x41f839;\n                        fcn.00424820();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x41f7da;\n                    fcn.0042aa80(0x574258);\n                    *(*0x20 + -0x40) = 0x41f7fc;\n                    fcn.0042aa80(*(*0x20 + -0x10) + 0x5742b0);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x41f84d;\n                fcn.004599e0(2);\n            }\n            *(*0x20 + -0x40) = 0x41f85e;\n            fcn.004317e0();\n        }\n        *(puVar4 + -8) = 0x41f865;\n        fcn.00457320();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 669
    },
    "0041f880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041f880(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = unaff_R14;\n    if (*0x5a1da0 != 0) {\n        fcn.00459640(unaff_R14, arg2, arg3, in_R9);\n        iVar2 = *0x54de88;\n    }\n    *0x54de88 = iVar2;\n    fcn.00409aa0();\n    *0x54de90 = 1;\n    fcn.00404220();\n    fcn.00434240();\n    do {\n        while (iVar2 = fcn.0041fae0(),  iVar2 != -1) {\n            *0x54de94 = *0x54de94 + 1;\n            fcn.00457160();\n        }\n        while (cVar1 = fcn.00421c40(),  cVar1 != '\\0') {\n            fcn.00457160();\n        }\n        fcn.00409aa0();\n        if (*0x54de9c == -0x80000000) {\n            *0x54de90 = 1;\n            fcn.00434240();\n        }\n        else {\n            fcn.00409cc0();\n        }\n    } while( true );\n}\n",
        "token_count": 363
    },
    "0041f9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0041f9e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x41fa56;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41fa66;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 417
    },
    "0041fae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041fb28)\n// WARNING: Removing unreachable block (ram,0x0041fc19)\n\nulong fcn.0041fae0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *0x54de9c & 0x80000000;\n            if (uVar5 == 0) {\n                *0x54de9c = *0x54de9c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x573f58;\n            *(*0x20 + -0x24) = uVar5 == 0;\n            if (uVar5 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x0041fb74:\n            do {\n                *(*0x20 + -0x50) = 0x41fb85;\n                iVar6 = fcn.0041f3e0();\n                if (iVar6 == 0) {\n                    uVar5 = *0x54de9c & 0x80000000;\n                    if (uVar5 == 0) {\n                        *0x54de9c = *0x54de9c | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar5 == 0;\n                    iVar6 = -1;\ncode_r0x0041fc30:\n                    *(*0x20 + -0x32) = bVar9;\n                    *(*0x20 + -0x18) = iVar6;\n                    *(*0x20 + -0x50) = 0x41fc4e;\n                    fcn.0041f5a0(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x32) != '\\0') {\n                        if (0 < *0x5a2008) {\n                            *(*0x20 + -0x48) = 0x4dc538;\n                            *(*0x20 + -0x50) = 0x41fc72;\n                            fcn.004571e0();\n                        }\n                        *0x54dee0 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar6 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x41fbb6;\n                    iVar7 = fcn.0041f9e0();\n                    *(*0x20 + -0x20) = iVar7;\n                    if (iVar6 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar7 + 0x20);\n                        *(*0x20 + -0x50) = 0x41fbd4;\n                        cVar4 = fcn.0041fec0();\n                        if (cVar4 == '\\0') {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x573fa8 = *0x573fa8 + iVar6;\n                        }\n                        bVar9 = false;\n                        goto code_r0x0041fc30;\n                    }\n                    goto code_r0x0041fb74;\n                }\n                iVar2 = *(iVar6 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x31) = *(iVar6 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x41fcc5;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x41fcd6;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x41fce5;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x41fcf6;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x41fcff;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x41fd10;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x41fd19;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x41fd1e;\n            fcn.00433300();\n            *(*0x20 + -0x50) = 0x41fd25;\n            fcn.00433120();\n            *(*0x20 + -0x50) = 0x41fd36;\n            fcn.004317e0();\n        }\n        *(puVar8 + -8) = 0x41fd3c;\n        fcn.00457320();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1463
    },
    "0041fd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041fd9c)\n\nvoid fcn.0041fd60(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x54de9c & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x54de9c = *0x54de9c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x573f58;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x41fdfd;\n                    uVar2 = fcn.0041f9e0();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x41fe2e;\n                        fcn.0041fec0();\n                        *(*0x20 + -0x38) = 0x41fe45;\n                        fcn.0041f5a0(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x41fe1b;\n                    fcn.0041f5a0();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x4dc540;\n                    *(*0x20 + -0x38) = 0x41fe5f;\n                    fcn.004571e0();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x41fea8;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41feb3;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 776
    },
    "00420dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00420dc0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x573f98 == 0.0) {\n        return;\n    }\n    if (*0x553d30 != '\\0') {\n        fcn.0044dd20();\n    }\n    do {\n        iVar1 = *0x573f88;\n        uVar3 = (*0x5a2508 - *0x573f90) + in_RAX;\n        if (uVar3 < 0) {\n            dVar5 = uVar3 >> 1 | uVar3 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar3;\n        }\n        dVar5 = *0x573f98 * dVar5;\n        iVar4 = dVar5;\n        do {\n            if (iVar4 - unaff_RBX <= *0x573f80 - iVar1) {\ncode_r0x00420ed9:\n                if (*0x553d30 != '\\0') {\n                    fcn.0044de20();\n                }\n                return;\n            }\n            iVar2 = fcn.0041fae0(dVar5, 0);\n            if (iVar2 == -1) {\n                *0x573f98 = 0.0;\n                goto code_r0x00420ed9;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x573f88 == iVar1);\n    } while( true );\n}\n",
        "token_count": 447
    },
    "00421020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421020(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x4210b5;\n                fcn.00420fc0();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x421079;\n                    fcn.00421980();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x421087;\n                    iVar2 = fcn.004216a0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x5a1b84 == 1)) {\n                    *(*0x20 + -0x28) = 0x4210f3;\n                    fcn.0041c400();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x421107;\n            in_RAX = fcn.004599e0(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x421117;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 786
    },
    "00421140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00421140(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x421186;\n                fcn.00420fc0();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x5a1b84 == 1)) {\n                        *(*0x20 + -0x58) = 0x421285;\n                        fcn.0041c400();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x421297;\n                    fcn.00421980();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x4212a5;\n                    iVar3 = fcn.004216a0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x004212e6;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != iVar4 + (uVar2 << 3 & iVar3 >> 0x3f) + 0x18) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x421238;\n                    fcn.0045a340(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x4212e6;\n            fcn.00459aa0(arg1);\ncode_r0x004212e6:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x4212f3;\n            in_RAX = fcn.00459aa0(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42130d;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1370
    },
    "00421340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00421340(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x42136a;\n                fcn.00420fc0();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x42139b;\n                    iVar3 = fcn.004219e0();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x4213b4;\n                    fcn.00421920();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x421405;\n            in_RAX = fcn.004599e0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421410;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 628
    },
    "00421420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00421420(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00421920();\n        }\n        else {\n            fcn.00421980();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00421920();\n        }\n        else {\n            fcn.00421980();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x54e180 = *0x54e180 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x5a2540;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x5a2540 = *0x5a2540 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 367
    },
    "00421520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421520(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.00421a80();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.00421980();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.004216a0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x5a1b84 == 1) {\n            fcn.0041c400();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "004215e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004215e0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x421616;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x421625;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 261
    },
    "00421640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421640(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x421676;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x421685;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 260
    },
    "004216a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004216a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54e108 == 0) {\n        piVar1 = NULL;\n        goto code_r0x004216c9;\n    }\n    while( true ) {\n        if (*0x54e108 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x54e108 >> 0x13) << 3;\n            *0x54e108 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00421640();\n            piVar1 = piStack32;\n        }\ncode_r0x004216c9:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x54e158 != 0) {\n            fcn.00409aa0();\n            iStack72 = *0x54e158;\n            if (*0x54e158 != 0) {\n                fcn.00423de0();\n                fcn.00423f60();\n            }\n            fcn.00409cc0();\n        }\n        if (iStack72 != 0) goto code_r0x004217be;\n        auStack24 = CONCAT88(&iStack72, 0x4218c0);\n        fcn.004571e0();\n        if (iStack72 != 0) break;\n        fcn.004317e0();\n    }\n    fcn.00409aa0();\n    fcn.00423f60();\n    fcn.00409cc0();\ncode_r0x004217be:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.004099a0();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00421920();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 655
    },
    "00421b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421b40(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x421b65;\n            fcn.00409aa0();\n            if (*0x54e100 == 0) {\n                *0x54e108 = 0;\n                if (*0x54e168 != NULL) {\n                    for (; *0x54e168 != NULL; *0x54e168 = **0x54e168) {\n                        (*0x54e168)[2] = 0x54e158;\n                    }\n                    if (*0x54e158 == 0) {\n                        *0x54e158 = *0x54e168;\n                        *0x54e160 = *0x54e170;\n                        *0x54e168 = in_XMM15;\n                    }\n                    else {\n                        **0x54e170 = *0x54e158;\n                        *(*0x54e158 + 8) = *0x54e170;\n                        *0x54e158 = *0x54e168;\n                        *0x54e168 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x421b98;\n                fcn.00409cc0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x421c2b;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x421c31;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00421c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00421c40(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    if ((*0x5a1b84 == 0) && (*0x54e158 != 0)) {\n        fcn.004571e0();\n        uVar1 = *0x54e158;\n        fcn.00409cc0();\n        return uVar1 & 0xffffffffffffff00 | uVar1 != 0;\n    }\n    fcn.00409cc0();\n    return 0;\n}\n",
        "token_count": 179
    },
    "00421fa1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00421fa1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x573fb0);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00422041": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00422041(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x573fb0);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "00422240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00422240(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10180)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x553d30 != '\\0') {\n        fcn.0044dd20();\n    }\n    arg1 = *(in_RAX + 0x103f8);\n    bVar6 = false;\ncode_r0x004222ed:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x004223f8:\n            if (bVar6) {\n                fcn.00409cc0();\n            }\n            if (*0x553d30 != '\\0') {\n                fcn.0044de20();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10188);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10188;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x004222ed;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10180;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10180) = 0x8000000000000000;\n            goto code_r0x004223f8;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.00409aa0();\n        }\n        uVar7 = fcn.00422480(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10188) = *(in_RAX + 0x10188) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 849
    },
    "00422480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004224b2)\n\nulong fcn.00422480(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    uint8_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        uVar9 = unaff_RSI;\n        uVar12 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x54de9c & 0x80000000;\n            if (uVar6 == 0) {\n                *0x54de9c = *0x54de9c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x573f58;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x422630;\n                    fcn.0041f5a0(*(*0x20 + -0x84));\n                    if (*0x553d30 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x422645;\n                        fcn.00409cc0();\n                        *(*0x20 + -0xa8) = 0x42265e;\n                        fcn.0044dd80(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x42266a;\n                        fcn.00409aa0();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar9 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar12 = arg3;\n                if (arg1 <= uVar9) goto code_r0x00422839;\n                uVar10 = *(unaff_RBX + uVar9 * 8);\n                uVar9 = uVar10 >> 0x14;\n                if (0x3f < uVar9) goto code_r0x0042282c;\n                uVar9 = *(*(in_RAX + 0x10190 + uVar9 * 8) + (uVar10 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar10 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar12 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar9 + uVar12 + 0x21000;\n                iVar7 = uVar9 + uVar12 + 0x21040;\n                uVar12 = arg3 >> 3;\n                if (-iVar1 < uVar12 || -uVar12 == iVar1) {\n                    uVar12 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar12;\n                *(*0x20 + -0x58) = uVar9;\n                *(*0x20 + -0x38) = uVar10;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar7;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar13 = 0; uVar13 < uVar12; uVar13 = uVar13 + 1) {\n                    *(*0x20 + -0x10) = unaff_RDI + uVar13;\n                    if (uVar12 <= uVar13) {\ncode_r0x00422814:\n                        *(*0x20 + -0xa8) = 0x42281f;\n                        fcn.004599e0(uVar12);\n                        goto code_r0x0042281f;\n                    }\n                    uVar11 = *(unaff_RDI + uVar13) & ~*(uVar13 + iVar7);\n                    if (uVar11 != 0) {\n                        *(*0x20 + -0x60) = uVar13;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar11) != 0) {\n                                uVar10 = uVar10 + uVar13 * 8 + uVar5;\n                                if (0x1ff < uVar10) {\n                                    *(*0x20 + -0xa8) = 0x422814;\n                                    fcn.00459a00(0x200);\n                                    goto code_r0x00422814;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar11;\n                                uVar2 = *(uVar9 + 0x20000 + uVar10 * 8);\n                                *(*0x20 + -0xa8) = 0x42272e;\n                                iVar4 = fcn.0041f9e0();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    iVar7 = *(*0x20 + -0x20);\n                                    uVar11 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x42276e;\n                                    fcn.00409cc0();\n                                    *(*0x20 + -0xa8) = 0x42277a;\n                                    uVar3 = fcn.0041fec0();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x42278a;\n                                    fcn.00409aa0();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    iVar7 = *(*0x20 + -0x20);\n                                    uVar11 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x60) + iVar7);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                uVar9 = *(*0x20 + -0x58);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar12 = *(*0x20 + -0x68);\n                                uVar10 = *(*0x20 + -0x38);\n                                uVar13 = *(*0x20 + -0x60);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar12 * 8;\n                arg3 = arg3 + uVar12 * -8;\n            }\ncode_r0x0042281f:\n            *(*0x20 + -0xa8) = 0x42282c;\n            fcn.00459ac0(0x40);\ncode_r0x0042282c:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x422839;\n            fcn.00459a00(0x40);\ncode_r0x00422839:\n            *(*0x20 + -0xa8) = 0x422845;\n            in_RAX = fcn.00459a00(arg1);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = uVar9;\n        *(puVar8 + 0x30) = uVar12;\n        *(puVar8 + -8) = 0x422869;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2401
    },
    "00422ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00422ca0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ba20();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00422cf7;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00422cf7:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.004599e0(0x80);\n            }\n            uVar3 = fcn.00414360(iVar2 + 0x16a38);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00414360();\n    return uVar3;\n}\n",
        "token_count": 461
    },
    "00423f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00423f60(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x423fdd;\n            fcn.004330a0();\n            *(*0x20 + -0x38) = 0x423fee;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423ff8;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x423ffd;\n            fcn.004332c0();\n            *(*0x20 + -0x38) = 0x424007;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x42400c;\n            fcn.004332c0();\n            *(*0x20 + -0x38) = 0x424016;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x42401b;\n            fcn.004332c0();\n            *(*0x20 + -0x38) = 0x424025;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x42402a;\n            fcn.00433300();\n            *(*0x20 + -0x38) = 0x42402f;\n            fcn.00433120();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x424045;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x424055;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 801
    },
    "00424080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00424080(void)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t **ppiVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x4240a7;\n            iVar6 = fcn.00422040();\n            if (iVar6 != 0) {\n                *(*0x20 + -0x28) = iVar6;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x4240ce;\n                fcn.0041fd60();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x424105;\n                fcn.00409aa0();\n                iVar6 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x29);\n                uVar7 = *(*0x20 + -0x20);\n                ppiVar5 = iVar6 + 0x80;\n                while (ppiVar9 = ppiVar5,  ppiVar5 = *ppiVar9,  ppiVar5 != NULL) {\n                    uVar10 = *(ppiVar5 + 1);\n                    if ((uVar10 == uVar7) && (*(ppiVar5 + 10) == uVar3)) {\n                        *(*0x20 + -0x48) = 0x424153;\n                        fcn.00409cc0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar7 < uVar10) ||\n                       ((uVar10 == uVar7 && (uVar3 <= *(ppiVar5 + 10) && *(ppiVar5 + 10) != uVar3)))) break;\n                }\n                ppiVar5 = *(*0x20 + 0x10);\n                *(ppiVar5 + 1) = uVar7;\n                *ppiVar5 = *ppiVar9;\n                *ppiVar9 = ppiVar5;\n                uVar7 = *(iVar6 + 0x18);\n                uVar10 = uVar7 + 0x800000000000;\n                uVar11 = uVar10 >> 0x2a;\n                if (uVar11 < 0x40) {\n                    uVar7 = uVar7 >> 0xd;\n                    uVar8 = (uVar7 & 0x1ff) >> 3;\n                    if (uVar8 < 0x40) {\n                        puVar2 = *(*(uVar11 * 8 + 0x573fb0) + (uVar10 >> 0x16 & 0xfffff) * 8) + uVar8 + 0x21080;\n                        LOCK();\n                        *puVar2 = *puVar2 | 1 << (uVar7 & 7);\n                        *(*0x20 + -0x48) = 0x424225;\n                        fcn.00409cc0();\n                        iVar4 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar4 + -1;\n                        if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42426b;\n                    fcn.00459a00(0x40);\n                }\n                *(*0x20 + -0x48) = 0x424278;\n                fcn.00459a00(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x424289;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x424299;\n        fcn.00457320();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1409
    },
    "004249a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004249a0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53b700 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 0x10110) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x4249ef;\n                    in_RAX = fcn.00459640(arg1, *0x53b700, arg3, in_R9);\n                }\n                *(*0x20 + 8) = in_RAX;\n                arg2 = in_RAX + 0x10090;\n                *(*0x20 + -0x28) = 0x424a06;\n                fcn.00429f60();\n                *(*0x20 + -0x28) = 0x424a10;\n                fcn.00426c40();\n                arg1_00 = *0x53a370;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x10078) = *0x53a370;\n                if (*0x5a1da0 == 0) {\n                    *(iVar1 + 0x10108) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x424a4b;\n                    fcn.00459540(arg1_00, arg2, arg3, in_R9);\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = *0x53b700;\n            *(*0x20 + -0x28) = 0x424a5f;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x424a70;\n            fcn.004339a0();\n            arg1 = *(*0x20 + -0x10);\n            *(*0x20 + -0x28) = 0x424a8c;\n            fcn.004337a0(arg1, 1 << (arg1 & 0x3f));\n            *(*0x20 + -0x28) = 0x424a91;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x424a96;\n            fcn.00433120();\n            *(*0x20 + -0x28) = 0x424a9b;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x424aac;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x424ab6;\n            fcn.004337a0();\n            *(*0x20 + -0x28) = 0x424abb;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x424ac5;\n            fcn.00433120();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x28) = 0x424ad6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x424aeb;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1023
    },
    "004256e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004256e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10120) != '\\0') goto code_r0x00425752;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x573fb0);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00425752:\n                *(*0x20 + -0x20) = 0x42575d;\n                iVar1 = fcn.0042a120();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x53a370;\n            }\n            *(*0x20 + -0x20) = 0x42578c;\n            in_RAX = fcn.00459a00(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42579c;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 513
    },
    "00426500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00426500(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00426619;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00426619:\n                    *(*0x20 + -0x40) = 0x42661e;\n                    iVar2 = fcn.004257c0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x53a370;\n                        }\n                        return 0;\n                    }\ncode_r0x00426658:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x426674;\n                    fcn.00425340(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x4265e5;\n                    iVar2 = fcn.00428480(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00426658;\n                    }\n                    *(*0x20 + -0x40) = 0x4266c7;\n                    fcn.004330a0();\n                    *(*0x20 + -0x40) = 0x4266d8;\n                    fcn.004339a0();\n                    *(*0x20 + -0x40) = 0x4266e5;\n                    fcn.004336a0();\n                    *(*0x20 + -0x40) = 0x4266f6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x40) = 0x426705;\n                    fcn.004336a0();\n                    *(*0x20 + -0x40) = 0x42670a;\n                    fcn.00433300();\n                    *(*0x20 + -0x40) = 0x42670f;\n                    fcn.00433120();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x426725;\n                    fcn.004330a0();\n                    *(*0x20 + -0x40) = 0x426736;\n                    fcn.004339a0();\n                    *(*0x20 + -0x40) = 0x426749;\n                    fcn.004336a0();\n                    *(*0x20 + -0x40) = 0x42675a;\n                    fcn.004339a0();\n                    *(*0x20 + -0x40) = 0x426765;\n                    fcn.00433800();\n                    *(*0x20 + -0x40) = 0x42676a;\n                    fcn.00433300();\n                    *(*0x20 + -0x40) = 0x42676f;\n                    fcn.00433120();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x426785;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x40) = 0x426792;\n                fcn.00459a00(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x42679d;\n            in_RAX = fcn.00459a00(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4267ad;\n        fcn.0045ba20();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1550
    },
    "004267c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004267c0(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char unaff_DIL;\n    uint64_t uVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = unaff_RBX + 0x800000000000;\n            if (uVar5 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            arg1_00 = arg1 * 0x2000 + unaff_RBX;\n            iVar7 = arg1 * 0x2000 + unaff_RBX + -1;\n            if (unaff_DIL == '\\0') {\n                *(*0x20 + -0x10) = uVar5;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x60) = 0x426846;\n                fcn.0041ecc0(arg1_00);\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1_00 = *(*0x20 + -0x18);\n                uVar5 = *(*0x20 + -0x10);\n            }\n            if (arg1 == 1) {\n                if (uVar5 >> 0x23 < 0x2000) {\n                    iVar7 = (uVar5 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar5 >> 0x23) * 8);\n                    uVar3 = unaff_RBX & 0x3fffff;\n                    uVar5 = uVar3 >> 0x13;\n                    if (uVar5 < 8) {\n                        *(iVar7 + uVar5 * 8) = *(iVar7 + uVar5 * 8) & ~(1 << (uVar3 >> 0xd & 0x3f));\n                        goto code_r0x00426997;\n                    }\n                    *(*0x20 + -0x60) = 0x4269c5;\n                    fcn.00459a00(8);\n                }\n                *(*0x20 + -0x60) = 0x4269d2;\n                fcn.00459a00(0x2000);\n                goto code_r0x004269d2;\n            }\n            uVar6 = arg1_00 + 0x7fffffffffffU >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar2 = (iVar7 & 0x3fffff) >> 0xd;\n            if (uVar6 == uVar5 >> 0x16) {\n                uVar5 = uVar5 >> 0x23;\n                if (0x1fff < uVar5) {\n                    *(*0x20 + -0x60) = 0x4269f0;\n                    uVar2 = fcn.00459a00(0x2000);\n                    goto code_r0x004269f0;\n                }\n                *(*0x20 + -0x60) = 0x42693d;\n                fcn.00427f40((uVar2 - unaff_RBX) + 1);\ncode_r0x004269d2:\n                arg1 = *(*0x20 + 0x18);\ncode_r0x00426997:\n                *(*0x20 + -0x60) = 0x4269a9;\n                fcn.00424d60(arg1);\n                return;\n            }\n            if (uVar5 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x10) = arg1_00 + 0x7fffffffffffU;\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = uVar5 >> 0x16;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x60) = 0x4268f2;\n                fcn.00427f40(-(unaff_RBX - 0x200));\n                uVar5 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x18);\n                iVar7 = *(*0x20 + -0x20);\n                while (arg1 = iVar7 + 1,  arg1 < uVar6) {\n                    uVar2 = arg1 >> 0xd;\n                    if (0x1fff < uVar2) goto code_r0x00426a8f;\ncode_r0x004269f0:\n                    *(*0x20 + -0x30) = arg1;\n                    uVar1 = *(uVar5 + 0x78 + uVar2 * 8);\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x60) = 0x426a16;\n                    fcn.0045a040(uVar1, (arg1 & 0x1fff) << 7);\n                    uVar5 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x18);\n                    iVar7 = *(*0x20 + -0x30);\n                }\n                if (*(*0x20 + -0x10) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x426a7f;\n                    fcn.00427f40(*(*0x20 + -0x28) + 1);\n                    goto code_r0x004269d2;\n                }\n                *(*0x20 + -0x60) = 0x426a8f;\n                fcn.00459a00(0x2000);\ncode_r0x00426a8f:\n                *(*0x20 + -0x60) = 0x426a99;\n                fcn.00459a00(0x2000);\n            }\n            unaff_DIL = uVar6;\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x426aa6;\n            in_RAX = fcn.00459a00(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        puVar4[0x20] = unaff_DIL;\n        *(puVar4 + -8) = 0x426ac5;\n        fcn.0045ba20();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_DIL = puVar4[0x20];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1835
    },
    "00426c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426c40(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x53b740;\n            *(*0x20 + -0x28) = *0x53b748;\n            *(*0x20 + -0x24) = *0x53b74c;\n            *(*0x20 + -0x20) = *0x53b750;\n            *(*0x20 + -0x1c) = *0x53b754;\n            *(*0x20 + -0x18) = *0x53b758;\n            *(*0x20 + -0x14) = *0x53b75c;\n            *(*0x20 + -0x10) = *0x53b760;\n            *(*0x20 + -0xc) = *0x53b764;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    *(*0x20 + -0x88) = 0x426d5f;\n                    uVar4 = fcn.00413e40();\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x58) = 0x800000;\n                    *(*0x20 + -0x50) = 0x800000;\n                    iVar3 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    uVar1 = *(*0x20 + -0x58);\n                    uVar2 = *(*0x20 + -0x50);\n                    *(iVar3 + 0x100d0) = uVar1;\n                    *(iVar3 + 0x100d8) = uVar2;\n                    if (*0x5a1da0 == 0) {\n                        *(iVar3 + 0x100c8) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x426dbb;\n                        fcn.00459640(uVar4, uVar1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x70) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar6 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x68) = uVar6;\n                *(*0x20 + -0x88) = 0x426ce5;\n                iVar3 = fcn.00413e40(arg1, *0x5a1cd8 + uVar6 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar4 = *(*0x20 + -0x68);\n                *(*0x20 + -0x38) = uVar4;\n                iVar3 = *(*0x20 + 8);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = param_3 * 3;\n                uVar1 = *(*0x20 + -0x48);\n                *(iVar3 + 8 + param_3 * 0x18) = 0;\n                *(iVar3 + 0x10 + param_3 * 0x18) = uVar4;\n                if (*0x5a1da0 == 0) {\n                    *(iVar3 + param_3 * 0x18) = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x426d4d;\n                    fcn.00459660(arg1, uVar1, param_3, param_4);\n                }\n                iVar3 = param_3 + 1;\n            }\n            *(*0x20 + -0x88) = 0x426dd6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x426de5;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1179
    },
    "00427440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00427440(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    ulong unaff_RDI;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n                uVar1 = *(in_RAX + 0x24);\n                uVar2 = *(in_RAX + 0x28);\n                uVar12 = unaff_RBX + 0x800000000000 >> 0x19;\n                uVar13 = -*0x5a1cd8;\n                uVar11 = uVar12 & uVar13;\n                if (uVar2 < uVar11) {\n                    uVar11 = uVar2;\n                }\n                uVar13 = (((arg1 + 0x800000000000 >> 0x16) + 7 >> 3) + *0x5a1cd8) - 1U & uVar13;\n                if (uVar13 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                iVar4 = *(in_RAX + 8);\n                if (*(in_RAX + 0x10) != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x18) = uVar12;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x44) = uVar13;\n                    *(*0x20 + -0x48) = uVar11;\n                    *(*0x20 + -0x70) = 0x42751a;\n                    uVar3 = fcn.00429e00();\n                    iVar9 = *(*(*0x20 + 8) + 8);\n                    if (*(*(*0x20 + 8) + 0x10) != 0) break;\n                    *(*0x20 + -0x70) = 0x4276bd;\n                    fcn.004599e0(0);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x70) = 0x4276c7;\n                fcn.004599e0(0);\n            }\n            *(*0x20 + -0x70) = 0x4276cc;\n            fcn.004330a0();\n            *(*0x20 + -0x70) = 0x4276dd;\n            fcn.004339a0();\n            *(*0x20 + -0x70) = 0x4276e7;\n            fcn.00433800();\n            *(*0x20 + -0x70) = 0x4276f8;\n            fcn.004339a0();\n            *(*0x20 + -0x70) = 0x427705;\n            fcn.00433800();\n            *(*0x20 + -0x70) = 0x42770a;\n            fcn.00433300();\n            *(*0x20 + -0x70) = 0x42770f;\n            fcn.00433120();\n            unaff_RBX = 0x2e;\n            *(*0x20 + -0x70) = 0x427725;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x42773f;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n    *(*0x20 + -0x20) = uVar3;\n    *(*0x20 + -0x28) = uVar2 + iVar4;\n    iVar9 = *(*0x20 + -0x44) + iVar9;\n    *(*0x20 + -0x70) = 0x427553;\n    fcn.00429e00();\n    *(*0x20 + -0x70) = 0x427565;\n    iVar4 = fcn.00429e80(*(*0x20 + -0x20));\n    uVar12 = iVar4 + 0x800000000000;\n    uVar5 = iVar9 + 0x800000000000;\n    if (uVar12 < uVar5) {\n        iVar7 = iVar9 - iVar4;\n    }\n    else {\n        iVar7 = 0;\n    }\n    if (iVar7 != 0) {\n        *(*0x20 + -0x20) = iVar4;\n        *(*0x20 + -0x28) = uVar12;\n        *(*0x20 + -0x30) = iVar9;\n        *(*0x20 + -0x38) = uVar5;\n        *(*0x20 + -0x70) = 0x4275c5;\n        fcn.0042ad40();\n        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n            iVar4 = *(*0x20 + -0x30) - *(*0x20 + -0x20);\n        }\n        else {\n            iVar4 = 0;\n        }\n        LOCK();\n        *0x5a25d8 = *0x5a25d8 + iVar4;\n        *(*0x20 + -0x70) = 0x427619;\n        fcn.00413aa0();\n        if (*(*0x20 + -0x3c) == 0) {\n            iVar6 = *(*0x20 + -0x48);\ncode_r0x00427632:\n            iVar4 = *(*0x20 + 8);\n            *(iVar4 + 0x24) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x48);\n            if (iVar6 < *(*0x20 + -0x3c)) goto code_r0x00427632;\n            iVar4 = *(*0x20 + 8);\n        }\n        if (*(*0x20 + -0x40) == 0) {\n            iVar6 = *(*0x20 + -0x44);\ncode_r0x00427658:\n            *(iVar4 + 0x28) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x44);\n            if (*(*0x20 + -0x40) < iVar6) goto code_r0x00427658;\n        }\n        iVar4 = *(*0x20 + -0x20);\n        uVar5 = *(*0x20 + -0x38);\n        uVar12 = *(*0x20 + -0x28);\n        iVar9 = *(*0x20 + -0x30);\n    }\n    iVar6 = *(*(*0x20 + 8) + 0x20);\n    if (iVar6 == 0) {\n        iVar10 = *(*0x20 + -0x18);\n    }\n    else {\n        iVar10 = *(*0x20 + -0x18);\n        if (iVar6 <= iVar10) goto code_r0x0042769c;\n    }\n    *(*(*0x20 + 8) + 0x20) = iVar10;\ncode_r0x0042769c:\n    if (uVar12 < uVar5) {\n        iVar9 = iVar9 - iVar4;\n    }\n    else {\n        iVar9 = 0;\n    }\n    return iVar9;\n}\n",
        "token_count": 2023
    },
    "00427760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00427760(ulong arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.00427820();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "00427960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00427960(void)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00427960:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar6 = *in_RAX;\n        uVar7 = iVar6 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar5 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar5;\n        uVar3 = (iVar6 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar3;\n        uVar2 = 0;\n        do {\n            if (0x3f < uVar2) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x427aeb;\n                fcn.00424d60(0x40);\n                pauVar1 = *(*0x20 + 8);\n                *pauVar1 = in_XMM15;\n                *pauVar1[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00427b25;\n                iVar6 = (uVar5 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8);\n                uVar8 = uVar3 + uVar2 >> 6;\n                if (7 < uVar8) goto code_r0x00427b13;\n                *(iVar6 + uVar8 * 8) = *(iVar6 + uVar8 * 8) & ~(1 << (uVar3 + uVar2 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00427b06;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x50) = 0x427a8a;\n                fcn.00427e40(1);\n                in_RAX = *(*0x20 + 8);\n                uVar2 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar7 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0x18);\n            }\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00427b33;\ncode_r0x00427b06:\n    *(*0x20 + -0x50) = 0x427b13;\n    fcn.00459a00(0x2000);\ncode_r0x00427b13:\n    *(*0x20 + -0x50) = 0x427b25;\n    fcn.00459a00(8);\ncode_r0x00427b25:\n    *(*0x20 + -0x50) = 0x427b32;\n    in_RAX = fcn.00459a00(0x2000);\ncode_r0x00427b33:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x427b45;\n    fcn.0045ba20();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x00427960;\n}\n",
        "token_count": 1188
    },
    "00427e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427e40(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar5 * 8) = *(in_RAX + uVar5 * 8) | 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar2 >> 6;\n        if (uVar6 == uVar5) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 | -1 << (unaff_RBX & 0x3f);\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.00459a00(8);\n    }\n    fcn.00459a00(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 499
    },
    "00427f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427f40(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar5 = unaff_RBX >> 6;\n    if (uVar5 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar5 * 8) = *(in_RAX + uVar5 * 8) & ~(1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        uVar2 = (arg1 + unaff_RBX) - 1;\n        uVar6 = uVar2 >> 6;\n        if (uVar6 == uVar5) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar3 = in_RAX + uVar5 * 8;\n            *puVar3 = *puVar3 & ~(-1 << (unaff_RBX & 0x3f));\n            while (uVar5 = uVar5 + 1,  uVar5 < uVar6) {\n                *(in_RAX + uVar5 * 8) = 0;\n            }\n            uVar1 = (uVar2 & 0x3f) + 1;\n            puVar3 = in_RAX + uVar6 * 8;\n            *puVar3 = *puVar3 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.00459a00(8);\n    }\n    fcn.00459a00(8);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 495
    },
    "00428060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00428060(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x4281a7;\n                in_RAX = fcn.00459a00(8);\n                goto code_r0x004281a7;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 + unaff_RBX) - 1;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x5a1b54 == 0) {\n                        *(*0x20 + -0x40) = 0x428165;\n                        uVar4 = fcn.004020e0();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x5a1b54 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x4280f8;\n                        in_R8 = fcn.004020e0();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x5a1b54;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x4281d3;\n                            in_R9 = fcn.004020e0();\n                            in_RDX = *0x5a1b54;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x004281a7:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x42822f;\n                        iVar3 = fcn.004020e0();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x428252;\n                fcn.00459a00(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x42825f;\n            in_RAX = fcn.00459a00(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x428274;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1390
    },
    "00428480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00428480(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.00428640(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.00428540(arg1);\n    return iVar1;\n}\n",
        "token_count": 307
    },
    "00428800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428800(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if ((in_RAX == 1) || (in_RAX - 2U < 2)) {\n                *(*0x20 + -0x28) = 0x428850;\n                iVar1 = fcn.0040bf00(0x5a4670);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x42887d;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x42888d;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "004288a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004288a0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x4288e5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4288f0;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 289
    },
    "004292e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004292e0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    double *pdVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong in_RDX;\n    int64_t iVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe0 && *0x20 + -0xe0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x160;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x170) = *0x20 + -8;\n            *(*0x20 + -0x168) = 0x429335;\n            fcn.00459c34();\n            unaff_RBP = *(*0x20 + -0x170);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x110;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x168) = 0x429397;\n                arg1 = fcn.00451960(0x20);\n            }\n            else {\n                *(*0x20 + -0x160) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x168) = 0x42937f;\n                arg1 = fcn.0044e660(0, in_RDX, *0x20 + -0x110, 0x20);\n            }\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x168) = 0x429485;\n            in_RAX = fcn.00459a20(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42949f;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    *(*0x20 + -0x168) = 0x4293cc;\n    fcn.00428960(*0x20 + -0x110);\n    *(*0x20 + -0x168) = 0x4293d1;\n    uVar3 = fcn.00428900();\n    *(*0x20 + -0x10) = uVar3;\n    *(*0x20 + -0x168) = 0x4293e7;\n    fcn.00409aa0();\n    if (*(*0x20 + 0x20) == 2) {\n        iVar1 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n        if (iVar4 < iVar1) {\n            pdVar2 = *(*0x20 + -0x10);\n            *pdVar2 = iVar1 / iVar4 + *pdVar2;\n            pdVar2[1] = pdVar2[1] + iVar1;\n            goto code_r0x0042945a;\n        }\n    }\n    else {\n        iVar4 = *(*0x20 + 8);\n    }\n    pdVar2 = *(*0x20 + -0x10);\n    *pdVar2 = *0x4f0bb0 + *pdVar2;\n    pdVar2[1] = pdVar2[1] + iVar4;\ncode_r0x0042945a:\n    *(*0x20 + -0x168) = 0x429466;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 1057
    },
    "00429520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429520(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 0x90) != 6) {\n        cVar4 = fcn.004524e0();\n        if (cVar4 == '\\0') {\n            while (*(in_RAX + 0x17c) != 2) {\n                if (*(in_RAX + 0x17c) == 1) {\n                    (**unaff_RBX)();\n                }\n                else {\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar3 = *(unaff_R14 + 0x30);\n                    LOCK();\n                    if (*(in_RAX + 0x17c) == 0) {\n                        *(in_RAX + 0x17c) = 1;\n                        fcn.00429680();\n                        *(in_RAX + 0x17c) = 2;\n                    }\n                    iVar2 = *(iVar3 + 0xd8);\n                    *(iVar3 + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00429680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429680(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_1;\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 2) {\n                LOCK();\n                if (*0x54aff8 <= *0x54afe8) {\n                    *0x54afe8 = *0x54afe8 + 1;\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = *0x54afe8;\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x4297e0;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x10) = *0x54afe8;\n                *(*0x20 + -0x40) = *0x20 + -0x20;\n                *(*0x20 + -0x48) = 0x429708;\n                *0x54afe8 = *0x54afe8 + 1;\n                fcn.004571e0();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*0x54b008 == 0) {\n                    return;\n                }\n                noname_1 = *(*(*0x20 + 8) + 0x168);\n                if (*(*0x20 + -0x28) < *0x54b010) {\n                    if (*0x5a1da0 == 0) {\n                        *(*0x54b008 + *(*0x20 + -0x28) * 8) = noname_1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x42975d;\n                        fcn.00459660(*0x54b010, noname_1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x429779;\n                in_RAX = fcn.004599e0(*0x54b010);\n            }\n            *(*0x20 + -0x30) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x42978a;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x42979b;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x4297a5;\n            fcn.004337a0();\n            *(*0x20 + -0x48) = 0x4297aa;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x4297af;\n            fcn.00433120();\n            *(*0x20 + -0x48) = 0x4297c5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4297d0;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1010
    },
    "00429f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429f60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    uVar1 = fcn.0040bf00(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x5a1da0 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.00459660(in_RAX, unaff_RBX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 232
    },
    "0042a120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0042a120(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42a147;\n            uVar3 = fcn.0042a020();\n            if (uVar3 == 0) {\n                if ((*(*0x20 + 8))[1] != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (uVar3 - 1 < arg1) {\n                    iVar5 = (uVar3 - 1) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= uVar3) {\n                        return 0;\n                    }\n                    if (uVar3 < arg1) {\n                        return *(uVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x42a1f9;\n                    fcn.004599e0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x42a205;\n                fcn.004599e0(arg1);\n            }\n            *(*0x20 + -0x20) = 0x42a20f;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x42a21f;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 693
    },
    "0042af80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042af80(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x5a1da5 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42afe5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x42aff0;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 339
    },
    "0042b040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042b040(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1268) = iVar1 + 0x1278;\n        return;\n    }\n    if ((*0x5a1da5 != '\\0') && (in_RAX != 0)) {\n        fcn.00403660();\n        if (*0x5a1da4 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1268) = iVar1 + 0x1278;\n            return;\n        }\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 218
    },
    "0042b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042b100(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint8_t *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1268) - (in_RAX + 0x1278) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1268) = 0;\n                if (*0x5a1b50 != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1278 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x42b17b;\n                        fcn.0041afc0(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x42b19d;\n                    fcn.0042af80();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar8 = arg1;\n                    if (0xfff < *(in_RAX + 0x1278 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x42b1e5;\n                        iVar3 = fcn.0040fb60(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar8 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar5 = (uVar4 >> 3) + *0x50;\n                            uVar7 = 1 << (uVar4 & 7);\n                            if ((uVar7 & *puVar5) == 0) {\n                                LOCK();\n                                *puVar5 = *puVar5 | uVar7;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042b38d;\n                                iVar2 = *(*(uVar4 * 8 + 0x573fb0) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar5 = iVar2 + uVar4 + 0x21040;\n                                uVar7 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar7 & *(iVar2 + 0x21040 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar5 = *puVar5 | uVar7;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar8 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar8) goto code_r0x0042b385;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1278 + uVar8 * 8) = iVar3;\n                                    uVar8 = uVar8 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1250) = *(in_RAX + 0x1250) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar8 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar8;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42b35e;\n                    fcn.00421140(arg1);\n                    *(*0x20 + -0x48) = 0x42b36e;\n                    fcn.0042af80();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42b385;\n                fcn.00459a60(arg1, 0x200);\ncode_r0x0042b385:\n                *(*0x20 + -0x48) = 0x42b38d;\n                fcn.004599e0(arg1);\ncode_r0x0042b38d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42b39a;\n                fcn.00459a00(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42b3a5;\n            in_RAX = fcn.00459a40(uVar4, 0x200);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x42b3b0;\n        fcn.0045ba20();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1581
    },
    "0042b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042b3c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x5a1b94 == 0) {\n        fcn.00409aa0();\n        if (*0x5a1b94 == 0) {\n            fcn.0042b540();\n            *0x5a1b94 = 1;\n        }\n        fcn.00409cc0();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0042b440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042b440(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042b456;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042b456:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042b46e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042b46e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042b640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042b640(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x5a1b9c != 0) {\n                return *0x5a1b9c;\n            }\n            *0x5a1b9c = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x53a360;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42b69c;\n            uVar1 = fcn.0042eca0();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42b6c7;\n            fcn.0045ae80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42b6e8;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x42b6f9;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x42b705;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x42b716;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x42b71b;\n            fcn.00433120();\n            *(*0x20 + -0x48) = 0x42b72c;\n            fcn.004317e0();\n        }\n        *(puVar2 + -8) = 0x42b732;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 723
    },
    "0042b740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042b740(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x53a360 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x5a1b88;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x53a360;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42b8a7;\n                fcn.0042eda0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42b8ec;\n                    fcn.0045ae80();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42b937;\n                        fcn.004330a0();\n                        *(*0x20 + -0x888) = 0x42b948;\n                        fcn.004339a0();\n                        *(*0x20 + -0x888) = 0x42b954;\n                        fcn.004337a0();\n                        *(*0x20 + -0x888) = 0x42b965;\n                        fcn.004339a0();\n                        *(*0x20 + -0x888) = 0x42b96a;\n                        fcn.00433120();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42b97b;\n                        fcn.004317e0();\n                        goto code_r0x0042b97b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x5a1b9c = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42b9c5;\n                            fcn.0042b640();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x54d578;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42ba25;\n                        fcn.0042ed20();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42ba4b;\n                            fcn.0045ae80();\n                            unaff_R14 = **(in_GS_OFFSET + 0x28);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42ba77;\n                        fcn.0042bae0(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042b97b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42baab;\n                fcn.004599e0(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42bab0;\n            in_RAX = fcn.0042fe00();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42babb;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2014
    },
    "0042bc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042bc60(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x5a1d38 == 0) {\n                arg1 = 0x5a2360;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x5a2360;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42bcb1;\n                fcn.0042eba0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x5a2360) = 0x5c;\n                    *0x5a1d38 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    goto code_r0x0042bcff;\n                }\n            }\n            else {\ncode_r0x0042bcff:\n                if (*0x5a1b51 == '\\0') {\n                    uVar1 = *0x5a1d38;\n                    if (*0x5a1d38 < 0x106) {\n                        *(*0x20 + -0x20) = *0x5a1d38 + unaff_RBX;\n                        if (*0x5a1d38 + unaff_RBX < 0x106) {\n                            uVar2 = 0x5a2360;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x5a1d38;\n                            *(*0x20 + -0x50) = 0x42bdaf;\n                            uVar2 = fcn.00443500(*0x5a1d38);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x10) = uVar2;\n                        *(*0x20 + -0x50) = 0x42bdd8;\n                        fcn.0045a340(unaff_RBX);\n                        if (*(*0x20 + -0x20) != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42bdff;\n                            fcn.0042eb20();\n                            return *(*0x20 + -0x38);\n                        }\n                        uVar1 = 0;\n                        *(*0x20 + -0x50) = 0x42be2c;\n                        fcn.004599e0(0);\n                    }\n                    *(*0x20 + -0x50) = 0x42be36;\n                    fcn.00459a40(uVar1, 0x105);\n                }\n                else if (unaff_RBX != 0) {\n                    *(*0x20 + -0x48) = *0x54d538;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42bd38;\n                    fcn.0042ec20();\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x50) = 0x42be45;\n                fcn.004599e0(0);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42be56;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x42be6b;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1226
    },
    "0042be80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042be80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42bee5;\n            fcn.0042eb20();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42bf47;\n                iVar1 = fcn.0042bba0(0x10);\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x160) = 0x42bf65;\n                    fcn.00459540(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x54d520;\n                }\n                *0x54d520 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42bfc7;\n                uVar3 = fcn.0042bba0(0x1b);\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x160) = 0x42bfe5;\n                    fcn.00459540(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x54d528;\n                }\n                *0x54d528 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42c025;\n                iVar1 = fcn.0042bba0(0xf);\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x160) = 0x42c045;\n                    fcn.00459540(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x54d538;\n                }\n                *0x54d538 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42c07d;\n                iVar2 = fcn.0042bba0(0xf);\n                iVar1 = iVar2;\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x160) = 0x42c09b;\n                    iVar2 = fcn.00459540(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x54d540;\n                }\n                *0x54d540 = iVar1;\n                if ((iVar2 == 0) || (*0x54d538 == 0)) {\n                    *0x5a1b51 = false;\n                }\n                else {\n                    *0x5a1b51 = *0x54d520 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42c0f4;\n                iVar1 = fcn.0042bc60(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42c148;\n                    uVar3 = fcn.0042bba0(0x12);\n                    if (*0x5a1da0 != 0) {\n                        *(*0x20 + -0x160) = 0x42c166;\n                        fcn.00459540(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x54d560;\n                    }\n                    *0x54d560 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42c18e;\n                    iVar1 = fcn.0042bc60(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42c1e7;\n                        uVar3 = fcn.0042bba0(0x16);\n                        if (*0x5a1da0 != 0) {\n                            *(*0x20 + -0x160) = 0x42c205;\n                            fcn.00459540(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x54d548;\n                        }\n                        *0x54d548 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42c255;\n                        uVar3 = fcn.0042bba0(0x11);\n                        if (*0x5a1da0 != 0) {\n                            *(*0x20 + -0x160) = 0x42c273;\n                            fcn.00459540(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x54d568;\n                        }\n                        *0x54d568 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42c2c5;\n                        uVar3 = fcn.0042bba0(0x17);\n                        if (*0x5a1da0 != 0) {\n                            *(*0x20 + -0x160) = 0x42c2e5;\n                            fcn.00459540(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x54d570;\n                        }\n                        *0x54d570 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42c30d;\n                        iVar1 = fcn.0042bc60(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42c354;\n                            iVar1 = fcn.0042bba0(0x10);\n                            if (*0x5a1da0 != 0) {\n                                *(*0x20 + -0x160) = 0x42c372;\n                                fcn.00459540(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x54d580;\n                            }\n                            *0x54d580 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42c3a7;\n                            iVar2 = fcn.0042bba0(0xe);\n                            iVar1 = iVar2;\n                            if (*0x5a1da0 != 0) {\n                                *(*0x20 + -0x160) = 0x42c3c5;\n                                iVar2 = fcn.00459540(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x54d588;\n                            }\n                            *0x54d588 = iVar1;\n                            if ((*0x54d580 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42c40c;\n                                iVar1 = fcn.0042bc60(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42c465;\n                                    iVar2 = fcn.0042bba0(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x5a1da0 != 0) {\n                                        *(*0x20 + -0x160) = 0x42c485;\n                                        iVar2 = fcn.00459540(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x54d578;\n                                    }\n                                    *0x54d578 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42c4da;\n                                        iVar1 = fcn.0042bba0(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42c4e9;\n                                            fcn.0042d020();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42c50a;\n                                    fcn.004317e0();\n                                }\n                                *(*0x20 + -0x160) = 0x42c51b;\n                                fcn.004317e0();\n                            }\n                            *(*0x20 + -0x160) = 0x42c52c;\n                            fcn.004317e0();\n                        }\n                        *(*0x20 + -0x160) = 0x42c53d;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x160) = 0x42c54e;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x160) = 0x42c55f;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x160) = 0x42c570;\n            fcn.004317e0();\n        }\n        *(puVar6 + -8) = 0x42c576;\n        fcn.00457320();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3577
    },
    "0042c7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042c881)\n// WARNING: Removing unreachable block (ram,0x0042c896)\n\nulong fcn.0042c7a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042ec20();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.0042eb20();\n    return 0;\n}\n",
        "token_count": 183
    },
    "0042c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042c8c0(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x5a1b47 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.0042eb20();\n            return uStack16;\n        }\n        fcn.0042eb20();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "0042d020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d020(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42d08a;\n            iVar1 = fcn.0042bba0(0x18);\n            iVar2 = iVar1;\n            if (*0x5a1da0 != 0) {\n                *(*0x20 + -0x98) = 0x42d0a8;\n                iVar1 = fcn.00459540(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x54d530;\n            }\n            *0x54d530 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42d0f5;\n                iVar2 = fcn.0042bba0(0x18);\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x98) = 0x42d113;\n                    fcn.00459540(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x54d550;\n                }\n                *0x54d550 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42d169;\n                iVar1 = fcn.0042bba0(0x1a);\n                iVar2 = iVar1;\n                if (*0x5a1da0 != 0) {\n                    *(*0x20 + -0x98) = 0x42d187;\n                    iVar1 = fcn.00459540(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x54d558;\n                }\n                *0x54d558 = iVar2;\n                if ((*0x54d550 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = *0x54d558;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42d1c5;\n                    fcn.0042eb20();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x54d550;\n                            *(*0x20 + -0x88) = 0x5a1d10;\n                            *(*0x20 + -0x98) = 0x42d216;\n                            fcn.0042eb20();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x5a1b52 = 1;\n                            *0x5a1d08 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42d2a5;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x98) = 0x42d2b6;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x98) = 0x42d2c7;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x98) = 0x42d2d8;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42d2e5;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1572
    },
    "0042d3a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042d3a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x0042d3a0:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42d3c5;\n        iVar1 = fcn.0042eac0();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42d40f;\n                    iVar1 = fcn.004433e0(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x54dd58 = uVar6;\n                    *0x54dd60 = uVar6;\n                    if (*0x5a1da0 != 0) {\n                        *(*0x20 + -0x68) = 0x42d445;\n                        fcn.00459540(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x54dd50;\n                    }\n                    *0x54dd50 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    iVar9 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042d47a;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042d5cf;\n    }\n    goto code_r0x0042d5e0;\ncode_r0x0042d47a:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42d505;\n        fcn.0042eb20();\n        *(*0x20 + -0x18) = 0x473ce0;\n        *(*0x20 + -0x10) = 0x4dc310;\n        *(*0x20 + -0x68) = 0x42d545;\n        uVar2 = fcn.00455780(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42d565;\n        fcn.0042eba0();\n        *(*0x20 + -0x68) = 0x42d57e;\n        fcn.0042c600();\n        return;\n    }\n    if (iVar9 == 0) goto code_r0x0042d5c5;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = iVar9;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42d49d;\n    uVar2 = fcn.00448200();\n    iVar7 = *0x54dd50;\n    uVar6 = *(*0x20 + -0x30);\n    uVar4 = *0x54dd58;\n    if (*0x54dd58 <= uVar6) goto code_r0x0042d5ba;\n    *(*0x54dd50 + 8 + uVar6 * 0x10) = iVar1;\n    if (*0x5a1da0 == 0) {\n        *(iVar7 + uVar6 * 0x10) = uVar2;\n        uVar4 = uVar6;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42d4dd;\n        fcn.00459540(iVar7, uVar6, param_3, param_4);\n        uVar4 = uVar6;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    iVar9 = *(*0x20 + -0x40);\n    while( true ) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x42d5ba;\n            fcn.004599e0(0);\n            goto code_r0x0042d5ba;\n        }\n        if (*piVar3 == 0) break;\n        iVar9 = iVar9 + -1;\n        piVar3 = piVar3 + (-iVar9 >> 0x3f & 2);\n    }\n    iVar1 = uVar4 + 1;\n    iVar9 = iVar9 + -1;\n    iVar7 = piVar3 + (-iVar9 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042d47a;\ncode_r0x0042d5ba:\n    *(*0x20 + -0x68) = 0x42d5c5;\n    fcn.004599e0(uVar4);\ncode_r0x0042d5c5:\n    *(*0x20 + -0x68) = 0x42d5cf;\n    fcn.004599e0(0);\ncode_r0x0042d5cf:\n    *(*0x20 + -0x68) = 0x42d5dc;\n    fcn.004599e0(0x1000000);\ncode_r0x0042d5e0:\n    *(puVar8 + -8) = 0x42d5e5;\n    fcn.00457320();\n    *0x20 = puVar8;\n    goto code_r0x0042d3a0;\n}\n",
        "token_count": 1592
    },
    "0042d680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042d680(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.0042eb20();\n    }\n    else if (in_RAX == 2) {\n        fcn.0042eb20();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.00459a20(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042d7bb:\n            fcn.0042ed20();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.0042eba0();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042d840(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042d7bb;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 327
    },
    "0042dc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042dc60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.0042eba0();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045b2e0();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.0042eca0();\n            if (uStack56 != 1) break;\n            fcn.0045b2e0();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.004571e0();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.004571e0();\n            return 0xffffffff;\n        }\n    }\n    fcn.004571e0();\n    return 0xffffffff;\n}\n",
        "token_count": 429
    },
    "0042e000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e000(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.0042eb20();\n    if (iStack16 == 0) {\n        fcn.004571e0();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0042e180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e180(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.0042eca0();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.004571e0();\n        }\n        fcn.0042eca0();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.004571e0();\n            fcn.0042eb20();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0042e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042e480(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42e4f3;\n            fcn.0042ee20();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x42e539;\n                fcn.00409aa0();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x5a1b47 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42e58a;\n                    fcn.0042eca0();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x0042e5bd;\n                }\n                else {\ncode_r0x0042e5bd:\n                    *(*0x20 + -0xb8) = 0x42e5ca;\n                    fcn.00409cc0();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42e607;\n                    fcn.0042ec20();\n                    puVar3 = **(in_GS_OFFSET + 0x28);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42e66f;\n                            fcn.004593a0();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42e698;\n                        fcn.004330a0();\n                        *(*0x20 + -0xb8) = 0x42e6a9;\n                        fcn.004339a0();\n                        *(*0x20 + -0xb8) = 0x42e6b3;\n                        fcn.00433800();\n                        *(*0x20 + -0xb8) = 0x42e6c5;\n                        fcn.004339a0();\n                        *(*0x20 + -0xb8) = 0x42e6cf;\n                        fcn.00433800();\n                        *(*0x20 + -0xb8) = 0x42e6e5;\n                        fcn.004339a0();\n                        *(*0x20 + -0xb8) = 0x42e6ea;\n                        fcn.00433120();\n                        *(*0x20 + -0xb8) = 0x42e6fb;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0xb8) = 0x42e705;\n                    fcn.0045ae80();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42e726;\n                    fcn.004330a0();\n                    *(*0x20 + -0xb8) = 0x42e737;\n                    fcn.004339a0();\n                    *(*0x20 + -0xb8) = 0x42e745;\n                    fcn.004336a0();\n                    *(*0x20 + -0xb8) = 0x42e74a;\n                    fcn.00433300();\n                    *(*0x20 + -0xb8) = 0x42e74f;\n                    fcn.00433120();\n                    *(*0x20 + -0xb8) = 0x42e765;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0xb8) = 0x42e76a;\n                fcn.0045ae80();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x42e78b;\n                fcn.004330a0();\n                *(*0x20 + -0xb8) = 0x42e79c;\n                fcn.004339a0();\n                *(*0x20 + -0xb8) = 0x42e7a6;\n                fcn.004336a0();\n                *(*0x20 + -0xb8) = 0x42e7ab;\n                fcn.00433300();\n                *(*0x20 + -0xb8) = 0x42e7b0;\n                fcn.00433120();\n                *(*0x20 + -0xb8) = 0x42e7c5;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0xb8) = 0x42e7ca;\n            fcn.0045ae80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x42e7eb;\n            fcn.004330a0();\n            *(*0x20 + -0xb8) = 0x42e7fc;\n            fcn.004339a0();\n            *(*0x20 + -0xb8) = 0x42e806;\n            fcn.004336a0();\n            *(*0x20 + -0xb8) = 0x42e80b;\n            fcn.00433300();\n            *(*0x20 + -0xb8) = 0x42e810;\n            fcn.00433120();\n            *(*0x20 + -0xb8) = 0x42e825;\n            fcn.004317e0();\n        }\n        *(puVar5 + -8) = 0x42e82b;\n        fcn.00457320();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2338
    },
    "0042e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042e9e0(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if ((*(iVar1 + 0xe0) == 0) || (*(iVar1 + 0x2b0) != 0)) {\n        bVar2 = false;\n    }\n    else {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    fcn.00459140();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 247
    },
    "0042f140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0042f140(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x42f1ad;\n                fcn.00409aa0();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x42f1ce;\n                    uVar6 = fcn.00409cc0();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x42f24b;\n                fcn.0042ee20();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x42f58d;\n                fcn.0045ae80();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x42f5ae;\n                fcn.004330a0();\n                *(*0x20 + -0x560) = 0x42f5bf;\n                fcn.004339a0();\n                *(*0x20 + -0x560) = 0x42f5c9;\n                fcn.004336a0();\n                *(*0x20 + -0x560) = 0x42f5ce;\n                fcn.00433300();\n                *(*0x20 + -0x560) = 0x42f5d3;\n                fcn.00433120();\n                *(*0x20 + -0x560) = 0x42f5e5;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x560) = 0x42f5f6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x42f605;\n        fcn.00457320();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x42f27a;\n    fcn.00409cc0();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x42f2b5;\n    fcn.00409aa0();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42f2cf;\n    fcn.0042eb20();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x42f510;\n        fcn.00409cc0();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x42f52a;\n        uVar6 = fcn.0042eb20();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x42f318;\n    fcn.0042eba0();\n    *(*0x20 + -0x560) = 0x42f33a;\n    fcn.00409cc0();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x0042f3e8;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x0042f3e8;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22c8) == '\\0') {\n            bVar12 = false;\n            goto code_r0x0042f3e8;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x0042f3e8:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x42f40c;\n        cVar5 = fcn.00432b60(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.0045aa00;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x42f465;\n            fcn.0042eba0();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42f4b0;\n    fcn.0042eb20();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42f4de;\n    uVar6 = fcn.0042eb20();\n    return uVar6;\n}\n",
        "token_count": 2751
    },
    "0042f620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f620(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42f647;\n            fcn.004490a0();\n            *(*0x20 + -0x20) = 0x42f64c;\n            piVar1 = fcn.00449820();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x42f698;\n                fcn.004317e0();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x42f6a7;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42f6bc;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "0042f6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042f6e0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42f726;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42f736;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 351
    },
    "0042fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0042fe60(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t arg3;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar7 = *(iVar8 + 0xa0);\n    uVar9 = uVar7;\n    if (*(uVar7 + 0x70) != 0) goto code_r0x0042fecf;\n    if (*0x54e770 == 0) goto code_r0x0042fecf;\n    fcn.00409aa0();\n    arg2 = uVar7 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar7;\n    while( true ) {\n        while ((iVar8 = *0x54e770,  *(uVar7 + 0x70) < *(uVar7 + 0x78) >> 1 && (*0x54e770 != 0))) {\n            if (*0x5a1da0 == 0) {\n                puVar1 = *0x54e770 + 0x28;\n                *0x54e770 = *(*0x54e770 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.004596e0(uVar7, arg2, *0x54e770);\n                arg2 = fcn.00459660(uVar7, 0, iVar8, iVar8 + 0x28);\n            }\n            iVar6 = *(uVar7 + 0x70);\n            uVar9 = iVar6 + 1;\n            iVar4 = *(uVar7 + 0x68);\n            iVar5 = iVar4;\n            if (*(uVar7 + 0x78) < uVar9) {\n                arg3 = iVar8;\n                iVar5 = fcn.00443500(iVar6);\n                *(uStack16 + 0x78) = iVar6;\n                uVar7 = uStack16;\n                arg2 = uStack24;\n                if (*0x5a1da0 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar5 = fcn.00459540(iVar6, uStack16, arg3, uVar9);\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar7 + 0x70) = iVar6 + 1;\n            if (*0x5a1da0 == 0) {\n                *(iVar5 + iVar6 * 8) = iVar8;\n            }\n            else {\n                fcn.004596c0(uVar7, arg2, iVar8, iVar6 + 1);\n            }\n        }\n        fcn.00409cc0();\n        iVar8 = iStack40;\n        uVar9 = uStack16;\ncode_r0x0042fecf:\n        iVar6 = *(uVar9 + 0x70);\n        if (iVar6 == 0) {\n            iVar4 = 0;\n            goto code_r0x0042ff1b;\n        }\n        iVar4 = *(*(uVar9 + 0x68) + -8 + iVar6 * 8);\n        if (*0x5a1da0 == 0) {\n            *(*(uVar9 + 0x68) + -8 + iVar6 * 8) = 0;\n        }\n        else {\n            fcn.004596c0(iVar6, arg2, 0, iVar4);\n        }\n        uVar7 = iVar6 - 1;\n        arg2 = *(uVar9 + 0x78);\n        if (uVar7 <= arg2) break;\n        fcn.00459a60(uVar7, arg2);\n    }\n    *(uVar9 + 0x70) = uVar7;\ncode_r0x0042ff1b:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040bba0();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1172
    },
    "004300a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004300a0(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    uint64_t uVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    int64_t iVar9;\n    ulong in_R9;\n    uint64_t arg1_01;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x5a1da0 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.004596c0(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.00430380();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.004303c0();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        iVar4 = 0;\n        iVar5 = 0;\n        iVar9 = arg3;\n        uVar6 = arg2_00;\n        while( true ) {\n            uVar8 = *(uVar6 + 0x70);\n            if (uVar8 <= *(uVar6 + 0x78) >> 1) break;\n            arg1_01 = uVar8 - 1;\n            if (uVar8 <= arg1_01) {\ncode_r0x0043035a:\n                fcn.004599e0(uVar8);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = *(*(uVar6 + 0x68) + -8 + uVar8 * 8);\n            if (*0x5a1da0 == 0) {\n                *(*(uVar6 + 0x68) + -8 + uVar8 * 8) = 0;\n                arg1_00 = iVar4;\n                arg2_01 = iVar5;\n                iVar4 = iVar7;\n            }\n            else {\n                fcn.00459680(iVar4, iVar5, iVar9, uVar6);\n                arg1_00 = iVar4;\n                arg2_01 = iVar5;\n                iVar4 = iVar7;\n            }\n            uVar8 = *(uVar6 + 0x78);\n            if (uVar8 < arg1_01) {\n                fcn.00459a60(arg1_01, uVar8);\n                goto code_r0x0043035a;\n            }\n            *(uVar6 + 0x70) = arg1_01;\n            iVar5 = iVar4;\n            if (arg2_01 != 0) {\n                if (*0x5a1da0 == 0) {\n                    *(arg1_00 + 0x28) = iVar4;\n                    iVar5 = arg2_01;\n                }\n                else {\n                    fcn.00459680(arg1_00, arg2_01, iVar9, uVar6);\n                    iVar5 = arg2_01;\n                }\n            }\n        }\n        iVar7 = iVar5;\n        fcn.00409aa0();\n        if (*0x5a1da0 == 0) {\n            *(iVar4 + 0x28) = *0x54e770;\n            *0x54e770 = iVar5;\n        }\n        else {\n            fcn.00459640(*0x54e770, iVar7, iVar9, uVar6);\n            fcn.00459640(iVar5, iVar7, iVar9, uVar6);\n        }\n        fcn.00409cc0();\n    }\n    if (*0x5a1da0 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.0040f700();\n    }\n    iVar5 = *(arg2_00 + 0x70);\n    uVar6 = iVar5 + 1;\n    iVar9 = *(arg2_00 + 0x68);\n    iVar4 = iVar9;\n    if (*(arg2_00 + 0x78) < uVar6) {\n        iVar7 = arg3;\n        uVar8 = arg2_00;\n        iVar4 = fcn.00443500(iVar5);\n        *(arg2_00 + 0x78) = iVar5;\n        iVar5 = iVar9;\n        if (*0x5a1da0 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n        }\n        else {\n            iVar4 = fcn.00459540(arg2_00 + 0x68, arg2_00, iVar7, uVar8);\n            uVar6 = arg2_00;\n        }\n    }\n    *(arg2_00 + 0x70) = iVar5 + 1;\n    if (*0x5a1da0 == 0) {\n        *(iVar4 + iVar5 * 8) = in_RAX;\n    }\n    else {\n        fcn.00459540(iVar5 + 1, uVar6, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1459
    },
    "00430400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430400(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x5a1da0 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x43048b;\n                    iVar3 = fcn.004596e0(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x5a1da0 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x4304b0;\n                    fcn.004596a0(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x430429;\n                fcn.004300a0(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x430433;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x4304ca;\n            cVar2 = fcn.00430c60(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x5a1da0 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x4304f7;\n                    fcn.00459640(uVar4, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x4304fc;\n                fcn.004300a0(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x43052b;\n            fcn.004317e0();\n        }\n        *(puVar5 + -8) = 0x430531;\n        fcn.00457320();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 965
    },
    "00430620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430620(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.004096e0(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.004096e0(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.00409580();\n                    *(in_RAX + 8) = 0x472ea0;\n                    if (*0x5a1da0 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.00459540(0x472ea0, in_RAX + 0x10, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.00409580();\n                *(in_RAX + 8) = 0x472ea0;\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.00459540(0x472ea0, in_RAX + 0x10, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00430540();\n    return;\n}\n",
        "token_count": 457
    },
    "004307a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004307a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.004307a0(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433120();\n    fcn.00407580(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 290
    },
    "00430c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00430c60(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    int64_t arg1;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \ncode_r0x00430c60:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = *(unaff_RBX + 0x30);\n        iVar6 = 0;\n        uVar8 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar8 < 0) goto code_r0x00430f0a;\n                uVar7 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n                uVar3 = uVar7;\n                iVar6 = 0;\n                uVar8 = 0;\n                goto code_r0x00430ce4;\n            }\n            if (uVar8 < 0) goto code_r0x00430f25;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            uVar8 = uVar8 + 7;\n        } while (uVar8 < 0x1d);\n        goto code_r0x00430f0f;\n    }\n    goto code_r0x00430f2b;\n    while( true ) {\n        if (uVar8 < 0) goto code_r0x00430f05;\n        iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n        uVar8 = uVar8 + 7;\n        if (0x1c < uVar8) break;\ncode_r0x00430ce4:\n        uVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar8 < 0) goto code_r0x00430eeb;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x2c) = uVar7;\n            uVar7 = *(*(unaff_RBX + 0x38) - uVar3);\n            uVar8 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            goto code_r0x00430d55;\n        }\n    }\ncode_r0x00430ef0:\n    *(*0x20 + -0x48) = 0x430f05;\n    fcn.00431040();\ncode_r0x00430f05:\n    *(*0x20 + -0x48) = 0x430f0a;\n    fcn.0042fda0();\ncode_r0x00430f0a:\n    *(*0x20 + -0x48) = 0x430f0f;\n    fcn.0042fda0();\ncode_r0x00430f0f:\n    unaff_RBX = 0x4f0df8;\n    *(*0x20 + -0x48) = 0x430f25;\n    fcn.00431040();\ncode_r0x00430f25:\n    *(*0x20 + -0x48) = 0x430f2a;\n    in_RAX = fcn.0042fda0();\ncode_r0x00430f2b:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + -8) = 0x430f3a;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    *0x20 = puVar5;\n    goto code_r0x00430c60;\ncode_r0x00430ece:\n    *(*0x20 + -0x48) = 0x430ed3;\n    fcn.0042fda0();\ncode_r0x00430ed3:\n    *(*0x20 + -0x48) = 0x430ee6;\n    fcn.00431040();\ncode_r0x00430ee6:\n    *(*0x20 + -0x48) = 0x430eeb;\n    fcn.0042fda0();\ncode_r0x00430eeb:\n    *(*0x20 + -0x48) = 0x430ef0;\n    fcn.0042fda0();\n    goto code_r0x00430ef0;\ncode_r0x00430d55:\n    do {\n        uVar8 = uVar8 - 1;\n        if (uVar8 < 0) {\n            return 1;\n        }\n        iVar6 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x00430ee6;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x00430ed3;\n        }\n        if (uVar4 < 0) goto code_r0x00430ece;\n        uVar9 = 1 << (uVar8 & 0x1f) & -(uVar8 < 0x20);\n    } while ((uVar9 & uVar7) == 0);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0x18) = arg2;\n    uVar2 = *(*(unaff_RBX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6));\n    *(*0x20 + -0x10) = unaff_RBX + 0x18;\n    uVar4 = uVar7 & ~uVar9;\n    if (*0x5a1da0 == 0) {\n        *(unaff_RBX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x430ddc;\n        fcn.00459640(uVar2, arg2, uVar8, uVar4);\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(unaff_RBX + 0x38) - uVar3) = uVar4;\n    *(*0x20 + -0x20) = *(unaff_RBX + 0x20);\n    uVar2 = *(unaff_RBX + 0x18);\n    *(*0x20 + -0x48) = 0x430e05;\n    uVar3 = fcn.00430f60(uVar2, arg2, uVar8, uVar4);\n    arg1 = *(*0x20 + -0x20);\n    if ((arg1 == 0) || (*(arg1 + 0x31) == '\\0')) {\n        if (*0x5a1da0 == 0) {\n            unaff_RBX = *(*0x20 + 0x10);\n            *(unaff_RBX + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x430e3d;\n            uVar3 = fcn.00459660(arg1, 0, uVar8, uVar4);\n            unaff_RBX = *(*0x20 + 0x10);\n        }\n        if ((*(unaff_RBX + 0x20) == 0) || (*(*(unaff_RBX + 0x20) + 0x30) == '\\0')) {\n            arg2 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar8 = *(*0x20 + -0x28);\n            uVar7 = *(*0x20 + -0x2d);\n            goto code_r0x00430d55;\n        }\n        uVar8 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar8 = 1;\n    }\n    return uVar8;\n}\n",
        "token_count": 2171
    },
    "00430f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00430f60(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *arg2;\n    ulong *in_RAX;\n    ulong uVar1;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.00431780();\n        arg2 = puStackX8;\n        if (*0x5a1da0 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.00459540(arg1, noname_1, arg3, arg4);\n        }\n        arg2[4] = in_stack_00000000;\n        if (*0x5a1da0 == 0) {\n            arg2[5] = &puStackX8;\n        }\n        else {\n            arg1 = arg2 + 5;\n            fcn.00459540(arg1, arg2, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x5a1da0 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.00459540(arg1, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 420
    },
    "00431040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431040(ulong param_1, ulong param_2, int64_t param_3, char *param_4)\n\n{\n    char **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    ulong unaff_RBX;\n    char *pcVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong uVar11;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*(iVar4 + 0x90) == unaff_R14) {\n                if (*(iVar4 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar4 + 0xd0) == 0) {\n                        if (*(iVar4 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x5a1da0 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x431125;\n                                fcn.004596a0(param_1, unaff_R14 + 0x20, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x5a1bac = *0x5a1bac + 1;\n                            *(*0x20 + -0xc0) = 0x431152;\n                            fcn.004308a0(*0x20 + 8);\ncode_r0x00431152:\n                            do {\n                                iVar4 = *(*0x20 + -0x48);\n                                pcVar12 = *(iVar4 + 0x28);\n                                if (pcVar12 == NULL) {\n                                    *(*0x20 + -0xc0) = 0x4313ec;\n                                    fcn.00430620();\n                                    *(*0x20 + -0xc0) = 0x4313fa;\n                                    fcn.00431c80();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar4 + 0x28;\n                                if (*pcVar12 != '\\0') {\n                                    if (*(pcVar12 + 0x20) != 0) {\n                                        *(*(pcVar12 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x5a1da0 == 0) {\n                                        *(pcVar12 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x4311a7;\n                                        iVar4 = fcn.004596a0(iVar7, pcVar12 + 0x20, param_3, param_4);\n                                    }\n                                    if (pcVar12[2] == '\\0') {\n                                        if (*0x5a1da0 == 0) {\n                                            *(pcVar12 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x4311d4;\n                                            iVar4 = fcn.004596a0(iVar7, pcVar12 + 0x18, param_3, param_4);\n                                        }\n                                        uVar5 = *(pcVar12 + 0x28);\n                                        if (*0x5a1da0 == 0) {\n                                            *(iVar4 + 0x28) = uVar5;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x4311f2;\n                                            fcn.00459660(iVar7, uVar5, param_3, param_4);\n                                        }\n                                        *(*0x20 + -0xc0) = 0x4311fa;\n                                        fcn.004300a0(iVar7, uVar5);\n                                        goto code_r0x00431152;\n                                    }\n                                }\n                                *pcVar12 = '\\x01';\n                                pcVar8 = pcVar12 + 0x20;\n                                if (*0x5a1da0 == 0) {\n                                    *(pcVar12 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431232;\n                                    fcn.004596a0(iVar7, pcVar8, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = pcVar12;\n                                *(*0x20 + -0x60) = pcVar8;\n                                if (pcVar12[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x43128f;\n                                    uVar5 = fcn.00431780();\n                                    *(*0x20 + -0x40) = uVar5;\n                                    pcVar2 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x4312a2;\n                                    (*pcVar2)();\n                                    iVar4 = *(*0x20 + -0x70);\n                                    cVar3 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x431252;\n                                    cVar3 = fcn.00430c60(iVar7, pcVar8, param_3, param_4);\n                                    if (cVar3 == '\\0') {\n                                        iVar4 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar4 = *(*0x20 + -0x70);\n                                        if (*(*(iVar4 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar3;\n                                            *(*0x20 + -0xc0) = 0x431277;\n                                            fcn.004308a0(0);\n                                            cVar3 = *(*0x20 + -0x9a);\n                                            iVar4 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar7 = *(*0x20 + -0x48);\n                                if (*(iVar7 + 0x28) != iVar4) goto code_r0x00431585;\n                                if (*0x5a1da0 == 0) {\n                                    *(iVar4 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4312ec;\n                                    cVar3 = fcn.004596a0(iVar7, iVar4, param_3, param_4);\n                                }\n                                uVar5 = *(iVar4 + 0x10);\n                                *(*0x20 + -0x98) = uVar5;\n                                uVar11 = *(iVar4 + 8);\n                                *(*0x20 + -0x88) = uVar11;\n                                if (cVar3 != '\\0') {\n                                    if (*0x5a1da0 == 0) {\n                                        *(iVar4 + 0x18) = 0;\n                                    }\n                                    else {\n                                        param_4 = NULL;\n                                        *(*0x20 + -0xc0) = 0x43132a;\n                                        cVar3 = fcn.004596e0(iVar7, uVar5, iVar4);\n                                    }\n                                    *(*0x20 + -0x99) = cVar3;\n                                    if (*0x5a1da0 == 0) {\n                                        *(iVar7 + 0x28) = *(iVar4 + 0x28);\n                                        param_3 = iVar4;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431354;\n                                        fcn.00459680(iVar7, uVar5, iVar4, param_4);\n                                        param_3 = iVar4;\n                                    }\n                                    *(*0x20 + -0xc0) = 0x43135c;\n                                    fcn.004300a0(iVar7, uVar5);\n                                    cVar3 = *(*0x20 + -0x99);\n                                    iVar7 = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x98);\n                                    uVar11 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar4 = *(*0x20 + -0x28);\n                            if (*0x5a1da0 == 0) {\n                                *(iVar7 + 0x20) = iVar4;\n                                pcVar12 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar12 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x4313a5;\n                                cVar3 = fcn.00459680(iVar7, uVar5, param_3, param_4);\n                            }\n                            if (((iVar4 == 0) || (*(iVar4 + 0x32) == '\\0')) || (*(iVar4 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x5a1bac = *0x5a1bac + -1;\n                                pcVar8 = *(iVar7 + 0x28);\n                                if (cVar3 == '\\0') {\n                                    pcVar6 = pcVar8;\n                                    pcVar9 = *(pcVar8 + 0x28);\n                                    pcVar8 = *(pcVar8 + 0x28);\n                                }\n                                else {\n                                    pcVar6 = NULL;\n                                    pcVar9 = pcVar8;\n                                    pcVar8 = 0x5a1bac;\n                                }\n                                while ((pcVar9 != NULL && (*pcVar9 == '\\0'))) {\n                                    if (pcVar9[2] == '\\0') {\n                                        ppcVar1 = pcVar9 + 0x28;\n                                        pcVar6 = pcVar9;\n                                        pcVar9 = *ppcVar1;\n                                        pcVar8 = *ppcVar1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar6;\n                                        if (pcVar6 == NULL) {\n                                            uVar11 = *(pcVar9 + 0x28);\n                                            if (*0x5a1da0 == 0) {\n                                                *(iVar7 + 0x28) = uVar11;\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x431499;\n                                                fcn.004596c0(iVar7, uVar5, uVar11, pcVar12);\n                                                param_4 = pcVar12;\n                                            }\n                                        }\n                                        else {\n                                            uVar11 = *(pcVar9 + 0x28);\n                                            if (*0x5a1da0 == 0) {\n                                                *(pcVar6 + 0x28) = uVar11;\n                                            }\n                                            else {\n                                                param_4 = pcVar6 + 0x28;\n                                                *(*0x20 + -0xc0) = 0x43146a;\n                                                fcn.004596c0(iVar7, uVar5, uVar11, param_4);\n                                            }\n                                        }\n                                        uVar11 = *(pcVar9 + 0x28);\n                                        *(*0x20 + -0x78) = uVar11;\n                                        *(*0x20 + -0xc0) = 0x4314aa;\n                                        fcn.004300a0(uVar11, uVar5);\n                                        iVar7 = *(*0x20 + -0x48);\n                                        uVar5 = *(*0x20 + -0x98);\n                                        uVar11 = *(*0x20 + -0x88);\n                                        pcVar12 = *(*0x20 + -0x50);\n                                        pcVar9 = *(*0x20 + -0x78);\n                                        pcVar6 = *(*0x20 + -0x80);\n                                        pcVar8 = pcVar9;\n                                    }\n                                }\n                                if (*0x5a1da0 == 0) {\n                                    *(iVar7 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x4314e9;\n                                    fcn.00459680(iVar7, uVar5, pcVar8, param_4);\n                                }\n                                while( true ) {\n                                    iVar4 = *(iVar7 + 0x20);\n                                    if (iVar4 == 0) goto code_r0x00431545;\n                                    if (*(iVar4 + 0x31) == '\\0') break;\n                                    if (*0x5a1da0 == 0) {\n                                        *(iVar7 + 0x20) = *(iVar4 + 0x18);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x431510;\n                                        fcn.00459680(iVar7, uVar5, pcVar8, param_4);\n                                    }\n                                }\n                                if (iVar4 == 0) goto code_r0x00431545;\n                                do {\n                                    *(iVar7 + 0x110) = uVar11;\n                                    *(iVar7 + 0x118) = uVar5;\n                                    *(*0x20 + -0xc0) = 0x431531;\n                                    fcn.00457160();\n                                    *(*0x20 + -0xc0) = 0x431545;\n                                    fcn.004317e0();\ncode_r0x00431545:\n                                    *(iVar7 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar7 + 0x110) = *(iVar4 + 0x28);\n                            *(iVar7 + 0x118) = *(iVar4 + 0x20);\n                            *(*0x20 + -0xc0) = 0x431573;\n                            fcn.00457160();\n                            *(*0x20 + -0xc0) = 0x431585;\n                            fcn.004317e0();\ncode_r0x00431585:\n                            *(*0x20 + -0xc0) = 0x431596;\n                            fcn.004317e0();\n                        }\n                        *(*0x20 + -0xc0) = 0x43159b;\n                        fcn.004330a0();\n                        *(*0x20 + -0xc0) = 0x4315ac;\n                        fcn.004339a0();\n                        *(*0x20 + -0xc0) = 0x4315b1;\n                        fcn.00433120();\n                        *(*0x20 + -0xc0) = 0x4315c6;\n                        fcn.00407580();\n                        *(*0x20 + -0xc0) = 0x4315cb;\n                        fcn.004330a0();\n                        *(*0x20 + -0xc0) = 0x4315d0;\n                        fcn.00433300();\n                        *(*0x20 + -0xc0) = 0x4315d5;\n                        fcn.00433120();\n                        *(*0x20 + -0xc0) = 0x4315e6;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0xc0) = 0x4315eb;\n                    fcn.004330a0();\n                    *(*0x20 + -0xc0) = 0x4315fc;\n                    fcn.004339a0();\n                    *(*0x20 + -0xc0) = 0x431605;\n                    fcn.00433120();\n                    *(*0x20 + -0xc0) = 0x43161a;\n                    fcn.00407580();\n                    *(*0x20 + -0xc0) = 0x43161f;\n                    fcn.004330a0();\n                    *(*0x20 + -0xc0) = 0x431625;\n                    fcn.00433300();\n                    *(*0x20 + -0xc0) = 0x43162a;\n                    fcn.00433120();\n                    *(*0x20 + -0xc0) = 0x43162f;\n                    fcn.004330a0();\n                    *(*0x20 + -0xc0) = 0x431645;\n                    fcn.004339a0();\n                    *(*0x20 + -0xc0) = 0x43164a;\n                    fcn.00433120();\n                    iVar4 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar4 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar4 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x431670;\n                    fcn.004330a0();\n                    *(*0x20 + -0xc0) = 0x43167f;\n                    fcn.004339a0();\n                    *(*0x20 + -0xc0) = 0x431685;\n                    fcn.00433120();\n                    *(*0x20 + -0xc0) = 0x43168a;\n                    fcn.004330a0();\n                    *(*0x20 + -0xc0) = 0x43168f;\n                    fcn.00433300();\n                    *(*0x20 + -0xc0) = 0x431694;\n                    fcn.00433120();\n                    *(*0x20 + -0xc0) = 0x4316a5;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0xc0) = 0x4316aa;\n                fcn.004330a0();\n                *(*0x20 + -0xc0) = 0x4316bb;\n                fcn.004339a0();\n                *(*0x20 + -0xc0) = 0x4316c5;\n                fcn.00433120();\n                *(*0x20 + -0xc0) = 0x4316da;\n                fcn.00407580();\n                *(*0x20 + -0xc0) = 0x4316df;\n                fcn.004330a0();\n                *(*0x20 + -0xc0) = 0x4316e5;\n                fcn.00433300();\n                *(*0x20 + -0xc0) = 0x4316ea;\n                fcn.00433120();\n                *(*0x20 + -0xc0) = 0x4316fb;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0xc0) = 0x431705;\n            fcn.004330a0();\n            *(*0x20 + -0xc0) = 0x431716;\n            fcn.004339a0();\n            *(*0x20 + -0xc0) = 0x43171b;\n            fcn.00433120();\n            *(*0x20 + -0xc0) = 0x431730;\n            fcn.00407580();\n            *(*0x20 + -0xc0) = 0x431735;\n            fcn.004330a0();\n            *(*0x20 + -0xc0) = 0x43173a;\n            fcn.00433300();\n            *(*0x20 + -0xc0) = 0x43173f;\n            fcn.00433120();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x431750;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x431765;\n        fcn.00457320();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 4817
    },
    "004317a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004317a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00431b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431b20(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xc4) == 0) {\n        *(*(unaff_R14 + 0x30) + 0xc4) = in_EAX;\n    }\n    fcn.004571e0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "00431e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00431e00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x57a8a0 == 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n                fcn.0042d600();\n            }\n            fcn.0042d600();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x5a1ba4;\n    LOCK();\n    *0x5a1ba4 = *0x5a1ba4 + 1;\n    fcn.00409a60(iVar2);\n    if ((0 < *0x5a2010) || (0 < *0x5a200c)) {\n        fcn.0043ee20();\n    }\n    fcn.00435740();\n    return 1;\n}\n",
        "token_count": 503
    },
    "00431f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00431f80(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.00433120();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    uVar5 = *0x53a28c;\n    uVar2 = *(*(unaff_R14 + 0x30) + 0xc4);\n    if (uVar2 == 0) {\n        bVar7 = (*0x53a28c >> 1 & 1) != 0;\n    }\n    else {\n        bVar7 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar6 = uVar1;\n    if ((uVar1 == 0) && (uVar6 = *0x53a28c >> 2,  1 < uVar2)) {\n        uVar6 = 2;\n    }\n    if (uVar6 != 0) {\n        iVar3 = (*(in_RAX + 0x30))[0x12];\n        if (**(in_RAX + 0x30) == in_RAX) {\n            if ((1 < uVar6) || (1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n                fcn.00451080(0);\n            }\n        }\n        else {\n            fcn.004330a0();\n            fcn.00433300();\n            fcn.00433120();\n            fcn.00451e40();\n            fcn.00451080(0);\n        }\n        if ((*0x5a1b43 == '\\0') && (iVar3 != in_RAX | bVar7)) {\n            *0x5a1b43 = '\\x01';\n            fcn.00452080();\n        }\n    }\n    fcn.00409cc0();\n    LOCK();\n    iVar4 = *0x5a1ba4 + -1;\n    bVar7 = *0x5a1ba4 != 1;\n    *0x5a1ba4 = iVar4;\n    if (bVar7) {\n        fcn.00409aa0();\n        fcn.00409aa0();\n    }\n    return uVar5 & 1;\n}\n",
        "token_count": 758
    },
    "00432240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00432240(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    if ((in_RAX == 0) || (*(iVar1 + 0x90) != in_RAX)) {\n        return 0;\n    }\n    if ((((*(iVar1 + 0xd8) == 0) && (*(iVar1 + 0xc0) == 0)) && (*(iVar1 + 0xc4) == 0)) &&\n       ((*(iVar1 + 0xd0) == 0 && (*(iVar1 + 0xdc) == 0)))) {\n        if (((*(in_RAX + 0x90) & 0xffffefff) == 2) && (*(in_RAX + 0x70) == 0)) {\n            if (*(iVar1 + 0x2b0) != 0) {\n                return 0;\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "004322c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004322c0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.004490a0();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x24) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "00432860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00432860(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x4328b2;\n                fcn.004357e0(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x4328cc;\n                    fcn.00435520(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x432905;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x432916;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x432925;\n            fcn.00433920();\n            *(*0x20 + -0x50) = 0x432936;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x432945;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x432956;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x432965;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x43296a;\n            fcn.00433300();\n            *(*0x20 + -0x50) = 0x43296f;\n            fcn.00433120();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x43298f;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x4329a5;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x4329af;\n            fcn.00433920();\n            *(*0x20 + -0x50) = 0x4329c5;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x4329cf;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x4329e5;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x4329f0;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x4329f5;\n            fcn.00433300();\n            *(*0x20 + -0x50) = 0x4329fa;\n            fcn.00433120();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x432a0b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x432a1e;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1160
    },
    "0045b6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b6c0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + 0x28);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.00457160();\n    }\n    else {\n        fcn.00457160();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "00433120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433120(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.00409cc0();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00433180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00433180(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x4331bd;\n            fcn.00432f20(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x0043325d:\n                *(*0x20 + -0x38) = 0x433271;\n                fcn.00454c40(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x0043325d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x43322c;\n                fcn.0045a340(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x43328d;\n            in_RAX = fcn.00459a60(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4332a5;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "00434240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00434240(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x5a1da0 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x4342be;\n                    fcn.00459680(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x4342ca;\n                    fcn.00459540(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x434316;\n                fcn.00457160();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x434332;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x434350;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 826
    },
    "00434460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00434460(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t arg3;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    uVar5 = *(iVar9 + 0xa0);\n    uVar10 = uVar5;\n    if (*(uVar5 + 0x9b8) != 0) goto code_r0x004344c5;\n    iVar12 = unaff_R14;\n    fcn.00409aa0();\n    arg2 = uVar5 + 0x9b0;\n    iStack40 = iVar9;\n    uStack24 = arg2;\n    uStack16 = uVar5;\n    do {\n        while ((uVar10 = *0x54e760,  uVar11 = *(uVar5 + 0x9c0) >> 1,  *(uVar5 + 0x9b8) < uVar11 &&\n               (uVar11 = *0x54e760,  *0x54e760 != 0))) {\n            if (*0x5a1da0 == 0) {\n                puVar1 = *0x54e760 + 8;\n                *0x54e760 = *(*0x54e760 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.004596e0(uVar5, arg2, *0x54e760);\n                fcn.004596e0(uVar5, arg2, uVar10);\n            }\n            iVar9 = *(uVar5 + 0x9b8);\n            uVar11 = iVar9 + 1;\n            iVar12 = *(uVar5 + 0x9b0);\n            iVar6 = iVar12;\n            if (*(uVar5 + 0x9c0) < uVar11) {\n                arg3 = uVar10;\n                iVar6 = fcn.00443500(iVar9);\n                *(uStack16 + 0x9c0) = iVar9;\n                uVar5 = uStack16;\n                arg2 = uStack24;\n                if (*0x5a1da0 == 0) {\n                    *(uStack16 + 0x9b0) = iVar6;\n                    iVar9 = iVar12;\n                }\n                else {\n                    iVar6 = fcn.00459540(iVar9, uStack16, arg3, uVar11);\n                    iVar9 = iVar12;\n                }\n            }\n            iVar12 = iVar9 + 1;\n            *(uVar5 + 0x9b8) = iVar12;\n            if (*0x5a1da0 == 0) {\n                *(iVar6 + iVar9 * 8) = uVar10;\n            }\n            else {\n                fcn.004596c0(uVar5, arg2, uVar10, iVar12);\n            }\n        }\n        fcn.00409cc0();\n        iVar9 = iStack40;\n        uVar10 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar7 = fcn.0040bba0();\n            iVar6 = *(uStack16 + 0x9b8);\n            iVar4 = *(uStack16 + 0x9b0);\n            arg2 = iVar6 + 1U;\n            iVar8 = iVar4;\n            if (*(uStack16 + 0x9c0) < iVar6 + 1U) {\n                iVar8 = fcn.00443500(iVar6);\n                *(uStack16 + 0x9c0) = iVar6;\n                if (*0x5a1da0 == 0) {\n                    *(uStack16 + 0x9b0) = iVar8;\n                    arg2 = uStack16;\n                    iVar6 = iVar4;\n                }\n                else {\n                    iVar8 = fcn.00459540(iVar6, uStack16, uVar11, iVar12);\n                    arg2 = uVar10;\n                    iVar6 = iVar4;\n                }\n            }\n            *(uVar10 + 0x9b8) = iVar6 + 1;\n            if (*0x5a1da0 == 0) {\n                *(iVar8 + iVar6 * 8) = uVar7;\n            }\n            else {\n                fcn.00459540(uVar10, arg2, iVar6 + 1, iVar12);\n            }\n        }\ncode_r0x004344c5:\n        uVar5 = *(uVar10 + 0x9b8);\n        iVar12 = *(uVar10 + 0x9b0);\n        uVar11 = uVar5 - 1;\n        if (uVar11 < uVar5) {\n            iVar6 = *(iVar12 + -8 + uVar5 * 8);\n            if (*0x5a1da0 == 0) {\n                *(iVar12 + -8 + uVar5 * 8) = 0;\n            }\n            else {\n                iVar12 = 0;\n                fcn.004596e0(uVar11, arg2, uVar10);\n            }\n            uVar5 = *(uVar10 + 0x9c0);\n            if (uVar11 <= uVar5) {\n                *(uVar10 + 0x9b8) = uVar11;\n                if (*(iVar6 + 0x18) == 0) {\n                    iVar3 = *(iVar9 + 0xd8);\n                    *(iVar9 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar6;\n                }\n                fcn.004317e0();\n            }\n            uVar5 = fcn.00459a60(uVar11, uVar5);\n        }\n        arg2 = uVar5;\n        fcn.004599e0(uVar5);\n    } while( true );\n}\n",
        "token_count": 1494
    },
    "00434760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434760(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg1;\n    uint64_t uVar6;\n    uint64_t arg2;\n    int64_t arg2_00;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    int64_t iVar9;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    iVar4 = 0;\n                                    iVar5 = 0;\n                                    iVar9 = arg3;\n                                    uVar6 = arg2;\n                                    while( true ) {\n                                        uVar8 = *(uVar6 + 0x9b8);\n                                        if (uVar8 <= *(uVar6 + 0x9c0) >> 1) break;\n                                        arg1_00 = uVar8 - 1;\n                                        if (uVar8 <= arg1_00) {\ncode_r0x00434a11:\n                                            fcn.004599e0(uVar8);\n                                            goto code_r0x00434a1c;\n                                        }\n                                        iVar7 = *(*(uVar6 + 0x9b0) + -8 + uVar8 * 8);\n                                        if (*0x5a1da0 == 0) {\n                                            *(*(uVar6 + 0x9b0) + -8 + uVar8 * 8) = 0;\n                                            arg1 = iVar4;\n                                            arg2_00 = iVar5;\n                                            iVar4 = iVar7;\n                                        }\n                                        else {\n                                            fcn.00459680(iVar4, iVar5, iVar9, uVar6);\n                                            arg1 = iVar4;\n                                            arg2_00 = iVar5;\n                                            iVar4 = iVar7;\n                                        }\n                                        uVar8 = *(uVar6 + 0x9c0);\n                                        if (uVar8 < arg1_00) {\n                                            fcn.00459a60(arg1_00, uVar8);\n                                            goto code_r0x00434a11;\n                                        }\n                                        *(uVar6 + 0x9b8) = arg1_00;\n                                        iVar5 = iVar4;\n                                        if (arg2_00 != 0) {\n                                            if (*0x5a1da0 == 0) {\n                                                *(arg1 + 8) = iVar4;\n                                                iVar5 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.00459680(arg1, arg2_00, iVar9, uVar6);\n                                                iVar5 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    iVar7 = iVar5;\n                                    fcn.00409aa0();\n                                    if (*0x5a1da0 == 0) {\n                                        *(iVar4 + 8) = *0x54e760;\n                                        *0x54e760 = iVar5;\n                                    }\n                                    else {\n                                        fcn.00459640(*0x54e760, iVar7, iVar9, uVar6);\n                                        fcn.00459640(iVar5, iVar7, iVar9, uVar6);\n                                    }\n                                    fcn.00409cc0();\n                                }\n                                iVar5 = *(arg2 + 0x9b8);\n                                uVar6 = iVar5 + 1;\n                                iVar9 = *(arg2 + 0x9b0);\n                                iVar4 = iVar9;\n                                if (*(arg2 + 0x9c0) < uVar6) {\n                                    iVar7 = arg3;\n                                    uVar8 = arg2;\n                                    iVar4 = fcn.00443500(iVar5);\n                                    *(arg2 + 0x9c0) = iVar5;\n                                    iVar5 = iVar9;\n                                    if (*0x5a1da0 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                    }\n                                    else {\n                                        iVar4 = fcn.00459540(arg2 + 0x9b0, arg2, iVar7, uVar8);\n                                        uVar6 = arg2;\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = iVar5 + 1;\n                                if (*0x5a1da0 == 0) {\n                                    *(iVar4 + iVar5 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.00459540(iVar5 + 1, uVar6, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x00434a1c:\n                            fcn.004317e0();\n                        }\n                        fcn.004317e0();\n                    }\n                    fcn.004317e0();\n                }\n                fcn.004317e0();\n            }\n            fcn.004317e0();\n        }\n        fcn.004317e0();\n    }\n    fcn.004317e0();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1389
    },
    "00434c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00434c00(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x434c3b;\n                fcn.00409aa0();\n                uVar2 = *0x54dcf0;\n                uVar4 = *0x54dcf8 + 1;\n                arg1 = uVar4;\n                uVar3 = *0x54dcf0;\n                uVar6 = *0x54dcf8;\n                if (*0x54dd00 < uVar4) {\n                    *(*0x20 + -0x58) = 0x434c6e;\n                    arg1 = *0x54dcf8;\n                    uVar3 = fcn.00443500(*0x54dcf8);\n                    uVar6 = uVar2;\n                    uVar2 = uVar3;\n                    *0x54dd00 = arg1;\n                    if (*0x5a1da0 != 0) {\n                        *(*0x20 + -0x58) = 0x434c93;\n                        uVar3 = fcn.00459540(arg1, uVar4, param_3, param_4);\n                        uVar2 = *0x54dcf0;\n                    }\n                }\n                *0x54dcf0 = uVar2;\n                *0x54dcf8 = uVar6 + 1;\n                if (*0x5a1da0 == 0) {\n                    *(uVar3 + uVar6 * 8) = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x434cc6;\n                    fcn.00459660(arg1, *(*0x20 + 8), param_3, param_4);\n                }\n                if (*0x54dcf8 != 0) {\n                    uVar4 = *0x54d590;\n                    if ((*0x54d590 != *0x54dcf0) && (uVar4 = *0x54dcf0,  *0x5a1da0 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x54dcf0;\n                        *(*0x20 + -0x58) = 0x434d05;\n                        fcn.00402d00();\n                        uVar4 = *(*0x20 + -0x10);\n                    }\n                    *0x54d590 = uVar4;\n                    uVar1 = *0x5a1c08;\n                    *0x5a1c08 = *0x54dcf8;\n                    *(*0x20 + -0x58) = 0x434d33;\n                    fcn.00409cc0(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x434d47;\n                fcn.004599e0(0);\n            }\n            *(*0x20 + -0x58) = 0x434d58;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x434d65;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 965
    },
    "00435320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435320(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    ulong arg1;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.00451960(0x20);\n    }\n    fcn.00409aa0();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.004352c0();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.004594a0();\n    fcn.004593e0(uVar4, arg2);\n    uVar3 = fcn.004594a0();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x5a1da0 == 0) {\n        *(in_RAX + 0x120) = *0x54d598;\n    }\n    else {\n        fcn.00459640(*0x54d598, arg2_00, param_3, param_4);\n    }\n    if (*0x5a1da0 != '\\0') {\n        fcn.00402d00();\n    }\n    arg1 = 0x54d598;\n    *0x54d598 = in_RAX;\n    fcn.00409cc0();\n    uVar4 = fcn.0040bba0();\n    if (*0x5a1da0 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.00459540(arg1, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "00435520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00435520(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x31) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x553d30 != '\\0') {\n                *(*0x20 + -0x58) = 0x43554f;\n                fcn.0044e200();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *(unaff_R14 + 0x30);\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x20) = uVar5;\n                *(*0x20 + -0x58) = 0x435591;\n                fcn.00435c80(1);\n                *(*0x20 + -0x58) = 0x4355b0;\n                fcn.0043fd40(*(*0x20 + -0x31));\n                *(*0x20 + -0x58) = 0x4355b5;\n                fcn.004382a0();\n                iVar3 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x58) = 0x43560c;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x43561d;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x435627;\n            fcn.00433920();\n            *(*0x20 + -0x58) = 0x435638;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x435645;\n            fcn.004337a0();\n            *(*0x20 + -0x58) = 0x435656;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x435665;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x43566a;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x43566f;\n            fcn.00433120();\n            uVar4 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x30) = uVar4;\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x58) = 0x43568f;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x4356a5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x4356af;\n            fcn.00433920();\n            *(*0x20 + -0x58) = 0x4356c5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x4356cf;\n            fcn.004337a0();\n            *(*0x20 + -0x58) = 0x4356e5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x4356f0;\n            fcn.004336a0();\n            *(*0x20 + -0x58) = 0x4356f5;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x4356fa;\n            fcn.00433120();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x58) = 0x43570b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x43571f;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1393
    },
    "00435c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00435c80(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint32_t unaff_EBX;\n    uint64_t uVar9;\n    ulong uStack64;\n    int64_t *piStack40;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x436000));\n        uStack64 = auStack24;\n        fcn.004571e0();\n    }\n    iVar8 = 0;\n    piVar6 = NULL;\n    while( true ) {\n        LOCK();\n        puVar1 = in_RAX + 0x90;\n        uVar2 = *puVar1;\n        if (unaff_EBX == uVar2) {\n            *puVar1 = arg1;\n            uVar4 = unaff_EBX;\n        }\n        else {\n            uVar4 = *puVar1;\n        }\n        piVar5 = uVar4;\n        if (unaff_EBX == uVar2) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.004317e0();\n            pcVar3 = swi(3);\n            piVar6 = (*pcVar3)();\n            return piVar6;\n        }\n        if (iVar8 == 0) {\n            fcn.0045b2e0();\n            piVar6 = uStack64 + 0x271;\n        }\n        fcn.0045b2e0();\n        piStack40 = piVar6;\n        iStack32 = iVar8;\n        if (uStack64 < piVar6) {\n            iVar8 = 0;\n            while ((piVar6 = piStack40,  iVar8 < 10 && (*(in_RAX + 0x90) != unaff_EBX))) {\ncode_r0x00435f8c:\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.00459100();\n                iVar8 = iVar8 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x4dc540;\n            fcn.004571e0();\n            fcn.0045b2e0();\n            piVar6 = 0x4dcf04;\n        }\n        iVar8 = iStack32 + 1;\n    }\n    if (unaff_EBX == 2) {\n        if ((*(in_RAX + 0xbd) & 7) == 0) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045b2e0();\n            piVar5 = uStack64 - *(in_RAX + 0xc0);\n            *(in_RAX + 200) = *(in_RAX + 200) + piVar5;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045b2e0();\n            *(in_RAX + 0xc0) = uStack64;\n            piVar5 = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            uVar9 = *(in_RAX + 200);\n            if (uVar9 < 0) {\n                LOCK();\n                piVar5 = *0x54fe58;\n                *0x54fe58 = *0x54fe58 + 1;\n            }\n            else {\n                if (uVar9 < 0x10) {\n                    iVar8 = 0;\n                }\n                else {\n                    iVar7 = 0x3f;\n                    if (uVar9 != 0) {\n                        for (; uVar9 >> iVar7 == 0; iVar7 = iVar7 + -1) {\n                        }\n                    }\n                    if (uVar9 == 0) {\n                        iVar7 = -1;\n                    }\n                    iVar8 = iVar7 + -3;\n                    if (iVar8 * 0x10 < 0x2d0) {\n                        iVar7 = uVar9 >> ((iVar7 - 4U | ~-(iVar7 - 4U < 0x40)) & 0x3f);\n                        uVar9 = iVar7 + (((iVar7 >> 0x3f) >> 0x3c) + iVar7 >> 4) * -0x10;\n                    }\n                    else {\n                        iVar8 = 0x2c;\n                        uVar9 = 0xf;\n                    }\n                }\n                uVar9 = iVar8 * 0x10 + uVar9;\n                if (0x2cf < uVar9) {\n                    iVar8 = 0x2d0;\n                    fcn.00459a00(0x2d0);\n                    goto code_r0x00435f8c;\n                }\n                piVar5 = uVar9 * 8 + 0x54e7d8;\n                LOCK();\n                *piVar5 = *piVar5 + 1;\n            }\n            *(in_RAX + 200) = 0;\n        }\n    }\n    return piVar5;\n}\n",
        "token_count": 1321
    },
    "004360a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004360a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x436105;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x436118;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 400
    },
    "00436440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00436440(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar in_AL;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00436440:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x5a1b94 != 0) {\n            *(*0x20 + -0x60) = 0x436485;\n            uVar4 = fcn.0042b740();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x60) = 0x436494;\n            fcn.00439d00();\n        }\n        *(*0x20 + -0x60) = 0x4364a5;\n        fcn.00409aa0();\n        if (*0x5a1ba0 != 0) {\n            *0x5a1ba0 = 0;\n        }\n        *(*0x20 + -0x60) = 0x4364cb;\n        uVar4 = fcn.0043d4e0();\n        *(*0x20 + -0x18) = uVar4;\n        *0x54e780 = 0;\n        if (*0x54e790 != 0) {\n            *0x54e790 = 0;\n            *(*0x20 + -0x60) = 0x4364f9;\n            fcn.00409da0();\n        }\n        *(*0x20 + -0x60) = 0x436507;\n        fcn.00409cc0();\n        iVar5 = *(*0x20 + -0x18);\n        do {\n            if (iVar5 == 0) {\n                *(*0x20 + -0x60) = 0x436574;\n                fcn.0045b2e0();\n                iVar5 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x4365b3;\n                    fcn.0044cd00(0);\n                }\n                *(*0x20 + -0x60) = 0x4365b8;\n                fcn.004382a0();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar5 + 0xb1) != '\\0')) {\n                    *(iVar5 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar5 + 0x38);\n            *(*0x20 + -0x10) = *(iVar5 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x43656c;\n                fcn.004376e0(0xffffffffffffffff);\n            }\n            else {\n                *(iVar5 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x004365f3;\n                *(iVar3 + 0xa8) = iVar5;\n                *(*0x20 + -0x60) = 0x436559;\n                fcn.00409da0();\n            }\n            iVar5 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00436606;\ncode_r0x004365f3:\n    *(*0x20 + -0x60) = 0x436605;\n    in_AL = fcn.004317e0();\ncode_r0x00436606:\n    puVar6[8] = in_AL;\n    *(puVar6 + -8) = 0x43660f;\n    fcn.00457320();\n    in_AL = puVar6[8];\n    *0x20 = puVar6;\n    goto code_r0x00436440;\n}\n",
        "token_count": 1131
    },
    "004367c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004367c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x5a1b42 == '\\0') {\n        *0x5a1b42 = '\\x01';\n        fcn.00437300();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00436860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00436860(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uchar in_AL;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if (iVar2 != 0x54e2c0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x30) = 0x43689a;\n                fcn.0042e840();\n                iVar2 = *(*(*0x20 + -0x18) + 0x50);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x30) = 0x4368b4;\n                    fcn.00444560();\n                    if (*0x5a1da0 == 0) {\n                        iVar2 = *(*0x20 + -0x18);\n                        *(iVar2 + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x4368e5;\n                        iVar2 = fcn.00459660(*(*0x20 + -0x18) + 0x50, 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x4368f5;\n                fcn.00409aa0(iVar2);\n                iVar2 = *(*0x20 + -0x18);\n                piVar3 = 0x54d598;\n                while (iVar5 = *piVar3,  iVar5 != 0) {\n                    if (iVar5 == iVar2) {\n                        iVar5 = *(iVar2 + 0x120);\n                        if (*0x5a1da0 == 0) {\n                            *piVar3 = iVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x436938;\n                            fcn.00459660(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(iVar2 + 0xec) = 2;\n                        if (*0x5a1da0 == 0) {\n                            *(iVar2 + 0x270) = *0x54e778;\n                            *0x54e778 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x43696f;\n                            iVar5 = *0x54e778;\n                            fcn.00459660(iVar2, *0x54e778, param_3, param_4);\n                            *(*0x20 + -0x30) = 0x43697b;\n                            fcn.00459640(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x30) = 0x436989;\n                        fcn.00409cc0();\n                        iVar2 = *0x5a1ca8;\n                        LOCK();\n                        *0x5a1ca8 = *0x5a1ca8 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x4369a6;\n                        fcn.0043dee0(*(*0x20 + -0x18), iVar2);\n                        *(*0x20 + -0x30) = 0x4369ab;\n                        fcn.00437f80();\n                        *(*0x20 + -0x30) = 0x4369b9;\n                        fcn.00409aa0();\n                        *0x54e6e0 = *0x54e6e0 + 1;\n                        *(*0x20 + -0x30) = 0x4369c5;\n                        fcn.0043e0a0();\n                        *(*0x20 + -0x30) = 0x4369d3;\n                        fcn.00409cc0();\n                        *(*0x20 + -0x30) = 0x4369dd;\n                        fcn.0042e8e0();\n                        if (*(*0x20 + 8) != '\\0') {\n                            uVar1 = *(*(*0x20 + -0x18) + 0xec);\n                            *(*(*0x20 + -0x18) + 0xec) = 1;\n                            return uVar1;\n                        }\n                        *(*0x20 + -0x30) = 0x436a11;\n                        uVar4 = fcn.0042e440();\n                        return uVar4;\n                    }\n                    piVar3 = iVar5 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x436a2c;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x30) = 0x436a31;\n            fcn.0043dee0();\n            *(*0x20 + -0x30) = 0x436a36;\n            fcn.00437f80();\n            *(*0x20 + -0x30) = 0x436a45;\n            fcn.00409aa0();\n            *0x54e6e0 = *0x54e6e0 + 1;\n            *(*0x20 + -0x30) = 0x436a51;\n            fcn.0043e0a0();\n            *(*0x20 + -0x30) = 0x436a5f;\n            fcn.00409cc0();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x436a76;\n            fcn.00409e20();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x436a9b;\n            in_AL = fcn.004317e0();\n        }\n        puVar6[8] = in_AL;\n        *(puVar6 + -8) = 0x436aa5;\n        fcn.00457320();\n        in_AL = puVar6[8];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1560
    },
    "00436ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00436ac0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x436b19;\n            fcn.00409aa0();\n            if (*0x54e7a8 == 0) {\n                *0x54e7a8 = *0x5a1b88 + -1;\n                if (*0x5a1da0 == 0) {\n                    *0x54e7a0 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x436b5c;\n                    fcn.00459540(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x54dd18;\n                iVar9 = *0x54dd10;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2278;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x436b9b;\n                fcn.0043eb60();\n                for (iVar8 = *0x54e6f0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2278) == 1) {\n                        *(iVar8 + 0x2278) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x436bda;\n                        (*pcVar6)();\n                        *0x54e7a8 = *0x54e7a8 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x54e7a8;\n                *(*0x20 + -0x68) = 0x436c05;\n                fcn.00409cc0();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x436c14;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x54dd10;\n                *(*0x20 + -0x40) = *0x54dd18;\n                iVar9 = *0x54dd10;\n                iVar10 = *0x54dd18;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2278) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                            param_3 = param_3 & 0xffffffffffffff00 | bVar13;\n                        }\n                        else {\n                            param_3 = 0;\n                        }\n                    }\n                    else {\n                        param_3 = 0;\n                    }\n                    if (param_3 != '\\0') {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x553d30 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x436c97;\n                            fcn.0044e3e0();\n                            *(*0x20 + -0x68) = 0x436ca5;\n                            fcn.0044dc60();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x436cb5;\n                        fcn.00437f80();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x436ceb;\n                        cVar7 = fcn.0040a200();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x436cda;\n                        fcn.0043eb60();\n                    }\n                    *0x54e7b0 = 0;\n                }\n                if (*0x54e7a8 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x54dd18 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x436d45;\n                            iVar8 = *0x54dd18;\n                            fcn.00409aa0();\n                            if (*0x5a1da0 == 0) {\n                                *0x54e7a0 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x436d69;\n                                fcn.00459640(0, iVar8, param_3, param_4);\n                            }\n                            *(*0x20 + -0x68) = 0x436d77;\n                            fcn.00409cc0();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x54dd10 + iVar8 * 8) + 0x2278) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x436dbe;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x68) = 0x436dcf;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x68) = 0x436de5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x436df0;\n        fcn.0045ba20();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1993
    },
    "00436e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00436e00(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2278;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x54e7a0)();\n    fcn.00409aa0();\n    iVar3 = *0x54e7a8 + -1;\n    bVar4 = *0x54e7a8 == 1;\n    *0x54e7a8 = iVar3;\n    if (bVar4) {\n        fcn.00409da0();\n    }\n    uVar2 = fcn.00409cc0();\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "00436ec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00436ec0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *noname_0;\n    int64_t iVar3;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004415e0();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar4 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.0043dd60();\n    }\n    if (*0x54e778 != 0) {\n        fcn.00409aa0();\n        iStack48 = *0x54e778;\n        iVar3 = 0;\n        while (iStack48 != 0) {\n            if (*(iStack48 + 0xec) == 2) {\n                arg1_00 = *(iStack48 + 0x270);\n                if (*0x5a1da0 == 0) {\n                    *(iStack48 + 0x270) = iVar3;\n                    iVar3 = iStack48;\n                    iStack48 = arg1_00;\n                }\n                else {\n                    fcn.00459540(arg1_00, arg2, in_R8, in_R9);\n                    iVar3 = iStack48;\n                    iStack48 = arg1_00;\n                }\n            }\n            else {\n                if (*(iStack48 + 0xec) == 0) {\n                    fcn.004571e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                }\n                iStack48 = *(iStack48 + 0x270);\n            }\n        }\n        if (*0x5a1da0 != 0) {\n            fcn.00459540(0, arg2, in_R8, in_R9);\n            iVar3 = *0x54e778;\n        }\n        *0x54e778 = iVar3;\n        fcn.00409cc0();\n    }\n    noname_0 = fcn.0040bba0();\n    if (*0x5a1da0 == 0) {\n        noname_0[0x11] = unaff_RBX;\n    }\n    else {\n        noname_0 = fcn.00459640(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    fcn.00435320();\n    iVar3 = fcn.0043bf60();\n    if (*0x5a1da0 == 0) {\n        *noname_0 = iVar3;\n    }\n    else {\n        iVar3 = fcn.00459540(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x5a1da0 == 0) {\n        *(iVar3 + 0x30) = noname_0;\n    }\n    else {\n        fcn.00459640(noname_0, arg2, in_R8, in_R9);\n    }\n    if (in_RAX == *(*(iVar4 + 0x30) + 0xa0)) {\n        fcn.0043dee0();\n    }\n    iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n    *(*(iVar4 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00441740();\n    return noname_0;\n}\n",
        "token_count": 957
    },
    "00437380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437380(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t noname_1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    noname_1 = fcn.00436ec0(0xffffffffffffffff);\n    iVar2 = fcn.0043bf60();\n    *(iVar2 + 0x40) = 0x459501;\n    iVar4 = *(iVar2 + 8) + -0x20;\n    *(iVar2 + 0x38) = iVar4;\n    *(iVar2 + 0x60) = 0;\n    *(iVar2 + 0x48) = iVar2;\n    *(iVar2 + 0x78) = *(iVar2 + 0x40);\n    *(iVar2 + 0x70) = iVar4;\n    *(iVar2 + 0x80) = *(iVar2 + 0x38);\n    fcn.00435c80(6);\n    iVar4 = noname_1;\n    if (*0x5a1da0 == 0) {\n        *(iVar2 + 0x30) = noname_1;\n    }\n    else {\n        iVar2 = fcn.00459660(iVar2 + 0x30, noname_1, param_3, param_4);\n    }\n    if (*0x5a1da0 == 0) {\n        *(iVar4 + 0x90) = iVar2;\n    }\n    else {\n        iVar2 = fcn.00459540(iVar4 + 0x90, iVar4, param_3, param_4);\n    }\n    *(iVar4 + 0x23c) = *(iVar4 + 0x23c) + 1;\n    *(iVar4 + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = iVar4;\n    LOCK();\n    iVar4 = *0x54e6a0 + 1;\n    *0x54e6a0 = *0x54e6a0 + 1;\n    *(iVar2 + 0x98) = iVar4;\n    fcn.00434c00();\n    iVar1 = *0x54e6e8;\n    LOCK();\n    *0x54e6e8 = *0x54e6e8 + 1;\n    uVar3 = fcn.004375e0(iVar1);\n    *(noname_1 + 0x128) = uVar3;\n    *0x5a1b6c = *0x5a1b6c + 1;\n    *0x5a1c48 = noname_1;\n    return;\n}\n",
        "token_count": 670
    },
    "004375e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437680)\n\nuint64_t fcn.004375e0(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x5a1c48 == 1) {\n            fcn.0045b2c0();\n        }\n        if ((*0x5a1c48 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x5a1b70 = *0x5a1b70 + 1;\n        }\n        fcn.0045b1e0();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x5a1c48;\n    *0x5a1c48 = *0x5a1c48 ^ *0x5a1c48 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "004376e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004376e0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x43771b;\n            iVar3 = fcn.00436ec0(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x437806;\n                fcn.00437880();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x437774;\n            fcn.00409aa0();\n            if (*0x5a1ea0 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x5a1e88;\n                *0x5a1e88 = iVar3;\n                if (*0x5a1e90 != '\\0') {\n                    *0x5a1e90 = '\\0';\n                    *(*0x20 + -0x30) = 0x4377bd;\n                    fcn.00409da0();\n                }\n                *(*0x20 + -0x30) = 0x4377cb;\n                fcn.00409cc0();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x43784b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x437865;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 934
    },
    "00437880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437880(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1b4a == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x437945;\n                fcn.004415e0();\n                *(*0x20 + -0x40) = 0x43794f;\n                fcn.0042e2e0();\n                *(*0x20 + -0x40) = 0x43795b;\n                fcn.00441740();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x54d4d0 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.00457120;\n                *(*0x20 + -0x40) = 0x4378ef;\n                fcn.004415e0();\n                *(*0x20 + -0x38) = *0x54d4d0;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x437909;\n                fcn.00459140();\n                *(*0x20 + -0x40) = 0x437929;\n                fcn.00441740();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x437976;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x437985;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 650
    },
    "004379a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004379a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x5a1ea0 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x5a1ea0 = 1;\n    fcn.004376e0(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00437b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437b80(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x437bd9;\n                        fcn.00409aa0();\n                        *(*0x20 + -0x30) = 0x437be7;\n                        fcn.0043f760();\n                        *(*0x20 + -0x30) = 0x437bf5;\n                        fcn.00409cc0();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x437c0c;\n                        fcn.00409e20();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x437c35;\n                        fcn.0043dd60();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x437c65;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x30) = 0x437c76;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x30) = 0x437c87;\n            fcn.004317e0();\n        }\n        *(puVar2 + -8) = 0x437c8d;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 571
    },
    "00437cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437cc0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uchar unaff_BL;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x48) = 0x437d05;\n            fcn.00409aa0();\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 == 0) {\n                *(*0x20 + -0x48) = 0x437d16;\n                iVar4 = fcn.0043fba0();\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x48) = 0x437e25;\n                    fcn.00409cc0();\n                    if (*(*0x20 + 0x10) == '\\0') {\ncode_r0x00437e45:\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    LOCK();\n                    iVar2 = *0x54e6fc + -1;\n                    iVar7 = *0x54e6fc + -1;\n                    cVar6 = iVar7;\n                    *0x54e6fc = iVar2;\n                    if (-1 < iVar7) goto code_r0x00437e45;\n                    *(*0x20 + -0x48) = 0x437e8b;\n                    iVar4 = fcn.004317e0();\n                    goto code_r0x00437e8b;\n                }\n            }\n            iVar3 = *0x54e6c0;\n            if (*0x54e6c0 != 0) {\n                *0x54e6c0 = *(*0x54e6c0 + 0x128);\n                *0x54e6c8 = *0x54e6c8 + -1;\n            }\n            *(*0x20 + -0x18) = iVar4;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x48) = 0x437d52;\n                uVar5 = fcn.004352c0();\n                *(*0x20 + -0x28) = uVar5;\n                *(*0x20 + -0x48) = 0x437d65;\n                fcn.00409cc0();\n                *(*0x20 + -0x48) = 0x437d8f;\n                fcn.004376e0(*(*0x20 + -0x28));\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x48) = 0x437dd8;\n            fcn.00409cc0();\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0xe4) == '\\0') {\n                if (*(iVar4 + 0xa8) == 0) {\n                    cVar6 = *(*0x20 + 0x10);\n                    if (cVar6 == '\\0') {\n                        cVar6 = '\\0';\ncode_r0x00437e8b:\n                        *(iVar4 + 0xe4) = cVar6;\n                        *(iVar4 + 0xa8) = *(*0x20 + -0x18);\n                        *(*0x20 + -0x48) = 0x437ea8;\n                        fcn.00409da0();\n                        iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                        *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    iVar3 = *(*0x20 + -0x18);\n                    do {\n                    } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                    if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) goto code_r0x00437e8b;\n                    *(*0x20 + -0x48) = 0x437f25;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x48) = 0x437f36;\n                fcn.004317e0();\n            }\n            unaff_BL = 0x15;\n            *(*0x20 + -0x48) = 0x437f47;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        puVar8[0x10] = unaff_BL;\n        *(puVar8 + -8) = 0x437f56;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_BL = puVar8[0x10];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "00437f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00437f80(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x54e710 != 0)) {\n        fcn.00437cc0();\n        return;\n    }\n    if (((*0x553d30 != '\\0') || (*0x553d31 != '\\0')) && ((*0x553d88 != 0 && ((*0x553d78 != 0 || (*0x553d31 != '\\0'))))))\n    {\n        fcn.00437cc0();\n        return;\n    }\n    if (*0x5a1b7c != 0) {\n        if ((*(in_RAX + 0x1240) == 0) || ((*(*(in_RAX + 0x1240) + 0x10) == 0 && (*(*(in_RAX + 0x1248) + 0x10) == 0)))) {\n            if (*0x54e100 == 0) {\n                if (*0x54e188 < *0x54e18c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.00437cc0();\n            return;\n        }\n    }\n    uVar2 = *0x54e6fc + *0x54e6f8;\n    if ((*0x54e6fc + *0x54e6f8 == 0) && (LOCK(),  uVar2 = in_RAX,  *0x54e6fc == 0)) {\n        *0x54e6fc = 1;\n        fcn.00437cc0();\n        return;\n    }\n    fcn.00409aa0(uVar2);\n    if (*0x54e780 != 0) {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x54e784 + -1;\n        bVar5 = *0x54e784 == 1;\n        *0x54e784 = iVar3;\n        if (bVar5) {\n            fcn.00409da0();\n        }\n        fcn.00409cc0();\n        return;\n    }\n    if (*(in_RAX + 0x2278) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2278) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2278) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x54e7a0)();\n        iVar3 = *0x54e7a8 + -1;\n        bVar5 = *0x54e7a8 == 1;\n        *0x54e7a8 = iVar3;\n        if (bVar5) {\n            fcn.00409da0();\n        }\n    }\n    if (*0x54e710 == 0) {\n        if ((*0x54e6f8 == *0x5a1b88 + -1) && (*0x54e6a8 != 0)) {\n            fcn.00409cc0();\n            fcn.00437cc0();\n            return;\n        }\n        iVar1 = *(in_RAX + 0x1208);\n        iVar4 = *(in_RAX + 0x1210);\n        if ((iVar1 != 0) && ((iVar4 == 0 || (iVar1 <= iVar4)))) {\n            iVar4 = iVar1;\n        }\n        fcn.0043fa00();\n        fcn.00409cc0();\n        if (iVar4 != 0) {\n            fcn.00439c20();\n        }\n        return;\n    }\n    fcn.00409cc0();\n    fcn.00437cc0();\n    return;\n}\n",
        "token_count": 1034
    },
    "00438320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438320(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x438370;\n                    fcn.0043dee0();\n                    *(*0x20 + -0x50) = 0x438375;\n                    fcn.00437f80();\n                }\n                *(*0x20 + -0x50) = 0x43837f;\n                fcn.0043e040();\n                *(*0x20 + -0x50) = 0x438385;\n                fcn.00436800();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x4383b6;\n                    fcn.0043dd60();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x4383dd;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x4383ee;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x4383f9;\n                fcn.004336a0();\n                *(*0x20 + -0x50) = 0x43840a;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x43840f;\n                fcn.00433120();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x438445;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x438456;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x438465;\n                fcn.00433920();\n                *(*0x20 + -0x50) = 0x438476;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x438485;\n                fcn.004337a0();\n                *(*0x20 + -0x50) = 0x438496;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x4384a5;\n                fcn.004336a0();\n                *(*0x20 + -0x50) = 0x4384aa;\n                fcn.00433300();\n                *(*0x20 + -0x50) = 0x4384af;\n                fcn.00433120();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x4384cf;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x4384e5;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x4384ef;\n                fcn.00433920();\n                *(*0x20 + -0x50) = 0x438505;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x43850f;\n                fcn.004337a0();\n                *(*0x20 + -0x50) = 0x438525;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x438530;\n                fcn.004336a0();\n                *(*0x20 + -0x50) = 0x438535;\n                fcn.00433300();\n                *(*0x20 + -0x50) = 0x43853a;\n                fcn.00433120();\n                *(*0x20 + -0x50) = 0x43854b;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x50) = 0x43855c;\n            fcn.004317e0();\n        }\n        *(puVar3 + -8) = 0x438565;\n        fcn.00457320();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1365
    },
    "00438580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438580(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x4385bf;\n                    fcn.0043e040();\n                    *(*0x20 + -0x28) = 0x4385c5;\n                    uVar2 = fcn.0043dee0();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x4385de;\n                    fcn.00409da0();\n                    *(*0x20 + -0x28) = 0x4385e5;\n                    fcn.00437b80();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x438605;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x28) = 0x438616;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x438625;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "00438640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438640(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e780 != 0) {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x00438690:\n                    *(*0x20 + -0x28) = 0x438695;\n                    uVar2 = fcn.0043dee0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x4386a8;\n                    fcn.00409aa0();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x54e784 + -1;\n                    bVar5 = *0x54e784 == 1;\n                    *0x54e784 = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x4386d4;\n                        fcn.00409da0();\n                    }\n                    *(*0x20 + -0x28) = 0x4386e5;\n                    fcn.00409cc0();\n                    *(*0x20 + -0x28) = 0x4386ea;\n                    fcn.00437b80();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x54e6fc + -1;\n                iVar3 = *0x54e6fc + -1;\n                *0x54e6fc = iVar1;\n                if (-1 < iVar3) goto code_r0x00438690;\n                *(*0x20 + -0x28) = 0x438705;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x28) = 0x438716;\n            fcn.004317e0();\n        }\n        *(puVar4 + -8) = 0x43871c;\n        fcn.00457320();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 623
    },
    "00438740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00438740(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    char unaff_BL;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54afe4 != '\\0') {\n        fcn.00429520();\n    }\n    iVar3 = unaff_R14;\n    if (*0x5a1da0 == 0) {\n        *(*(unaff_R14 + 0x30) + 0x90) = in_RAX;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.00459540(arg1, unaff_R14, arg3, arg4);\n    }\n    if (*0x5a1da0 == 0) {\n        piVar2[6] = *(unaff_R14 + 0x30);\n    }\n    else {\n        fcn.004596a0(arg1, unaff_R14, arg3, arg4);\n    }\n    fcn.00435c80(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(*(iVar3 + 0x30) + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(*(iVar3 + 0x30) + 0xe0) != *0x54e7b8) {\n        fcn.0042f060();\n    }\n    if (*0x553d30 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.0044e320();\n        }\n        fcn.0044dfc0();\n    }\n    fcn.00457140();\n    return;\n}\n",
        "token_count": 529
    },
    "004388c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00438be6)\n// WARNING: Removing unreachable block (ram,0x00438beb)\n\nuint64_t fcn.004388c0(void)\n\n{\n    int32_t iVar1;\n    ulong noname_2;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t *piVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    int64_t iStack232;\n    uint64_t uStack104;\n    ulong uStack96;\n    uint64_t uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint64_t uStack64;\n    uint64_t uStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    \n    while (&uStack104 < *(unaff_R14 + 0x10) || &uStack104 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\ncode_r0x004388ee:\n    while (uVar8 = *(*(unaff_R14 + 0x30) + 0xa0),  *0x54e780 != 0) {\n        fcn.00438640();\n    }\n    if (*(uVar8 + 0x2278) != 0) {\n        fcn.00436e00();\n    }\n    uVar3 = fcn.0043a280();\n    if (((*0x553d30 != '\\0') || (*0x553d31 != '\\0')) && (uVar4 = fcn.0044cb60(),  uVar4 != 0)) {\n        fcn.00435c80(1);\n        fcn.0044e200();\n        return uVar4;\n    }\n    if ((*0x5a1b7c != 0) && (uVar4 = fcn.0041c560(uVar3),  uVar4 != 0)) {\n        return uVar4;\n    }\n    if ((*(uVar8 + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x54e710)) {\n        fcn.00409aa0();\n        uVar4 = fcn.0043f7c0();\n        fcn.00409cc0();\n        if (uVar4 != 0) {\n            return uVar4;\n        }\n    }\n    if (((*0x5a1b45 != '\\0') && (*0x5a1b46 != '\\0')) && (iVar5 = fcn.004141c0(uVar8),  iVar5 != 0)) {\n        fcn.00435520(1);\n    }\n    iVar5 = **0x546b30;\n    if (iVar5 != 0) {\n        fcn.00459140(uVar8);\n        iStack232 = iVar5;\n    }\n    uVar4 = fcn.00440160(uVar8);\n    if (uVar4 != 0) {\n        return uVar4;\n    }\n    if (*0x54e710 != 0) {\n        fcn.00409aa0();\n        uStack56 = fcn.0043f7c0();\n        fcn.00409cc0();\n        if (uStack56 != 0) {\n            return uStack56;\n        }\n    }\n    if (*0x5a1b94 == 0) {\n        bVar12 = false;\n    }\n    else if (*0x5a1b98 == 0) {\n        bVar12 = false;\n    }\n    else {\n        bVar12 = *0x54e6a8 != 0;\n    }\n    if ((bVar12) && (uVar4 = fcn.0042b740(),  uVar4 != 0)) {\n        fcn.00439d00();\n        fcn.00435c80(1);\n        if (*0x553d30 != '\\0') {\n            fcn.0044e200();\n        }\n        return uVar4;\n    }\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        uVar10 = *0x5a1b88 - *0x54e6f8;\n        bVar12 = *0x54e6fc << 1 < uVar10;\n    }\n    else {\n        bVar12 = true;\n        uVar10 = *0x5a1b88;\n    }\n    uVar4 = uVar10;\n    if (bVar12) goto code_r0x00438b96;\n    uVar4 = 0;\n    goto code_r0x00438bf5;\ncode_r0x00438b96:\n    if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n        LOCK();\n        *0x54e6fc = *0x54e6fc + 1;\n    }\n    uVar11 = fcn.004394e0();\n    if (uVar11 != 0) {\n        return uVar11;\n    }\n    if (!bVar12) {\n        if (uVar4 == 0) {\n            uVar4 = 0;\n        }\ncode_r0x00438bf5:\n        if (*0x5a1b7c == 0) {\n            cVar2 = '\\0';\n        }\n        else {\n            if ((*(uVar8 + 0x1240) == 0) || ((*(*(uVar8 + 0x1240) + 0x10) == 0 && (*(*(uVar8 + 0x1248) + 0x10) == 0))))\n            {\n                if (*0x54e100 == 0) {\n                    if (*0x54e188 < *0x54e18c) {\n                        bVar12 = true;\n                    }\n                    else {\n                        bVar12 = false;\n                    }\n                }\n                else {\n                    bVar12 = true;\n                }\n            }\n            else {\n                bVar12 = true;\n            }\n            if (bVar12) {\n                cVar2 = fcn.0041d080();\n            }\n            else {\n                cVar2 = '\\0';\n            }\n        }\n        uVar11 = uVar8;\n        if (cVar2 == '\\0') goto code_r0x00438cad;\n        while( true ) {\n            if (*0x5a1c78 == 0) {\n                piVar9 = NULL;\n            }\n            else {\n                piVar9 = (*0x5a1c78 >> 0x13) << 3;\n                *0x5a1c78 = *piVar9;\n                LOCK();\n            }\n            if (piVar9 != NULL) {\n                *(uVar11 + 0x1230) = 3;\n                uVar8 = piVar9[2];\n                fcn.00435c80(1);\n                if (*0x553d30 != '\\0') {\n                    fcn.0044e200();\n                }\n                return uVar8;\n            }\n            fcn.0041d160();\ncode_r0x00438cad:\n            noname_2 = *0x54dde0;\n            uVar3 = *0x54dda0;\n            uStack48 = *0x54dd10;\n            uStack104 = *0x54dd18;\n            uStack96 = *0x54dd20;\n            uStack72 = *0x54dd90;\n            uStack80 = *0x54ddd0;\n            uVar11 = *0x54dd18;\n            fcn.00409aa0();\n            if ((*0x54e780 != 0) || (*(uVar8 + 0x2278) != 0)) break;\n            if (*0x54e710 != 0) {\n                uStack64 = fcn.0043f7c0();\n                fcn.00409cc0();\n                return uStack64;\n            }\n            uVar6 = fcn.0043dee0();\n            if (uVar6 == uVar8) {\n                fcn.0043fa00();\n                fcn.00409cc0();\n                uVar6 = uStack104;\n                cVar2 = *(*(unaff_R14 + 0x30) + 0xe4);\n                uVar7 = uVar4;\n                if (cVar2 == '\\0') {\ncode_r0x00438ea3:\n                    iVar5 = *0x54e6a8;\n                    if (*0x5a1b94 == 0) {\n                        bVar12 = false;\n                    }\n                    else if ((*0x5a1b98 == 0) && (uVar7 == 0)) {\n                        bVar12 = false;\n                    }\n                    else {\n                        *0x54e6a8 = 0;\n                        bVar12 = iVar5 != 0;\n                    }\n                    if (!bVar12) {\n                        if ((uVar7 != 0 && *0x5a1b94 != 0) && ((*0x54e6b0 == 0 || (uVar7 < *0x54e6b0)))) {\n                            fcn.0042b640();\n                        }\ncode_r0x004392ad:\n                        fcn.00437b80();\n                        goto code_r0x004388ee;\n                    }\n                    uVar11 = 0x54e6b0;\n                    *0x54e6b0 = uVar7;\n                    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n                        if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\n                            uStack88 = uVar7;\n                            fcn.0045b2e0();\n                            uVar8 = fcn.0042b740();\n                            iVar5 = *0x54e6a8;\n                            *0x54e6b0 = 0;\n                            *0x54e6a8 = iStack232;\n                            if ((*0x5a1c50 == 0) || (uVar8 != 0)) {\n                                fcn.00409aa0(iVar5);\n                                iStack40 = fcn.0043fba0();\n                                fcn.00409cc0();\n                                if (iStack40 == 0) {\n                                    fcn.00439d00();\n                                    goto code_r0x004392ad;\n                                }\n                                fcn.0043dd60();\n                                if (uVar8 != 0) {\n                                    fcn.00439d00();\n                                    fcn.00435c80(1);\n                                    if (*0x553d30 != '\\0') {\n                                        fcn.0044e200();\n                                    }\n                                    return uVar8;\n                                }\n                                if (cVar2 != '\\0') {\n                                    *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                    LOCK();\n                                    *0x54e6fc = *0x54e6fc + 1;\n                                }\n                            }\n                            else {\n                                fcn.00437b80();\n                            }\n                            goto code_r0x004388ee;\n                        }\n                        fcn.004317e0();\n                    }\n                    fcn.004317e0();\n                }\n                else {\n                    *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                    LOCK();\n                    iVar1 = *0x54e6fc + -1;\n                    uVar10 = *0x54e6fc - 1;\n                    uVar11 = uVar10;\n                    *0x54e6fc = iVar1;\n                    if (-1 < uVar10) {\n                        iVar5 = fcn.00439860(uStack96, uVar11, uVar3);\n                        if (iVar5 == 0) {\n                            iVar5 = fcn.00439a40();\n                            if (iVar5 != 0) {\n                                iStack40 = iVar5;\n                                fcn.0043dd60();\n                                *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                                LOCK();\n                                *0x54e6fc = *0x54e6fc + 1;\n                                *(iStack40 + 0x1230) = 3;\n                                fcn.00435c80(1);\n                                if (*0x553d30 != '\\0') {\n                                    fcn.0044e200();\n                                }\n                                return uVar6;\n                            }\n                            uVar7 = fcn.004399a0(uStack96, uVar11, noname_2, uVar4);\n                            goto code_r0x00438ea3;\n                        }\n                        fcn.0043dd60();\n                        *(*(unaff_R14 + 0x30) + 0xe4) = 1;\n                        LOCK();\n                        *0x54e6fc = *0x54e6fc + 1;\n                        goto code_r0x004388ee;\n                    }\n                }\n                fcn.004317e0();\n            }\n            fcn.004317e0();\n        }\n        fcn.00409cc0();\n    }\n    goto code_r0x004388ee;\n}\n",
        "token_count": 2980
    },
    "00439a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00439a40(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((*0x5a1b7c == 0) || (*0x5a2590 >> 0x20 <= *0x5a2590)) {\n        return 0;\n    }\n    if (*0x54e100 == 0) {\n        if (*0x54e188 < *0x54e18c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (!bVar1) {\n        return 0;\n    }\n    fcn.00409aa0();\n    iVar3 = fcn.0043fba0();\n    if (iVar3 == 0) {\n        fcn.00409cc0();\n        return 0;\n    }\n    if ((*0x5a1b7c != 0) && (cVar2 = fcn.0041d080(),  cVar2 != '\\0')) {\n        if (*0x5a1c78 == 0) {\n            piVar4 = NULL;\n        }\n        else {\n            piVar4 = (*0x5a1c78 >> 0x13) << 3;\n            *0x5a1c78 = *piVar4;\n            LOCK();\n        }\n        if (piVar4 != NULL) {\n            fcn.00409cc0();\n            return iVar3;\n        }\n        fcn.0043fa00();\n        fcn.00409cc0();\n        fcn.0041d160();\n        return 0;\n    }\n    fcn.0043fa00();\n    fcn.00409cc0();\n    return 0;\n}\n",
        "token_count": 464
    },
    "00439c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00439c80(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x54e6fc + -1) {\n                    *(*0x20 + -0x20) = 0x439cc5;\n                    *0x54e6fc = *0x54e6fc + -1;\n                    fcn.004382a0();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x439ce5;\n                *0x54e6fc = *0x54e6fc + -1;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x20) = 0x439cf6;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x439cfc;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 373
    },
    "00439d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00439d00(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x553d30 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.0044e200();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar3 = 0;\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        fcn.00435c80(1);\n        arg1 = arg1 + 1;\n        iVar3 = iVar4;\n        iVar2 = *(iVar4 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.00409aa0();\n        iVar2 = *0x54e700;\n        iVar4 = *0x54e708;\n        if ((iVar3 != 0) && (*(iVar3 + 0xa0) = 0,  iVar2 = iStack64,  iVar4 = iVar3,  *0x54e708 != 0)) {\n            *(*0x54e708 + 0xa0) = iStack64;\n            iVar2 = *0x54e700;\n        }\n        *0x54e708 = iVar4;\n        *0x54e700 = iVar2;\n        *0x54e710 = *0x54e710 + arg1;\n        piVar1 = fcn.00409cc0();\n        while ((arg1 != 0 && (*0x54e6f8 != 0))) {\n            piVar1 = fcn.00437cc0();\n            arg1 = arg1 + -1;\n        }\n        return piVar1;\n    }\n    uVar5 = *0x54e6f8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((uVar5 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.00409aa0();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x54e708 == 0) {\n                *0x54e700 = auStack48._0_8_;\n            }\n            else {\n                *(*0x54e708 + 0xa0) = auStack48._0_8_;\n            }\n            *0x54e708 = auStack48._8_8_;\n        }\n        *0x54e710 = *0x54e710 + iVar2;\n        fcn.00409cc0();\n        iVar3 = iVar2;\n        while ((iVar3 != 0 && (*0x54e6f8 != 0))) {\n            fcn.00437cc0();\n            iVar3 = iVar3 + -1;\n        }\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.00440020(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 1047
    },
    "0043a020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a020(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong arg1;\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar3 = *(unaff_R14 + 0x30);\n            if (*(iVar3 + 0xd8) == 0) {\n                *(*0x20 + -0x10) = unaff_R14;\n                if (*(iVar3 + 0x130) != 0) {\n                    *(*0x20 + -0x38) = 0x43a05d;\n                    fcn.00438320();\n                    arg1 = *(*(*(*0x20 + -0x10) + 0x30) + 0x130);\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x38) = 0x43a077;\n                    fcn.00438740(arg1, param_2, param_3, param_4);\n                }\n                uVar4 = *(*0x20 + -0x10);\n                param_2 = *(uVar4 + 0x30);\n                if (*(param_2 + 0xe8) == '\\0') {\n                    while( true ) {\n                        param_2 = *(*(uVar4 + 0x30) + 0xa0);\n                        *(param_2 + 0x22c8) = 0;\n                        if ((*(*(uVar4 + 0x30) + 0xe4) != '\\0') &&\n                           ((*(param_2 + 0x998) != 0 || (*(param_2 + 0x194) != *(param_2 + 400))))) break;\n                        *(*0x20 + -0x38) = 0x43a0de;\n                        iVar3 = fcn.004388c0();\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x19) = unaff_RBX;\n                        *(*0x20 + -0x1a) = uVar4;\n                        noname_1 = *(*0x20 + -0x10);\n                        if (*(*(noname_1 + 0x30) + 0xe4) != '\\0') {\n                            *(*0x20 + -0x38) = 0x43a105;\n                            fcn.00439c80();\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x10);\n                            unaff_RBX = *(*0x20 + -0x19);\n                        }\n                        if (*0x54e718 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43a130;\n                            uVar1 = fcn.004524e0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x10);\n                            unaff_RBX = *(*0x20 + -0x19);\n                            iVar3 = *(*0x20 + -0x18);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x0043a208:\n                            if (uVar4 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43a211;\n                                fcn.004382a0();\n                                iVar3 = *(*0x20 + -0x18);\n                                noname_1 = *(*0x20 + -0x10);\n                                unaff_RBX = *(*0x20 + -0x19);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x38) = 0x43a233;\n                                fcn.00438740(uVar4, noname_1, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x38) = 0x43a093;\n                            fcn.00438580();\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x43a165;\n                            fcn.00409aa0();\n                            if (*0x54e718 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x43a185;\n                                cVar2 = fcn.004524e0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x38) = 0x43a1f4;\n                                fcn.00409cc0();\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar4 = *(*0x20 + -0x1a);\n                                noname_1 = *(*0x20 + -0x10);\n                                unaff_RBX = *(*0x20 + -0x19);\n                                goto code_r0x0043a208;\n                            }\n                            unaff_RBX = *(*0x20 + -0x18);\n                            *(unaff_RBX + 0xa0) = 0;\n                            uVar4 = unaff_RBX;\n                            if (*0x54e728 != 0) {\n                                *(*0x54e728 + 0xa0) = unaff_RBX;\n                                uVar4 = *0x54e720;\n                            }\n                            *0x54e720 = uVar4;\n                            *0x54e730 = *0x54e730 + 1;\n                            *(*0x20 + -0x38) = 0x43a1dc;\n                            *0x54e728 = unaff_RBX;\n                            fcn.00409cc0();\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                    }\n                    *(*0x20 + -0x38) = 0x43a24e;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x38) = 0x43a25f;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x38) = 0x43a270;\n            fcn.004317e0();\n        }\n        *(puVar5 + -8) = 0x43a276;\n        fcn.00457320();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1624
    },
    "0043a280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043a280(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(in_RAX + 0x1208);\n    iVar2 = *(in_RAX + 0x1210);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045b2e0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x22a4) <= *(in_RAX + 0x22a0) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.00409aa0();\n    if (*(in_RAX + 0x2290) != 0) {\n        fcn.0044b9e0();\n        do {\n            if (*(in_RAX + 0x2290) == 0) break;\n            iVar1 = fcn.0044bde0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2290) >> 2 < *(in_RAX + 0x22a4))) {\n        fcn.0044c200();\n    }\n    fcn.00409cc0();\n    return unaff_RBX;\n}\n",
        "token_count": 497
    },
    "0043a640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043a640(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x43a67f;\n                fcn.00435c80(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x43a6ae;\n                fcn.00409aa0();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x54e708 != 0) {\n                    *(*0x54e708 + 0xa0) = iVar1;\n                    iVar2 = *0x54e700;\n                }\n                *0x54e700 = iVar2;\n                *0x54e710 = *0x54e710 + 1;\n                *(*0x20 + -0x38) = 0x43a6ff;\n                *0x54e708 = iVar1;\n                fcn.00409cc0();\n                *(*0x20 + -0x38) = 0x43a705;\n                fcn.0043a020();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x43a730;\n            fcn.004330a0();\n            *(*0x20 + -0x38) = 0x43a745;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a74f;\n            fcn.00433920();\n            *(*0x20 + -0x38) = 0x43a765;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a76f;\n            fcn.004337a0();\n            *(*0x20 + -0x38) = 0x43a785;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a790;\n            fcn.004336a0();\n            *(*0x20 + -0x38) = 0x43a795;\n            fcn.00433300();\n            *(*0x20 + -0x38) = 0x43a79a;\n            fcn.00433120();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43a7ba;\n            fcn.004330a0();\n            *(*0x20 + -0x38) = 0x43a7cb;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a7d5;\n            fcn.00433920();\n            *(*0x20 + -0x38) = 0x43a7e6;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a7f0;\n            fcn.004337a0();\n            *(*0x20 + -0x38) = 0x43a805;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x43a810;\n            fcn.004336a0();\n            *(*0x20 + -0x38) = 0x43a815;\n            fcn.00433300();\n            *(*0x20 + -0x38) = 0x43a81a;\n            fcn.00433120();\n            *(*0x20 + -0x38) = 0x43a82b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43a836;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1215
    },
    "0043a9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043a9a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x553d30 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044cd00(0);\n    }\n    fcn.0043a640();\n    return;\n}\n",
        "token_count": 140
    },
    "0043aa20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043aa20(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x553d30 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x43aa52;\n                fcn.0044e180();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(in_RAX + 0xb0) = 0x19;\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043aa9e;\n                *(*0x20 + -0x48) = 0x43aa87;\n                iVar1 = fcn.004490a0();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x25) & 2) == 0) {\ncode_r0x0043aa9e:\n                        *(*0x20 + -0x48) = 0x43aaad;\n                        fcn.004360a0(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x43aae5;\n                        fcn.004357e0(9);\n                        *(*0x20 + -0x48) = 0x43aaea;\n                        fcn.0043a020();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x43aaf9;\n                    uVar2 = fcn.00449820();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x43ab08;\n                    fcn.004330a0();\n                    *(*0x20 + -0x48) = 0x43ab19;\n                    fcn.004339a0();\n                    *(*0x20 + -0x48) = 0x43ab28;\n                    fcn.004339a0();\n                    *(*0x20 + -0x48) = 0x43ab39;\n                    fcn.004339a0();\n                    *(*0x20 + -0x48) = 0x43ab3e;\n                    fcn.00433120();\n                    *(*0x20 + -0x48) = 0x43ab4f;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x48) = 0x43ab65;\n                in_RAX = fcn.004317e0();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x43ab86;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x43ab97;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43aba5;\n            fcn.00433920();\n            *(*0x20 + -0x48) = 0x43abb6;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43abc5;\n            fcn.004337a0();\n            *(*0x20 + -0x48) = 0x43abd6;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43abe5;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x43abea;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x43abef;\n            fcn.00433120();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x43ac0f;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x43ac25;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43ac2f;\n            fcn.00433920();\n            *(*0x20 + -0x48) = 0x43ac45;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43ac4f;\n            fcn.004337a0();\n            *(*0x20 + -0x48) = 0x43ac65;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x43ac70;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x43ac75;\n            fcn.00433300();\n            *(*0x20 + -0x48) = 0x43ac7a;\n            fcn.00433120();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43ac8b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43ac96;\n        fcn.0045ba20();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1534
    },
    "0043b120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b120(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.00434be0();\n        }\n        return;\n    }\n    fcn.004317e0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 295
    },
    "0043b180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043b180(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.0043b120();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00435c80(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.004571e0();\n    }\n    if (*0x553d30 != '\\0') {\n        fcn.004571e0();\n        fcn.0043b120();\n    }\n    if (*0x54e790 != 0) {\n        fcn.004571e0();\n        fcn.0043b120();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2278) != 0) {\n        fcn.004571e0();\n        fcn.0043b120();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x54e780 != 0) {\n        fcn.004571e0();\n        fcn.0043b120();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 552
    },
    "0043ba80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043bb59)\n\nulong fcn.0043ba80(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x54e784 == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043ddc0();\n            fcn.0043bc40();\n            return 1;\n        }\n    }\n    if (*0x54e6f0 != 0) {\n        fcn.004571e0();\n    }\n    return 0;\n}\n",
        "token_count": 175
    },
    "0043bc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043bc40(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x553d30 != '\\0') {\n            fcn.004571e0();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043c1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043c1e0(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar auVar5 [16];\n    char cVar6;\n    uint8_t uVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x28) = unaff_R14;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x50) = 0x43c225;\n                fcn.004318e0();\n            }\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*0x20 + -0x28);\n            *(*0x20 + -0x18) = *(*(arg1 + 0x30) + 0xa0);\n            *(*0x20 + -0x50) = 0x43c24f;\n            iVar8 = fcn.0043ca60();\n            if (iVar8 == 0) {\n                *(*0x20 + -0x50) = 0x43c25e;\n                uVar9 = fcn.0043bf60();\n                *(*0x20 + -0x30) = uVar9;\n                arg1 = 6;\n                *(*0x20 + -0x50) = 0x43c26f;\n                fcn.00435c80(6);\n                *(*0x20 + -0x50) = 0x43c279;\n                fcn.00434c00();\n                iVar8 = *(*0x20 + -0x30);\n            }\n            if (*(iVar8 + 8) != 0) {\n                arg1 = *(iVar8 + 0x90);\n                if (*(iVar8 + 0x90) == 6) {\n                    *(*0x20 + -0x30) = iVar8;\n                    *(*0x20 + -0x38) = *(iVar8 + 8);\n                    *(*0x20 + -0x20) = iVar8 + 0x38;\n                    *(*0x20 + -0x50) = 0x43c2bc;\n                    fcn.0045a040();\n                    iVar8 = *(*0x20 + -0x38);\n                    iVar12 = *(*0x20 + -0x30);\n                    *(iVar12 + 0x38) = iVar8 + -0x20;\n                    *(iVar12 + 0x80) = iVar8 + -0x20;\n                    *(iVar12 + 0x40) = 0x459501;\n                    *(iVar12 + 0x48) = iVar12;\n                    *(*0x20 + -0x50) = 0x43c2f9;\n                    fcn.00446080(iVar12, iVar12, in_R8, in_R9);\n                    *(*(*0x20 + -0x30) + 0x128) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x50) = 0x43c314;\n                    uVar9 = fcn.0043c5a0();\n                    if (*0x5a1da0 == 0) {\n                        iVar8 = *(*0x20 + -0x30);\n                        *(iVar8 + 0x130) = uVar9;\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x30);\n                        *(*0x20 + -0x50) = 0x43c345;\n                        fcn.00459540(iVar8 + 0x130, iVar8, in_R8, in_R9);\n                    }\n                    *(iVar8 + 0x138) = **(*0x20 + 8);\n                    *(*0x20 + -0x50) = 0x43c365;\n                    cVar6 = fcn.004524e0();\n                    if (cVar6 == '\\0') {\n                        iVar12 = *(*(*(*0x20 + -0x28) + 0x30) + 0x90);\n                        if (iVar12 == 0) {\n                            iVar8 = *(*0x20 + -0x30);\n                        }\n                        else if (*0x5a1da0 == 0) {\n                            iVar8 = *(*0x20 + -0x30);\n                            *(iVar8 + 0x168) = *(iVar12 + 0x168);\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x43c3cf;\n                            iVar8 = fcn.004596a0(iVar8, *(*0x20 + -0x28), *(*0x20 + -0x30) + 0x168, in_R9);\n                        }\n                        if (*0x54afe4 != '\\0') {\n                            *(iVar8 + 0x17c) = 2;\n                        }\n                    }\n                    else {\n                        LOCK();\n                        *0x54e6e8 = *0x54e6e8 + 1;\n                        iVar8 = *(*0x20 + -0x30);\n                    }\n                    uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                    auVar5 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n                    *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n                    uVar7 = SUB161(auVar5, 0) ^ SUB161(auVar5 >> 0x40, 0);\n                    *(iVar8 + 0xbd) = uVar7;\n                    if ((uVar7 & 7) == 0) {\n                        *(iVar8 + 0xbc) = 1;\n                    }\n                    *(*0x20 + -0x50) = 0x43c445;\n                    fcn.00435c80(1);\n                    piVar11 = *(*0x20 + -0x30);\n                    iVar12 = piVar11[1] - *piVar11;\n                    iVar8 = *(*0x20 + -0x18);\n                    if (iVar8 == 0) {\n                        LOCK();\n                        *0x5a2528 = *0x5a2528 + iVar12;\n                    }\n                    else {\n                        iVar4 = *(iVar8 + 0x22b0);\n                        iVar2 = iVar4 + iVar12;\n                        *(iVar8 + 0x22b0) = iVar2;\n                        if (0x3ffe < iVar4 + iVar12 + 0x1fffU) {\n                            LOCK();\n                            *0x5a2528 = *0x5a2528 + iVar2;\n                            *(iVar8 + 0x22b0) = 0;\n                        }\n                    }\n                    iVar12 = *0x54e6a0;\n                    if (*(iVar8 + 0x188) == *(iVar8 + 0x180)) {\n                        LOCK();\n                        iVar2 = *0x54e6a0 + 1;\n                        *0x54e6a0 = *0x54e6a0 + 0x10;\n                        *(iVar8 + 0x180) = iVar2;\n                        *(iVar8 + 0x188) = iVar12 + 0x11;\n                    }\n                    piVar11[0x13] = *(iVar8 + 0x180);\n                    *(iVar8 + 0x180) = *(iVar8 + 0x180) + 1;\n                    if (*0x553d30 != '\\0') {\n                        *(*0x20 + -0x50) = 0x43c50f;\n                        fcn.0044dee0();\n                        piVar11 = *(*0x20 + -0x30);\n                    }\n                    iVar3 = *(*(*(*0x20 + -0x28) + 0x30) + 0xd8);\n                    *(*(*(*0x20 + -0x28) + 0x30) + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return piVar11;\n                }\n                *(*0x20 + -0x50) = 0x43c55e;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x50) = 0x43c56f;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + -8) = 0x43c585;\n        fcn.00457320();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2291
    },
    "0043c5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0043c5a0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    ulong *puVar8;\n    uchar *unaff_RBP;\n    int32_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5a2014 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar8 = *(in_RAX + 0x130);\n            if (puVar8 == NULL) {\n                uVar11 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar8;\n                uVar11 = puVar8[1];\n            }\n            *(*0x20 + -0x378) = uVar11;\n            *(*0x20 + -0x48) = uVar4;\n            iVar9 = uVar11 + 1;\n            if (*0x5a2014 < iVar9) {\n                iVar9 = *0x5a2014;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43c645;\n            uVar4 = fcn.004433e0(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43c68d;\n                fcn.0040f620(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43c6af;\n                fcn.00459b6e();\n                *(*0x20 + -0x3d0) = 0;\n                uVar11 = 100;\n                *(*0x20 + -0x3d8) = 0x43c6e7;\n                uVar4 = fcn.0044e660(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43c6fe;\n                puVar5 = fcn.004433e0(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43c72e;\n                    fcn.0045a340(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                puVar8 = *(*(*0x20 + 8) + 0x128);\n                *(*0x20 + -0x10) = puVar8;\n                if (*0x5a1da0 == 0) {\n                    puVar8 = *(*0x20 + -0x38);\n                    *puVar8 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar8 + 1) = *(*0x20 + -0x28);\n                    *(puVar8 + 0xc) = uVar1;\n                    *(puVar8 + 2) = uVar2;\n                    *(puVar8 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar8 + 3) = *(*0x20 + -0x18);\n                    *(puVar8 + 0x1c) = uVar1;\n                    *(puVar8 + 4) = uVar2;\n                    *(puVar8 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43c7e6;\n                    fcn.0040f460(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43c7f2;\n                puVar6 = fcn.0040bba0();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x5a1da0 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43c825;\n                    puVar6 = fcn.00459640(*(*0x20 + -0x38), puVar8, iVar10, uVar11);\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43c845;\n            in_RAX = fcn.00459aa0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43c850;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1670
    },
    "0043c860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043c860(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*0x53a288 != *(*unaff_RBX + 8) - **unaff_RBX) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43c8ba;\n                    fcn.00444560();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43c9a5;\n                    fcn.00409aa0();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x54e748;\n                        *0x54e748 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x54e740;\n                        *0x54e740 = *(*0x20 + -0x38);\n                    }\n                    *0x54e750 = *0x54e750 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43ca25;\n                    fcn.00409cc0();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43ca3b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43ca4b;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1210
    },
    "0043ca60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0043ca60(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x54e740 == 0 && (*0x54e748 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if ((*piVar1 != 0) && (*0x53a288 != piVar1[1] - *piVar1)) {\n                    fcn.004571e0();\n                }\n                if (*piVar1 == 0) {\n                    fcn.004571e0();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.00409aa0();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x54e740 == 0) {\n                if (*0x54e748 == 0) break;\n                iVar2 = *0x54e748;\n                *0x54e748 = *(*0x54e748 + 0xa0);\n            }\n            else {\n                iVar2 = *0x54e740;\n                *0x54e740 = *(*0x54e740 + 0xa0);\n            }\n            *0x54e750 = *0x54e750 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.00409cc0();\n    } while( true );\n}\n",
        "token_count": 538
    },
    "0043cd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043cd00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00409aa0();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x54e748;\n        *0x54e748 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x54e740;\n        *0x54e740 = auStack72._0_8_;\n    }\n    *0x54e750 = *0x54e750 + iVar2;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 595
    },
    "0043ce60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ce60(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.004571e0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0043cf40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043cf40(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43cf9c;\n                in_RAX = fcn.00459640(in_RAX + 0x272, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43cfd1;\n                in_RAX = fcn.00459640(in_RAX + 0x20, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43cfe5;\n            fcn.0042af80(in_RAX + 0x49a);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                uVar4 = *(*0x20 + 0x10);\n                arg2 = uVar4;\n                if (uVar4 != 0) {\n                    *(*0x20 + -0x20) = 0x43d01a;\n                    uVar2 = fcn.004122a0();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    uVar4 = *(*0x20 + 0x10);\n                    goto code_r0x0043d027;\n                }\n                if (*0x5a1c90 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x5a1c90;\n                    goto code_r0x0043d027;\n                }\n            }\n            else {\n                uVar4 = *(*0x20 + 0x10);\ncode_r0x0043d027:\n                arg1 = *0x54ddd8;\n                iVar5 = ((uVar4 >> 0x1f) >> 0x1b) + uVar4 >> 5;\n                arg2 = iVar5 * 0x20;\n                uVar4 = uVar4 + iVar5 * -0x20;\n                if (-1 < uVar4) {\n                    arg2 = -(uVar4 < 0x20);\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    arg3 = uVar4;\n                    uVar3 = iVar5;\n                    if (uVar3 < *0x54ddd8) {\n                        puVar1 = *0x54ddd0 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x54dd98) {\n                            puVar1 = *0x54dd90 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43d09f;\n                        arg2 = *0x54dd90;\n                        fcn.004599e0(*0x54dd98);\n                    }\n                    *(*0x20 + -0x20) = 0x43d0a7;\n                    fcn.004599e0(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43d0ac;\n                fcn.0042fda0();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43d0bd;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x43d0cc;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1292
    },
    "0043d0e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d0e0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar3 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar3;\n        param_2 = *(in_RAX + 0x198 + (uVar3 & 0xff) * 8);\n        *(param_2 + 0xa0) = *0x54e700;\n        if (*0x54e708 == 0) {\n            *0x54e708 = param_2;\n        }\n        *0x54e710 = *0x54e710 + 1;\n        *0x54e700 = param_2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x54e700;\n        if (*0x54e708 == 0) {\n            *0x54e708 = iVar2;\n        }\n        *0x54e710 = *0x54e710 + 1;\n        *0x54e700 = iVar2;\n        *(in_RAX + 0x998) = 0;\n        param_2 = iVar2;\n    }\n    if (*(in_RAX + 0x2290) != 0) {\n        fcn.00409aa0();\n        fcn.00409aa0();\n        param_2 = *(in_RAX + 0x2290);\n        fcn.0044b7a0(param_2);\n        *(in_RAX + 0x2290) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        if (*0x5a1da0 == 0) {\n            *(in_RAX + 0x2288) = 0;\n            iVar2 = in_RAX;\n        }\n        else {\n            param_2 = 0;\n            iVar2 = fcn.00459660(in_RAX + 0x2288, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x22a0) = 0;\n        uVar1 = *(iVar2 + 0x1208);\n        *(iVar2 + 0x1208) = 0;\n        fcn.00409cc0(uVar1);\n        fcn.00409cc0();\n    }\n    if (*0x5a1b84 != 0) {\n        fcn.0042b100();\n        fcn.00421420(in_RAX + 0x1240);\n    }\n    fcn.0040f760(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x5a1da0 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n        iVar2 = in_RAX;\n    }\n    else {\n        iVar2 = fcn.00459640(in_RAX + 0x9c8, param_2, param_3, param_4);\n    }\n    fcn.0040f760(iVar2 + 0x80);\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x5a1da0 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.00459640(in_RAX + 0x80, in_RAX, param_3, param_4);\n    }\n    fcn.004571e0();\n    fcn.00412400(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043cd00();\n    fcn.0044cc40();\n    *(in_RAX + 0x1218) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1104
    },
    "0043d4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0043d4e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int32_t in_EAX;\n    ulong uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    int64_t *piVar15;\n    uint32_t uVar16;\n    int64_t *unaff_RBX;\n    int64_t *piVar17;\n    uchar *puVar18;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar19;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar18 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar18 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x5a1b88) && (0 < in_EAX)) {\n                *(*0x20 + -0x70) = *0x5a1b88;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x553d30 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb8) = 0x43d55c;\n                    fcn.0044cd00(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb8) = 0x43d565;\n                fcn.0045b2e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar8 = *(*0x20 + -0xb0);\n                if (*0x54e7c0 == 0) {\n                    uVar14 = *(*0x20 + -0x70);\n                }\n                else {\n                    uVar14 = *(*0x20 + -0x70);\n                    *0x54e7c8 = *0x54e7c8 + uVar14 * (iVar8 - *0x54e7c0);\n                }\n                *(*0x20 + -0x40) = iVar8;\n                uVar16 = *(*0x20 + 8);\n                uVar11 = uVar16;\n                *(*0x20 + -0x6c) = ((uVar16 + 0x1f >> 0x1f) >> 0x1b) + uVar16 + 0x1f >> 5;\n                *0x54e7c0 = iVar8;\n                if (*0x54dd18 < uVar16) {\n                    *(*0x20 + -0xb8) = 0x43d5f9;\n                    fcn.00409aa0();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x54dd20 < iVar1) {\n                        *(*0x20 + -0x50) = iVar1;\n                        *(*0x20 + -0xb8) = 0x43d63c;\n                        uVar6 = fcn.004433e0(iVar1);\n                        *(*0x20 + -0x10) = uVar6;\n                        uVar6 = *(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x43d666;\n                        fcn.0040f620(uVar6);\n                        *0x54dd18 = *(*0x20 + -0x50);\n                        *0x54dd20 = *0x54dd18;\n                        if (*0x5a1da0 == 0) {\n                            *0x54dd10 = *(*0x20 + -0x10);\n                            piVar17 = *0x54dd18;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43d6a7;\n                            fcn.004596a0(uVar6, *0x54dd18, uVar11, iVar8);\n                            piVar17 = *0x54dd18;\n                        }\ncode_r0x0043d6ae:\n                        *0x54dd18 = piVar17;\n                        unaff_RSI = *0x54dd98;\n                        uVar14 = *(*0x20 + -0x6c);\n                        uVar11 = uVar14;\n                        if (*0x54dda0 < uVar14) {\n                            *(*0x20 + -0x58) = uVar14;\n                            *(*0x20 + -0xb8) = 0x43d713;\n                            uVar6 = fcn.00443280(*0x54dd98);\n                            unaff_RBX = *(*0x20 + -0x58);\n                            piVar17 = unaff_RBX;\n                            piVar7 = unaff_RBX;\n                            if (*0x5a1da0 != 0) {\n                                *(*0x20 + -0xb8) = 0x43d745;\n                                piVar17 = *0x54dd98;\n                                *0x54dd98 = unaff_RBX;\n                                piVar7 = *0x54dda0;\n                                *0x54dda0 = unaff_RBX;\n                                fcn.00459540(piVar17, piVar7, uVar11, iVar8);\n                                uVar6 = *0x54dd90;\n                                piVar17 = *0x54dd98;\n                                piVar7 = *0x54dda0;\n                            }\n                            *0x54dda0 = piVar7;\n                            *0x54dd98 = piVar17;\n                            *0x54dd90 = uVar6;\n                            *(*0x20 + -0xb8) = 0x43d75f;\n                            uVar6 = fcn.00443280(*0x54ddd8);\n                            *0x54dde0 = *(*0x20 + -0x58);\n                            piVar17 = *0x54dde0;\n                            if (*0x5a1da0 != 0) {\n                                *(*0x20 + -0xb8) = 0x43d790;\n                                piVar17 = *0x54ddd8;\n                                *0x54ddd8 = *0x54dde0;\n                                fcn.00459540(piVar17, *0x54dde0, uVar11, iVar8);\n                                uVar6 = *0x54ddd0;\n                                piVar17 = *0x54ddd8;\n                            }\ncode_r0x0043d792:\n                            *0x54ddd8 = piVar17;\n                            *0x54ddd0 = uVar6;\n                            *(*0x20 + -0xb8) = 0x43d79e;\n                            fcn.00409cc0();\n                            uVar14 = *(*0x20 + -0x70);\n                            uVar11 = *(*0x20 + 8);\n                            goto code_r0x0043d7e0;\n                        }\n                        unaff_RBX = uVar14;\n                        piVar7 = *0x54dda0;\n                        if (unaff_RBX <= *0x54dda0) {\n                            piVar7 = *0x54dde0;\n                            *0x54dd98 = unaff_RBX;\n                            uVar6 = *0x54ddd0;\n                            piVar17 = unaff_RBX;\n                            if (unaff_RBX <= *0x54dde0) goto code_r0x0043d792;\n                            goto code_r0x0043dd12;\n                        }\n                        goto code_r0x0043dd1a;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar7 = *0x54dd20;\n                    piVar17 = unaff_RSI;\n                    if (unaff_RSI <= *0x54dd20) goto code_r0x0043d6ae;\n                }\n                else {\ncode_r0x0043d7e0:\n                    while( true ) {\n                        piVar17 = uVar14;\n                        if (uVar11 <= uVar14) break;\n                        unaff_RSI = uVar14;\n                        piVar15 = *0x54dd18;\n                        piVar7 = piVar17;\n                        if (*0x54dd18 <= unaff_RSI) goto code_r0x0043dd0a;\n                        *(*0x20 + -0x60) = uVar14;\n                        *(*0x20 + -0x48) = unaff_RSI;\n                        iVar8 = (*0x54dd10)[unaff_RSI];\n                        if (iVar8 == 0) {\n                            *(*0x20 + -0xb8) = 0x43d827;\n                            iVar8 = fcn.0040bba0();\n                            piVar17 = *(*0x20 + -0x60);\n                        }\n                        *(*0x20 + -0x28) = iVar8;\n                        *(*0x20 + -0xb8) = 0x43d845;\n                        fcn.0043cf40(iVar8, piVar17, uVar11);\n                        piVar15 = *0x54dd18;\n                        piVar7 = *0x54dd10;\n                        if (*0x54dd18 <= *(*0x20 + -0x48)) goto code_r0x0043dd05;\n                        piVar7 = *0x54dd10 + *(*0x20 + -0x48);\n                        if (*0x5a1da0 != '\\0') {\n                            *(*0x20 + -0x18) = piVar7;\n                            piVar17 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb8) = 0x43d88f;\n                            fcn.00402d00();\n                            piVar7 = *(*0x20 + -0x18);\n                        }\n                        *piVar7 = *(*0x20 + -0x28);\n                        uVar14 = *(*0x20 + -0x60) + 1;\n                        uVar11 = *(*0x20 + 8);\n                        unaff_RBX = piVar17;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043d95f:\n                        piVar7 = *(*0x20 + -0x20);\ncode_r0x0043d967:\n                        *(piVar7[6] + 0xa0) = 0;\n                        piVar17 = *0x54dd10;\n                        if (*0x54dd18 != NULL) {\n                            iVar8 = **0x54dd10;\n                            *(iVar8 + 0x38) = 0;\n                            *(iVar8 + 4) = 0;\n                            *(*0x20 + -0xb8) = 0x43d9a5;\n                            fcn.0043dd60();\n                            if (*0x553d30 != '\\0') {\n                                *(*0x20 + -0xb8) = 0x43d9b3;\n                                fcn.0044dfc0();\n                            }\n                            goto code_r0x0043d9b3;\n                        }\n                    }\n                    else {\n                        if (uVar11 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043d95f;\n                            if (*0x553d30 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb8) = 0x43d8f5;\n                                fcn.0044cd00(0);\n                                *(*0x20 + -0xb8) = 0x43d90d;\n                                fcn.0044dc60();\n                            }\n                            piVar7 = *(*0x20 + -0x20);\n                            *(*(piVar7[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043d967;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb8) = 0x43d95d;\n                        fcn.00412be0();\n                        piVar17 = unaff_RBX;\ncode_r0x0043d9b3:\n                        *0x5a1c90 = 0;\n                        uVar16 = *(*0x20 + -0x70);\n                        uVar14 = *(*0x20 + 8);\n                        uVar19 = uVar14;\n                        while (piVar15 = *0x54dd18,  piVar7 = uVar16,  uVar14 < uVar16) {\n                            piVar17 = uVar14;\n                            unaff_RSI = *0x54dd18;\n                            if (*0x54dd18 <= piVar17) goto code_r0x0043dcf0;\n                            *(*0x20 + -100) = uVar14;\n                            *(*0x20 + -0xb8) = 0x43d9da;\n                            fcn.0043d0e0();\n                            uVar19 = *(*0x20 + 8);\n                            uVar16 = *(*0x20 + -0x70);\n                            unaff_RSI = piVar15;\n                            uVar14 = *(*0x20 + -100) + 1;\n                        }\n                        if (uVar19 == *0x54dd18) {\ncode_r0x0043daa9:\n                            uVar11 = uVar19;\n                            iVar8 = *(*0x20 + -0x20);\n                            iVar10 = 0;\n                            while( true ) {\n                                uVar19 = uVar19 - 1;\n                                *(*0x20 + -0x30) = iVar10;\n                                if (uVar19 < 0) {\n                                    *0x54de60 = uVar11;\n                                    *0x54de70 = 0;\n                                    for (uVar14 = 1; uVar4 = *0x54de68,  uVar19 = uVar11,  uVar13 = uVar11, \n                                        uVar16 = uVar14,  uVar14 <= uVar19; uVar14 = uVar14 + 1) {\n                                        while (uVar19 = uVar13,  uVar19 != 0) {\n                                            piVar7 = *(*0x20 + -0x70);\n                                            uVar13 = uVar16 % uVar13;\n                                            uVar16 = uVar19;\n                                        }\n                                        if (uVar16 == 1) {\n                                            uVar13 = *0x54de70 + 1;\n                                            uVar12 = *0x54de70;\n                                            uVar9 = *0x54de68;\n                                            if (*0x54de78 < uVar13) {\n                                                *(*0x20 + -0x5c) = uVar14;\n                                                *(*0x20 + -0xb8) = 0x43dbed;\n                                                uVar11 = *0x54de70;\n                                                uVar9 = fcn.00443500(*0x54de70);\n                                                uVar12 = uVar9;\n                                                if (*0x5a1da0 != 0) {\n                                                    *(*0x20 + -0xb8) = 0x43dc12;\n                                                    uVar12 = *0x54de78;\n                                                    *0x54de78 = uVar11;\n                                                    uVar9 = fcn.00459540(uVar11, piVar7, uVar13, uVar12);\n                                                    uVar12 = *0x54de68;\n                                                    uVar11 = *0x54de78;\n                                                }\n                                                *0x54de78 = uVar11;\n                                                *0x54de68 = uVar12;\n                                                piVar7 = *(*0x20 + -0x70);\n                                                uVar14 = *(*0x20 + -0x5c);\n                                                uVar11 = *(*0x20 + 8);\n                                                iVar10 = *(*0x20 + -0x30);\n                                                uVar12 = uVar4;\n                                            }\n                                            *0x54de70 = uVar12 + 1;\n                                            *(uVar9 + uVar12 * 4) = uVar14;\n                                        }\n                                    }\n                                    *0x5a1b88 = uVar19;\n                                    if (uVar19 != piVar7) {\n                                        *(*0x20 + -0xb8) = 0x43dc67;\n                                        fcn.00417cc0(uVar11);\n                                        iVar10 = *(*0x20 + -0x30);\n                                    }\n                                    return iVar10;\n                                }\n                                if (*0x54dd18 <= uVar19) break;\n                                iVar3 = (*0x54dd10)[uVar19];\n                                if (*(*(iVar8 + 0x30) + 0xa0) != iVar3) {\n                                    *(iVar3 + 4) = 0;\n                                    iVar5 = *0x54e6c0;\n                                    do {\n                                    } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                                    if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) {\n                                        *(*0x20 + -0x68) = uVar19;\n                                        piVar17 = *(*0x20 + -0x40);\n                                        *(*0x20 + -0xb8) = 0x43db2c;\n                                        fcn.0043fa00();\n                                        uVar11 = *(*0x20 + 8);\n                                        piVar7 = *(*0x20 + -0x70);\n                                        uVar19 = *(*0x20 + -0x68);\n                                        iVar8 = *(*0x20 + -0x20);\n                                        iVar10 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x54e6c0 != 0) {\n                                            *0x54e6c0 = *(*0x54e6c0 + 0x128);\n                                            *0x54e6c8 = *0x54e6c8 + -1;\n                                        }\n                                        *(iVar3 + 0x38) = iVar5;\n                                        *(iVar3 + 8) = iVar10;\n                                        iVar10 = iVar3;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb8) = 0x43dcd0;\n                            fcn.004599e0(*0x54dd18);\ncode_r0x0043dcd0:\n                            *(*0x20 + -0xb8) = 0x43dcd8;\n                            fcn.00459a60(piVar17, piVar7);\ncode_r0x0043dcd8:\n                            *(*0x20 + -0xb8) = 0x43dce5;\n                            fcn.00459a60(piVar17, piVar7);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43da2c;\n                            fcn.00409aa0();\n                            piVar15 = *(*0x20 + 8);\n                            piVar7 = piVar15;\n                            piVar17 = *0x54dd20;\n                            if (piVar15 <= *0x54dd20) {\n                                piVar17 = *(*0x20 + -0x6c);\n                                piVar7 = *0x54dda0;\n                                *0x54dd18 = piVar15;\n                                if (piVar17 <= *0x54dda0) {\n                                    piVar7 = *0x54dde0;\n                                    *0x54dd98 = piVar17;\n                                    if (piVar17 <= *0x54dde0) {\n                                        *(*0x20 + -0xb8) = 0x43da9e;\n                                        *0x54ddd8 = piVar17;\n                                        fcn.00409cc0();\n                                        uVar19 = *(*0x20 + 8);\n                                        piVar7 = *(*0x20 + -0x70);\n                                        goto code_r0x0043daa9;\n                                    }\n                                    goto code_r0x0043dcd0;\n                                }\n                                goto code_r0x0043dcd8;\n                            }\n                        }\n                        *(*0x20 + -0xb8) = 0x43dcf0;\n                        piVar15 = piVar17;\n                        fcn.00459a60(piVar7, piVar17);\n                        piVar7 = piVar15;\ncode_r0x0043dcf0:\n                        *(*0x20 + -0xb8) = 0x43dcfb;\n                        fcn.004599e0(unaff_RSI);\n                    }\n                    piVar15 = NULL;\n                    *(*0x20 + -0xb8) = 0x43dd05;\n                    fcn.004599e0(0);\ncode_r0x0043dd05:\n                    *(*0x20 + -0xb8) = 0x43dd0a;\n                    fcn.004599e0(piVar15);\n                    unaff_RBX = piVar17;\ncode_r0x0043dd0a:\n                    *(*0x20 + -0xb8) = 0x43dd12;\n                    fcn.004599e0(piVar15);\ncode_r0x0043dd12:\n                    *(*0x20 + -0xb8) = 0x43dd1a;\n                    fcn.00459a60(unaff_RBX, piVar7);\ncode_r0x0043dd1a:\n                    *(*0x20 + -0xb8) = 0x43dd25;\n                    fcn.00459a60(unaff_RBX, piVar7);\n                }\n                *(*0x20 + -0xb8) = 0x43dd2d;\n                fcn.00459a60(unaff_RSI, piVar7);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb8) = 0x43dd3e;\n            in_EAX = fcn.004317e0();\n        }\n        *(puVar18 + 8) = in_EAX;\n        *(puVar18 + -8) = 0x43dd48;\n        fcn.00457320();\n        in_EAX = *(puVar18 + 8);\n        *0x20 = puVar18;\n    } while( true );\n}\n",
        "token_count": 5092
    },
    "0043dd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043dd60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0043ddc0();\n    fcn.00412be0();\n    if (*0x553d30 != '\\0') {\n        fcn.0044dc00();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0043ddc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ddc0(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.004317e0();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.00433300();\n        fcn.00433120();\n        fcn.004317e0();\n    } while( true );\n}\n",
        "token_count": 287
    },
    "0043dee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043dee0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x553d30 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43df3e;\n                        fcn.0044dc60();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43df7d;\n                fcn.004330a0();\n                *(*0x20 + -0x48) = 0x43df8e;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x43df98;\n                fcn.00433920();\n                *(*0x20 + -0x48) = 0x43dfa9;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x43dfb3;\n                fcn.00433920();\n                *(*0x20 + -0x48) = 0x43dfc5;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x43dfcf;\n                fcn.00433800();\n                *(*0x20 + -0x48) = 0x43dfe5;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x43dfef;\n                fcn.004336a0();\n                *(*0x20 + -0x48) = 0x43dff4;\n                fcn.00433300();\n                *(*0x20 + -0x48) = 0x43dff9;\n                fcn.00433120();\n                *(*0x20 + -0x48) = 0x43e00a;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x48) = 0x43e01b;\n            fcn.004317e0();\n        }\n        *(puVar4 + -8) = 0x43e025;\n        fcn.00457320();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 835
    },
    "0043e0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043e0a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5a1b4b != '\\0') || (*0x5a1b49 != '\\0')) {\n                return;\n            }\n            if (*0x5a1ba4 != 0) {\n                return;\n            }\n            if ((*0x5a1b4a == '\\0') && (*0x5a1b42 != '\\0')) {\n                *(*0x20 + -0x50) = 0x43e106;\n                *0x5a1c48 = fcn.004375e0();\n                uVar3 = *0x5a1b6c != 0;\n            }\n            else {\n                uVar3 = 0;\n            }\n            uVar5 = *0x54e6c8;\n            iVar6 = (((*0x54e6d0 - *0x54e6e0) - *0x54e6c8) - *0x54e6cc) - *0x54e6dc;\n            if (uVar3 < iVar6) {\n                return;\n            }\n            if (-1 < iVar6) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43e3a0;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43e188;\n                fcn.00434d80();\n                if (*(*0x20 + -0x28) == 0) {\n                    *(*0x20 + -0x50) = 0x43e19e;\n                    fcn.00409cc0();\n                    *(*0x20 + -0x50) = 0x43e1af;\n                    fcn.004318e0();\n                }\n                if (*0x5a1c50 != 0) {\n                    *(*0x20 + -0x50) = 0x43e1be;\n                    iVar1 = fcn.0044c680();\n                    iVar4 = 0x7fffffffffffffff;\n                    if (iVar1 < 0x7fffffffffffffff) {\n                        *(*0x20 + -0x50) = 0x43e1f1;\n                        *0x5a1c50 = iVar1;\n                        iVar2 = fcn.0043fba0();\n                        iVar6 = *0x54e6fc;\n                        iVar1 = *0x54e6c0;\n                        if (iVar2 != 0) {\n                            if (*0x54e6c0 != 0) {\n                                *0x54e6c8 = *0x54e6c8 - 1;\n                                LOCK();\n                                *0x54e6fc = *0x54e6fc + 1;\n                                puVar7 = *0x54e6c0 + 0xe4;\n                                *0x54e6c0 = *(*0x54e6c0 + 0x128);\n                                *puVar7 = 1;\n                                *(iVar1 + 0xa8) = iVar2;\n                                *(*0x20 + -0x50) = 0x43e250;\n                                fcn.00409da0(iVar1, iVar6);\n                                return;\n                            }\n                            *(*0x20 + -0x50) = 0x43e289;\n                            iVar4 = *0x54e6c0;\n                            fcn.004317e0();\n                        }\n                        *(*0x20 + -0x50) = 0x43e29a;\n                        iVar1 = fcn.004317e0();\n                        goto code_r0x0043e29a;\n                    }\n                }\n                iVar1 = 0;\n                iVar4 = *0x54dd10;\n                uVar5 = *0x54dd18;\n                while( true ) {\n                    if (uVar5 <= iVar1) {\n                        *(*0x20 + -0x50) = 0x43e2cd;\n                        fcn.00409cc0();\n                        *(*0x20 + -0x50) = 0x43e2de;\n                        fcn.004318e0();\n                        return;\n                    }\n                    if (*(*(iVar4 + iVar1 * 8) + 0x2290) != 0) break;\ncode_r0x0043e29a:\n                    iVar1 = iVar1 + 1;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = *0x54e6d0 - *0x54e6e0;\n            *(*0x20 + -0x2c) = *0x54e6c8;\n            *(*0x20 + -0x30) = *0x54e6cc;\n            *(*0x20 + -0x34) = *0x54e6dc;\n            *(*0x20 + -0x50) = 0x43e2ff;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x43e310;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x43e31c;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x43e32d;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x43e339;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x43e34a;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x43e357;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x43e368;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x43e374;\n            fcn.004337a0();\n            *(*0x20 + -0x50) = 0x43e379;\n            fcn.00433300();\n            *(*0x20 + -0x50) = 0x43e37e;\n            fcn.00433120();\n            *(*0x20 + -0x50) = 0x43e38f;\n            fcn.004317e0();\n        }\n        *(puVar7 + -8) = 0x43e395;\n        fcn.00457320();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1658
    },
    "0043e920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0043e920(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar4 = 0;\n    for (iVar3 = 0; iVar3 < *0x54dd18; iVar3 = iVar3 + 1) {\n        iVar2 = *(*0x54dd10 + iVar3 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar5 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar5 <= in_RAX) {\n                        fcn.0043ec00();\n                    }\n                    bVar6 = iVar5 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar6 = false;\n                }\n            }\n            else {\n                bVar6 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar6) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar6 = *0x54e6fc + *0x54e6f8 != 0;\n                        }\n                        else {\n                            bVar6 = false;\n                        }\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if ((!bVar6) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.00409cc0();\n                        fcn.0043e040();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x553d30 != '\\0') {\n                                fcn.0044e3e0();\n                                fcn.0044dc60();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00437f80();\n                            iVar4 = iVar4 + 1;\n                        }\n                        fcn.0043e040();\n                        fcn.00409aa0();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.00409cc0();\n    return iVar4;\n}\n",
        "token_count": 748
    },
    "0043eb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043eb60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x54dd18,  iVar1 = *0x54dd10,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.0043ec00();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 226
    },
    "0043ec00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0043ec00(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x5a2018 == 0) {\n                *(in_RAX + 0x22c8) = 1;\n                fcn.0042f140();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0043ee20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043ee20(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack176;\n    uint64_t uStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    int64_t iStack16;\n    \n    while (&uStack48 < *(unaff_R14 + 0x10) || &uStack48 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0045b2e0();\n    if (*0x5a1d28 == 0) {\n        *0x5a1d28 = iStack176;\n    }\n    fcn.00409aa0();\n    iStack40 = *0x5a1d28;\n    uStack48 = *0x54e6f8;\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004337a0(iStack176 - iStack40 >> 0x3f, (iStack176 - iStack40) / 1000000);\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.00433120();\n    if (in_AL != '\\0') {\n        uStack48 = *0x54e780;\n        iStack40 = *0x54e6cc;\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.00433300();\n        fcn.00433120();\n    }\n    iVar3 = *0x54dd18;\n    iStack16 = *0x54dd10;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.004330a0();\n            fcn.004332c0();\n            fcn.00433120();\n            if (iVar4 == 0) {\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n            }\n            fcn.004330a0();\n            fcn.004336a0(uVar1);\n            fcn.00433120();\n            if (iVar4 == *0x54dd18 + -1) {\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433120();\n            }\n        }\n        else {\n            uStack48 = *(iVar2 + 4);\n            iStack40 = *(iVar2 + 0x9a8);\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004336a0(uVar1);\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.00433300();\n            fcn.00433120();\n        }\n    }\n    iVar4 = *0x54d598;\n    if (in_AL != '\\0') {\n        while (iVar4 != 0) {\n            iStack40 = *(iVar4 + 0xb8);\n            uStack48 = *(iVar4 + 0xc4);\n            uStack24 = *(iVar4 + 200);\n            iStack32 = iVar4;\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.004339a0();\n            fcn.00433340();\n            fcn.004339a0();\n            fcn.00433340();\n            fcn.004339a0();\n            fcn.004337a0();\n            fcn.00433300();\n            fcn.00433120();\n            iVar4 = *(iStack32 + 0x120);\n        }\n        fcn.00434d80();\n        fcn.00409c80();\n        return;\n    }\n    fcn.00409c80();\n    return;\n}\n",
        "token_count": 1314
    },
    "0043f620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043f620(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar2 = *0x54e730;\n    uVar1 = in_AL ^ 1;\n    if (*0x54e718 != uVar1) {\n        *0x54e718 = uVar1;\n        if (in_AL == 0) {\n            fcn.00409cc0();\n        }\n        else {\n            *0x54e730 = 0;\n            if (*0x54e728 != 0) {\n                *(*0x54e728 + 0xa0) = 0;\n                if (*0x54e708 == 0) {\n                    *0x54e700 = *0x54e720;\n                }\n                else {\n                    *(*0x54e708 + 0xa0) = *0x54e720;\n                }\n                *0x54e708 = *0x54e728;\n            }\n            *0x54e710 = *0x54e710 + iVar2;\n            *0x54e720 = in_XMM15;\n            fcn.00409cc0();\n            while ((iVar2 != 0 && (*0x54e6f8 != 0))) {\n                fcn.00437cc0();\n                iVar2 = iVar2 + -1;\n            }\n        }\n        return;\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 397
    },
    "00440020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440020(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.00409aa0();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x54e700;\n        iVar3 = *0x54e708;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x54e708 != 0)) {\n            *(*0x54e708 + 0xa0) = uVar4;\n            uVar5 = *0x54e700;\n        }\n        *0x54e708 = iVar3;\n        *0x54e700 = uVar5;\n        *0x54e710 = *0x54e710 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.00409cc0();\n    }\n    return;\n}\n",
        "token_count": 547
    },
    "00440320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00440320(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.004571e0();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 562
    },
    "004404c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004404c0(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar2;\n            *(*0x20 + -0x30) = 0x4404fd;\n            iVar5 = fcn.00440320(uVar2);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            iVar1 = iVar5 + *(*0x20 + -0xc) + -1;\n            iVar3 = *(*0x20 + 8);\n            uVar4 = *(iVar3 + 0x198 + iVar1 * 8);\n            if (iVar5 == 1) {\n                return uVar4;\n            }\n            uVar2 = ((*(*0x20 + -0xc) - *(iVar3 + 400)) + iVar5) - 1;\n            arg1._0_1_ = uVar2;\n            if (uVar2 < 0x100) {\n                *(iVar3 + 0x194) = iVar1;\n                return uVar4;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x44057a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x44058e;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "004405c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004405c0(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x440631;\n                    fcn.004405c0();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x5a1e20 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x440665;\n                    fcn.0045b2e0();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x5a1e38;\n                    uVar7 = *0x5a1e30;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x4406ed;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x5a1e20 == '\\0') goto code_r0x004408be;\n                *(*0x20 + -0x130) = 0x440725;\n                fcn.0045b2e0(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                *(*0x20 + -0xc0) = *0x5a1e30;\n                *(*0x20 + -200) = *0x5a1e38;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x44076a;\n                fcn.004490a0();\n                *(*0x20 + -0x130) = 0x44076f;\n                uVar3 = fcn.004498c0();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x44078d;\n                fcn.004330a0();\n                *(*0x20 + -0x130) = 0x44079e;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x4407b0;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x4407c5;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x4407ca;\n                fcn.00433120();\n                *(*0x20 + -0x130) = 0x4407eb;\n                uVar4 = fcn.004175a0(0x18);\n                *(*0x20 + -0x130) = 0x4407fe;\n                uVar3 = fcn.004473c0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x440810;\n                fcn.004330a0();\n                *(*0x20 + -0x130) = 0x440825;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x440836;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x44083b;\n                fcn.00433120();\n                *(*0x20 + -0x130) = 0x44085a;\n                uVar4 = fcn.004175a0(0x18);\n                *(*0x20 + -0x130) = 0x44086d;\n                uVar3 = fcn.004473c0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x44087f;\n                fcn.004330a0();\n                *(*0x20 + -0x130) = 0x440891;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x4408a5;\n                fcn.004339a0();\n                *(*0x20 + -0x130) = 0x4408aa;\n                fcn.00433120();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x00440aa5;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x440958;\n                    uVar4 = fcn.004473c0(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x44096a;\n                    fcn.004330a0();\n                    *(*0x20 + -0x130) = 0x44097c;\n                    fcn.004339a0();\n                    *(*0x20 + -0x130) = 0x44098d;\n                    fcn.004339a0();\n                    *(*0x20 + -0x130) = 0x440992;\n                    fcn.00433120();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x00440a86;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x440a25;\n                        uVar4 = fcn.004473c0(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x440a37;\n                        fcn.004330a0();\n                        *(*0x20 + -0x130) = 0x440a49;\n                        fcn.004339a0();\n                        *(*0x20 + -0x130) = 0x440a5a;\n                        fcn.004339a0();\n                        *(*0x20 + -0x130) = 0x440a5f;\n                        fcn.00433120();\n                        *(*0x20 + -0x130) = 0x440a65;\n                        fcn.004330a0();\n                        *(*0x20 + -0x130) = 0x440a6a;\n                        fcn.00433300();\n                        *(*0x20 + -0x130) = 0x440a6f;\n                        fcn.00433120();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x004408be:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x440a86;\n                    fcn.004599e0(0x18);\ncode_r0x00440a86:\n                    *(*0x20 + -0x130) = 0x440a93;\n                    fcn.004599e0(0x18);\n                }\n                *(*0x20 + -0x130) = 0x440aa5;\n                fcn.004599e0(0x18);\ncode_r0x00440aa5:\n                *(*0x20 + -0x130) = 0x440ab2;\n                fcn.004599e0(0x18);\n            }\n            *(*0x20 + -0x130) = 0x440ac5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x440ad0;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2831
    },
    "00440ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00440ae0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = unaff_RBX;\n    *0x5a1b60 = in_EAX;\n    if (*0x5a1da0 != 0) {\n        fcn.00459680(arg1, arg2, arg3, arg4);\n        uVar1 = *0x54d5a0;\n    }\n    *0x54d5a0 = uVar1;\n    return;\n}\n",
        "token_count": 194
    },
    "00440b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00440c7a)\n// WARNING: Removing unreachable block (ram,0x00440c8b)\n// WARNING: Removing unreachable block (ram,0x00440c9c)\n// WARNING: Removing unreachable block (ram,0x00440cad)\n// WARNING: Removing unreachable block (ram,0x00440cbe)\n// WARNING: Removing unreachable block (ram,0x00440ccf)\n// WARNING: Removing unreachable block (ram,0x00440ce5)\n// WARNING: Removing unreachable block (ram,0x00440cf6)\n// WARNING: Removing unreachable block (ram,0x00440d07)\n// WARNING: Removing unreachable block (ram,0x00440d18)\n\nulong fcn.00440b40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x5a1d40 = 0x2a;\n    *0x5a1d48 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 282
    },
    "00441740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441740(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x004417b6;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x441790;\n                    fcn.00409aa0();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x4417aa;\n                        fcn.00409da0();\n                    }\n                    *(*0x20 + -0x20) = 0x4417b6;\n                    fcn.00409cc0();\n                }\ncode_r0x004417b6:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4417fb;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x441806;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "00441820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441820(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.004593e0(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00434380();\n    return;\n}\n",
        "token_count": 152
    },
    "004418c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004418c0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x441bbb;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + -8) = 0x441bd4;\n        fcn.00457320();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar4 = *in_RAX;\n        if (uVar4 == 0) break;\n        LOCK();\n        if (uVar4 == *in_RAX) {\n            *in_RAX = uVar4 - 1;\n            return uVar4;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x3d) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x441932;\n    iVar5 = fcn.00434460(arg1, uVar4);\n    *(*0x20 + -0x18) = iVar5;\n    uVar6 = *(*0x20 + 8);\n    *(iVar5 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar5 + 0x30) = 0;\n    uVar6 = uVar6 >> 3;\n    uVar8 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar6) >> 0x40, 0);\n    uVar8 = (uVar8 + uVar6 >> 1 | CARRY8(uVar8, uVar6) << 0x3f) >> 7;\n    iVar7 = uVar6 + uVar8 * -0xfb;\n    *(*0x20 + -0x28) = iVar7;\n    uVar4 = *(*0x20 + 0x18);\n    if (((*(*0x20 + 0x18) & 1) == 0) || (*0x5a1c20 == 0)) {\n        iVar9 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x441996;\n        fcn.004593e0(iVar7, uVar8);\n        iVar9 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar7 = *(*0x20 + -0x28);\n        iVar5 = *(*0x20 + -0x18);\n        uVar4 = *(*0x20 + 0x18);\n    }\n    if (((uVar4 >> 1 & 1) != 0) && (*0x5a1ca0 != 0)) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x4419f0;\n            fcn.004593e0(iVar7, 0);\n            iVar9 = *(*0x20 + -0x60);\n            iVar7 = *(*0x20 + -0x28);\n            iVar5 = *(*0x20 + -0x18);\n        }\n        *(iVar5 + 0x20) = iVar9;\n    }\n    *(*0x20 + -0x38) = iVar9;\n    iVar7 = iVar7 * 0x40;\n    *(*0x20 + -0x30) = iVar7;\n    *(*0x20 + -0x20) = iVar7 + 0x54fe60;\n    do {\n        *(*0x20 + -0x10) = iVar7 + 0x54fe60;\n        *(*0x20 + -0x68) = 0x441a55;\n        fcn.00409aa0();\n        piVar1 = *(*0x20 + -0x30) + 0x54fe70;\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar3 = *(*0x20 + 8);\n        do {\n            iVar2 = *piVar3;\n            bVar11 = iVar2 == 0;\n            if (bVar11) goto code_r0x00441a84;\n            *(*0x20 + -0x3c) = iVar2;\n            LOCK();\n        } while (iVar2 != *piVar3);\n        *piVar3 = iVar2 + -1;\n        bVar11 = *(*0x20 + -0x3c) == 0;\ncode_r0x00441a84:\n        if (!bVar11) {\n            LOCK();\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            *(*0x20 + -0x68) = 0x441b45;\n            fcn.00409cc0(iVar2);\ncode_r0x00441b45:\n            iVar5 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar5) {\n                *(*0x20 + -0x68) = 0x441b6f;\n                fcn.00429200(iVar5 - *(*0x20 + -0x38));\n            }\n            *(*0x20 + -0x68) = 0x441b79;\n            uVar6 = fcn.00434760();\n            return uVar6;\n        }\n        *(*0x20 + -0x68) = 0x441aa5;\n        fcn.00441e20(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x441acf;\n        fcn.00434240(0x12);\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar1 = *(*0x20 + 8);\n            do {\n                iVar2 = *piVar1;\n                if (iVar2 == 0) goto code_r0x00441afa;\n                LOCK();\n            } while (iVar2 != *piVar1);\n            *piVar1 = iVar2 + -1;\ncode_r0x00441afa:\n            bVar11 = iVar2 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x00441b45;\n        iVar7 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1887
    },
    "00441c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00441c00(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int32_t *arg1_00;\n    uint64_t uVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar2 = in_RAX >> 3;\n            uVar4 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2) >> 0x40, 0);\n            iVar6 = (uVar2 + ((uVar4 + uVar2 >> 1 | CARRY8(uVar4, uVar2) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar6 + 0x54fe70) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar6 + 0x54fe70;\n            *(*0x20 + -0x30) = iVar6;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar6 + 0x54fe60;\n            *(*0x20 + -0x50) = 0x441c94;\n            fcn.00409aa0();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x441d49;\n                uVar3 = fcn.00409cc0();\n                return uVar3;\n            }\n            uVar3 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x441cc5;\n            iVar6 = fcn.004421c0(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar6;\n            *(*0x20 + -0x38) = uVar3;\n            if (iVar6 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x441cee;\n            fcn.00409cc0();\n            iVar6 = *(*0x20 + -0x28);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar6 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18) + 3;\n                *(*0x20 + -0x50) = 0x441d1e;\n                fcn.00454ee0();\n                iVar6 = *(*0x20 + -0x28);\n            }\n            if (*(iVar6 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x441de9;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x441dfd;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n    arg1_00 = *(*0x20 + 0x10);\n    if (*(*0x20 + 0x10) != 0) {\n        arg1_00 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *arg1_00;\n            if (iVar1 == 0) goto code_r0x00441dc5;\n            LOCK();\n        } while (iVar1 != *arg1_00);\n        *arg1_00 = iVar1 + -1;\ncode_r0x00441dc5:\n        if (iVar1 != 0) {\n            *(iVar6 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x441d75;\n    uVar3 = fcn.00441820(arg1_00);\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x441d9c;\n        uVar3 = fcn.00457160();\n    }\n    return uVar3;\n}\n",
        "token_count": 1290
    },
    "00441e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441e20(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00441e20:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x5a1da0 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x441e6a;\n            fcn.004596e0(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x441e76;\n            fcn.00459680(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x441e85;\n            fcn.004596e0(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x441e8d;\n            in_RAX = fcn.004596e0(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x5a1da0 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x442077;\n                            fcn.00459640(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    else if (*0x5a1da0 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44205d;\n                        fcn.00459640(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x5a1da0 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x442099;\n                        fcn.00459640(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x4420a5;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x5a1da0 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441ef1;\n                        fcn.00459640(arg1, piVar4, arg3, arg4);\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x5a1da0 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441f1c;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x5a1da0 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441f3a;\n                        iVar2 = fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x5a1da0 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441f5b;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x5a1da0 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x441f7d;\n                            fcn.00459640(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x5a1da0 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x441f9e;\n                            fcn.00459640(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (*0x5a1da0 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441fb6;\n                        fcn.004596e0(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x5a1da0 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x441fd2;\n                        iVar2 = fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x5a1da0 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x441fed;\n                            fcn.004596e0(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x5a1da0 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44201b;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x442025;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x44202e;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x442037;\n                        fcn.00459540(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x5a1da0 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x44210b;\n            unaff_RDI = arg3;\n            fcn.00459660(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x442113;\n            arg3 = unaff_RDI;\n            fcn.00459640(arg1, noname_1, unaff_RDI, uVar5);\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x442165;\n                fcn.00442680(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00442171;\n                *(*0x20 + -0x28) = 0x442157;\n                fcn.00442520(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00442186;\ncode_r0x00442171:\n    unaff_RBX = 0x4f0cc8;\n    *(*0x20 + -0x28) = 0x442185;\n    in_RAX = fcn.00431040();\ncode_r0x00442186:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x44219f;\n    fcn.00457320();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x00441e20;\n}\n",
        "token_count": 2623
    },
    "004421c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004421c0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t noname_0;\n    int64_t noname_1;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar5 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar5 = noname_0 + 0x10;\n        }\n        else {\n            piVar5 = noname_0 + 8;\n        }\n        noname_0 = *piVar5;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.004593e0(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00442462;\n                fcn.00442520(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00442462:\n            fcn.00442680(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x5a1da0 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.00459660(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x5a1da0 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.00459660(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5a1da0 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.00459660(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x5a1da0 == 0) {\n            *piVar5 = iVar3;\n        }\n        else {\n            fcn.004596a0(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        noname_1 = *(noname_0 + 0x38);\n        if (*0x5a1da0 == 0) {\n            *(iVar3 + 0x38) = noname_1;\n        }\n        else {\n            fcn.00459660(noname_0, noname_1, param_3, param_4);\n        }\n        iVar4 = *(noname_0 + 0x10);\n        if (*0x5a1da0 == 0) {\n            *(iVar3 + 0x10) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 0x10;\n            iVar4 = fcn.00459540(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x5a1da0 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.004596a0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        iVar4 = *(noname_0 + 8);\n        if (*0x5a1da0 == 0) {\n            *(iVar3 + 8) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 8;\n            iVar4 = fcn.00459540(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x5a1da0 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.004596a0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x5a1da0 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.00459660(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x5a1da0 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.00459660(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x5a1da0 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.00459660(noname_0, 0, param_3, param_4);\n            fcn.00459660(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x5a1da0 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.00459660(noname_0, 0, param_3, param_4);\n        fcn.004596a0(noname_0, uVar6, param_3, param_4);\n        fcn.00459660(noname_0, uVar6, param_3, param_4);\n        fcn.00459660(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1918
    },
    "00442520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442520(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 8);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 0x10);\n            if (*0x5a1da0 == 0) {\n                *(arg3 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 8) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44256a;\n                fcn.00459680(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x442573;\n                fcn.004596c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44257c;\n                in_RAX = fcn.00459660(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x5a1da0 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x4425a5;\n                    in_RAX = fcn.00459680(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x5a1da0 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x4425c6;\n                in_RAX = fcn.00459640(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44263a;\n                fcn.00459640(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x5a1da0 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4425f2;\n                fcn.00459640(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x5a1da0 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x442618;\n                    fcn.00459640(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x442655;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x442665;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1051
    },
    "00442680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442680(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 0x10);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 8);\n            if (*0x5a1da0 == 0) {\n                *(arg3 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 0x10) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x4426ca;\n                fcn.00459680(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4426d3;\n                fcn.004596c0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x4426dc;\n                in_RAX = fcn.00459660(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x5a1da0 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x442705;\n                    in_RAX = fcn.00459680(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x5a1da0 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x442726;\n                in_RAX = fcn.00459640(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44279a;\n                fcn.00459640(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x5a1da0 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x442752;\n                fcn.00459640(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x5a1da0 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x442778;\n                    fcn.00459640(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x4427b5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x4427c5;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1051
    },
    "004429a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004429a0(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x53f370) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x53f378) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.004322c0(),  cVar2 != '\\0')) {\n            fcn.00442c80(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.0045aa00)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x459520;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 593
    },
    "00442c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00442c20(ulong arg1)\n\n{\n    if ((*0x5a1b4b == '\\0') && (*0x5a1b49 == '\\0')) {\n        if (*0x5a1b4d != '\\0') {\n            return 0;\n        }\n        fcn.00442c80(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 91
    },
    "00442c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00442c80(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    ulong *unaff_R14;\n    ulong *puVar4;\n    \n    puVar4 = unaff_R14;\n    if (*0x5a1ba4 != 0) {\n        fcn.0042d600();\n    }\n    *0x5a1ba4 = 1;\n    *puVar4 = 0;\n    puVar4[2] = 0x13a0;\n    puVar4[3] = 0x13a0;\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004332c0();\n    fcn.00433800();\n    fcn.004332c0();\n    fcn.00433800();\n    fcn.004332c0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    piVar2 = puVar4[6];\n    if (((*(piVar2 + 0x1d) != '\\0') && (*piVar2 == arg1)) && (piVar2[0x12] != 0)) {\n        if (*0x5a1b4a != '\\0') {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        arg1 = *(puVar4[6] + 0x90);\n    }\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    *(puVar4[6] + 0xc4) = 2;\n    *(puVar4[6] + 0x98) = arg1;\n    uVar1 = *(unaff_R14[6] + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (uVar3 = *0x53a28c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n        uVar3 = 2;\n    }\n    if (uVar3 != 0) {\n        fcn.004510e0(0);\n        fcn.00452080();\n        fcn.00406420();\n    }\n    fcn.0042d600();\n    return;\n}\n",
        "token_count": 594
    },
    "00443280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00443280(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x004432ea;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x004432ea:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x443309;\n                    iVar3 = fcn.0040b1e0(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x44332c;\n                        fcn.0045a040(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x443345;\n                    iVar3 = fcn.0040b1e0(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x5a1da0 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x443367;\n                        fcn.00410360(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x443385;\n                fcn.0045a340(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x4f0cd8;\n            *(*0x20 + -0x48) = 0x4433a8;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4433c5;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1014
    },
    "00443500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00443500(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint8_t uVar5;\n    int64_t arg1_00;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t *piVar10;\n    int64_t *unaff_RDI;\n    char *pcVar11;\n    int64_t unaff_R14;\n    bool bVar12;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (unaff_RDI <= unaff_RSI) break;\n            unaff_RBX = 0x4f0d08;\n            *(*0x20 + -0x68) = 0x443b98;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x443bb7;\n        fcn.00457320();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    piVar6 = *in_RAX;\n    if (piVar6 == NULL) {\n        return 0x5a1d60;\n    }\n    pcVar11 = unaff_RDI * 2;\n    piVar7 = unaff_RSI;\n    if ((unaff_RSI <= pcVar11) && (piVar7 = pcVar11,  0xff < unaff_RDI)) {\n        for (; 0 < unaff_RDI; unaff_RDI = unaff_RDI + (unaff_RDI + ((unaff_RDI + 0x60 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RSI <= unaff_RDI) {\n                piVar7 = unaff_RDI;\n                pcVar11 = unaff_RDI;\n                if (0 < unaff_RDI) goto code_r0x0044356e;\n                break;\n            }\n        }\n        piVar7 = unaff_RSI;\n        pcVar11 = unaff_RSI;\n    }\ncode_r0x0044356e:\n    do {\n        piVar8 = piVar7;\n        if (piVar6 == 0x1) {\n            if (0x7fff < piVar8) {\n                piVar6 = piVar8;\n                if (piVar8 <= piVar8 + 0x400) {\n                    piVar6 = piVar8 + 0x1fffU & 0xffffffffffffe000;\n                }\ncode_r0x00443639:\n                bVar12 = 0x1000000000000 < piVar8;\n                pcVar11 = arg1;\n                piVar7 = piVar6;\n                goto code_r0x00443969;\n            }\n            if (0x3f8 < piVar8) {\n                piVar6 = piVar8 - 0x381U >> 7;\n                if (piVar6 < 0xf9) {\n                    pcVar11 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    piVar6 = *(piVar6 + 0xa7b6c);\n                    if (piVar6 < 0x44) {\n                        piVar6 = *(piVar6 * 2 + 0x53d060);\n                        goto code_r0x00443639;\n                    }\n                    goto code_r0x00443af9;\n                }\n                goto code_r0x00443b06;\n            }\n            piVar6 = piVar8 + 7U >> 3;\n            if (piVar6 < 0x81) {\n                pcVar11 = 0x53cf20;\n                piVar6 = *(piVar6 + 0xa79e4);\n                if (piVar6 < 0x44) {\n                    piVar6 = *(piVar6 * 2 + 0x53d060);\n                    goto code_r0x00443639;\n                }\n                goto code_r0x00443b13;\n            }\n        }\n        else {\n            if (piVar6 == 0x8) {\n                piVar6 = piVar8 * 8;\n                if (0x7fff < piVar6) {\n                    if (piVar6 <= piVar6 + 0x400) {\n                        piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                    }\ncode_r0x00443714:\n                    bVar12 = 0x200000000000 < piVar8;\n                    pcVar11 = arg1 << 3;\n                    unaff_RSI = unaff_RSI << 3;\n                    piVar7 = piVar6 >> 3;\n                    goto code_r0x00443969;\n                }\n                if (0x3f8 < piVar6) {\n                    piVar10 = piVar6 - 0x381U >> 7;\n                    if (piVar10 < 0xf9) {\n                        pcVar11 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        piVar10 = *(piVar10 + 0xa7b6c);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x53d060);\n                            goto code_r0x00443714;\n                        }\n                        goto code_r0x00443ac5;\n                    }\n                    goto code_r0x00443ad2;\n                }\n                piVar10 = piVar6 + 7U >> 3;\n                piVar6 = piVar8;\n                if (piVar10 < 0x81) {\n                    pcVar11 = 0x53cf20;\n                    piVar10 = *(piVar10 + 0xa79e4);\n                    if (piVar10 < 0x44) {\n                        piVar6 = *(piVar10 * 2 + 0x53d060);\n                        goto code_r0x00443714;\n                    }\n                    goto code_r0x00443adf;\n                }\n            }\n            else {\n                if ((piVar6 & piVar6 - 1U) == 0) {\n                    piVar7 = NULL;\n                    if (piVar6 != NULL) {\n                        for (; (piVar6 >> piVar7 & 1) == 0; piVar7 = piVar7 + 1) {\n                        }\n                    }\n                    uVar5 = piVar7;\n                    pcVar11 = arg1 << (uVar5 & 0x3f);\n                    unaff_RSI = unaff_RSI << (uVar5 & 0x3f);\n                    piVar6 = piVar8 << (uVar5 & 0x3f);\n                    if (0x7fff < piVar6) {\n                        if (piVar6 <= piVar6 + 0x400) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00443834:\n                        bVar12 = 0x1000000000000U >> (uVar5 & 0x3f) < piVar8;\n                        piVar7 = piVar6 >> (uVar5 & 0x3f);\ncode_r0x00443969:\n                        piVar10 = 0x1000000000000;\n                        if ((!bVar12) && (piVar6 < 0x1000000000001)) {\n                            *(*0x20 + -0x10) = unaff_RBX;\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = pcVar11;\n                            *(*0x20 + -0x40) = piVar7;\n                            if (in_RAX[1] == 0) {\n                                *(*0x20 + -0x30) = piVar6;\n                                *(*0x20 + -0x48) = unaff_RSI;\n                                *(*0x20 + -0x68) = 0x4439ac;\n                                uVar4 = fcn.0040b1e0(0);\n                                *(*0x20 + -0x18) = uVar4;\n                                *(*0x20 + -0x68) = 0x4439c9;\n                                fcn.0045a040();\n                                arg1_00 = *(*0x20 + -0x38);\n                                uVar4 = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + 8) = in_RAX;\n                                *(*0x20 + -0x68) = 0x4439ea;\n                                uVar4 = fcn.0040b1e0(1);\n                                arg1_00 = *(*0x20 + -0x38);\n                                if ((arg1_00 != 0) && (*0x5a1da0 != '\\0')) {\n                                    *(*0x20 + -0x18) = uVar4;\n                                    iVar1 = **(*0x20 + 8);\n                                    iVar2 = (*(*0x20 + 8))[1];\n                                    *(*0x20 + -0x68) = 0x443a1b;\n                                    fcn.00410360((arg1_00 - iVar1) + iVar2);\n                                    uVar4 = *(*0x20 + -0x18);\n                                    arg1_00 = *(*0x20 + -0x38);\n                                }\n                            }\n                            *(*0x20 + -0x18) = uVar4;\n                            *(*0x20 + -0x68) = 0x443a34;\n                            fcn.0045a340(arg1_00);\n                            return *(*0x20 + -0x18);\n                        }\n                        unaff_RBX = 0x4f0d08;\n                        *(*0x20 + -0x68) = 0x443a65;\n                        fcn.00431040();\n                        piVar7 = piVar6;\n                        piVar8 = arg1;\n                        in_RAX = piVar10;\ncode_r0x00443a65:\n                        *(*0x20 + -0x68) = 0x443a6f;\n                        fcn.004599e0(0x44);\ncode_r0x00443a6f:\n                        *(*0x20 + -0x68) = 0x443a79;\n                        fcn.00459a00(0xf9);\ncode_r0x00443a79:\n                        *(*0x20 + -0x68) = 0x443a85;\n                        fcn.004599e0(0x44);\n                        piVar10 = piVar8;\n                        goto code_r0x00443a85;\n                    }\n                    if (0x3f8 < piVar6) {\n                        piVar10 = piVar6 - 0x381U >> 7;\n                        if (piVar10 < 0xf9) {\n                            piVar10 = *(piVar10 + 0xa7b6c);\n                            if (piVar10 < 0x44) {\n                                piVar6 = *(piVar10 * 2 + 0x53d060);\n                                goto code_r0x00443834;\n                            }\n                            goto code_r0x00443a8f;\n                        }\n                        goto code_r0x00443a9c;\n                    }\n                    piVar10 = piVar6 + 7U >> 3;\n                    if (piVar10 < 0x81) {\n                        piVar10 = *(piVar10 + 0xa79e4);\n                        if (piVar10 < 0x44) {\n                            piVar6 = *(piVar10 * 2 + 0x53d060);\n                            goto code_r0x00443834;\n                        }\n                        goto code_r0x00443aa9;\n                    }\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar6;\n                    piVar6 = piVar8 * piVar6;\n                    piVar7 = *(*0x20 + -0x20);\n                    pcVar11 = arg1 * piVar7;\n                    unaff_RSI = unaff_RSI * piVar7;\n                    if (0x7fff < piVar6) {\n                        if (piVar6 < piVar6 + 0x400 || piVar6 - (piVar6 + 0x400) == 0) {\n                            piVar6 = piVar6 + 0x1fffU & 0xffffffffffffe000;\n                        }\ncode_r0x00443935:\n                        *(*0x20 + -0x20) = piVar6 / piVar7;\n                        bVar12 = SUB168(ZEXT816(piVar8) * ZEXT816(piVar7) >> 0x40, 0) != 0;\n                        piVar7 = *(*0x20 + -0x20);\n                        goto code_r0x00443969;\n                    }\n                    if (0x3f8 < piVar6) {\n                        uVar3 = piVar6 - 0x381U >> 7;\n                        if (uVar3 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar3] < 0x44) {\n                                piVar6 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                           [uVar3] * 2 + 0x53d060);\n                                goto code_r0x00443935;\n                            }\n                            goto code_r0x00443a65;\n                        }\n                        goto code_r0x00443a6f;\n                    }\n                    uVar3 = piVar6 + 7U >> 3;\n                    piVar10 = piVar8;\n                    if (uVar3 < 0x81) {\n                        uVar3 = *(uVar3 + 0x53cf20);\n                        if (uVar3 < 0x44) {\n                            piVar6 = *(uVar3 * 2 + 0x53d060);\n                            goto code_r0x00443935;\n                        }\n                        goto code_r0x00443a79;\n                    }\ncode_r0x00443a85:\n                    pcVar11 = in_RAX;\n                    *(*0x20 + -0x68) = 0x443a8f;\n                    fcn.00459a00(0x81);\ncode_r0x00443a8f:\n                    *(*0x20 + -0x68) = 0x443a9c;\n                    fcn.004599e0(0x44);\ncode_r0x00443a9c:\n                    *(*0x20 + -0x68) = 0x443aa9;\n                    fcn.00459a00(0xf9);\ncode_r0x00443aa9:\n                    *(*0x20 + -0x68) = 0x443ab6;\n                    fcn.004599e0(0x44);\n                }\n                *(*0x20 + -0x68) = 0x443ac5;\n                fcn.00459a00(0x81);\n                piVar8 = piVar7;\ncode_r0x00443ac5:\n                *(*0x20 + -0x68) = 0x443ad2;\n                fcn.004599e0(0x44);\ncode_r0x00443ad2:\n                *(*0x20 + -0x68) = 0x443adf;\n                fcn.00459a00(0xf9);\ncode_r0x00443adf:\n                *(*0x20 + -0x68) = 0x443aec;\n                fcn.004599e0(0x44);\n                piVar6 = piVar8;\n            }\n            *(*0x20 + -0x68) = 0x443af9;\n            fcn.00459a00(0x81);\n            piVar8 = piVar10;\ncode_r0x00443af9:\n            *(*0x20 + -0x68) = 0x443b06;\n            fcn.004599e0(0x44);\ncode_r0x00443b06:\n            *(*0x20 + -0x68) = 0x443b13;\n            fcn.00459a00(0xf9);\ncode_r0x00443b13:\n            *(*0x20 + -0x68) = 0x443b25;\n            fcn.004599e0(0x44);\n        }\n        arg1 = 0x81;\n        *(*0x20 + -0x68) = 0x443b32;\n        in_RAX = fcn.00459a00(0x81);\n        piVar7 = pcVar11;\n        unaff_RSI = piVar8;\n    } while( true );\n}\n",
        "token_count": 4218
    },
    "00443be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.00443be0(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x5a21a8);\n                if (iVar1 != 0) goto code_r0x00443c7e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x5a21a8;\n                *(*0x20 + -0x40) = 0x443c46;\n                iVar1 = fcn.004229e0();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x443d0f;\n                                    fcn.00423f60();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x00443c7e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x443cb5;\n                                            fcn.00423de0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x443cd8;\n                                    iVar1 = fcn.004317e0();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x443d2f;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x40) = 0x443d45;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x40) = 0x443d56;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x40) = 0x443d65;\n            in_AL = fcn.004599e0(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x443d6f;\n        fcn.00457320();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00443d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00443d80(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x573fb0) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x443e36;\n                            fcn.00423f60(0x5a21a0);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00443e45;\n                        }\n                    }\n                    else {\ncode_r0x00443e45:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x5a1b84 != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x443e93;\n                            fcn.00423de0(0x5a21a0);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x443eb1;\n                            fcn.004239e0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x443ec5;\n                        fcn.004599e0(2);\n                    }\n                    *(*0x20 + -0x38) = 0x443ecf;\n                    fcn.004599e0(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x443ee5;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x38) = 0x443ef2;\n            in_RAX = fcn.00459a00(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x443f05;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 911
    },
    "00443f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00443f20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x5a21a0;\n                *(*0x20 + -0x40) = 0x443f71;\n                fcn.00409aa0();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x443f85;\n                    puVar3 = fcn.00443be0();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x443fd4;\n                fcn.00409cc0();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x444015;\n            in_RAX = fcn.004599e0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x444025;\n        fcn.0045ba20();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 702
    },
    "00444040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00444040(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x5a21a0;\n                *(*0x20 + -0x40) = 0x4440b4;\n                fcn.00409aa0();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x4440d7;\n                    fcn.00443d80();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x44410f;\n                fcn.00409cc0();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x44414a;\n            in_RAX = fcn.004599e0(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x444159;\n        fcn.0045ba20();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 779
    },
    "00444180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00444180(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ba20();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.00409aa0();\n        iVar2 = uVar1 * 0x10;\n        puVar3 = *(in_RAX + 0x468 + iVar2);\n        while (puVar3 != NULL) {\n            puVar3 = *puVar3;\n            fcn.00443d80();\n        }\n        *(in_RAX + 0x468 + iVar2) = 0;\n        *(in_RAX + 0x470 + iVar2) = 0;\n        fcn.00409cc0();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00444280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00444280(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar8 = *(unaff_R14 + 0x30);\n            if (*piVar8 == unaff_R14) {\n                uVar7 = uVar1 - 1;\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x5a1fe8 != 0) {\n                        uVar6 = -*0x5a1cd8;\n                        piVar8 = (*0x5a1cd8 + (in_RAX & 0xffffffff)) - 1 & uVar6;\n                        *(*0x20 + -0x18) = piVar8 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x44430c;\n                        puVar2 = fcn.00413640();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar11 = 0x1a;\n                        *(*0x20 + -0x78) = 0x444335;\n                        fcn.004317e0();\n                        goto code_r0x00444335;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar8 = in_RAX & 0xffffffff;\n                        uVar7 = 0;\n                        uVar6 = piVar8 >> 0xd;\n                        uVar11 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00444335:\n                            uVar7 = uVar7 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar11;\n                        *(*0x20 + -0x20) = piVar8;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x78) = 0x444365;\n                        fcn.00409aa0();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x5a2a68);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x444399;\n                                fcn.00423de0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x4443b1;\n                            fcn.00409cc0();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x4443d1;\n                                iVar3 = fcn.004229e0(1);\n                                if (iVar3 == 0) {\n                                    uVar11 = 0xd;\n                                    *(*0x20 + -0x78) = 0x44440e;\n                                    fcn.004317e0();\n                                    goto code_r0x0044440e;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x0044440e:\n                        uVar10 = uVar11;\n                        uVar7 = 0x23;\n                        *(*0x20 + -0x78) = 0x444418;\n                        uVar1 = fcn.004599e0(0x23);\n                        goto code_r0x00444418;\n                    }\n                    uVar7 = in_RAX & 0xffffffff;\n                    uVar10 = 0;\n                    while( true ) {\n                        uVar5 = uVar7;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00444418:\n                        uVar10 = uVar10 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar8[0x14] == 0) || (piVar8[0x1a] != 0)) {\n                        if ((uVar10 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar10;\n                            *(*0x20 + -0x10) = (uVar10 & 0xff) * 0x40 + 0x5a21a0;\n                            *(*0x20 + -0x78) = 0x444467;\n                            fcn.00409aa0();\n                            *(*0x20 + -0x78) = 0x444471;\n                            uVar4 = fcn.00443be0();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x444485;\n                            fcn.00409cc0();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar8[0x14] + 0x40);\n                        if ((uVar10 & 0xff) < 2) {\n                            iVar9 = (uVar10 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar9);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x78) = 0x4444c5;\n                                fcn.00443f20();\n                                iVar9 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar9);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar9) = *puVar2;\n                            piVar8 = iVar3 + 0x470 + iVar9;\n                            *piVar8 = *piVar8 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x444512;\n                        fcn.004599e0(2);\n                    }\n                    *(*0x20 + -0x78) = 0x44451c;\n                    fcn.004599e0(2);\n                }\n                *(*0x20 + -0x78) = 0x44452d;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x78) = 0x44453e;\n            uVar1 = fcn.004317e0();\n        }\n        *(puVar12 + 8) = uVar1;\n        *(puVar12 + -8) = 0x444548;\n        fcn.0045ba20();\n        in_RAX = *(puVar12 + 8);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1832
    },
    "00444560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444560(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        iVar9 = *0x5a25d8;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x5a1fe8 != 0) {\n                    LOCK();\n                    *0x5a25d8 = in_RAX + (*0x5a25d8 - unaff_RBX);\n                    *(*0x20 + -0x80) = 0x44464d;\n                    fcn.004138c0(0x5a25d8, iVar9);\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x573fb0) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x20000\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x5a1b84 == 0) {\n                                *(*0x20 + -0x80) = 0x444635;\n                                fcn.004239e0(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x444685;\n                            fcn.00409aa0();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x4446a8;\n                                fcn.00423f60(0x5a2a68);\n                                *(*0x20 + -0x80) = 0x4446b6;\n                                fcn.00409cc0();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x4446c5;\n                            in_RAX = fcn.004599e0(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x4446d8;\n                        fcn.004330a0();\n                        *(*0x20 + -0x80) = 0x4446e5;\n                        fcn.00433800();\n                        *(*0x20 + -0x80) = 0x4446ea;\n                        fcn.004332c0();\n                        *(*0x20 + -0x80) = 0x4446f4;\n                        fcn.00433920();\n                        *(*0x20 + -0x80) = 0x4446f9;\n                        fcn.00433300();\n                        *(*0x20 + -0x80) = 0x4446fe;\n                        fcn.00433120();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x44470f;\n                        fcn.004317e0();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x44471c;\n                    uVar6 = fcn.00459a00(0x40);\n                    goto code_r0x0044471c;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x0044471c:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x5a21a0;\n                        *(*0x20 + -0x80) = 0x444779;\n                        fcn.00409aa0();\n                        *(*0x20 + -0x80) = 0x444788;\n                        fcn.00443d80();\n                        *(*0x20 + -0x80) = 0x444794;\n                        fcn.00409cc0();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x80) = 0x4447d6;\n                            fcn.00444040();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x44481a;\n                    fcn.004599e0(2);\n                }\n                *(*0x20 + -0x80) = 0x444825;\n                fcn.004599e0(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x444836;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x444846;\n        fcn.0045ba20();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1936
    },
    "00444860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00444860(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00444a31:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x444a4f;\n        fcn.00457320();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    uVar3 = *arg1;\n    uVar4 = arg1[1];\n    uVar5 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x28) = uVar11;\n    *(*0x20 + -0x30) = in_RAX;\n    uVar6 = arg1[0x23];\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x5a2000 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x4449b0;\n                            uVar9 = fcn.00449820();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x4449bf;\n                            fcn.004330a0();\n                            *(*0x20 + -0x68) = 0x4449d0;\n                            fcn.004339a0();\n                            *(*0x20 + -0x68) = 0x4449df;\n                            fcn.004339a0();\n                            *(*0x20 + -0x68) = 0x4449f0;\n                            fcn.004339a0();\n                            *(*0x20 + -0x68) = 0x4449fa;\n                            fcn.00433920();\n                            *(*0x20 + -0x68) = 0x444a0b;\n                            fcn.004339a0();\n                            *(*0x20 + -0x68) = 0x444a15;\n                            fcn.00433800();\n                            *(*0x20 + -0x68) = 0x444a1a;\n                            fcn.00433300();\n                            *(*0x20 + -0x68) = 0x444a1f;\n                            fcn.00433120();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x444a30;\n                            in_RAX = fcn.004317e0();\n                            goto code_r0x00444a31;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar3) || (uVar4 <= uVar13)) goto code_r0x004448de;\n                if (uVar6 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar5;\n                    goto code_r0x004448de;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar5);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x30);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x30);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x004448de:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x28);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1600
    },
    "00445060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00445060(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x5a2528;\n                        *0x5a2528 = *0x5a2528 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22b0);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22b0) = iVar1;\n                        uVar9 = iVar3 + iVar8 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x5a2528 = *0x5a2528 + iVar1;\n                            *(iVar2 + 0x22b0) = 0;\n                            uVar9 = 0x5a2528;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x445146;\n                    uVar5 = fcn.00444280();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x44516f;\n                    fcn.00459c26();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        uVar9 = *(*0x20 + -0x140);\n                        if ((*(*0x20 + -0x148) < uVar9) &&\n                           (uVar11 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x445388;\n                            fcn.004317e0();\n                            goto code_r0x00445388;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar9 = 0;\n                        for (uVar11 = *(iVar8 + 0x148); uVar11 != 0; uVar11 = *(uVar11 + 0x40)) {\n                            uVar12 = *(*(uVar11 + 0x50) + 0x18) + *(uVar11 + 0x18);\n                            if (((uVar6 <= uVar12) && (uVar12 < uVar7)) && (uVar9 < uVar12)) {\n                                uVar9 = uVar12;\n                            }\ncode_r0x00445388:\n                        }\n                        *(*0x20 + -0x10) = uVar9;\n                        *(*0x20 + -0x1b8) = 0x4453d2;\n                        iVar8 = fcn.00444ee0(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x445234;\n                    fcn.0045a340(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x44529a;\n                    fcn.00444de0();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x445355;\n                    fcn.0044e660(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x445367;\n                    fcn.00444560();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x4453fd;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x44540e;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x44541e;\n        fcn.00457320();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2184
    },
    "00446080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446080(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x446060;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x5a1da0 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.00459680(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00446100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446100(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x5a1ff4) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x4461c9;\n                            iVar2 = fcn.004490a0(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x24) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x446226;\n                            fcn.00445060();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x446255;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -0x20) = 0x446266;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x20) = 0x446277;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x20) = 0x446288;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x446293;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00446440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00446440(uchar param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong *in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t *puVar5;\n    ulong unaff_RBX;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    int64_t iVar14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x40 && *0x20 + -0x40 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xc0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = in_RAX[3];\n            if (iVar8 == 0) {\n                return 0;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x88) = iVar8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *in_RAX;\n            *(*0x20 + -0x20) = in_RAX[1];\n            *(*0x20 + -200) = 0x4464a9;\n            iVar3 = fcn.00448f20();\n            iVar8 = *(*0x20 + -0x88);\n            if (iVar3 == iVar8) {\n                iVar2 = -1;\n            }\n            else {\n                *(*0x20 + -0x88) = iVar8 + -1;\n                *(*0x20 + -200) = 0x4464e5;\n                iVar2 = fcn.00449e60(1);\n                iVar8 = *(*0x20 + -0x88);\n            }\n            *(*0x20 + -0x88) = iVar8;\n            if (iVar2 == -1) {\n                iVar2 = 0;\n            }\n            *(*0x20 + -0x94) = iVar2;\n            iVar8 = *(*0x20 + 8);\n            iVar3 = *(iVar8 + 0x38) - *(iVar8 + 0x28);\n            if (iVar3 == 0) {\n                iVar6 = *(*0x20 + -0x20);\n                iVar12 = *(*0x20 + -0x18);\n                iVar9 = 0;\n                iVar3 = 0;\n                goto code_r0x004465ea;\n            }\n            iVar12 = *(*0x20 + -0x18);\n            if (*(iVar12 + 0x27) < 2) {\n                iVar6 = *(*0x20 + -0x20);\n                piVar11 = NULL;\n            }\n            else {\n                uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x2c);\n                iVar6 = *(*0x20 + -0x20);\n                piVar11 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x80) = iVar3;\n            if ((piVar11 != NULL) && (iVar10 = *piVar11,  0 < iVar10)) {\n                iVar9 = piVar11[1];\n                if (iVar9 < 1) {\n                    iVar9 = 0;\n                    iVar3 = 0;\ncode_r0x004465ea:\n                    if (*(iVar8 + 0x48) == 0) {\n                        iVar10 = 0;\n                        iVar14 = 0;\n                        goto code_r0x004466d0;\n                    }\n                    piVar11 = *(iVar8 + 0x50);\n                    if (piVar11 != NULL) {\n                        iVar2 = *(iVar8 + 0x48) >> 3;\n                        iVar10 = *piVar11;\n                        if (iVar2 < *piVar11) {\n                            iVar10 = iVar2;\n                        }\n                        iVar14 = *(piVar11 + 2);\n                        goto code_r0x004466d0;\n                    }\n                    if (*(iVar12 + 0x27) == '\\0') {\n                        piVar11 = NULL;\n                    }\n                    else {\n                        uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x28);\n                        piVar11 = *(iVar6 + 0x130) + uVar1 & (uVar1 == 0xffffffff) - 1;\n                    }\n                    if ((piVar11 != NULL) && (iVar10 = *piVar11,  0 < iVar10)) {\n                        *(*0x20 + -0x48) = piVar11;\n                        if ((-1 < iVar2) && (iVar2 < iVar10)) {\n                            iVar10 = piVar11[1];\n                            if (iVar10 < 1) {\n                                iVar10 = 0;\n                                iVar14 = 0;\n                            }\n                            else {\n                                iVar14 = piVar11 + iVar2 * (iVar10 + 7 >> 3) + 8;\n                            }\ncode_r0x004466d0:\n                            if (*(iVar8 + 0x50) == 0) {\n                                if (*(iVar12 + 0x27) < 3) {\n                                    puVar5 = NULL;\n                                }\n                                else {\n                                    uVar1 = *(iVar12 + *(iVar12 + 0x1c) * 4 + 0x30);\n                                    puVar5 = uVar1 + *(iVar6 + 0x130) & (uVar1 == 0xffffffff) - 1;\n                                }\n                                if (puVar5 != NULL) {\n                                    *(*0x20 + -0x50) = puVar5;\n                                    *(*0x20 + -0x28) = iVar14;\n                                    *(*0x20 + -0x8c) = iVar10;\n                                    *(*0x20 + -0x30) = iVar3;\n                                    *(*0x20 + -0x90) = iVar9;\n                                    uVar13 = *puVar5;\n                                    *(*0x20 + -0x78) = uVar13;\n                                    if (uVar13 < 0) {\n                                        *(*0x20 + -200) = 0x446765;\n                                        fcn.004434c0();\n                                        iVar9 = *(*0x20 + -0x90);\n                                        uVar13 = *(*0x20 + -0x78);\n                                    }\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x50) + 8;\n                                    if ((SUB168(ZEXT816(0x10) * ZEXT816(uVar13) >> 0x40, 0) != 0) ||\n                                       (-*(*0x20 + -0x38) <= uVar13 * 0x10 && uVar13 * 0x10 + *(*0x20 + -0x38) != 0)) {\n                                        *(*0x20 + -200) = 0x4467ca;\n                                        fcn.004434c0();\n                                        iVar9 = *(*0x20 + -0x90);\n                                    }\n                                }\n                            }\n                            return iVar9;\n                        }\n                        *(*0x20 + -200) = 0x446846;\n                        uVar4 = fcn.00449820();\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x68) = iVar6;\n                        *(*0x20 + -0x70) = **(*0x20 + -0x48);\n                        *(*0x20 + -200) = 0x446865;\n                        fcn.004330a0();\n                        *(*0x20 + -200) = 0x446876;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x446885;\n                        fcn.004337a0(*(*0x20 + -0x94));\n                        *(*0x20 + -200) = 0x446896;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x4468a5;\n                        fcn.004337a0();\n                        *(*0x20 + -200) = 0x4468b6;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x4468c8;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x4468d9;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x4468e5;\n                        fcn.00433800();\n                        *(*0x20 + -200) = 0x4468f6;\n                        fcn.004339a0();\n                        *(*0x20 + -200) = 0x4468fb;\n                        fcn.00433120();\n                        iVar6 = 0x10;\n                        *(*0x20 + -200) = 0x44690c;\n                        fcn.004317e0();\n                    }\n                    *(*0x20 + -200) = 0x446914;\n                    uVar4 = fcn.00449820();\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x68) = iVar6;\n                    *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x48);\n                    *(*0x20 + -200) = 0x446945;\n                    fcn.004330a0();\n                    *(*0x20 + -200) = 0x446956;\n                    fcn.004339a0();\n                    *(*0x20 + -200) = 0x446968;\n                    fcn.004339a0();\n                    *(*0x20 + -200) = 0x446979;\n                    fcn.004339a0();\n                    *(*0x20 + -200) = 0x446985;\n                    fcn.00433800();\n                    *(*0x20 + -200) = 0x446996;\n                    fcn.004339a0();\n                    *(*0x20 + -200) = 0x4469a5;\n                    fcn.00433800();\n                    *(*0x20 + -200) = 0x4469aa;\n                    fcn.00433300();\n                    *(*0x20 + -200) = 0x4469af;\n                    fcn.00433120();\n                    iVar6 = 0x10;\n                    *(*0x20 + -200) = 0x4469c5;\n                    fcn.004317e0();\n                }\n                else {\n                    *(*0x20 + -0x40) = piVar11;\n                    if ((-1 < iVar2) && (iVar2 < iVar10)) {\n                        iVar3 = piVar11 + (iVar9 + 7 >> 3) * iVar2 + 8;\n                        goto code_r0x004465ea;\n                    }\n                }\n                *(*0x20 + -200) = 0x4469cd;\n                uVar4 = fcn.00449820();\n                *(*0x20 + -0x28) = uVar4;\n                *(*0x20 + -0x68) = iVar6;\n                *(*0x20 + -0x70) = **(*0x20 + -0x40);\n                *(*0x20 + -200) = 0x4469ef;\n                fcn.004330a0();\n                *(*0x20 + -200) = 0x446a05;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a11;\n                fcn.004337a0(*(*0x20 + -0x94));\n                *(*0x20 + -200) = 0x446a25;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a2f;\n                fcn.004337a0();\n                *(*0x20 + -200) = 0x446a45;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a57;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a68;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a72;\n                fcn.00433800();\n                *(*0x20 + -200) = 0x446a85;\n                fcn.004339a0();\n                *(*0x20 + -200) = 0x446a8a;\n                fcn.00433120();\n                iVar6 = 0x10;\n                *(*0x20 + -200) = 0x446a9b;\n                fcn.004317e0();\n            }\n            *(*0x20 + -200) = 0x446aa5;\n            uVar4 = fcn.00449820();\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x68) = iVar6;\n            *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -200) = 0x446ac8;\n            fcn.004330a0();\n            *(*0x20 + -200) = 0x446ad9;\n            fcn.004339a0();\n            *(*0x20 + -200) = 0x446aeb;\n            fcn.004339a0();\n            *(*0x20 + -200) = 0x446afc;\n            fcn.004339a0();\n            param_1 = *(*0x20 + -0x80);\n            *(*0x20 + -200) = 0x446b0e;\n            fcn.00433800();\n            *(*0x20 + -200) = 0x446b1f;\n            fcn.004339a0();\n            *(*0x20 + -200) = 0x446b29;\n            fcn.00433800();\n            *(*0x20 + -200) = 0x446b2e;\n            fcn.00433300();\n            *(*0x20 + -200) = 0x446b33;\n            fcn.00433120();\n            unaff_RBX = 0x10;\n            *(*0x20 + -200) = 0x446b45;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        puVar7[0x18] = param_1;\n        *(puVar7 + -8) = 0x446b59;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        param_1 = puVar7[0x18];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 3462
    },
    "00446cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446cc0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    iVar5 = *0x54dd18;\n    iVar4 = *0x54dd10;\n    if (*0x5a2020 == 0) {\n        return;\n    }\n    uVar8 = 0;\n    uVar7 = 0;\n    for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n        iVar1 = *(iVar4 + iVar6 * 8);\n        iVar2 = *(iVar1 + 0x22b8);\n        iVar3 = *(iVar1 + 0x22c0);\n        *(iVar1 + 0x22b8) = in_XMM15_Da;\n        *(iVar1 + 0x22bc) = in_XMM15_Db;\n        *(iVar1 + 0x22c0) = in_XMM15_Dc;\n        *(iVar1 + 0x22c4) = in_XMM15_Dd;\n        uVar7 = uVar7 + iVar2;\n        uVar8 = uVar8 + iVar3;\n    }\n    if (uVar8 != 0) {\n        uVar8 = uVar7 / uVar8 + 0x13a0;\n        if (*0x53a380 < uVar8) {\n            uVar8 = *0x53a380;\n        }\n        if (uVar8 < 0x2000) {\n            uVar8 = 0x2000;\n        }\n        uVar7 = 0;\n        while (*0x53a288 = 1 << (uVar7 & 0x1f) & -(uVar7 < 0x20),  *0x53a288 < uVar8) {\n            uVar7 = uVar7 + 1;\n        }\n        return;\n    }\n    *0x53a288 = 0x2000;\n    return;\n}\n",
        "token_count": 514
    },
    "00446d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00446d80(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint32_t uVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t *unaff_RDI;\n    int64_t *piVar9;\n    int64_t *in_R8;\n    int64_t *piVar10;\n    int64_t *in_R9;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \ncode_r0x00446d80:\n    puVar5 = *0x20;\n    piVar10 = in_R9;\n    if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n        puVar5 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == NULL) {\n            piVar7 = NULL;\n            piVar8 = NULL;\n            piVar9 = NULL;\n            piVar10 = in_R8;\n            goto code_r0x00446dc0;\n        }\n        in_R9 = NULL;\n        unaff_RDI = NULL;\n        piVar7 = NULL;\n        piVar10 = NULL;\n        piVar4 = unaff_RBX;\n        do {\n            if (piVar4[1] != 0) {\n                in_R8 = piVar10 + piVar4[1];\n                if (in_R8 < piVar10) goto code_r0x00446fc5;\n                unaff_RDI = unaff_RDI + 1;\n                piVar7 = in_R9;\n                piVar10 = in_R8;\n            }\n            in_R9 = in_R9 + 1;\n            piVar8 = unaff_RDI;\n            piVar9 = piVar10;\n            if (arg1 <= in_R9) {\ncode_r0x00446dc0:\n                unaff_RDI = piVar9;\n                piVar4 = unaff_RBX;\n                unaff_RBX = piVar8;\n                if (unaff_RBX == NULL) {\n                    return 0;\n                }\n                if (unaff_RBX == 0x1) {\n                    if (in_RAX != 0) {\n                        piVar8 = 0x1;\n                        goto code_r0x00446e27;\n                    }\n                    if (piVar7 < arg1) {\n                        iVar2 = piVar4[piVar7 * 2 + 1];\n                        *(*0x20 + -0x18) = piVar4[piVar7 * 2];\n                        *(*0x20 + -0x10) = iVar2;\n                        uVar1 = *(*0x20 + -0x18);\n                        if (*unaff_R14 < uVar1 || *unaff_R14 == uVar1) {\n                            uVar6 = uVar1 & 0xffffff00 | uVar1 < unaff_R14[1];\n                        }\n                        else {\n                            uVar6 = 0;\n                        }\n                        piVar8 = uVar6 ^ 1;\n                        goto code_r0x00446e27;\n                    }\n                }\n                else {\n                    piVar8 = NULL;\ncode_r0x00446e27:\n                    if (piVar8 != '\\0') {\n                        if (arg1 <= piVar7) {\n                            *(*0x20 + -0x78) = 0x446e9b;\n                            iVar2 = fcn.004599e0(arg1);\n                            return iVar2;\n                        }\n                        return piVar4[piVar7 * 2];\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 0x10) = piVar4;\n                    *(*0x20 + -0x78) = 0x446e45;\n                    iVar2 = fcn.004474c0();\n                    unaff_RBX = *(*0x20 + 0x18);\n                    if (unaff_RBX == NULL) {\n                        return iVar2;\n                    }\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x50) = unaff_RDI;\n                    piVar10 = *(*0x20 + 0x10);\n                    in_R9 = NULL;\n                    piVar4 = unaff_RDI;\n                    while( true ) {\n                        piVar7 = piVar10[1];\n                        piVar9 = unaff_RDI;\n                        if (piVar7 < unaff_RDI) {\n                            piVar9 = piVar7;\n                        }\n                        if (arg1 == *piVar10) {\n                            bVar11 = unaff_RDI < piVar7;\n                            piVar3 = arg1;\n                            arg1 = unaff_RDI;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = arg1;\n                            *(*0x20 + -0x38) = in_R9;\n                            *(*0x20 + -0x20) = piVar10;\n                            *(*0x20 + -0x40) = unaff_RDI;\n                            *(*0x20 + -0x48) = piVar8;\n                            *(*0x20 + -0x58) = piVar7;\n                            *(*0x20 + -0x78) = 0x446efc;\n                            fcn.0045a340(piVar9);\n                            arg1 = *(*0x20 + -0x40);\n                            piVar7 = *(*0x20 + -0x58);\n                            bVar11 = arg1 < piVar7;\n                            unaff_RBX = *(*0x20 + 0x18);\n                            piVar4 = *(*0x20 + -0x50);\n                            piVar8 = *(*0x20 + -0x48);\n                            piVar10 = *(*0x20 + -0x20);\n                            in_R9 = *(*0x20 + -0x38);\n                            iVar2 = *(*0x20 + -0x30);\n                            piVar3 = *(*0x20 + -0x28);\n                        }\n                        if (bVar11) break;\n                        in_R9 = in_R9 + 1;\n                        piVar8 = piVar8 - piVar7;\n                        unaff_RDI = arg1 - piVar7;\n                        arg1 = piVar3 + (piVar7 & -piVar8 >> 0x3f);\n                        if (unaff_RBX <= in_R9) {\n                            return iVar2;\n                        }\n                        piVar10 = piVar10 + 2;\n                    }\n                    *(*0x20 + -0x78) = 0x446f70;\n                    fcn.00459aa0(arg1);\n                    piVar7 = piVar8;\n                    unaff_RDI = piVar9;\n                }\n                *(*0x20 + -0x78) = 0x446f78;\n                in_RAX = fcn.004599e0(arg1);\n            }\n            piVar4 = piVar4 + 2;\n        } while( true );\n    }\n    goto code_r0x00446fd7;\ncode_r0x00446fc5:\n    unaff_RBX = 0x1d;\n    *(*0x20 + -0x78) = 0x446fd6;\n    in_RAX = fcn.004317e0();\ncode_r0x00446fd7:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + -8) = 0x446ff0;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    *0x20 = puVar5;\n    in_R9 = piVar10;\n    goto code_r0x00446d80;\n}\n",
        "token_count": 1883
    },
    "004473c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004473c0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (arg1 != 0) {\n        if (arg1 != 1) {\n            if ((in_RAX == 0) || (0x20 < arg1)) {\n                in_RAX = fcn.0040b1e0(0);\n            }\n            fcn.0045a340(arg1);\n            return in_RAX;\n        }\n        return *unaff_RBX * 8 + 0x544740;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00447ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.00447ee0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar1 = *((unaff_RBX - 1) + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x448030;\n                uVar4 = fcn.00447e00();\n                if ((unaff_RBX != '\\0') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if ((cVar1 != 'B') || (unaff_RBX < 2)) {\n                return 0;\n            }\n            if (unaff_RBX - 2 < unaff_RBX) {\n                cVar1 = *((unaff_RBX - 2) + in_RAX);\n                if (cVar1 - 0x30U < 10) {\n                    *(*0x20 + -0x28) = 0x447ff7;\n                    uVar4 = fcn.00447e00();\n                    if ((unaff_RBX != '\\x01') && (-1 < uVar4)) {\n                        return uVar4;\n                    }\n                    return 0;\n                }\n                if (cVar1 != 'i') {\n                    return 0;\n                }\n                if (unaff_RBX < 4) {\n                    return 0;\n                }\n                uVar4 = unaff_RBX - 3;\n                if (uVar4 < unaff_RBX) {\n                    uVar2 = *((unaff_RBX - 3) + in_RAX);\n                    if (uVar2 < 0x4c) {\n                        if (uVar2 == 0x47) {\n                            iVar6 = 3;\n                        }\n                        else {\n                            if (uVar2 != 0x4b) {\n                                return 0;\n                            }\n                            iVar6 = 1;\n                        }\n                    }\n                    else if (uVar2 == 0x4d) {\n                        iVar6 = 2;\n                    }\n                    else {\n                        if (uVar2 != 0x54) {\n                            return 0;\n                        }\n                        iVar6 = 4;\n                    }\n                    iVar9 = 1;\n                    for (iVar7 = 0; iVar7 < iVar6; iVar7 = iVar7 + 1) {\n                        iVar9 = iVar9 << 10;\n                    }\n                    *(*0x20 + -0x10) = iVar9;\n                    *(*0x20 + -0x28) = 0x448078;\n                    uVar5 = fcn.00447e00();\n                    if ((uVar4 == '\\0') || (uVar5 < 0)) {\n                        return 0;\n                    }\n                    uVar3 = *(*0x20 + -0x10);\n                    if (uVar3 != 0) {\n                        if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar3), 0) < uVar5) {\n                            return 0;\n                        }\n                        if (uVar5 * uVar3 < 0x8000000000000000) {\n                            return uVar5 * uVar3;\n                        }\n                        return 0;\n                    }\n                    *(*0x20 + -0x28) = 0x4480fa;\n                    fcn.0042fe00();\n                    unaff_RBX = uVar4;\n                }\n                *(*0x20 + -0x28) = 0x448105;\n                fcn.004599e0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x448110;\n            in_RAX = fcn.004599e0(unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x448125;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1146
    },
    "00448460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00448460(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x448485;\n            ppiVar3 = fcn.0040bba0();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar6 = 0x53f2c0; iVar6 != 0; iVar6 = *(iVar6 + 0x220)) {\n                if (*(iVar6 + 0x218) == '\\0') {\n                    *(*0x20 + -0x10) = iVar6;\n                    piVar7 = ppiVar3[1];\n                    piVar8 = piVar7 + 1;\n                    piVar1 = *ppiVar3;\n                    piVar4 = piVar1;\n                    if (ppiVar3[2] < piVar8) {\n                        *(*0x20 + -0x70) = 0x4484dd;\n                        piVar4 = fcn.00443500(piVar7);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar7;\n                        if (*0x5a1da0 == 0) {\n                            *ppiVar3 = piVar4;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x4484f9;\n                            piVar4 = fcn.00459540(piVar7, piVar8, param_3, param_4);\n                        }\n                        iVar6 = *(*0x20 + -0x10);\n                        piVar7 = piVar1;\n                    }\n                    piVar8 = piVar7 + 1;\n                    ppiVar3[1] = piVar8;\n                    if (*0x5a1da0 == 0) {\n                        piVar4[piVar7] = iVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x448527;\n                        ppiVar3 = fcn.00459640(iVar6, piVar8, param_3, param_4);\n                    }\n                    if ((*(iVar6 + 0x1f0) == 0) && (*(iVar6 + 0x1f8) == 0)) {\n                        iVar9 = *(iVar6 + 0xd8) - *(iVar6 + 0xd0);\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x70) = 0x448565;\n                        uVar2 = fcn.00411a80();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x1f0) = uVar2;\n                        if (*0x5a1da0 == 0) {\n                            *(iVar6 + 0x1f8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x448594;\n                            iVar6 = fcn.00459680(iVar6 + 0x1f8, piVar8, param_3, param_4);\n                        }\n                        iVar10 = *(iVar6 + 0xe8) - *(iVar6 + 0xe0);\n                        *(*0x20 + -0x20) = iVar10;\n                        *(*0x20 + -0x70) = 0x4485b6;\n                        uVar2 = fcn.00411a80();\n                        iVar6 = *(*0x20 + -0x10);\n                        *(iVar6 + 0x200) = uVar2;\n                        iVar9 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x5a1da0 == 0) {\n                            *(iVar6 + 0x208) = iVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x4485f4;\n                            iVar6 = fcn.00459680(iVar9, iVar6 + 0x208, param_3, param_4);\n                        }\n                        LOCK();\n                        *0x5a2530 = *0x5a2530 + iVar9;\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar8 = ppiVar3[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar8 <= piVar7) goto code_r0x0044867c;\n                iVar6 = (*ppiVar3)[piVar7];\n                if (*(iVar6 + 0x1e8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x5a1da0 == 0) {\n                **ppiVar3 = iVar6;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x448647;\n                ppiVar3 = fcn.004596a0(piVar7, piVar8, param_3, param_4);\n            }\n            piVar8 = *ppiVar3;\n            piVar1 = ppiVar3[1];\n            if (piVar7 < piVar1) {\n                if (*0x5a1da0 == 0) {\n                    piVar8[piVar7] = 0x53f2c0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x44867b;\n                    ppiVar3 = fcn.00459640(0x53f2c0, piVar8, param_3, param_4);\n                }\ncode_r0x0044867c:\n                if (*0x5a1da0 != '\\0') {\n                    *(*0x20 + -0x70) = 0x448694;\n                    fcn.00402d00();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar5 = *0x54d5e8;\n                *0x54d5e8 = ppiVar3;\n                return uVar5;\n            }\n            *(*0x20 + -0x70) = 0x4486b8;\n            fcn.004599e0(piVar1);\n        }\n        *(puVar11 + -8) = 0x4486be;\n        fcn.00457320();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1631
    },
    "004486e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004486e0(void)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    ulong uVar10;\n    int64_t iVar11;\n    ulong *arg1;\n    ulong *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong *puVar14;\n    ulong *arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *in_RAX;\n            uVar2 = *puVar9;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff0) && (*(puVar9 + 4) == '\\0')) && (*(puVar9 + 5) == '\\0')) &&\n                ((*(puVar9 + 6) == '\\x01' && (*(puVar9 + 7) == '\\b')))) &&\n               (puVar14 = puVar9[3],  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar9 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x00448c35;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar9;\n                        *(*0x20 + -0x100) = 0x448986;\n                        uVar10 = fcn.00448f20();\n                        puVar9 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (puVar9 <= puVar14) goto code_r0x00448c2a;\n                        *(*0x20 + -0xd0) = uVar10;\n                        *(*0x20 + -0x100) = 0x4489c5;\n                        iVar8 = fcn.00448f20();\n                        *(*0x20 + -200) = iVar8;\n                        iVar11 = *(*0x20 + 8);\n                        puVar9 = *(iVar11 + 0xa0);\n                        *(*0x20 + -0x80) = puVar9;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != puVar9) || (*(iVar11 + 0xa8) != iVar8)) goto code_r0x00448b85;\n                        iVar8 = *(iVar11 + 0x1d8);\n                        arg1_00 = *(iVar11 + 0x1d0);\n                        if (iVar8 == 0) {\n                            return;\n                        }\n                        *(*0x20 + -0x60) = iVar8;\n                        iVar11 = 0;\n                        goto code_r0x00448a4a;\n                    }\n                    puVar14 = *(puVar9 + puVar12);\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x00448d75;\n                } while (*(puVar9 + puVar12) <= *(puVar9 + puVar12 + 1));\n                arg1 = in_RAX[0xe];\n                puVar3 = in_RAX[0xd];\n                puVar14 = *(puVar9 + puVar12 * 8 + 4);\n                if (puVar14 < arg1) {\n                    puVar9 = *(puVar9 + puVar12 * 8 + 0xc);\n                    if (puVar9 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = puVar14 + puVar3;\n                            *(*0x20 + -0x100) = 0x448806;\n                            uVar10 = fcn.00449820(puVar9 + puVar3);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar10 = 0x47f083;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar10;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x448834;\n                        uVar10 = fcn.00449820();\n                        iVar11 = *(*0x20 + 8);\n                        arg1 = *(iVar11 + 0x88);\n                        iVar8 = *(iVar11 + 0x80);\n                        puVar9 = *(*0x20 + -0xb8);\n                        if (puVar9 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar9 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar10;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar9 * 8);\n                                *(*0x20 + -0x48) = *(iVar11 + 0x198);\n                                *(*0x20 + -0x78) = *(iVar11 + 0x1a0);\n                                *(*0x20 + -0x100) = 0x4488b4;\n                                fcn.004330a0();\n                                *(*0x20 + -0x100) = 0x4488c5;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x4488d2;\n                                fcn.00433800();\n                                *(*0x20 + -0x100) = 0x4488d7;\n                                fcn.004332c0();\n                                *(*0x20 + -0x100) = 0x4488ec;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x4488fd;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x44890a;\n                                fcn.00433800();\n                                *(*0x20 + -0x100) = 0x44890f;\n                                fcn.004332c0();\n                                *(*0x20 + -0x100) = 0x448925;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x448936;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x44894b;\n                                fcn.004339a0();\n                                *(*0x20 + -0x100) = 0x448950;\n                                fcn.00433300();\n                                *(*0x20 + -0x100) = 0x448955;\n                                fcn.00433120();\n                                iVar11 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar11) {\n                                    arg1_00 = puVar12[0xe];\n                                    puVar9 = puVar12[0x11];\n                                    if (puVar9 <= arg1) {\ncode_r0x00448d30:\n                                        *(*0x20 + -0x100) = 0x448d3b;\n                                        fcn.004599e0(puVar9);\n                                        break;\n                                    }\n                                    puVar9 = *(puVar12[0x10] + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar9) {\ncode_r0x00448d25:\n                                        *(*0x20 + -0x100) = 0x448d30;\n                                        fcn.004599e0(arg1_00);\n                                        goto code_r0x00448d30;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x448cf6;\n                                    uVar10 = fcn.00449820();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x448d25;\n                                        fcn.004599e0(arg1);\n                                        goto code_r0x00448d25;\n                                    }\ncode_r0x00448c3f:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar10;\n                                    *(*0x20 + -0x68) = *(arg1_00 + puVar14);\n                                    *(*0x20 + -0x100) = 0x448c5f;\n                                    fcn.004330a0();\n                                    *(*0x20 + -0x100) = 0x448c70;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x100) = 0x448c7d;\n                                    fcn.00433800();\n                                    *(*0x20 + -0x100) = 0x448c85;\n                                    fcn.004332c0();\n                                    *(*0x20 + -0x100) = 0x448c9a;\n                                    fcn.004339a0();\n                                    *(*0x20 + -0x100) = 0x448c9f;\n                                    fcn.00433300();\n                                    *(*0x20 + -0x100) = 0x448ca5;\n                                    fcn.00433120();\n                                    iVar11 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x448d4c;\n                                fcn.004317e0();\n                            }\n                            *(*0x20 + -0x100) = 0x448d57;\n                            fcn.004599e0(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x448d65;\n                        puVar9 = arg1;\n                        fcn.004599e0(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x448d6d;\n                    fcn.004599e0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x448d75;\n                fcn.004599e0(arg1);\ncode_r0x00448d75:\n                *(*0x20 + -0x100) = 0x448d7d;\n                in_RAX = fcn.004599e0(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar9 + 4);\n            *(*0x20 + -0x98) = *(puVar9 + 5);\n            *(*0x20 + -0xa0) = *(puVar9 + 6);\n            *(*0x20 + -0xa8) = *(puVar9 + 7);\n            *(*0x20 + -0x80) = puVar9[3];\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x33];\n            *(*0x20 + -0x60) = in_RAX[0x34];\n            *(*0x20 + -0x100) = 0x448dd9;\n            fcn.004330a0();\n            *(*0x20 + -0x100) = 0x448dea;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448df3;\n            fcn.00433800();\n            *(*0x20 + -0x100) = 0x448e05;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448e0f;\n            fcn.004336a0();\n            *(*0x20 + -0x100) = 0x448e25;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448e2f;\n            fcn.004336a0();\n            *(*0x20 + -0x100) = 0x448e45;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448e4f;\n            fcn.004336a0();\n            *(*0x20 + -0x100) = 0x448e65;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448e6f;\n            fcn.004336a0();\n            *(*0x20 + -0x100) = 0x448e85;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448e8f;\n            fcn.00433800();\n            *(*0x20 + -0x100) = 0x448ea5;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448eaf;\n            fcn.00433800();\n            *(*0x20 + -0x100) = 0x448ec5;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448eda;\n            fcn.004339a0();\n            *(*0x20 + -0x100) = 0x448edf;\n            fcn.00433300();\n            *(*0x20 + -0x100) = 0x448ee5;\n            fcn.00433120();\n            *(*0x20 + -0x100) = 0x448ef6;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x448f05;\n        fcn.00457320();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x00448a4a:\n    *(*0x20 + -0x30) = *arg1_00;\n    uVar2 = *(arg1_00 + 0xc);\n    uVar4 = *(arg1_00 + 2);\n    uVar5 = *(arg1_00 + 0x14);\n    *(*0x20 + -0x28) = *(arg1_00 + 1);\n    *(*0x20 + -0x24) = uVar2;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar2 = *(arg1_00 + 0x1c);\n    uVar4 = *(arg1_00 + 4);\n    uVar5 = *(arg1_00 + 0x24);\n    *(*0x20 + -0x18) = *(arg1_00 + 3);\n    *(*0x20 + -0x14) = uVar2;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (puVar14[1] != *(*0x20 + -0x18)) {\ncode_r0x00448ace:\n        iVar11 = *(*(*0x20 + 8) + 0x1c0);\n        *(*0x20 + -0x40) = iVar11;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1c8);\n        puVar9 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = puVar9;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x448b19;\n        fcn.004330a0();\n        *(*0x20 + -0x100) = 0x448b2a;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448b3f;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448b50;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448b65;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448b6a;\n        fcn.00433300();\n        *(*0x20 + -0x100) = 0x448b6f;\n        fcn.00433120();\n        *(*0x20 + -0x100) = 0x448b85;\n        fcn.004317e0();\ncode_r0x00448b85:\n        *(*0x20 + -0x88) = *(iVar11 + 0xa8);\n        *(*0x20 + -0x100) = 0x448b96;\n        fcn.004330a0();\n        *(*0x20 + -0x100) = 0x448ba7;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448bb1;\n        fcn.00433800();\n        *(*0x20 + -0x100) = 0x448bc5;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448bcf;\n        fcn.00433800();\n        *(*0x20 + -0x100) = 0x448be5;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448bef;\n        fcn.00433800();\n        *(*0x20 + -0x100) = 0x448c05;\n        fcn.004339a0();\n        *(*0x20 + -0x100) = 0x448c0f;\n        fcn.00433800();\n        *(*0x20 + -0x100) = 0x448c14;\n        fcn.00433300();\n        *(*0x20 + -0x100) = 0x448c19;\n        fcn.00433120();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x448c2a;\n        fcn.004317e0();\ncode_r0x00448c2a:\n        *(*0x20 + -0x100) = 0x448c35;\n        fcn.004599e0(puVar9);\ncode_r0x00448c35:\n        *(*0x20 + -0x100) = 0x448c3f;\n        uVar10 = fcn.004599e0(0);\n        goto code_r0x00448c3f;\n    }\n    *(*0x20 + -0x78) = iVar11;\n    *(*0x20 + -0x50) = arg1_00;\n    *(*0x20 + -0x100) = 0x448aa9;\n    cVar6 = fcn.004025a0(*(*0x20 + -0x18), iVar8);\n    if (cVar6 == '\\0') goto code_r0x00448ace;\n    iVar11 = *(*0x20 + -0x78) + 1;\n    if (*(*0x20 + -0x60) <= iVar11) {\n        return;\n    }\n    arg1_00 = *(*0x20 + -0x50) + 0x28;\n    iVar8 = *(*0x20 + -0x60);\n    goto code_r0x00448a4a;\n}\n",
        "token_count": 4812
    },
    "00448f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00448f20(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar4 = unaff_RBX & 0xffffffff;\n    uVar3 = *(in_RAX + 0xb0) + uVar4;\n    iVar1 = *(in_RAX + 0x140);\n    puVar5 = *(in_RAX + 0x138);\n    if (1 < iVar1) {\n        iVar6 = 0;\n        while( true ) {\n            if (((*puVar5 <= uVar4) && (uVar4 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar4)))) break;\n            iVar6 = iVar6 + 1;\n            if (iVar1 <= iVar6) goto code_r0x00448f9b;\n            puVar5 = puVar5 + 3;\n        }\n        uVar3 = (puVar5[2] + uVar4) - *puVar5;\ncode_r0x00448f9b:\n        if (*(in_RAX + 0xb8) < uVar3) {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433800();\n            fcn.004339a0();\n            fcn.00433800();\n            fcn.004339a0();\n            fcn.00433800();\n            fcn.00433300();\n            fcn.00433120();\n            fcn.004317e0();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 429
    },
    "004490a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004490a0(void)\n\n{\n    uint32_t uVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t *arg1;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x53f2c0; iVar4 != 0; iVar4 = *(iVar4 + 0x220)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x004490e0;\n    }\n    iVar4 = 0;\ncode_r0x004490e0:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x140);\n    piVar6 = *(iVar4 + 0x138);\n    if (uVar5 < 2) goto code_r0x0044911c;\n    in_R9 = NULL;\n    do {\n        uVar1 = iVar2;\n        piVar3 = piVar6[2];\n        if (in_RAX < piVar3) {\n            return 0;\n        }\n        if (in_RAX < (piVar6[1] - *piVar6) + piVar3) {\n            uVar1 = *piVar6 + (in_RAX - piVar3);\n            in_R9 = piVar3;\ncode_r0x0044911c:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                piVar6 = *(arg1 + 4 + in_RAX) + *arg1;\n                do {\n                    arg1 = piVar6;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    piVar6 = arg1 + 1;\n                    if (in_RAX <= piVar6) goto code_r0x004491b8;\n                    in_R9 = uVar5 + piVar6 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    piVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (piVar3 < arg1) {\n                        return piVar3 + in_RAX;\n                    }\n                    fcn.004599e0(arg1);\n                }\n                fcn.004599e0(in_RAX);\ncode_r0x004491b8:\n                fcn.004599e0(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.00459a00(0x10);\n        }\n        else {\n            in_R9 = in_R9 + 1;\n            if (uVar5 <= in_R9) goto code_r0x0044911c;\n        }\n        piVar6 = piVar6 + 3;\n    } while( true );\n}\n",
        "token_count": 852
    },
    "00449220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004494ec)\n// WARNING: Removing unreachable block (ram,0x004494f9)\n// WARNING: Removing unreachable block (ram,0x00449670)\n// WARNING: Removing unreachable block (ram,0x00449509)\n// WARNING: Removing unreachable block (ram,0x0044960f)\n// WARNING: Removing unreachable block (ram,0x00449701)\n// WARNING: Removing unreachable block (ram,0x0044975b)\n// WARNING: Removing unreachable block (ram,0x00449687)\n// WARNING: Removing unreachable block (ram,0x0044976c)\n\nuint fcn.00449220(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x00449289;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x00449289:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (*0x5a1ba4 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.00449040();\n                fcn.004330a0();\n                fcn.004339a0();\n                fcn.00433800();\n                fcn.00433300();\n                fcn.00433120();\n                iVar7 = fcn.004317e0();\ncode_r0x004493b6:\n                do {\n                    iStack56 = iVar7;\n                    fcn.00449040();\n                    iVar7 = fcn.00449fa0(arg1);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.004599e0(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    uStack32 = unaff_RBX;\n                    iStack24 = in_RAX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.00449040();\n                    uStack140 = 0xffffffff;\n                    arg1 = uVar6 - uStack64;\n                    iVar7 = (-arg1 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x004493b6;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.00459aa0(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1511
    },
    "0044a140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044a140(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    bool bVar8;\n    char cVar9;\n    ulong *in_RAX;\n    int64_t iVar10;\n    ulong arg1;\n    int64_t iVar11;\n    uint64_t *unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uint8_t uVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar14 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar14 != 0xd) && (uVar14 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44a1ce;\n                        cVar9 = fcn.0044a420(0);\n                        if (cVar9 == '\\0') {\n                            piVar15 = *(*0x20 + 8);\n                            piVar15[1] = *(*0x20 + -0x48);\n                            piVar15[2] = *(*0x20 + -0x40);\n                            if (*0x5a1da0 == 0) {\n                                *piVar15 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x44a245;\n                                fcn.00459660(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar16 = *(*0x20 + 0x10);\n                            piVar15[4] = -*(piVar16 + 0x15) & (*(piVar16 + 0x15) + piVar15[4]) - 1;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            iVar10 = piVar15[3];\n                            *(*0x20 + -0x30) = iVar10;\n                            iVar11 = piVar15[4];\n                            *(*0x20 + -0x28) = iVar11;\n                            iVar1 = *piVar16;\n                            *(*0x20 + -0x18) = iVar1;\n                            iVar2 = *piVar15;\n                            iVar3 = piVar15[1];\n                            if (iVar3 == 0) {\n                                bVar8 = true;\n                            }\n                            else {\n                                if (*(iVar2 + -0x28 + iVar3 * 0x28) == 1) {\n                                    iVar4 = *(iVar2 + -8 + iVar3 * 0x28);\n                                    if ((iVar10 == *(iVar2 + -0x20 + iVar3 * 0x28) + iVar4) &&\n                                       (iVar11 == *(iVar2 + -0x18 + iVar3 * 0x28) + iVar4)) {\n                                        *(iVar2 + -8 + iVar3 * 0x28) = iVar4 + iVar1;\n                                        uVar14 = 1;\n                                    }\n                                    else {\n                                        uVar14 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar14 = 0;\n                                }\n                                bVar8 = uVar14 ^ 1;\n                            }\n                            if (bVar8) {\n                                iVar11 = piVar15[1];\n                                uVar12 = iVar11 + 1;\n                                iVar1 = *piVar15;\n                                arg4 = piVar15[2];\n                                iVar10 = iVar1;\n                                if (arg4 < uVar12) {\n                                    *(*0x20 + -0x90) = 0x44a331;\n                                    iVar10 = fcn.00443500(iVar11);\n                                    piVar15 = *(*0x20 + 8);\n                                    piVar15[2] = iVar11;\n                                    if (*0x5a1da0 == 0) {\n                                        *piVar15 = iVar10;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x44a350;\n                                        iVar10 = fcn.00459540(iVar11, uVar12, piVar16, arg4);\n                                    }\n                                    piVar16 = *(*0x20 + 0x10);\n                                    iVar11 = iVar1;\n                                }\n                                piVar15[1] = iVar11 + 1;\n                                *(iVar10 + iVar11 * 0x28) = *(*0x20 + -0x38);\n                                iVar10 = iVar10 + iVar11 * 0x28;\n                                uVar5 = *(*0x20 + -0x2c);\n                                uVar6 = *(*0x20 + -0x28);\n                                uVar7 = *(*0x20 + -0x24);\n                                *(iVar10 + 8) = *(*0x20 + -0x30);\n                                *(iVar10 + 0xc) = uVar5;\n                                *(iVar10 + 0x10) = uVar6;\n                                *(iVar10 + 0x14) = uVar7;\n                                uVar5 = *(*0x20 + -0x1c);\n                                uVar6 = *(*0x20 + -0x18);\n                                uVar7 = *(*0x20 + -0x14);\n                                *(iVar10 + 0x18) = *(*0x20 + -0x20);\n                                *(iVar10 + 0x1c) = uVar5;\n                                *(iVar10 + 0x20) = uVar6;\n                                *(iVar10 + 0x24) = uVar7;\n                            }\n                            piVar15[4] = piVar15[4] + *piVar16;\n                        }\n                        else {\n                            piVar15 = *(*0x20 + 8);\n                            piVar16 = *(*0x20 + 0x10);\n                            uVar12 = *(piVar16 + 0x15);\n                            uVar12 = -uVar12 & (piVar15[5] + uVar12) - 1;\n                            piVar15[5] = uVar12;\n                            piVar15[5] = *piVar16 + uVar12;\n                        }\n                        piVar15[3] = piVar15[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & (in_RAX[4] + *(unaff_RBX + 0x15)) - 1;\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x44a3e5;\n                fcn.00431040();\n            }\n            unaff_RBX = 0x4f0d18;\n            *(*0x20 + -0x90) = 0x44a3f8;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + -8) = 0x44a408;\n        fcn.00457320();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 1928
    },
    "0044aaa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0044aaa0(int64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x5a1b94 == 0) {\n                *(*0x20 + -0x58) = 0x44aad0;\n                fcn.0042b3c0();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar4 = *(in_RAX + 0x2290);\n                arg3 = *(in_RAX + 0x2288);\n                arg4 = iVar4 + 1;\n                if (*(in_RAX + 0x2298) < arg4) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x58) = 0x44ab2c;\n                    iVar6 = arg3;\n                    iVar3 = fcn.00443500(iVar4);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2298) = iVar4;\n                    if (*0x5a1da0 == 0) {\n                        *(in_RAX + 0x2288) = iVar3;\n                        param_1 = iVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x44ab5d;\n                        iVar3 = fcn.00459540(in_RAX, in_RAX + 0x2288, iVar6, arg4);\n                        param_1 = in_RAX;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = arg3;\n                    arg3 = iVar3;\n                }\n                iVar6 = iVar4 + 1;\n                *(in_RAX + 0x2290) = iVar6;\n                if (*0x5a1da0 == 0) {\n                    *(arg3 + iVar4 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x44ab96;\n                    fcn.00459680(param_1, in_RAX, arg3, iVar6);\n                }\n                arg1 = *(in_RAX + 0x2298);\n                *(*0x20 + -0x58) = 0x44abb6;\n                fcn.0044c740(arg1, in_RAX, arg3, iVar6);\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x2290) != 0) {\n                    if (**(iVar4 + 0x2288) == *(*0x20 + 0x10)) {\n                        *(iVar4 + 0x1208) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar4 + 0x22a0;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                param_1 = 0;\n                *(*0x20 + -0x58) = 0x44ac05;\n                fcn.004599e0(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44ac16;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x44ac26;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1099
    },
    "0044aee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044aee0(ulong noname_0, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(in_RAX + 0x2290);\n            if (unaff_RBX < uVar5) {\n                piVar3 = *(*(in_RAX + 0x2288) + unaff_RBX * 8);\n                if (in_RAX == *piVar3) {\n                    *piVar3 = 0;\n                    uVar5 = *(in_RAX + 0x2290);\n                    arg3 = uVar5 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x0044af76:\n                        arg4 = *(in_RAX + 0x2290);\n                        if (arg3 < arg4) {\n                            if (*0x5a1da0 == 0) {\n                                *(*(in_RAX + 0x2288) + -8 + uVar5 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44afb0;\n                                in_RAX = fcn.004596a0(uVar5, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2298);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2290) = arg3;\n                                uVar5 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar4 = *(in_RAX + 0x2288);\n                                    arg1 = *(in_RAX + 0x2298);\n                                    *(*0x20 + -0x38) = 0x44b005;\n                                    uVar4 = fcn.0044c740(arg1, uVar4, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar4;\n                                    uVar4 = *(*(*0x20 + 8) + 0x2298);\n                                    *(*0x20 + -0x38) = 0x44b031;\n                                    fcn.0044c8c0(uVar4);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2290) == 0) {\n                                        *(in_RAX + 0x1208) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n                                    }\n                                }\n                                LOCK();\n                                piVar1 = in_RAX + 0x22a0;\n                                iVar2 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar2 == 1) {\n                                    *(in_RAX + 0x1210) = 0;\n                                }\n                                return uVar5;\n                            }\n                            *(*0x20 + -0x38) = 0x44b0a5;\n                            fcn.00459a60(arg3, arg2);\n                        }\n                        uVar5 = arg4;\n                        *(*0x20 + -0x38) = 0x44b0b0;\n                        fcn.004599e0(uVar5);\ncode_r0x0044b0b0:\n                        *(*0x20 + -0x38) = 0x44b0b8;\n                        fcn.004599e0(uVar5);\n                    }\n                    else if (arg3 < uVar5) {\n                        if (unaff_RBX < uVar5) {\n                            if (*0x5a1da0 == 0) {\n                                *(*(in_RAX + 0x2288) + unaff_RBX * 8) = *(*(in_RAX + 0x2288) + -8 + uVar5 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x44af76;\n                                in_RAX = fcn.004596e0(uVar5, arg2, arg3);\n                            }\n                            goto code_r0x0044af76;\n                        }\n                        goto code_r0x0044b0b0;\n                    }\n                    *(*0x20 + -0x38) = 0x44b0c5;\n                    fcn.004599e0(uVar5);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x44b0d6;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x38) = 0x44b0de;\n            in_RAX = fcn.004599e0(uVar5);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x44b0ee;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1415
    },
    "0044b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044b100(ulong noname_0, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg1_01;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2290) != 0) {\n                arg3 = ***(in_RAX + 0x2288);\n                if (in_RAX == arg3) {\n                    ***(in_RAX + 0x2288) = 0;\n                    arg1_01 = *(in_RAX + 0x2290);\n                    arg1 = arg1_01 - 1;\n                    if (0 < arg1) {\n                        if (*0x5a1da0 == 0) {\n                            **(in_RAX + 0x2288) = (*(in_RAX + 0x2288))[arg1_01 + -1];\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44b174;\n                            in_RAX = fcn.004596a0(arg1_01, arg2, arg3, arg4);\n                        }\n                    }\n                    arg3_00 = *(in_RAX + 0x2290);\n                    if (arg1 < arg3_00) {\n                        if (*0x5a1da0 == 0) {\n                            *(*(in_RAX + 0x2288) + -8 + arg1_01 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x44b1ae;\n                            in_RAX = fcn.004596a0(arg1_01, arg2, arg3_00, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2298);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2290) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                arg1_00 = *(in_RAX + 0x2298);\n                                *(*0x20 + -0x30) = 0x44b1e7;\n                                fcn.0044c8c0(arg1_00);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2290) == 0) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n                            }\n                            LOCK();\n                            piVar1 = in_RAX + 0x22a0;\n                            iVar2 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar2 == 1) {\n                                *(in_RAX + 0x1210) = 0;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x44b245;\n                        fcn.00459a60(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x44b250;\n                    fcn.004599e0(arg3_00);\n                }\n                *(*0x20 + -0x30) = 0x44b265;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x30) = 0x44b26f;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44b27a;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1027
    },
    "0044bde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044bde0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t *arg2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044bde0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044be07:\n        if (*(in_RAX + 0x2290) == 0) goto code_r0x0044c025;\n        arg2 = **(in_RAX + 0x2288);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44c025;\n            fcn.004317e0();\n            goto code_r0x0044c025;\n        }\n        uVar1 = *(arg2 + 8);\n        if (9 < uVar1) {\n            *(*0x20 + -0x30) = 0x44bfbb;\n            fcn.0044cae0();\n            in_RAX = *(*0x20 + 8);\n            goto code_r0x0044bfc5;\n        }\n        *(*0x20 + -0x10) = arg2;\n        switch(uVar1) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x30) = 0x44bef0;\n            fcn.0044cae0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 1:\n            if (unaff_RBX < arg2[1]) {\n                return arg2[1];\n            }\n            LOCK();\n            if (uVar1 == *(arg2 + 8)) {\n                *(arg2 + 8) = 2;\n                *(*0x20 + -0x30) = 0x44bfe5;\n                fcn.0044c060(unaff_RBX);\n                return 0;\n            }\n            goto code_r0x0044be07;\n        default:\n            *(*0x20 + -0x30) = 0x44bfaa;\n            fcn.0044cae0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 3:\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044be07;\n            *(arg2 + 8) = 4;\n            *(*0x20 + -0x30) = 0x44be9f;\n            fcn.0044b100(in_RAX, arg2, param_3, param_4);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                *(*(*0x20 + -0x10) + 0x40) = 5;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44bebf;\n                fcn.0044cae0();\n            }\n            in_RAX = *(*0x20 + 8);\n            LOCK();\n            *(in_RAX + 0x22a4) = *(in_RAX + 0x22a4) + -1;\n            if (*(in_RAX + 0x2290) == 0) {\n                return -1;\n            }\n            break;\n        case 6:\n            *(*0x20 + -0x28) = 0x4dc540;\n            *(*0x20 + -0x30) = 0x44bf0f;\n            fcn.004571e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 7:\n        case 8:\n            goto code_r0x0044bf32;\n        }\n        goto code_r0x0044bfc5;\n    }\n    goto code_r0x0044c030;\ncode_r0x0044bf32:\n    LOCK();\n    if (uVar1 != *(arg2 + 8)) goto code_r0x0044be07;\n    *(arg2 + 8) = 9;\n    arg2[1] = arg2[7];\n    *(*0x20 + -0x30) = 0x44bf65;\n    fcn.0044b100(in_RAX, arg2, param_3, param_4);\n    *(*0x20 + -0x30) = 0x44bf74;\n    fcn.0044aaa0();\n    LOCK();\n    if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n        *(*(*0x20 + -0x10) + 0x40) = 1;\n    }\n    else {\n        *(*0x20 + -0x30) = 0x44bf94;\n        fcn.0044cae0();\n    }\n    in_RAX = *(*0x20 + 8);\ncode_r0x0044bfc5:\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x0044be07;\ncode_r0x0044c025:\n    *(*0x20 + -0x30) = 0x44c02f;\n    in_RAX = fcn.004599e0(0);\ncode_r0x0044c030:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44c03f;\n    fcn.0045ba20();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044bde0;\n}\n",
        "token_count": 1466
    },
    "0044c060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c060(int64_t arg1)\n\n{\n    code **arg2;\n    ulong arg4;\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ba20();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    arg4 = *(unaff_RBX + 0x30);\n    iVar1 = *(unaff_RBX + 0x10);\n    if (iVar1 < 1) {\n        fcn.0044b100(arg1, arg2, *(unaff_RBX + 0x28), arg4);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044cae0();\n        }\n    }\n    else {\n        iVar1 = iVar1 * ((arg1 - *(unaff_RBX + 8)) / iVar1 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar1;\n        if (iVar1 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044c8c0(*(in_RAX + 0x2298));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044cae0();\n        }\n        if (*(in_RAX + 0x2290) == 0) {\n            *(in_RAX + 0x1208) = 0;\n        }\n        else {\n            *(in_RAX + 0x1208) = *(**(in_RAX + 0x2288) + 8);\n        }\n    }\n    fcn.00409cc0();\n    (**arg2)(arg4);\n    fcn.00409aa0();\n    return;\n}\n",
        "token_count": 506
    },
    "0044c200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c200(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong *arg1_00;\n    ulong *puVar8;\n    int32_t iVar9;\n    ulong *arg4;\n    ulong *in_R10;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \ncode_r0x0044c200:\n    puVar5 = *0x20;\n    puVar8 = in_R10;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1210) = 0;\n        piVar6 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x18) = piVar6;\n        arg1 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2298);\n        *(*0x20 + -0x28) = arg2;\n        puVar4 = NULL;\n        piVar7 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        uVar3 = unaff_R12;\ncode_r0x0044c260:\n        puVar8 = arg1_00;\n        if (puVar4 < arg1) {\n            *(*0x20 + -0x20) = puVar4;\n            *(*0x20 + -0x3c) = arg4;\n            *(*0x20 + -0x38) = arg1_00;\n            *(*0x20 + -0x3d) = piVar7;\n            puVar8 = piVar6[puVar4];\n            *(*0x20 + -0x10) = puVar8;\n            uVar3 = in_RAX;\n        }\n        else {\n            for (; puVar8 < arg1; puVar8 = puVar8 + 1) {\n                if (arg1 <= puVar8) goto code_r0x0044c4a9;\n                piVar7 = piVar6 + puVar8;\n                if (*0x5a1da0 == 0) {\n                    piVar6[puVar8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44c427;\n                    in_RAX = fcn.00459680(arg1, arg2, puVar8, arg4);\n                    in_R10 = arg1_00;\n                }\n            }\n            iVar9 = arg4;\n            LOCK();\n            puVar1 = in_RAX + 0x22a4;\n            arg4 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            LOCK();\n            puVar1 = in_RAX + 0x22a0;\n            puVar8 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            if (arg1_00 <= arg2) {\n                *(in_RAX + 0x2290) = arg1_00;\n                *(in_RAX + 0x2298) = arg2;\n                if (*0x5a1da0 == 0) {\n                    *(in_RAX + 0x2288) = piVar6;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44c477;\n                    in_RAX = fcn.004596a0(arg1, arg2, puVar8, arg4);\n                }\n                if (arg1_00 == NULL) {\n                    *(in_RAX + 0x1208) = 0;\n                }\n                else {\n                    *(in_RAX + 0x1208) = *(*piVar6 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44c4a9;\n            arg1 = arg1_00;\n            fcn.00459a60(arg1_00, arg2);\ncode_r0x0044c4a9:\n            *(*0x20 + -0x68) = 0x44c4b1;\n            fcn.004599e0(arg1);\n            puVar4 = arg1_00;\n            arg1_00 = puVar8;\n            puVar8 = in_R10;\n        }\ncode_r0x0044c4b4:\n        uVar2 = *(puVar8 + 8);\n        unaff_R12 = uVar2;\n        in_RAX = uVar3;\n        in_R10 = puVar8;\n        switch(unaff_R12) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x68) = 0x44c4fb;\n            fcn.0044cae0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044c4b4;\n        case 1:\n            if (piVar7 != '\\0') {\n                if (arg1 <= arg1_00) goto code_r0x0044c645;\n                if (*0x5a1da0 == 0) {\n                    piVar6[arg1_00] = puVar8;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44c2b7;\n                    fcn.004596e0(arg1, arg2, arg1_00);\n                    arg4 = puVar8;\n                }\n                *(*0x20 + -0x68) = 0x44c2c8;\n                fcn.0044c740(arg2, arg2, arg1_00, arg4);\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x30);\n                arg2 = *(*0x20 + -0x28);\n                puVar4 = *(*0x20 + -0x20);\n                piVar6 = *(*0x20 + -0x18);\n                piVar7 = *(*0x20 + -0x3d);\n                arg1_00 = *(*0x20 + -0x38);\n                arg4 = *(*0x20 + -0x3c);\n            }\n            arg1_00 = arg1_00 + 1;\n            goto code_r0x0044c258;\n        case 2:\n        case 4:\n        case 9:\n            *(*0x20 + -0x68) = 0x44c5c5;\n            fcn.0044cae0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044c4b4;\n        case 3:\n            LOCK();\n            if (uVar2 == *(puVar8 + 8)) {\n                *(puVar8 + 8) = 4;\n                *puVar8 = 0;\n                LOCK();\n                bVar10 = *(puVar8 + 8) == 4;\n                if (bVar10) {\n                    *(puVar8 + 8) = 5;\n                }\n                in_R10 = puVar8 & 0xffffffffffffff00 | bVar10;\n                if (!bVar10) {\n                    *(*0x20 + -0x68) = 0x44c31c;\n                    fcn.0044cae0();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    puVar4 = *(*0x20 + -0x20);\n                    piVar6 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x38);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg4 = arg4 + 1;\n                piVar7 = 0x1;\n                unaff_R12 = in_RAX;\n                goto code_r0x0044c258;\n            }\n            goto code_r0x0044c4b4;\n        case 6:\n            *(*0x20 + -0x60) = 0x4dc540;\n            *(*0x20 + -0x68) = 0x44c545;\n            fcn.004571e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044c4b4;\n        case 7:\n        case 8:\n            goto code_r0x0044c591;\n        default:\n            *(*0x20 + -0x68) = 0x44c605;\n            fcn.0044cae0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg4 = *(*0x20 + -0x3c);\n            uVar3 = *(*0x20 + 8);\n            puVar4 = *(*0x20 + -0x20);\n            arg1_00 = *(*0x20 + -0x38);\n            puVar8 = *(*0x20 + -0x10);\n            goto code_r0x0044c4b4;\n        }\n    }\n    goto code_r0x0044c64e;\ncode_r0x0044c591:\n    LOCK();\n    if (uVar2 == *(puVar8 + 8)) goto code_r0x0044c59e;\n    goto code_r0x0044c4b4;\ncode_r0x0044c59e:\n    *(puVar8 + 8) = 9;\n    puVar8[1] = puVar8[7];\n    unaff_R12 = uVar3;\n    if (arg1_00 < arg1) {\n        if (*0x5a1da0 == 0) {\n            piVar6[arg1_00] = puVar8;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44c387;\n            fcn.004596e0(arg1, arg2, arg1_00);\n            arg4 = puVar8;\n        }\n        *(*0x20 + -0x68) = 0x44c398;\n        fcn.0044c740(arg2, arg2, arg1_00, arg4);\n        LOCK();\n        if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n            *(*(*0x20 + -0x10) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44c3b8;\n            fcn.0044cae0();\n        }\n        arg1_00 = *(*0x20 + -0x38) + 1;\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x30);\n        arg2 = *(*0x20 + -0x28);\n        puVar4 = *(*0x20 + -0x20);\n        piVar6 = *(*0x20 + -0x18);\n        piVar7 = 0x1;\n        arg4 = *(*0x20 + -0x3c);\ncode_r0x0044c258:\n        puVar4 = puVar4 + 1;\n        uVar3 = unaff_R12;\n        goto code_r0x0044c260;\n    }\n    *(*0x20 + -0x68) = 0x44c645;\n    fcn.004599e0(arg1);\ncode_r0x0044c645:\n    *(*0x20 + -0x68) = 0x44c64d;\n    in_RAX = fcn.004599e0(arg1);\ncode_r0x0044c64e:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44c658;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    in_R10 = puVar8;\n    goto code_r0x0044c200;\n}\n",
        "token_count": 3250
    },
    "0044c740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044c740(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44c771;\n                fcn.0044cae0();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44c7a8;\n                    fcn.0044cae0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044c85a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044c84f;\n                    if (*0x5a1da0 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44c806;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.004596e0(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x5a1da0 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44c834;\n                            unaff_RDI = fcn.004596a0(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44c84f;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044c84f:\n                *(*0x20 + -0x28) = 0x44c85a;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044c85a:\n                *(*0x20 + -0x28) = 0x44c865;\n                fcn.004599e0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44c870;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.004599e0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44c88a;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1284
    },
    "0044c8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044c8c0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar8 = unaff_RBX < unaff_RDI;\n            bVar9 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44c8f1;\n                fcn.0044cae0();\n                arg1 = *(*0x20 + 0x10);\n                bVar8 = arg1 < *(*0x20 + 0x20);\n                bVar9 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar8 && !bVar9) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44c928;\n                    fcn.0044cae0();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044ca87;\n                    iVar4 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar5 = unaff_RDI + 2;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044ca7c;\n                        iVar7 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        if (iVar7 < iVar4) {\n                            arg4 = uVar5;\n                            iVar4 = iVar7;\n                        }\n                    }\n                    uVar5 = unaff_RDI + 3;\n                    uVar6 = arg4;\n                    iVar7 = iVar4;\n                    if (uVar5 < unaff_RBX) {\n                        if (unaff_RBX <= uVar5) goto code_r0x0044ca71;\n                        iVar7 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar6 = unaff_RDI + 4;\n                        if (uVar6 < unaff_RBX) {\n                            if (unaff_RBX <= uVar6) goto code_r0x0044ca66;\n                            iVar2 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            if (iVar2 < iVar7) {\n                                uVar5 = uVar6;\n                                iVar7 = iVar2;\n                            }\n                        }\n                        uVar6 = uVar5;\n                        if (iVar4 <= iVar7) {\n                            uVar6 = arg4;\n                            iVar7 = iVar4;\n                        }\n                    }\n                    if (arg2 <= iVar7) break;\n                    if (unaff_RBX <= uVar6) goto code_r0x0044ca5b;\n                    if (unaff_RBX <= arg3) goto code_r0x0044ca50;\n                    if (*0x5a1da0 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar6 * 8);\n                        arg3 = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44ca10;\n                        in_RAX = fcn.004596e0(arg1, arg2, arg3);\n                        arg3 = uVar6;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar4 = *(in_RAX + arg3 * 8);\n                    if (iVar4 != iVar1) {\n                        if (*0x5a1da0 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44ca3b;\n                            fcn.004596a0(iVar4, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44ca50;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca50:\n                *(*0x20 + -0x28) = 0x44ca5b;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca5b:\n                *(*0x20 + -0x28) = 0x44ca66;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca66:\n                *(*0x20 + -0x28) = 0x44ca71;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca71:\n                *(*0x20 + -0x28) = 0x44ca7c;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca7c:\n                *(*0x20 + -0x28) = 0x44ca87;\n                fcn.004599e0(unaff_RBX);\ncode_r0x0044ca87:\n                *(*0x20 + -0x28) = 0x44ca92;\n                fcn.004599e0(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44ca9d;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.004599e0(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44cab7;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1832
    },
    "0044cb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044cb60(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((*0x553d88 != 0) && ((*0x553d78 != 0 || (*0x553d31 != '\\0')))) {\n        fcn.00409aa0();\n        iVar1 = *0x553d88;\n        if ((*0x553d88 != 0) && ((*0x553d78 != 0 || (*0x553d31 != '\\0')))) {\n            *0x553d88 = 0;\n            fcn.00409cc0();\n            return iVar1;\n        }\n        fcn.00409cc0();\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 216
    },
    "0044cc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044cc40(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.00409aa0();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x553d78 != NULL) {\n        **0x553d80 = puVar1;\n        puVar2 = *0x553d78;\n    }\n    *0x553d78 = puVar2;\n    *0x553d80 = puVar1;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 241
    },
    "0044cd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044cd00(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = fcn.0044d460();\n    if ((*0x553d30 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.0044d4e0();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044ce20(unaff_RBX & 0xffffffff, noname_1, 0, noname_1);\n    fcn.0044d4e0();\n    return;\n}\n",
        "token_count": 250
    },
    "0044d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044d340(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x10) = unaff_RBX;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x44d3c5;\n                arg1 = fcn.00451960(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x44d3a5;\n                arg1 = fcn.00451ae0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x44d405;\n                uVar1 = fcn.0044d7e0(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x44d419;\n            in_RAX = fcn.00459a60(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44d438;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "0044d4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044d4e0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_EAX == -1) {\n        fcn.00409cc0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0044d560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0044d560(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x553d28 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x553d28 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x553d28;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44d5b9;\n                fcn.00409aa0();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x553d78;\n            puVar2 = *0x553d80;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x553d78 != NULL)) {\n                **0x553d80 = in_RAX;\n                puVar3 = *0x553d78;\n                puVar2 = in_RAX;\n            }\n            *0x553d80 = puVar2;\n            *0x553d78 = puVar3;\n            if (*0x553d70 == NULL) {\n                *(*0x20 + -0x38) = 0x44d628;\n                puVar3 = fcn.00413640();\n                if (puVar3 != NULL) goto code_r0x0044d631;\n            }\n            else {\n                puVar3 = *0x553d70;\n                *0x553d70 = **0x553d70;\ncode_r0x0044d631:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44d64d;\n                fcn.004593e0(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x0044d792;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x0044d775;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44d759;\n                                fcn.00409cc0();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44d775;\n                        fcn.004599e0(0xfbe8);\ncode_r0x0044d775:\n                        *(*0x20 + -0x38) = 0x44d785;\n                        fcn.004599e0(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44d792;\n                    fcn.004599e0(0xfbe8);\ncode_r0x0044d792:\n                    *(*0x20 + -0x38) = 0x44d79f;\n                    fcn.004599e0(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44d7ac;\n                fcn.004599e0(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44d7bd;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44d7cc;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1589
    },
    "0044dae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0044dae0(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44db48;\n                    piVar1 = fcn.00413640();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044db6c;\n                    }\n                    goto code_r0x0044dba5;\n                }\n            }\n            else {\ncode_r0x0044db6c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 8;\n                }\n                *(*0x20 + -0x28) = 0x44dba5;\n                fcn.00459a00(0xfff8);\ncode_r0x0044dba5:\n                *(*0x20 + -0x28) = 0x44dbb6;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44dbc7;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44dbd7;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0044dc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044dc60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044cd00(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0044dd20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044dd20(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44dd74;\n            fcn.004317e0();\n        }\n        *(puVar2 + -8) = 0x44dd7a;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "0044dd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044dd80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.0044cd00(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0044de20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044de20(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x44de99;\n                    fcn.0044cd00(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x44dec5;\n            fcn.004317e0();\n        }\n        *(puVar2 + -8) = 0x44decb;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 428
    },
    "0044dfc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0044dfc0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1230) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x44e0a9;\n                    fcn.0044cd00(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x44e0ee;\n                fcn.0044cd00(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1230) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1230) * 8 + 0x563de8);\n                *(*0x20 + -0x68) = 0x44e068;\n                fcn.0044cd00(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44e105;\n            fcn.004599e0(4);\n        }\n        *(puVar3 + -8) = 0x44e10b;\n        fcn.00457320();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 693
    },
    "0044e3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044e3e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044cd00(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00450460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00450460(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x27);\n            if (uVar1 < 6) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar9 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar9 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar9;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x27 + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar9 = uVar2 + *(unaff_RBX + 0x130) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar9;\n            *(*0x20 + -0x90) = 0x450538;\n            uVar4 = fcn.00449e60(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar7 = 0xff;\n            }\n            else {\n                uVar7 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar7;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x450960;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar7;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x450880;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar9 = 0;\n            cVar5 = '\\0';\n            while (uVar9 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar9);\n                uVar8 = uVar9 + 1;\n                *(*0x20 + -0x58) = uVar8;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45061d;\n                            fcn.004330a0();\n                            *(*0x20 + -0x90) = 0x45062e;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x450633;\n                            fcn.00433120();\n                        }\n                        *(*0x20 + -0x90) = 0x450638;\n                        fcn.004330a0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x450649;\n                        fcn.004339a0();\n                        *(*0x20 + -0x90) = 0x45064e;\n                        fcn.00433120();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x45067c;\n                            fcn.004330a0();\n                            *(*0x20 + -0x90) = 0x45068d;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x450692;\n                            fcn.00433120();\n                        }\n                        *(*0x20 + -0x90) = 0x450697;\n                        fcn.004330a0();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x4506a8;\n                        fcn.004339a0();\n                        *(*0x20 + -0x90) = 0x4506ad;\n                        fcn.00433120();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x0045073e:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar9;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x450755;\n                            fcn.004330a0();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x450766;\n                            fcn.004339a0();\n                            *(*0x20 + -0x90) = 0x45076b;\n                            fcn.00433120();\n                            uVar9 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar8 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar8) {\n                            *(*0x20 + -0x90) = 0x450825;\n                            fcn.004599e0(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar9 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x4507ab;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar9 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x004507fd:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x4507d8;\n                        fcn.004330a0();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x4507e9;\n                        fcn.004339a0();\n                        *(*0x20 + -0x90) = 0x4507ee;\n                        fcn.00433120();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x004507fd;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0045073e;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x4506e5;\n                        fcn.004330a0();\n                        *(*0x20 + -0x90) = 0x4506f6;\n                        fcn.004339a0();\n                        *(*0x20 + -0x90) = 0x4506fb;\n                        fcn.00433120();\n                    }\n                    *(*0x20 + -0x90) = 0x450705;\n                    fcn.004330a0();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x450716;\n                    fcn.004339a0();\n                    *(*0x20 + -0x90) = 0x45071b;\n                    fcn.00433120();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar9 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x45082f;\n            in_RAX = fcn.004599e0(0xab);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x450849;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2526
    },
    "00450e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00450e20(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.004490a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00451b80(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.00450ec0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "004514e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004514e0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.00433120();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.004490a0();\n        cVar1 = fcn.00451c40(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.004516a0(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    iVar2 = fcn.004490a0();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00451c40();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.00450ec0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 474
    },
    "00451b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00451b80(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((1 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00451c40(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 217
    },
    "00451c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00451c40(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar4;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        param_1 = param_1 & 0xff;\n    }\n    arg2 = *0x53a28c;\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (arg2 = *0x53a28c >> 2,  uVar3 = arg2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n        arg2 = 2;\n        uVar3 = arg2;\n    }\n    if (1 < uVar3) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    uVar3 = param_1;\n    piVar2 = fcn.00449820();\n    if ((((unaff_RBX == 0xf) && (uVar3 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402700(uVar3, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar4) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 714
    },
    "00452080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00452080(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.004330a0();\n        fcn.00433300();\n        fcn.00433120();\n        fcn.00451e40();\n        fcn.00451180(0);\n    }\n    fcn.00434e40();\n    return;\n}\n",
        "token_count": 182
    },
    "004525c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004525c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54d5c0 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.004526e0(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.004528e0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.00433300();\n        fcn.00433120();\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "004526e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.004526e0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.004528e0();\n        if (arg1[3] == 0) {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        else {\n            fcn.00448140();\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.00433300();\n            fcn.00433120();\n        }\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433120();\n        if (arg1[1] != 0) {\n            fcn.00448140();\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004332c0();\n            fcn.00433120();\n        }\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.00433300();\n        fcn.00433120();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 404
    },
    "004528e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004528e0(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((*0x5a1ba4 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable.Ld_M_fF.0;\n    }\n    else {\n        pcVar1 = 0x4dc2d0;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 169
    },
    "00452960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00452960(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x54d5c8 == 0) {\n                return;\n            }\n            if ((*0x5a1ba4 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable.Ld_M_fF.0;\n            }\n            else {\n                pcVar1 = 0x4dc2d0;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x4529e7;\n                (*pcVar1)();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x452a05;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x452a1f;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 609
    },
    "00452a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00452a40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x452a65;\n            fcn.00452c00();\n            *(*0x20 + -0x20) = 0x452a6a;\n            iVar2 = fcn.00453360(param_1, param_2, param_3, param_4);\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar2;\n            }\n            if (uVar1 != 0) {\n                return iVar2 + (-(uVar1 - 1) >> 0x3f & 1);\n            }\n            param_1 = 0;\n            *(*0x20 + -0x20) = 0x452ab4;\n            in_RAX = fcn.00459aa0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x452abf;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 461
    },
    "00453680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00453680(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uint64_t uVar17;\n    int64_t *piVar18;\n    int64_t iVar19;\n    int64_t iVar20;\n    int64_t arg4;\n    int64_t iVar21;\n    int64_t iVar22;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar16 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x238 && *0x20 + -0x238 != *(unaff_R14 + 0x10)) {\n            puVar16 = *0x20 + -0x2b8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x53f4e0 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x53f418 < 9) {\n                *(*0x20 + -0x2c8) = unaff_RBP;\n                *(*0x20 + -0x2c0) = 0x4536fa;\n                fcn.00459c38();\n                unaff_RBP = *(*0x20 + -0x2c8);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2c0) = 0x453725;\n            uVar5 = fcn.0040c780(*0x20 + -0x1b8);\n            if (*0x54d5e8 == NULL) {\n                piVar18 = NULL;\n                piVar7 = NULL;\n                piVar13 = NULL;\n            }\n            else {\n                piVar7 = **0x54d5e8;\n                piVar18 = (*0x54d5e8)[1];\n                piVar13 = (*0x54d5e8)[2];\n            }\n            if (piVar18 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar20 = *piVar7;\n                iVar14 = (-(piVar13 + -1) >> 0x3f & 8) + piVar7;\n                *(*0x20 + -0x1f0) = iVar14;\n                iVar22 = piVar18 + -1;\n                *(*0x20 + -0x240) = iVar22;\n                iVar9 = 0;\n                do {\n                    if (iVar22 <= iVar9) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar9;\n                    *(*0x20 + -0x218) = iVar20;\n                    iVar19 = *(iVar14 + iVar9 * 8);\n                    *(*0x20 + -0x1f8) = iVar19;\n                    arg4 = *(iVar20 + 0x150);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar21 = *(iVar20 + 0x158);\n                    *(*0x20 + -0x250) = iVar21;\n                    iVar15 = 0;\n                    while (iVar15 < iVar21) {\n                        *(*0x20 + -600) = iVar15;\n                        uVar1 = *(arg4 + iVar15 * 4);\n                        if (*(iVar20 + 0x210) == 0) {\n                            iVar22 = uVar1 + *(iVar20 + 0x118);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x453985;\n                            piVar7 = fcn.0040dca0(uVar1);\n                            iVar22 = *piVar7;\n                        }\n                        *(*0x20 + -0x220) = iVar22;\n                        uVar11 = *(iVar22 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x4539ab;\n                        piVar7 = fcn.0040dca0(uVar11);\n                        uVar12 = piVar7[1];\n                        iVar22 = *piVar7;\n                        iVar9 = *(*0x20 + -0x220);\n                        for (iVar14 = 0; iVar14 < uVar12; iVar14 = iVar14 + 1) {\n                            if (*(iVar22 + iVar14 * 8) == iVar9) goto code_r0x0045390a;\n                        }\n                        uVar10 = uVar12 + 1;\n                        iVar14 = iVar22;\n                        uVar6 = uVar12;\n                        uVar17 = piVar7[2];\n                        if (piVar7[2] < uVar10) {\n                            *(*0x20 + -0x270) = uVar12;\n                            *(*0x20 + -0x2c0) = 0x4539e5;\n                            iVar14 = fcn.00443500(uVar12);\n                            uVar10 = iVar22 + 1;\n                            iVar9 = *(*0x20 + -0x220);\n                            uVar6 = *(*0x20 + -0x270);\n                            uVar11 = uVar12;\n                            uVar17 = uVar12;\n                        }\n                        *(*0x20 + -0x210) = iVar14;\n                        *(*0x20 + -0x260) = uVar10;\n                        *(*0x20 + -0x268) = uVar17;\n                        iVar22 = iVar14 + uVar6 * 8;\n                        if (*0x5a1da0 == 0) {\n                            *(iVar14 + uVar6 * 8) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x453a2a;\n                            fcn.00459660(uVar11, iVar9, uVar10, iVar22);\n                        }\n                        uVar12 = *(iVar9 + 0x10);\n                        *(*0x20 + -0x2c0) = 0x453a45;\n                        puVar8 = fcn.0040dfe0(uVar12);\n                        puVar8[1] = *(*0x20 + -0x260);\n                        puVar8[2] = *(*0x20 + -0x268);\n                        if (*0x5a1da0 == 0) {\n                            *puVar8 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x453a85;\n                            fcn.00459660(uVar12, *(*0x20 + -0x210), uVar10, iVar22);\n                        }\ncode_r0x0045390a:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar14 = *(*0x20 + -0x1f0);\n                        iVar22 = *(*0x20 + -0x240);\n                        iVar19 = *(*0x20 + -0x1f8);\n                        iVar20 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar21 = *(*0x20 + -0x250);\n                        iVar15 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar19 + 0x210) == 0) {\n                        uVar10 = 0;\n                        *(*0x20 + -0x2c0) = 0x4537f7;\n                        uVar5 = fcn.0040c780(0);\n                        uVar11 = *0x54ddb0;\n                        uVar12 = *0x54ddb8 + 1;\n                        uVar6 = *0x54ddb0;\n                        uVar17 = *0x54ddb8;\n                        if (*0x54ddc0 < uVar12) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2c0) = 0x45382f;\n                            uVar10 = *0x54ddb8;\n                            uVar6 = fcn.00443500(*0x54ddb8);\n                            uVar17 = uVar6;\n                            *0x54ddc0 = uVar10;\n                            if (*0x5a1da0 != 0) {\n                                *(*0x20 + -0x2c0) = 0x453854;\n                                uVar6 = fcn.00459540(uVar10, uVar12, iVar20, arg4);\n                                uVar17 = *0x54ddb0;\n                            }\n                            *0x54ddb0 = uVar17;\n                            uVar5 = *(*0x20 + -0x230);\n                            uVar17 = uVar11;\n                        }\n                        *0x54ddb8 = uVar17 + 1;\n                        if (*0x5a1da0 == 0) {\n                            *(uVar6 + uVar17 * 8) = uVar5;\n                            iVar22 = *(*0x20 + -0x1f8);\n                            *(iVar22 + 0x210) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2c0) = 0x453894;\n                            fcn.00459540(uVar10, *0x54ddb8, iVar20, arg4);\n                            iVar22 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2c0) = 0x4538ae;\n                            fcn.00459540(iVar22, iVar22 + 0x210, iVar20, arg4);\n                        }\n                        iVar9 = *(iVar22 + 0x150);\n                        *(*0x20 + -0x200) = iVar9;\n                        iVar14 = *(iVar22 + 0x158);\n                        *(*0x20 + -0x250) = iVar14;\n                        iVar20 = 0;\n                        while (iVar20 < iVar14) {\n                            *(*0x20 + -600) = iVar20;\n                            iVar2 = *(iVar9 + iVar20 * 4);\n                            *(*0x20 + -0x274) = iVar2;\n                            iVar20 = iVar2 + *(iVar22 + 0x118);\n                            *(*0x20 + -0x208) = iVar20;\n                            uVar1 = *(iVar20 + 0x10);\n                            *(*0x20 + -0x2c0) = 0x453ae6;\n                            piVar7 = fcn.0040dca0(uVar1);\n                            iVar22 = *piVar7;\n                            *(*0x20 + -0x210) = iVar22;\n                            iVar9 = piVar7[1];\n                            *(*0x20 + -0x260) = iVar9;\n                            iVar14 = 0;\n                            while (iVar14 < iVar9) {\n                                *(*0x20 + -0x268) = iVar14;\n                                *(*0x20 + -0x228) = *(iVar22 + iVar14 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c8) = unaff_RBP;\n                                *(*0x20 + -0x2c0) = 0x453bcf;\n                                fcn.00459c59();\n                                unaff_RBP = *(*0x20 + -0x2c8);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2c0) = 0x453be8;\n                                uVar4 = fcn.00448420();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2c0) = 0x453c0c;\n                                cVar3 = fcn.00453c60(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00453b17;\n                                }\n                                iVar22 = *(*0x20 + -0x210);\n                                iVar9 = *(*0x20 + -0x260);\n                                iVar14 = *(*0x20 + -0x268) + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00453b17:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar12 = *(*0x20 + -0x274);\n                            *(*0x20 + -0x2c0) = 0x453b3e;\n                            puVar8 = fcn.0040dfe0(uVar12);\n                            if (*0x5a1da0 == 0) {\n                                *puVar8 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2c0) = 0x453b69;\n                                fcn.00459660(uVar12, *(*0x20 + -0x228), iVar20, arg4);\n                            }\n                            iVar22 = *(*0x20 + -0x1f8);\n                            iVar9 = *(*0x20 + -0x200);\n                            iVar14 = *(*0x20 + -0x250);\n                            iVar20 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar9 = *(*0x20 + -0x248);\n                        iVar14 = *(*0x20 + -0x1f0);\n                        iVar22 = *(*0x20 + -0x240);\n                        iVar19 = *(*0x20 + -0x1f8);\n                    }\n                    iVar9 = iVar9 + 1;\n                    iVar20 = iVar19;\n                } while( true );\n            }\n            *(*0x20 + -0x2c0) = 0x453c45;\n            fcn.004599e0(0);\n        }\n        *(puVar16 + -8) = 0x453c4b;\n        in_RAX = fcn.00457320();\n        *0x20 = puVar16;\n    } while( true );\n}\n",
        "token_count": 3376
    },
    "00454e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454e20(void)\n\n{\n    if (*0x5a1da0 != '\\0') {\n        fcn.00402d00();\n    }\n    fcn.0045edc0();\n    return;\n}\n",
        "token_count": 52
    },
    "00454e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00454e80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = in_RAX;\n    if (*0x5a1da0 != 0) {\n        fcn.00459540(arg1, arg2, arg3, arg4);\n        uVar1 = *0x54d600;\n    }\n    *0x54d600 = uVar1;\n    return;\n}\n",
        "token_count": 168
    },
    "00455080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00455080(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack56;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (auStackX8 <= unaff_R14[0xe]) {\n        unaff_R14[0x15] = 0;\n        iVar5 = *(unaff_R14[6] + 0xb0);\n        *(unaff_R14[6] + 0xb0) = 0;\n        cVar3 = fcn.0043ba80();\n        if (cVar3 != '\\0') {\n            if (*0x54afe4 != '\\0') {\n                fcn.004571e0();\n            }\n            if (*0x553d30 != '\\0') {\n                iVar2 = *(unaff_R14[6] + 0xa0);\n                if ((iVar2 != iVar5) || (*(iVar2 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                    fcn.004571e0();\n                }\n            }\n            piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n            *piVar1 = *piVar1 + 1;\n            fcn.00435c80(2);\n            unaff_R14[0xe] = 0;\n            *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n            if (*(unaff_R14 + 0xb1) == '\\0') {\n                unaff_R14[2] = *unaff_R14 + 0x13a0;\n            }\n            else {\n                unaff_R14[2] = -0x522;\n            }\n            *(unaff_R14 + 0xb7) = 0;\n            if ((*0x54e718 != '\\0') && (unaff_R14 = fcn.004524e0(),  unaff_R14 == '\\0')) {\n                unaff_R14 = fcn.00434200();\n            }\n            return unaff_R14;\n        }\n        unaff_R14[0x1a] = 0;\n        if (*0x553d30 != '\\0') {\n            while ((iVar5 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar5 + 0x14)))) {\n                iStack56 = 0x4dc540;\n                fcn.004571e0();\n            }\n            fcn.004593e0(unaff_R14, param_2);\n            unaff_R14[0x1a] = iStack56;\n        }\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        piVar4 = fcn.00457160();\n        unaff_R14[0xe] = 0;\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        *(unaff_R14 + 0xb7) = 0;\n        return piVar4;\n    }\n    iVar5 = fcn.004317e0();\n    if (((iVar5 < 4) && (1 < *0x5a1b90)) && (*0x54e6f8 + *0x54e6fc + 1 < *0x5a1b88)) {\n        iVar5 = *(unaff_R14[6] + 0xa0);\n        do {\n        } while (*(iVar5 + 0x194) != *(iVar5 + 0x194));\n        if ((*(iVar5 + 0x194) == *(iVar5 + 400)) && (*(iVar5 + 0x998) == 0)) {\n            return 0x1;\n        }\n        return NULL;\n    }\n    return NULL;\n}\n",
        "token_count": 971
    },
    "00455300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00455300(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x5a1b90 < 2)) || (*0x5a1b88 <= *0x54e6f8 + *0x54e6fc + 1)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 191
    },
    "00455780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00455780(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar12;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar7 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar7 = 0;\n                    while (iVar7 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar7;\n                        *(*0x20 + -0x100) = 0x455845;\n                        fcn.0044a140();\n                        in_RAX = *(*0x20 + -0xb0);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar11 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar11 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar11 << 3;\n                        uVar10 = piVar11 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar7 = 0x38;\n                            }\n                            else {\n                                iVar7 = 0x48;\n                            }\n                            arg1 = *(iVar7 + in_RAX + uVar10);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar7 = 0x38;\n                                }\n                                else {\n                                    iVar7 = 0x48;\n                                }\n                                uVar6 = *(*(iVar7 + in_RAX + uVar10) + 0x17) & 0x1f;\n                                arg1 = uVar6;\n                                cVar5 = uVar6;\n                                if ((cVar5 != '\\r') && (cVar5 != '\\x0e')) {\n                                    if (*0x53a358 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0x100) = 0x45597c;\n                                        fcn.00409aa0();\n                                        iVar7 = *0x5a1b28;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0xb8);\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x4559a5;\n                                        ppiVar3 = fcn.0040cba0(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar7 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x455b45;\n                                            fcn.00409cc0();\n                                            return *(*0x20 + -0xd8) * 5 + 0x45c6a0;\n                                        }\n                                        iVar7 = *0x5a1b28;\n                                        if (*0x5a1b28 == 0) {\n                                            *(*0x20 + -0x100) = 0x4559bf;\n                                            iVar7 = fcn.0040c700();\n                                            if (*0x5a1da0 != 0) {\n                                                *(*0x20 + -0x100) = 0x4559dd;\n                                                fcn.00459540(arg1, arg2, arg3, arg4);\n                                                iVar7 = *0x5a1b28;\n                                            }\n                                        }\n                                        *0x5a1b28 = iVar7;\n                                        bVar12 = *0x5a1b30 < 2000;\n                                        if (*0x5a1b30 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x455a0f;\n                                            iVar7 = fcn.00459c70();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            uVar8 = *(*0x20 + -0xb8);\n                                            *(*0x20 + -0x58) = uVar8;\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar12) {\n                                                *(*0x20 + -0xe0) = iVar7;\n                                                *(*0x20 + -200) = iVar7 * 5;\n                                                if (*0x5a1da0 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x455aaf;\n                                                    fcn.00459fda();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x455acc;\n                                                    fcn.0040f460(*0x20 + -0x58);\n                                                    uVar8 = *(*0x20 + -0xb8);\n                                                }\n                                                *(*0x20 + -0xa8) = uVar8;\n                                                *(*0x20 + -0xa0) = 0;\n                                                *(*0x20 + -0x100) = 0x455af3;\n                                                puVar4 = fcn.0040cde0(*0x20 + -0xa8);\n                                                *puVar4 = *(*0x20 + -0xe0);\n                                                *0x5a1b30 = *0x5a1b30 + 1;\n                                                *(*0x20 + -0x100) = 0x455b11;\n                                                fcn.00409cc0();\n                                                return *(*0x20 + -200) + 0x45c6a0;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x455b73;\n                                            fcn.004599e0(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x455b85;\n                                        fcn.00409cc0();\n                                        *(*0x20 + -0x100) = 0x455b96;\n                                        fcn.004317e0();\n                                    }\n                                    *(*0x20 + -0x100) = 0x455ba9;\n                                    fcn.00431040();\n                                }\n                                *(*0x20 + -0x100) = 0x455bbc;\n                                fcn.00431040();\n                            }\n                            *(*0x20 + -0x100) = 0x455bcf;\n                            fcn.00431040();\n                        }\n                        *(*0x20 + -0x100) = 0x455be5;\n                        fcn.00431040();\n                    }\n                    *(*0x20 + -0x100) = 0x455bed;\n                    fcn.00459aa0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x455bfa;\n                fcn.00459a20(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x4f0d38;\n            *(*0x20 + -0x100) = 0x455c0d;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        puVar9[0x18] = param_1;\n        *(puVar9 + -8) = 0x455c25;\n        fcn.00457320();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        param_1 = puVar9[0x18];\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2779
    },
    "00455c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00455c40(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    ulong uStack24;\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    if (*0x5a1b51 == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x54d540;\n        *(iVar2 + 0x2c8) = 3;\n        uStack24 = 0;\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.00402da0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ce60();\n    return;\n}\n",
        "token_count": 454
    },
    "00459140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00459140(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + 0x28);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.004563c0();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x4591a9;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + 0x28) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 392
    },
    "004593e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004593e0(ulong noname_0, ulong arg2)\n\n{\n    if (*0x5a226b == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00459420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.00459420(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x5a1b4f == '\\0') {\n        uVar1 = unaff_RBX ^ *0x5a1e00 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6, 0) ^ SUB168(auVar6 >> 0x40, 0);\n                    uVar4 = SUB168(auVar7, 0) ^ SUB168(auVar7 >> 0x40, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar3 ^ uVar1) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x5a2120, auVar5 ^ *0x5a2120);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4f1640));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4f1540);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x5a2130, auVar5 ^ *0x5a2130);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x5a2130, auVar5 ^ *0x5a2130);\n                auVar8 = aesenc(auVar5 ^ *0x5a2140, auVar5 ^ *0x5a2140);\n                auVar5 = aesenc(auVar5 ^ *0x5a2150, auVar5 ^ *0x5a2150);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x5a2130, auVar5 ^ *0x5a2130);\n                auVar8 = aesenc(auVar5 ^ *0x5a2140, auVar5 ^ *0x5a2140);\n                auVar9 = aesenc(auVar5 ^ *0x5a2150, auVar5 ^ *0x5a2150);\n                auVar10 = aesenc(auVar5 ^ *0x5a2160, auVar5 ^ *0x5a2160);\n                auVar11 = aesenc(auVar5 ^ *0x5a2170, auVar5 ^ *0x5a2170);\n                auVar12 = aesenc(auVar5 ^ *0x5a2180, auVar5 ^ *0x5a2180);\n                auVar5 = aesenc(auVar5 ^ *0x5a2190, auVar5 ^ *0x5a2190);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x5a2130, auVar5 ^ *0x5a2130);\n            auVar8 = aesenc(auVar5 ^ *0x5a2140, auVar5 ^ *0x5a2140);\n            auVar9 = aesenc(auVar5 ^ *0x5a2150, auVar5 ^ *0x5a2150);\n            auVar10 = aesenc(auVar5 ^ *0x5a2160, auVar5 ^ *0x5a2160);\n            auVar11 = aesenc(auVar5 ^ *0x5a2170, auVar5 ^ *0x5a2170);\n            auVar12 = aesenc(auVar5 ^ *0x5a2180, auVar5 ^ *0x5a2180);\n            auVar5 = aesenc(auVar5 ^ *0x5a2190, auVar5 ^ *0x5a2190);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3985
    },
    "004594a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.004594a0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5a1b4f != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x5a2120);\n        auVar1 = aesenc(auVar1, *0x5a2130);\n        auVar1 = aesenc(auVar1, *0x5a2140);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x5a1e00 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 299
    },
    "0045a040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045a040(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar auVar7 [16];\n    uchar in_YMM0 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        while( true ) {\n            if (unaff_RBX == 0) {\n                return;\n            }\n            if (unaff_RBX < 3) {\n                (*in_RAX)[0] = 0;\n                in_RAX[-1][unaff_RBX + 0x1f] = 0;\n                return;\n            }\n            if (unaff_RBX < 5) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n                return;\n            }\n            if (unaff_RBX < 8) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n                return;\n            }\n            if (unaff_RBX == 8) {\n                **in_RAX = 0;\n                return;\n            }\n            if (unaff_RBX < 0x11) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n                return;\n            }\n            if (unaff_RBX < 0x21) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x41) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x81) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x101) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[2] = in_XMM15_Da;\n                *(in_RAX[2] + 4) = in_XMM15_Db;\n                *(in_RAX[2] + 8) = in_XMM15_Dc;\n                *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[2] + 0x10) = in_XMM15_Da;\n                *(in_RAX[2] + 0x14) = in_XMM15_Db;\n                *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[3] = in_XMM15_Da;\n                *(in_RAX[3] + 4) = in_XMM15_Db;\n                *(in_RAX[3] + 8) = in_XMM15_Dc;\n                *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[3] + 0x10) = in_XMM15_Da;\n                *(in_RAX[3] + 0x14) = in_XMM15_Db;\n                *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            auVar7 = SUB3216(in_YMM0, 0);\n            if ((*0x5a2266 != '\\x01') || (unaff_RBX < 0x800)) break;\n            if (*0x5a2263 == '\\x01') {\n                auVar7 = vpxor_avx(auVar7, auVar7);\n                in_YMM0 = ZEXT1632(auVar7);\n                if (0x1ffffff < unaff_RBX) goto code_r0x0045a1e1;\n            }\n            uVar4 = unaff_RBX & 7;\n            for (uVar3 = unaff_RBX >> 3; unaff_RBX = uVar4,  uVar3 != 0; uVar3 = uVar3 - 1) {\n                **in_RAX = 0;\n                in_RAX = *in_RAX + 8;\n            }\n        }\n        if (*0x5a2263 == '\\x01') break;\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    auVar7 = vpxor_avx(auVar7, auVar7);\n    in_YMM0 = ZEXT1632(auVar7);\n    if (unaff_RBX < 0x2000000) {\n        do {\n            pauVar5 = in_RAX;\n            uVar3 = unaff_RBX;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            *pauVar5 = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[1] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[2] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[3] = auVar2;\n            unaff_RBX = uVar3 - 0x80;\n            in_RAX = pauVar5[4];\n        } while (0x7f < uVar3 - 0x80);\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-1] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-2] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-3] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-4] + uVar3) = auVar2;\n        vzeroupper_avx();\n        return;\n    }\ncode_r0x0045a1e1:\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *in_RAX = auVar2;\n    uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n    pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n    do {\n        pauVar6 = pauVar5;\n        uVar4 = uVar3;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        *pauVar6 = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[1] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[2] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[3] = auVar2;\n        uVar3 = uVar4 - 0x80;\n        pauVar5 = pauVar6[4];\n    } while (0x7f < uVar4 - 0x80);\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-1] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-2] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-3] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-4] + uVar4) = auVar2;\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5102
    },
    "0045a340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0045a340(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x5a1b4e & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x5a2266 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13221
    },
    "0045b2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b2e0(void)\n\n{\n    if (*0x5a1b52 == '\\0') {\n        return;\n    }\n    fcn.0042cea0();\n    return;\n}\n",
        "token_count": 47
    },
    "0045b340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.0045b340(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x5a1b52 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042cf20();\n    return iVar1;\n}\n",
        "token_count": 104
    },
    "0045b5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b5e0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x5a1da0 == 0) {\n                *0x54d5a8 = 0x45ad80;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42cd45;\n                fcn.00459660(arg1, 0x45ad80, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42cdb5;\n                    fcn.0042be80();\n                    *(puVar5 + -0x68) = 0x42cdba;\n                    fcn.004427e0();\n                    *(puVar5 + -0x68) = 0x42cdbf;\n                    fcn.00442880();\n                    *(puVar5 + -0x68) = 0x42cdc5;\n                    fcn.0042c980();\n                    *(puVar5 + -0x68) = 0x42cdcc;\n                    *0x5a1bb0 = fcn.0042c8c0();\n                    *(puVar5 + -0x68) = 0x42cdd7;\n                    fcn.0042ca40();\n                    *(puVar5 + -0x68) = 0x42cddc;\n                    *0x5a1b90 = fcn.0042c7a0();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42ce0e;\n                    fcn.0042eb20();\n                    *0x5a1cd8 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42ce4f;\n                    fcn.0042eba0();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x486209);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42cd94;\n                    uVar3 = fcn.00454900(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x5a20a0;\n                *(uVar4 + 0x5a20a0) = uVar3;\n                *0x5a1b64 = *0x5a1b64 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42ce77;\n            fcn.004599e0(100);\n        }\n        *(puVar6 + -8) = 0x42ce7d;\n        fcn.00457320();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1176
    },
    "0045b7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004350c4)\n\nvoid fcn.0045b7c0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar2 = **(in_GS_OFFSET + 0x28);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x18) = iVar2;\n            *0x54e6d8 = 10000;\n            iVar2 = 0x53f2c0;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x20) = iVar2;\n                *(puVar4 + -0x58) = 0x434f7a;\n                fcn.004486e0();\n                iVar2 = *(*(puVar4 + -0x20) + 0x220);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                param_2 = 0x5a21a0;\n                *(iVar2 * 0x40 + 0x5a21a8) = 0;\n                *(iVar2 * 0x40 + 0x5a21b0) = 0;\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                param_2 = 0x5a2a68;\n                *(iVar2 * 0x10 + 0x5a2a68) = 0;\n                *(iVar2 * 0x10 + 0x5a2a70) = 0;\n            }\n            *(puVar4 + -0x58) = 0x434feb;\n            fcn.0040a440();\n            *(puVar4 + -0x58) = 0x434ff0;\n            fcn.00434ee0();\n            *(puVar4 + -0x58) = 0x434ff5;\n            fcn.00402c40();\n            *(puVar4 + -0x58) = 0x43500a;\n            fcn.0042d300(8);\n            uVar1 = *(*(puVar4 + -0x18) + 0x30);\n            *(puVar4 + -0x58) = 0x435025;\n            fcn.00435320(uVar1);\n            *(puVar4 + -0x58) = 0x43502a;\n            fcn.00448460();\n            *(puVar4 + -0x58) = 0x43502f;\n            fcn.00453680();\n            *(puVar4 + -0x58) = 0x435034;\n            fcn.00409160();\n            *(puVar4 + -0x58) = 0x435039;\n            fcn.00446b80();\n            *(puVar4 + -0x58) = 0x435049;\n            fcn.0042d3a0();\n            *(puVar4 + -0x58) = 0x43504e;\n            fcn.00441120();\n            *(puVar4 + -0x58) = 0x435053;\n            fcn.004144a0();\n            *(puVar4 + -0x58) = 0x435065;\n            fcn.00409aa0();\n            *(puVar4 + -0x58) = 0x43506a;\n            fcn.0045b2e0();\n            iVar2 = **(in_GS_OFFSET + 0x28);\n            *0x54e6a8 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x5a1b90;\n            *(puVar4 + -0x58) = 0x4350a5;\n            fcn.00406960();\n            *(puVar4 + -0x58) = 0x4350aa;\n            fcn.00447e00();\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x4350d3;\n            iVar3 = fcn.0043d4e0();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x4350ea;\n                fcn.00409cc0();\n                if (1 < *0x5a1fe0) {\n                    *0x5a1da5 = 1;\n                    *0x5a1da0 = CONCAT31(*0x5a1da1, 1);\n                    *(puVar4 + -0x10) = *0x54dd10;\n                    *(puVar4 + -0x28) = *0x54dd18;\n                    iVar2 = 0;\n                    arg1 = *0x54dd10;\n                    param_2 = *0x54dd18;\n                    while (iVar2 < param_2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x4351c5;\n                        fcn.0042af80(arg1, iVar2 + 0x1268);\n                        arg1 = *(puVar4 + -0x10);\n                        param_2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x547328 == 0) {\n                    *0x547328 = 7;\n                    if (*0x5a1da0 == 0) {\n                        *0x547320 = 0x47f5f6;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x435166;\n                        fcn.00459540(arg1, param_2, param_3, param_4);\n                    }\n                }\n                if (*0x547368 == 1) {\n                    *0x547368 = 0;\n                    if (*0x5a1da0 == 0) {\n                        *0x547360 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x43519f;\n                        fcn.00459540(arg1, param_2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x4351f6;\n            fcn.004317e0();\n        }\n        *(puVar5 + -8) = 0x4351fc;\n        fcn.00457320();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1652
    },
    "0045b7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045b7e0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + 0x28);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.004366c0();\n    fcn.00436860();\n    return;\n}\n",
        "token_count": 200
    },
    "0045b8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00440f2c)\n// WARNING: Removing unreachable block (ram,0x00440f2e)\n// WARNING: Removing unreachable block (ram,0x00440f34)\n// WARNING: Removing unreachable block (ram,0x00440f4f)\n// WARNING: Removing unreachable block (ram,0x00440f55)\n// WARNING: Removing unreachable block (ram,0x00440f57)\n// WARNING: Removing unreachable block (ram,0x00440f5d)\n// WARNING: Removing unreachable block (ram,0x00440f70)\n// WARNING: Removing unreachable block (ram,0x00440f76)\n// WARNING: Removing unreachable block (ram,0x00440f8f)\n// WARNING: Removing unreachable block (ram,0x00440f91)\n// WARNING: Removing unreachable block (ram,0x00440f9d)\n// WARNING: Removing unreachable block (ram,0x00440fb7)\n// WARNING: Removing unreachable block (ram,0x00440fb9)\n// WARNING: Removing unreachable block (ram,0x00440fd8)\n// WARNING: Removing unreachable block (ram,0x00440fe2)\n// WARNING: Removing unreachable block (ram,0x00440ff3)\n// WARNING: Removing unreachable block (ram,0x00440f9a)\n// WARNING: Removing unreachable block (ram,0x00441005)\n// WARNING: Removing unreachable block (ram,0x00441016)\n// WARNING: Removing unreachable block (ram,0x00441027)\n// WARNING: Removing unreachable block (ram,0x00441038)\n// WARNING: Removing unreachable block (ram,0x00441049)\n\nvoid fcn.0045b8c0(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x44106b;\n                                                fcn.004317e0();\n                                            }\n                                            *(puVar8 + -0x48) = 0x44107c;\n                                            fcn.004317e0();\n                                        }\n                                        *(puVar8 + -0x48) = 0x44108d;\n                                        fcn.004317e0();\n                                    }\n                                    *(puVar8 + -0x48) = 0x44109e;\n                                    fcn.004317e0();\n                                }\n                                *(puVar8 + -0x48) = 0x4410af;\n                                fcn.004317e0();\n                            }\n                            *(puVar8 + -0x48) = 0x4410c5;\n                            fcn.004317e0();\n                        }\n                        *(puVar8 + -0x48) = 0x4410d6;\n                        fcn.004317e0();\n                    }\n                    *(puVar8 + -0x48) = 0x4410e7;\n                    fcn.004317e0();\n                }\n                *(puVar8 + -0x48) = 0x4410f8;\n                fcn.004317e0();\n            }\n            *(puVar8 + -0x48) = 0x441109;\n            fcn.004317e0();\n        }\n        *(puVar9 + -8) = 0x44110f;\n        fcn.00457320();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1672
    },
    "0045ba00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0045ba00(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + 0x28);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x130 && puVar16 + -0x130 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1b0;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x158) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b8) = 0x445f1b;\n                fcn.004330a0();\n                *(puVar16 + -0x1b8) = 0x445f2c;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445f36;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445f47;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445f54;\n                fcn.00433920();\n                *(puVar16 + -0x1b8) = 0x445f65;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445f72;\n                fcn.00433920();\n                *(puVar16 + -0x1b8) = 0x445f85;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445f92;\n                fcn.00433920();\n                *(puVar16 + -0x1b8) = 0x445fa5;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445fb2;\n                fcn.00433920();\n                *(puVar16 + -0x1b8) = 0x445fb7;\n                fcn.00433300();\n                *(puVar16 + -0x1b8) = 0x445fbc;\n                fcn.00433120();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b8) = 0x446025;\n                fcn.00451180(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b8) = 0x446036;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b8) = 0x446047;\n            fcn.004317e0();\n        }\n        *(puVar17 + -8) = 0x44604d;\n        fcn.00457320();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1b0) = puVar10 + 7;\n            *(puVar16 + -0x1b8) = 0x445574;\n            fcn.00457140();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x180) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b8) = 0x44562e;\n                fcn.004330a0();\n                *(puVar16 + -0x1b8) = 0x44563f;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445649;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x44565a;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445667;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445678;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445685;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445696;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x4456a5;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x4456b6;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x4456c5;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x4456d6;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x4456e5;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x4456f6;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445705;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445716;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445725;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445736;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445745;\n                fcn.00433800();\n                *(puVar16 + -0x1b8) = 0x445756;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x445765;\n                fcn.00433920();\n                *(puVar16 + -0x1b8) = 0x445776;\n                fcn.004339a0();\n                *(puVar16 + -0x1b8) = 0x44577b;\n                fcn.00433120();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x180);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00445822:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x168) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b8) = 0x44583a;\n                    iVar9 = fcn.004490a0(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x168);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x445854;\n                        iVar8 = fcn.00449ce0();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x168);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x53a380) && (uVar12 <= *0x53a378)) {\n                        *(puVar16 + -0x160) = uVar12;\n                        *(puVar16 + -0x1b8) = 0x4458c9;\n                        fcn.00435c80(8);\n                        *(puVar16 + -0x1b8) = 0x4458db;\n                        fcn.00445060();\n                        *(puVar16 + -0x1b8) = 0x4458f2;\n                        fcn.00435c80(2);\n                        *(puVar16 + -0x1b0) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b8) = 0x445907;\n                        fcn.00457140();\n                        return;\n                    }\n                    if (*0x53a378 <= *0x53a380) goto code_r0x00445a1b;\n                    *(puVar16 + -0x1b8) = 0x44593d;\n                    fcn.004330a0();\n                    *(puVar16 + -0x1b8) = 0x44594e;\n                    fcn.004339a0();\n                    *(puVar16 + -0x1b8) = 0x44595a;\n                    fcn.004336a0();\n                    *(puVar16 + -0x1b8) = 0x44596b;\n                    fcn.004339a0();\n                    *(puVar16 + -0x1b8) = 0x445970;\n                    fcn.00433120();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b8) = 0x445994;\n                        fcn.004330a0();\n                        *(puVar16 + -0x1b8) = 0x4459a5;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x4459af;\n                        fcn.00433800();\n                        *(puVar16 + -0x1b8) = 0x4459c5;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x4459d2;\n                        fcn.00433800();\n                        *(puVar16 + -0x1b8) = 0x4459e5;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x4459f2;\n                        fcn.00433800();\n                        *(puVar16 + -0x1b8) = 0x445a05;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x445a0a;\n                        fcn.00433120();\n                        *(puVar16 + -0x1b8) = 0x445a1b;\n                        fcn.004317e0();\ncode_r0x00445a1b:\n                        *(puVar16 + -0x1b8) = 0x445a25;\n                        fcn.004330a0();\n                        *(puVar16 + -0x1b8) = 0x445a36;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x445a45;\n                        fcn.004336a0();\n                        *(puVar16 + -0x1b8) = 0x445a56;\n                        fcn.004339a0();\n                        *(puVar16 + -0x1b8) = 0x445a5b;\n                        fcn.00433120();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b8) = 0x4457ea;\n                            fcn.00446100();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b8) = 0x44580d;\n                            fcn.0043aa20(puVar13);\n                        }\n                        *(puVar16 + -0x1b8) = 0x44581a;\n                        fcn.0043a9a0();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00445822;\n                    }\n                    *(puVar16 + -0x1b8) = 0x445a96;\n                    fcn.004317e0();\n                }\n                *(puVar16 + -0x1b8) = 0x445aa7;\n                puVar10 = fcn.004317e0();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x184) = *(puVar10 + 0x12);\n            *(puVar16 + -0x150) = puVar10[0x13];\n            *(puVar16 + -0x1b8) = 0x445ac5;\n            fcn.004330a0();\n            *(puVar16 + -0x1b8) = 0x445ad6;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445ae5;\n            fcn.00433920();\n            *(puVar16 + -0x1b8) = 0x445af6;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445b05;\n            fcn.004337a0();\n            *(puVar16 + -0x1b8) = 0x445b16;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445b25;\n            fcn.00433800();\n            *(puVar16 + -0x1b8) = 0x445b36;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445b3b;\n            fcn.00433120();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b8) = 0x445b53;\n            fcn.004330a0();\n            *(puVar16 + -0x1b8) = 0x445b65;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445b6f;\n            fcn.00433800();\n            *(puVar16 + -0x1b8) = 0x445b85;\n            fcn.004339a0();\n            *(puVar16 + -0x1b8) = 0x445b92;\n            fcn.00433800();\n            *(puVar16 + -0x1b8) = 0x445b97;\n            fcn.00433300();\n            *(puVar16 + -0x1b8) = 0x445b9c;\n            fcn.00433120();\n            *(puVar16 + -0x1b8) = 0x445bad;\n            fcn.004317e0();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b8) = 0x445bbe;\n        puVar10 = fcn.004317e0();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b8) = 0x445c12;\n    iVar9 = fcn.004490a0(uVar15);\n    if (iVar9 != 0) goto code_r0x00445e96;\n    uVar11 = 9;\n    uVar14 = 0x47f91f;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x170) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x178) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = puVar13[7];\n        *(puVar16 + -0x110) = *puVar13;\n        *(puVar16 + -0x118) = puVar13[1];\n        *(puVar16 + -0x120) = *(puVar16 + -0x70);\n        *(puVar16 + -0x128) = *(puVar16 + -0x78);\n        *(puVar16 + -0x130) = *(puVar16 + -0x50);\n        *(puVar16 + -0x138) = puVar13[8];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b8) = 0x445cb9;\n        fcn.004330a0();\n        *(puVar16 + -0x1b8) = 0x445cca;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445cdc;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445ced;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445cf7;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445d08;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445d15;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445d26;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445d33;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445d45;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445d52;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445d65;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445d72;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445d85;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445d92;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445da5;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445db2;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445dc5;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445dcf;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445de5;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445df2;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445e05;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445e0f;\n        fcn.00433800();\n        *(puVar16 + -0x1b8) = 0x445e25;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445e32;\n        fcn.00433920();\n        *(puVar16 + -0x1b8) = 0x445e45;\n        fcn.004339a0();\n        *(puVar16 + -0x1b8) = 0x445e4a;\n        fcn.00433120();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b8) = 0x445e85;\n        fcn.00451180(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b8) = 0x445e96;\n        iVar9 = fcn.004317e0();\ncode_r0x00445e96:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b8) = 0x445eab;\n        uVar11 = fcn.00449820();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x170) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b8) = 0x445ed1;\n        iVar9 = fcn.00448f20(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x170);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7076
    },
    "0045f280": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0045f280(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00455300();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.00455380();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00454fa0();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00455700();\n        }\n        fcn.00455600(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00455700();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00454fa0();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 793
    },
    "00466400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00466400(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x46643b;\n            uVar1 = fcn.00466ec0(arg1);\n            iVar3 = *0x54d500;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x00466456;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x00466456:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x46648a;\n                pcVar2 = fcn.0040e780(*(*0x20 + 8));\n                unaff_RBX = *0x54dca0;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x466512;\n                    uVar1 = fcn.0045bb00();\n                    goto code_r0x00466512;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x4664b7;\n                uVar1 = *0x54dca8;\n                fcn.00447020(*0x54dca8);\n                *(*0x20 + -0xa8) = 0x4664bc;\n                iVar3 = fcn.00466ec0(uVar1);\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x004664d6;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x004664d6:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x4664eb;\n                    uVar1 = fcn.0045baa0();\ncode_r0x00466512:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x466528;\n                        uVar1 = fcn.00467040();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x466545;\n                        uVar1 = fcn.0040bba0();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x466557;\n                        uVar1 = fcn.00409500();\n                        puVar5 = *(*0x20 + -0x18);\n                        *puVar5 = 0x4f0ee8;\n                        if (*0x5a1da0 == 0) {\n                            puVar5[1] = uVar1;\n                            arg1_00 = 0x4f0ee8;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x466587;\n                            fcn.00459540(puVar5, puVar5 + 1, in_R8, in_R9);\n                            arg1_00 = puVar5;\n                        }\n                        puVar5[3] = *(*0x20 + 0x10);\n                        if (*0x5a1da0 == 0) {\n                            uVar1 = *(*0x20 + 8);\n                            puVar5[2] = uVar1;\n                        }\n                        else {\n                            uVar1 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x4665c5;\n                            fcn.00459660(arg1_00, uVar1, in_R8, in_R9);\n                        }\n                        arg3 = 0x47efe4;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x4665f5;\n                        uVar4 = fcn.004471a0(0xf, uVar1, 0x47efe4, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x480aa9;\n                        if (*0x5a1da0 == 0) {\n                            *(iVar3 + 0x20) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x466619;\n                            fcn.00459540(iVar3, uVar1, arg3, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x466645;\n                    puVar5 = fcn.0040bba0();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar5[1] = uVar1;\n                    if (*0x5a1da0 == 0) {\n                        *puVar5 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x466677;\n                        puVar5 = fcn.00459660(uVar1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    puVar5[2] = *(*0x20 + -0x58);\n                    return puVar5;\n                }\n                *(*0x20 + -0xa8) = 0x4666b6;\n                fcn.004599e0(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0xa8) = 0x4666c5;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4666d5;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1699
    },
    "00466700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00466700(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    ulong *arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xb8) = 0x466749;\n            iVar1 = fcn.00466de0(arg1);\n            if (unaff_RDI != 0) {\n                iVar1 = 0;\n                goto code_r0x00466760;\n            }\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x00466760:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                arg1_00 = *(*0x20 + 8);\n                uVar2 = *(arg1_00 + 0x10);\n                *(*0x20 + -0xb8) = 0x466785;\n                uVar2 = fcn.0045bb40(arg1_00, uVar2);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0xb8) = 0x46679b;\n                    uVar2 = fcn.00467040();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar1;\n                    *(*0x20 + -0xb8) = 0x4667b1;\n                    uVar2 = fcn.0040bba0();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xb8) = 0x4667c5;\n                    uVar2 = fcn.00409500();\n                    puVar4 = *(*0x20 + -0x78);\n                    *puVar4 = 0x4f0ee8;\n                    if (*0x5a1da0 == 0) {\n                        puVar4[1] = uVar2;\n                        arg1_01 = 0x4f0ee8;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x4667f2;\n                        fcn.00459540(puVar4, puVar4 + 1, in_R8, in_R9);\n                        arg1_01 = puVar4;\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar4[3] = uVar2;\n                    if (*0x5a1da0 == 0) {\n                        uVar3 = *(*0x20 + 0x10);\n                        puVar4[2] = uVar3;\n                    }\n                    else {\n                        uVar3 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xb8) = 0x46682c;\n                        fcn.004596c0(arg1_01, uVar2, uVar3, in_R9);\n                    }\n                    *(*0x20 + -0xc0) = unaff_RBP;\n                    *(*0x20 + -0xb8) = 0x46684f;\n                    fcn.00459c6b();\n                    arg3 = 0x480a9a;\n                    *(*0x20 + -0x68) = 0x480a9a;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x480768;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x47efe4;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb8) = 0x4668ec;\n                    uVar3 = fcn.00446d80(6);\n                    iVar1 = *(*0x20 + -0x78);\n                    *(iVar1 + 0x28) = *0x20 + -0x68;\n                    if (*0x5a1da0 == 0) {\n                        *(iVar1 + 0x20) = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x46690d;\n                        fcn.00459540(iVar1, uVar2, arg3, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar2;\n                *(*0x20 + -0xb8) = 0x466937;\n                puVar4 = fcn.0040bba0();\n                if (*0x5a1da0 == 0) {\n                    *puVar4 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x46695f;\n                    puVar4 = fcn.00459660(arg1_00, *(*0x20 + 8), in_R8, in_R9);\n                }\n                puVar4[2] = *(*0x20 + 0x18);\n                if (*0x5a1da0 == 0) {\n                    puVar4[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x466993;\n                    puVar4 = fcn.00459660(arg1_00, *(*0x20 + 0x10), in_R8, in_R9);\n                }\n                puVar4[3] = *(*0x20 + -0x88);\n                return puVar4;\n            }\n            iVar1 = 0;\n            *(*0x20 + -0xb8) = 0x4669d2;\n            in_RAX = fcn.004599e0(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = iVar1;\n        *(puVar5 + -8) = 0x4669e7;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1807
    },
    "00466a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466a00(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045f280();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x466b60);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.00466400(in_RAX);\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00454e20(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 352
    },
    "00466bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00466bc0(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045f280();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x466d80);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.00466a00();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.00466700(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00454e20(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 392
    },
    "00411a80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00411a80(void)\n\n{\n    ulong in_RAX;\n    uint64_t arg1;\n    uint64_t uVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar1 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x28) = uVar1 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x50) = 0x411acb;\n            arg1 = fcn.0040bf00(0x5a4670);\n            uVar1 = *(*0x20 + -0x28);\n            if (uVar1 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar1) {\n                    *(*0x20 + -0x18) = arg1;\n                    *(*(*0x20 + -0x20) + arg1) = 0xa1;\n                    *(*0x20 + -0x50) = 0x411b05;\n                    fcn.00411b80(arg1);\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == -0x5f) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x50) = 0x411b33;\n                    fcn.004317e0();\n                    uVar1 = arg1;\n                }\n                *(*0x20 + -0x50) = 0x411b3b;\n                fcn.004599e0(uVar1);\n            }\n            *(*0x20 + -0x50) = 0x411b45;\n            in_RAX = fcn.00459a40(uVar1, 0x40000000);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x411b55;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 662
    },
    "0041ecc0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0041ecc0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint64_t in_R11;\n    \n    uVar5 = unaff_RBX + 0x800000000000;\n    uVar6 = uVar5 >> 0x16;\n    uVar3 = arg1 + 0x7fffffffe000;\n    uVar4 = uVar3 >> 0x16;\n    uVar2 = uVar6;\n    uVar8 = uVar3;\n    if (uVar4 == uVar6) {\n        uVar8 = in_RAX[1];\n        if (uVar5 >> 0x19 < in_RAX[2]) {\n            puVar7 = (uVar5 >> 0x19) + uVar8;\n            LOCK();\n            *puVar7 = *puVar7 | 1 << (uVar2 & 7);\n            uVar8 = uVar3;\n        }\n        else {\n            in_RAX = fcn.00459a00(in_RAX[2]);\n        }\n    }\n    else {\n        uVar5 = uVar5 >> 0x19;\n        uVar3 = uVar3 >> 0x19;\n        if (uVar5 == uVar3) {\n            uVar4 = (uVar4 - uVar6) + 1;\n            uVar9 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n            uVar10 = uVar9;\n            uVar9 = uVar9 - 1 << (uVar2 & 7);\n            uVar3 = uVar9;\n            uVar4 = in_RAX[2];\n            if (uVar4 <= uVar5) {\n                in_RAX = fcn.00459a00(uVar4);\n                goto code_r0x0041ee16;\n            }\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | uVar9;\n            goto code_r0x0041edd9;\n        }\n        uVar10 = uVar6 + 7 & 0xfffffffffffffff8;\n        uVar6 = uVar10 - uVar6;\n        if (uVar6 != 0) {\n            arg1_00 = in_RAX[2];\n            if (arg1_00 <= uVar5) goto code_r0x0041ee87;\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | (-(uVar6 < 0x20) & 1 << (uVar6 & 0x1f)) - 1 << (uVar2 & 7);\n        }\n        in_R11 = uVar4 & 0xfffffffffffffff8;\n        for (; uVar10 < in_R11; uVar10 = uVar10 + 8) {\n            arg1_00 = in_RAX[2];\n            uVar5 = in_RAX[1];\n            in_R9 = uVar10 >> 3;\n            if (arg1_00 <= in_R9) goto code_r0x0041ee7c;\ncode_r0x0041ee16:\n            *(in_R9 + uVar5) = 0xff;\n        }\n        uVar4 = (uVar4 - in_R11) + 1;\n        if (uVar4 != 0) {\n            arg1_00 = in_RAX[1];\n            if (in_RAX[2] <= uVar3) {\n                fcn.00459a00(in_RAX[2]);\ncode_r0x0041ee7c:\n                fcn.00459a00(arg1_00);\ncode_r0x0041ee87:\n                fcn.00459a00(arg1_00);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            LOCK();\n            *(arg1_00 + uVar3) = *(arg1_00 + uVar3) | (1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) - 1;\n        }\n    }\ncode_r0x0041edd9:\n    uVar4 = *in_RAX;\n    if (uVar4 < 0) {\n        uVar4 = -uVar4;\n    }\n    if (uVar4 < uVar8) {\n        *in_RAX = -uVar8;\n    }\n    return;\n}\n",
        "token_count": 1105
    },
    "004333a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043348b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004333a0(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.004339a0();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.004339a0();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x4f0c20) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x4f0bd8 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x4f0bd8)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x4f0bb0;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x4f0bd8)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x4f0bd0;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x4f0bd8;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x4f0bd8 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x4f0bd8;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x4f0bd8;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00433180(0xe);\n    return;\n}\n",
        "token_count": 1143
    },
    "00446b80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00446b80(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x446bcf;\n            fcn.00459c2b();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x479980;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x53f2c0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                    if ((*(iVar2 + 0x130) < 0x5a1d81) && (0x5a1d80 < *(iVar2 + 0x100))) goto code_r0x00446c36;\n                }\n                iVar2 = 0;\ncode_r0x00446c36:\n                if (iVar2 != 0) {\n                    *0x5a1d80 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x5a1d84 = *puVar1;\n                    *0x5a1d88 = puVar1[1];\n                    *0x5a1d8c = puVar1[4] - *(iVar2 + 0x128);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x446c90;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x140) = 0x446ca5;\n            fcn.004317e0();\n        }\n        *(puVar3 + -8) = 0x446cab;\n        fcn.00457320();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 586
    },
    "00447a80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00447a80(void)\n\n{\n    uint64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (0x7fff < in_RAX) {\n                if (in_RAX <= in_RAX + 0x2000) {\n                    in_RAX = in_RAX + 0x1fff & 0xffffffffffffe000;\n                }\n                goto code_r0x00447b59;\n            }\n            if (in_RAX < 0x3f9) {\n                uVar3 = in_RAX + 7 >> 3;\n                if (uVar3 < 0x81) {\n                    uVar3 = *(uVar3 + 0x53cf20);\n                    if (0x43 < uVar3) goto code_r0x00447bd7;\n                    in_RAX = *(uVar3 * 2 + 0x53d060);\ncode_r0x00447b59:\n                    *(*0x20 + -0x30) = in_RAX;\n                    *(*0x20 + -0x50) = 0x447b6a;\n                    uVar1 = fcn.0040b1e0(0);\n                    iVar4 = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    if (iVar4 != iVar2) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x50) = 0x447b90;\n                        fcn.0045a040(iVar2 - iVar4);\n                        uVar1 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x30);\n                        iVar4 = *(*0x20 + 8);\n                    }\n                    *(*0x20 + -0x20) = uVar1;\n                    *(*0x20 + -0x18) = iVar4;\n                    *(*0x20 + -0x10) = iVar2;\n                    return *(*0x20 + -0x20);\n                }\n            }\n            else {\n                uVar3 = in_RAX - 0x381 >> 7;\n                if (uVar3 < 0xf9) {\n                    if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        [uVar3] < 0x44) {\n                        in_RAX = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                   [uVar3] * 2 + 0x53d060);\n                        goto code_r0x00447b59;\n                    }\n                    *(*0x20 + -0x50) = 0x447bca;\n                    fcn.004599e0(0x44);\n                }\n                *(*0x20 + -0x50) = 0x447bd7;\n                fcn.00459a00(0xf9);\ncode_r0x00447bd7:\n                *(*0x20 + -0x50) = 0x447be5;\n                fcn.004599e0(0x44);\n            }\n            *(*0x20 + -0x50) = 0x447bf2;\n            in_RAX = fcn.00459a00(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x447bfd;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1084
    },
    "00447c20": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00447c20(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = in_XMM15;\n            if (in_RAX < 0x400000000001) {\n                *(*0x20 + 8) = in_RAX;\n                uVar1 = in_RAX * 4;\n                *(*0x20 + -0x30) = uVar1;\n                if (0x7fff < uVar1) {\n                    if (uVar1 <= uVar1 + 0x2000) {\n                        uVar1 = uVar1 + 0x1fff & 0xffffffffffffe000;\n                    }\n                    goto code_r0x00447d19;\n                }\n                if (uVar1 < 0x3f9) {\n                    uVar1 = uVar1 + 7 >> 3;\n                    if (uVar1 < 0x81) {\n                        uVar1 = *(uVar1 + 0x53cf20);\n                        if (0x43 < uVar1) goto code_r0x00447da5;\n                        uVar1 = *(uVar1 * 2 + 0x53d060);\ncode_r0x00447d19:\n                        *(*0x20 + -0x38) = uVar1;\n                        *(*0x20 + -0x58) = 0x447d2a;\n                        uVar2 = fcn.0040b1e0(0);\n                        uVar1 = *(*0x20 + -0x38);\n                        if (uVar1 != *(*0x20 + -0x30)) {\n                            *(*0x20 + -0x28) = uVar2;\n                            *(*0x20 + -0x58) = 0x447d55;\n                            fcn.0045a040(uVar1, *(*0x20 + 8));\n                            uVar2 = *(*0x20 + -0x28);\n                            uVar1 = *(*0x20 + -0x38);\n                        }\n                        *(*0x20 + -0x20) = uVar2;\n                        *(*0x20 + -0x18) = *(*0x20 + 8);\n                        *(*0x20 + -0x10) = uVar1 >> 2;\n                        return *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    uVar1 = uVar1 - 0x381 >> 7;\n                    if (uVar1 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar1] < 0x44) {\n                            uVar1 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar1] * 2 + 0x53d060);\n                            goto code_r0x00447d19;\n                        }\n                        *(*0x20 + -0x58) = 0x447d93;\n                        fcn.004599e0(0x44);\n                    }\n                    *(*0x20 + -0x58) = 0x447da5;\n                    fcn.00459a00(0xf9);\ncode_r0x00447da5:\n                    *(*0x20 + -0x58) = 0x447db2;\n                    fcn.004599e0(0x44);\n                }\n                *(*0x20 + -0x58) = 0x447dbf;\n                fcn.00459a00(0x81);\n            }\n            *(*0x20 + -0x58) = 0x447dd0;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x447ddb;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1144
    },
    "00449fa0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.00449fa0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x00449ff5;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x00449ff5:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x0044a048;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x0044a048:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.00459aa0(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.004599e0(unaff_RBX);\n                    }\n                    fcn.004599e0(0);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.00459aa0(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.004599e0(unaff_RBX);\n    }\n    fcn.004599e0(0);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1010
    },
    "0044e5a0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044e5a0(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = fcn.004490a0();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x27) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x44);\n            puVar4 = uVar1 + *(unaff_RBX + 0x130) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.00448f20(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 277
    },
    "00406960": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406960(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x54dd50 != NULL) {\n                if (*0x54dd58 == 0) {\n                    return 0;\n                }\n                iVar2 = 0;\n                piVar3 = *0x54dd50;\n                while( true ) {\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x004069ce:\n                    iVar2 = iVar2 + 1;\n                    if (*0x54dd58 <= iVar2) {\n                        return 0;\n                    }\n                    piVar3 = piVar3 + 2;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406a53;\n                        fcn.004599e0(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x004069ce;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x406a65;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x406a75;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 759
    },
    "0041f120": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f120(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x41f158;\n                iVar2 = fcn.004216a0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0041f20b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41f25b;\n                fcn.004599e0(0x3f);\ncode_r0x0041f25b:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x41f26c;\n                fcn.004317e0();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x41f1d9;\n                            iVar2 = fcn.004216a0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0041f20b;\n                    }\n                    goto code_r0x0041f25b;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x41f279;\n            in_RAX = fcn.004599e0(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41f28e;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1125
    },
    "0041f2c0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0041f2c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x41f305;\n            uVar3 = fcn.0041f2c0(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = unaff_RBX + arg1_00 * 0x20 + 0x20;\n                *(*0x20 + -0x50) = 0x41f365;\n                uVar3 = fcn.0041f2c0((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x41f3ac;\n            in_RAX = fcn.004599e0(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41f3c5;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 707
    },
    "0042a240": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0042a240(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x42a2a5;\n                arg1_00 = fcn.0042a020();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x0042a2ee:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x0042a32a;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x0042a32a:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x0042a454:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042a651;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42a54d;\n                                        piVar1 = fcn.0040bf00(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42a58e;\n                                                    fcn.0045a340(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x42a611;\n                                                        fcn.0045a340(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x0042a62b;\n                                                }\ncode_r0x0042a672:\n                                                *(*0x20 + -0x68) = 0x42a67a;\n                                                arg1_00 = arg1_01;\n                                                fcn.00459aa0(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x42a685;\n                                            fcn.00459a60(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42a68d;\n                                        fcn.00459a60(arg1_00, arg2);\ncode_r0x0042a68d:\n                                        *(*0x20 + -0x68) = 0x42a698;\n                                        fcn.00459aa0(arg1_01);\ncode_r0x0042a698:\n                                        *(*0x20 + -0x68) = 0x42a6a5;\n                                        fcn.00459aa0(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x0042a698;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042a68d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x42a505;\n                                            fcn.0045a340(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x0042a62b:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x42a672;\n                                            fcn.004599e0(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x0042a672;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x0042a651;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42a6ad;\n                                    fcn.00459a60(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x42a6b5;\n                                fcn.004599e0(ppiVar2);\n                                goto code_r0x0042a6b5;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x0042a6d2;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042a6ca;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042a6bf;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42a3de;\n                                    fcn.0045a340(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] + -1;\n                                if (arg2 < ppiVar2) goto code_r0x0042a6ba;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x0042a651:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x0042a454;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x0042a651;\n                            }\ncode_r0x0042a6b5:\n                            *(*0x20 + -0x68) = 0x42a6ba;\n                            fcn.004599e0(ppiVar2);\ncode_r0x0042a6ba:\n                            *(*0x20 + -0x68) = 0x42a6bf;\n                            fcn.00459a60(ppiVar2, arg2);\ncode_r0x0042a6bf:\n                            *(*0x20 + -0x68) = 0x42a6ca;\n                            ppiVar2 = unaff_R13;\n                            fcn.00459aa0(unaff_R13);\ncode_r0x0042a6ca:\n                            *(*0x20 + -0x68) = 0x42a6d2;\n                            fcn.00459aa0(ppiVar2);\ncode_r0x0042a6d2:\n                            *(*0x20 + -0x68) = 0x42a6d7;\n                            fcn.004599e0(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42a6df;\n                        fcn.004599e0(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x42a6e5;\n                    fcn.004599e0(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x0042a2ee;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x42a6ed;\n                fcn.004599e0(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x42a6f2;\n            fcn.004330a0();\n            *(*0x20 + -0x68) = 0x42a705;\n            fcn.004339a0();\n            *(*0x20 + -0x68) = 0x42a70f;\n            fcn.00433800();\n            *(*0x20 + -0x68) = 0x42a725;\n            fcn.004339a0();\n            *(*0x20 + -0x68) = 0x42a72f;\n            fcn.00433800();\n            *(*0x20 + -0x68) = 0x42a745;\n            fcn.004339a0();\n            *(*0x20 + -0x68) = 0x42a74a;\n            fcn.00433120();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42a75b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x42a770;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3779
    },
    "0043f900": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0043f900(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x22a0) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2280;\n            *(*0x20 + -0x28) = 0x43f945;\n            fcn.00409aa0();\n            if ((*(*0x20 + 8))[0x8a8] != 0) goto code_r0x0043f9a1;\n            iVar2 = **(*0x20 + 8);\n            iVar5 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar4 = iVar2 + iVar5 * -0x20;\n            if (-1 < uVar4) {\n                if (iVar5 < *0x54ddd8) {\n                    puVar1 = *0x54ddd0 + iVar5 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar4 & 0x1f) & -(uVar4 < 0x20));\ncode_r0x0043f9a1:\n                    *(*0x20 + -0x28) = 0x43f9ab;\n                    fcn.00409cc0();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43f9c7;\n                fcn.004599e0(*0x54ddd8);\n            }\n            *(*0x20 + -0x28) = 0x43f9cc;\n            in_RAX = fcn.0042fda0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x43f9d7;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 618
    },
    "0043fa00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.0043fa00(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                if (unaff_RBX == 0) {\n                    *(*0x20 + -0x28) = 0x43fa59;\n                    fcn.0045b2e0();\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = 0x43fa85;\n                fcn.0043f900();\n                piVar3 = *(*0x20 + 8);\n                iVar2 = *piVar3;\n                iVar5 = ((iVar2 >> 0x1f) >> 0x1b) + iVar2 >> 5;\n                uVar6 = iVar2 + iVar5 * -0x20;\n                if (-1 < uVar6) {\n                    arg1 = *0x54dd98;\n                    if (iVar5 < *0x54dd98) {\n                        puVar1 = *0x54dd90 + iVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar3 + 2) = *0x54e6f0;\n                        LOCK();\n                        *0x54e6f8 = *0x54e6f8 + 1;\n                        *0x54e6f0 = piVar3;\n                        if (*(piVar3 + 0x48a) >> 0x3d == 0) {\n                            *(piVar3 + 0x48a) = *(*0x20 + -0x10) & 0x1fffffffffffffff | 0x8000000000000000;\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x43fb4d;\n                        arg1 = fcn.004317e0();\n                    }\n                    *(*0x20 + -0x28) = 0x43fb58;\n                    fcn.004599e0(arg1);\n                }\n                *(*0x20 + -0x28) = 0x43fb5d;\n                fcn.0042fda0();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x28) = 0x43fb6e;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x43fb7e;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 938
    },
    "0043fba0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0043fba0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e6f0 == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = *0x54e6f0;\n            piVar3 = *0x54e6f0;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x38) = 0x43fbd9;\n                fcn.0045b2e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                in_RAX = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x10);\n            }\n            iVar2 = *piVar3;\n            iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n            uVar5 = iVar2 + iVar6 * -0x20;\n            if (-1 < uVar5) {\n                arg1 = *0x54ddd8;\n                if (iVar6 < *0x54ddd8) {\n                    puVar1 = *0x54ddd0 + iVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n                    arg1 = *0x54dd98;\n                    iVar2 = *piVar3;\n                    iVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                    uVar5 = iVar2 + iVar6 * -0x20;\n                    if (-1 < uVar5) {\n                        if (iVar6 < *0x54dd98) {\n                            *(*0x20 + -0x18) = in_RAX;\n                            puVar1 = *0x54dd90 + iVar6 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                            *0x54e6f0 = *(piVar3 + 2);\n                            LOCK();\n                            *0x54e6f8 = *0x54e6f8 + -1;\n                            *(*0x20 + -0x38) = 0x43fce9;\n                            fcn.00417e40(in_RAX);\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x38) = 0x43fd0e;\n                        fcn.004599e0(*0x54dd98);\n                    }\n                    *(*0x20 + -0x38) = 0x43fd13;\n                    fcn.0042fda0();\n                }\n                *(*0x20 + -0x38) = 0x43fd1e;\n                fcn.004599e0(arg1);\n            }\n            *(*0x20 + -0x38) = 0x43fd25;\n            in_RAX = fcn.0042fda0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x43fd30;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 942
    },
    "00403d20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00403d20(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403580(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.004317e0();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 389
    },
    "00408240": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00408240(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x408276;\n            fcn.004490a0();\n            *(*0x20 + -0x130) = 0x40827b;\n            uVar1 = fcn.00449820();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x40829b;\n            fcn.00402700(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1 = iVar4 + 2;\n                    uVar6 = param_2 < arg1;\n                    if (arg1 < param_2) goto code_r0x004082fb;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x4082f6;\n                        fcn.00447020(0x31);\n                        *(*0x20 + -0x130) = 0x4082fb;\n                        uVar2 = fcn.004317e0();\ncode_r0x004082fb:\n                        if (uVar6) goto code_r0x0040858d;\n                        if (arg1 < uVar2) goto code_r0x00408585;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x40837e;\n                    fcn.00402700(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + 0x28);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x004083da;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            uVar2 = 0x2e;\n                            *(*0x20 + -0x130) = 0x4083d5;\n                            fcn.00447020(0x2e);\n                            *(*0x20 + -0x130) = 0x4083da;\n                            fcn.004317e0();\ncode_r0x004083da:\n                            if (!uVar6 && !uVar7) goto code_r0x00408552;\n                            if (arg1 < uVar2) goto code_r0x00408547;\n                        } while (*(*(*0x20 + -0xa0) + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x40842f;\n                        iVar4 = fcn.00459c59();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x4806fc;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x47efbd;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = uVar2;\n                        *(*0x20 + -0x58) = 0x47efbd;\n                        *(*0x20 + -0x50) = 1;\n                        *(*0x20 + -0x48) = (-((*(*0x20 + -0xf0) - uVar2) + -4) >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = (*(*0x20 + -0xf0) - uVar2) + -4;\n                        *(*0x20 + -0x38) = 0x4815f3;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = uVar2;\n                        param_2 = 0x47f65c;\n                        *(*0x20 + -0x18) = 0x47f65c;\n                        *(*0x20 + -0x10) = 8;\n                        *(*0x20 + -0x130) = 0x408533;\n                        fcn.00446d80(9);\n                        *(*0x20 + -0x130) = 0x408538;\n                        fcn.00409580();\n                        *(*0x20 + -0x130) = 0x408547;\n                        fcn.00431040();\ncode_r0x00408547:\n                        *(*0x20 + -0x130) = 0x408552;\n                        fcn.00459aa0(arg1);\ncode_r0x00408552:\n                        *(*0x20 + -0x130) = 0x40855a;\n                        fcn.00459a20(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x40857d;\n                    fcn.00447020(0x13);\n                    *(*0x20 + -0x130) = 0x408585;\n                    fcn.004317e0();\ncode_r0x00408585:\n                    *(*0x20 + -0x130) = 0x40858d;\n                    fcn.00459aa0(arg1);\ncode_r0x0040858d:\n                    *(*0x20 + -0x130) = 0x408595;\n                    uVar2 = fcn.00459a20(arg1, param_2);\n                }\n                *(*0x20 + -0x130) = 0x40859d;\n                fcn.00459a20(uVar2, param_2);\n            }\n            unaff_RBX = 0x4818d8;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x4085c5;\n            fcn.00447020(0x13);\n            *(*0x20 + -0x130) = 0x4085ca;\n            fcn.004317e0();\n        }\n        *(puVar5 + -8) = 0x4085d0;\n        fcn.00457320();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2071
    },
    "0040f7c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0040f7c0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + iVar4 + 1;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x40f8c5;\n                            fcn.0040f7a0();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x40f825;\n                    fcn.0040f7a0();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x40f907;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40f912;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1005
    },
    "00412780": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00412780(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar4 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar4 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar4 << 0xd;\n                *(*0x20 + -0x50) = 0x4127e5;\n                fcn.00420dc0();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x50) = 0x412805;\n                iVar2 = fcn.004228a0();\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x50) = 0x41281f;\n                    iVar2 = fcn.0042ae00();\n                    LOCK();\n                    *(iVar2 + 0x38) = *(iVar2 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar2 + 0x40;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x50) = 0x412845;\n                    fcn.0042aee0(iVar2);\n                    LOCK();\n                    *0x5a25c8 = *0x5a25c8 + *(*0x20 + -0x10);\n                    *(*0x20 + -0x50) = 0x412872;\n                    fcn.0041c980(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x50) = 0x4128c5;\n                        fcn.0042a7a0(*(*0x20 + -0x21) * 0xc0 + 0x5742b0, (*0x573f58 >> 1 & 1) * 5);\n                        iVar2 = *(*0x20 + -0x20);\n                        *(iVar2 + 0x70) = *(iVar2 + 0x18) + *(*0x20 + 0x10);\n                        uVar4 = *(iVar2 + 0x18) + 0x800000000000;\n                        uVar3 = uVar4 >> 0x2a;\n                        if (uVar3 < 0x40) {\n                            uVar4 = uVar4 >> 0x16;\n                            if (*(*(uVar3 * 8 + 0x573fb0) + (uVar4 & 0xfffff) * 8) == 0) {\n                                uVar4 = 0;\n                            }\n                            *(*0x20 + -0x50) = 0x41295f;\n                            fcn.00410940(uVar4 & 0xffffffff);\n                            return *(*0x20 + -0x20);\n                        }\n                        *(*0x20 + -0x50) = 0x412978;\n                        fcn.00459a00(0x40);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x50) = 0x412985;\n                    fcn.004599e0(0x88);\n                }\n                *(*0x20 + -0x50) = 0x412996;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x50) = 0x4129a7;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x4129bb;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1211
    },
    "0041a880": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041a880(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.0040fb60(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.0041eea0(0);\n                        }\n                    }\n                    else {\n                        fcn.0041b040(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "0041dfe0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041dfe0(code **arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint64_t uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uStack64 = 0;\n    while( true ) {\n        if (unaff_RBX <= uStack64) {\n            return uStack64;\n        }\n        iVar2 = fcn.0041eb40(in_RAX + 0x100c0);\n        if (iVar2 == 0) break;\n        auStack56 = CONCAT88(in_RAX, 0x41e120);\n        auStack40 = CONCAT88(unaff_RBX, iVar2);\n        auStack24 = CONCAT88(&uStack64, unaff_RBX);\n        fcn.004571e0();\n        if (arg1 == NULL) {\n            cVar1 = '\\0';\n        }\n        else {\n            cVar1 = (**arg1)();\n        }\n        if (cVar1 != '\\0') {\n            return uStack64;\n        }\n    }\n    return uStack64;\n}\n",
        "token_count": 324
    },
    "0041e800": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e800(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar4 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar4 = -arg1 & (arg1 + unaff_RDI) - 1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar4;\n                    uVar4 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar4;\n                        bVar9 = uVar4 < 0;\n                        if (bVar9) break;\n                        if (7 < uVar4) goto code_r0x0041ea88;\n                        uVar3 = *(in_RAX + uVar4 * 8);\n                        uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n                        *(*0x20 + -0x50) = 0x41e8b0;\n                        iVar2 = fcn.0041e640(uVar3 | uVar4, arg1);\n                        if (iVar2 != -1) {\n                            bVar9 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar4 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar4 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar9) {\n                        return 0;\n                    }\n                    if (uVar4 < 8) break;\n                    *(*0x20 + -0x50) = 0x41ea88;\n                    fcn.004599e0(8);\ncode_r0x0041ea88:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x41ea95;\n                    fcn.004599e0(8);\n                }\n                *(*0x20 + -0x50) = 0x41ea9a;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x41eaab;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x41eab5;\n                fcn.004336a0();\n                *(*0x20 + -0x50) = 0x41eaba;\n                fcn.00433300();\n                *(*0x20 + -0x50) = 0x41eabf;\n                fcn.00433120();\n                *(*0x20 + -0x50) = 0x41ead0;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x50) = 0x41ead5;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x41eae6;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x41eaf0;\n            fcn.004336a0();\n            *(*0x20 + -0x50) = 0x41eaf5;\n            fcn.00433300();\n            *(*0x20 + -0x50) = 0x41eafa;\n            fcn.00433120();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x41eb0b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41eb25;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    uVar3 = *(in_RAX + uVar4 * 8);\n    uVar4 = *(in_RAX + 0x40 + uVar4 * 8);\n    *(*0x20 + -0x50) = 0x41e8fe;\n    uVar4 = fcn.0041e640(uVar3 | uVar4, arg1);\n    uVar3 = ~uVar4;\n    iVar2 = 0x3f;\n    if (uVar3 != 0) {\n        for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n        }\n    }\n    if (uVar3 == 0) {\n        iVar2 = -1;\n    }\n    iVar1 = *(*0x20 + -0x28);\n    uVar3 = iVar2 + iVar1 * 0x40 + 1;\n    iVar7 = iVar2 + iVar1 * 0x40 + 1;\n    uVar4 = uVar4 << (-(iVar2 + '\\x01') & 0x3fU) & -(-(iVar2 + -0x3f) < 0x40);\n    if (uVar4 == 0) {\n        *(*0x20 + -0x20) = uVar3;\n        *(*0x20 + -0x18) = iVar7;\n        uVar4 = iVar2 + 1;\n        while (-1 < iVar1 + -1) {\n            *(*0x20 + -0x30) = iVar1 + -1;\n            *(*0x20 + -0x38) = uVar4;\n            *(*0x20 + -0x50) = 0x41e9cf;\n            uVar3 = fcn.0041e640();\n            iVar2 = 0x3f;\n            if (uVar3 != 0) {\n                for (; uVar3 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                }\n            }\n            if (uVar3 == 0) {\n                iVar2 = -1;\n            }\n            uVar4 = (*(*0x20 + -0x38) - (iVar2 + 1)) + 0x40;\n            if (uVar3 != 0) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar7 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x20);\n            iVar1 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar2 = 0x3f;\n        if (uVar4 != 0) {\n            for (; uVar4 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        if (uVar4 == 0) {\n            iVar2 = -1;\n        }\n        uVar4 = -(iVar2 + -0x3f);\n    }\n    uVar8 = uVar4;\n    if (*(*0x20 + -0x10) < uVar4) {\n        uVar8 = *(*0x20 + -0x10);\n    }\n    uVar8 = iVar7 - uVar8;\n    if ((((0x2000 < *0x5a1cd0) && (*0x5a1cd8 < *0x5a1cd0)) &&\n        (uVar6 = -(*0x5a1cd0 >> 0xd),  ((uVar8 + (*0x5a1cd0 >> 0xd)) - 1 & uVar6) <= uVar3)) &&\n       (uVar6 = uVar6 & uVar8,  iVar7 - uVar4 <= uVar6)) {\n        uVar8 = uVar6;\n    }\n    return uVar8;\n}\n",
        "token_count": 2111
    },
    "00424b00": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00424b00(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + unaff_RBX + 0x3fffff & 0xffffffffffc00000;\n            *(*0x20 + -0x40) = uVar3;\n            *(*0x20 + -0x48) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x70) = 0x424b54;\n            fcn.00426ea0(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x48);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x18) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x20) = uVar3;\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x28) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x70) = 0x424bc5;\n            fcn.00429e00();\n            *(*0x20 + -0x70) = 0x424be5;\n            fcn.0042a240(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x18) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x48);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x48);\n            }\n            uVar3 = *(*0x20 + -0x28);\n            uVar5 = *(*0x20 + -0x20);\ncode_r0x00424c69:\n            if (uVar3 <= uVar5) {\n                *(*0x20 + -0x70) = 0x424cfe;\n                fcn.00424d60(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar3 = uVar5 >> 0xd;\n            if (0x1fff < uVar3) goto code_r0x00424d19;\n            *(*0x20 + -0x30) = uVar5;\n            if (*(iVar2 + 0x78 + uVar3 * 8) != 0) {\ncode_r0x00424c27:\n                *(*0x20 + -0x70) = 0x424c4f;\n                fcn.00427e40(0x200);\n                uVar5 = *(*0x20 + -0x30) + 1;\n                uVar3 = *(*0x20 + -0x28);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x48);\n                goto code_r0x00424c69;\n            }\n            *(*0x20 + -0x38) = uVar3;\n            *(*0x20 + -0x10) = iVar2 + uVar3 * 8 + 0x78;\n            *(*0x20 + -0x70) = 0x424cc5;\n            iVar2 = fcn.00413640();\n            if (iVar2 != 0) {\n                **(*0x20 + -0x10) = iVar2;\n                goto code_r0x00424c27;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x70) = 0x424d19;\n            fcn.004317e0();\ncode_r0x00424d19:\n            arg1 = 0x2000;\n            *(*0x20 + -0x70) = 0x424d26;\n            in_RAX = fcn.00459a00(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x424d3b;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "00425340": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00425340(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = unaff_RBX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            uVar11 = uVar10 >> 0x16;\n            uVar8 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar9 = uVar8 >> 0x16;\n            unaff_RBX = (uVar2 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar6 = ((uVar2 + arg1 * 0x2000) - 1 & 0x3fffff) >> 0xd;\n            if (uVar9 == uVar11) {\n                if (0x1fff < uVar10 >> 0x23) {\n                    *(*0x20 + -0x88) = 0x425538;\n                    fcn.00459a00(0x2000);\n                    goto code_r0x00425538;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar11 & 0x1fff) << 7;\n                iVar4 = (uVar6 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar4;\n                *(*0x20 + -0x88) = 0x4254c6;\n                uVar3 = fcn.00428060(iVar4);\n                *(*0x20 + -0x50) = uVar3;\n                *(*0x20 + -0x88) = 0x4254ea;\n                fcn.00428780(*(*0x20 + -0x48));\n                iVar4 = *(*0x20 + -0x50);\ncode_r0x004254ef:\n                *(*0x20 + -0x60) = iVar4;\n                *(*0x20 + -0x88) = 0x425518;\n                fcn.00424d60(*(*0x20 + 0x18));\n                return *(*0x20 + -0x60) << 0xd;\n            }\n            if (uVar10 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar9;\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0x30) = uVar11;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar11 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x88) = 0x42543b;\n                uVar3 = fcn.00428060(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar3;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x88) = 0x42545f;\n                fcn.00428780(*(*0x20 + -0x48));\n                iVar1 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x20);\n                iVar4 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar1 + 1;\n                    *(*0x20 + -0x60) = iVar4;\n                    if (uVar6 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x88) = 0x425672;\n                            iVar5 = fcn.00459a00(0x2000);\n                            goto code_r0x00425672;\n                        }\n                        *(*0x20 + -0x10) = *(iVar5 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x40) = (uVar6 & 0x1fff) << 7;\n                        *(*0x20 + -0x48) = *(*0x20 + -0x38) + 1;\n                        *(*0x20 + -0x88) = 0x425634;\n                        uVar3 = fcn.00428060(*(*0x20 + -0x38) + 1);\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x88) = 0x425655;\n                        fcn.00428780(*(*0x20 + -0x48));\n                        iVar4 = *(*0x20 + -0x60) + *(*0x20 + -0x50);\n                        goto code_r0x004254ef;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x58) = in_RDX;\n                    *(*0x20 + -0x10) = *(iVar5 + 0x78 + (in_RDX >> 0xd) * 8);\n                    *(*0x20 + -0x40) = (in_RDX & 0x1fff) << 7;\n                    *(*0x20 + -0x88) = 0x4255cd;\n                    iVar4 = fcn.00428060(0x200);\n                    in_RDX = *(*0x20 + -0x60) + iVar4;\n                    iVar4 = *(*0x20 + -0x10) + *(*0x20 + -0x40);\n                    for (iVar5 = 0; iVar5 < 8; iVar5 = iVar5 + 1) {\ncode_r0x00425672:\n                        *(iVar4 + iVar5 * 8) = 0xffffffffffffffff;\n                    }\ncode_r0x00425538:\n                    *(*0x20 + -0x60) = in_RDX;\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x88) = 0x425550;\n                    fcn.0045a040();\n                    iVar1 = *(*0x20 + -0x58);\n                    iVar5 = *(*0x20 + 8);\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x60);\n                }\n                *(*0x20 + -0x88) = 0x425695;\n                fcn.00459a00(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x88) = 0x4256a5;\n            in_RAX = fcn.00459a00(0x2000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4256ba;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2026
    },
    "00427b60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00427b60(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = *(in_RAX + 0x10078);\n            uVar3 = iVar9 + 0x800000000000;\n            uVar6 = uVar3 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            arg1 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < arg1) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = *(iVar2 + uVar6 * 8);\n                if (arg1 == 0) {\n                    *(*0x20 + -0x68) = 0x427bda;\n                    uVar6 = fcn.004257c0();\n                    if (uVar6 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x53a370;\n                        return 0;\n                    }\n                    arg1 = uVar6 + 0x800000000000;\n                    if (arg1 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (arg1 >> 0x23) * 8);\n                        arg1 = (arg1 >> 0x16 & 0x1fff) * 0x80;\n                        iVar9 = iVar2 + arg1;\n                        uVar3 = (uVar6 & 0x3fffff) >> 0x13;\n                        if (uVar3 < 8) {\n                            uVar8 = *(iVar2 + arg1 + uVar3 * 8);\n                            uVar6 = uVar6 & 0xfffffffffff80000;\n                            uVar3 = *(iVar2 + arg1 + 0x40 + uVar3 * 8);\ncode_r0x00427d4c:\n                            uVar8 = ~uVar8;\n                            uVar4 = (uVar6 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar3;\n                                *(*0x20 + -0x38) = uVar8;\n                                *(*0x20 + -0x30) = uVar6;\n                                puVar1 = iVar9 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar8;\n                                puVar1 = iVar9 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar8 & uVar3);\n                                *(*0x20 + -0x68) = 0x427d94;\n                                fcn.00424d60(0x40);\n                                iVar9 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar9 + 0x7e000;\n                                return iVar9;\n                            }\n                            *(*0x20 + -0x68) = 0x427ddc;\n                            fcn.00459a00(8);\ncode_r0x00427ddc:\n                            *(*0x20 + -0x68) = 0x427de6;\n                            fcn.00459a00(8);\n                            uVar3 = arg1;\n                            goto code_r0x00427de6;\n                        }\n                        goto code_r0x00427e05;\n                    }\n                }\n                else {\n                    uVar3 = uVar3 >> 0x23;\n                    if (uVar3 < 0x2000) {\n                        *(*0x20 + -0x20) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar3 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x28) = iVar7;\n                        uVar3 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0x68) = 0x427cdf;\n                        arg1 = fcn.00428480((iVar9 & 0x3fffff) >> 0xd);\n                        iVar9 = *(*0x20 + -0x10) + *(*0x20 + -0x28);\n                        if (arg1 != 0xffffffffffffffff) {\n                            uVar3 = arg1 >> 6;\n                            if (uVar3 < 8) {\n                                uVar6 = ((arg1 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x20) * 0x400000) -\n                                        0x800000000000;\n                                uVar8 = *(*(*0x20 + -0x18) + uVar3 * 8);\n                                arg1 = *(*0x20 + -0x10) + *(*0x20 + -0x28) + 0x40;\n                                uVar3 = *(arg1 + uVar3 * 8);\n                                goto code_r0x00427d4c;\n                            }\n                            goto code_r0x00427ddc;\n                        }\ncode_r0x00427de6:\n                        *(*0x20 + -0x68) = 0x427df7;\n                        fcn.004317e0();\n                        arg1 = uVar3;\n                    }\n                    *(*0x20 + -0x68) = 0x427e05;\n                    fcn.00459a00(0x2000);\ncode_r0x00427e05:\n                    *(*0x20 + -0x68) = 0x427e0f;\n                    fcn.00459a00(8);\n                }\n                *(*0x20 + -0x68) = 0x427e1c;\n                fcn.00459a00(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x427e27;\n            in_RAX = fcn.00459a00(arg1);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x427e32;\n        fcn.0045ba20();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1662
    },
    "00428640": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00428640(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = arg1 * 0x40 + iVar2 + 1;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = arg1 * 0x40 + iVar2 + 1;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "0042c600": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042c600(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = fcn.0042bc60(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042bba0(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x474f40;\n            uStack16 = 0x4dc468;\n            fcn.00455780(1);\n            fcn.0042ec20();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0042dac0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042dac0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42db25;\n                fcn.0042ed20();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x42db57;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42db71;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 560
    },
    "0042f060": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042f060(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042eda0();\n    *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 127
    },
    "00431c80": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00431c80(void)\n\n{\n    fcn.004571e0();\n    fcn.004571e0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "004339a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004339a0(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00433180(unaff_RBX);\n    return;\n}\n",
        "token_count": 91
    },
    "00447020": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00447020(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00446d80(2);\n    return;\n}\n",
        "token_count": 85
    },
    "004479e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.004479e0(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = fcn.0040b1e0(0);\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "0044d7e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.0044d7e0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    code *pcVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = 0x44d825;\n            uVar1 = fcn.00459420(arg1 << 3);\n            uVar4 = uVar1 & 0x1fff;\n            unaff_RDI = *(*(*0x20 + 8) + 0x20 + uVar4 * 8);\n            uVar9 = *(*0x20 + 8) + uVar4 * 8 + 0x20;\n            arg1_00 = *(*0x20 + 0x18);\n            iVar10 = *(*0x20 + 0x10);\n            while( true ) {\n                if (unaff_RDI == NULL) {\n                    iVar6 = 0;\n                    arg1_00 = uVar9;\n                    goto code_r0x0044d897;\n                }\n                if ((unaff_RDI[1] == uVar1) && (unaff_RBX = unaff_RDI[3],  arg1_00 == unaff_RBX)) break;\ncode_r0x0044d859:\n                unaff_RDI = *unaff_RDI;\n            }\n            if (unaff_RBX < 0x81) {\n                in_R10 = 0;\n                do {\n                    if (in_R10 < unaff_RBX) {\n                        if (*(iVar10 + in_R10 * 8) != unaff_RDI[in_R10 + 4]) goto code_r0x0044d859;\n                    }\n                    else {\n                        iVar6 = *(unaff_RDI + 2);\n                        arg1_00 = uVar9;\ncode_r0x0044d897:\n                        if (iVar6 != 0) {\n                            return iVar6;\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0x10) = arg1_00;\n                        *(*0x20 + -0x50) = 0x44d8b4;\n                        fcn.00409aa0();\n                        iVar3 = *(*0x20 + 8);\n                        pcVar5 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar1 = *(*0x20 + 0x18);\n                        unaff_RDI = *(*0x20 + -0x20);\n                        while( true ) {\n                            if (pcVar5 == NULL) {\n                                iVar6 = 0;\n                                goto code_r0x0044d917;\n                            }\n                            if ((*(pcVar5 + 8) == unaff_RDI) && (arg1_00 = *(pcVar5 + 0x18),  uVar1 == arg1_00)) break;\ncode_r0x0044d8e1:\n                            pcVar5 = *pcVar5;\n                        }\n                        if (arg1_00 < 0x81) {\n                            iVar10 = 0;\n                            do {\n                                if (iVar10 < arg1_00) {\n                                    in_R10 = *(pcVar5 + (iVar10 + 4) * 8);\n                                    if (*(unaff_RBX + iVar10 * 8) != in_R10) goto code_r0x0044d8e1;\n                                }\n                                else {\n                                    iVar6 = *(pcVar5 + 0x10);\ncode_r0x0044d917:\n                                    if (iVar6 != 0) {\n                                        *(*0x20 + -0x2c) = iVar6;\n                                        *(*0x20 + -0x50) = 0x44d965;\n                                        fcn.00409cc0();\n                                        return *(*0x20 + -0x2c);\n                                    }\n                                    *(iVar3 + 8) = *(iVar3 + 8) + 1;\n                                    *(*0x20 + -0x50) = 0x44d926;\n                                    puVar2 = fcn.0044da80();\n                                    puVar2[1] = *(*0x20 + -0x20);\n                                    iVar3 = *(*0x20 + 8);\n                                    *(puVar2 + 2) = *(iVar3 + 8);\n                                    uVar9 = *(*0x20 + 0x18);\n                                    puVar2[3] = uVar9;\n                                    if (uVar9 < 0x81) {\n                                        iVar10 = *(*0x20 + 0x10);\n                                        for (iVar7 = 0; iVar7 < uVar9; iVar7 = iVar7 + 1) {\n                                            puVar2[iVar7 + 4] = *(iVar10 + iVar7 * 8);\n                                        }\n                                        *(*0x20 + -0x18) = puVar2;\n                                        *puVar2 = *(iVar3 + 0x20 + *(*0x20 + -0x28) * 8);\n                                        *(*0x20 + -0x50) = 0x44d9a5;\n                                        fcn.00402d60();\n                                        *(*0x20 + -0x50) = 0x44d9b1;\n                                        fcn.00409cc0();\n                                        return *(*(*0x20 + -0x18) + 0x10);\n                                    }\n                                    pcVar5 = pe_nt_image_headers64;\n                                    *(*0x20 + -0x50) = 0x44d9d0;\n                                    iVar3 = fcn.00459a20(uVar9, 0x80);\n                                    unaff_RBX = uVar1;\n                                }\n                                iVar10 = iVar10 + 1;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x50) = 0x44da05;\n                        uVar9 = arg1_00;\n                        uVar4 = fcn.00459a20(arg1_00, 0x80);\n                    }\n                    in_R10 = in_R10 + 1;\n                } while( true );\n            }\n            *(*0x20 + -0x50) = 0x44da3a;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00459a20(unaff_RBX, 0x80);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x44da54;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1854
    },
    "0044dee0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044dee0(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.0044e5a0();\n    piVar3 = fcn.0040bba0();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.0044d7e0(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044cd00(auStack24);\n    return;\n}\n",
        "token_count": 251
    },
    "0044e200": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044e200(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044cd00(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044cd00(auStack24);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0044e320": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044e320(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x553d40)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.0044cd00(&uStack32);\n    return;\n}\n",
        "token_count": 267
    },
    "00453160": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00453160(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x409800;\n            }\n            for (iVar2 = 0x53f2c0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x004531c0;\n            }\n            iVar2 = 0;\ncode_r0x004531c0:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x453299;\n                iVar2 = fcn.00448f20();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x4531e5;\n            fcn.00409aa0();\n            *(*0x20 + -0x50) = 0x4531fc;\n            puVar1 = fcn.0040dca0(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x453213;\n            fcn.00409cc0();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x453225;\n            fcn.004330a0();\n            *(*0x20 + -0x50) = 0x453236;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x453245;\n            fcn.00433800();\n            *(*0x20 + -0x50) = 0x453256;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x453265;\n            fcn.00433800();\n            *(*0x20 + -0x50) = 0x453276;\n            fcn.004339a0();\n            *(*0x20 + -0x50) = 0x45327b;\n            fcn.00433120();\n            iVar2 = 0x53f2c0;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x118);\n                *(*0x20 + -0x28) = *(iVar2 + 0x120);\n                *(*0x20 + -0x50) = 0x4532c5;\n                fcn.004330a0();\n                *(*0x20 + -0x50) = 0x4532d6;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x4532e5;\n                fcn.00433800();\n                *(*0x20 + -0x50) = 0x4532f6;\n                fcn.004339a0();\n                *(*0x20 + -0x50) = 0x453305;\n                fcn.00433800();\n                *(*0x20 + -0x50) = 0x45330a;\n                fcn.00433300();\n                *(*0x20 + -0x50) = 0x45330f;\n                fcn.00433120();\n                iVar2 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x45333a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x453349;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1168
    },
    "00455dc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00455dc0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00402da0(iVar2 + 0x2c0);\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ce60();\n    return;\n}\n",
        "token_count": 341
    },
    "00459b20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459b20(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4585
    },
    "00459b6e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459b6e(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4102
    },
    "00459bb8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459bb8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "00459bd8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459bd8(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2341
    },
    "00459c14": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459c14(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1722
    },
    "00459c2b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459c2b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1403
    },
    "00459c38": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459c38(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1245
    },
    "00459c59": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459c59(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 775
    },
    "00459c70": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459c70(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "00465360": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00465360(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(in_RAX + 0x140) == -1) {\n                arg1_01 = ((arg1 * 6 >> 0x3f) >> 0x3d) + arg1 * 6 >> 3;\n            }\n            else {\n                arg1_01 = (arg1 >> 2) * 3;\n            }\n            *(*0x20 + -0x38) = arg1_01;\n            *(*0x20 + -0x78) = 0x4653d1;\n            uVar1 = fcn.004433e0(arg1_01);\n            *(*0x20 + -0x10) = uVar1;\n            uVar1 = *(*0x20 + 0x10);\n            arg1_00 = *(*0x20 + 0x18);\n            *(*0x20 + -0x78) = 0x4653f0;\n            fcn.00447560(arg1_00);\n            unaff_RBX = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x465410;\n            arg1 = fcn.00465480(*(*0x20 + -0x38), arg1_01, uVar1, arg1_00);\n            if (arg1 <= *(*0x20 + -0x38)) {\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x78) = 0x46543d;\n            in_RAX = fcn.00459a60(arg1, *(*0x20 + -0x38));\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x465452;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 702
    },
    "00467040": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004670e9)\n// WARNING: Removing unreachable block (ram,0x00467115)\n\nulong fcn.00467040(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x54bc60);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x4670af;\n            uVar2 = fcn.00459bb8();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x4670d8;\n            uVar3 = fcn.00467220(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x004671e5;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x4671bb;\n                fcn.00465f80(300);\n                *(*0x20 + -0x2a0) = 0x4671cb;\n                uVar2 = fcn.00447800(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x4671e5;\n            fcn.00459a60(uVar4, 300);\ncode_r0x004671e5:\n            *(*0x20 + -0x2a0) = 0x4671f1;\n            in_RAX = fcn.004599e0(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x4671fc;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 770
    },
    "00467660": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00467660(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x54d8f0;\n            *(*0x20 + -0x50) = 0x467692;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x4676bc;\n                iVar2 = fcn.00456080(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x467706;\n                    fcn.00409500();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x467736;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x467745;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00467760": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00467760(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x54d8f8;\n            *(*0x20 + -0x50) = 0x467793;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x4677c5;\n                uVar2 = fcn.00456080(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x467806;\n                    fcn.00409500();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x467836;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x467845;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 529
    },
    "00467900": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00467900(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x54d940;\n            *(*0x20 + -0x50) = 0x46792f;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x467959;\n                iVar2 = fcn.00456080(iVar1);\n                if (((iVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0;\n                    *(*0x20 + -0x50) = 0x46799b;\n                    fcn.00409500();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x4679cc;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4679d7;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00402a80": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402a80(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x402acc;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x402aea;\n            fcn.00452a40();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402b05;\n            fcn.00447020(0x1c);\n            *(*0x20 + -0x38) = 0x402b0a;\n            unaff_RBX = fcn.00409580();\n            *(*0x20 + -0x38) = 0x402b19;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x402b2e;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 567
    },
    "00402b60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint64_t fcn.00402b60(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x402baf;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x402bcd;\n            fcn.00452a40();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402be6;\n            fcn.00447020(0x1c);\n            *(*0x20 + -0x38) = 0x402beb;\n            unaff_RBX = fcn.00409580();\n            *(*0x20 + -0x38) = 0x402bfa;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x402c0f;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 579
    },
    "00402da0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00402da0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.004317e0();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.00455040();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.004571e0();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.00459140();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.00455080(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 363
    },
    "00404a60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a60(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00410700(arg1);\n    fcn.0045a340(*in_RAX);\n    return;\n}\n",
        "token_count": 105
    },
    "00404ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404ae0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00410700(*(unaff_RBX + 0x18));\n    fcn.0045a340(*in_RAX);\n    return;\n}\n",
        "token_count": 122
    },
    "00406e60": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406e60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00447020(0xf);\n    return;\n}\n",
        "token_count": 83
    },
    "00409400": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409400(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = fcn.0040b1e0(1, *in_RAX);\n    fcn.0040f460(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "00409480": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409480(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = fcn.0040b1e0(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.0045a340(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "0040fe40": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040fe40(uint64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        arg1 = arg1 & 0xffffffff;\n    }\n    fcn.0040fd60(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "00412200": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412200(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar1 = fcn.004229e0(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.00411b80(*(iVar1 + 0x18));\n    return iVar1;\n}\n",
        "token_count": 147
    },
    "004172e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004172e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x417305;\n            fcn.00434d80();\n            *(*0x20 + -0x38) = 0x417313;\n            fcn.00409aa0();\n            *(*0x20 + -0x20) = *0x574200;\n            *(*0x20 + -0x10) = *0x5741f8;\n            *(*0x20 + -0x38) = 0x417339;\n            fcn.00409cc0();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x54e180 = 0;\n                    *0x54e228 = *0x5a2508;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x417379;\n                fcn.0045a040();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x4173d8;\n            fcn.00459a00(0x40);\n        }\n        *(puVar4 + -8) = 0x4173de;\n        fcn.0045ba20();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "00419560": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00419560(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar2 = *0x54e240;\n    iVar1 = *0x54e238;\n    if (*0x5a1b7c == 0) {\n        fcn.00409cc0();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x54e240 != 0) {\n        *(*0x54e240 + 0xa0) = unaff_R14;\n        iVar3 = *0x54e238;\n    }\n    *0x54e238 = iVar3;\n    if (*0x5a2558 < 1) {\n        *0x54e240 = unaff_R14;\n        fcn.00434240(0xb);\n        return 1;\n    }\n    *0x54e238 = iVar1;\n    *0x54e240 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.00409cc0();\n    return 0;\n}\n",
        "token_count": 340
    },
    "004220e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004220e0(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00414240(0x4dc4c8);\n    fcn.00414240(0);\n    fcn.00414240(0);\n    fcn.00414240(0);\n    fcn.00414240(0);\n    fcn.00414240(0);\n    *(in_RAX + 0x16a78) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10438 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.004249a0(0x5a4678, in_RAX + 0x10, param_3);\n    return;\n}\n",
        "token_count": 266
    },
    "00423de0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00423de0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x423e77;\n            fcn.004330a0();\n            *(*0x20 + -0x38) = 0x423e88;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423e92;\n            fcn.004336a0();\n            *(*0x20 + -0x38) = 0x423ea5;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423eaf;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x423ec5;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423ecf;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x423ee5;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423eef;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x423f05;\n            fcn.004339a0();\n            *(*0x20 + -0x38) = 0x423f0f;\n            fcn.00433960();\n            *(*0x20 + -0x38) = 0x423f14;\n            fcn.00433300();\n            *(*0x20 + -0x38) = 0x423f19;\n            fcn.00433120();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x423f2a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x423f3a;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 936
    },
    "00428780": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428780(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00427e40(arg1);\n    fcn.00427f40(arg1);\n    return;\n}\n",
        "token_count": 96
    },
    "0042e840": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0042e840(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.00409aa0();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.0042eb20();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 107
    },
    "00432f20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00432f20(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x38) = 0x432f4c;\n            fcn.004330a0();\n            if (*0x5a1ba4 != 0) {\ncode_r0x00432f69:\n                *(*0x20 + -0x38) = 0x432f6e;\n                fcn.00433120();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar3 = *(*0x20 + 0x18);\n            iVar5 = *(*0x20 + 8);\n            uVar1 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar1) goto code_r0x00432f69;\n                if (0x200 < *0x5a1ce0) goto code_r0x00433058;\n                iVar6 = *0x5a1ce0 - 0x200;\n                if (arg1_00 < uVar1) break;\n                iVar2 = arg1_00 - uVar1;\n                arg1_01 = -iVar6;\n                if (-iVar2 != iVar6 && iVar2 <= -iVar6) {\n                    arg1_01 = iVar2;\n                }\n                unaff_RBX = iVar5 + (uVar1 - iVar3 >> 0x3f & uVar1);\n                if (unaff_RBX != (iVar6 >> 0x3f & *0x5a1ce0) + 0x5a2640) {\n                    *(*0x20 + -0x10) = uVar1;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x43302e;\n                    fcn.0045a340(arg1_01);\n                    iVar3 = *(*0x20 + 0x18);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar1 = *(*0x20 + -0x10);\n                }\n                iVar6 = *0x5a1ce0 + arg1_01;\n                *0x5a1ce0 = iVar6 + (((iVar6 >> 0x3f) >> 0x37) + iVar6 >> 9) * -0x200;\n                uVar1 = arg1_01 + uVar1;\n            }\n            *(*0x20 + -0x38) = 0x433058;\n            fcn.00459aa0(arg1_00);\ncode_r0x00433058:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x433065;\n            in_RAX = fcn.00459aa0(0x200);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x43307a;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1016
    },
    "0043c0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043c0c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 83
    },
    "00449820": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00449820(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x00449864;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x00449864:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x449871;\n                uVar2 = fcn.00448140();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x44989a;\n            in_RAX = fcn.004599e0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x4498aa;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 549
    },
    "00449960": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00449960(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x0044999d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x0044999d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x4499aa;\n                uVar1 = fcn.00448140();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x4499d6;\n            in_RAX = fcn.004599e0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x4499ea;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 585
    },
    "00449a00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.00449a00(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x47efc3;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x47efc3;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x449a59;\n                    uVar2 = fcn.00448140();\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x449aae;\n                fcn.004599e0(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x449ab8;\n            in_RAX = fcn.004599e0(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x449acc;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "0044b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044b7a0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar3 = 0;\ncode_r0x0044b7d1:\n    if (arg1 <= iVar3) {\n        return;\n    }\n    puVar2 = *(unaff_RBX + iVar3 * 8);\ncode_r0x0044b8ba:\n    iVar1 = *(puVar2 + 8);\n    switch(iVar1) {\n    case 0:\n    case 5:\n        fcn.0044cae0();\n        goto code_r0x0044b8ba;\n    case 1:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 9;\n            *puVar2 = 0;\n            fcn.0044aaa0();\n            LOCK();\n            if (*(puVar2 + 8) == 9) {\n                *(puVar2 + 8) = 1;\n            }\n            else {\n                fcn.0044cae0();\n            }\n            goto code_r0x0044b7cb;\n        }\n        goto code_r0x0044b8ba;\n    case 2:\n    case 4:\n    case 9:\n        fcn.0044cae0();\n        goto code_r0x0044b8ba;\n    case 3:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 5;\n            *puVar2 = 0;\n            goto code_r0x0044b7cb;\n        }\n        goto code_r0x0044b8ba;\n    case 6:\n        fcn.004571e0();\n        goto code_r0x0044b8ba;\n    case 7:\n    case 8:\n        break;\n    default:\n        fcn.0044cae0();\n        goto code_r0x0044b8ba;\n    }\n    LOCK();\n    if (iVar1 == *(puVar2 + 8)) goto code_r0x0044b954;\n    goto code_r0x0044b8ba;\ncode_r0x0044b954:\n    *(puVar2 + 8) = 9;\n    puVar2[1] = puVar2[7];\n    *puVar2 = 0;\n    fcn.0044aaa0();\n    LOCK();\n    if (*(puVar2 + 8) == 9) {\n        *(puVar2 + 8) = 1;\n    }\n    else {\n        fcn.0044cae0();\n    }\ncode_r0x0044b7cb:\n    iVar3 = iVar3 + 1;\n    goto code_r0x0044b7d1;\n}\n",
        "token_count": 687
    },
    "0044bd00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0044bd00(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (iVar3 = 0; iVar3 < arg1; iVar3 = iVar3 + 1) {\n        iVar2 = *(unaff_RBX + iVar3 * 8);\n        fcn.0044aaa0();\n        LOCK();\n        piVar1 = iVar2 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044cae0();\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0044e120": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e120(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044cd00(0);\n    return;\n}\n",
        "token_count": 114
    },
    "00451080": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451080(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00451180(arg1);\n    return;\n}\n",
        "token_count": 84
    },
    "004510e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.004510e0(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.00451180(0);\n        return;\n    }\n    fcn.00451180(arg1);\n    return;\n}\n",
        "token_count": 136
    },
    "00455f20": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00455f20(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + 0x28);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00402da0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043ce60();\n    return;\n}\n",
        "token_count": 340
    },
    "0045ae00": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045ae00(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.00459380();\n    return;\n}\n",
        "token_count": 47
    },
    "0045b1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b1e0(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x54d548)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 85
    },
    "0045b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0045b2c0(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 31
    },
    "00465de0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.00465de0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = unaff_RBX;\n            for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n                if (0xffff < *(in_RAX + iVar2 * 4)) {\n                    iVar3 = iVar3 + 1;\n                }\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x38) = 0x465e3b;\n            iVar1 = fcn.004433e0(iVar3);\n            iVar3 = *(*0x20 + 8);\n            iVar2 = *(*0x20 + -0x10);\n            arg1 = *(*0x20 + -0x18);\n            arg1_00 = 0;\n            for (unaff_RBX = 0; unaff_RBX < iVar2; unaff_RBX = unaff_RBX + 1) {\n                uVar5 = *(iVar3 + unaff_RBX * 4);\n                if ((uVar5 < 0xd800) || (uVar5 - 0xe000 < 0x2000)) {\n                    if (arg1 <= arg1_00) goto code_r0x00465f3d;\n                    *(iVar1 + arg1_00 * 2) = uVar5;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    uVar5 = uVar5 - 0x10000;\n                    if (uVar5 < 0x100000) {\n                        if (arg1 <= arg1_00) goto code_r0x00465f35;\n                        *(iVar1 + arg1_00 * 2) = (uVar5 >> 10 & 0x3ff) + 0xd800;\n                        if (arg1 <= arg1_00 + 1) goto code_r0x00465f2d;\n                        *(iVar1 + 2 + arg1_00 * 2) = (uVar5 & 0x3ff) + 0xdc00;\n                        arg1_00 = arg1_00 + 2;\n                    }\n                    else {\n                        if (arg1 <= arg1_00) goto code_r0x00465f25;\n                        *(iVar1 + arg1_00 * 2) = 0xfffd;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                }\n            }\n            if (arg1_00 <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x38) = 0x465f25;\n            fcn.00459a60(arg1_00, arg1);\n            arg1 = arg1_00;\ncode_r0x00465f25:\n            *(*0x20 + -0x38) = 0x465f2d;\n            fcn.004599e0(arg1);\ncode_r0x00465f2d:\n            *(*0x20 + -0x38) = 0x465f35;\n            fcn.004599e0(arg1);\ncode_r0x00465f35:\n            *(*0x20 + -0x38) = 0x465f3d;\n            fcn.004599e0(arg1);\ncode_r0x00465f3d:\n            *(*0x20 + -0x38) = 0x465f45;\n            in_RAX = fcn.004599e0(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x465f5a;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1121
    },
    "00466de0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00466de0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00402700(arg1, in_RDX);\n    if (iStack24 != -1) {\n        return 0;\n    }\n    uVar1 = fcn.00443280(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00412520": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00412520(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar8 = unaff_BL;\n            if (uVar8 < 0x88) {\n                iVar4 = *(in_RAX + 0x28 + uVar8 * 8);\n                if (*(iVar4 + 0x38) == *(iVar4 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar8;\n                    if (iVar4 == 0x5a22c0) {\ncode_r0x0041265a:\n                        *(*0x20 + -0x40) = 0x412672;\n                        iVar4 = fcn.00412cc0(uVar8 * 0xc0);\n                        if (iVar4 != 0) {\n                            if (*(iVar4 + 0x38) != *(iVar4 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar4;\n                                *(iVar4 + 0x58) = *0x573f58 + 3;\n                                *(iVar4 + 0x66) = *(iVar4 + 0x60);\n                                arg1 = *(*(*0x20 + 8) + 8);\n                                *(*0x20 + -0x40) = 0x4126cb;\n                                fcn.0041c980(arg1);\n                                iVar4 = *(*0x20 + 8);\n                                *(iVar4 + 8) = 0;\n                                *(iVar4 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                return;\n                            }\n                            *(*0x20 + -0x40) = 0x412705;\n                            fcn.004317e0();\n                        }\n                        *(*0x20 + -0x40) = 0x412716;\n                        fcn.004317e0();\ncode_r0x00412716:\n                        *(*0x20 + -0x40) = 0x412725;\n                        fcn.004599e0(0x44);\n                    }\n                    else if (*(iVar4 + 0x58) == *0x573f58 + 3) {\n                        *(*0x20 + 0x10) = unaff_BL;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x40) = 0x4125bf;\n                        fcn.00413020();\n                        *(*0x20 + -0x40) = 0x4125cb;\n                        iVar3 = fcn.0042ae00();\n                        iVar4 = *(*0x20 + -0x18);\n                        iVar5 = *(iVar4 + 0x60) - *(iVar4 + 0x66);\n                        uVar2 = *(*0x20 + 0x10);\n                        uVar8 = uVar2 >> 1;\n                        if (uVar8 < 0x44) {\n                            *(*0x20 + -0x20) = iVar5;\n                            piVar1 = iVar3 + uVar8 * 8 + 0x48;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + iVar5;\n                            if (uVar2 == 5) {\n                                iVar6 = *(*0x20 + 8);\n                                LOCK();\n                                *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar6 + 0x20);\n                                *(iVar6 + 0x20) = 0;\n                            }\n                            *(*0x20 + -0x40) = 0x412630;\n                            fcn.0042aee0(iVar4, iVar6);\n                            LOCK();\n                            *0x5a25c8 = *0x5a25c8 + *(*0x20 + -0x20) * *(*(*0x20 + -0x18) + 0x68);\n                            *(*(*0x20 + -0x18) + 0x66) = 0;\n                            uVar8 = *(*0x20 + -0x10);\n                            goto code_r0x0041265a;\n                        }\n                        goto code_r0x00412716;\n                    }\n                    *(*0x20 + -0x40) = 0x412736;\n                    fcn.004317e0();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x40) = 0x412747;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x40) = 0x412754;\n            in_RAX = fcn.004599e0(0x88);\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x412765;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1326
    },
    "004257c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint64_t fcn.004257c0(ulong param_1, ulong param_2, uint64_t param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    uchar *puVar5;\n    uchar *arg1;\n    uchar *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    uchar *arg2;\n    uchar *in_R11;\n    uchar *puVar10;\n    uint64_t uVar11;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20 + -0x98,  puVar6 = *0x20,  puVar5 < *(unaff_R14 + 0x10) || puVar5 == *(unaff_R14 + 0x10)) {\ncode_r0x00426339:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x426348;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0x118;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = *0x53a388;\n    *(*0x20 + -0x28) = *0x53a370;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x426360;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    puVar2 = NULL;\n    uVar7 = 0;\n    puVar8 = NULL;\n    uVar9 = 0xffffffffffffffff;\ncode_r0x0042586e:\n    if (4 < puVar2) {\n        arg1 = uVar7 >> 0xd;\n        if (arg1 < 0x2000) {\n            *(*0x20 + -0x38) = uVar7;\n            uVar7 = (uVar7 & 0x1fff) << 7;\n            *(*0x20 + -0x120) = 0x4259bf;\n            iVar3 = fcn.00428480(0);\n            if (iVar3 != -1) {\n                *(*0x20 + -0x90) = iVar3;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x120) = 0x425a1d;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x120) = 0x425a32;\n                fcn.004256e0();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar9 = *(*(*0x20 + 8) + 0x68);\n            arg1 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar9) {\n                uVar7 = *(arg1 + *(*0x20 + -0x38) * 8);\n                uVar9 = uVar7 & 0x1fffff;\n                if ((uVar7 & 0x8000000000000000) != 0) {\n                    uVar9 = 0x200000;\n                }\n                if (uVar7 < 0) {\n                    uVar11 = 0x200000;\n                }\n                else {\n                    uVar11 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0xf8) = uVar11;\n                *(*0x20 + -0xf0) = uVar9;\n                if (-1 < uVar7) goto code_r0x00425bcd;\n                uVar7 = 0x200000;\n                do {\n                    *(*0x20 + -0x100) = uVar7;\n                    *(*0x20 + -0x120) = 0x425adf;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x425af0;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425afa;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x425b0b;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425b18;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x425b29;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425b33;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425b45;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425b4f;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425b65;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425b6f;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425b85;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425b8a;\n                    fcn.00433120();\n                    *(*0x20 + -0x120) = 0x425b8f;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x425ba5;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425bb2;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425bb7;\n                    fcn.00433300();\n                    *(*0x20 + -0x120) = 0x425bbc;\n                    fcn.00433120();\n                    *(*0x20 + -0x120) = 0x425bcd;\n                    fcn.004317e0();\ncode_r0x00425bcd:\n                    uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x120) = 0x425bf8;\n            fcn.004599e0(uVar9);\n        }\n        *(*0x20 + -0x120) = 0x425c05;\n        fcn.00459a00(0x2000);\n        goto code_r0x00425c05;\n    }\n    param_3 = 0x53b6c0;\n    uVar11 = *(puVar2 * 8 + 0x53b6c0);\n    uVar1 = -(uVar11 < 0x40);\n    uVar4 = uVar11;\n    puVar10 = 1 << (uVar4 & 0x3f) & uVar1;\n    unaff_R13 = 0x53b700;\n    unaff_R15 = *(puVar2 * 8 + 0x53b700);\n    puVar5 = uVar7 << (uVar4 & 0x3f) & uVar1;\n    arg2 = *(in_RAX + 0x10 + puVar2 * 0x18);\n    param_4 = *(in_RAX + puVar2 * 0x18);\n    arg1 = puVar5 + puVar10;\n    in_R11 = puVar2;\n    if (arg1 <= arg2) {\n        if (puVar5 <= arg1) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar9;\n            *(*0x20 + -0xa0) = puVar8;\n            uVar7 = 0x53b740;\n            uVar9 = *(puVar2 * 8 + 0x53b740);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - arg2 >> 0x3f);\n            uVar9 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar9 & 0x3f) & -(uVar9 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar10 & uVar9) == param_3) {\n                puVar5 = puVar10 + -1 & uVar9;\n            }\n            else {\n                puVar5 = NULL;\n            }\n            *(*0x20 + -0x38) = puVar2;\n            *(*0x20 + -0x40) = puVar10;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar5;\n            unaff_R13 = 0;\n            arg1 = puVar10;\n            arg2 = NULL;\n            do {\n                if (arg1 <= puVar5) {\ncode_r0x00425e80:\n                    if (unaff_RBX <= arg2) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar7 + in_R11 * 8);\n                        *(*0x20 + -0x120) = 0x426150;\n                        fcn.004256e0();\n                        return (-(*(*0x20 + -0x58) < 0x40) & *(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == NULL) {\n                        return 0;\n                    }\n                    uVar7 = *(*0x20 + -0xa0);\n                    uVar9 = uVar7 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar7 & 0x8000000000000000) != 0) {\n                        uVar9 = 0x200000;\n                    }\n                    if (uVar7 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar7 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -200) = unaff_R15;\n                    *(*0x20 + -0xc0) = uVar9;\n                    if (uVar7 < 0) {\n                        arg2 = 0x200000;\n                    }\n                    else {\n                        arg2 = uVar7 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = arg2;\n                    *(*0x20 + -0x120) = 0x425f12;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x425f25;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425f39;\n                    fcn.004337a0(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x120) = 0x425f4a;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425f54;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x425f65;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425f6f;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425f85;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425f8f;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425fa5;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425faf;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x425fb4;\n                    fcn.00433300();\n                    *(*0x20 + -0x120) = 0x425fb9;\n                    fcn.00433120();\n                    *(*0x20 + -0x120) = 0x425fbe;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x425fcf;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425fdc;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x425fed;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x425ffa;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x42600b;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x426018;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x42601d;\n                    fcn.00433300();\n                    *(*0x20 + -0x120) = 0x426025;\n                    fcn.00433120();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x120) = 0x426045;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x426056;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x426065;\n                    fcn.00433800();\n                    *(*0x20 + -0x120) = 0x426076;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x426085;\n                    fcn.004337a0();\n                    *(*0x20 + -0x120) = 0x42608a;\n                    fcn.00433300();\n                    *(*0x20 + -0x120) = 0x42608f;\n                    fcn.00433120();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x53b740);\n                    arg1 = *(*(*0x20 + -0x38) * 8 + 0x53b6c0);\n                    *(*0x20 + -0x60) = arg1;\n                    *(*0x20 + -0x120) = 0x4260c5;\n                    fcn.004330a0();\n                    *(*0x20 + -0x120) = 0x4260d6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x4260e5;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x4260f6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x120) = 0x426105;\n                    fcn.004336a0();\n                    *(*0x20 + -0x120) = 0x42610a;\n                    fcn.00433300();\n                    *(*0x20 + -0x120) = 0x42610f;\n                    fcn.00433120();\n                    iVar3 = 0;\n                    while (iVar3 < *(*0x20 + -0x40)) {\n                        uVar7 = *(*(*0x20 + -0x20) + iVar3 * 8);\n                        uVar9 = uVar7 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar7 & 0x8000000000000000) != 0) {\n                            uVar9 = 0x200000;\n                        }\n                        if (uVar7 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar7 >> 0x15 & 0x1fffff;\n                            arg2 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar3;\n                        *(*0x20 + -0xe0) = param_4;\n                        *(*0x20 + -0xd8) = uVar9;\n                        if (uVar7 < 0) {\n                            uVar7 = 0x200000;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xe8) = uVar7;\n                        *(*0x20 + -0x120) = 0x4261ab;\n                        fcn.004330a0();\n                        *(*0x20 + -0x120) = 0x4261bc;\n                        fcn.004339a0();\n                        *(*0x20 + -0x120) = 0x4261c9;\n                        fcn.004337a0();\n                        *(*0x20 + -0x120) = 0x4261da;\n                        fcn.004339a0();\n                        arg1 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x120) = 0x4261f6;\n                        fcn.004337a0();\n                        *(*0x20 + -0x120) = 0x426207;\n                        fcn.004339a0();\n                        *(*0x20 + -0x120) = 0x426211;\n                        fcn.004336a0();\n                        *(*0x20 + -0x120) = 0x426225;\n                        fcn.004339a0();\n                        *(*0x20 + -0x120) = 0x42622f;\n                        fcn.004336a0();\n                        *(*0x20 + -0x120) = 0x426245;\n                        fcn.004339a0();\n                        *(*0x20 + -0x120) = 0x42624f;\n                        fcn.004336a0();\n                        *(*0x20 + -0x120) = 0x426265;\n                        fcn.004339a0();\n                        *(*0x20 + -0x120) = 0x42626a;\n                        fcn.00433120();\n                        iVar3 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x120) = 0x42631d;\n                    fcn.004317e0();\ncode_r0x0042631d:\n                    *(*0x20 + -0x120) = 0x426328;\n                    fcn.004599e0(arg1);\n                    break;\n                }\n                if (arg1 <= puVar5) goto code_r0x0042631d;\n                iVar3 = *(param_4 + puVar5 * 8);\n                if (iVar3 == 0) {\n                    puVar8 = NULL;\n                    goto code_r0x00425c05;\n                }\n                *(*0x20 + -0x80) = puVar5;\n                *(*0x20 + -0x50) = iVar3;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = arg2;\n                uVar7 = *(uVar7 + in_R11 * 8);\n                *(*0x20 + -0x78) = puVar5 + param_3;\n                unaff_R13 = puVar5 + param_3 << (uVar7 & 0x3f) & -(uVar7 < 0x40);\n                *(*0x20 + -0x120) = 0x425cae;\n                (**(*0x20 + -0x18))(uVar7, *0x20 + -0x18, 1 << (unaff_R15 & 0x3f), unaff_R13 - 0x800000000000);\n                puVar8 = *(*0x20 + -0x50);\n                uVar7 = puVar8 & 0x1fffff;\n                param_3 = 0x8000000000000000;\n                param_4 = 0x200000;\n                if ((puVar8 & 0x8000000000000000) != 0) {\n                    uVar7 = 0x200000;\n                }\n                iVar3 = *(*0x20 + -0xb8);\n                arg2 = iVar3 + uVar7;\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= arg2) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar3 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar7 = 0x53b740;\n                    param_3 = *(*0x20 + -0x70);\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    goto code_r0x00425e80;\n                }\n                if (puVar8 < 0) {\n                    puVar2 = 0x200000;\n                    in_R11 = arg2;\n                }\n                else {\n                    puVar2 = puVar8 >> 0x15 & 0x1fffff;\n                    in_R11 = puVar8;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00425850;\n                if (iVar3 == 0) {\n                    uVar9 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar9 = *(*0x20 + -0xb0);\n                    uVar11 = 1 << (uVar9 & 0x3f) & -(uVar9 < 0x40);\n                    if (uVar11 <= uVar7) {\n                        puVar8 = iVar3 + uVar11;\n                        arg1 = *(*0x20 + -0x40);\n                        uVar7 = 0x53b740;\n                        param_3 = *(*0x20 + -0x70);\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar5 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        goto code_r0x00425c05;\n                    }\n                }\n                if (puVar8 < 0) {\n                    puVar8 = 0x200000;\n                }\n                else {\n                    puVar8 = puVar8 >> 0x2a & 0x1fffff;\n                }\n                puVar5 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar9 < 0x40) & puVar5 + 1 << (uVar9 & 0x3f)) - puVar8;\n                arg1 = *(*0x20 + -0x40);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar7 = 0x53b740;\ncode_r0x00425c05:\n                puVar5 = puVar5 + 1;\n                arg2 = puVar8;\n            } while( true );\n        }\n        *(*0x20 + -0x120) = 0x426330;\n        fcn.00459aa0(arg1);\n    }\n    *(*0x20 + -0x120) = 0x426338;\n    in_RAX = fcn.00459a60(arg1, arg2);\n    goto code_r0x00426339;\ncode_r0x00425850:\n    puVar2 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar7 = *(*0x20 + -0x78);\n    uVar9 = uVar7;\n    goto code_r0x0042586e;\n}\n",
        "token_count": 5911
    },
    "00426ea0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00426ea0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg2;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t arg1_00;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00426ea0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x4273c0;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x427340;\n            *(*0x20 + -0x18) = vtable.Ld_M_f.0;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x426f6a;\n            uVar3 = fcn.0042a020(vtable.Ld_M_f.0, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar3;\n            iVar9 = 0;\n            do {\n                if (4 < iVar9) {\n                    *(*0x20 + -0xa8) = 0x42725a;\n                    iVar9 = fcn.00427440(*(*0x20 + 0x18));\n                    *(*(*0x20 + 8) + 0x10118) = *(*(*0x20 + 8) + 0x10118) + iVar9;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar9;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x426fa5;\n                arg1 = fcn.00429e00();\n                *(*0x20 + -0xa8) = 0x426fca;\n                iVar4 = (*_vtable.Ld_M_f.0)(uVar3, vtable.Ld_M_f.0);\n                iVar9 = *(*0x20 + -0x60);\n                iVar8 = *(*0x20 + 8);\n                arg2 = *(iVar8 + 0x10 + iVar9 * 0x18);\n                if (*(iVar8 + 8 + iVar9 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x0042729a;\n                    *(iVar8 + 8 + iVar9 * 0x18) = arg1;\n                }\n                iVar1 = *(iVar8 + iVar9 * 0x18);\n                if (*(iVar8 + 8 + iVar9 * 0x18) == 0) goto code_r0x00427290;\n                iVar4 = iVar1 + (iVar4 << 3 & -*0x5a1cd8);\n                uVar7 = iVar1 + ((*0x5a1cd8 + arg1 * 8) - 1 & -*0x5a1cd8);\n                uVar5 = *(*0x20 + -0x58);\n                if (0 < uVar5) {\n                    uVar2 = *(iVar8 + 0x10090);\n                    arg1_00 = *(iVar8 + 0x10098);\n                    arg2 = uVar2;\n                    if (arg1_00 <= uVar5 - 1) goto code_r0x00427285;\n                    *(*0x20 + -0x78) = iVar4;\n                    *(*0x20 + -0x80) = uVar7;\n                    iVar9 = (uVar5 - 1) * 0x10;\n                    arg2 = *(iVar9 + uVar2);\n                    uVar3 = *(iVar9 + 8 + uVar2);\n                    *(*0x20 + -0xa8) = 0x427086;\n                    uVar3 = (**(*0x20 + -0x20))(uVar3, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x42709b;\n                    iVar4 = fcn.00429e80(uVar3);\n                    iVar9 = *(*0x20 + -0x60);\n                    iVar8 = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0x58);\n                    uVar7 = arg1;\n                }\n                arg1_00 = *(iVar8 + 0x10090);\n                uVar2 = *(iVar8 + 0x10098);\n                if (uVar5 < uVar2) {\n                    if (uVar2 <= uVar5) goto code_r0x00427279;\n                    *(*0x20 + -0x70) = uVar7;\n                    *(*0x20 + -0x68) = iVar4;\n                    uVar3 = *(uVar5 * 0x10 + 8 + arg1_00);\n                    *(*0x20 + -0xa8) = 0x4270fb;\n                    uVar3 = (**(*0x20 + -0x20))(uVar3, *0x20 + -0x20);\n                    uVar7 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x427110;\n                    iVar4 = fcn.00429e80(uVar3);\n                    iVar9 = *(*0x20 + -0x60);\n                }\n                if (iVar4 + 0x800000000000U < uVar7 + 0x800000000000) {\n                    iVar8 = uVar7 - iVar4;\n                }\n                else {\n                    iVar8 = 0;\n                }\n                if (iVar8 != 0) {\n                    *(*0x20 + -0x38) = iVar4 + 0x800000000000U;\n                    *(*0x20 + -0x40) = uVar7 + 0x800000000000;\n                    *(*0x20 + -0x48) = uVar7;\n                    *(*0x20 + -0x50) = iVar4;\n                    *(*0x20 + -0xa8) = 0x427188;\n                    fcn.0042ad40();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar9 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar9 = 0;\n                    }\n                    LOCK();\n                    *0x5a25d8 = *0x5a25d8 + iVar9;\n                    *(*0x20 + -0xa8) = 0x4271db;\n                    fcn.00413aa0();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar9 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar9 = 0;\n                    }\n                    *(*(*0x20 + 8) + 0x10118) = *(*(*0x20 + 8) + 0x10118) + iVar9;\n                    iVar9 = *(*0x20 + -0x60);\n                }\n                iVar9 = iVar9 + 1;\n            } while( true );\n        }\n        goto code_r0x004272a5;\n    }\n    goto code_r0x00427306;\ncode_r0x00427279:\n    *(*0x20 + -0xa8) = 0x427285;\n    fcn.004599e0(uVar2);\ncode_r0x00427285:\n    *(*0x20 + -0xa8) = 0x427290;\n    fcn.004599e0(arg1_00);\ncode_r0x00427290:\n    *(*0x20 + -0xa8) = 0x42729a;\n    fcn.004599e0(0);\ncode_r0x0042729a:\n    *(*0x20 + -0xa8) = 0x4272a5;\n    fcn.00459a60(arg1, arg2);\ncode_r0x004272a5:\n    *(*0x20 + -0xa8) = 0x4272aa;\n    fcn.004330a0();\n    *(*0x20 + -0xa8) = 0x4272bb;\n    fcn.004339a0();\n    *(*0x20 + -0xa8) = 0x4272c8;\n    fcn.00433800();\n    *(*0x20 + -0xa8) = 0x4272d9;\n    fcn.004339a0();\n    *(*0x20 + -0xa8) = 0x4272e6;\n    fcn.00433800();\n    *(*0x20 + -0xa8) = 0x4272eb;\n    fcn.00433300();\n    *(*0x20 + -0xa8) = 0x4272f0;\n    fcn.00433120();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x427305;\n    in_RAX = fcn.004317e0();\ncode_r0x00427306:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + -8) = 0x42731a;\n    fcn.00457320();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    *0x20 = puVar6;\n    goto code_r0x00426ea0;\n}\n",
        "token_count": 2507
    },
    "00435740": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00435740(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *0x5a1b74 = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x54e784 = 0x7fffffff;\n        *0x54e780 = 1;\n        cVar1 = fcn.0043eb60();\n        if (cVar1 == '\\0') break;\n        fcn.0042eee0();\n    }\n    fcn.0042eee0();\n    fcn.0043eb60();\n    fcn.0042eee0();\n    return;\n}\n",
        "token_count": 210
    },
    "004020e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.004020e0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 210
    },
    "004085e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.004085e0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x5a1e00 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*(in_RAX + (arg1 - 1)), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 4));\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *(in_RAX + (arg1 - 8));\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2, 0) ^ SUB168(auVar2 >> 0x40, 0);\n                uVar7 = SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *(in_RAX + (uVar6 - 0x10));\n        uVar6 = *(in_RAX + (uVar6 - 8));\n    }\n    auVar1 = ZEXT816(uVar6 ^ uVar5) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 943
    },
    "004129e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004129e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004129e0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x10) = *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x573f58;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x412b6c;\n                iVar3 = fcn.0042ae00();\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x412b8f;\n                fcn.0042aee0(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x412ba5;\n                fcn.0041c980(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x5a22c0) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x38) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x20) = *(iVar3 + 0x66);\n                *(iVar3 + 0x66) = 0;\n                *(*0x20 + -0x68) = 0x412a73;\n                iVar2 = fcn.0042ae00();\n                uVar4 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar4) goto code_r0x00412baf;\n                *(*0x20 + -0x40) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar4 * 8 + 0x48;\n                LOCK();\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x20));\n                *(*0x20 + -0x68) = 0x412ab5;\n                fcn.0042aee0(iVar2);\n                iVar2 = *(*0x20 + -0x38);\n                LOCK();\n                *0x5a25c8 = *0x5a25c8 + *(iVar2 + 0x68) * *(*0x20 + -0x40);\n                if (*(iVar2 + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(iVar2 + 0x68) * (*(iVar2 + 0x38) - *(iVar2 + 0x60));\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x412b25;\n                fcn.00413020(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x5a22c0;\n                uVar6 = *(*0x20 + -0x28);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00412bbd;\ncode_r0x00412baf:\n    *(*0x20 + -0x68) = 0x412bbc;\n    in_RAX = fcn.004599e0(0x44);\ncode_r0x00412bbd:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x412bc7;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x004129e0;\n}\n",
        "token_count": 1272
    },
    "00413120": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00413120(void)\n\n{\n    uint8_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX >> 1;\n            if (uVar1 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar1 + 0x53c0e0);\n                *(*0x20 + -0x18) = *(uVar1 * 2 + 0x53d060);\n                *(*0x20 + -0x48) = 0x41317b;\n                iVar2 = fcn.004228a0();\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                *(iVar2 + 0x70) =\n                     *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar2 + 0x5c) >> 0x20) + *(iVar2 + 0x18);\n                uVar1 = *(iVar2 + 0x18) + 0x800000000000;\n                uVar4 = uVar1 >> 0x2a;\n                if (uVar4 < 0x40) {\n                    uVar1 = uVar1 >> 0x16;\n                    if (*(*(uVar4 * 8 + 0x573fb0) + (uVar1 & 0xfffff) * 8) == 0) {\n                        uVar1 = 0;\n                    }\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x48) = 0x41323c;\n                    fcn.00410940(uVar1 & 0xffffffff);\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x48) = 0x413265;\n                fcn.00459a00(0x40);\n            }\n            *(*0x20 + -0x48) = 0x41326f;\n            in_RAX = fcn.004599e0(0x44);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x41327a;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 671
    },
    "0041b9a0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041b9a0(int64_t arg1)\n\n{\n    ulong uVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(in_RAX + 4) = 0x400000;\n    *(in_RAX + 0x1e) = 0xffffffffffffffff;\n    *(in_RAX + 10) = 0x3feccccccccccccd;\n    *(in_RAX + 0xc) = 0x4010000000000000;\n    *(in_RAX + 0xe) = 0x408f400000000000;\n    *(in_RAX + 0x10) = 0xc08f400000000000;\n    *(in_RAX + 0x12) = 0x408f400000000000;\n    *(in_RAX + 0x14) = in_XMM15;\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 4) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    uVar1 = *(in_RAX + 2);\n    iVar2 = arg1;\n    if (-1 < arg1) {\n        iVar2 = *(in_RAX + 2);\n        *(in_RAX + 2) = arg1;\n    }\n    fcn.0041cd00(iVar2, uVar1);\n    return;\n}\n",
        "token_count": 412
    },
    "0041cd00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0041cd00(void)\n\n{\n    uint64_t uVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    char unaff_BL;\n    double dVar3;\n    \n    if (unaff_BL == '\\0') {\n        *(in_RAX + 0x1c) = *(in_RAX + 0x22) + 0x100000;\n    }\n    else {\n        *(in_RAX + 0x1c) = 0;\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x28) + *(in_RAX + 0x2e) + *(in_RAX + 0x2c)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x2e);\n    }\n    if (uVar2 < *(in_RAX + 4)) {\n        uVar2 = *(in_RAX + 4);\n    }\n    *(in_RAX + 0x1a) = uVar2;\n    uVar2 = *(in_RAX + 0x26) + *(in_RAX + 0x28) + *(in_RAX + 0x2c);\n    if (uVar2 < 0) {\n        dVar3 = uVar2 & 1 | uVar2 >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = uVar2;\n    }\n    dVar3 = dVar3 * *0x4f0ba8 * *(in_RAX + 8) * *0x4f0bc8;\n    if (*0x4f0c10 <= dVar3) {\n        uVar2 = dVar3 - *0x4f0c10 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar3;\n    }\n    uVar1 = *(in_RAX + 6);\n    *(in_RAX + 6) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 485
    },
    "0041d3e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041d3e0(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    uVar1 = *0x5a1d90;\n    dVar3 = *0x4f0be8 * in_RAX;\n    if (*0x4f0c10 <= dVar3) {\n        *0x5a1d98 = dVar3 - *0x4f0c10 | 0x8000000000000000;\n    }\n    else {\n        *0x5a1d98 = dVar3;\n    }\n    if (*0x5a25d8 <= *0x5a1d98) {\n        *0x5a1d98 = 0xffffffffffffffff;\n    }\n    if (arg1 == 0) {\n        *0x5a1d90 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (unaff_RBX < 0) {\n        dVar3 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = unaff_RBX;\n    }\n    if (arg1 < 0) {\n        dVar4 = arg1 & 1 | arg1 >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = arg1;\n    }\n    if (*0x5a56b0 < 0) {\n        dVar5 = *0x5a56b0 & 1 | *0x5a56b0 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x5a56b0;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x4f0c10 <= dVar5) {\n        uVar2 = dVar5 - *0x4f0c10 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    *0x5a1d90 = -*0x5a1cd8 & (uVar2 + uVar2 / 10 + *0x5a1cd8) - 1;\n    if ((*0x5a1d90 < *0x5a25c0 + *0x5a25b0) && (*0x5a1cd8 <= (*0x5a25c0 + *0x5a25b0) - *0x5a1d90)) {\n        uVar1 = 0x5a1d90;\n    }\n    else {\n        *0x5a1d90 = 0xffffffffffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 674
    },
    "0043fe40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0043fe40(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t unaff_EDI;\n    int32_t iVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        iVar8 = unaff_EDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b0 && *0x20 + -0x3b0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x430;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            iVar8 = *0x20 + -0x408;\n            *(*0x20 + -0x440) = *0x20 + -8;\n            *(*0x20 + -0x438) = 0x43fe8f;\n            iVar4 = fcn.00459b20();\n            unaff_RBP = *(*0x20 + -0x440);\n            if (unaff_EDI - arg1 >> 1 == 0x80) {\n                for (uVar6 = 0; uVar6 < 0x80; uVar6 = uVar6 + 1) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(iVar4 + 0x198 + (uVar6 + arg1 & 0xff) * 8);\n                }\n                LOCK();\n                if (arg1 != *(iVar4 + 400)) {\n                    return 0;\n                }\n                *(iVar4 + 400) = arg1 + 0x80;\n                *(*0x20 + -0x10) = unaff_RBX;\n                uVar5 = 0;\n                while( true ) {\n                    if (0x7f < uVar5) {\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x438) = 0x43ff5c;\n                        fcn.00409aa0();\n                        iVar4 = *(*0x20 + -0x418);\n                        uVar1 = *(*0x20 + -0x420);\n                        uVar2 = *0x54e700;\n                        iVar3 = *0x54e708;\n                        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  uVar2 = uVar1,  iVar3 = iVar4,  *0x54e708 != 0)) {\n                            *(*0x54e708 + 0xa0) = uVar1;\n                            uVar2 = *0x54e700;\n                        }\n                        *0x54e708 = iVar3;\n                        *0x54e700 = uVar2;\n                        *0x54e710 = *0x54e710 + 0x81;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x438) = 0x43ffbb;\n                        fcn.00409cc0();\n                        return 1;\n                    }\n                    iVar4 = uVar5 * 8;\n                    uVar5 = uVar5 + 1;\n                    if (0x80 < uVar5) break;\n                    *(*(*0x20 + iVar4 + -0x410) + 0xa0) = *(*0x20 + uVar5 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x438) = 0x43ffda;\n                fcn.004599e0(0x81);\n            }\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x438) = 0x43ffeb;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x1c) = iVar8;\n        *(puVar7 + -8) = 0x440005;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        unaff_EDI = *(puVar7 + 0x1c);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1161
    },
    "0045fca0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0045fca0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    uchar *in_RAX;\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    uint64_t uVar7;\n    uchar *unaff_RDI;\n    char cVar8;\n    uint64_t in_R8;\n    uchar uVar9;\n    uint64_t in_R9;\n    uchar uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uchar *unaff_R13;\n    int64_t unaff_R14;\n    uchar unaff_R15B;\n    bool bVar13;\n    uchar in_XMM15 [16];\n    \n    do {\n        uVar9 = in_R9;\n        cVar8 = in_R8;\n        puVar3 = *0x20 + -0x10;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= puVar3 && puVar3 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RSI + -2 < 0x23) {\n                *(*0x20 + -0x51) = in_XMM15;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x40) = in_XMM15;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x20) = in_XMM15;\n                if (cVar8 != '\\0') {\n                    unaff_RDI = -unaff_RDI;\n                }\n                if (unaff_RSI != 0xa) {\n                    if ((unaff_RSI & unaff_RSI + -1) != 0) {\n                        puVar4 = 0x41;\n                        while (unaff_RSI <= unaff_RDI) {\n                            puVar5 = unaff_RDI / unaff_RSI;\n                            uVar7 = unaff_RDI - puVar5 * unaff_RSI;\n                            puVar11 = in_RAX;\n                            if (0x23 < uVar7) goto code_r0x0045ff1c;\n                            uVar1 = *(uVar7 + 0x484724);\n                            puVar3 = uVar1;\n                            if (0x40 < puVar4 + -1) goto code_r0x0045ff12;\n                            (*0x20 + -0x52)[puVar4] = uVar1;\n                            puVar4 = puVar4 + -1;\n                            unaff_RDI = puVar5;\n                        }\n                        puVar11 = puVar4 + -1;\n                        puVar12 = unaff_RDI[0x484724];\n                        puVar5 = puVar4;\n                        if (0x40 < puVar11) goto code_r0x0045ff05;\n                        (*0x20 + -0x52)[puVar4] = unaff_RDI[0x484724];\n                        bVar13 = cVar8 == '\\0';\n                        goto code_r0x0045fdb2;\n                    }\n                    iVar2 = 0;\n                    if (unaff_RSI != NULL) {\n                        for (; (unaff_RSI >> iVar2 & 1) == 0; iVar2 = iVar2 + 1) {\n                        }\n                    }\n                    puVar5 = iVar2 & 7;\n                    puVar11 = unaff_RSI + -1;\n                    puVar12 = 0x41;\n                    goto code_r0x0045ff40;\n                }\n                puVar4 = 0x41;\n                puVar11 = unaff_RDI;\ncode_r0x0045ffc4:\n                uVar9 = in_R9;\n                cVar8 = in_R8;\n                if (puVar11 < 0x64) {\n                    unaff_RDI = puVar11;\n                    if (puVar11 * 2 + 1U < 200) {\n                        puVar3 = puVar4 + -1;\n                        puVar12 = 0x48682f;\n                        if (puVar3 < 0x41) {\n                            (*0x20 + -0x52)[puVar4] = *(puVar11 * 2 + 0x486830);\n                            if (puVar11 < 0xa) {\ncode_r0x004600eb:\n                                bVar13 = cVar8 == '\\0';\n                                puVar11 = puVar3;\ncode_r0x0045fdb2:\n                                do {\n                                    puVar5 = puVar11;\n                                    if (bVar13) {\ncode_r0x0045fdd5:\n                                        if (in_R9 == '\\0') {\n                                            if (puVar5 < 0x42) {\n                                                *(*0x20 + -0x98) = 0x45febe;\n                                                fcn.004473c0(-(puVar5 + -0x41));\n                                                return 0;\n                                            }\n                                            *(*0x20 + -0x98) = 0x45fee8;\n                                            fcn.00459aa0(0x41);\n                                        }\n                                        else if (puVar5 < 0x42) {\n                                            uVar7 = (unaff_RBX - puVar5) + 0x41;\n                                            *(*0x20 + -0x60) = uVar7;\n                                            puVar3 = puVar5 + -0x41;\n                                            if (arg1 < uVar7) {\n                                                *(*0x20 + -0x68) = puVar3;\n                                                *(*0x20 + -0x10) = *0x20 + ((puVar5 & puVar3 >> 0x3f) - 0x51);\n                                                *(*0x20 + 0x10) = unaff_RBX;\n                                                *(*0x20 + -0x98) = 0x45fe3b;\n                                                in_RAX = fcn.00443500(unaff_RBX);\n                                                puVar3 = *(*0x20 + -0x68);\n                                                arg1 = unaff_RBX;\n                                            }\n                                            *(*0x20 + -0x68) = arg1;\n                                            *(*0x20 + -0x10) = in_RAX;\n                                            *(*0x20 + -0x98) = 0x45fe72;\n                                            fcn.0045a340(-puVar3);\n                                            return *(*0x20 + -0x10);\n                                        }\n                                        *(*0x20 + -0x98) = 0x45fef5;\n                                        fcn.00459aa0(0x41);\n                                    }\n                                    else {\n                                        puVar5 = puVar11 + -1;\n                                        if (puVar5 < 0x41) {\n                                            (*0x20 + -0x52)[puVar11] = 0x2d;\n                                            goto code_r0x0045fdd5;\n                                        }\n                                    }\n                                    *(*0x20 + -0x98) = 0x45ff05;\n                                    fcn.004599e0(0x41);\ncode_r0x0045ff05:\n                                    puVar4 = puVar12;\n                                    *(*0x20 + -0x98) = 0x45ff12;\n                                    fcn.004599e0(0x41);\n                                    in_RAX = puVar11;\ncode_r0x0045ff12:\n                                    *(*0x20 + -0x98) = 0x45ff1c;\n                                    fcn.004599e0(0x41);\n                                    puVar11 = in_RAX;\ncode_r0x0045ff1c:\n                                    arg1 = 0x24;\n                                    *(*0x20 + -0x98) = 0x45ff29;\n                                    in_RAX = fcn.00459a00(0x24);\n                                    unaff_RDI = puVar3;\n                                    while( true ) {\n                                        puVar12 = unaff_R13;\n                                        (*0x20 + -0x52)[puVar4] = unaff_R15B;\n                                        unaff_RDI = unaff_RDI >> (puVar5 & 0x3f);\n                                        puVar3 = unaff_RDI;\n                                        unaff_R13 = puVar12;\ncode_r0x0045ff40:\n                                        if (unaff_RDI < unaff_RSI) break;\n                                        puVar4 = puVar12;\n                                        if (0x23 < (unaff_RDI & puVar11)) goto code_r0x0045ffa9;\n                                        unaff_R13 = puVar12 + -1;\n                                        unaff_R15B = *((unaff_RDI & puVar11) + 0x484724);\n                                        if (0x40 < unaff_R13) goto code_r0x0045ff9c;\n                                    }\n                                    puVar5 = puVar12 + -1;\n                                    puVar11 = unaff_RDI[0x484724];\n                                    if (0x40 < puVar5) goto code_r0x0045ff8f;\n                                    (*0x20 + -0x52)[puVar12] = unaff_RDI[0x484724];\n                                    bVar13 = in_R8 == '\\0';\n                                    puVar11 = puVar5;\n                                } while( true );\n                            }\n                            unaff_RDI = puVar11 << 1;\n                            if (unaff_RDI < 0xc8) {\n                                puVar3 = puVar4 + -2;\n                                if (puVar3 < 0x41) {\n                                    (*0x20 + -0x53)[puVar4] = *(puVar11 * 2 + 0x48682f);\n                                    goto code_r0x004600eb;\n                                }\n                                *(*0x20 + -0x98) = 0x460105;\n                                fcn.004599e0(0x41);\n                            }\n                            *(*0x20 + -0x98) = 0x460112;\n                            fcn.00459a00(200);\n                        }\n                        *(*0x20 + -0x98) = 0x46011f;\n                        fcn.004599e0(0x41);\n                    }\n                    *(*0x20 + -0x98) = 0x46012c;\n                    fcn.00459a00(200);\n                    in_RAX = unaff_RSI;\n                }\n                else {\n                    unaff_RDI = puVar11 >> 1;\n                    puVar5 = unaff_RDI / 0x32;\n                    puVar11 = puVar11 + puVar5 * -100;\n                    if (199 < puVar11 * 2 + 1U) goto code_r0x0046014f;\n                    uVar1 = *(puVar11 * 2 + 0x486830);\n                    unaff_R13 = uVar1;\n                    if (0x40 < puVar4 + -1) goto code_r0x00460145;\n                    (*0x20 + -0x52)[puVar4] = uVar1;\n                    if (199 < puVar11 * 2) goto code_r0x00460136;\n                    puVar3 = puVar4 + -2;\n                    uVar10 = *(puVar11 * 2 + 0x48682f);\n                    if (puVar3 < 0x41) goto code_r0x0045ffb6;\n                }\n                *(*0x20 + -0x98) = 0x460136;\n                fcn.004599e0(0x41);\ncode_r0x00460136:\n                *(*0x20 + -0x98) = 0x460145;\n                fcn.00459a00(200);\ncode_r0x00460145:\n                *(*0x20 + -0x98) = 0x46014f;\n                fcn.004599e0(0x41);\ncode_r0x0046014f:\n                arg1 = 200;\n                *(*0x20 + -0x98) = 0x460159;\n                fcn.00459a00(200);\n                unaff_RSI = in_RAX;\n            }\n            unaff_RBX = 0x4f0e18;\n            *(*0x20 + -0x98) = 0x46016c;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        puVar6[0x30] = cVar8;\n        puVar6[0x31] = uVar9;\n        *(puVar6 + -8) = 0x460195;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        in_R8 = puVar6[0x30];\n        in_R9 = puVar6[0x31];\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0045ff8f:\n    *(*0x20 + -0x98) = 0x45ff9c;\n    fcn.004599e0(0x41);\ncode_r0x0045ff9c:\n    *(*0x20 + -0x98) = 0x45ffa9;\n    fcn.004599e0(0x41);\n    puVar4 = puVar12;\ncode_r0x0045ffa9:\n    uVar10 = SUB81(puVar11, 0);\n    arg1 = 0x24;\n    *(*0x20 + -0x98) = 0x45ffb6;\n    puVar3 = fcn.00459a00(0x24);\n    in_RAX = unaff_RSI;\ncode_r0x0045ffb6:\n    (*0x20 + -0x53)[puVar4] = uVar10;\n    puVar4 = puVar3;\n    unaff_RSI = in_RAX;\n    puVar11 = puVar5;\n    goto code_r0x0045ffc4;\n}\n",
        "token_count": 3281
    },
    "0040fd60": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint64_t fcn.0040fd60(ulong arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar5;\n    \n    uVar4 = (unaff_RBX & 0xffffffff) + unaff_RSI >> 2;\n    uVar2 = uVar4 + in_RAX;\n    if (uVar2 <= unaff_RDI) {\n        return in_RAX + uVar4;\n    }\n    uVar2 = (uVar2 - unaff_RDI) - 1;\n    uVar1 = arg1 + (uVar2 >> 0x11) + 1;\n    uVar4 = uVar1 >> 0x14;\n    if (uVar4 < 0x40) {\n        iVar5 = *(uVar4 * 8 + 0x573fb0);\n        if ((iVar5 == 0) || (iVar5 = *(iVar5 + (uVar1 & 0xfffff) * 8),  iVar5 == 0)) {\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = (uVar2 & 0x1ffff) + iVar5;\n        }\n        return iVar5;\n    }\n    fcn.00459a00(0x40);\n    pcVar3 = swi(3);\n    iVar5 = (*pcVar3)();\n    return iVar5;\n}\n",
        "token_count": 358
    },
    "00410940": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid fcn.00410940(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    int32_t unaff_EBX;\n    uint uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = unaff_RDI;\n            uVar2 = (*(unaff_RSI + 0x20) << 0xd) >> 3;\n            if (unaff_EBX == 0) {\n                *(*0x20 + -0x28) = *(unaff_RSI + 0x68);\n                uVar3 = 0;\n                while (uVar2 != 0) {\n                    *(*0x20 + -0x38) = uVar2;\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x68) = 0x4109d0;\n                    uVar1 = fcn.0040fe40(arg1);\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x3c) = uVar3;\n                    *(*0x20 + -0x40) = arg1;\n                    *(*0x20 + -0x20) = unaff_RDI;\n                    *(*0x20 + -0x30) = uVar2;\n                    if (*(*0x20 + -0x28) == 8) {\n                        puVar4 = *(*0x20 + -0x10);\n                        for (uVar5 = 0; uVar5 < uVar2 >> 2; uVar5 = uVar5 + 1) {\n                            *puVar4 = 0xff;\n                            puVar4 = puVar4 + 1;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x68) = 0x410a10;\n                        fcn.0045a040();\n                    }\n                    in_RAX = *(*0x20 + -0x18);\n                    arg1 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x3c);\n                    unaff_RDI = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x38) - *(*0x20 + -0x30);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x410a45;\n            fcn.004317e0();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x68) = 0x410a56;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + 0x18) = unaff_RDI;\n        *(puVar4 + 0x20) = unaff_RSI;\n        *(puVar4 + -8) = 0x410a73;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x14);\n        unaff_RDI = *(puVar4 + 0x18);\n        unaff_RSI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 940
    },
    "0044e180": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e180(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044cd00(0);\n    }\n    fcn.0044cd00(0);\n    return;\n}\n",
        "token_count": 134
    },
    "00453360": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00453360(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar4 = 0;\n    iVar5 = 0;\n    while( true ) {\n        uVar1 = *(iVar4 + in_RAX + 1);\n        uVar3 = iVar4 * 7;\n        if (uVar3 < 0) {\n            fcn.0042fda0();\n            pcVar2 = swi(3);\n            iVar4 = (*pcVar2)();\n            return iVar4;\n        }\n        iVar5 = iVar5 + ((uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((uVar1 & 0x80) == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    if (iVar5 == 0) {\n        return 0;\n    }\n    return iVar4 + in_RAX + 2;\n}\n",
        "token_count": 293
    },
    "00453420": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.00453420(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if ((*in_RAX & 2) == 0) {\n        return NULL;\n    }\n    iVar5 = 0;\n    iVar7 = 0;\n    while( true ) {\n        uVar3 = iVar5 * 7;\n        if (uVar3 < 0) goto code_r0x0045350f;\n        iVar7 = iVar7 + ((in_RAX[iVar5 + 1] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n        if ((in_RAX[iVar5 + 1] & 0x80) == 0) break;\n        iVar5 = iVar5 + 1;\n    }\n    iVar6 = 0;\n    while( true ) {\n        iVar1 = iVar7 + iVar5 + iVar6;\n        if (iVar6 * 7 < 0) break;\n        if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n            return in_RAX + iVar1 + 3;\n        }\n        iVar6 = iVar6 + 1;\n    }\n    fcn.0042fda0();\ncode_r0x0045350f:\n    fcn.0042fda0();\n    pcVar2 = swi(3);\n    puVar4 = (*pcVar2)();\n    return puVar4;\n}\n",
        "token_count": 397
    },
    "00453520": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00453520(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint8_t *noname_0_00;\n    uint8_t *noname_1_00;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t noname_2_00;\n    uint64_t arg4_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00453654;\n                arg4_00 = -(uVar1 < 0x40);\n                iVar5 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & arg4_00) + iVar5;\n                if ((in_RAX[iVar3 + 1] & 0x80) == 0) break;\n                iVar3 = iVar3 + 1;\n            }\n            noname_2_00 = iVar5 + iVar3;\n            iVar3 = iVar5 + iVar3 + 2;\n            if ((*in_RAX & 2) == 0) goto code_r0x004535c2;\n            iVar3 = 0;\n            iVar5 = 0;\n            while( true ) {\n                arg4_00 = iVar3 * 7;\n                if (arg4_00 < 0) break;\n                iVar5 = iVar5 + ((in_RAX[noname_2_00 + iVar3 + 2] & 0x7f) << (arg4_00 & 0x3f) & -(arg4_00 < 0x40));\n                if ((in_RAX[noname_2_00 + iVar3 + 2] & 0x80) == 0) {\n                    iVar3 = iVar5 + iVar3 + noname_2_00 + 3;\ncode_r0x004535c2:\n                    *(*0x20 + -0xc) = 0;\n                    noname_0_00 = in_RAX + iVar3;\n                    noname_1_00 = *0x20 + -0xc;\n                    if (noname_1_00 != noname_0_00) {\n                        noname_0_00 = *(in_RAX + iVar3);\n                        *(*0x20 + -0xc) = *(in_RAX + iVar3);\n                    }\n                    *(*0x20 + -0x28) = 0x4535ec;\n                    fcn.00452c00();\n                    *(*0x20 + -0x28) = 0x4535f1;\n                    uVar2 = fcn.00453360(noname_0_00, noname_1_00, noname_2_00, arg4_00);\n                    return uVar2;\n                }\n                iVar3 = iVar3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x453654;\n            fcn.0042fda0();\ncode_r0x00453654:\n            *(*0x20 + -0x28) = 0x453659;\n            in_RAX = fcn.0042fda0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x453665;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 963
    },
    "0045ede0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.0045ede0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.0042fda0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 189
    },
    "00464060": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00464060(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    iVar2 = 0;\n    while( true ) {\n        if (iVar2 * 7 < 0) {\n            fcn.0042fda0();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n        if ((*(iVar2 + in_RAX + 1) & 0x80) == 0) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2 + in_RAX + 2;\n}\n",
        "token_count": 188
    },
    "0043f7c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.0043f7c0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x54e700;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e710 == 0) {\n                return 0;\n            }\n            if (*0x5a1b88 != 0) {\n                if (*0x5a1b88 == -1) {\n                    iVar1 = -*0x54e710;\n                }\n                else {\n                    iVar1 = *0x54e710 / *0x5a1b88;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x54e710 < iVar1 + 1) {\n                    iVar3 = *0x54e710;\n                }\n                if ((0 < unaff_EBX) && (unaff_EBX < iVar3)) {\n                    iVar3 = unaff_EBX;\n                }\n                if (0x80 < iVar3) {\n                    iVar3 = 0x80;\n                }\n                *0x54e710 = *0x54e710 - iVar3;\n                if ((*0x54e700 != 0) && (*0x54e700 = *(*0x54e700 + 0xa0),  *0x54e700 == 0)) {\n                    *0x54e708 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (iVar3 + -1 < 1) break;\n                    *(*0x20 + -0x1c) = iVar3 + -1;\n                    if ((*0x54e700 != 0) && (*0x54e700 = *(*0x54e700 + 0xa0),  *0x54e700 == 0)) {\n                        *0x54e708 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x43f887;\n                    fcn.0043fd40(0);\n                    iVar3 = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x43f8db;\n            in_RAX = fcn.0042fe00();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x43f8ea;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 770
    },
    "00449ae0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00449ae0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.00449220(*(in_RAX + 0x14));\n        iVar2 = fcn.00449220(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.00449a00(uVar1);\n            return uVar3;\n        }\n        return 0x47efc3;\n    }\n    return 0x47efc3;\n}\n",
        "token_count": 261
    },
    "00452ea0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00452ea0(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x53f2c0; iVar2 != 0; iVar2 = *(iVar2 + 0x220)) {\n                if ((*(iVar2 + 0x118) < in_RAX || *(iVar2 + 0x118) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x120) && *(iVar2 + 0x120) != in_RAX)) goto code_r0x00452efc;\n            }\n            iVar2 = 0;\ncode_r0x00452efc:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x452f7c;\n                fcn.00409aa0();\n                *(*0x20 + -0x58) = 0x452f93;\n                puVar1 = fcn.0040dca0(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x452faa;\n                fcn.00409cc0();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x452fb9;\n                fcn.004330a0();\n                *(*0x20 + -0x58) = 0x452fca;\n                fcn.004339a0();\n                *(*0x20 + -0x58) = 0x452fd6;\n                fcn.00433800();\n                *(*0x20 + -0x58) = 0x452fe7;\n                fcn.004339a0();\n                *(*0x20 + -0x58) = 0x452ff1;\n                fcn.00433800();\n                *(*0x20 + -0x58) = 0x453005;\n                fcn.004339a0();\n                *(*0x20 + -0x58) = 0x45300a;\n                fcn.00433120();\n                iVar2 = 0x53f2c0;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x118);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x120);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x45303f;\n                    fcn.004330a0();\n                    *(*0x20 + -0x58) = 0x453050;\n                    fcn.004339a0();\n                    *(*0x20 + -0x58) = 0x45305a;\n                    fcn.00433800();\n                    *(*0x20 + -0x58) = 0x45306b;\n                    fcn.004339a0();\n                    *(*0x20 + -0x58) = 0x453075;\n                    fcn.00433800();\n                    *(*0x20 + -0x58) = 0x45307a;\n                    fcn.00433300();\n                    *(*0x20 + -0x58) = 0x45307f;\n                    fcn.00433120();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x220);\n                }\n                *(*0x20 + -0x58) = 0x4530a5;\n                fcn.004317e0();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x452f25;\n                puVar1 = fcn.0040dca0(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x118);\n                uVar3 = *(*(*0x20 + -0x10) + 0x120);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x4530b4;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x4530c5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x4530d1;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x4530e5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x4530ef;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x453105;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x45310f;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x453114;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x453119;\n            fcn.00433120();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x45312a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x453139;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "0041eb40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.0041eb40(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = *in_RAX;\n    uVar8 = uVar6;\n    if (uVar6 < 0) {\n        uVar8 = -uVar6;\n    }\n    if (*0x53a388 == uVar8 - 0x800000000000) {\n        return 0;\n    }\n    uVar9 = uVar8 >> 0x19;\n    while( true ) {\n        iVar7 = uVar9;\n        if (iVar7 < *(in_RAX + 4)) {\n            do {\n                uVar6 = *in_RAX;\n                if (uVar6 < 0) {\n                    return 0;\n                }\n                LOCK();\n                uVar8 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar6 == uVar8) * (*in_RAX ^ *0x53a388 + 0x800000000000U);\n            } while (uVar6 != uVar8);\n            return 0;\n        }\n        if (in_RAX[2] <= iVar7) break;\n        uVar2 = *(in_RAX[1] + iVar7);\n        if (uVar2 != 0) {\n            uVar1 = uVar2 + uVar2 + 1;\n            uVar4 = 0x1f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> uVar4 == 0; uVar4 = uVar4 - 1) {\n                }\n            }\n            uVar9 = (uVar4 + iVar7 * 8) - 1;\n            if (uVar9 != uVar8 >> 0x16) {\n                if (uVar6 < 0) {\n                    LOCK();\n                    *in_RAX = *in_RAX ^ (-*in_RAX == uVar8) * (*in_RAX ^ uVar9 * 0x400000 + 0x3fe000);\n                }\n                else {\n                    uVar6 = uVar9 * 0x400000 + 0x3fe000;\n                    do {\n                        uVar8 = *in_RAX;\n                        if (uVar8 < uVar6) {\n                            return uVar9;\n                        }\n                        LOCK();\n                        uVar3 = *in_RAX;\n                        *in_RAX = *in_RAX ^ (uVar8 == uVar3) * (*in_RAX ^ uVar6);\n                    } while (uVar8 != uVar3);\n                }\n                return uVar9;\n            }\n            return uVar9;\n        }\n        uVar9 = iVar7 - 1;\n    }\n    fcn.004599e0(in_RAX[2]);\n    pcVar5 = swi(3);\n    uVar6 = (*pcVar5)();\n    return uVar6;\n}\n",
        "token_count": 705
    },
    "00422a40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00422a40(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00422b19:\n        fcn.00459a00(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10190 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.00459a00(0x40);\n                goto code_r0x00422b19;\n            }\n            iVar3 = *(*(in_RAX + 0x10190 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x20000 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 453
    },
    "00422b40": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.00422b40(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10190 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x210c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x210c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x210c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x422c4c;\n                        fcn.004317e0();\n                        goto code_r0x00422c4c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x00422c4c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x422c59;\n            in_RAX = fcn.00459a00(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x422c6e;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 906
    },
    "00424d60": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.00424d60(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar10;\n            uVar11 = uVar10 >> 0x16;\n            *(*0x20 + -0x28) = uVar11;\n            uVar9 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar9;\n            uVar9 = uVar9 >> 0x16;\n            if (uVar9 == uVar11) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                uVar7 = unaff_RBX;\n                if (uVar5 <= uVar11) goto code_r0x00425185;\n                noname_1 = *(noname_1 + uVar11 * 8);\n                if (0x1fff < uVar10 >> 0x23) goto code_r0x00425178;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x424f6f;\n                iVar1 = fcn.004282a0(iVar1 + (uVar11 & 0x1fff) * 0x80, noname_1, uVar9);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar11 = *(iVar6 + 0x68);\n                uVar9 = *(iVar6 + 0x60);\n                if (uVar11 <= *(*0x20 + -0x28)) goto code_r0x00425170;\n                *(uVar9 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00424fb2;\n            }\n            *(*0x20 + -0x38) = uVar9;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar10 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x424e5f;\n                    uVar2 = fcn.004282a0(iVar1 + (uVar11 & 0x1fff) * 0x80, uVar5, uVar9);\n                    uVar11 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar11) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar11 = *(unaff_RDI + 0x70);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        if (unaff_RBX <= uVar11) {\n                            if (uVar5 + 1 <= unaff_RBX) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar11 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                uVar7 = (unaff_RBX - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (uVar7 == 0) goto code_r0x0042518d;\n                                    uVar7 = uVar7 * 8;\n                                    *(*0x20 + -0xc0) = 0x424efd;\n                                    fcn.0045a040();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x38);\n                                    goto code_r0x0042518d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00425216;\n                            }\n                            *(*0x20 + -0xc0) = 0x42522d;\n                            fcn.00459ac0(unaff_RBX);\n                        }\n                        uVar5 = uVar11;\n                        *(*0x20 + -0xc0) = 0x425238;\n                        uVar11 = unaff_RBX;\n                        fcn.00459a80(unaff_RBX, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x425245;\n                    fcn.00459a00(uVar11);\n                }\n                uVar11 = 0x2000;\n                *(*0x20 + -0xc0) = 0x425252;\n                uVar2 = fcn.00459a00(0x2000);\n                goto code_r0x00425252;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar9 < uVar11) goto code_r0x004251e3;\n                if (0x1fff < uVar11 >> 0xd) goto code_r0x004252d9;\n                *(*0x20 + -0x50) = uVar11;\n                iVar1 = *(in_RAX + 0x78 + (uVar11 >> 0xd) * 8);\n                iVar6 = (uVar11 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x4252bf;\n                uVar2 = fcn.004282a0(iVar1 + iVar6, iVar6, uVar9);\n                uVar11 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar11) break;\ncode_r0x00425252:\n                *(*(*0x20 + -0x18) + uVar11 * 8) = uVar2;\n                uVar11 = uVar11 + 1;\n                uVar9 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x4252d9;\n            fcn.00459a00(uVar5);\ncode_r0x004252d9:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x4252e6;\n            in_RAX = fcn.00459a00(0x2000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        puVar8[0x20] = unaff_RDI;\n        puVar8[0x21] = unaff_SIL;\n        *(puVar8 + -8) = 0x425305;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = puVar8[0x20];\n        unaff_SIL = puVar8[0x21];\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x004251e3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00424fb2:\n    uVar10 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00424fd7:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar11 = *(iVar1 * 8 + 0x53b740);\n    uVar9 = -(uVar11 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x53b6c8);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x53b708);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar11;\n    uVar11 = uVar10 >> (uVar4 & 0x3f) & uVar9;\n    iVar12 = (unaff_RBX >> (uVar4 & 0x3f) & uVar9) + 1;\n    *(*0x20 + -0x58) = iVar12;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar12 <= uVar11) goto code_r0x00424fce;\n        *(*0x20 + -0x60) = uVar11;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar9 = uVar11 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar11 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar11) break;\n        if (uVar11 < uVar9) {\ncode_r0x00425157:\n            *(*0x20 + -0xc0) = 0x425165;\n            fcn.00459aa0(uVar11);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar9;\n        unaff_RBX = uVar11 - uVar9;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x42510d;\n        uVar11 = unaff_RBX;\n        iVar12 = fcn.00426ae0(iVar1, uVar10, uVar9 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar10 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar9 = *(*0x20 + -0x60);\n        if (uVar10 <= uVar9) {\n            *(*0x20 + -0xc0) = 0x425157;\n            fcn.004599e0(uVar10);\n            goto code_r0x00425157;\n        }\n        if (*(iVar1 + uVar9 * 8) == iVar12) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar9 * 8) = iVar12;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar12 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar11 = *(*0x20 + -0x40);\n        uVar10 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x425170;\n    fcn.00459a60(uVar11, noname_1);\ncode_r0x00425170:\n    *(*0x20 + -0xc0) = 0x425178;\n    fcn.00459a00(uVar11);\ncode_r0x00425178:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x425185;\n    fcn.00459a00(0x2000);\n    uVar7 = unaff_RBX;\ncode_r0x00425185:\n    unaff_RBX = uVar9;\n    *(*0x20 + -0xc0) = 0x42518d;\n    fcn.00459a00(uVar5);\ncode_r0x0042518d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            unaff_RBX = (unaff_RBX & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x4251c5;\n            uVar2 = fcn.004282a0(uVar2, noname_1, unaff_RBX);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x004251d7;\n            *(*0x20 + -0xc0) = 0x4251f8;\n            fcn.00459a00(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x425205;\n        iVar1 = fcn.00459a00(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00425216:\n        } while (noname_1 < uVar7);\n    } while( true );\ncode_r0x00424fce:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00424fd7;\ncode_r0x004251d7:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x004251e3;\n}\n",
        "token_count": 3714
    },
    "00439860": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.00439860(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar3 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar3) break;\n                if ((*(unaff_RDI + uVar3 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar4 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar4 = false;\n                }\n                if (bVar4) {\n                    *(*0x20 + -0x28) = 0x439915;\n                    fcn.00409aa0();\n                    *(*0x20 + -0x28) = 0x43991c;\n                    uVar2 = fcn.0043fba0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43992f;\n                    fcn.00409cc0();\n                    if (*(*0x20 + -0x10) == 0) {\n                        return 0;\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43994d;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.004599e0(unaff_RSI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + 0x28) = unaff_RSI;\n        *(puVar5 + 0x30) = arg3;\n        *(puVar5 + -8) = 0x439971;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        unaff_RSI = *(puVar5 + 0x28);\n        arg3 = *(puVar5 + 0x30);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 864
    },
    "004399a0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.004399a0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1208);\n            iVar6 = *(iVar3 + 0x1210);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.004599e0(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0040a740": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040a740(void)\n\n{\n    uint64_t *puVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t *arg2;\n    uint64_t *puVar10;\n    uint64_t uVar11;\n    uint64_t in_R11;\n    ulong uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    \ncode_r0x0040a740:\n    puVar9 = *0x20;\n    uVar2 = in_R11;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n        puVar9 = *0x20 + -0xa8;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        uVar8 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n        *(*0x20 + -0x78) = uVar8;\n        *(*0x20 + -0xb0) = 0x40a79f;\n        uVar2 = fcn.0040c2e0(0x400000);\n        if (uVar2 != 0) {\n            uVar7 = *(*0x20 + -0x78);\n            goto code_r0x0040a7bc;\n        }\n        arg2 = *(*0x20 + 8);\n        uVar8 = *(*0x20 + -0x78);\n        do {\n            puVar10 = arg2[0x2076];\n            if (puVar10 == NULL) {\n                uVar7 = 0;\ncode_r0x0040ac15:\n                if (uVar7 == 0) {\n                    *(*0x20 + -0xb0) = 0x40ac2d;\n                    iVar4 = fcn.0040ae60(0x400000);\n                    if (iVar4 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x38) = uVar8;\n                    *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16ba8;\n                    *(*0x20 + -0xb0) = 0x40ac65;\n                    puVar5 = fcn.00414360();\n                    *puVar5 = *(*0x20 + -0x10);\n                    *(puVar5 + 1) = 1;\n                    puVar5[2] = *0x5741d0;\n                    *(*0x20 + -0xb0) = 0x40ac93;\n                    *0x5741d0 = puVar5;\n                    piVar6 = fcn.00414360();\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar7 = *(*0x20 + -0x38);\n                    *piVar6 = uVar7 + uVar2;\n                    piVar6[2] = *0x5741d0;\n                    *0x5741d0 = piVar6;\n                }\n                uVar11 = uVar7 + uVar2;\n                if (uVar11 < uVar2) {\n                    iVar4 = 0x1c;\n                    uVar12 = 0x48347b;\n                }\n                else if (uVar2 + 0x800000000000 >> 0x16 < 0x4000000) {\n                    bVar13 = 0x3ffffff < uVar11 + 0x7fffffffffff >> 0x16;\n                    iVar4 = 0;\n                    if (bVar13) {\n                        iVar4 = 0x20;\n                    }\n                    uVar12 = 0;\n                    if (bVar13) {\n                        uVar12 = 0x483deb;\n                    }\n                }\n                else {\n                    iVar4 = 0x21;\n                    uVar12 = 0x48410d;\n                }\n                if (iVar4 != 0) goto code_r0x0040ad99;\n                uVar8 = uVar7;\n                in_R11 = uVar2;\n                if ((uVar2 & 0x3fffff) != 0) goto code_r0x0040ad88;\ncode_r0x0040a7bc:\n                *(*0x20 + -0x10) = uVar2;\n                *(*0x20 + -0x38) = uVar7;\n                arg2 = uVar2 + 0x800000000000 >> 0x16;\n                puVar3 = *(*0x20 + 8);\n                while( true ) {\n                    if (uVar2 + uVar7 + 0x7fffffffffff >> 0x16 < arg2) {\n                        return uVar2;\n                    }\n                    puVar10 = arg2 >> 0x14;\n                    uVar2 = in_R11;\n                    if (0x3f < puVar10) goto code_r0x0040aac7;\n                    *(*0x20 + -0x40) = arg2;\n                    uVar2 = puVar3[puVar10 + 0x2032];\n                    puVar10 = puVar3 + puVar10 + 0x2032;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x18) = puVar10;\n                        *(*0x20 + -0xa8) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0xa0) = 0;\n                        *(*0x20 + -0x98) = 0x800000;\n                        *(*0x20 + -0x90) = 0x3000;\n                        *(*0x20 + -0x88) = 4;\n                        *(*0x20 + -0xb0) = 0x40a8a8;\n                        fcn.0042eca0();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        uVar2 = *(*0x20 + -0x80);\n                        if (uVar2 == 0) goto code_r0x0040aab6;\n                        **(*0x20 + -0x18) = uVar2;\n                        puVar3 = *(*0x20 + 8);\n                        arg2 = *(*0x20 + -0x40);\n                    }\n                    uVar8 = arg2 & 0xfffff;\n                    in_R11 = *(uVar2 + uVar8 * 8);\n                    arg2 = uVar2 + uVar8 * 8;\n                    if (in_R11 != 0) goto code_r0x0040aaa5;\n                    *(*0x20 + -0x20) = arg2;\n                    arg2 = puVar3 + 0x2072;\n                    uVar8 = 0x210d0;\n                    *(*0x20 + -0xb0) = 0x40a93e;\n                    iVar4 = fcn.0040c2e0(8);\n                    if (iVar4 == 0) {\n                        uVar8 = 8;\n                        *(*0x20 + -0xb0) = 0x40a95b;\n                        iVar4 = fcn.0040bf00(0x5a4678);\n                        puVar3 = puVar10;\n                        if (iVar4 == 0) goto code_r0x0040aa90;\n                    }\n                    puVar3 = *(*0x20 + 8);\n                    uVar2 = puVar3[0x207d];\n                    if (puVar3[0x207c] == uVar2) {\n                        *(*0x20 + -0x68) = iVar4;\n                        iVar4 = uVar2 << 4;\n                        if (iVar4 == 0) {\n                            iVar4 = *0x5a1cd8;\n                        }\n                        *(*0x20 + -0x70) = iVar4;\n                        *(*0x20 + -0xb0) = 0x40a9bb;\n                        uVar2 = fcn.0040bf00(0x5a4678);\n                        if (uVar2 == 0) goto code_r0x0040aa7f;\n                        puVar3 = *(*0x20 + 8);\n                        uVar8 = puVar3[0x207b];\n                        puVar3[0x207b] = uVar2;\n                        puVar3[0x207d] = *(*0x20 + -0x70) >> 3;\n                        uVar2 = puVar3[0x207c];\n                        if (puVar3[0x207c] < puVar3[0x207c]) {\n                            uVar2 = puVar3[0x207c];\n                        }\n                        if (puVar3[0x207b] != uVar8) {\n                            *(*0x20 + -0xb0) = 0x40aa19;\n                            fcn.0045a340(uVar2 << 3);\n                            puVar3 = *(*0x20 + 8);\n                        }\n                        iVar4 = *(*0x20 + -0x68);\n                    }\n                    puVar1 = puVar3[0x207c];\n                    arg2 = puVar3[0x207d];\n                    puVar10 = puVar1 + 1;\n                    if (arg2 < puVar10) goto code_r0x0040aa77;\n                    puVar3[0x207c] = puVar10;\n                    arg2 = puVar3[0x207b];\n                    if (puVar10 <= puVar1) break;\n                    uVar2 = *(*0x20 + -0x40);\n                    arg2[puVar1] = uVar2;\n                    **(*0x20 + -0x20) = iVar4;\n                    arg2 = uVar2 + 1;\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar7 = *(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb0) = 0x40aa77;\n                fcn.004599e0(puVar10);\ncode_r0x0040aa77:\n                *(*0x20 + -0xb0) = 0x40aa7f;\n                fcn.00459a60(puVar10, arg2);\ncode_r0x0040aa7f:\n                *(*0x20 + -0xb0) = 0x40aa90;\n                fcn.004317e0();\ncode_r0x0040aa90:\n                *(*0x20 + -0xb0) = 0x40aaa5;\n                fcn.004317e0();\n                puVar10 = puVar3;\ncode_r0x0040aaa5:\n                *(*0x20 + -0xb0) = 0x40aab6;\n                fcn.004317e0();\ncode_r0x0040aab6:\n                uVar8 = 0x27;\n                *(*0x20 + -0xb0) = 0x40aac7;\n                fcn.004317e0();\n                uVar2 = in_R11;\ncode_r0x0040aac7:\n                *(*0x20 + -0xb0) = 0x40aad4;\n                fcn.00459a00(0x40);\n            }\n            else {\n                *(*0x20 + -0x48) = puVar10;\n                uVar7 = *puVar10;\n                if (*(puVar10 + 1) != '\\0') {\n                    uVar7 = *puVar10 - uVar8;\n                }\n                uVar11 = uVar8 + uVar7;\n                if (uVar11 < uVar7) {\n                    uVar2 = 0;\n                }\n                else if (uVar11 + 0x7fffffffffff >> 0x16 < 0x4000000) {\n                    *(*0x20 + -0x58) = uVar7;\n                    *(*0x20 + -0x38) = uVar11;\n                    *(*0x20 + -0xb0) = 0x40ab7f;\n                    uVar2 = fcn.00413e40();\n                    arg2 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar11 = *(*0x20 + -0x38);\n                    uVar7 = *(*0x20 + -0x58);\n                }\n                else {\n                    uVar2 = 0;\n                }\n                if (uVar2 == uVar7) {\n                    if (*(puVar10 + 1) != '\\0') {\n                        uVar11 = uVar7;\n                    }\n                    *puVar10 = uVar11;\n                    uVar7 = uVar8;\n                    goto code_r0x0040ac15;\n                }\n                if (uVar2 != 0) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb0) = 0x40abc6;\n                    fcn.00413d00();\n                    arg2 = *(*0x20 + 8);\n                    uVar8 = *(*0x20 + -0x78);\n                    puVar10 = *(*0x20 + -0x48);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n            }\n            arg2[0x2076] = puVar10[2];\n            arg2[0x2d7b] = arg2[0x2d7b] - arg2[0x2d75];\n            *puVar10 = arg2[0x2d78];\n            arg2[0x2d78] = puVar10;\n        } while( true );\n    }\n    goto code_r0x0040ae30;\ncode_r0x0040ad88:\n    *(*0x20 + -0xb0) = 0x40ad99;\n    fcn.004317e0();\ncode_r0x0040ad99:\n    *(*0x20 + -0x60) = uVar2;\n    *(*0x20 + -0x38) = uVar11;\n    *(*0x20 + -0x30) = uVar12;\n    *(*0x20 + -0x50) = iVar4;\n    *(*0x20 + -0xb0) = 0x40adb2;\n    fcn.004330a0();\n    *(*0x20 + -0xb0) = 0x40adc5;\n    fcn.004339a0();\n    *(*0x20 + -0xb0) = 0x40adcf;\n    fcn.00433800();\n    *(*0x20 + -0xb0) = 0x40ade5;\n    fcn.004339a0();\n    *(*0x20 + -0xb0) = 0x40adef;\n    fcn.00433800();\n    *(*0x20 + -0xb0) = 0x40ae05;\n    fcn.004339a0();\n    *(*0x20 + -0xb0) = 0x40ae14;\n    fcn.004339a0();\n    *(*0x20 + -0xb0) = 0x40ae19;\n    fcn.00433300();\n    *(*0x20 + -0xb0) = 0x40ae1e;\n    fcn.00433120();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xb0) = 0x40ae2f;\n    in_RAX = fcn.004317e0();\ncode_r0x0040ae30:\n    *(puVar9 + 8) = in_RAX;\n    *(puVar9 + 0x10) = unaff_RBX;\n    *(puVar9 + -8) = 0x40ae3f;\n    fcn.00457320();\n    in_RAX = *(puVar9 + 8);\n    unaff_RBX = *(puVar9 + 0x10);\n    *0x20 = puVar9;\n    in_R11 = uVar2;\n    goto code_r0x0040a740;\n}\n",
        "token_count": 3702
    },
    "0041ad80": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.0041ad80(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x0041ad80:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x0041ae19:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x41ae7c;\n                    iVar3 = fcn.00422040();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x88) < arg3 || *(iVar3 + 0x88) == arg3) &&\n                           ((1 << (uVar4 >> 0x20 & 7) & *((uVar4 >> 0x23) + *(iVar3 + 0x48))) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x41af18;\n                            fcn.0041b040(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x41ae4c;\n                    fcn.0041eea0(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *(arg1 + (uVar4 >> 6));\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x0041af68;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x0041ae19;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x0041af7a;\ncode_r0x0041af68:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x41af79;\n    in_RAX = fcn.004317e0();\ncode_r0x0041af7a:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x41af98;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x0041ad80;\n}\n",
        "token_count": 1520
    },
    "004336a0": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004336a0(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x4336ef;\n            uVar1 = fcn.00459c6b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x43375f;\n                fcn.00433180(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x43377c;\n            in_RAX = fcn.00459aa0(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x433787;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "00463e80": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nulong fcn.00463e80(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x47efbf;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x00463f93;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0046403d;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x00463ffa;\n            *(*0x20 + -0x80) = 0x46403d;\n            fcn.004599e0(0x14);\ncode_r0x0046403d:\n            *(*0x20 + -0x80) = 0x46404a;\n            in_RAX = fcn.004599e0(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x464055;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x00463f0d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x00463f40;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x00463f86;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x00463f0d;\ncode_r0x00463ffa:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x464025;\n    fcn.004473c0(-(uVar4 - 0x14));\n    goto code_r0x00463f93;\ncode_r0x00463f40:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x463f6e;\n        uVar3 = fcn.004473c0(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x463f86;\n    fcn.004599e0(0x14);\ncode_r0x00463f86:\n    *(*0x20 + -0x80) = 0x463f93;\n    fcn.004599e0(0x14);\ncode_r0x00463f93:\n    *(*0x20 + -0x80) = 0x463fac;\n    uVar3 = fcn.00447020(1);\n    return uVar3;\n}\n",
        "token_count": 1022
    },
    "00403e00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00403e00(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t unaff_RSI;\n    int64_t iVar9;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ba20();\n        iStackX8 = in_RAX;\n    }\n    uVar8 = *(in_RAX + 8);\n    if (uVar8 == 0) {\n        return;\n    }\n    if (uVar8 <= arg1) {\n        return;\n    }\n    if (uVar8 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar8 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) == 0) {\n        fcn.00403d20(arg1);\n        return;\n    }\n    uVar7 = *(in_RAX + 0x17) & 0x1f;\n    uVar8 = uVar7;\n    cVar6 = uVar7;\n    if (cVar6 == '\\x11') {\n        iStackX8 = in_RAX;\n        for (uVar8 = 0; uVar8 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar8; uVar8 = uVar8 + 1) {\n            if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                fcn.00403e00(arg1);\n                in_RAX = iStackX8;\n            }\n            uVar4 = **(in_RAX + 0x30);\n            uVar5 = arg1;\n            if (uVar4 < arg1) {\n                uVar5 = uVar4;\n            }\n            unaff_RSI = uVar4 - uVar5;\n            arg1 = arg1 - uVar5;\n            if (unaff_RDI <= unaff_RSI) {\n                return;\n            }\ncode_r0x00403f65:\n            unaff_RDI = unaff_RDI - unaff_RSI;\n        }\n    }\n    else {\n        if (cVar6 != '\\x19') {\n            in_RAX = fcn.004317e0();\n            arg1 = in_R8;\n            goto code_r0x00403f65;\n        }\n        iVar1 = *(in_RAX + 0x40);\n        iVar9 = *(in_RAX + 0x38);\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            while( true ) {\n                puVar2 = *(iVar9 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00403e00(arg1);\n                }\n                uVar8 = *puVar2;\n                uVar4 = arg1;\n                if (uVar8 < arg1) {\n                    uVar4 = uVar8;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar8 - uVar4) {\n                    return;\n                }\n                iVar3 = iVar3 + 1;\n                unaff_RDI = unaff_RDI - (uVar8 - uVar4);\n                if (iVar1 <= iVar3) break;\n                iVar9 = iVar9 + 0x18;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 881
    },
    "0040bda0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040bda0(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x53dd80);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x4f0b78 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x53dd88) - dVar5)) - *0x4f0be0;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x4f0c30 + 1;\n    }\n    fcn.00459a00(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 510
    },
    "0044a420": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a420(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    bool bVar14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar9 = (*(unaff_RBX + 0x17) & 0x1f) - 1;\n            *(*0x20 + 8) = in_RAX;\n            switch(iVar9) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xb:\n            case 0x15:\n            case 0x19:\n                uVar1 = *unaff_RBX;\n                iVar9 = in_RAX[6];\n                bVar14 = SBORROW8(*0x53a358, iVar9);\n                iVar7 = *0x53a358 - iVar9;\n                bVar13 = *0x53a358 == iVar9;\n                if (iVar9 < *0x53a358) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar1;\n                    iVar8 = in_RAX[1];\n                    uVar11 = iVar8 + 1;\n                    iVar2 = *in_RAX;\n                    iVar7 = iVar2;\n                    iVar12 = *0x53a358;\n                    if (in_RAX[2] < uVar11) {\n                        *(*0x20 + -0x60) = iVar9;\n                        *(*0x20 + -0x68) = *0x53a358;\n                        *(*0x20 + -0xb8) = 0x44a645;\n                        iVar7 = fcn.00443500(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x5a1da0 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44a665;\n                            iVar7 = fcn.00459540(iVar8, uVar11, iVar9, iVar12);\n                        }\n                        iVar9 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                        iVar8 = iVar2;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x30);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar3 = *(*0x20 + -0x24);\n                    uVar4 = *(*0x20 + -0x20);\n                    uVar5 = *(*0x20 + -0x1c);\n                    *(iVar7 + 8) = *(*0x20 + -0x28);\n                    *(iVar7 + 0xc) = uVar3;\n                    *(iVar7 + 0x10) = uVar4;\n                    *(iVar7 + 0x14) = uVar5;\n                    uVar3 = *(*0x20 + -0x14);\n                    uVar4 = *(*0x20 + -0x10);\n                    uVar5 = *(*0x20 + -0xc);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x18);\n                    *(iVar7 + 0x1c) = uVar3;\n                    *(iVar7 + 0x20) = uVar4;\n                    *(iVar7 + 0x24) = uVar5;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar9);\n                    iVar7 = iVar12 - iVar9;\n                    bVar13 = iVar12 == iVar9;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar7 < 0);\n            case 5:\n            case 10:\n                uVar1 = *unaff_RBX;\n                iVar9 = in_RAX[6];\n                bVar14 = SBORROW8(*0x53a358, iVar9);\n                iVar7 = *0x53a358 - iVar9;\n                bVar13 = *0x53a358 == iVar9;\n                if (iVar9 < *0x53a358) {\n                    *(*0x20 + -0x58) = in_XMM15;\n                    *(*0x20 + -0x50) = in_XMM15;\n                    *(*0x20 + -0x40) = in_XMM15;\n                    *(*0x20 + -0x58) = 2;\n                    *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x40) = in_RAX[6];\n                    *(*0x20 + -0x38) = uVar1;\n                    iVar8 = in_RAX[1];\n                    uVar11 = iVar8 + 1;\n                    iVar2 = *in_RAX;\n                    iVar7 = iVar2;\n                    iVar12 = *0x53a358;\n                    if (in_RAX[2] < uVar11) {\n                        *(*0x20 + -0x60) = iVar9;\n                        *(*0x20 + -0x68) = *0x53a358;\n                        *(*0x20 + -0xb8) = 0x44a4ee;\n                        iVar7 = fcn.00443500(iVar8);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = iVar8;\n                        if (*0x5a1da0 == 0) {\n                            *in_RAX = iVar7;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x44a50d;\n                            iVar7 = fcn.00459540(iVar8, uVar11, iVar9, iVar12);\n                        }\n                        iVar9 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                        iVar8 = iVar2;\n                    }\n                    in_RAX[1] = iVar8 + 1;\n                    *(iVar7 + iVar8 * 0x28) = *(*0x20 + -0x58);\n                    iVar7 = iVar7 + iVar8 * 0x28;\n                    uVar3 = *(*0x20 + -0x4c);\n                    uVar4 = *(*0x20 + -0x48);\n                    uVar5 = *(*0x20 + -0x44);\n                    *(iVar7 + 8) = *(*0x20 + -0x50);\n                    *(iVar7 + 0xc) = uVar3;\n                    *(iVar7 + 0x10) = uVar4;\n                    *(iVar7 + 0x14) = uVar5;\n                    uVar3 = *(*0x20 + -0x3c);\n                    uVar4 = *(*0x20 + -0x38);\n                    uVar5 = *(*0x20 + -0x34);\n                    *(iVar7 + 0x18) = *(*0x20 + -0x40);\n                    *(iVar7 + 0x1c) = uVar3;\n                    *(iVar7 + 0x20) = uVar4;\n                    *(iVar7 + 0x24) = uVar5;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar9);\n                    iVar7 = iVar12 - iVar9;\n                    bVar13 = iVar12 == iVar9;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar7 < 0);\n            case 0x10:\n                if (unaff_RBX[8] == 1) {\n                    *(*0x20 + -0xb8) = 0x44a57c;\n                    uVar11 = fcn.0044a420(arg1);\n                    return uVar11;\n                }\n                break;\n            case 0x18:\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar9 = unaff_RBX[8];\n                *(*0x20 + -0x60) = iVar9;\n                uVar11 = 0;\n                while( true ) {\n                    if (iVar9 <= uVar11) {\n                        return 1;\n                    }\n                    iVar7 = unaff_RBX[7];\n                    arg1_00 = unaff_RBX[8];\n                    if (arg1_00 <= uVar11) break;\n                    *(*0x20 + -0x70) = uVar11;\n                    iVar9 = *(iVar7 + 0x10 + uVar11 * 0x18);\n                    *(*0x20 + -0xb8) = 0x44a725;\n                    cVar6 = fcn.0044a420(iVar9 + arg1);\n                    if (cVar6 == '\\0') {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x70) + 1;\n                    iVar9 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0xb8) = 0x44a75b;\n                fcn.004599e0(arg1_00);\n            }\n            *(*0x20 + -0xb8) = 0x44a765;\n            fcn.00452a40();\n            arg1 = 0x16;\n            *(*0x20 + -0xb8) = 0x44a78b;\n            fcn.004470c0(0x16, iVar9, 0x48623f, 0x37);\n            *(*0x20 + -0xb8) = 0x44a790;\n            unaff_RBX = fcn.00409580();\n            *(*0x20 + -0xb8) = 0x44a79f;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x44a7b4;\n        fcn.00457320();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2727
    },
    "00452ae0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.00452ae0(void)\n\n{\n    int64_t in_RAX;\n    \n    if ((*(in_RAX + 0x14) & 1) != 0) {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            return in_RAX + 0x48;\n        case 0x12:\n            return in_RAX + 0x40;\n        case 0x13:\n            return in_RAX + 0x38;\n        case 0x14:\n            return in_RAX + 0x50;\n        case 0x15:\n            return in_RAX + 0x58;\n        case 0x16:\n            return in_RAX + 0x38;\n        case 0x17:\n            return in_RAX + 0x38;\n        default:\n            return in_RAX + 0x30;\n        case 0x19:\n            return in_RAX + 0x50;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00453c60": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.00453c60(uint32_t *arg1)\n\n{\n    uint16_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    ulong in_RAX;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    uint64_t uVar16;\n    int64_t in_R8;\n    uint64_t in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa0 && *0x20 + -0xa0 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x120;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x128) = 0x453cc8;\n            fcn.0040cba0(*0x20 + -0x18);\n            if (arg1 != '\\0') {\n                return 1;\n            }\n            *(*0x20 + -0x18) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x128) = 0x453d0c;\n            fcn.0040cde0(*0x20 + -0x18);\n            iVar14 = *(*0x20 + 0x10);\n            if (*(*0x20 + 8) == iVar14) {\n                return 1;\n            }\n            uVar3 = *(*(*0x20 + 8) + 0x17);\n            if ((*(iVar14 + 0x17) & 0x1f) != (uVar3 & 0x1f)) {\n                return 0;\n            }\n            *(*0x20 + -0x105) = uVar3;\n            *(*0x20 + -0x106) = uVar3 & 0x1f;\n            *(*0x20 + -0x128) = 0x453d56;\n            uVar8 = fcn.00452a40();\n            *(*0x20 + -0x28) = uVar8;\n            *(*0x20 + -0xb8) = uVar3;\n            *(*0x20 + -0x128) = 0x453d70;\n            iVar9 = fcn.00452a40();\n            if (uVar3 != *(*0x20 + -0xb8)) {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x453d8a;\n            cVar7 = fcn.004025a0(*(*0x20 + -0xb8), iVar14);\n            if (cVar7 == '\\0') {\n                return 0;\n            }\n            *(*0x20 + -0x128) = 0x453dae;\n            uVar8 = fcn.00452ae0();\n            *(*0x20 + -0x80) = uVar8;\n            *(*0x20 + -0x128) = 0x453dc5;\n            iVar10 = fcn.00452ae0();\n            arg1 = *(*0x20 + -0x80);\n            if (arg1 == NULL) {\n                if (iVar10 != 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (iVar10 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x88) = iVar10;\n                uVar6 = *arg1;\n                *(*0x20 + -0x128) = 0x453e13;\n                fcn.00452c00();\n                *(*0x20 + -0x128) = 0x453e18;\n                uVar8 = fcn.00453360(arg1, iVar14, in_R8, in_R9);\n                *(*0x20 + -0x68) = uVar8;\n                *(*0x20 + -0xf0) = uVar6;\n                uVar6 = **(*0x20 + -0x88);\n                uVar11 = uVar6;\n                *(*0x20 + -0x128) = 0x453e3e;\n                fcn.00452c00();\n                *(*0x20 + -0x128) = 0x453e45;\n                iVar9 = fcn.00453360(uVar11, iVar14, in_R8, in_R9);\n                arg1 = *(*0x20 + -0xf0);\n                if (uVar6 != arg1) {\n                    return 0;\n                }\n                *(*0x20 + -0x128) = 0x453e65;\n                cVar7 = fcn.004025a0(arg1, iVar14);\n                if (cVar7 == '\\0') {\n                    return 0;\n                }\n            }\n            if (*(*0x20 + -0x106) - 1U < 0x10) {\n                return 1;\n            }\n            switch(*(*0x20 + -0x105) & 0x1f) {\n            case 0x11:\n                *(*0x20 + -0x128) = 0x453ec5;\n                cVar7 = fcn.00453c60(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar11 = 0;\n                }\n                else {\n                    uVar11 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                             *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n                }\n                return uVar11 & 0xffffffff;\n            case 0x12:\n                if (*(*(*0x20 + 0x10) + 0x38) == *(*(*0x20 + 8) + 0x38)) {\n                    *(*0x20 + -0x128) = 0x453f2d;\n                    uVar11 = fcn.00453c60(*(*0x20 + -0x20));\n                }\n                else {\n                    uVar11 = 0;\n                }\n                return uVar11;\n            case 0x13:\n                iVar14 = *(*0x20 + 8);\n                in_R8 = *(*0x20 + 0x10);\n                if (*(in_R8 + 0x32) != *(iVar14 + 0x32)) {\n                    return 0;\n                }\n                uVar4 = *(iVar14 + 0x30);\n                arg1 = uVar4;\n                uVar5 = *(in_R8 + 0x30);\n                if (uVar5 != uVar4) {\n                    return 0;\n                }\n                if ((*(iVar14 + 0x14) & 1) == 0) {\n                    iVar9 = 0x38;\n                }\n                else {\n                    iVar9 = 0x48;\n                }\n                in_R9 = iVar14 + iVar9;\n                if (arg1 < 0x100001) {\n                    if ((*(in_R8 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    *(*0x20 + -0x102) = uVar4;\n                    *(*0x20 + -0x104) = uVar5;\n                    *(*0x20 + -0x98) = in_R9;\n                    *(*0x20 + -0xa0) = in_R8 + iVar9;\n                    uVar8 = *(*0x20 + -0x20);\n                    uVar11 = 0;\n                    while (uVar16 = uVar5,  uVar11 < arg1) {\n                        if (uVar16 <= uVar11) goto code_r0x0045486c;\n                        *(*0x20 + -0xd0) = uVar11;\n                        *(*0x20 + -0x128) = 0x454706;\n                        cVar7 = fcn.00453c60(uVar8);\n                        if (cVar7 == '\\0') {\n                            return 0;\n                        }\ncode_r0x004546a5:\n                        arg1 = *(*0x20 + -0x102);\n                        uVar5 = *(*0x20 + -0x104);\n                        uVar8 = *(*0x20 + -0x20);\n                        in_R9 = *(*0x20 + -0x98);\n                        iVar14 = *(*0x20 + 8);\n                        in_R8 = *(*0x20 + 0x10);\n                        uVar11 = *(*0x20 + -0xd0) + 1;\n                    }\n                    if ((*(iVar14 + 0x14) & 1) == 0) {\n                        iVar9 = 0x38;\n                    }\n                    else {\n                        iVar9 = 0x48;\n                    }\n                    uVar16 = *(iVar14 + 0x30);\n                    uVar11 = (*(iVar14 + 0x32) & 0x7fff) + *(iVar14 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar11) {\n                        iVar10 = uVar11 - uVar16;\n                        iVar14 = (uVar16 - 0x100000 >> 0x3f & uVar16 << 3) + iVar14 + iVar9;\n                        if ((*(in_R8 + 0x14) & 1) == 0) {\n                            iVar9 = 0x38;\n                        }\n                        else {\n                            iVar9 = 0x48;\n                        }\n                        puVar1 = in_R8 + 0x32;\n                        puVar2 = in_R8 + 0x30;\n                        uVar16 = *puVar2;\n                        in_R8 = in_R8 + iVar9;\n                        uVar11 = (*puVar1 & 0x7fff) + *puVar2 & 0xffff;\n                        if (uVar16 <= uVar11) {\n                            *(*0x20 + -0xf8) = iVar10;\n                            *(*0x20 + -0xa8) = iVar14;\n                            uVar11 = uVar11 - uVar16;\n                            *(*0x20 + -0x100) = uVar11;\n                            in_R9 = uVar16 - 0x100000 >> 0x3f;\n                            uVar16 = (uVar16 << 3 & in_R9) + in_R8;\n                            *(*0x20 + -0xb0) = uVar16;\n                            uVar12 = 0;\n                            while( true ) {\n                                if (iVar10 <= uVar12) {\n                                    return 1;\n                                }\n                                in_R8 = *(iVar14 + uVar12 * 8);\n                                if (uVar11 <= uVar12) break;\n                                *(*0x20 + -0xd8) = uVar12;\n                                *(*0x20 + -0x128) = 0x454825;\n                                cVar7 = fcn.00453c60(uVar8);\n                                if (cVar7 == '\\0') {\n                                    return 0;\n                                }\n                                uVar12 = *(*0x20 + -0xd8) + 1;\n                                iVar10 = *(*0x20 + -0xf8);\n                                uVar11 = *(*0x20 + -0x100);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar16 = *(*0x20 + -0xb0);\n                                iVar14 = *(*0x20 + -0xa8);\n                            }\n                            *(*0x20 + -0x128) = 0x454858;\n                            fcn.004599e0(uVar11);\n                        }\n                        *(*0x20 + -0x128) = 0x454865;\n                        fcn.00459aa0(uVar11);\n                    }\n                    *(*0x20 + -0x128) = 0x45486c;\n                    fcn.00459aa0(uVar11);\ncode_r0x0045486c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x128) = 0x454873;\n                    fcn.004599e0(arg1);\n                }\n                *(*0x20 + -0x128) = 0x45487d;\n                fcn.00459a20(arg1, 0x100000);\n            default:\n                *(*0x20 + -0x128) = 0x454885;\n                fcn.004330a0();\n                *(*0x20 + -0x128) = 0x454896;\n                fcn.004339a0();\n                *(*0x20 + -0x128) = 0x4548a5;\n                fcn.004336a0();\n                *(*0x20 + -0x128) = 0x4548aa;\n                fcn.00433300();\n                *(*0x20 + -0x128) = 0x4548af;\n                fcn.00433120();\n                unaff_RBX = 0x1d;\n                *(*0x20 + -0x128) = 0x4548c5;\n                in_RAX = fcn.004317e0();\n                break;\n            case 0x14:\n                *(*0x20 + -0x128) = 0x453ffb;\n                uVar8 = fcn.00453360(*(*0x20 + 8), iVar14, in_R8, in_R9);\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0xb8) = iVar9;\n                uVar8 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x128) = 0x45401c;\n                fcn.00453360(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n                if (iVar9 == *(*0x20 + -0xb8)) {\n                    *(*0x20 + -0x128) = 0x454036;\n                    cVar7 = fcn.004025a0(*(*0x20 + -0xb8), uVar8);\n                    if (cVar7 != '\\0') {\n                        iVar10 = *(*0x20 + 8);\n                        iVar14 = *(iVar10 + 0x40);\n                        iVar9 = *(*0x20 + 0x10);\n                        if (*(iVar9 + 0x40) != iVar14) {\n                            return 0;\n                        }\n                        *(*0x20 + -0xb8) = iVar14;\n                        uVar11 = 0;\n                        goto code_r0x004544b5;\n                    }\n                }\n                return 0;\n            case 0x15:\n                *(*0x20 + -0x128) = 0x4540ae;\n                cVar7 = fcn.00453c60(*(*0x20 + -0x20));\n                if (cVar7 == '\\0') {\n                    uVar11 = 0;\n                }\n                else {\n                    *(*0x20 + -0x128) = 0x4540db;\n                    uVar11 = fcn.00453c60(*(*0x20 + -0x20));\n                }\n                return uVar11;\n            case 0x16:\n                *(*0x20 + -0x128) = 0x454110;\n                uVar11 = fcn.00453c60(*(*0x20 + -0x20));\n                return uVar11;\n            case 0x17:\n                *(*0x20 + -0x128) = 0x454146;\n                uVar11 = fcn.00453c60(*(*0x20 + -0x20));\n                return uVar11;\n            case 0x18:\n            case 0x1a:\n                return 1;\n            case 0x19:\n                iVar14 = *(*(*0x20 + 0x10) + 0x40);\n                iVar9 = *(*0x20 + 8);\n                if (*(iVar9 + 0x40) != iVar14) {\n                    return 0;\n                }\n                *(*0x20 + -0x128) = 0x454179;\n                uVar8 = fcn.00453360(*(*0x20 + 0x10), iVar14, in_R8, in_R9);\n                *(*0x20 + -0x28) = uVar8;\n                *(*0x20 + -0xb8) = iVar9;\n                uVar8 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x128) = 0x45419a;\n                fcn.00453360(*(*0x20 + 0x10), uVar8, in_R8, in_R9);\n                if (iVar9 == *(*0x20 + -0xb8)) {\n                    *(*0x20 + -0x128) = 0x4541b5;\n                    cVar7 = fcn.004025a0(*(*0x20 + -0xb8), uVar8);\n                    if (cVar7 != '\\0') {\n                        iVar14 = *(*0x20 + 8);\n                        iVar9 = *(iVar14 + 0x40);\n                        *(*0x20 + -0xb8) = iVar9;\n                        iVar10 = *(*0x20 + 0x10);\n                        uVar11 = 0;\n                        goto code_r0x00454293;\n                    }\n                }\n                return 0;\n            }\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        *(puVar15 + 0x18) = arg1;\n        *(puVar15 + -8) = 0x4548da;\n        fcn.00457320();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        arg1 = *(puVar15 + 0x18);\n        *0x20 = puVar15;\n    } while( true );\ncode_r0x00454293:\n    if (iVar9 <= uVar11) {\n        return 1;\n    }\n    uVar8 = *(iVar14 + 0x38);\n    uVar16 = *(iVar14 + 0x40);\n    if (uVar16 <= uVar11) {\ncode_r0x00454493:\n        *(*0x20 + -0x128) = 0x454498;\n        fcn.004599e0(uVar16);\n        goto code_r0x00454498;\n    }\n    iVar13 = uVar11 * 3;\n    arg4 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar11) {\n        *(*0x20 + -0x128) = 0x454493;\n        fcn.004599e0(uVar16);\n        goto code_r0x00454493;\n    }\n    *(*0x20 + -0xc0) = iVar13;\n    *(*0x20 + -0x30) = arg4;\n    *(*0x20 + -0x38) = uVar8;\n    *(*0x20 + -0xe8) = uVar11;\n    *(*0x20 + -0x128) = 0x4542ec;\n    uVar8 = fcn.00453360(uVar16, iVar14, iVar13, arg4);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -200) = iVar9;\n    uVar8 = *(*0x20 + -0x30);\n    *(*0x20 + -0x128) = 0x454312;\n    fcn.00453360(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n    if (iVar9 != *(*0x20 + -200)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x454339;\n    cVar7 = fcn.004025a0(*(*0x20 + -200), uVar8);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    iVar14 = *(*(*0x20 + -0x30) + 8 + *(*0x20 + -0xc0) * 8);\n    *(*0x20 + -0x128) = 0x454374;\n    cVar7 = fcn.00453c60(*(*0x20 + -0x20));\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x454392;\n    uVar8 = fcn.00453420(*(*0x20 + -0xc0), *(*0x20 + -0x38), iVar13, arg4);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -200) = iVar14;\n    uVar8 = *(*0x20 + -0x30);\n    *(*0x20 + -0x128) = 0x4543b8;\n    fcn.00453420(*(*0x20 + -0xc0), uVar8, iVar13, arg4);\n    if (iVar14 != *(*0x20 + -200)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4543d5;\n    cVar7 = fcn.004025a0(*(*0x20 + -200), uVar8);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    iVar14 = *(*0x20 + -0xc0);\n    if (*(*(*0x20 + -0x30) + 0x10 + iVar14 * 8) != *(*(*0x20 + -0x38) + 0x10 + iVar14 * 8)) {\n        return 0;\n    }\n    if (((**(*(*0x20 + -0x30) + iVar14 * 8) & 8) != 0) != ((**(*(*0x20 + -0x38) + iVar14 * 8) & 8) != 0)) {\n        return 0;\n    }\n    uVar11 = *(*0x20 + -0xe8) + 1;\n    iVar9 = *(*0x20 + -0xb8);\n    iVar10 = *(*0x20 + 0x10);\n    iVar14 = *(*0x20 + 8);\n    goto code_r0x00454293;\ncode_r0x004544b5:\n    if (iVar14 <= uVar11) {\n        return 1;\n    }\n    iVar14 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar11) {\ncode_r0x004546a0:\n        *(*0x20 + -0x128) = 0x4546a5;\n        fcn.004599e0(uVar16);\n        goto code_r0x004546a5;\n    }\n    iVar10 = iVar14 + uVar11 * 8;\n    uVar8 = *(iVar9 + 0x38);\n    uVar16 = *(iVar9 + 0x40);\n    if (uVar16 <= uVar11) {\n        *(*0x20 + -0x128) = 0x45469d;\n        fcn.004599e0(uVar16);\n        goto code_r0x004546a0;\n    }\n    *(*0x20 + -0xe0) = uVar11;\n    *(*0x20 + -0x78) = iVar10;\n    *(*0x20 + -0x40) = uVar8;\n    *(*0x20 + -0x48) = iVar14;\n    *(*0x20 + -0x128) = 0x454512;\n    uVar8 = fcn.00452c00();\n    *(*0x20 + -0x50) = uVar8;\n    iVar9 = *(*0x20 + -0xe0);\n    iVar13 = *(*0x20 + -0x40);\n    *(*0x20 + -0x90) = iVar13 + iVar9 * 8;\n    uVar16 = *(iVar13 + iVar9 * 8);\n    *(*0x20 + -0x128) = 0x45453e;\n    uVar8 = fcn.00452c00();\n    *(*0x20 + -0x58) = uVar8;\n    *(*0x20 + -0x128) = 0x454553;\n    uVar8 = fcn.00453360(iVar9, iVar13, iVar14, iVar10);\n    *(*0x20 + -0x60) = uVar8;\n    *(*0x20 + -0xc0) = uVar16;\n    *(*0x20 + -0x128) = 0x45456d;\n    iVar9 = fcn.00453360(iVar9, iVar13, iVar14, iVar10);\n    uVar11 = *(*0x20 + -0xc0);\n    if (uVar16 != uVar11) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x45458b;\n    cVar7 = fcn.004025a0(uVar11, iVar13);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4545a5;\n    uVar8 = fcn.00453520(uVar11, iVar13, iVar14, iVar10);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0xc0) = iVar9;\n    *(*0x20 + -0x128) = 0x4545bf;\n    fcn.00453520(uVar11, iVar13, iVar14, iVar10);\n    if (iVar9 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x4545dd;\n    cVar7 = fcn.004025a0(*(*0x20 + -0xc0), iVar13);\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x128) = 0x454605;\n    uVar8 = fcn.00452ea0();\n    *(*0x20 + -0x70) = uVar8;\n    *(*0x20 + -0x128) = 0x45462b;\n    fcn.00452ea0();\n    *(*0x20 + -0x128) = 0x454645;\n    cVar7 = fcn.00453c60(*(*0x20 + -0x20));\n    if (cVar7 == '\\0') {\n        return 0;\n    }\ncode_r0x00454498:\n    uVar11 = *(*0x20 + -0xe0) + 1;\n    iVar14 = *(*0x20 + -0xb8);\n    iVar9 = *(*0x20 + 0x10);\n    iVar10 = *(*0x20 + 8);\n    goto code_r0x004544b5;\n}\n",
        "token_count": 6313
    },
    "004641a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint64_t fcn.004641a0(void)\n\n{\n    int64_t in_RAX;\n    \n    if ((*(in_RAX + 0x14) & 1) != 0) {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            return in_RAX + 0x48;\n        case 0x12:\n            return in_RAX + 0x40;\n        case 0x13:\n            return in_RAX + 0x38;\n        case 0x14:\n            return in_RAX + 0x50;\n        case 0x15:\n            return in_RAX + 0x58;\n        case 0x16:\n            return in_RAX + 0x38;\n        case 0x17:\n            return in_RAX + 0x38;\n        default:\n            return in_RAX + 0x30;\n        case 0x19:\n            return in_RAX + 0x50;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00465480": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint64_t fcn.00465480(uint64_t arg1, ulong noname_1, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uint64_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x18 && *0x20 + -0x18 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x98;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            if (arg3 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x38) = arg4;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            uVar6 = 0;\n            uVar7 = 0;\n            iVar9 = 0;\n            iVar12 = 0;\n            while ((7 < arg3 - uVar6 && (iVar5 = arg1 - uVar7,  7 < iVar5))) {\n                arg1 = uVar6 + 8;\n                if (arg4 < arg1) goto code_r0x00465a7a;\n                if (arg1 < uVar6) goto code_r0x00465a6f;\n                *(*0x20 + -0x20) = arg1;\n                *(*0x20 + -0x28) = iVar12;\n                *(*0x20 + -0x10) = iVar9;\n                *(*0x20 + -0x50) = uVar6;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x50);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                *(*0x20 + -0x51) = uVar3;\n                *(*0x20 + -0x52) = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                *(*0x20 + -0x53) = *(in_RAX + 0x40 + *(unaff_RSI + 4 + uVar6));\n                *(*0x20 + -0x54) = *(in_RAX + 0x40 + *(unaff_RSI + 5 + uVar6));\n                *(*0x20 + -0x55) = *(in_RAX + 0x40 + *(unaff_RSI + 6 + uVar6));\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 7 + uVar6));\n                arg1_00 = *(*0x20 + -0x55);\n                if ((uVar2 | uVar1 | uVar3 | *(*0x20 + -0x52) | *(*0x20 + -0x53) | *(*0x20 + -0x54) | *(*0x20 + -0x55) |\n                    uVar4) == 0xff) {\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x00465a5c;\n                    *(*0x20 + -0x30) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x465714;\n                    uVar6 = fcn.00464f00(iVar5, arg1, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x30) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar6 = uVar1 << 0x3a | uVar2 << 0x34;\n                    uVar13 = *(*0x20 + -0x51) << 0x2e | uVar6;\n                    uVar14 = *(*0x20 + -0x53) << 0x22 | *(*0x20 + -0x52) << 0x28 | uVar13;\n                    uVar11 = *(*0x20 + -0x54) << 0x1c | uVar14;\n                    uVar16 = arg1_00 << 0x16;\n                    arg1_00 = uVar16 | uVar11;\n                    arg1 = *(*0x20 + 0x18);\n                    if (arg1 < uVar7) goto code_r0x00465a67;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar6 >> 0x38 | (uVar13 & 0xff000000000000) >> 0x28 | (uVar14 & 0xff0000000000) >> 0x18 |\n                         (uVar11 & 0xff00000000) >> 8 | (arg1_00 & 0xff000000) << 8 |\n                         (uVar4 << 0x10 | uVar16 & 0xff0000) << 0x18;\n                    uVar7 = uVar7 + 6;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x10);\n                    iVar12 = *(*0x20 + -0x28);\n                }\n            }\n            while ((arg1_00 = arg3 - uVar6,  uVar11 = uVar6,  3 < arg1_00 && (iVar5 = arg1 - uVar7,  3 < iVar5))) {\n                arg1_00 = uVar6 + 4;\n                arg1 = arg4;\n                if (arg4 < arg1_00) goto code_r0x00465a51;\n                if (arg1_00 < uVar6) goto code_r0x00465a46;\n                *(*0x20 + -0x38) = uVar6;\n                *(*0x20 + -0x20) = arg1_00;\n                *(*0x20 + -0x18) = iVar9;\n                *(*0x20 + -0x40) = iVar12;\n                uVar6 = uVar6 - arg4 >> 0x3f & *(*0x20 + -0x38);\n                uVar1 = *(in_RAX + 0x40 + *(unaff_RSI + uVar6));\n                uVar2 = *(in_RAX + 0x40 + *(unaff_RSI + 1 + uVar6));\n                uVar3 = *(in_RAX + 0x40 + *(unaff_RSI + 2 + uVar6));\n                arg1_00 = uVar3;\n                uVar4 = *(in_RAX + 0x40 + *(unaff_RSI + 3 + uVar6));\n                if ((uVar2 | uVar1 | uVar3 | uVar4) == 0xff) {\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x00465a33;\n                    *(*0x20 + -0x48) = uVar7;\n                    iVar9 = unaff_RDI - uVar7;\n                    *(*0x20 + -0xa0) = 0x4658e5;\n                    uVar6 = fcn.00464f00(iVar5, uVar11, arg3, arg4);\n                    uVar7 = *(*0x20 + -0x48) + unaff_RBX + (-iVar9 >> 0x3f & uVar7);\n                    if (iVar5 != 0) {\n                        return uVar7;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    arg3 = *(*0x20 + 0x30);\n                    arg4 = *(*0x20 + 0x38);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RDI = *(*0x20 + 0x20);\n                    in_RAX = *(*0x20 + 8);\n                    iVar12 = iVar5;\n                }\n                else {\n                    uVar10 = uVar1 << 0x1a | uVar2 << 0x14;\n                    uVar15 = uVar3 << 0xe | uVar10;\n                    arg1_00 = uVar15;\n                    uVar11 = *(*0x20 + 0x18);\n                    if (uVar11 < uVar7) goto code_r0x00465a3e;\n                    *(unaff_RBX + (uVar7 - unaff_RDI >> 0x3f & uVar7)) =\n                         uVar10 >> 0x18 | (uVar15 & 0xff0000) >> 8 | (uVar4 << 8 | uVar3 << 0xe & 0xff00) << 8;\n                    uVar7 = uVar7 + 3;\n                    uVar6 = *(*0x20 + -0x20);\n                    iVar9 = *(*0x20 + -0x18);\n                    iVar12 = *(*0x20 + -0x40);\n                    arg1 = uVar11;\n                }\n            }\n            while( true ) {\n                if (arg3 <= uVar11) {\n                    return uVar7;\n                }\n                if (arg1 < uVar7) break;\n                *(*0x20 + -0x20) = uVar7;\n                iVar9 = arg1 - uVar7;\n                *(*0x20 + -0xa0) = 0x4659e5;\n                uVar11 = fcn.00464f00(iVar9, uVar11, arg3, arg4);\n                uVar7 = *(*0x20 + -0x20) + (-(unaff_RDI - uVar7) >> 0x3f & uVar7) + unaff_RBX;\n                if (iVar9 != 0) {\n                    return uVar7;\n                }\n                unaff_RDI = *(*0x20 + 0x20);\n                arg4 = *(*0x20 + 0x38);\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RSI = *(*0x20 + 0x28);\n                arg3 = *(*0x20 + 0x30);\n                arg1_00 = unaff_RDI;\n            }\n            *(*0x20 + -0xa0) = 0x465a33;\n            fcn.00459aa0(arg1);\ncode_r0x00465a33:\n            *(*0x20 + -0xa0) = 0x465a3e;\n            fcn.00459aa0(uVar11);\n            arg1 = arg4;\ncode_r0x00465a3e:\n            *(*0x20 + -0xa0) = 0x465a46;\n            fcn.00459aa0(uVar11);\ncode_r0x00465a46:\n            *(*0x20 + -0xa0) = 0x465a51;\n            fcn.00459aa0(arg1_00);\ncode_r0x00465a51:\n            *(*0x20 + -0xa0) = 0x465a5c;\n            arg4 = arg1;\n            fcn.00459a60(arg1_00, arg1);\ncode_r0x00465a5c:\n            *(*0x20 + -0xa0) = 0x465a67;\n            fcn.00459aa0(arg1);\ncode_r0x00465a67:\n            *(*0x20 + -0xa0) = 0x465a6f;\n            fcn.00459aa0(arg1);\n            arg1 = arg1_00;\ncode_r0x00465a6f:\n            *(*0x20 + -0xa0) = 0x465a7a;\n            fcn.00459aa0(arg1);\ncode_r0x00465a7a:\n            *(*0x20 + -0xa0) = 0x465a85;\n            in_RAX = fcn.00459a60(arg1, arg4);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + 0x28) = unaff_RSI;\n        *(puVar8 + 0x30) = arg3;\n        *(puVar8 + 0x38) = arg4;\n        *(puVar8 + -8) = 0x465aae;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        unaff_RSI = *(puVar8 + 0x28);\n        arg3 = *(puVar8 + 0x30);\n        arg4 = *(puVar8 + 0x38);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3471
    },
    "00447e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint64_t fcn.00447e00(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar2 = 0;\n    for (iVar3 = 0; iVar3 < unaff_RBX; iVar3 = iVar3 + 1) {\n        if (9 < in_RAX[iVar3] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar2) {\n            return 0;\n        }\n        uVar4 = uVar2 * 10;\n        uVar2 = (in_RAX[iVar3] + uVar2 * 10) - 0x30;\n        if (uVar2 < uVar4) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar2) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00447eb9;\n    }\n    if (0x8000000000000000 < uVar2) {\n        return 0;\n    }\ncode_r0x00447eb9:\n    if (cVar1 == '-') {\n        uVar2 = -uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 393
    },
    "00409840": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.00409840(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x4098c7;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x4098d8;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x4098e5;\n            fcn.00433920();\n            *(*0x20 + -0x40) = 0x4098f6;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x409905;\n            fcn.00433800();\n            *(*0x20 + -0x40) = 0x409916;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x409925;\n            fcn.00433800();\n            *(*0x20 + -0x40) = 0x409936;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x409945;\n            fcn.00433920();\n            *(*0x20 + -0x40) = 0x40994a;\n            fcn.00433300();\n            *(*0x20 + -0x40) = 0x40994f;\n            fcn.00433120();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x409965;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x409975;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 873
    },
    "004099a0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.004099a0(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == ((in_RAX << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4099e6;\n            fcn.004330a0();\n            *(*0x20 + -0x18) = *(*0x20 + -0x10);\n            *(*0x20 + -0x30) = 0x4099f5;\n            fcn.004330a0();\n            *(*0x20 + -0x30) = 0x409a06;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x409a10;\n            fcn.00433800();\n            *(*0x20 + -0x30) = 0x409a15;\n            fcn.00433300();\n            *(*0x20 + -0x30) = 0x409a1a;\n            fcn.00433120();\n            *(*0x20 + -0x30) = 0x409a2b;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x409a36;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "00420ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420ac0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x420ae5;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x420b05;\n            fcn.004330a0();\n            *(*0x20 + -0x80) = 0x420b16;\n            fcn.004339a0();\n            *(*0x20 + -0x80) = 0x420b25;\n            fcn.00433960();\n            *(*0x20 + -0x80) = 0x420b36;\n            fcn.004339a0();\n            *(*0x20 + -0x80) = 0x420b45;\n            fcn.004336a0();\n            *(*0x20 + -0x80) = 0x420b56;\n            fcn.004339a0();\n            *(*0x20 + -0x80) = 0x420b65;\n            fcn.004336a0();\n            *(*0x20 + -0x80) = 0x420b76;\n            fcn.004339a0();\n            *(*0x20 + -0x80) = 0x420b7b;\n            fcn.00433120();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x420bef;\n                fcn.004330a0();\n                *(*0x20 + -0x80) = 0x420bf9;\n                fcn.00433800();\n                *(*0x20 + -0x80) = 0x420bfe;\n                fcn.00433120();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x420c54;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x420c65;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x420c6a;\n                    fcn.00433120();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x420c37;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x420c48;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x420c4d;\n                    fcn.00433120();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x420ca5;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x420cb6;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x420cbb;\n                    fcn.00433120();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x420c85;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x420c96;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x420c9b;\n                    fcn.00433120();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x420ce9;\n                    fcn.004330a0();\n                    *(*0x20 + -0x80) = 0x420cfa;\n                    fcn.004339a0();\n                    *(*0x20 + -0x80) = 0x420cff;\n                    fcn.00433120();\n                }\n                *(*0x20 + -0x80) = 0x420d05;\n                fcn.004330a0();\n                *(*0x20 + -0x80) = 0x420d0a;\n                fcn.00433300();\n                *(*0x20 + -0x80) = 0x420d0f;\n                fcn.00433120();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x420d45;\n                    fcn.00433b00(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x420da5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420db0;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1992
    },
    "00427820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00427820(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x0042787b:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00427888:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x5a1b54 == '\\0') {\n                    fcn.004020e0();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x0042787b;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00427888;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "004282a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.004282a0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    \n    uVar5 = 0xffffffffffffffff;\n    uVar6 = 0;\n    uVar7 = 0;\n    for (iVar3 = 0; iVar3 < 8; iVar3 = iVar3 + 1) {\n        uVar9 = *(in_RAX + iVar3 * 8);\n        if (uVar9 == 0) {\n            uVar6 = uVar6 + 0x40;\n        }\n        else {\n            iVar1 = 0;\n            if (uVar9 != 0) {\n                for (; (uVar9 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            iVar10 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar10 == 0; iVar10 = iVar10 + -1) {\n                }\n            }\n            uVar6 = iVar1 + uVar6;\n            if (uVar5 == 0xffffffffffffffff) {\n                uVar5 = uVar6;\n            }\n            if (uVar7 < uVar6) {\n                uVar7 = uVar6;\n            }\n            iVar1 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar1 == 0; iVar1 = iVar1 + -1) {\n                }\n            }\n            if (uVar9 == 0) {\n                iVar10 = -1;\n            }\n            uVar6 = -(iVar10 + -0x3f);\n        }\n    }\n    if (uVar5 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar7 < uVar6) {\n        uVar7 = uVar6;\n    }\n    if (0x3d < uVar7) {\n        if (uVar7 == 0x200000) {\n            uVar7 = 0x8000000000000000;\n        }\n        else {\n            uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar5 & 0x1fffff | (uVar6 & 0x1fffff) << 0x2a;\n        }\n        return uVar7;\n    }\n    iVar3 = 0;\n    do {\n        if (7 < iVar3) {\n            if (uVar7 == 0x200000) {\n                uVar7 = 0x8000000000000000;\n            }\n            else {\n                uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar5 & 0x1fffff | (uVar6 & 0x1fffff) << 0x2a;\n            }\n            return uVar7;\n        }\n        uVar9 = *(in_RAX + iVar3 * 8);\n        iVar1 = 0;\n        if (uVar9 != 0) {\n            for (; (uVar9 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        uVar2 = iVar1;\n        if (uVar9 == 0) {\n            uVar2 = 0;\n        }\n        uVar9 = uVar9 >> (uVar2 & 0x3f);\n        if ((uVar9 & uVar9 + 1) != 0) {\n            uVar4 = 1;\n            uVar8 = uVar7;\ncode_r0x00428453:\n            do {\n                if (uVar8 != 0) {\n                    if (uVar4 < uVar8) {\n                        uVar9 = uVar9 | uVar9 >> (uVar4 & 0x3f);\n                        if ((uVar9 & uVar9 + 1) == 0) break;\n                        uVar8 = uVar8 - uVar4;\n                        uVar4 = uVar4 << 1;\n                        goto code_r0x00428453;\n                    }\n                    uVar9 = uVar9 | uVar9 >> (uVar8 & 0x3f);\n                    if ((uVar9 & uVar9 + 1) == 0) break;\n                }\n                uVar8 = ~uVar9;\n                iVar1 = 0;\n                if (uVar8 != 0) {\n                    for (; (uVar8 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                    }\n                }\n                uVar2 = iVar1;\n                if (uVar8 == 0) {\n                    uVar2 = 0;\n                }\n                uVar9 = uVar9 >> (uVar2 & 0x3f);\n                uVar8 = 0;\n                if (uVar9 != 0) {\n                    for (; (uVar9 >> uVar8 & 1) == 0; uVar8 = uVar8 + 1) {\n                    }\n                }\n                if (uVar9 == 0) {\n                    uVar8 = 0x40;\n                }\n                uVar9 = uVar9 >> (uVar8 & 0x3f);\n                uVar7 = uVar8 + uVar7;\n            } while ((uVar9 & uVar9 + 1) != 0);\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 1300
    },
    "00428540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint64_t fcn.00428540(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x004285cb;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x004285cb:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 732
    },
    "0042a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a7a0(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = fcn.0042ac60(in_RAX + 0x20);\n    uVar4 = *(in_RAX + 0x10);\n    uVar5 = iVar2 - 1U >> 9;\n    do {\n        if (uVar5 < uVar4) {\n            iVar6 = *(*(in_RAX + 8) + uVar5 * 8);\ncode_r0x0042a8f2:\n            *(iVar6 + (iVar2 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.00409aa0();\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 <= uVar5) {\n            if (uVar4 == *(in_RAX + 0x18)) {\n                iVar6 = *(in_RAX + 0x18) << 1;\n                if (iVar6 == 0) {\n                    iVar6 = 0x100;\n                }\n                uVar3 = fcn.0040bf00(0x5a4678);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.0045a340(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = uVar3;\n                *(in_RAX + 0x18) = iVar6;\n            }\n            iVar6 = fcn.0042abc0();\n            *(uVar5 * 8 + *(in_RAX + 8)) = iVar6;\n            iVar1 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar4 + 1;\n            fcn.00409cc0(iVar1);\n            goto code_r0x0042a8f2;\n        }\n        fcn.00409cc0();\n    } while( true );\n}\n",
        "token_count": 558
    },
    "0045fba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t fcn.0045fba0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((99 < in_RAX) || (unaff_RBX != 10)) {\n                *(*0x20 + -0x40) = 0x45fc45;\n                fcn.0045fca0(0);\n                return in_RAX;\n            }\n            if (in_RAX < 10) {\n                arg1 = in_RAX + 1;\n                if (in_RAX <= arg1) {\n                    return in_RAX + 0x484724;\n                }\n            }\n            else {\n                arg1 = in_RAX * 2 + 2;\n                if (arg1 < 0xc9) {\n                    if (in_RAX << 1 <= arg1) {\n                        return in_RAX * 2 + 0x48682f;\n                    }\n                    *(*0x20 + -0x40) = 0x45fc5a;\n                    fcn.00459aa0(arg1);\n                }\n                *(*0x20 + -0x40) = 0x45fc65;\n                fcn.00459a20(arg1, 200);\n            }\n            *(*0x20 + -0x40) = 0x45fc6a;\n            in_RAX = fcn.00459aa0(arg1);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x45fc7a;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00423620": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00423620(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar5 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar5 + *(in_RAX + 0x10420);\n    uVar6 = -*0x5a1cd8 & (*0x5a1cd8 + uVar1) - 1;\n    if ((*(in_RAX + 0x10428) < uVar6) || (uVar1 < *(in_RAX + 0x10420))) {\n        iVar3 = fcn.0040a740();\n        uVar2 = *0x5a25b0;\n        if (iVar3 == 0) {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.004339a0();\n            fcn.004336a0(uVar2);\n            fcn.004339a0();\n            fcn.00433120();\n            return 0;\n        }\n        if (iVar3 == *(in_RAX + 0x10428)) {\n            *(in_RAX + 0x10428) = iVar3 + iVar5;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10428) - *(in_RAX + 0x10420);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.00413860(0x5a25b8);\n                iVar4 = fcn.0042ae00();\n                LOCK();\n                *(iVar4 + 8) = *(iVar4 + 8) + arg1;\n                fcn.0042aee0();\n                fcn.00424b00(arg1);\n            }\n            *(in_RAX + 0x10420) = iVar3;\n            *(in_RAX + 0x10428) = iVar3 + iVar5;\n        }\n        uVar6 = -*0x5a1cd8 & (*0x5a1cd8 + *(in_RAX + 0x10420) + iVar5) - 1U;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar5 = *(in_RAX + 0x10420);\n    *(in_RAX + 0x10420) = uVar6;\n    iVar5 = uVar6 - iVar5;\n    fcn.00413860(0x5a25b8);\n    iVar3 = fcn.0042ae00();\n    LOCK();\n    *(iVar3 + 8) = *(iVar3 + 8) + iVar5;\n    fcn.0042aee0();\n    fcn.00424b00(iVar5);\n    return arg1 + iVar5;\n}\n",
        "token_count": 753
    },
    "0042d840": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042d840(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42d879;\n            fcn.00409aa0();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42d8ed;\n                        uVar1 = fcn.00454900(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042da65;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42d939;\n                        fcn.0042dac0(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042da53;\n                        *(arg1_01 * 2 + 0x5a30a0) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042da46;\n                        *(arg1_01 * 2 + 0x5a30a0) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042da39;\n                        *(arg1_01 * 2 + 0x5a30a2) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42da0f;\n                    fcn.0042dac0(uVar3);\n                    *(*0x20 + -0x78) = 0x42da1d;\n                    fcn.00409cc0();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42da39;\n                fcn.00459a60(uVar3, 1000);\ncode_r0x0042da39:\n                *(*0x20 + -0x78) = 0x42da46;\n                fcn.004599e0(1000);\ncode_r0x0042da46:\n                *(*0x20 + -0x78) = 0x42da53;\n                fcn.004599e0(1000);\ncode_r0x0042da53:\n                *(*0x20 + -0x78) = 0x42da65;\n                fcn.004599e0(1000);\ncode_r0x0042da65:\n                *(*0x20 + -0x78) = 0x42da72;\n                fcn.00459a60(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42da7f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.00459a20(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42da93;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1530
    },
    "00447640": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00447640(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar4 = 0;\n            uVar7 = arg1;\n            arg1 = 0;\n            while (uVar4 < uVar7) {\n                if (*(unaff_RBX + uVar4) < 0x80) {\n                    uVar3 = uVar7;\n                    uVar4 = uVar4 + 1;\n                }\n                else {\n                    *(*0x20 + -0x28) = arg1;\n                    *(*0x20 + -0x48) = 0x4476a5;\n                    fcn.00454900(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(*0x20 + 0x18);\n                    arg1 = *(*0x20 + -0x28);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    uVar4 = uVar7;\n                }\n                arg1 = arg1 + 1;\n                uVar7 = uVar3;\n            }\n            if (in_RAX == 0) {\ncode_r0x00447702:\n                *(*0x20 + -0x48) = 0x44770a;\n                iVar2 = fcn.00447c20();\n                uVar4 = *(*0x20 + 0x18);\n                uVar3 = *(*0x20 + 0x10);\n                arg1 = unaff_RBX;\ncode_r0x0044771a:\n                unaff_RBX = uVar3;\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = arg1;\n                uVar3 = 0;\n                uVar7 = 0;\n                while( true ) {\n                    if (uVar4 <= uVar3) {\n                        return;\n                    }\n                    uVar1 = *(unaff_RBX + uVar3);\n                    if (uVar1 < 0x80) {\n                        uVar5 = uVar4;\n                        uVar3 = uVar3 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = 0x447765;\n                        uVar1 = fcn.00454900(uVar3);\n                        uVar5 = *(*0x20 + 0x18);\n                        arg1 = *(*0x20 + -0x20);\n                        uVar7 = *(*0x20 + -0x28);\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        uVar3 = uVar4;\n                    }\n                    if (arg1 <= uVar7) break;\n                    *(iVar2 + uVar7 * 4) = uVar1;\n                    uVar7 = uVar7 + 1;\n                    uVar4 = uVar5;\n                }\n                *(*0x20 + -0x48) = 0x4477ac;\n                fcn.004599e0(arg1);\n            }\n            else {\n                bVar8 = arg1 < 0x20;\n                bVar9 = arg1 == 0x20;\n                if (0x20 < arg1) goto code_r0x00447702;\n                *(*0x20 + -0x50) = unaff_RBP;\n                *(*0x20 + -0x48) = 0x4476ef;\n                iVar2 = fcn.00459c62();\n                unaff_RBP = *(*0x20 + -0x50);\n                if (bVar8 || bVar9) {\n                    uVar4 = uVar7;\n                    uVar7 = 0x20;\n                    uVar3 = unaff_RBX;\n                    goto code_r0x0044771a;\n                }\n            }\n            *(*0x20 + -0x48) = 0x4477b9;\n            in_RAX = fcn.00459a20(arg1, 0x20);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x4477ce;\n        fcn.00457320();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1277
    },
    "004524e0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.004524e0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    iVar2 = fcn.004490a0();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(iVar2 + 0x24);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.00449820();\n        if (unaff_RBX < 8) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar4 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return *0x5a1b44 ^ 1;\n}\n",
        "token_count": 329
    },
    "00464d80": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00464d80(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0x40) {\n                iVar2 = 0;\n                while( true ) {\n                    if (0x3f < iVar2) {\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x30) = 0x464de5;\n                        iVar1 = fcn.0040bba0();\n                        *(iVar1 + 0x140) = 0x3d;\n                        iVar2 = *(*0x20 + 8);\n                        if (iVar1 != iVar2) {\n                            *(*0x20 + -0x10) = iVar1;\n                            *(*0x20 + -0x30) = 0x464e08;\n                            fcn.0045a340(0x40);\n                            iVar1 = *(*0x20 + -0x10);\n                            iVar2 = *(*0x20 + 8);\n                        }\n                        for (iVar3 = 0; iVar3 < 0x100; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + iVar3) = 0xff;\n                        }\n                        for (iVar3 = 0; iVar3 < 0x40; iVar3 = iVar3 + 1) {\n                            *(iVar1 + 0x40 + *(iVar2 + iVar3)) = iVar3;\n                        }\n                        return;\n                    }\n                    if ((*(in_RAX + iVar2) == '\\n') || (*(in_RAX + iVar2) == '\\r')) break;\n                    iVar2 = iVar2 + 1;\n                }\n                *(*0x20 + -0x30) = 0x464e5b;\n                fcn.00431040();\n            }\n            unaff_RBX = 0x4f0c68;\n            *(*0x20 + -0x30) = 0x464e6e;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x464e7e;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 707
    },
    "00436140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.00436140(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                uVar3 = 0;\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                uVar2 = *puVar1;\n                if (uVar2 == 9) {\n                    *puVar1 = 4;\n                }\n                else {\n                    uVar3 = *puVar1;\n                }\n                return uVar3 & 0xffffff00 | uVar2 == 9;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x436192;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + -8) = 0x4361a5;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 469
    },
    "0044ac40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nulong fcn.0044ac40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    do {\n        iVar2 = *(in_RAX + 8);\n        switch(iVar2) {\n        case 0:\n            return 0;\n        case 1:\n        case 8:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044cae0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x22a4) = *(iVar4 + 0x22a4) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        case 2:\n        case 9:\n            fcn.004571e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            break;\n        case 3:\n        case 4:\n        case 5:\n            return 0;\n        case 6:\n            fcn.004571e0();\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            break;\n        case 7:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044cae0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x22a4) = *(iVar4 + 0x22a4) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        default:\n            fcn.0044cae0();\n        }\n    } while( true );\n}\n",
        "token_count": 945
    },
    "0044b2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuchar fcn.0044b2a0(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    int64_t *in_RAX;\n    int32_t iVar8;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x44b73b;\n                fcn.004317e0();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x44b74c;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + 0x30) = arg3;\n        *(puVar9 + 0x38) = arg4;\n        *(puVar9 + -8) = 0x44b775;\n        fcn.00457320();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        arg3 = *(puVar9 + 0x30);\n        arg4 = *(puVar9 + 0x38);\n        *0x20 = puVar9;\n    } while( true );\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044b2fc:\n    iVar8 = *(in_RAX + 8);\n    switch(iVar8) {\n    case 0:\n    case 5:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar10 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\x01';\n            arg2 = 0;\n            goto code_r0x0044b554;\n        }\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044b2fc;\n    case 1:\n    case 7:\n    case 8:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar10 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\0';\n            arg2 = 1;\n            goto code_r0x0044b554;\n        }\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044b2fc;\n    case 2:\n    case 4:\n    case 9:\n        *(*0x20 + -0x40) = 0x4dc540;\n        *(*0x20 + -0x48) = 0x44b4b5;\n        fcn.004571e0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044b2fc;\n    case 3:\n        break;\n    case 6:\n        *(*0x20 + -0x40) = 0x4dc540;\n        *(*0x20 + -0x48) = 0x44b3f5;\n        fcn.004571e0();\n        unaff_R14 = **(in_GS_OFFSET + 0x28);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044b2fc;\n    default:\n        *(*0x20 + -0x48) = 0x44b4fc;\n        fcn.0044cae0();\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044b2fc;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar10 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (iVar8 != *(in_RAX + 8)) {\n        iVar8 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044b2fc;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x22a4) = *(*in_RAX + 0x22a4) + -1;\n    cVar7 = '\\0';\n    arg2 = 0;\ncode_r0x0044b554:\n    in_RAX[2] = arg1;\n    if (*0x5a1da0 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x44b57d;\n        cVar7 = fcn.00459660(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x5a1da0 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x44b59c;\n        cVar7 = fcn.004596c0(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar10;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar7 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar8 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar8 = 7;\n        }\n        iVar4 = *in_RAX;\n        if (iVar8 == 7) {\n            do {\n                uVar5 = *(iVar4 + 0x1210);\n                if ((uVar5 != 0) && (uVar5 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar4 + 0x1210;\n                uVar6 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar5 == uVar6) * (*puVar2 ^ unaff_RBX);\n            } while (uVar5 != uVar6);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar8;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar8;\n            *(*0x20 + -0x48) = 0x44b69a;\n            fcn.0044cae0();\n            iVar8 = *(*0x20 + -0x2c);\n            iVar10 = *(*0x20 + -0x28);\n        }\n        iVar3 = *(iVar10 + 0xd8);\n        *(iVar10 + 0xd8) = iVar3 + -1;\n        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar8 == 7) {\n            *(*0x20 + -0x48) = 0x44b6ef;\n            fcn.00439c20();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar10 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar10;\n        *(*0x20 + -0x20) = iVar10 + 0x2280;\n        *(*0x20 + -0x48) = 0x44b5ff;\n        fcn.00409aa0();\n        *(*0x20 + -0x48) = 0x44b60e;\n        fcn.0044aaa0();\n        *(*0x20 + -0x48) = 0x44b61a;\n        fcn.00409cc0();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x44b63a;\n            fcn.0044cae0();\n        }\n        iVar8 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x44b670;\n        fcn.00439c20();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3037
    },
    "0044b9e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.0044b9e0(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t *arg1_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar6;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1210) == 0) || (unaff_RBX < *(in_RAX + 0x1210))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1210) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar3 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2290);\n                if (arg1_00 <= noname_0) {\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x88) = 0x44bcb9;\n                        fcn.0044bd00(arg1);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044bcd4;\n                arg1_00 = *(*(in_RAX + 0x2288) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x40) = arg1;\n                *(*0x20 + -0x10) = iVar3;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 10) {\n                    *(*0x20 + -0x18) = arg1_00;\n                    switch(uVar1) {\n                    default:\n                        *(*0x20 + -0x88) = 0x44bc5b;\n                        fcn.0044cae0();\n                        in_RAX = *(*0x20 + 8);\n                        noname_0 = *(*0x20 + -0x30);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 1:\n                        break;\n                    case 3:\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x44bac5;\n                            iVar3 = fcn.0044aee0(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(*0x20 + -0x88) = 0x44baee;\n                                fcn.0044cae0();\n                                iVar3 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x22a4) = *(in_RAX + 0x22a4) + -1;\n                            noname_0 = iVar3 + -1;\n                            arg1 = *(*0x20 + -0x40);\n                            unaff_RBX = *(*0x20 + -0x38);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        break;\n                    case 6:\n                        *(*0x20 + -0x80) = 0x4dc540;\n                        *(*0x20 + -0x88) = 0x44bb45;\n                        fcn.004571e0();\n                        unaff_R14 = **(in_GS_OFFSET + 0x28);\n                        noname_0 = *(*0x20 + -0x30) + -1;\n                        in_RAX = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        arg1 = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 7:\n                    case 8:\n                        LOCK();\n                        bVar6 = uVar1 == *(arg1_00 + 8);\n                        if (bVar6) {\n                            *(arg1_00 + 8) = 9;\n                        }\n                        arg4 = uVar1 & 0xffffff00 | bVar6;\n                        if (bVar6) {\n                            iVar3 = arg1_00[7];\n                            arg1_00[1] = iVar3;\n                            *(*0x20 + -0x88) = 0x44bbaf;\n                            iVar2 = fcn.0044aee0(noname_0, iVar3);\n                            unaff_RBX = *(*0x20 + -0x40);\n                            arg1 = unaff_RBX + 1;\n                            if (*(*0x20 + -0x38) < arg1) {\n                                *(*0x20 + -0x28) = iVar2;\n                                iVar2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x88) = 0x44bbeb;\n                                iVar3 = fcn.00443500(unaff_RBX);\n                                arg1 = iVar2 + 1;\n                                uVar5 = *(*0x20 + -0x40);\n                                iVar2 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                iVar3 = *(*0x20 + -0x10);\n                                uVar5 = unaff_RBX;\n                                unaff_RBX = *(*0x20 + -0x38);\n                            }\n                            if (*0x5a1da0 == 0) {\n                                *(iVar3 + uVar5 * 8) = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x88) = 0x44bc2a;\n                                iVar2 = fcn.004596a0(arg1, iVar3, iVar3 + uVar5 * 8, arg4);\n                            }\n                            noname_0 = iVar2 + -1;\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x44bc85;\n                    fcn.0044cae0();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x38);\n                    arg1 = *(*0x20 + -0x40);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44bcd4;\n            fcn.004317e0();\ncode_r0x0044bcd4:\n            *(*0x20 + -0x88) = 0x44bcdf;\n            in_RAX = fcn.004599e0(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44bcef;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1932
    },
    "00401080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00401640();\n    fcn.004010e0();\n    return;\n}\n",
        "token_count": 88
    },
    "00402d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00402d00(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1268);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1268) + 0x10;\n    *(iVar1 + 0x1268) = iVar3;\n    if (*(iVar1 + 0x1270) == iVar3) {\n        fcn.0042b040();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00403580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403580(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00421fa0();\n    if (cVar2 == '\\0') {\n        if (*0x54d5e8 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x54d5e8;\n            iVar4 = (*0x54d5e8)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 323
    },
    "00404220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404220(void)\n\n{\n    fcn.00404260(1);\n    return;\n}\n",
        "token_count": 25
    },
    "00404fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404fa0(void)\n\n{\n    fcn.00404fe0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00406300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00406300(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x4063c0);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 220
    },
    "00406420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406420(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.00433300();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 911
    },
    "00407580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407580(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0x8d826c96) {\n            if (uVar4 < 0x5272f85d) {\n                if (uVar4 < 0x3e2307d5) {\n                    if (uVar4 == 0x778cdb8) {\n                        if (in_RAX == 0x472ea0) {\n                            fcn.004330a0();\n                            fcn.004339a0();\n                            fcn.00433120();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x3e2307d4) && (in_RAX == 0x4728e0)) {\n                        fcn.004330a0();\n                        fcn.004337a0();\n                        fcn.00433120();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x43daea34) {\n                    if (in_RAX == 0x4729a0) {\n                        fcn.004330a0();\n                        fcn.004337a0();\n                        fcn.00433120();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x5272f85c) && (in_RAX == 0x473060)) {\n                    fcn.004330a0();\n                    fcn.004336a0();\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x6bed3cfb) {\n                if (uVar4 == 0x64fd0d3c) {\n                    if (in_RAX == 0x472f20) {\n                        fcn.004330a0();\n                        fcn.004336a0();\n                        fcn.00433120();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x6bed3cfa) && (in_RAX == 0x472920)) {\n                    fcn.004330a0();\n                    fcn.004337a0();\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x7688f20c) {\n                if (in_RAX == 0x472420) {\n                    uVar5 = unaff_RBX[1];\n                    uVar3 = *unaff_RBX;\n                    fcn.004330a0();\n                    fcn.00433600(uVar3, uVar5);\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x8d826c95) && (uVar5 = 0x4724a0,  in_RAX == 0x4724a0)) {\n                fcn.004330a0();\n                fcn.004333a0(uVar5, param_2);\n                fcn.00433120();\n                return;\n            }\n        }\n        else if (uVar4 < 0x99d6dd44) {\n            if (uVar4 < 0x93592d95) {\n                if (uVar4 == 0x8fc52ddb) {\n                    if (in_RAX == 0x472fe0) {\n                        fcn.004330a0();\n                        fcn.004336a0();\n                        fcn.00433120();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x93592d94) && (uVar5 = 0x4724e0,  in_RAX == 0x4724e0)) {\n                    fcn.004330a0();\n                    fcn.004333a0(uVar5, param_2);\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x95738979) {\n                if (in_RAX == 0x473020) {\n                    fcn.004330a0();\n                    fcn.004336a0();\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x99d6dd43) && (in_RAX == 0x472960)) {\n                fcn.004330a0();\n                fcn.004337a0();\n                fcn.00433120();\n                return;\n            }\n        }\n        else if (uVar4 < 0xc1efe3a3) {\n            if (uVar4 == 0xb00b9f48) {\n                if (in_RAX == 0x472360) {\n                    fcn.004330a0();\n                    fcn.00433340();\n                    fcn.00433120();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xc1efe3a2) && (in_RAX == 0x472460)) {\n                fVar1 = *(unaff_RBX + 4);\n                fVar2 = *unaff_RBX;\n                fcn.004330a0();\n                fcn.00433600(fVar2, fVar1);\n                fcn.00433120();\n                return;\n            }\n        }\n        else if (uVar4 == 0xcb735792) {\n            if (in_RAX == 0x4728a0) {\n                fcn.004330a0();\n                fcn.004337a0();\n                fcn.00433120();\n                return;\n            }\n        }\n        else if (uVar4 == 0xd9632893) {\n            if (in_RAX == 0x472f60) {\n                fcn.004330a0();\n                fcn.004336a0();\n                fcn.00433120();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xe927f9e3) && (in_RAX == 0x472fa0)) {\n            fcn.004330a0();\n            fcn.004336a0();\n            fcn.00433120();\n            return;\n        }\n        fcn.00407b00();\n        return;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 1507
    },
    "00407b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407b00(void)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    int64_t noname_0;\n    ulong uVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00452a40();\n    noname_0 = *(in_RAX + 0x17) - 1;\n    uVar4 = 0x4f13a0;\n    switch(noname_0) {\n    case 0:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.00433340();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 1:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 2:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 3:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 4:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 5:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 6:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 7:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 8:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 9:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 10:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 0xb:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 0xc:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004333a0(noname_0, uVar4);\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 0xd:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004333a0(noname_0, uVar4);\n        fcn.004339a0();\n        fcn.00433120();\n        break;\n    case 0xe:\n        fVar1 = *unaff_RBX;\n        fVar2 = *(unaff_RBX + 4);\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433600(fVar1, fVar2);\n        fcn.00433120();\n        break;\n    case 0xf:\n        uVar4 = *unaff_RBX;\n        uVar3 = unaff_RBX[1];\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433600(uVar4, uVar3);\n        fcn.00433120();\n        break;\n    default:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.00433920();\n        fcn.00433120();\n        break;\n    case 0x17:\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    return;\n}\n",
        "token_count": 1312
    },
    "00408ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00408ba0(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00408d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408d40(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "00409160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409160(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    if (*0x54d5e8 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x54d5e8;\n        iVar3 = (*0x54d5e8)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x170);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00408c00();\n        }\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 271
    },
    "00409500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409500(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x544740;\n    }\n    else {\n        puVar1 = fcn.0040b1e0(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 159
    },
    "004096e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004096e0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.004088a0(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "00409780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409780(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x546b38,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00409a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409a60(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0040a3c0();\n    return;\n}\n",
        "token_count": 83
    },
    "00409c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409c80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0040a400();\n    return;\n}\n",
        "token_count": 81
    },
    "0040a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a200(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x40a237;\n                fcn.0042e180();\n                *(*0x20 + -0x40) = 0x40a24a;\n                fcn.00409f60(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40a265;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40a275;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 408
    },
    "0040a2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040a2a0(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40a2d7;\n                fcn.0042e180();\n                *(*0x20 + -0x48) = 0x40a2dc;\n                fcn.0043b600();\n                *(*0x20 + -0x48) = 0x40a2ef;\n                uVar1 = fcn.00409f60(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40a2f8;\n                fcn.00455080();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40a318;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40a328;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "0040a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a3c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    return;\n}\n",
        "token_count": 83
    },
    "0040a400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a400(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 81
    },
    "0040ae60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ae60(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x18) = arg1 + unaff_RBX;\n                *(*0x20 + -0x40) = 0x40aeb4;\n                uVar1 = fcn.00413e40();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((uVar1 & *(*0x20 + 0x18) - 1U) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0x40) = 0x40aee9;\n                fcn.00413d00();\n                *(*0x20 + -0x20) = -*(*0x20 + 0x18) & (*(*0x20 + 0x18) + *(*0x20 + -0x20)) - 1U;\n                *(*0x20 + -0x40) = 0x40af12;\n                uVar1 = fcn.00413e40();\n                if (uVar1 == *(*0x20 + -0x20)) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x40) = 0x40af2c;\n                fcn.00413d00();\n                arg1 = *(*0x20 + -0x28);\n                if (arg1 == 99) break;\n                iVar2 = arg1 + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x40) = 0x40af85;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40af9a;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 775
    },
    "0040afc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040afc0(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40b00d;\n                uVar1 = fcn.0040f7c0(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40b045;\n                        fcn.00412520();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40b05e;\n                        uVar1 = fcn.0040f7c0(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040b072;\n                    }\n                }\n                else {\ncode_r0x0040b072:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40b0c5;\n                        fcn.004330a0();\n                        *(*0x20 + -0x48) = 0x40b0d6;\n                        fcn.004339a0();\n                        *(*0x20 + -0x48) = 0x40b0e5;\n                        fcn.004336a0();\n                        *(*0x20 + -0x48) = 0x40b0f6;\n                        fcn.004339a0();\n                        *(*0x20 + -0x48) = 0x40b105;\n                        fcn.004336a0();\n                        *(*0x20 + -0x48) = 0x40b10a;\n                        fcn.00433300();\n                        *(*0x20 + -0x48) = 0x40b10f;\n                        fcn.00433120();\n                        *(*0x20 + -0x48) = 0x40b125;\n                        fcn.004317e0();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40b136;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40b145;\n                fcn.004330a0();\n                *(*0x20 + -0x48) = 0x40b156;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x40b165;\n                fcn.004336a0();\n                *(*0x20 + -0x48) = 0x40b176;\n                fcn.004339a0();\n                *(*0x20 + -0x48) = 0x40b185;\n                fcn.004336a0();\n                *(*0x20 + -0x48) = 0x40b18a;\n                fcn.00433300();\n                *(*0x20 + -0x48) = 0x40b18f;\n                fcn.00433120();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40b1a5;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x48) = 0x40b1b2;\n            in_RAX = fcn.004599e0(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40b1c5;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1450
    },
    "0040bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bba0(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0040b1e0(1, *in_RAX);\n    return;\n}\n",
        "token_count": 98
    },
    "0040bf00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040bf00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40bfc0;\n    auStack24 = CONCAT88(&uStack56, arg1);\n    fcn.004571e0();\n    return uStack56;\n}\n",
        "token_count": 143
    },
    "0040c700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040c700(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = fcn.0040bba0();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "0040f760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f760(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.0040fee0(unaff_RBX);\n    fcn.0045a040();\n    return;\n}\n",
        "token_count": 46
    },
    "0040f7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f7a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    \n    *(in_RAX + 0x40) = ~*(unaff_RBX + *(in_RAX + 0x48));\n    return;\n}\n",
        "token_count": 65
    },
    "0040fcc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040fcc0(ulong arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = arg1 + 1U >> 0x14;\n    if (0x3f < uVar2) {\n        fcn.00459a00(0x40);\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    iVar3 = *(uVar2 * 8 + 0x573fb0);\n    if (iVar3 != 0) {\n        iVar3 = *(iVar3 + (arg1 + 1U & 0xfffff) * 8);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00412400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412400(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 80
    },
    "00412be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412be0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x573f58) {\n                return;\n            }\n            if (iVar1 == *0x573f58 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x412c19;\n                fcn.004129e0();\n                *(*0x20 + -0x28) = 0x412c25;\n                fcn.00444180();\n                *(*(*0x20 + 8) + 0x488) = *0x573f58;\n                return;\n            }\n            *(*0x20 + -0x10) = *0x573f58;\n            *(*0x20 + -0xc) = iVar1;\n            *(*0x20 + -0x28) = 0x412c58;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x412c69;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x412c72;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x412c85;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x412c8e;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x412c93;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x412c98;\n            fcn.00433120();\n            *(*0x20 + -0x28) = 0x412ca9;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x412cb4;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 624
    },
    "004132a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004132a0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \ncode_r0x004132a0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x10) = *0x5741f8;\n        *(*0x20 + -0x18) = *0x574200;\n        iVar2 = 0;\n        iVar4 = *0x5741f8;\n        iVar3 = *0x574200;\n        do {\n            if (iVar3 <= iVar2) {\n                *0x5a1b50 = 1;\n                return;\n            }\n            uVar1 = *(iVar4 + iVar2 * 8);\n            uVar6 = uVar1 >> 0x14;\n            if (0x3f < uVar6) goto code_r0x00413398;\n            *(*0x20 + -0x20) = iVar2;\n            iVar3 = *(*(uVar6 * 8 + 0x573fb0) + (uVar1 & 0xfffff) * 8);\n            if (*(iVar3 + 0x210c0) == 0) {\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x48) = 0x41335f;\n                iVar3 = fcn.0040bf00(0x5a4678);\n                if (iVar3 == 0) goto code_r0x00413387;\n                *(*(*0x20 + -0x28) + 0x210c0) = iVar3;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x413345;\n                fcn.0045a040();\n            }\n            iVar2 = *(*0x20 + -0x20) + 1;\n            iVar3 = *(*0x20 + -0x18);\n            iVar4 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x004133a6;\ncode_r0x00413387:\n    *(*0x20 + -0x48) = 0x413398;\n    fcn.004317e0();\ncode_r0x00413398:\n    *(*0x20 + -0x48) = 0x4133a5;\n    fcn.00459a00(0x40);\ncode_r0x004133a6:\n    *(puVar5 + -8) = 0x4133ab;\n    fcn.00457320();\n    *0x20 = puVar5;\n    goto code_r0x004132a0;\n}\n",
        "token_count": 715
    },
    "004133c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004133c0(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e100 == 0) {\n                if (*0x54e188 < *0x54e18c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x5a1b50 = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x413429;\n            fcn.004317e0();\n        }\n        *(puVar2 + -8) = 0x41342f;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "00413440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413440(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x573fb0) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x210c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x4134fa;\n                in_RAX = fcn.00459a00(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41350e;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x413513;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x413525;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41352f;\n            fcn.00433800();\n            *(*0x20 + -0x40) = 0x413534;\n            fcn.00433300();\n            *(*0x20 + -0x40) = 0x413539;\n            fcn.00433120();\n            *(*0x20 + -0x40) = 0x41353e;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x41354f;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x413559;\n            fcn.00433800();\n            *(*0x20 + -0x40) = 0x41356a;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x413574;\n            fcn.00433800();\n            *(*0x20 + -0x40) = 0x413585;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41358a;\n            fcn.00433120();\n            *(*0x20 + -0x40) = 0x4135a5;\n            fcn.0041b360(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x4135c5;\n            fcn.0041b360(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x4135e5;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x413609;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1241
    },
    "00413640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413640(void)\n\n{\n    int64_t in_RAX;\n    ulong uStack16;\n    \n    fcn.0042ad40();\n    LOCK();\n    *0x5a25d8 = *0x5a25d8 + in_RAX;\n    fcn.0042eca0();\n    return uStack16;\n}\n",
        "token_count": 77
    },
    "004136e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004136e0(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    *0x5a25d8 = *0x5a25d8 - unaff_RBX;\n    fcn.004138c0(unaff_RBX);\n    return;\n}\n",
        "token_count": 121
    },
    "00413740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413740(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (iVar1 = *0x5a25d8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    *0x5a25d8 = *0x5a25d8 + arg1;\n    fcn.00413aa0(iVar1);\n    return;\n}\n",
        "token_count": 133
    },
    "004137a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004137a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    \n    fcn.0042ad40();\n    iVar1 = *0x5a25d8;\n    LOCK();\n    *0x5a25d8 = *0x5a25d8 - unaff_RBX;\n    fcn.00413d00(iVar1);\n    return;\n}\n",
        "token_count": 97
    },
    "00413800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413800(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    *0x5a25d8 = *0x5a25d8 - unaff_RBX;\n    fcn.00413e00(unaff_RBX);\n    return;\n}\n",
        "token_count": 120
    },
    "00413860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413860(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042ad40();\n    return;\n}\n",
        "token_count": 83
    },
    "00413e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413e00(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004138c0();\n    return;\n}\n",
        "token_count": 81
    },
    "00413e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413e40(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042eca0();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.0042eca0();\n    return 0;\n}\n",
        "token_count": 121
    },
    "004144a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004144a0(void)\n\n{\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *0x54de9c = 0x80000000;\n    fcn.0041ce00();\n    arg1 = fcn.0041ce80();\n    fcn.0041b9a0(arg1);\n    *0x54e1f8 = 0x100000001;\n    return;\n}\n",
        "token_count": 144
    },
    "004164c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004164c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (; *0x5a1b78 < *0x5a1b88; *0x5a1b78 = *0x5a1b78 + 1) {\n        fcn.0043c0c0();\n        fcn.0040a2a0();\n        *0x54e200 = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004177c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004177c0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    char unaff_BL;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                if (*(in_RAX + 8) != unaff_BL) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x28) = 0x417808;\n                    fcn.004179c0();\n                    iVar1 = *(*0x20 + -0x10);\n                    *(iVar1 + 0x20) = *(*0x20 + 0x10);\n                    *(iVar1 + 0x21) = 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x417834;\n                fcn.004317e0();\n            }\n            unaff_BL = '/';\n            *(*0x20 + -0x28) = 0x417845;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_BL;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x417859;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_BL = puVar2[0x10];\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 499
    },
    "00417bc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417bc0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    \n    uVar1 = *(in_RAX + 8);\n    uVar3 = *(in_RAX + 0x10) - uVar1;\n    uVar2 = arg1 - unaff_RBX;\n    if ((0 < uVar2) && (uVar3 <= uVar2)) {\n        *(in_RAX + 0x18) = *(in_RAX + 0x18) + (uVar2 - uVar3);\n        *(in_RAX + 8) = *(in_RAX + 0x10);\n        if (uVar3 != 0) {\n            *(in_RAX + 4) = 1;\n            *(in_RAX + 0x48) = *0x5a5698 + 1;\n        }\n        return;\n    }\n    if ((uVar2 < 0) && (uVar1 <= unaff_RBX - arg1)) {\n        *(in_RAX + 8) = 0;\n    }\n    else {\n        *(in_RAX + 8) = uVar1 - (unaff_RBX - arg1);\n    }\n    if ((uVar2 != 0) && (uVar3 == 0)) {\n        *(in_RAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "00417cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417cc0(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t *in_RAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x417d05;\n                fcn.004179c0();\n                iVar2 = *(*0x20 + 0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(iVar4 + 0x4c) = iVar2;\n                puVar5 = iVar2 * 1000000000;\n                *(iVar4 + 0x10) = puVar5;\n                puVar6 = *(iVar4 + 8);\n                if (puVar5 < puVar6) {\n                    *(iVar4 + 8) = puVar5;\n                    uVar1 = *(iVar4 + 4);\n                    *(iVar4 + 4) = 1;\n                    puVar6 = uVar1;\n                    uVar3 = *(iVar4 + 0x48);\n                    *(iVar4 + 0x48) = *0x5a5698 + 1;\n                    puVar5 = uVar3;\n                }\n                else if (puVar6 < puVar5) {\n                    puVar5 = iVar4 + 4;\n                    uVar1 = *puVar5;\n                    *puVar5 = 0;\n                    puVar6 = uVar1;\n                }\n                *(*0x20 + -0x28) = 0x417d57;\n                fcn.00417c60(puVar5, puVar6);\n                return;\n            }\n            unaff_RBX = 0x28;\n            *(*0x20 + -0x28) = 0x417d72;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x417d86;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 744
    },
    "004181c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004181c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e18c <= *0x54e188) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x4182a0;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x418217;\n                fcn.00434e40();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x54e188;\n            *(*0x20 + -0x28) = *0x54e18c;\n            *(*0x20 + -0x40) = 0x41822e;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x418237;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x418248;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x418251;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x418265;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41826a;\n            fcn.00433120();\n            *(*0x20 + -0x40) = 0x41827b;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x418285;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 536
    },
    "00418980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00418980(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.0041a880(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 212
    },
    "004194e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004194e0(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    *0x54e238 = in_XMM15;\n    fcn.00439d00();\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 121
    },
    "0041afc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041afc0(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    arg3 = 0;\n    iVar1 = fcn.0040fb60(0);\n    if (iVar1 != 0) {\n        fcn.0041b040(0, *(unaff_R14 + 0x30), arg3);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0041b8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b8c0(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x54dd18,  iVar1 = *0x54dd10,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.0040fb60(0);\n            fcn.0041b040(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0041bde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\ndouble fcn.0041bde0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    double dVar3;\n    int32_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar7 = *in_RAX;\n    iVar1 = *(in_RAX + 0x22);\n    iVar6 = *(in_RAX + 0x24);\n    iVar2 = *(in_RAX + 0x30);\n    iVar8 = *(in_RAX + 0x32);\n    iVar9 = *(in_RAX + 0x34);\n    iVar4 = fcn.0041ca20();\n    iVar5 = *(in_RAX + 0x26) + *(in_RAX + 0x28) + *(in_RAX + 0x2c);\n    if (iVar7 < 0) {\n        iVar7 = 100000;\n    }\n    iVar9 = iVar2 + iVar8 + iVar9;\n    iVar6 = *(in_RAX + 0x2a) + iVar6 + *(in_RAX + 0x2c);\n    if (iVar5 < iVar9) {\n        iVar2 = ((iVar4 - *(in_RAX + 0x1e)) / iVar5) * iVar6 + *(in_RAX + 0x1e);\n        iVar8 = (*0x4f0bb0 + iVar7 / *0x4f0bf0) * iVar4;\n        iVar4 = iVar2;\n        iVar5 = iVar6;\n        if (iVar8 < iVar2) {\n            iVar4 = iVar8;\n        }\n    }\n    if (iVar4 < iVar1) {\n        iVar4 = *0x4f0bb8 * iVar4;\n        iVar5 = iVar6;\n    }\n    iVar5 = iVar5 - iVar9;\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar4 = iVar4 - iVar1;\n    if (iVar4 < 1) {\n        iVar4 = 1;\n    }\n    *(in_RAX + 0x46) = iVar5 / iVar4;\n    dVar3 = *(in_RAX + 0x48);\n    *(in_RAX + 0x48) = iVar4 / iVar5;\n    return dVar3;\n}\n",
        "token_count": 596
    },
    "0041ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041ca20(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar2 = *(in_RAX + 0x68);\n    uVar1 = fcn.0041cac0();\n    if (uVar2 <= uVar1) {\n        if (uVar2 < *(in_RAX + 0x70)) {\n            uVar2 = *(in_RAX + 0x70);\n        }\n        uVar1 = uVar2;\n        if ((*(in_RAX + 0x78) != -1) && (uVar3 = *(in_RAX + 0x78) + 0x10000,  uVar2 < uVar3)) {\n            uVar1 = uVar3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0041cb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041cb60(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41cb85;\n            uVar1 = fcn.0041ca20();\n            uVar3 = *(*(*0x20 + 8) + 0xb8);\n            if (uVar1 <= uVar3) {\n                return;\n            }\n            if (unaff_RBX < uVar3) {\n                unaff_RBX = uVar3;\n            }\n            uVar2 = uVar1 - uVar3 >> 6;\n            uVar5 = uVar2 * 0x2d + uVar3;\n            if (unaff_RBX < uVar5) {\n                unaff_RBX = uVar5;\n            }\n            uVar3 = uVar3 + uVar2 * 0x3d;\n            if ((0x400000 < uVar1) && (uVar3 < uVar1 - 0x400000)) {\n                uVar3 = uVar1 - 0x400000;\n            }\n            uVar2 = *(*(*0x20 + 8) + 0x18);\n            uVar5 = uVar1 - uVar2;\n            if (uVar1 < uVar2) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar3 < unaff_RBX) {\n                uVar3 = unaff_RBX;\n            }\n            if (uVar5 < unaff_RBX) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar3 < uVar5) {\n                uVar5 = uVar3;\n            }\n            if (uVar5 <= uVar1) {\n                return;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x41cc38;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x41cc49;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41cc53;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x41cc65;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41cc6f;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x41cc74;\n            fcn.00433300();\n            *(*0x20 + -0x40) = 0x41cc79;\n            fcn.00433120();\n            *(*0x20 + -0x40) = 0x41cc7e;\n            fcn.004330a0();\n            *(*0x20 + -0x40) = 0x41cc8f;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41cc99;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x41ccaa;\n            fcn.004339a0();\n            *(*0x20 + -0x40) = 0x41ccb4;\n            fcn.004336a0();\n            *(*0x20 + -0x40) = 0x41ccb9;\n            fcn.00433300();\n            *(*0x20 + -0x40) = 0x41ccbe;\n            fcn.00433120();\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x40) = 0x41cccf;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41ccda;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1128
    },
    "0041d080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d080(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    int32_t iVar6;\n    \n    while( true ) {\n        uVar2 = *(in_RAX + 0x110);\n        iVar6 = uVar2;\n        if (uVar2 >> 0x20 <= iVar6) {\n            return 0;\n        }\n        if (iVar6 < 0) break;\n        LOCK();\n        puVar1 = in_RAX + 0x110;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | iVar6 + 1));\n        if (uVar2 == uVar3) {\n            return 1;\n        }\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004317e0();\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 318
    },
    "0041d160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d160(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar2 = *(in_RAX + 0x110);\n                uVar3 = uVar2 - 1;\n                if (uVar3 < 0) break;\n                LOCK();\n                puVar1 = in_RAX + 0x110;\n                bVar5 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | uVar3));\n                if (bVar5) {\n                    return uVar2 ^ !bVar5 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + -0x10) = uVar2 >> 0x20;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x30) = 0x41d1cb;\n            fcn.004330a0();\n            *(*0x20 + -0x30) = 0x41d1dc;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x41d1e9;\n            fcn.004337a0();\n            *(*0x20 + -0x30) = 0x41d1fa;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x41d207;\n            fcn.004337a0();\n            *(*0x20 + -0x30) = 0x41d20c;\n            fcn.00433300();\n            *(*0x20 + -0x30) = 0x41d211;\n            fcn.00433120();\n            *(*0x20 + -0x30) = 0x41d225;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41d230;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 656
    },
    "0041d240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d240(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar2 = *(in_RAX + 0x110),  -1 < uVar2) {\n                LOCK();\n                puVar1 = in_RAX + 0x110;\n                bVar4 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar4 * (*puVar1 ^ (uVar2 & 0xffffffff | unaff_EBX << 0x20));\n                if (bVar4) {\n                    return uVar2 ^ !bVar4 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = uVar2;\n            *(*0x20 + -0x28) = 0x41d2a5;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x41d2b6;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x41d2c5;\n            fcn.004337a0();\n            *(*0x20 + -0x28) = 0x41d2d6;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x41d2e5;\n            fcn.004337a0();\n            *(*0x20 + -0x28) = 0x41d2ea;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x41d2ef;\n            fcn.00433120();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x28) = 0x41d305;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x41d314;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 688
    },
    "0041eea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041eea0(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x41ef4d;\n                    iVar1 = fcn.004216a0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x41ef27;\n                        iVar1 = fcn.004216a0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x41ef8b;\n                fcn.004599e0(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x41ef9c;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41efb0;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 882
    },
    "00420f21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00420f21(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x54de9c == -0x80000000) {\n        *0x573f98 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x5a2508) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x573f78 - *0x573f80 < 1) {\n            *0x573f98 = 0.0;\n        }\n        else {\n            *0x573f98 = (*0x573f78 - *0x573f80) / iVar1;\n            *0x573f90 = *0x5a2508;\n            *0x573f88 = *0x573f80;\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00420fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420fc0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = fcn.004216a0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.004219e0();\n    if (iVar2 == 0) {\n        iVar2 = fcn.004216a0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00421920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421920(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00421640();\n    fcn.00409840();\n    return;\n}\n",
        "token_count": 87
    },
    "00421980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421980(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004215e0();\n    fcn.00409840();\n    return;\n}\n",
        "token_count": 88
    },
    "004219e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004219e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54e100 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x54e100 >> 0x13) << 3;\n        *0x54e100 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.004215e0();\n    return piVar1;\n}\n",
        "token_count": 176
    },
    "00421a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.00421a80(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x421aa5;\n            iVar2 = fcn.004216a0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x421af3;\n                fcn.0045a340(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x421afd;\n                fcn.00421980();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x421b19;\n            in_RAX = fcn.004599e0(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x421b25;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 481
    },
    "00422040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00422040(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x573fb0);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x20000 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "004228a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004228a0(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uStack56 = 0;\n    uStack48 = 0x422960;\n    auStack24 = CONCAT151(SUB1615(CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da))) >> 8\n                                  , 0), param_1);\n    auStack24 = CONCAT88(&uStack56, auStack24._0_8_);\n    fcn.004571e0();\n    return uStack56;\n}\n",
        "token_count": 250
    },
    "004229e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004229e0(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x4229ff;\n                fcn.00422dc0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x422a1a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x422a2e;\n        fcn.0045ba20();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 368
    },
    "004238e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004238e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 81
    },
    "004239e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004239e0(uchar param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045ba20();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.00409aa0();\n    fcn.00423a60(param_1);\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 130
    },
    "004242c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004242c0(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x4242ef;\n            fcn.00409aa0();\n            *(*0x20 + -0x30) = 0x4242fb;\n            uVar3 = fcn.00414360();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x42430e;\n            fcn.00409cc0();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x42432a;\n            cVar2 = fcn.00424080();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x424349;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x424359;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 537
    },
    "004244c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004244c0(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x5a1e50;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x5a1e50 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x5a1e50 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00424554:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x424575;\n                fcn.00409aa0();\n                piVar2 = *0x5a1e50;\n                if (*0x5a1e50 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x5a1e50 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004245f4:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42476c;\n                        fcn.00409cc0();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x424605;\n                    piVar4 = fcn.004248e0();\n                    piVar2 = *0x5a1e50;\n                    if (*0x5a1e50 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x5a1e50 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00424680:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x5a1e48;\n                            *(*0x20 + -0x48) = 0x42474a;\n                            *0x5a1e48 = piVar4;\n                            fcn.00409cc0();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004246e5:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x5a1e50;\n                                *(*0x20 + -0x48) = 0x424716;\n                                *0x5a1e50 = piVar4;\n                                fcn.00409cc0();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x424799;\n                            fcn.004317e0();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004246e5;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = piVar4 + uVar7 + 0x10;\n                                goto code_r0x004246e5;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x4247a6;\n                        fcn.00459a00(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x5a1e50;\n                        **0x5a1e50 = **0x5a1e50 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00424680;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = piVar2 + uVar7 + 0x10;\n                            goto code_r0x00424680;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x4247b3;\n                    fcn.00459a00(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x5a1e50;\n                    **0x5a1e50 = **0x5a1e50 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004245f4;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004245f4;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x4247bd;\n                fcn.00459a00(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x5a1e50;\n                **0x5a1e50 = **0x5a1e50 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00424554;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = piVar2 + uVar3 + 0x10;\n                    goto code_r0x00424554;\n                }\n            }\n            *(*0x20 + -0x48) = 0x4247c7;\n            in_RAX = fcn.00459a00(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4247d2;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1842
    },
    "004247e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004247e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004244c0();\n    return;\n}\n",
        "token_count": 81
    },
    "00424820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424820(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    if (*0x5a1e60 != 0) {\n        iVar1 = *0x5a1e60;\n        if (*0x5a1e48 == 0) {\n            *0x5a1e48 = *0x5a1e60;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x5a1e48;\n            *0x5a1e48 = *0x5a1e60;\n        }\n    }\n    uVar2 = *0x5a1e50;\n    *0x5a1e60 = *0x5a1e58;\n    *0x5a1e58 = *0x5a1e50;\n    *0x5a1e50 = 0;\n    fcn.00409cc0(uVar2);\n    return;\n}\n",
        "token_count": 316
    },
    "004248e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004248e0(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5a1e48 != 0) {\n                *(*0x20 + -0x18) = *0x5a1e48;\n                *0x5a1e48 = *(*0x5a1e48 + 8);\n                *(*0x20 + -0x30) = 0x42491f;\n                fcn.0045a040();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00424962;\n            }\n            *(*0x20 + -0x30) = 0x424934;\n            fcn.00409cc0();\n            *(*0x20 + -0x30) = 0x424945;\n            iVar1 = fcn.00413640();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42495d;\n                fcn.00409aa0();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00424962:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x424985;\n            fcn.004317e0();\n        }\n        *(puVar3 + -8) = 0x42498b;\n        fcn.00457320();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00426ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00426ae0(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.004599e0(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 702
    },
    "00429200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00429200(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x5a1c20 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x5a1c20) {\n        uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar3 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n        auVar2 = SEXT816(*0x5a1c20);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0)) & 0xffffffffffffffff) % auVar2, \n                                0);\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.004292e0(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "004294c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004294c0(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n                *(*0x20 + -0x20) = 0x4294f1;\n                fcn.00429520();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42950c;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x429517;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "00429860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429860(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x58) = 0;\n            *(*0x20 + -0x60) = 0x42989e;\n            uVar1 = fcn.0044e660(0, arg2, unaff_RDI, 0x20);\n            if (0x1f < uVar1) {\n                return;\n            }\n            if (uVar1 < 0x20) {\n                *(*(*0x20 + 0x20) + uVar1 * 8) = 0;\n                return;\n            }\n            uVar2 = 0x20;\n            *(*0x20 + -0x60) = 0x4298c9;\n            in_RAX = fcn.004599e0(0x20);\n            unaff_RDI = arg1;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = uVar2;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x4298e5;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "00429900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429900(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433920();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    else {\n        fcn.00452a40();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433920();\n        fcn.004339a0();\n        fcn.00433800();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.004339a0();\n        fcn.00433120();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00451e40();\n        fcn.004571e0();\n    }\n    else {\n        fcn.00451e40();\n        fcn.00451180(0);\n    }\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 421
    },
    "00429ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429ba0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433920();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433120();\n    fcn.00451e40();\n    fcn.004571e0();\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 239
    },
    "00429d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429d40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433120();\n    fcn.00452080();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433120();\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 221
    },
    "00429e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00429e00(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x429e50;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x429e65;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 338
    },
    "00429e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429e80(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x429f2a;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x429f45;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 576
    },
    "0042a020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a020(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar5 = 0;\n    uVar1 = arg1;\n    while (uVar6 = uVar1,  8 < uVar6 - uVar5) {\n        iVar7 = (uVar6 - uVar5) / 2;\n        uVar1 = iVar7 + uVar5;\n        if (arg1 <= uVar1) goto code_r0x0042a110;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return iVar7 + uVar5 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar5 = iVar7 + uVar5 + 1;\n            uVar1 = uVar6;\n        }\n    }\n    while( true ) {\n        if (uVar6 <= uVar5) {\n            return uVar6;\n        }\n        if (arg1 <= uVar5) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar5 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar5;\n        }\n        uVar5 = uVar5 + 1;\n    }\n    arg1 = fcn.004599e0(arg1);\ncode_r0x0042a110:\n    fcn.004599e0(arg1);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 514
    },
    "0042a940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042a940(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    while( true ) {\n        uVar13 = *(in_RAX + 0x20);\n        uVar10 = uVar13 >> 0x20;\n        if (uVar13 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar13 >> 0x29) break;\n        while (uVar11 = uVar13 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar13 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar13 & 0xffffffff));\n            if (uVar13 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar12 = *piVar2;\n                while (iVar12 == 0) {\n                    iVar12 = *piVar2;\n                }\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    iVar9 = *piVar4;\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.00409840(uVar6, iVar9);\n                }\n                return iVar12;\n            }\n            uVar13 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 618
    },
    "0042aa80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042aa80(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) < uVar6 || *(in_RAX + 0x10) == uVar6) goto code_r0x0042aaf6;\n                piVar5 = uVar6 * 8 + *(in_RAX + 8);\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x0042aaf6;\n                uVar4 = *(iVar2 + 0x10);\n                uVar6 = uVar4;\n                if (uVar4 != 0) {\n                    if (uVar4 != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x42aaf0;\n                        fcn.00409840(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0042aaf6:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x42ab1d;\n                    fcn.004317e0();\n                }\n                *(*0x20 + -0x30) = 0x42ab2e;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x42ab3d;\n            fcn.004330a0();\n            *(*0x20 + -0x30) = 0x42ab4e;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x42ab58;\n            fcn.004336a0();\n            *(*0x20 + -0x30) = 0x42ab69;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x42ab75;\n            fcn.004336a0();\n            *(*0x20 + -0x30) = 0x42ab7a;\n            fcn.00433300();\n            *(*0x20 + -0x30) = 0x42ab7f;\n            fcn.00433120();\n            *(*0x20 + -0x30) = 0x42ab90;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42ab9b;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 937
    },
    "0042abc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.0042abc0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040bf00(0x5a4678);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 261
    },
    "0042ac60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ac60(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42ac9e;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x42acaf;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x42acbd;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x42acce;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x42acd5;\n            fcn.004336a0();\n            *(*0x20 + -0x28) = 0x42acda;\n            fcn.00433300();\n            *(*0x20 + -0x28) = 0x42acdf;\n            fcn.00433120();\n            *(*0x20 + -0x28) = 0x42acf0;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x42acfb;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 506
    },
    "0042ad40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ad40(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004336a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.004317e0();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 223
    },
    "0042aee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042aee0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.00409cc0();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x227c;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004336a0();\n            fcn.00433300();\n            fcn.00433120();\n            fcn.004317e0();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0042b540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b540(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42b585;\n            fcn.0042eca0();\n            *0x53a360 = *(*0x20 + -0x18);\n            if (*0x53a360 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42b5b9;\n            fcn.0045ae80();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + 0x28);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42b5da;\n            fcn.004330a0();\n            *(*0x20 + -0x48) = 0x42b5eb;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x42b5f5;\n            fcn.004336a0();\n            *(*0x20 + -0x48) = 0x42b606;\n            fcn.004339a0();\n            *(*0x20 + -0x48) = 0x42b60b;\n            fcn.00433120();\n            *(*0x20 + -0x48) = 0x42b61c;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x42b625;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 669
    },
    "0042bae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bae0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42bb1b;\n                fcn.0042b440(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42bb2e;\n            fcn.004330a0();\n            *(*0x20 + -0x30) = 0x42bb3f;\n            fcn.004339a0();\n            *(*0x20 + -0x30) = 0x42bb4b;\n            fcn.004337a0();\n            *(*0x20 + -0x30) = 0x42bb50;\n            fcn.00433300();\n            *(*0x20 + -0x30) = 0x42bb55;\n            fcn.00433120();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42bb66;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42bb7e;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "0042bba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042bba0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42bbe9;\n                    fcn.0042eba0();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42bc1d;\n                fcn.004317e0();\n            }\n            *(*0x20 + -0x30) = 0x42bc25;\n            in_RAX = fcn.004599e0(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42bc3f;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 569
    },
    "0042c980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c980(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042eca0();\n    if (iStack16 != 0) {\n        *0x5a1b47 = 1;\n        fcn.0042eb20();\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0042cea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042cea0(void)\n\n{\n    fcn.0042eb20();\n    return -*0x5a1d10 * *0x5a1d08;\n}\n",
        "token_count": 44
    },
    "0042cf20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042cf20(void)\n\n{\n    fcn.0042eb20();\n    fcn.0042eb20();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042d300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d300(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.0042eba0();\n        fcn.00441460(arg1);\n        return;\n    }\n    fcn.004599e0(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 99
    },
    "0042d600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d600(void)\n\n{\n    fcn.00409aa0();\n    *0x5a1b68 = 1;\n    fcn.0042eb20();\n    return;\n}\n",
        "token_count": 47
    },
    "0042e2e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e2e0(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.0042eda0();\n    if (iStack32 != 0) {\n        fcn.0042eb20();\n        return;\n    }\n    if (*0x5a1b68 != 0) goto code_r0x0042e41d;\n    do {\n        fcn.0045ae80();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.004337a0();\n        fcn.004339a0();\n        fcn.004336a0();\n        fcn.004339a0();\n        fcn.00433120();\n        fcn.004317e0();\ncode_r0x0042e41d:\n        fcn.00409aa0();\n        fcn.00409aa0();\n    } while( true );\n}\n",
        "token_count": 200
    },
    "0042e8e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042e8e0(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.0042eb20();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.0042eb20();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.0042eb20();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0042eac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eac0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 99
    },
    "0042eb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eb20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 121
    },
    "0042eba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eba0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 121
    },
    "0042ec20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ec20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 129
    },
    "0042eca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eca0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 129
    },
    "0042ed20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ed20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 129
    },
    "0042eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eda0(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 129
    },
    "0042ee20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042ee20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + 0x28) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042e9e0();\n    return;\n}\n",
        "token_count": 129
    },
    "0042eee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042eee0(void)\n\n{\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 25
    },
    "00430540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430540(ulong param_1, ulong param_2)\n\n{\n    ulong arg3;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x98) = 0x430573;\n            iVar1 = fcn.004317a0();\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((*(iVar1 + 0x10) == 0x778cdb8) && (param_2 = 0x472ea0,  iVar1 == 0x472ea0)) {\n                uVar2 = unaff_RBX[1];\n                arg3 = *unaff_RBX;\n                unaff_RBX = 0x483e4b;\n                *(*0x20 + -0x98) = 0x4305c6;\n                fcn.004470c0(0x20, 0x472ea0, arg3, uVar2);\n                *(*0x20 + -0x98) = 0x4305cb;\n                iVar1 = fcn.004317e0();\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x98) = 0x4305e5;\n            uVar2 = fcn.00452a40();\n            puVar3 = 0x483e4b;\n            *(*0x20 + -0x98) = 0x43060d;\n            fcn.004470c0(0x20, param_2, uVar2, unaff_RBX);\n            *(*0x20 + -0x98) = 0x430612;\n            fcn.004317e0();\n        }\n        *(puVar4 + -8) = 0x430618;\n        fcn.00457320();\n        unaff_RBX = puVar3;\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 600
    },
    "004308a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004308a0(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 85
    },
    "004317e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004317e0(void)\n\n{\n    fcn.004571e0();\n    fcn.00431b20();\n    return;\n}\n",
        "token_count": 34
    },
    "004318e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004318e0(void)\n\n{\n    fcn.004571e0();\n    fcn.00431b20();\n    return;\n}\n",
        "token_count": 34
    },
    "004330a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004330a0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.00409aa0();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 203
    },
    "004332c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004332c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004339a0();\n    return;\n}\n",
        "token_count": 81
    },
    "00433300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433300(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004339a0();\n    return;\n}\n",
        "token_count": 80
    },
    "00433340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433340(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_AL == '\\0') {\n        fcn.004339a0();\n    }\n    else {\n        fcn.004339a0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00433600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433600(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004333a0(param_1, param_2);\n    fcn.004333a0(param_1, param_2);\n    fcn.004339a0();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 147
    },
    "004337a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004337a0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (in_RAX < 0) {\n        fcn.004339a0();\n    }\n    fcn.004336a0();\n    return;\n}\n",
        "token_count": 111
    },
    "00433800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433800(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43384f;\n            uVar2 = fcn.00459c6b();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x480d05),  0xf < uVar2 ||\n                 (iVar1 = *0x5a1c98 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x5a1c98, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x4338d8;\n                    fcn.00433180(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x4338f2;\n                fcn.004599e0(100);\n            }\n            *(*0x20 + -0x90) = 0x4338fc;\n            in_RAX = fcn.004599e0(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x433907;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "00433920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433920(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00433800();\n    return;\n}\n",
        "token_count": 79
    },
    "00433960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433960(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00433800();\n    return;\n}\n",
        "token_count": 79
    },
    "00433a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433a20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.004337a0();\n    fcn.004339a0();\n    fcn.00433120();\n    fcn.00433800();\n    return;\n}\n",
        "token_count": 145
    },
    "00433b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433b00(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    *0x5a1c98 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.004330a0();\n                fcn.00433300();\n                fcn.00433120();\n            }\n            fcn.004330a0();\n            fcn.00433800();\n            fcn.004339a0();\n            fcn.00433120();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00433180(1);\n        fcn.004330a0();\n        fcn.00433800();\n        fcn.00433120();\n        fcn.004330a0();\n        fcn.004332c0();\n        fcn.00433120();\n        puVar2 = fcn.004490a0();\n        if (puVar2 != NULL) {\n            fcn.00449820();\n            uVar3 = fcn.00448f20(*puVar2);\n            fcn.004330a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.004339a0();\n            fcn.00433800(uVar3);\n            fcn.004339a0();\n            fcn.00433120();\n        }\n    }\n    *0x5a1c98 = 0;\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 512
    },
    "00434380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434380(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return;\n}\n",
        "token_count": 80
    },
    "00434d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434d80(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar1 = *0x54dcf8;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 156
    },
    "00434e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434e40(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5a1c08,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00434ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00434ee0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00401080();\n    *0x5a1b53 = *0x5a2267;\n    *0x5a1b54 = *0x5a226a;\n    *0x5a1b55 = *0x5a226e;\n    return;\n}\n",
        "token_count": 134
    },
    "00435220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435220(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e6d0 - *0x54e6e0 <= *0x54e6d8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x54e6d8;\n            *(*0x20 + -0x28) = 0x435265;\n            fcn.004330a0();\n            *(*0x20 + -0x28) = 0x435276;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x435285;\n            fcn.004337a0();\n            *(*0x20 + -0x28) = 0x435296;\n            fcn.004339a0();\n            *(*0x20 + -0x28) = 0x43529b;\n            fcn.00433120();\n            *(*0x20 + -0x28) = 0x4352ac;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x4352b2;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 392
    },
    "004352c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004352c0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x54e6d0 <= *0x54e6d0 + 1) {\n                *(*0x20 + -0x10) = *0x54e6d0;\n                *(*0x20 + -0x28) = 0x4352f6;\n                *0x54e6d0 = *0x54e6d0 + 1;\n                fcn.00435220();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x435316;\n            fcn.004317e0();\n        }\n        *(puVar1 + -8) = 0x43531c;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 310
    },
    "004366c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004366c0(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x436709;\n                fcn.00457100();\n                *(*0x20 + -0x28) = 0x436725;\n                fcn.0042e480();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x54e2c0) {\n                    *(*0x20 + -0x28) = 0x43673c;\n                    fcn.004367c0();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x43675d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x54e2c0) {\n                    *(*0x20 + -0x28) = 0x43677e;\n                    fcn.0043dd60();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x436797;\n                fcn.0043a020();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x4367b2;\n            fcn.004317e0();\n        }\n        *(puVar4 + -8) = 0x4367b8;\n        fcn.00457320();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "00436800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436800(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.00409e20();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 57
    },
    "00437300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00437300(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x5a1b70,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *0x5a1b70 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.004375e0();\n        uVar3 = *0x5a1c48;\n        *0x5a1c48 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00437380();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00437380();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 252
    },
    "004382a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004382d7)\n\nvoid fcn.004382a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54e6f8 != 0) {\n        if (*0x54e6fc != 0) {\n            return;\n        }\n        LOCK();\n        *0x54e6fc = 1;\n        fcn.00437cc0();\n        return;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00439c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439c20(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*0x54e6a8 == 0) {\n        if ((*0x54e6b0 == 0) || (in_RAX < *0x54e6b0)) {\n            fcn.0042b640();\n        }\n    }\n    else {\n        fcn.004382a0();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043b600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043b600(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.0043b120();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.004571e0();\n    }\n    fcn.00435c80(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.004571e0();\n    }\n    fcn.004571e0();\n    fcn.0043b120();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 427
    },
    "0043bd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043bd40(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar2 = fcn.0043fba0();\n    iVar1 = *0x54e790;\n    if ((iVar2 != 0) && (*0x54e790 != 0)) {\n        *0x54e790 = 0;\n        fcn.00409da0(iVar1);\n    }\n    fcn.00409cc0();\n    if (iVar2 != 0) {\n        fcn.0043dd60();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0043bf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043bf60(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = fcn.0040bba0();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.004571e0();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043e040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e040(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    *0x54e6cc = *0x54e6cc + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043e0a0();\n    }\n    fcn.00409cc0();\n    return;\n}\n",
        "token_count": 142
    },
    "0043f760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043f760(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    *(in_RAX + 0x128) = *0x54e6c0;\n    *0x54e6c8 = *0x54e6c8 + 1;\n    *0x54e6c0 = in_RAX;\n    fcn.0043e0a0();\n    return;\n}\n",
        "token_count": 148
    },
    "0043fd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0043fd40(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.0043fe40(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 402
    },
    "00441120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441120(uint64_t param_1, uint64_t param_2)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x5a1fe0 = 1;\n            *0x5a2000 = 1;\n            *0x5a2020 = 1;\n            iVar5 = 7;\n            *(*0x20 + -0x88) = 0x441167;\n            uVar3 = fcn.00406960();\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x5a2024 = (*0x5a2028 | *0x5a202c | *0x5a2030) != 0;\n                    *(*0x20 + -0x88) = 0x44132e;\n                    fcn.00406960();\n                    *(*0x20 + -0x88) = 0x441333;\n                    fcn.004553c0();\n                    *0x5a1bb4 = *0x53a28c;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x441199;\n                fcn.00402700(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    param_2 = *(*0x20 + -0x28);\n                    iVar7 = 0;\n                    iVar5 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x00441432;\n                    if (param_2 < param_1 + 1) goto code_r0x0044142a;\n                    iVar7 = (param_2 - param_1) + -1;\n                    param_2 = *(*0x20 + -0x28);\n                    iVar5 = (param_1 + 1 & -iVar7 >> 0x3f) + param_2;\n                }\n                *(*0x20 + -0x60) = iVar7;\n                *(*0x20 + -0x10) = iVar5;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = param_2;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x441226;\n                fcn.00402700(param_1, param_2);\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                param_1 = *(*0x20 + -0x68);\n                if (-1 < param_1) break;\ncode_r0x00441169:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar4 = *(*0x20 + -0x50);\n            param_2 = uVar4;\n            if (param_1 <= uVar4) {\n                if (param_1 + 1 <= uVar4) {\n                    param_2 = (uVar4 - param_1) - 1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((param_1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x4412b3;\n                        uVar4 = param_2;\n                        uVar3 = fcn.00447e00();\n                        cVar2 = param_2;\n                        param_2 = uVar4;\n                        if (cVar2 != '\\0') {\n                            *0x5a1bf8 = uVar3;\n                        }\n                    }\n                    else if (*0x547458 != 0) {\n                        *(*0x20 + -0x58) = param_1;\n                        *(*0x20 + -0x38) = param_2;\n                        *(*0x20 + -0x30) = (param_1 + 1 & -param_2 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x547458;\n                        iVar8 = 0;\n                        iVar5 = *0x547458;\n                        iVar7 = *0x547450;\n                        while( true ) {\n                            uVar4 = *(iVar7 + 8);\n                            uVar3 = *(iVar7 + 0x10);\n                            if (uVar4 == param_1) {\n                                *(*0x20 + -0x48) = iVar8;\n                                *(*0x20 + -0x18) = iVar7;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x441385;\n                                cVar2 = fcn.004025a0(uVar4, param_2);\n                                if (cVar2 == '\\0') {\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x4413c7;\n                                    iVar5 = fcn.00447e00();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    param_1 = *(*0x20 + -0x58);\n                                    param_2 = *(*0x20 + -0x38);\n                                    iVar5 = *(*0x20 + -0x40);\n                                    iVar7 = *(*0x20 + -0x18);\n                                    iVar8 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar8 = iVar8 + 1;\n                            if (iVar5 <= iVar8) break;\n                            iVar7 = iVar7 + 0x18;\n                        }\n                    }\n                    goto code_r0x00441169;\n                }\n                *(*0x20 + -0x88) = 0x441425;\n                fcn.00459aa0(uVar4);\n                param_1 = uVar4;\n            }\n            *(*0x20 + -0x88) = 0x44142a;\n            fcn.00459a20(param_1, param_2);\ncode_r0x0044142a:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x441432;\n            param_2 = param_1;\n            fcn.00459aa0(param_1);\ncode_r0x00441432:\n            *(*0x20 + -0x88) = 0x441437;\n            fcn.00459a20(param_1, param_2);\n        }\n        *(puVar6 + -8) = 0x44143d;\n        fcn.00457320();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1951
    },
    "00441460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441460(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x30) = 0x4414a5;\n                fcn.0045b2e0();\n                unaff_R14 = **(in_GS_OFFSET + 0x28);\n                iVar1 = *(*0x20 + -0x10);\n                iVar4 = iVar1;\n                if (0x10 < iVar1) {\n                    iVar4 = 0x10;\n                }\n                uVar2 = *(*0x20 + -0x28);\n                unaff_RDI = *(*0x20 + 0x10);\n                if (unaff_RDI <= iVar1 - iVar4) break;\n                *(*0x20 + -0x30) = 0x4414f0;\n                uVar3 = fcn.00459420(iVar4);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar1 = *(*0x20 + 8);\n                iVar4 = 0;\n                for (unaff_RDI = *(*0x20 + -0x10); (iVar4 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x30) = 0x441545;\n                        fcn.004599e0(unaff_RBX);\n                        unaff_RBX = uVar2;\n                        goto code_r0x00441545;\n                    }\n                    *(iVar1 + unaff_RDI) = uVar3;\n                    iVar4 = iVar4 + 1;\n                    uVar3 = uVar3 >> 8;\n                }\n            }\ncode_r0x00441545:\n            *(*0x20 + -0x30) = 0x441550;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.004599e0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x44156a;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 877
    },
    "004415e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004415e0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.004571e0();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004427e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004427e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042eb20();\n    fcn.0042eb20();\n    return;\n}\n",
        "token_count": 90
    },
    "00442880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442880(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0042eba0();\n    if (*0x54d528 == 0) {\n        fcn.0042eb20();\n    }\n    else {\n        fcn.0042eba0();\n        fcn.0042eba0();\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004433e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004433e0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040b1e0(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00443458;\n        do {\n            unaff_RBX = 0x4f0cd8;\n            uVar3 = fcn.00431040();\ncode_r0x00443458:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x4f0ce8;\n        fcn.00431040();\n    } while( true );\n}\n",
        "token_count": 390
    },
    "00444de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444de0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "00444ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00444ee0(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.00409aa0();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.0045a340(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.00409cc0();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 492
    },
    "004470c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004470c0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00446d80(3);\n    return;\n}\n",
        "token_count": 124
    },
    "004471a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004471a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00446d80(4);\n    return;\n}\n",
        "token_count": 124
    },
    "004474c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004474c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + -0x20) = 0x4474fc;\n                iVar1 = fcn.004479e0();\n                return iVar1;\n            }\n            if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return in_RAX;\n                }\n                *(*0x20 + -0x20) = 0x447525;\n                fcn.004599e0(0);\n            }\n            *(*0x20 + -0x20) = 0x447532;\n            in_RAX = fcn.00459a20(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x447545;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 424
    },
    "00447560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447560(uchar (*arg1) [16])\n\n{\n    uchar (*in_RAX) [16];\n    uchar (*arg1_00) [16];\n    uchar (*unaff_RBX) [16];\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((in_RAX == NULL) || (0x20 < arg1)) {\n        in_RAX = fcn.00447a80();\n        arg1_00 = unaff_RBX;\n    }\n    else {\n        *in_RAX = in_XMM15;\n        in_RAX[1] = in_XMM15;\n        arg1_00 = arg1;\n    }\n    if (arg1 < arg1_00) {\n        arg1_00 = arg1;\n    }\n    if (unaff_RBX != in_RAX) {\n        fcn.0045a340(arg1_00);\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00447800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00447800(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x447855;\n                iVar1 = fcn.00454ae0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44788e;\n            uVar2 = fcn.004474c0();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + -0x48);\n            iVar7 = 0;\n            arg1_00 = 0;\n            while ((iVar7 < iVar4 && (arg1_00 < iVar6))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00447988;\n                *(*0x20 + -0x28) = iVar7;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x4478f6;\n                iVar3 = fcn.00454ae0(iVar1 - arg1_00);\n                iVar7 = *(*0x20 + -0x28) + 1;\n                iVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x447988;\n            fcn.00459a20(arg1_00, unaff_RBX);\ncode_r0x00447988:\n            *(*0x20 + -0x80) = 0x447993;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.00459aa0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x4479ad;\n        fcn.00457320();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1128
    },
    "00448140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00448140(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402700(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 166
    },
    "00448200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448200(void)\n\n{\n    uint16_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg1;\n    uint64_t arg1_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1_01;\n    ulong arg1_02;\n    int64_t unaff_R14;\n    \ncode_r0x00448200:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x78;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x30) = 0;\n        iVar3 = 0;\n        uVar4 = 0;\n        while (arg1 = 0x3fffffffffff,  uVar4 < 0x3fffffffffff) {\n            *(*0x20 + -0x48) = iVar3;\n            uVar1 = *(in_RAX + uVar4 * 2);\n            arg1_00 = uVar1;\n            if (uVar1 == 0) {\n                *(*0x20 + -0x80) = 0x44828e;\n                uVar2 = fcn.004479e0();\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x10) = uVar4;\n                *(*0x20 + -0x28) = arg1_00;\n                *(*0x20 + -0x20) = 0x3fffffffffff;\n                iVar3 = *(*0x20 + 8);\n                iVar6 = *(*0x20 + -0x48);\n                uVar7 = 0;\n                arg1_01 = 0;\n                goto code_r0x00448332;\n            }\n            *(*0x20 + -0x38) = uVar4;\n            unaff_RBX = 8;\n            *(*0x20 + -0x80) = 0x448246;\n            iVar3 = fcn.00454ae0(8);\n            iVar3 = *(*0x20 + -0x48) + iVar3;\n            in_RAX = *(*0x20 + 8);\n            uVar4 = *(*0x20 + -0x38) + 1;\n        }\n        goto code_r0x004483aa;\n    }\n    goto code_r0x004483b6;\ncode_r0x00448332:\n    arg1_02 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar7) goto code_r0x0044839f;\n    if ((*(iVar3 + uVar7 * 2) == 0) || (iVar6 <= arg1_01)) {\n        if (arg1_01 < arg1_00) {\n            *(uVar4 + arg1_01) = 0;\n            if (arg1_01 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x448389;\n            fcn.00459a20(arg1_01, unaff_RBX);\n        }\n        *(*0x20 + -0x80) = 0x448394;\n        fcn.004599e0(arg1_00);\ncode_r0x00448394:\n        *(*0x20 + -0x80) = 0x44839f;\n        fcn.00459aa0(arg1_00);\n        goto code_r0x0044839f;\n    }\n    if (arg1_00 < arg1_01) goto code_r0x00448394;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x50) = arg1_01;\n    *(*0x20 + -0x80) = 0x4482eb;\n    iVar3 = fcn.00454ae0(arg1 - arg1_01);\n    uVar7 = *(*0x20 + -0x40) + 1;\n    arg1_01 = *(*0x20 + -0x50) + iVar3;\n    uVar4 = *(*0x20 + -0x10);\n    iVar3 = *(*0x20 + 8);\n    iVar6 = *(*0x20 + -0x48);\n    uVar2 = *(*0x20 + -0x18);\n    unaff_RBX = *(*0x20 + -0x58);\n    arg1 = *(*0x20 + -0x20);\n    arg1_00 = *(*0x20 + -0x28);\n    goto code_r0x00448332;\ncode_r0x0044839f:\n    *(*0x20 + -0x80) = 0x4483aa;\n    fcn.004599e0(arg1_02);\ncode_r0x004483aa:\n    *(*0x20 + -0x80) = 0x4483b5;\n    in_RAX = fcn.004599e0(arg1);\ncode_r0x004483b6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x4483c5;\n    fcn.00457320();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00448200;\n}\n",
        "token_count": 1312
    },
    "00448420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.00448420(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 161
    },
    "00449040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449040(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00448f20(*in_RAX);\n    return;\n}\n",
        "token_count": 91
    },
    "004498c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004498c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x004498c0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x4498e5;\n        iVar1 = fcn.00449820();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x00449916;\n            if (unaff_RBX <= arg1) goto code_r0x0044992d;\n            if (*(arg1 + iVar1) == '.') goto code_r0x00449916;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x00449939;\ncode_r0x00449916:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x44992d;\n    fcn.00459a20(arg1, unaff_RBX);\ncode_r0x0044992d:\n    *(*0x20 + -0x20) = 0x449938;\n    in_RAX = fcn.004599e0(unaff_RBX);\ncode_r0x00449939:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x449948;\n    fcn.00457320();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x004498c0;\n}\n",
        "token_count": 582
    },
    "00449c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449c00(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00449ae0(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00449c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449c60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00449220(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 100
    },
    "00449ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00449ce0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x449d5b;\n                uVar6 = fcn.00448f20(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x449dd9;\n                    fcn.00448f20();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x449e05;\n                    iVar7 = fcn.00449fa0(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x449e26;\n            in_RAX = fcn.00459aa0(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x449e36;\n        fcn.00457320();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 966
    },
    "00449e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449e60(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00449220(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00449f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00449f00(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.00449220(*(in_RAX + arg1 * 4 + 0x28));\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "0044c680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044c680(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00409aa0();\n    iVar4 = 0x7fffffffffffffff;\n    for (iVar3 = 0; iVar3 < *0x54dd18; iVar3 = iVar3 + 1) {\n        iVar1 = *(*0x54dd10 + iVar3 * 8);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1208);\n            if ((iVar2 != 0) && (iVar2 < iVar4)) {\n                iVar4 = iVar2;\n            }\n            iVar1 = *(iVar1 + 0x1210);\n            if ((iVar1 != 0) && (iVar1 < iVar4)) {\n                iVar4 = iVar1;\n            }\n        }\n    }\n    fcn.00409cc0();\n    return iVar4;\n}\n",
        "token_count": 275
    },
    "0044cb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cb20(ulong param_1)\n\n{\n    if (*0x54d5f0 != NULL) {\n        (***0x54d5f0)();\n        return;\n    }\n    fcn.0042d680(param_1);\n    return;\n}\n",
        "token_count": 62
    },
    "0044d460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044d460(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.00409aa0();\n    return iVar2;\n}\n",
        "token_count": 175
    },
    "0044da80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044da80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0044dae0();\n    return;\n}\n",
        "token_count": 81
    },
    "0044dc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044dc00(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044cd00(&uStack16);\n    return;\n}\n",
        "token_count": 114
    },
    "0044e4a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e4a0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    uStack16 = *0x5a2508;\n    fcn.0044cd00(&uStack16);\n    return;\n}\n",
        "token_count": 106
    },
    "0044e500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044e500(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    iStack16 = fcn.0041ca20();\n    if (iStack16 == -1) {\n        iStack16 = 0;\n        fcn.0044cd00(&iStack16);\n    }\n    else {\n        fcn.0044cd00(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "004509c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004509c0(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    char cVar3;\n    uchar uVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    char unaff_DIL;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            uVar1 = *(unaff_RBX + 8);\n            arg2 = uVar1;\n            uVar8 = uVar1;\n            if (unaff_DIL == '\\0') {\n                return uVar8;\n            }\n            if (uVar1 != 0x80000000) {\n                return uVar8;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x30) = uVar8;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + -0x60) = 0x450a25;\n            fcn.00449820();\n            if (arg1 == 0x14) {\n                *(*0x20 + -0x60) = 0x450a5c;\n                cVar3 = fcn.004025a0(0x14, arg2);\n            }\n            else {\n                if (arg1 != 0x17) goto code_r0x00450a64;\n                *(*0x20 + -0x60) = 0x450a45;\n                cVar3 = fcn.004025a0(0x17, arg2);\n            }\n            if (cVar3 == '\\0') {\ncode_r0x00450a64:\n                return *(*0x20 + -0x30);\n            }\n            iVar5 = *(*0x20 + 0x28);\n            if (iVar5 == 0) {\n                iVar5 = **(*(*0x20 + 8) + 0x28);\n                uVar4 = *(*(*(*0x20 + 8) + 0x28) + 4);\n                unaff_RSI = iVar5;\n            }\n            else {\n                uVar4 = 0;\n            }\n            *(*0x20 + -0x39) = uVar4;\n            *(*0x20 + -0x28) = iVar5;\n            *(*0x20 + -0x60) = 0x450ab3;\n            iVar5 = fcn.00448f20();\n            arg1 = *(*0x20 + -0x28);\n            if (*arg1 == iVar5) {\n                if (*(*0x20 + -0x39) == '\\0') {\n                    return arg1[2] & 0xfffffffffffffff8;\n                }\n                return *arg1[1] << 3;\n            }\n            uVar2 = *(*0x20 + -0x10);\n            *(*0x20 + -0x60) = 0x450b05;\n            uVar6 = fcn.00449820();\n            *(*0x20 + -0x20) = uVar6;\n            *(*0x20 + -0x38) = uVar2;\n            *(*0x20 + -0x60) = 0x450b14;\n            fcn.004330a0();\n            *(*0x20 + -0x60) = 0x450b25;\n            fcn.004339a0();\n            *(*0x20 + -0x60) = 0x450b34;\n            fcn.004339a0();\n            *(*0x20 + -0x60) = 0x450b39;\n            fcn.00433300();\n            *(*0x20 + -0x60) = 0x450b3e;\n            fcn.00433120();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x60) = 0x450b4f;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        puVar7[0x20] = unaff_DIL;\n        *(puVar7 + 0x28) = unaff_RSI;\n        *(puVar7 + -8) = 0x450b6e;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_DIL = puVar7[0x20];\n        unaff_RSI = *(puVar7 + 0x28);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1271
    },
    "00450ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00450ba0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00450ba0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x450c0f;\n        fcn.00459c34();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x450c28;\n        fcn.00452960(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x450c6f;\n        fcn.00459f40();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x450db0;\n                    fcn.004528e0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x00450dc8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x54d5c0;\n                if (*0x54d5c0 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x450d35;\n                    fcn.004330a0();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x450d46;\n                    fcn.004339a0();\n                    *(*0x20 + -0x290) = 0x450d50;\n                    fcn.00433800();\n                    *(*0x20 + -0x290) = 0x450d55;\n                    fcn.00433300();\n                    *(*0x20 + -0x290) = 0x450d5a;\n                    fcn.00433120();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x450d14;\n                    iVar2 = fcn.004526e0(*0x20 + -0x40);\n                    uVar8 = (iVar2 + *(*0x20 + -0x248)) - 1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x00450dd6;\ncode_r0x00450dc8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x450dd5;\n    in_RAX = fcn.004599e0(0x100000);\ncode_r0x00450dd6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x450df3;\n    fcn.00457320();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x00450ba0;\n}\n",
        "token_count": 1565
    },
    "00450ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450ec0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00449820();\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004339a0();\n    fcn.00433300();\n    fcn.00433120();\n    uVar1 = fcn.00448f20();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.00449ae0(uVar2);\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.004339a0();\n    fcn.004339a0();\n    fcn.004337a0(uVar2 & 0xffffffff);\n    fcn.00433120();\n    uVar2 = fcn.00448f20();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.00448f20();\n        fcn.004330a0();\n        fcn.004339a0();\n        fcn.00433800(uVar3);\n        fcn.00433120();\n    }\n    fcn.004330a0();\n    fcn.00433300();\n    fcn.00433120();\n    return;\n}\n",
        "token_count": 367
    },
    "00451960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.00451960(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004571e0();\n    return 0;\n}\n",
        "token_count": 85
    },
    "00451ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00451ae0(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x451b29;\n                fcn.0044e660(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x60) = 0x451b3d;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x451b5c;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "004522c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004522c0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004330a0();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433800();\n    fcn.004339a0();\n    fcn.00433120();\n    auStack32 = CONCAT88(arg1, 0x4524a0);\n    fcn.00433b00(auStack32);\n    return;\n}\n",
        "token_count": 208
    },
    "00452c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00452c00(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x53f2c0; iVar3 != 0; iVar3 = *(iVar3 + 0x220)) {\n                param_2 = *(iVar3 + 0x118);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x120),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00452dd6;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x452c8b;\n            fcn.00409aa0();\n            uVar1 = *0x54de50;\n            *(*0x20 + -0x58) = 0x452ca5;\n            puVar2 = fcn.0040de40(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x452cc5;\n            fcn.00409cc0();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x452cd3;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x452ce5;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452cf1;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x452d05;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452d0f;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x452d25;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452d2a;\n            fcn.00433120();\n            iVar3 = 0x53f2c0;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x118);\n                param_2 = *(iVar3 + 0x120);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x452d67;\n                fcn.004330a0();\n                *(*0x20 + -0x58) = 0x452d78;\n                fcn.004339a0();\n                *(*0x20 + -0x58) = 0x452d85;\n                fcn.00433800();\n                *(*0x20 + -0x58) = 0x452d96;\n                fcn.004339a0();\n                *(*0x20 + -0x58) = 0x452da5;\n                fcn.00433800();\n                *(*0x20 + -0x58) = 0x452daa;\n                fcn.00433300();\n                *(*0x20 + -0x58) = 0x452daf;\n                fcn.00433120();\n                iVar3 = *(*(*0x20 + -0x10) + 0x220);\n            }\n            *(*0x20 + -0x58) = 0x452dd6;\n            fcn.004317e0();\ncode_r0x00452dd6:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x452de5;\n            fcn.004330a0();\n            *(*0x20 + -0x58) = 0x452df6;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452e05;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x452e16;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452e25;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x452e36;\n            fcn.004339a0();\n            *(*0x20 + -0x58) = 0x452e45;\n            fcn.00433800();\n            *(*0x20 + -0x58) = 0x452e4a;\n            fcn.00433300();\n            *(*0x20 + -0x58) = 0x452e4f;\n            fcn.00433120();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x452e65;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x452e74;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1513
    },
    "00454c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454c40(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x454c6e;\n                fcn.0044cb20(unaff_RBX);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x28) = 0x454c85;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x454c9a;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 387
    },
    "00454ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00454ee0(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if (0 < *0x5a1ca0) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x5a1ca0);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.004292e0(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "00454fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454fe0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004318e0();\n    return;\n}\n",
        "token_count": 81
    },
    "00455040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455040(void)\n\n{\n    fcn.0043b180();\n    return;\n}\n",
        "token_count": 24
    },
    "00455380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455380(void)\n\n{\n    fcn.00459100();\n    return;\n}\n",
        "token_count": 23
    },
    "004554e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004554e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00452c00();\n    return;\n}\n",
        "token_count": 81
    },
    "00455560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455560(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00452c00();\n    return;\n}\n",
        "token_count": 80
    },
    "004555a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004555a0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00441c00(arg1);\n    return;\n}\n",
        "token_count": 86
    },
    "00455600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455600(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.004418c0(3);\n    return;\n}\n",
        "token_count": 85
    },
    "00455660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455660(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x455692;\n            fcn.004330a0();\n            *(*0x20 + -0x20) = 0x4556a5;\n            fcn.004339a0();\n            *(*0x20 + -0x20) = 0x4556af;\n            fcn.004336a0();\n            *(*0x20 + -0x20) = 0x4556c5;\n            fcn.004339a0();\n            *(*0x20 + -0x20) = 0x4556cf;\n            fcn.004336a0();\n            *(*0x20 + -0x20) = 0x4556d4;\n            fcn.00433300();\n            *(*0x20 + -0x20) = 0x4556d9;\n            fcn.00433120();\n            *(*0x20 + -0x20) = 0x4556ea;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4556f5;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 470
    },
    "00455700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455700(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.0045b2e0();\n    return uStack16;\n}\n",
        "token_count": 91
    },
    "00456080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00456080(ulong arg1)\n\n{\n    fcn.00456180(3);\n    return;\n}\n",
        "token_count": 28
    },
    "004560e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004560e0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.00456180(9);\n    return;\n}\n",
        "token_count": 43
    },
    "00456180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00456180(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.0045a340(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x004562df;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x4dc568;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.00402da0();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043ce60();\n        return uVar2;\n    }\n    fcn.004599e0(0);\ncode_r0x004562df:\n    fcn.00431040();\n    fcn.00430400();\n    return 0;\n}\n",
        "token_count": 443
    },
    "00459540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459540(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1268);\n    *(iVar1 + 0x1268) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1270);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045b5a0();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 209
    },
    "00459f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f08(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    uVar1 = unaff_RSI[0x41];\n    uVar2 = unaff_RSI[0x42];\n    uVar3 = unaff_RSI[0x43];\n    unaff_RDI[0x40] = unaff_RSI[0x40];\n    unaff_RDI[0x41] = uVar1;\n    unaff_RDI[0x42] = uVar2;\n    unaff_RDI[0x43] = uVar3;\n    uVar1 = unaff_RSI[0x45];\n    uVar2 = unaff_RSI[0x46];\n    uVar3 = unaff_RSI[0x47];\n    unaff_RDI[0x44] = unaff_RSI[0x44];\n    unaff_RDI[0x45] = uVar1;\n    unaff_RDI[0x46] = uVar2;\n    unaff_RDI[0x47] = uVar3;\n    uVar1 = unaff_RSI[0x49];\n    uVar2 = unaff_RSI[0x4a];\n    uVar3 = unaff_RSI[0x4b];\n    unaff_RDI[0x48] = unaff_RSI[0x48];\n    unaff_RDI[0x49] = uVar1;\n    unaff_RDI[0x4a] = uVar2;\n    unaff_RDI[0x4b] = uVar3;\n    uVar1 = unaff_RSI[0x4d];\n    uVar2 = unaff_RSI[0x4e];\n    uVar3 = unaff_RSI[0x4f];\n    unaff_RDI[0x4c] = unaff_RSI[0x4c];\n    unaff_RDI[0x4d] = uVar1;\n    unaff_RDI[0x4e] = uVar2;\n    unaff_RDI[0x4f] = uVar3;\n    return;\n}\n",
        "token_count": 2182
    },
    "00459f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f40(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1742
    },
    "00459fda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459fda(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 529
    },
    "0045b220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b220(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + 0x28) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x54d548)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 187
    },
    "0045b5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b5a0(void)\n\n{\n    fcn.0042b040();\n    return;\n}\n",
        "token_count": 27
    },
    "0045b780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b780(void)\n\n{\n    fcn.0044cb20(*0x5472f8);\n    return;\n}\n",
        "token_count": 32
    },
    "0045b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b7a0(void)\n\n{\n    fcn.0044cb20(*0x547308);\n    return;\n}\n",
        "token_count": 32
    },
    "0045b840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b840(void)\n\n{\n    fcn.0043c0c0();\n    return;\n}\n",
        "token_count": 27
    },
    "0045b880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b880(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.00440ae0(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "0045baa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045baa0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455c40();\n    return uStack24;\n}\n",
        "token_count": 36
    },
    "0045bb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045bb00(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455dc0();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045bb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045bb40(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455f20();\n    return uStack24;\n}\n",
        "token_count": 35
    },
    "0045f520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f520(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.0045f580();\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0045f580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f580(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00454fe0();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.004555a0(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.004555a0(1);\n    return;\n}\n",
        "token_count": 246
    },
    "00465f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00465f80(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x465fb1;\n            iVar5 = fcn.004433e0(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x004660b1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x004660a6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0046609b;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x00465fc2;\n                            }\n                            goto code_r0x00466090;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x00466085;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x00465fc2:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x466085;\n            fcn.00459a60(unaff_RBX, arg1);\ncode_r0x00466085:\n            *(*0x20 + -0x28) = 0x466090;\n            fcn.004599e0(arg1);\ncode_r0x00466090:\n            *(*0x20 + -0x28) = 0x46609b;\n            fcn.004599e0(arg1);\ncode_r0x0046609b:\n            *(*0x20 + -0x28) = 0x4660a6;\n            fcn.004599e0(arg1);\ncode_r0x004660a6:\n            *(*0x20 + -0x28) = 0x4660b1;\n            fcn.004599e0(arg1);\ncode_r0x004660b1:\n            *(*0x20 + -0x28) = 0x4660bc;\n            in_RAX = fcn.004599e0(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x4660d1;\n        fcn.00457320();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1067
    },
    "00466ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00466ec0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack184;\n    uchar auStack80 [72];\n    \n    while (auStack80 < *(unaff_R14 + 0x10) || auStack80 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    fcn.00402700(arg1, in_RDX);\n    if (iStack184 != -1) {\n        return 0;\n    }\n    fcn.00447020(unaff_RBX);\n    fcn.00447640(in_RAX);\n    uVar1 = fcn.00465de0(in_RAX);\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "00466fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466fc0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.00457320();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.00465f80(arg1);\n    fcn.00447800(arg1_00);\n    return;\n}\n",
        "token_count": 198
    },
    "00467220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467220(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x54d800;\n            *(*0x20 + -0x90) = 0x467293;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x4672eb;\n                uVar2 = fcn.004560e0(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x46732a;\n                    fcn.00409500();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x467365;\n            in_EAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x467390;\n        fcn.00457320();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 953
    },
    "004673c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004673c0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x54d818;\n            *(*0x20 + -0x48) = 0x4673f2;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x48) = 0x467418;\n                iVar2 = fcn.00456080(iVar1);\n                if (iVar2 == 0) {\n                    uVar3 = *0x5473f0;\n                    if ((iVar1 != 0) && (uVar3 = *0x547400,  iVar1 != 0x3e5)) {\n                        *(*0x20 + -0x48) = 0x467456;\n                        fcn.00409500();\n                        uVar3 = 0x4f0ee8;\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n                return uVar3;\n            }\n            *(*0x20 + -0x48) = 0x467485;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x467490;\n        fcn.00457320();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "004674a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004674a0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x28) = 0x4674c9;\n            fcn.00466de0(arg1);\n            if (unaff_RDI != 0) goto code_r0x004674e0;\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x004674e0:\n                if (unaff_RDI == 0) {\n                    *(*0x20 + -0x28) = 0x467505;\n                    uVar1 = fcn.00467560();\n                    return uVar1;\n                }\n                return 0;\n            }\n            iVar2 = 0;\n            *(*0x20 + -0x28) = 0x467519;\n            in_RAX = fcn.004599e0(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = iVar2;\n        *(puVar3 + -8) = 0x46752e;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 530
    },
    "00467560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00467560(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = *0x54d8c8;\n            *(*0x20 + -0x58) = 0x467597;\n            iVar1 = fcn.00466bc0();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x20);\n                *(*0x20 + -0x58) = 0x4675cc;\n                iVar2 = fcn.00456080(iVar1);\n                if (((iVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x28) = 0;\n                    *(*0x20 + -0x58) = 0x46760c;\n                    fcn.00409500();\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x58) = 0x46763c;\n            in_RAX = fcn.00431040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x46764c;\n        fcn.00457320();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 529
    },
    "00467860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00467860(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x46787e;\n            fcn.00466ec0(arg1);\n            if (unaff_RDI != 0) goto code_r0x00467892;\n            if (unaff_RBX != 0) {\n                unaff_RDI = 0;\ncode_r0x00467892:\n                if (unaff_RDI == 0) {\n                    *(*0x20 + -0x20) = 0x4678ae;\n                    uVar1 = fcn.00467900();\n                    return uVar1;\n                }\n                return 0;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x20) = 0x4678c5;\n            in_RAX = fcn.004599e0(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4678d5;\n        fcn.00457320();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 460
    },
    "00417da0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00417da0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    while( true ) {\n        uVar1 = *in_RAX;\n        if (uVar1 >> 0x3d == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 & 0x1fffffffffffffff | unaff_RBX & 0xe000000000000000;\n        iVar2 = unaff_RBX - uVar3;\n        if (unaff_RBX < uVar3) {\n            iVar2 = 0;\n        }\n        if (iVar2 == 0) break;\n        LOCK();\n        uVar3 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar3) * (*in_RAX ^ (uVar1 & 0xe000000000000000 | unaff_RBX & 0x1fffffffffffffff))\n        ;\n        if (uVar1 == uVar3) {\n            return uVar1 >> 0x3d;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "0041cac0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0041cac0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    \n    do {\n        uVar1 = *(in_RAX + 0x158);\n        iVar2 = *(in_RAX + 0x148) - *(in_RAX + 0x150);\n    } while (uVar1 < iVar2 + *(in_RAX + 0x140));\n    uVar3 = *(in_RAX + 8);\n    iVar4 = 0;\n    if (uVar3 < uVar1) {\n        iVar4 = uVar1 - uVar3;\n    }\n    uVar1 = ((uVar1 - *(in_RAX + 0x140)) - iVar2) + iVar4;\n    if (uVar1 < uVar3) {\n        uVar3 = uVar3 - uVar1;\n        if ((uVar3 < 0x100000) || (uVar3 = uVar3 - 0x100000,  uVar3 < 0x100000)) {\n            uVar3 = 0x100000;\n        }\n        if (uVar3 < *(in_RAX + 0xb8)) {\n            uVar3 = *(in_RAX + 0xb8);\n        }\n        return uVar3;\n    }\n    return *(in_RAX + 0xb8);\n}\n",
        "token_count": 326
    },
    "0041d940": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041d940(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x41d965;\n            fcn.00409aa0();\n            if (*(*(*0x20 + 8) + 8) == unaff_R14) {\n                *(*(*0x20 + 8) + 0x10) = 1;\n                *(*0x20 + -0x30) = 0x41d993;\n                fcn.00434240(0xd);\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41d9ae;\n            in_RAX = fcn.004317e0();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41d9b9;\n        fcn.00457320();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 362
    },
    "00401ec0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00401ec0(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "0042fda0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042fda0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x42fdca;\n            fcn.0042f620(0x15);\n            *(*0x20 + -0x28) = 0x42fde9;\n            fcn.00431040();\n        }\n        *(puVar1 + -8) = 0x42fdef;\n        fcn.00457320();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 235
    },
    "0042fe00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042fe00(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42fe25;\n            fcn.0042f6e0();\n            iVar1 = *0x547330;\n            if (*0x547330 != 0) {\n                iVar1 = *(*0x547330 + 8);\n            }\n            *(*0x20 + -0x20) = 0x42fe45;\n            fcn.00431040(iVar1);\n        }\n        *(puVar2 + -8) = 0x42fe4b;\n        fcn.00457320();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 279
    },
    "00430380": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00430380(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4303a5;\n            fcn.004317e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4303ab;\n        fcn.00457320();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "004303c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004303c0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4303e5;\n            fcn.004317e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4303eb;\n        fcn.00457320();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00434aa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00434aa0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x434ac5;\n            fcn.004317e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x434acb;\n        fcn.00457320();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "00434ae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00434ae0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x434b05;\n            fcn.004317e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x434b0b;\n        fcn.00457320();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00434be0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00434be0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar8 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.004317e0();\n    puVar6 = auStack24;\n    do {\n        puVar7 = puVar6;\n        if (*(unaff_R14 + 0x10) <= puVar6 && puVar6 != *(unaff_R14 + 0x10)) {\n            puVar7 = puVar6 + -0x50;\n            *(puVar6 + -8) = puVar8;\n            puVar8 = puVar6 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar6 + 8) = iVar3;\n                *(puVar6 + -0x58) = 0x434c3b;\n                fcn.00409aa0();\n                uVar2 = *0x54dcf0;\n                uVar5 = *0x54dcf8 + 1;\n                arg1 = uVar5;\n                uVar4 = *0x54dcf0;\n                uVar9 = *0x54dcf8;\n                if (*0x54dd00 < uVar5) {\n                    *(puVar6 + -0x58) = 0x434c6e;\n                    arg1 = *0x54dcf8;\n                    uVar4 = fcn.00443500(*0x54dcf8);\n                    uVar9 = uVar2;\n                    uVar2 = uVar4;\n                    *0x54dd00 = arg1;\n                    if (*0x5a1da0 != 0) {\n                        *(puVar6 + -0x58) = 0x434c93;\n                        uVar4 = fcn.00459540(arg1, uVar5, param_3, param_4);\n                        uVar2 = *0x54dcf0;\n                    }\n                }\n                *0x54dcf0 = uVar2;\n                *0x54dcf8 = uVar9 + 1;\n                if (*0x5a1da0 == 0) {\n                    *(uVar4 + uVar9 * 8) = *(puVar6 + 8);\n                }\n                else {\n                    *(puVar6 + -0x58) = 0x434cc6;\n                    fcn.00459660(arg1, *(puVar6 + 8), param_3, param_4);\n                }\n                if (*0x54dcf8 != 0) {\n                    uVar5 = *0x54d590;\n                    if ((*0x54d590 != *0x54dcf0) && (uVar5 = *0x54dcf0,  *0x5a1da0 != '\\0')) {\n                        *(puVar6 + -0x10) = *0x54dcf0;\n                        *(puVar6 + -0x58) = 0x434d05;\n                        fcn.00402d00();\n                        uVar5 = *(puVar6 + -0x10);\n                    }\n                    *0x54d590 = uVar5;\n                    uVar1 = *0x5a1c08;\n                    *0x5a1c08 = *0x54dcf8;\n                    *(puVar6 + -0x58) = 0x434d33;\n                    fcn.00409cc0(uVar1);\n                    return;\n                }\n                *(puVar6 + -0x58) = 0x434d47;\n                fcn.004599e0(0);\n            }\n            *(puVar6 + -0x58) = 0x434d58;\n            iVar3 = fcn.004317e0();\n        }\n        *(puVar7 + 8) = iVar3;\n        *(puVar7 + -8) = 0x434d65;\n        fcn.00457320();\n        iVar3 = *(puVar7 + 8);\n        puVar6 = puVar7;\n    } while( true );\n}\n",
        "token_count": 998
    },
    "00440160": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00440160(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 268
    },
    "0044cae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044cae0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44cb05;\n            fcn.004317e0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44cb0b;\n        fcn.00457320();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00459100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459100(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 54
    },
    "004599e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004599e0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f794;\n            fcn.0042f620(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x42f7d0;\n            arg1 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42f7df;\n            in_RAX = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f7ef;\n        fcn.00457320();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 451
    },
    "00459a00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459a00(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42f834;\n            fcn.0042f620(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x42f870;\n            arg1 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42f87f;\n            in_RAX = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42f88f;\n        fcn.00457320();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "00459a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459a20(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42f8d4;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x42f910;\n            arg2 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42f91f;\n            arg1 = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42f92f;\n        fcn.00457320();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 445
    },
    "00459a60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459a60(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42fa14;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x42fa50;\n            arg2 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42fa5f;\n            arg1 = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42fa6f;\n        fcn.00457320();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 443
    },
    "00459a80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459a80(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42fab4;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x42faf0;\n            arg2 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42faff;\n            arg1 = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42fb0f;\n        fcn.00457320();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 442
    },
    "00459aa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459aa0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42fb54;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x42fb90;\n            arg1 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42fb9f;\n            in_RAX = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42fbaf;\n        fcn.00457320();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "00459ac0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459ac0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42fbf4;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x42fc30;\n            arg1 = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42fc3f;\n            in_RAX = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42fc4f;\n        fcn.00457320();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00459ae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459ae0(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42fc94;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x42fcd0;\n            unaff_RBX = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42fcdf;\n            arg2 = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42fcef;\n        fcn.00457320();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 459
    },
    "00459b00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459b00(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42fd34;\n            fcn.0042f620(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x42fd70;\n            unaff_RBX = fcn.00409480();\n            *(*0x20 + -0x40) = 0x42fd7f;\n            arg2 = fcn.00431040();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42fd8f;\n        fcn.00457320();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 460
    },
    "0045ba20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0045ba20(uint64_t param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t **ppiVar6;\n    ulong *puVar7;\n    uchar uVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t in_GS_OFFSET;\n    bool bVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uchar auStack24 [16];\n    \n    uVar19 = 0;\n    uVar20 = 0;\n    uVar21 = 0;\n    uVar22 = 0;\n    iVar4 = **(in_GS_OFFSET + 0x28);\n    puVar15 = &stack0xfffffffffffffff8;\n    uVar12 = 0x32;\n    iVar5 = fcn.004317e0();\n    puVar13 = auStack24;\n    do {\n        uVar8 = param_1;\n        puVar1 = iVar4 + 0x10;\n        puVar14 = puVar13;\n        if (*puVar1 <= puVar13 + -0x78 && puVar13 + -0x78 != *puVar1) {\n            puVar14 = puVar13 + -0xf8;\n            *(puVar13 + -8) = puVar15;\n            puVar15 = puVar13 + -8;\n            *(puVar13 + 8) = iVar5;\n            *(puVar13 + 0x10) = uVar12;\n            if ((iVar5 != 0) && ((*(iVar5 + 0x17) & 0x1f) == 0x13)) {\n                *(puVar13 + -0x98) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x88) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x78) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x68) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar11 = 0x38;\n                }\n                else {\n                    iVar11 = 0x48;\n                }\n                arg1_00 = *(iVar5 + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(puVar13 + -0xb0) = iVar5;\n                    *(puVar13 + -0xc0) = iVar11 + iVar5;\n                    *(puVar13 + -0xb8) = uVar12;\n                    *(puVar13 + -200) = arg1_00;\n                    iVar11 = 0;\n                    while (iVar11 < arg1_00) {\n                        *(puVar13 + -0xd0) = iVar11;\n                        *(puVar13 + -0x100) = 0x455845;\n                        fcn.0044a140();\n                        iVar5 = *(puVar13 + -0xb0);\n                        arg1_00 = *(puVar13 + -200);\n                        iVar11 = *(puVar13 + -0xd0) + 1;\n                    }\n                    arg2 = *(puVar13 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(puVar13 + -0x78) = arg2;\n                    *(puVar13 + -0x60) = arg2;\n                    uVar2 = *(iVar5 + 0x14);\n                    arg1_00 = uVar2;\n                    uVar3 = *(iVar5 + 0x30);\n                    piVar17 = uVar3;\n                    arg1 = (*(iVar5 + 0x32) & 0x7fff) + uVar3 & 0xffff;\n                    if (piVar17 <= arg1) {\n                        arg4 = uVar3;\n                        arg3 = piVar17 << 3;\n                        uVar16 = piVar17 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar2 & 1) == 0) {\n                                iVar11 = 0x38;\n                            }\n                            else {\n                                iVar11 = 0x48;\n                            }\n                            arg1 = *(iVar11 + iVar5 + uVar16);\n                            if (*arg1 == 8) {\n                                if ((uVar2 & 1) == 0) {\n                                    iVar11 = 0x38;\n                                }\n                                else {\n                                    iVar11 = 0x48;\n                                }\n                                uVar10 = *(*(iVar11 + iVar5 + uVar16) + 0x17) & 0x1f;\n                                arg1 = uVar10;\n                                cVar9 = uVar10;\n                                if ((cVar9 != '\\r') && (cVar9 != '\\x0e')) {\n                                    if (*0x53a358 == 0) {\n                                        *(puVar13 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(puVar13 + -0x78) + 7U & 0xfffffffffffffff8) + *(puVar13 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(puVar13 + -0x100) = 0x45597c;\n                                        fcn.00409aa0();\n                                        iVar5 = *0x5a1b28;\n                                        *(puVar13 + -0xa8) = *(puVar13 + -0xb8);\n                                        puVar13[-0xa0] = 0;\n                                        *(puVar13 + -0x100) = 0x4559a5;\n                                        ppiVar6 = fcn.0040cba0(puVar13 + -0xa8);\n                                        arg1 = *ppiVar6;\n                                        if (iVar5 != '\\0') {\n                                            *(puVar13 + -0xd8) = arg1;\n                                            *(puVar13 + -0x100) = 0x455b45;\n                                            fcn.00409cc0();\n                                            return *(puVar13 + -0xd8) * 5 + 0x45c6a0;\n                                        }\n                                        iVar5 = *0x5a1b28;\n                                        if (*0x5a1b28 == 0) {\n                                            *(puVar13 + -0x100) = 0x4559bf;\n                                            iVar5 = fcn.0040c700();\n                                            if (*0x5a1da0 != 0) {\n                                                *(puVar13 + -0x100) = 0x4559dd;\n                                                fcn.00459540(arg1, arg2, arg3, arg4);\n                                                iVar5 = *0x5a1b28;\n                                            }\n                                        }\n                                        *0x5a1b28 = iVar5;\n                                        bVar18 = *0x5a1b30 < 2000;\n                                        if (*0x5a1b30 < 2000) {\n                                            *(puVar13 + -0x108) = puVar15;\n                                            *(puVar13 + -0x100) = 0x455a0f;\n                                            iVar5 = fcn.00459c70();\n                                            puVar15 = *(puVar13 + -0x108);\n                                            uVar12 = *(puVar13 + -0xb8);\n                                            *(puVar13 + -0x58) = uVar12;\n                                            *(puVar13 + -0x48) = *(puVar13 + -0x98);\n                                            *(puVar13 + -0x44) = *(puVar13 + -0x94);\n                                            *(puVar13 + -0x40) = *(puVar13 + -0x90);\n                                            *(puVar13 + -0x3c) = *(puVar13 + -0x8c);\n                                            *(puVar13 + -0x38) = *(puVar13 + -0x88);\n                                            *(puVar13 + -0x34) = *(puVar13 + -0x84);\n                                            *(puVar13 + -0x30) = *(puVar13 + -0x80);\n                                            *(puVar13 + -0x2c) = *(puVar13 + -0x7c);\n                                            *(puVar13 + -0x28) = *(puVar13 + -0x78);\n                                            *(puVar13 + -0x24) = *(puVar13 + -0x74);\n                                            *(puVar13 + -0x20) = *(puVar13 + -0x70);\n                                            *(puVar13 + -0x1c) = *(puVar13 + -0x6c);\n                                            *(puVar13 + -0x18) = *(puVar13 + -0x68);\n                                            *(puVar13 + -0x14) = *(puVar13 + -100);\n                                            *(puVar13 + -0x10) = *(puVar13 + -0x60);\n                                            *(puVar13 + -0xc) = *(puVar13 + -0x5c);\n                                            if (bVar18) {\n                                                *(puVar13 + -0xe0) = iVar5;\n                                                *(puVar13 + -200) = iVar5 * 5;\n                                                if (*0x5a1da0 == 0) {\n                                                    *(puVar13 + -0x108) = puVar15;\n                                                    *(puVar13 + -0x100) = 0x455aaf;\n                                                    fcn.00459fda();\n                                                }\n                                                else {\n                                                    *(puVar13 + -0x100) = 0x455acc;\n                                                    fcn.0040f460(puVar13 + -0x58);\n                                                    uVar12 = *(puVar13 + -0xb8);\n                                                }\n                                                *(puVar13 + -0xa8) = uVar12;\n                                                puVar13[-0xa0] = 0;\n                                                *(puVar13 + -0x100) = 0x455af3;\n                                                puVar7 = fcn.0040cde0(puVar13 + -0xa8);\n                                                *puVar7 = *(puVar13 + -0xe0);\n                                                *0x5a1b30 = *0x5a1b30 + 1;\n                                                *(puVar13 + -0x100) = 0x455b11;\n                                                fcn.00409cc0();\n                                                return *(puVar13 + -200) + 0x45c6a0;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(puVar13 + -0x100) = 0x455b73;\n                                            fcn.004599e0(2000);\n                                        }\n                                        *(puVar13 + -0x100) = 0x455b85;\n                                        fcn.00409cc0();\n                                        *(puVar13 + -0x100) = 0x455b96;\n                                        fcn.004317e0();\n                                    }\n                                    *(puVar13 + -0x100) = 0x455ba9;\n                                    fcn.00431040();\n                                }\n                                *(puVar13 + -0x100) = 0x455bbc;\n                                fcn.00431040();\n                            }\n                            *(puVar13 + -0x100) = 0x455bcf;\n                            fcn.00431040();\n                        }\n                        *(puVar13 + -0x100) = 0x455be5;\n                        fcn.00431040();\n                    }\n                    *(puVar13 + -0x100) = 0x455bed;\n                    fcn.00459aa0(arg1);\n                }\n                *(puVar13 + -0x100) = 0x455bfa;\n                fcn.00459a20(arg1_00, 0x100000);\n                uVar8 = arg1_00;\n            }\n            uVar12 = 0x4f0d38;\n            *(puVar13 + -0x100) = 0x455c0d;\n            iVar5 = fcn.00431040();\n        }\n        *(puVar14 + 8) = iVar5;\n        *(puVar14 + 0x10) = uVar12;\n        puVar14[0x18] = uVar8;\n        *(puVar14 + -8) = 0x455c25;\n        fcn.00457320();\n        iVar5 = *(puVar14 + 8);\n        uVar12 = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        puVar13 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2955
    }
}