{
    "0042062f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042062f(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00421c42(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00401110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401110(uint32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t arg_8h;\n    \n    if (param_1 == 0) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = param_1;\n        if (0xffffffff / param_1 == 0) {\n            param_1 = 0;\n            fcn.0042057f(&param_1);\n            fcn.00420b25(&stack0xfffffff0, 0x446120);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00403e25(arg_8h);\n    return;\n}\n",
        "token_count": 164
    },
    "004012a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004012a0(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.004206e0(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00403e54(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 190
    },
    "004014f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004014f0(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint32_t arg_14h;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.004377ea();\n    }\n    uVar1 = *(param_1 + 0x18);\n    if (uVar1 < param_2) {\n        fcn.00401380(param_2, *(param_1 + 0x14));\n        return param_2 != 0;\n    }\n    if ((param_3 != '\\0') && (param_2 < 0x10)) {\n        arg_14h = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            arg_14h = param_2;\n        }\n        if (0xf < uVar1) {\n            arg_10h = *(param_1 + 4);\n            if (arg_14h != 0) {\n                fcn.004206e0(param_1 + 4, 0x10, arg_10h, arg_14h);\n            }\n            fcn.00403e54(arg_10h);\n        }\n        *(param_1 + 0x14) = arg_14h;\n        *(param_1 + 0x18) = 0xf;\n        *(param_1 + 4 + arg_14h) = 0;\n        return param_2 != 0;\n    }\n    if (param_2 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < uVar1) {\n            **(param_1 + 4) = 0;\n            return false;\n        }\n        *(param_1 + 4) = 0;\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 434
    },
    "00401ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401ad0(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t *in_FS_OFFSET;\n    code *pcStack164;\n    uchar auStack120 [24];\n    code *pcStack96;\n    uchar auStack52 [16];\n    int32_t iStack36;\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a708;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if (param_3 != '\\0') {\n            pcStack164 = 0x401b24;\n            fcn.00420b25(0, 0);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 4) != 0) {\n            pcStack164 = 0x43d7bc;\n            fcn.004019e0();\n            uStack16 = 0;\n            fcn.00401930(&stack0xffffff88);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.00420b25(&stack0xffffff5c, 0x446258);\n            uVar1 = extraout_ECX_00;\n        }\n        if ((uVar1 & 2) != 0) {\n            pcStack164 = 0x43d7a4;\n            fcn.004019e0();\n            uStack16 = 1;\n            fcn.00401930(&stack0xffffff88);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.00420b25(&stack0xffffff5c, 0x446258);\n        }\n        pcStack164 = 0x43d78c;\n        fcn.004019e0();\n        uStack16 = 2;\n        fcn.00401930(&stack0xffffffcc);\n        pcStack96 = vtable.std::ios_base::failure.0;\n        fcn.00420b25(&stack0xffffffa0, 0x446258);\n    }\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 584
    },
    "00401ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401ca0(int32_t param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t **in_FS_OFFSET;\n    code *pcStack164;\n    uchar auStack120 [24];\n    code *apcStack96 [11];\n    uchar auStack52 [16];\n    int32_t *piStack36;\n    uint uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    if (*(param_1 + 0x28) == 0) {\n        param_2 = param_2 | 4;\n    }\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a708;\n    piStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack12;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if (param_3 != '\\0') {\n            pcStack164 = 0x401b24;\n            fcn.00420b25(0, 0);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 4) != 0) {\n            pcStack164 = 0x43d7bc;\n            fcn.004019e0();\n            uStack16 = 0;\n            fcn.00401930(auStack120);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.00420b25(&pcStack164, 0x446258);\n            uVar1 = extraout_ECX_00;\n        }\n        if ((uVar1 & 2) != 0) {\n            pcStack164 = 0x43d7a4;\n            fcn.004019e0();\n            uStack16 = 1;\n            fcn.00401930(auStack120);\n            pcStack164 = vtable.std::ios_base::failure.0;\n            fcn.00420b25(&pcStack164, 0x446258);\n        }\n        pcStack164 = 0x43d78c;\n        fcn.004019e0();\n        uStack16 = 2;\n        fcn.00401930(auStack52);\n        apcStack96[0] = vtable.std::ios_base::failure.0;\n        fcn.00420b25(apcStack96, 0x446258);\n    }\n    *in_FS_OFFSET = piStack36;\n    return;\n}\n",
        "token_count": 613
    },
    "00401cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401cc0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x30))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 8) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.00401ad0(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00401d10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00401d10(int32_t **param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a768;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d680 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = param_2;\n    if (*(*(*param_2 + 4) + 0x28 + param_2) != 0) {\n        fcn.004376b7(uVar1);\n    }\n    uStack4 = 0;\n    if ((*(param_2 + *(*param_2 + 4) + 8) == 0) && (*(param_2 + *(*param_2 + 4) + 0x2c) != 0)) {\n        fcn.00401cc0();\n    }\n    *(param_1 + 1) = *(*(*param_2 + 4) + 8 + param_2) == 0;\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 300
    },
    "00401e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00401e70(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *in_FS_OFFSET;\n    int32_t *var_8h;\n    char *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a7e8;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    var_14h = 0;\n    pcVar6 = var_ch_2;\n    do {\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iVar7 = pcVar6 - (var_ch_2 + 1);\n    var_18h = *(*(*var_8h + 4) + 0x18 + var_8h);\n    if ((var_18h < 1) || (var_18h <= iVar7)) {\n        var_18h = 0;\n    }\n    else {\n        var_18h = var_18h - iVar7;\n    }\n    fcn.00401d10(var_8h);\n    if (var_1ch == '\\0') {\n        var_14h = 4;\n        goto code_r0x00401f8c;\n    }\n    var_4h = 1;\n    if ((*(*(*var_8h + 4) + 0x10 + var_8h) & 0x1c0) == 0x40) {\ncode_r0x00401f5b:\n        iVar9 = (**(**(*(*var_8h + 4) + 0x28 + var_8h) + 0x20))(var_ch_2, iVar7);\n        if (iVar9 == iVar7) {\n            for (; 0 < var_18h; var_18h = var_18h + -1) {\n                uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n                piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n                if ((*piVar3[9] == 0) || (piVar4 = piVar3[0xd],  *piVar4 < 1)) {\n                    uVar8 = (**(*piVar3 + 4))(uVar2);\n                }\n                else {\n                    *piVar4 = *piVar4 + -1;\n                    puVar5 = *piVar3[9];\n                    *piVar3[9] = puVar5 + 1;\n                    *puVar5 = uVar2;\n                    uVar8 = uVar2;\n                }\n                if (uVar8 == 0xffffffff) {\n                    var_14h = 4;\n                    break;\n                }\n            }\n        }\n        else {\n            var_14h = 4;\n        }\n    }\n    else {\n        for (; 0 < var_18h; var_18h = var_18h + -1) {\n            uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n            piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n            if ((*piVar3[9] == 0) || (piVar4 = piVar3[0xd],  *piVar4 < 1)) {\n                uVar8 = (**(*piVar3 + 4))(uVar2);\n            }\n            else {\n                *piVar4 = *piVar4 + -1;\n                puVar5 = *piVar3[9];\n                *piVar3[9] = puVar5 + 1;\n                *puVar5 = uVar2;\n                uVar8 = uVar2;\n            }\n            if (uVar8 == 0xffffffff) {\n                var_14h = 4;\n                break;\n            }\n        }\n        if (var_14h == 0) goto code_r0x00401f5b;\n    }\n    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\ncode_r0x00401f8c:\n    var_4h = 0;\n    if (var_14h != 0) {\n        var_14h = *(var_8h + *(*var_8h + 4) + 8) | var_14h;\n        if (*(var_8h + *(*var_8h + 4) + 0x28) == 0) {\n            var_14h = var_14h | 4;\n        }\n        fcn.00401ad0(var_14h, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00401e00();\n    *in_FS_OFFSET = var_ch_3;\n    return var_8h;\n}\n",
        "token_count": 1243
    },
    "00402080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00402080(int32_t *param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43a818;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar5 = 0;\n    fcn.00401d10(param_1);\n    if (var_1ch == '\\0') {\n        uVar5 = 4;\n    }\n    else {\n        piVar1 = *(*(*param_1 + 4) + 0x28 + param_1);\n        var_4h = 1;\n        if ((*piVar1[9] == 0) || (piVar2 = piVar1[0xd],  *piVar2 < 1)) {\n            uVar4 = (**(*piVar1 + 4))(var_8h);\n        }\n        else {\n            *piVar2 = *piVar2 + -1;\n            puVar3 = *piVar1[9];\n            *piVar1[9] = puVar3 + 1;\n            *puVar3 = var_8h;\n            uVar4 = var_8h;\n        }\n        if (uVar4 == 0xffffffff) {\n            uVar5 = 4;\n        }\n    }\n    var_4h = 0;\n    if (uVar5 != 0) {\n        uVar5 = *(param_1 + *(*param_1 + 4) + 8) | uVar5;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar5 = uVar5 | 4;\n        }\n        fcn.00401ad0(uVar5, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00401e00();\n    *in_FS_OFFSET = var_ch_2;\n    return param_1;\n}\n",
        "token_count": 575
    },
    "004021b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004021b0(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uStack8;\n    int32_t iStack4;\n    \n    iStack4 = 0;\n    if (0 < param_2) {\n        uVar7 = *param_3;\n        uStack8 = param_3[1];\n        do {\n            uVar3 = (uVar7 + 1) % 0x1ae;\n            uVar7 = uVar3 & 0xff;\n            uVar6 = (*(*0x44ec94 + uVar7) + uStack8) % 0x1ae;\n            uStack8 = uVar6 & 0xff;\n            fcn.00401040();\n            uVar1 = *(*0x44ec94 + uVar7);\n            uVar2 = *(uStack8 + *0x44ec94);\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            piVar4 = fcn.00401e70(0x4516a0, 0x43d7d1);\n            fcn.00402080(10);\n            uVar8 = 0;\n            if ((*(piVar4 + *(*piVar4 + 4) + 8) & 6) == 0) {\n                iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x30))();\n                if (iVar5 == -1) {\n                    uVar8 = 4;\n                }\n            }\n            if (uVar8 != 0) {\n                uVar8 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar8;\n                if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n                    uVar8 = uVar8 | 4;\n                }\n                fcn.00401ad0(uVar8, 0);\n            }\n            *(iStack4 + param_1) = *(iStack4 + param_1) ^ *((uVar2 + uVar1) % 0x1ae + *0x44ec94);\n            iStack4 = iStack4 + 1;\n        } while (iStack4 < param_2);\n        *param_3 = uVar3;\n        param_3[1] = uVar6;\n        return;\n    }\n    *param_3 = *param_3;\n    param_3[1] = param_3[1];\n    return;\n}\n",
        "token_count": 3095
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl method.CCCircFileDemoDlg.virtual_320(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x58) = arg_8h;\n    if (((arg_8h & 0xffff0000) == 0) && (*(in_ECX + 0x54) == 0)) {\n        *(in_ECX + 0x54) = arg_8h & 0xffff;\n    }\n    iVar1 = fcn.00408ff8();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar3, arg_8h, 5);\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, uVar2);\n    uVar3 = fcn.00406f2e(uVar2, arg_ch, uVar3);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(uVar2);\n    return uVar3;\n}\n",
        "token_count": 254
    },
    "004031a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004031a0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.00403090();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.004206e0(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x0040314e;\n    }\n    iVar5 = fcn.00403090();\ncode_r0x0040314e:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 598
    },
    "004031f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.004031f0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    \n    piVar1 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar1 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar2 = (***piVar1)(param_1[1], 1);\n    if (ppiVar2 == NULL) {\n        fcn.00403090();\n    }\n    ppiVar2[1] = param_1[1];\n    fcn.004206e0(ppiVar2 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar2;\n}\n",
        "token_count": 216
    },
    "00403540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403540(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00402e00(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00403880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403880(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.004031f0(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.00403650(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 300
    },
    "00403f3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403f3b(int32_t arg_8h)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    Var2 = *0x44ed50 >> 8;\n    if (*0x44ed50 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((arg_8h == 0) || (*in_ECX != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x44ed50)(arg_8h);\n        *in_ECX = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 187
    },
    "00403f75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00403f75(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x44ed58 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x44ed58)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 106
    },
    "004040cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004040cd(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.0040ff68(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00404272": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404272(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.004100b0(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.004100b0(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "004044e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.004044e0(int32_t Locale)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.00422112(&var_11ch, 4, 0x43dd40);\n        fcn.00404344(uVar1);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar2 == 0) goto code_r0x004045a4;\n    }\n    puVar3 = fcn.0042228c();\n    uVar1 = *puVar3;\n    puVar3 = fcn.0042228c();\n    *puVar3 = 0;\n    uVar4 = fcn.00422229(&lpLibFileName, 0x112, 0x111, in_ECX, in_EDX);\n    piVar5 = fcn.0042228c();\n    if (*piVar5 == 0) {\n        puVar3 = fcn.0042228c();\n        *puVar3 = uVar1;\n    }\n    else {\n        puVar3 = fcn.0042228c();\n        fcn.00404370(*puVar3);\n    }\n    if ((uVar4 != 0xffffffff) && (uVar4 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x004045a4:\n    fcn.00421070(var_11ch);\n    return;\n}\n",
        "token_count": 456
    },
    "004045b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004045b2(int32_t *param_1)\n\n{\n    if ((*0x44ed54 != NULL) && (*param_1 != -1)) {\n        fcn.00403fa2();\n        (**0x44ed54)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00404f44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404f44(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code **ppcVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    uint32_t arg_ch_00;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00408ff8();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x00404f64;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                uVar4 = arg_ch & 0xffff;\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = uVar4;\n                if (arg_ch_00 != 0) goto code_r0x0040501c;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x0040501c:\n            ppcVar5 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar5 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.00409b2c(ppcVar5[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar5 = (**ppcVar5)();\n            }\n            iVar1 = fcn.00404e0c(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar6 = puVar2[1];\n                while (((piVar6[1] != 0 && (piVar6[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar6[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar6 == 0) {\ncode_r0x00404fe1:\n                                *(arg_10h + 4) = piVar6[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar6 != 0) && (iVar3 = fcn.00404df0(iVar1, *piVar6),  iVar3 != 0))\n                        goto code_r0x00404fe1;\n                    }\n                    piVar6 = piVar6 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00408613();\ncode_r0x00404f64:\n    iVar1 = fcn.00408ff8();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 768
    },
    "004056a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056a8(uint noname_0, uint *arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_ch[1] == 1) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        if (arg_ch[1] == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg_ch, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00405727": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405727(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0040902b();\n    if (((*(iVar1 + 4) == 0) || (*arg_8h != 0)) || (iVar1 = fcn.0040562a(arg_8h),  iVar1 == 0)) {\n        piVar3 = fcn.0040446b();\n        piVar4 = piVar3;\n        if (piVar3 != NULL) {\n            piVar4 = piVar3[8];\n        }\n        iVar1 = fcn.0040baf3(piVar4, arg_8h);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                fcn.0040b774(*arg_8h);\n                piVar4 = fcn.0040cac8();\n                if (piVar4 != piVar3) {\n                    uVar2 = (**(*piVar3 + 0x108))(arg_8h);\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 314
    },
    "0040593f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040593f(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408ff8();\n    if ((*(iVar1 + 0x14) == '\\0') && ((-1 < arg_8h || (arg_8h == 0x8001)))) {\n        iVar1 = fcn.0040902b();\n        if (*(iVar1 + 4) != NULL) {\n            (**(**(iVar1 + 4) + 0x70))(arg_8h, arg_10h);\n            return;\n        }\n    }\n    iVar1 = fcn.004107ba(0x4056d9);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00408613();\n    }\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar1 + 0x2c), arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 228
    },
    "00405ad7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00405ad7(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00408ff8();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00408a40();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, fcn.0040593f, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00405b05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405b05(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (arg_8h < 1) {\n        iVar3 = *(in_ECX + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0040be13(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0040c0fe(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00408ff8();\n        iVar1 = fcn.004046f7();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0040e67b(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0040be13(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0040c0fe(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0040e67b(*(iVar1 + 0xa0));\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00408ff8();\n        iVar3 = fcn.004046f7();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00410db8();\n            fcn.00410fd0(1);\n        }\n    }\n    return arg_8h < 1;\n}\n",
        "token_count": 558
    },
    "00405c07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00405c07(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00405c15. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(**(param_1 + 0x58) + 0x10))();\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00405c18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c18(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.00408613();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x00405c2e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x14))();\n    return;\n}\n",
        "token_count": 125
    },
    "00405d8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405d8f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint hKey;\n    uint phkResult;\n    uint lpSubKey;\n    uint var_120h;\n    uint lpName;\n    uint var_4h;\n    \n    fcn.00421d6f(0x124);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -300) = iVar1;\n    fcn.00403290(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 0;\n    if (iVar1 == -0x80000000) {\n        iVar1 = fcn.004088d2();\n        if (iVar1 == 1) {\n            uVar2 = fcn.00405ceb(unaff_EBP + -0x120, \"Software\\\\Classes\\\\\", unaff_EBP + -0x124);\n            *(unaff_EBP + -4) = 1;\n            fcn.00403880(uVar2);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402e20();\n            *(unaff_EBP + -300) = 0x80000001;\n        }\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(*(unaff_EBP + -300), *(unaff_EBP + -0x124), unaff_EBP + -0x128);\n    if (iVar1 == 0) {\n        while( true ) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(*(unaff_EBP + -0x128), 0, unaff_EBP + -0x11c, 0x104);\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 2;\n            fcn.00404d66(unaff_EBP + -0x11c);\n            *(unaff_EBP + -4) = 3;\n            iVar1 = fcn.00405d8f(*(unaff_EBP + -0x128), unaff_EBP + -0x120);\n            *(unaff_EBP + -4) = 2;\n            fcn.00402e20();\n            if (iVar1 != 0) break;\n            *(unaff_EBP + -4) = 0;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*(unaff_EBP + -300), *(unaff_EBP + -0x124));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x128));\n    }\n    fcn.00402e20();\n    fcn.00421dcb();\n    return;\n}\n",
        "token_count": 676
    },
    "00406153": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406153(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    \n    if (arg_8h == NULL) {\n        in_ECX = fcn.00408613();\n        arg_8h = extraout_ECX;\n    }\n    if (*(in_ECX + 0x88) == NULL) {\n        (***arg_8h)(0);\n    }\n    else {\n        (**(**(in_ECX + 0x88) + 0xc))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0040629f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040629f(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "004062d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004062d4(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040446b();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x128))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0040630d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040630d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = arg_8h;\n    if (arg_8h != 0) goto code_r0x0040633d;\n    iVar3 = fcn.00406231();\n    if ((iVar3 == 0) && (iVar3 = fcn.0040446b(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x0040633d:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((arg_8h == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (arg_ch != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *arg_ch = 0;\n        }\n        else {\n            *arg_ch = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 485
    },
    "004063bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004063bf(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t hWnd_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *lpCaption;\n    uint *arg_ch_00;\n    uint var_11ch;\n    uint var_118h;\n    int32_t lpdwProcessId;\n    int32_t var_110h;\n    int32_t hWnd;\n    uint var_108h;\n    uchar var_5h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    fcn.004062d4(0);\n    arg_ch_00 = &hWnd;\n    hWnd_00 = fcn.0040630d(0, arg_ch_00);\n    if (hWnd_00 != hWnd) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd_00, 1);\n    }\n    lpdwProcessId = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd_00, &lpdwProcessId);\n    if ((((hWnd_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  lpdwProcessId != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd_00, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg_8h != 0)) {\n        piVar2 = arg_8h + 0x78;\n    }\n    var_110h = 0;\n    if ((piVar2 != NULL) && (var_110h = *piVar2,  arg_14h != 0)) {\n        *piVar2 = arg_14h + 0x30000;\n    }\n    if ((arg_10h & 0xf0) == 0) {\n        if ((arg_10h & 0xf) < 2) {\n            arg_10h = arg_10h | 0x30;\n        }\n        else if ((arg_10h & 0xf) - 3 < 2) {\n            arg_10h = arg_10h | 0x20;\n        }\n    }\n    var_108h._0_1_ = 0;\n    if (arg_8h == 0) {\n        lpCaption = &var_108h;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            var_5h = 0;\n        }\n    }\n    else {\n        lpCaption = *(arg_8h + 0x50);\n    }\n    fcn.0040623d(hWnd_00, arg_ch, lpCaption, arg_10h);\n    if (piVar2 != NULL) {\n        *piVar2 = var_110h;\n    }\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    fcn.004062d4(1);\n    fcn.00421070(arg_ch_00);\n    return;\n}\n",
        "token_count": 757
    },
    "004065fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004065fb(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0040b9ca();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040bf53();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 163
    },
    "004070a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004070a5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (arg_ch == 0) {\n        puVar1 = arg_8h + 0x12;\n    }\n    else {\n        puVar1 = arg_8h + 0x18;\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    uVar2 = *puVar1;\n    if ((uVar2 != 0) && (arg_ch == 0)) {\n        uVar2 = uVar2 - 2;\n    }\n    return puVar1 + uVar2 + 5 & 0xfffffffc;\n}\n",
        "token_count": 289
    },
    "0040746b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040746b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        iVar2 = fcn.004123cf(in_ECX + 0x14, *(in_ECX + 0x18), 0xc);\n        iVar1 = *(in_ECX + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(in_ECX + 0x10);\n            *(in_ECX + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(in_ECX + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00408613();\n    }\n    *(in_ECX + 0x10) = *puVar3;\n    puVar3[1] = arg_8h;\n    *puVar3 = arg_ch;\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 1;\n    return;\n}\n",
        "token_count": 308
    },
    "00407715": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407715(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x4c) != 0) {\n        arg_8h = *(*(arg_8h + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.004073d9(&arg_8h);\n            iVar2 = *piVar4;\n            if (*(iVar2 + 4) != 0) {\n                iVar5 = *(*(iVar2 + 4) + 0x94);\n                while (iVar5 != 0) {\n                    fcn.00414bf7(*(iVar2 + 4));\n                    if (*(iVar5 + 4) != 0) {\n                        iVar5 = fcn.0040e544(*(iVar5 + 4));\n                        fcn.00416eaf(*(iVar5 + 0x50));\n                    }\n                    iVar5 = fcn.00414c05();\n                }\n                uVar1 = *(*(iVar2 + 4) + 0x98);\n                if (uVar1 != 0) {\n                    iVar5 = fcn.0040e544(uVar1);\n                    (**(**(iVar5 + 0x50) + 0xb4))();\n                    *(*(iVar2 + 4) + 0x98) = *(iVar5 + 0x50);\n                    (**(**(*(iVar5 + 0x50) + 0x90) + 8))(*(iVar2 + 4), 1);\n                }\n            }\n        }\n        arg_8h = *(*(iVar3 + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.004073d9(&arg_8h);\n            iVar3 = *(*piVar4 + 4);\n            if ((iVar3 != 0) && (*(iVar3 + 0x90) != 0)) {\n                (**(**(iVar3 + 0x90) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00407873": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407873(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        fcn.00408613();\n    }\n    iVar1 = fcn.0040767d(arg_8h, 0);\n    if (iVar1 == 0) {\n        fcn.0040764e(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 99
    },
    "00407a66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_5eh\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: hWndInsertAfter\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid __cdecl\nfcn.00407a66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    int32_t *piVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint var_a8h;\n    uint var_80h;\n    uint lpRect;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5eh;\n    uint var_58h;\n    uint var_54h;\n    uint hWndInsertAfter;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint pbstr;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00421d39(0x9c);\n    puVar12 = *(unaff_EBP + 0x14);\n    arg_8h_00 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x3c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x44) = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -0x2c) = puVar12 + 0x12;\n    if (*(unaff_EBP + 0x10) != 0) {\n        uVar1 = *(puVar12 + 0x12);\n        *(unaff_EBP + -0x6c) = puVar12[2];\n        *(unaff_EBP + -0x68) = puVar12[1];\n        *(unaff_EBP + -100) = *(puVar12 + 3);\n        *(unaff_EBP + -0x62) = *(puVar12 + 0xe);\n        uVar2 = *(puVar12 + 4);\n        *(unaff_EBP + -0x5e) = uVar1;\n        uVar1 = *(puVar12 + 5);\n        puVar9 = puVar12 + 6;\n        *(unaff_EBP + -0x60) = uVar2;\n        *(unaff_EBP + -0x5c) = uVar1;\n        puVar12 = unaff_EBP + -0x6c;\n        *(unaff_EBP + -0x2c) = puVar9;\n    }\n    iVar3 = *(puVar12 + 10);\n    iVar4 = *(puVar12 + 2);\n    iVar5 = *(puVar12 + 3);\n    *(unaff_EBP + -0x70) = *(puVar12 + 0xe) + iVar3;\n    iVar11 = *(*(unaff_EBP + -0x3c) + 0x20);\n    *(unaff_EBP + -0x7c) = iVar4;\n    *(unaff_EBP + -0x78) = iVar3;\n    *(unaff_EBP + -0x74) = iVar5 + iVar4;\n    (*_sym.imp.USER32.dll_MapDialogRect)(iVar11, unaff_EBP + -0x7c);\n    *(unaff_EBP + -0x34) = 0;\n    if (3 < *(unaff_EBP + 0x20)) {\n        iVar8 = *arg_8h_00;\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + -4;\n        arg_8h_00 = arg_8h_00 + 1;\n        if (iVar8 != 0) {\n            uVar7 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(arg_8h_00, iVar8);\n            arg_8h_00 = arg_8h_00 + iVar8 * 2;\n            *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + iVar8 * -2;\n            *(unaff_EBP + -0x34) = uVar7;\n        }\n    }\n    *(unaff_EBP + -0x38) = 0;\n    fcn.00403260();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if ((*(unaff_EBP + 0x18) == 0x37a) || (*(unaff_EBP + 0x18) == 0x37b)) {\n        iVar8 = *arg_8h_00;\n        arg_8h_00 = arg_8h_00 + 3;\n        *(unaff_EBP + -0x58) = iVar8;\n        *(unaff_EBP + -0x28) = iVar8 + -0xc;\n        piVar10 = arg_8h_00;\n        if (iVar8 + -0xc != 0) {\n            do {\n                iVar8 = *piVar10;\n                *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -6;\n                uVar6 = *(piVar10 + 1);\n                arg_8h_00 = piVar10 + 6;\n                *(unaff_EBP + -0x54) = iVar8;\n                if (iVar8 == -0x7ffeffff) {\n                    *(unaff_EBP + -0x48) = *arg_8h_00;\n                    iVar11 = piVar10 + 0x16;\n                    *(unaff_EBP + -0x40) = *(piVar10 + 10);\n                    fcn.00403900();\n                    iVar8 = *(*(unaff_EBP + -0x30) + -0xc);\n                    *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + (-0x11 - iVar8);\n                    arg_8h_00 = piVar10 + iVar8 + 0x17;\n                    *(unaff_EBP + -0x4c) = uVar6;\n                }\n                else {\n                    iVar8 = fcn.00403e25(0x1c);\n                    *(unaff_EBP + -0x80) = iVar8;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar8 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        iVar11 = *(unaff_EBP + -0x38);\n                        uVar7 = fcn.00414bce(iVar11, *(unaff_EBP + -0x54), uVar6);\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x38) = uVar7;\n                }\n                piVar10 = arg_8h_00;\n            } while (*(unaff_EBP + -0x28) != 0);\n            iVar8 = *(unaff_EBP + -0x58);\n        }\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) - iVar8;\n        *(unaff_EBP + 0x18) = *(unaff_EBP + 0x18) + 0xfffc;\n    }\n    if (**(unaff_EBP + -0x2c) == 0x7b) {\n        uVar7 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar7 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(*(unaff_EBP + -0x2c), unaff_EBP + -0x20, iVar11);\n    }\n    *(unaff_EBP + -0x2c) = uVar7;\n    fcn.0041b228(arg_8h_00, *(unaff_EBP + 0x20), 0);\n    iVar3 = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x24) = 0;\n    if (-1 < *(unaff_EBP + -0x2c)) {\n        iVar11 = fcn.004128e0(1);\n        if (iVar11 != 0) {\n            iVar11 = fcn.00412e85(0, unaff_EBP + -0x20, 0, *puVar12, unaff_EBP + -0x7c, *(puVar12 + 4), \n                                  -(iVar3 != 0x378) & unaff_EBP - 0xa8U, *(unaff_EBP + 0x18) == 0x377, \n                                  *(unaff_EBP + -0x34), unaff_EBP + -0x24);\n            if (iVar11 != 0) {\n                fcn.00414120(1);\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (*(*(unaff_EBP + -0x24) + 0x24), *(unaff_EBP + -0x50), 0, 0, 0, 0, 0x13);\n                *(*(unaff_EBP + -0x24) + 0x94) = *(unaff_EBP + -0x38);\n                fcn.00403880(unaff_EBP + -0x30);\n                *(*(unaff_EBP + -0x24) + 0x98) = *(unaff_EBP + -0x4c);\n                *(*(unaff_EBP + -0x24) + 0x9c) = *(unaff_EBP + -0x48);\n                *(*(unaff_EBP + -0x24) + 0xa0) = *(unaff_EBP + -0x40);\n            }\n        }\n    }\n    if (*(unaff_EBP + -0x34) != 0) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x34));\n    }\n    if (*(unaff_EBP + -0x24) == 0) {\n        **(unaff_EBP + -0x44) = 0;\n    }\n    else {\n        **(unaff_EBP + -0x44) = *(*(unaff_EBP + -0x24) + 0x24);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b5a8();\n    fcn.00402e20();\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 2865
    },
    "004082a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082a5(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    iVar1 = *in_ECX;\n    if (arg_8h < *(iVar1 + -0xc)) {\n        arg_8h = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < arg_8h) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < arg_8h) {\n                iVar1 = arg_8h;\n            }\n            fcn.0040826c(iVar1);\n        }\n    }\n    else {\n        fcn.00408202(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0040834e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040834e(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_8h_00;\n    \n    if (arg_8h == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.00407fe7(arg_8h);\n    }\n    if (arg_ch < 1) {\n        fcn.00403540();\n    }\n    else {\n        arg_8h_00 = fcn.004032b0(arg_ch);\n        fcn.004044ba(arg_8h_00, arg_ch, arg_8h, 0xffffffff);\n        fcn.00403060(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004083e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004083e2(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    \n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        arg_8h_00 = fcn.00407f6d(arg_8h);\n    }\n    if (arg_8h_00 < 1) {\n        fcn.004081cb();\n    }\n    else {\n        arg_8h_01 = fcn.00408320(arg_8h_00);\n        fcn.00407f87(arg_8h_01, arg_8h_00, arg_8h, 0xffffffff);\n        fcn.00408193(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "0040850b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040850b(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "004086a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004086a3(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x44ed80 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        *0x44ed80 = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = fcn.00408613();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        *0x44ed6c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxW\");\n        *0x44ed70 = (*pcVar1)(*0x44ed80, \"ReleaseActCtx\");\n        *0x44ed74 = (*pcVar1)(*0x44ed80, \"ActivateActCtx\");\n        *0x44ed78 = (*pcVar1)(*0x44ed80, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0040876c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0040876c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00408613();\n    }\n    if (*0x44ed74 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0040873e(arg_8h, arg_ch);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 123
    },
    "0040879f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040879f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint var_230h;\n    uint var_22ch;\n    uint *var_228h;\n    uint var_21ch;\n    uint var_214h;\n    uint lpFilename;\n    int16_t var_8h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    fcn.004086a3();\n    uVar2 = *(param_1 + 8);\n    var_6h = 0;\n    var_8h = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, &lpFilename);\n    if (iVar1 != 0) {\n        if (var_8h == 0) {\n            var_228h = &lpFilename;\n            puVar3 = &var_230h;\n            var_230h = 0x20;\n            var_22ch = 0x88;\n            var_21ch = 2;\n            var_214h = uVar2;\n            iVar1 = fcn.00408711(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                var_21ch = 3;\n                uVar2 = fcn.00408711(&var_230h);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                var_21ch = 1;\n                iVar1 = fcn.00408711(puVar3, &var_230h);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.00421070(arg_8h);\n    return;\n}\n",
        "token_count": 509
    },
    "00408928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408928(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x144))();\n    }\n    fcn.00403e54(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0041bd10();\n            fcn.00403e54(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "00408b24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b24(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00409044": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409044(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00408ff8();\n    if ((*(iVar1 + 0x7c) == 0) || (*(arg_8h + 0x80) == -1)) {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0040873e(*(arg_8h + 0x80));\n        *(in_ECX + 4) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040907c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040907c(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    fcn.004222e0(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.00421070(arg_8h);\n    return;\n}\n",
        "token_count": 142
    },
    "00409326": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00409326(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    ushort uVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00409891;\n    // switch table (19 cases) at 0x4098a6\n    switch(*((arg_ch + 0x139aU) * 4 + 0x4098a6)) {\n    case 0x409407:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x409428:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040962c;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x00409813:\n                    *arg_28h = 1;\n                    goto code_r0x00409891;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x409495:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040962c;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x4094e2:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x40954d:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0040962c;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x409597:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x004095ba:\n            if (iVar9 < 0) goto code_r0x00409891;\n            uVar11 = 8;\n            goto code_r0x0040988a;\n        }\n        break;\n    case 0x4095cb:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x00409891;\n    case 0x4095d9:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x00409891;\n    case 0x4095e7:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004095ba;\n        }\n        break;\n    case 0x40960c:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x0040962c:\n                *arg_28h = 0;\n                goto code_r0x00409891;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00409693;\n        }\n        break;\n    case 0x4096a4:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004095ba;\n        }\n        break;\n    case 0x4096cc:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x4096f0:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00409891;\n        }\n        break;\n    case 0x409714:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004095ba;\n        }\n        break;\n    case 0x40973c:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x004097b9;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00409813;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00409891;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004095ba;\n        }\n        break;\n    case 0x4097b9:\ncode_r0x004097b9:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040983b;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00409813;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00409891;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004095ba;\n        }\n        break;\n    case 0x40983b:\ncode_r0x0040983b:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409882;\n        }\n        break;\n    case 0x409863:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00409693:\n        if (iVar9 < 0) goto code_r0x00409891;\n        uVar11 = 3;\n        goto code_r0x0040988a;\n    case 0x409875:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x00409882:\n        if (iVar9 < 0) goto code_r0x00409891;\n        uVar11 = 9;\ncode_r0x0040988a:\n        *arg_20h = uVar11;\n        goto code_r0x00409891;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x00409891:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3776
    },
    "004098f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004098f2(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x44c828));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x44c7d8);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "00409b2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00409b2c(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0040a0c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a0c9(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040a15f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a15f(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0040a1f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a1f3(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040a2a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a2a2(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0040a330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040a330(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0040a557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a557(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0040902b();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x178))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0040a6a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6a4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        iVar1 = fcn.0040902b();\n        if ((*(iVar1 + 0x48) != 0) && ((*(*(iVar1 + 0x48) + 4) & 0x40000000) == 0)) {\n            fcn.0040a557(1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0040b4bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b4bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 161
    },
    "0040b4f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4f3(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        uVar1 = fcn.0040b4bf(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x10) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x10);\n    return;\n}\n",
        "token_count": 130
    },
    "0040b585": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b585(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.00408755(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040b596": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b596(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) == 0) {\n        uVar1 = fcn.0040b4bf(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(in_ECX + 0x14) = uVar1;\n    }\n    *arg_8h = *(in_ECX + 0x14);\n    return;\n}\n",
        "token_count": 129
    },
    "0040b63a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040b63a(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00408755(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040b700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b700(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00421cd0(0);\n    iVar1 = fcn.0040902b();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00403e0e(fcn.004100e8);\n        iVar2 = fcn.00403e25(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00410dc1(0x43e5f8, 0x40b498, fcn.0040f1d3, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar3;\n        fcn.00403e0e(arg_8h_00);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 334
    },
    "0040b82d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040b82d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004107ba(0x4056d9);\n    if (iVar1 == 0) {\n        fcn.00408613();\n    }\n    iVar2 = fcn.00408ff8();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 191
    },
    "0040b8b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b8b7(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.004054a5();\n    if (iVar2 == 0) goto code_r0x0040b904;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.00408ff8();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00408ff8();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00410986();\n                if (iVar3 == 0) goto code_r0x0040b8f9;\n            }\n            fcn.00404167(0);\n        }\ncode_r0x0040b8f9:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0040b904:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.0040902b();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.004222e0(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x2c;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.0040b6ce();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf8))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0040b7fd();\n    (**(*param_1 + 0x11c))();\n    return;\n}\n",
        "token_count": 745
    },
    "0040ba7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ba7a(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0040ba7a(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0040b774(iVar2);\n            return;\n        }\n        iVar2 = fcn.0040b7a0();\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0040ba7a(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "0040bc05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040bc05(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xec))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0040b6ce();\n    return piVar1;\n}\n",
        "token_count": 163
    },
    "0040be13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0040be13(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00421d03(0x38);\n    iVar1 = fcn.004107ba(0x4056d9);\n    iVar4 = 0;\n    *(unaff_EBP + -0x18) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00408613();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0040a47e(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x110))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0040bd9d(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 805
    },
    "0040bf53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040bf53(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4505c8)) && (extraout_ECX != 0x450620)) &&\n       ((extraout_ECX != 0x450678 && (extraout_ECX != 0x4506d0)))) {\n        fcn.0040b9ca();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405169();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 336
    },
    "0040bff5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bff5(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    \n    if (*arg_ch == 1) {\n        iVar1 = fcn.004107ba(0x4056d9);\n        if (iVar1 != 0) goto code_r0x0040c01e;\n        do {\n            iVar1 = fcn.00408613();\ncode_r0x0040c01e:\n            if (*(iVar1 + 0x74) == in_ECX[8]) {\n                iVar1 = fcn.0041c0c9();\n            }\n            else {\n                iVar1 = (**(*in_ECX + 0x6c))();\n            }\n        } while (iVar1 == 0);\n        piVar2 = fcn.0040a5ad(iVar1, arg_ch[2]);\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x10))(arg_ch);\n        }\n    }\n    else {\n        iVar1 = fcn.0040ba7a(in_ECX[8], arg_ch[1], 1);\n        if ((iVar1 != 0) && (iVar1 = fcn.0040bb39(0),  iVar1 != 0)) {\n            return;\n        }\n    }\n    fcn.0040b6ce();\n    return;\n}\n",
        "token_count": 323
    },
    "0040c0bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040c0bd(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x128))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0040c07e();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0040c07e();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "0040c0fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c0fe(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0040b7a0(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040be13(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0040c0fe(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040c21d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c21d(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h == 1) || (arg_8h == 2)) && (iVar1 = fcn.0040c17d(arg_ch, 0),  iVar1 != 0)) {\n        return;\n    }\n    fcn.0040b6ce();\n    return;\n}\n",
        "token_count": 98
    },
    "0040c850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c850(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((*arg_ch == 1) && (piVar1 = fcn.0041c0dd(arg_ch[5]),  piVar1 != NULL)) {\n        (**(*piVar1 + 0xc))(arg_ch);\n        return;\n    }\n    iVar2 = fcn.0040c17d(arg_ch[5], 0);\n    if (iVar2 == 0) {\n        fcn.0040b6ce();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0040c8e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c8e3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    fcn.00410b71(0xc);\n    iVar1 = fcn.00410296(0x40bd6d);\n    if (iVar1 == 0) {\n        fcn.00408613();\n    }\n    if (*(iVar1 + 8) == 0) {\n        iVar2 = fcn.0040a2d7(\"hhctrl.ocx\");\n        *(iVar1 + 4) = iVar2;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"HtmlHelpA\");\n            *(iVar1 + 8) = iVar2;\n            if (iVar2 != 0) goto code_r0x0040c948;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar1 + 4));\n            *(iVar1 + 4) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0040c948:\n        fcn.00410be3(0xc);\n        uVar3 = (**(iVar1 + 8))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 323
    },
    "0040cc37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cc37(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0040cc4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cc4c(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((((*arg_8h == 0) && (arg_8h[1] == 0)) && (arg_8h[2] == 0xc0)) && (arg_8h[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "0040cc7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cc7c(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0040cc4c(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0040cc00(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0040ccb2;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0040ccb2:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 431
    },
    "0040cd39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cd39(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.0040cc37();\n    iVar2 = fcn.00408ff8();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00408ff8();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.004109a6(1);\n        iVar2 = fcn.00408ff8();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.00408ff8();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00404167(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0040e6a2();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004109f8. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "0040d297": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d297(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004107ba(0x4056d9);\n    if (iVar1 == 0) {\n        fcn.00408613();\n    }\n    if (*(iVar1 + 0x14) != arg_8h) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x40d044, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.004085db();\n            }\n        }\n        *(iVar1 + 0x14) = arg_8h;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0040d44e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040d44e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    code *pcVar8;\n    int32_t unaff_EBP;\n    int16_t iVar9;\n    int16_t iVar10;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xf0))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 == 0) goto code_r0x0040d65e;\n        goto code_r0x0040d48c;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xf4))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0040d937;\n        }\n        goto code_r0x0040d65e;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0040b774(var_24h);\n        fcn.0040ce07(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar9 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0040ce7f(arg_8h_00, iVar9, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0040d48c;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0040d9f0;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0040a3d0(7);\n    iVar3 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    *(unaff_EBP + -0x18) = iVar3 + 0x44ed98;\n    if ((*(unaff_EBP + 8) != *(iVar3 + 0x44ed98)) || (*(unaff_EBP + 0x10) != *(iVar3 + 0x44eda0))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.00409b2c(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0040a404();\n                    goto code_r0x0040d5ec;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.00409b2c(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0040a404();\n                        goto code_r0x0040d9e2;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0040a404();\n        goto code_r0x0040d65e;\n    }\n    iVar3 = *(iVar3 + 0x44ed9c);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0040a404();\n    if (iVar3 == 0) goto code_r0x0040d65e;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0040d9e2:\n        pcVar8 = *(iVar3 + 0x14);\n        goto code_r0x0040d9e6;\n    }\ncode_r0x0040d5ec:\n    pcVar8 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar10 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (84 cases) at 0x40da12\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0040f73e(var_14h);\n        goto code_r0x0040d68d;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d68d;\n    case 5:\n    case 0xc:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0040b774(uVar7);\n        goto code_r0x0040d6c2;\n    case 6:\n    case 0x47:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0040b774(var_24h);\n        goto code_r0x0040d9e9;\n    case 7:\n    case 0xd:\n    case 0x4a:\ncode_r0x0040d68d:\n        uVar4 = (*pcVar8)(var_14h);\n        goto code_r0x0040d9ed;\n    case 8:\n        fcn.0040f232();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0040a439();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0040b7a0(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0041ba82(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040bf53();\n        goto code_r0x0040d747;\n    case 9:\n        fcn.0040f232();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar8)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0040d747:\n        *(unaff_EBP + -4) = 0;\n        fcn.0040f7bb();\n        break;\n    case 10:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0040b774(var_24h);\n        var_18h = var_24h;\n        goto code_r0x0040d78b;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d9e9;\n    case 0xe:\n    case 0x2f:\n    case 0x4f:\n        goto code_r0x0040d9e6;\n    case 0xf:\n        var_18h = fcn.0041c0c9(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040d78b:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0040d6c2:\n        uVar4 = (*pcVar8)(uVar5, uVar7, var_18h, var_14h);\n        goto code_r0x0040d9ed;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n    case 0x4c:\n    case 0x53:\n        goto code_r0x0040d9cb;\n    case 0x11:\n    case 0x14:\n    case 0x54:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d7b7;\n    case 0x13:\n        (*pcVar8)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d9ce;\n    case 0x17:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        goto code_r0x0040d9ce;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040d7ef;\n    case 0x1a:\n        fcn.0040b774(var_24h);\n        goto code_r0x0040d9cb;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar8)();\n        goto code_r0x0040d9ed;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0040b774(var_14h);\n        fcn.0040b774(var_24h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0040d7f3;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0040f73e(var_14h);\n        goto code_r0x0040d7b7;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041c0c9(var_14h);\n        goto code_r0x0040d7b7;\n    case 0x22:\n        var_14h = iVar10;\n        var_18h = iVar9;\n        uVar7 = fcn.0041c0c9(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0040d7f3;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d844;\n    case 0x24:\ncode_r0x0040d844:\n        fcn.0040b774(var_14h);\n        goto code_r0x0040d7b7;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0040d857;\n    case 0x26:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040d857:\n        uVar7 = fcn.0040b774(*(unaff_EBP + 0xc));\n        goto code_r0x0040d7f3;\n    case 0x27:\n        var_18h = fcn.0040b774(*(unaff_EBP + 0xc));\n        goto code_r0x0040d9ce;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0040b774(var_24h);\n        goto code_r0x0040d889;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0040b774(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0040d7f3;\n        }\n        goto code_r0x0040d9ce;\n    case 0x2c:\n    case 0x33:\ncode_r0x0040d7b7:\n        (*pcVar8)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n    case 0x52:\n        (*pcVar8)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040d48c;\n    case 0x30:\n    case 0x46:\n        var_28h = iVar9;\n        var_24h = iVar10;\n        goto code_r0x0040d9e9;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0040d889:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040d7f3;\n    case 0x35:\n        var_18h = iVar9;\n        var_14h = iVar10;\ncode_r0x0040d7ef:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040d7f3:\n        (*pcVar8)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0040d937;\n    case 0x38:\n        (*pcVar8)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar9, iVar10);\n        break;\n    case 0x45:\n        iVar3 = (*pcVar8)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0040d937:\n        if (iVar3 != 0) {\ncode_r0x0040d65e:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040a404();\n            goto code_r0x0040d66c;\n        }\n        break;\n    case 0x48:\n        fcn.0041c0c9(var_24h);\ncode_r0x0040d9cb:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0040d9ce;\n    case 0x49:\n        var_24h = fcn.0041c0c9(var_24h);\n        goto code_r0x0040d9e6;\n    case 0x4b:\n        var_18h = fcn.0041c0c9(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0040d9ce;\n    case 0x4d:\n        var_14h = var_24h & 0xffff;\n        var_18h = var_24h >> 0x10 & 0xf000;\n        uVar5 = var_24h >> 0x10 & 0xfff;\n        uVar7 = fcn.0040b774(*(unaff_EBP + 0xc));\n        goto code_r0x0040d988;\n    case 0x4e:\n        var_18h = *(unaff_EBP + 0xc);\ncode_r0x0040d9ce:\n        (*pcVar8)(var_18h, var_14h);\n        break;\n    case 0x50:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0040d988;\n    case 0x51:\n        var_18h = iVar9;\n        var_14h = iVar10;\n        uVar5 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0040d988:\n        (*pcVar8)(uVar7, uVar5, var_18h, var_14h);\ncode_r0x0040d48c:\n        *(unaff_EBP + -0x10) = 1;\n    }\ncode_r0x0040d9f0:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040a404();\ncode_r0x0040d66c:\n    fcn.00421da8();\n    return;\ncode_r0x0040d9e6:\n    var_28h = *(unaff_EBP + 0xc);\ncode_r0x0040d9e9:\n    uVar4 = (*pcVar8)(var_28h, var_24h);\ncode_r0x0040d9ed:\n    *(unaff_EBP + -0x10) = uVar4;\n    goto code_r0x0040d9f0;\n}\n",
        "token_count": 5094
    },
    "0040df9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040df9c(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.00421d03(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.0040a100(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0040a06e(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.00408ff8(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.00410b71(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.00408ff8();\n        fcn.00405d78(*(lpWndClass + 0x24));\n        fcn.004082f3(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00410be3(1);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 315
    },
    "0040e527": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e527(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e538. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0040e544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e544(uint nIDDlgItem)\n\n{\n    uint arg_8h;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        arg_8h = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x20), nIDDlgItem);\n        fcn.0040b774(arg_8h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e56b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 161
    },
    "0040e5a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e5a5(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e5bc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 131
    },
    "0040e5bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e5bf(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e5d6. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 131
    },
    "0040e5d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5d9(uint lpString)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x0040e5ea;\n    while( true ) {\n        fcn.00408613();\ncode_r0x0040e5ea:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n        if (iVar1 != 0) break;\n        if (*(in_ECX + 0x50) != 0) {\ncode_r0x0040e5fc:\n    // WARNING: Could not recover jumptable at 0x0040e603. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(in_ECX + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(in_ECX + 0x20), lpString);\n        return;\n    }\n    goto code_r0x0040e5fc;\n}\n",
        "token_count": 262
    },
    "0040e620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e620(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e635. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x90))();\n    return;\n}\n",
        "token_count": 122
    },
    "0040e63b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e63b(uint X, uint Y, uint nWidth, uint nHeight, uint bRepaint)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), X, Y, nWidth, nHeight, bRepaint);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(X, Y, nWidth, nHeight);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0040e67b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e67b(uint nCmdShow)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(in_ECX + 0x20), nCmdShow);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e69c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 133
    },
    "0040e6a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e6a2(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e6b7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 125
    },
    "0040e6bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e6bd(uint bEnable)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(in_ECX + 0x20), bEnable);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e6de. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 131
    },
    "0040e6e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e6e4(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (*(param_1 + 0x50) == 0) {\n        arg_8h = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.0040b774(arg_8h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e6ff. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 149
    },
    "0040e72e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e72e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint unaff_EBP;\n    \n    if (*(in_ECX + 0x50) != 0) {\n        fcn.0040e705(in_ECX, arg_8h, 2, arg_ch, arg_10h, 0, unaff_EBP);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040e753": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e753(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e75e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 115
    },
    "0040e8e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e8e1(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e919. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 197
    },
    "0040e91f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e91f(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((in_ECX != 0) && (*(in_ECX + 0x50) == 0)) {\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        iVar1 = fcn.0041ba82(arg_8h_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x4c) != 0)) {\n            (**(**(iVar1 + 0x4c) + 0x9c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "0040e985": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040e985(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    bool bVar7;\n    code *var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        piVar2 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            iVar3 = fcn.0040bd82(5);\n            while (iVar3 != 0) {\n                uVar6 = fcn.0040e5bf();\n                if ((((uVar6 & 0x10000) != 0) && (uVar6 = fcn.0040e5a5(),  (uVar6 & 0x10000000) != 0)) &&\n                   (uVar6 = fcn.0040e5a5(),  (uVar6 & 0x8000000) == 0)) {\n                    return NULL;\n                }\n                iVar3 = fcn.0040e8c5(2);\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = fcn.004075f9;\n            arg_ch = method.ATL::CFixedStringMgr.virtual_16;\n        }\n        else {\n            var_8h = fcn.0040e97a;\n            arg_ch = method.ATL::CFixedStringMgr.virtual_12;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0040ea22:\n        do {\n            if (var_4h == 0) goto code_r0x0040ea77;\n            ppiVar4 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar4;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar3 = *piVar1;\n                }\n                else {\n                    iVar3 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar3 != 0) && (iVar5 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar3 == iVar5)) break;\n                if (piVar1[1] == 0) goto joined_r0x0040ea22;\n                bVar7 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar7 = arg_8h == piVar1;\n            }\n        } while (!bVar7);\n        if (piVar1 == NULL) {\ncode_r0x0040ea77:\n            piVar2 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar4 = (*var_8h)(&var_4h);\n                piVar2 = *ppiVar4;\n                uVar6 = fcn.0040e753();\n            } while ((piVar2 != piVar1) &&\n                    ((((uVar6 & 0x10000) == 0 || ((uVar6 & 0x8000000) != 0)) || ((uVar6 & 0x10000000) == 0))));\n        }\n    }\n    return piVar2;\n}\n",
        "token_count": 810
    },
    "0040eac5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eac5(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.0041bd86(arg_8h, 0);\n        arg_8h = puVar3;\n        fcn.004073d9(&arg_8h);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0040eb6c:\n                arg_8h = puVar3;\n                fcn.0040e86f(&arg_8h);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0040e86f(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0040e753();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar4 = fcn.004073d9(&arg_8h);\n            puVar4 = *puVar4;\n            uVar5 = fcn.0040e753();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0040eb6c;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 574
    },
    "0040ebd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ebd7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040e80d(in_ECX);\n    while ((0 < arg_ch && (*(in_ECX + 4) != 0))) {\n        if (*(arg_8h + 4) != 0) {\n            fcn.0040e851(arg_8h + 4);\n        }\n        arg_ch = arg_ch + -1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 126
    },
    "0040ec15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040ec15(uint lpString, uint nMaxCount)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        fcn.00403260();\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.00407f4c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.00402e20();\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 318
    },
    "0040ecab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ecab(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint in_ECX;\n    uint *arg_8h_01;\n    uint var_10h;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.0040e80d(in_ECX);\n    fcn.0040e80d(&var_8h);\n    while (var_4h != NULL) {\n        arg_8h_01 = var_4h;\n        arg_8h_00 = fcn.0040e8ad(var_4h);\n        cVar1 = fcn.0040e7b5(arg_8h_00);\n        if (cVar1 != '\\0') goto code_r0x0040ed02;\n        fcn.0040e82e(&var_8h);\n        fcn.0040e88e(&var_4h);\n    }\n    arg_8h_01 = &var_10h;\ncode_r0x0040ed02:\n    fcn.0040e80d(arg_8h_01);\n    return arg_8h;\n}\n",
        "token_count": 265
    },
    "0040ed11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ed11(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    fcn.0040e963(in_ECX);\n    fcn.0040ec88(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        arg_8h_00 = fcn.0040e8ad(var_4h);\n        cVar1 = fcn.0040e7b5(arg_8h_00);\n        if (cVar1 != '\\0') break;\n        fcn.0040e851(&var_4h);\n        if (*(arg_8h + 4) != 0) {\n            fcn.0040e851(arg_8h + 4);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 240
    },
    "0040edcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040edcb(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(param_1 + 0x4c);\n    if (iVar3 == 0) {\n        return iVar3;\n    }\n    var_8h = *(iVar3 + 0x44);\n    var_4h = param_1;\n    while( true ) {\n        if (var_8h == 0) {\n            return 0;\n        }\n        if (var_8h == 0) break;\n        piVar1 = fcn.0040e8ad(var_8h);\n        if (piVar1[1] == 0) {\n            iVar3 = *piVar1;\n        }\n        else {\n            iVar3 = *(piVar1[1] + 0x24);\n        }\n        if ((iVar3 != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar3 == iVar2)) {\n            return var_8h;\n        }\n        if ((piVar1[1] != 0) && (piVar1[1] == *(*(var_4h + 0x4c) + 0x70))) {\n            return var_8h;\n        }\n        fcn.0040e851(&var_8h);\n    }\n    fcn.00408613();\n    return var_8h;\n}\n",
        "token_count": 353
    },
    "0040ee59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee59(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e80d(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (fcn.0040e851(&var_4h),  var_4h == 0)) {\ncode_r0x0040ee9e:\n            uVar3 = fcn.0040ecab(&var_10h);\n            fcn.0040e82e(uVar3);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            uVar3 = fcn.0040e8ad(var_4h);\n            cVar2 = fcn.0040e7b5(uVar3);\n            if (cVar2 != '\\0') goto code_r0x0040ee9e;\n        }\n        uVar3 = fcn.0040e8ad(var_4h);\n        cVar2 = fcn.0040e76c(uVar3);\n        if (cVar2 == '\\0') {\n            fcn.0040e82e(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 332
    },
    "0040eee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040eee2(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040e80d(param_1);\n    bVar1 = false;\n    do {\n        if (var_4h == 0) goto code_r0x0040ef23;\n        uVar3 = fcn.0040e8ad(var_4h);\n        cVar2 = fcn.0040e7b5(uVar3);\n        if (cVar2 != '\\0') goto code_r0x0040ef23;\n        fcn.0040e88e(&var_4h);\n        while (var_4h == 0) {\ncode_r0x0040ef23:\n            uVar3 = fcn.0040ed11(&var_10h);\n            fcn.0040e82e(uVar3);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        uVar3 = fcn.0040e8ad(var_4h);\n        cVar2 = fcn.0040e76c(uVar3);\n        if (cVar2 == '\\0') {\n            fcn.0040e82e(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 338
    },
    "0040ef6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ef6d(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            arg_8h_00 = fcn.0040edcb();\n        }\n        else {\n            arg_8h_00 = fcn.0040ed72(arg_8h);\n        }\n        if ((arg_8h_00 != 0) && (fcn.0040eee2(),  arg_8h_00 != 0)) {\n            uVar1 = fcn.0040e8ad(arg_8h_00);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "0040efc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040efc4(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            arg_8h_00 = fcn.0040edcb();\n        }\n        else {\n            arg_8h_00 = fcn.0040ed72(arg_8h);\n        }\n        if ((arg_8h_00 != 0) && (fcn.0040ee59(),  arg_8h_00 != 0)) {\n            uVar1 = fcn.0040e8ad(arg_8h_00);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 204
    },
    "0040f6ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f6ca(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00421cd0(0);\n    iVar1 = fcn.0040902b();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00403e0e(fcn.004100e8);\n        iVar2 = fcn.00403e25(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00410dc1(0x43ef90, fcn.0040f66d, fcn.0040f1d3, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar3;\n        fcn.00403e0e(arg_8h_00);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 335
    },
    "00410e4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410e4a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00421d03(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0041ba82(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0041ba82(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00403e0e(fcn.004100e8);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.0041cd2c();\n            if (iVar1 == 0) {\n                fcn.004085db();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.0041bc49(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.00403e0e(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 519
    },
    "0040f7bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f7bb(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.0040f788();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0040f986": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f986(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00421cd0(0);\n    iVar1 = fcn.0040902b();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00403e0e(fcn.004100e8);\n        iVar2 = fcn.00403e25(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00410dc1(0x43f000, fcn.0040f68e, fcn.0040f1d3, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar3;\n        fcn.00403e0e(arg_8h_00);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 332
    },
    "0040fa66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fa66(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0040fa3a();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0040fd44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fd44(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint *extraout_ECX;\n    uint uVar2;\n    \n    if (arg_10h != NULL) goto code_r0x0040fd5e;\n    uVar2 = 0x80004005;\n    while( true ) {\n        fcn.00402e00(uVar2);\n        arg_10h = extraout_ECX;\ncode_r0x0040fd5e:\n        if ((arg_8h != 0) || (arg_ch == 0)) break;\n        uVar2 = 0x80070057;\n    }\n    iVar1 = (***arg_10h)(arg_ch, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00403090();\n    }\n    *in_ECX = iVar1 + 0x10;\n    fcn.00403060(arg_ch);\n    fcn.004206e0(*in_ECX, arg_ch, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 263
    },
    "0040fdf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fdf6(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != 0) goto code_r0x0040fe06;\n    do {\n        in_ECX = fcn.00408613();\ncode_r0x0040fe06:\n    } while (arg_8h == 0);\n    do {\n        if (in_ECX == arg_8h) {\n            return 1;\n        }\n        in_ECX = *(in_ECX + 0x10);\n    } while (in_ECX != 0);\n    return 0;\n}\n",
        "token_count": 140
    },
    "0040fe3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040fe3f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        iVar1 = fcn.0040fe21(arg_8h);\n        if (iVar1 != 0) {\n            return arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 86
    },
    "0040ff68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff68(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.0042220b(&lpString, 0x10, 0x43f370, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.0040ff20(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.00421070(unaff_EBX);\n    return;\n}\n",
        "token_count": 271
    },
    "0041030f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041030f(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.00408613();\n        in_ECX = extraout_ECX;\n    }\n    return *(in_ECX + 4) + arg_8h;\n}\n",
        "token_count": 89
    },
    "004106c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004106c7(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00410347(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 360
    },
    "004107ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004107ba(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x004107d9;\ncode_r0x004107d4:\n    do {\n        fcn.00408613();\ncode_r0x004107d9:\n        if (*extraout_ECX != 0) goto code_r0x00410814;\n        if (*0x45087c == 0) {\n            *(unaff_EBP + -0x10) = 0x450880;\n            *(unaff_EBP + -4) = 0;\n            *0x45087c = fcn.004104d0();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x45087c == 0) goto code_r0x004107d4;\n        }\n        iVar1 = fcn.004103b8();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00410814:\n            iVar1 = fcn.0041022a(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00410577(*extraout_ECX, arg_ch);\n            }\n            fcn.00421da8();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 386
    },
    "00410864": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410864(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = *0x45087c;\n    if (*0x45087c != NULL) {\n        puVar1 = *0x45087c + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (arg_ch == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.004106c7(iVar4, arg_8h);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.004106c7(iVar4, arg_8h);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "00410b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00410b08(void)\n\n{\n    if (*0x4508b8 == 0) {\n        *0x4508b8 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x450a58);\n    }\n    return *0x4508b8;\n}\n",
        "token_count": 72
    },
    "00410b2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410b2c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    if (*0x4508b8 != 0) {\n        *0x4508b8 = *0x4508b8 + -1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x450a58);\n        piVar3 = 0x450a70;\n        iVar2 = 0x4508c0;\n        do {\n            if (*piVar3 != 0) {\n                (*pcVar1)(iVar2);\n                *piVar3 = *piVar3 + -1;\n            }\n            iVar2 = iVar2 + 0x18;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < 0x450a58);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00410b71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410b71(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < arg_8h) {\n        fcn.00408613();\n    }\n    if (*0x4508b8 == 0) {\n        fcn.00410b08();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = arg_8h * 4 + 0x450a70;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x450a58);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg_8h * 0x18 + 0x4508c0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x450a58);\n    }\n    (*pcVar2)(arg_8h * 0x18 + 0x4508c0);\n    return;\n}\n",
        "token_count": 256
    },
    "00410efd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410efd(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.0041bb38(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0041b9fc();\n        fcn.0041cd10();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00410fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00410fd0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0040902b();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.004054a5(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00410efd();\n            fcn.00410efd();\n            fcn.00410efd();\n            fcn.00410efd();\n            fcn.00410efd();\n        }\n        iVar2 = fcn.00408ff8();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.0041027c();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0042465e(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0042465e(*(iVar3 + 0xc));\n                fcn.00421c42(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.00420bc0(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.00420bc0(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 530
    },
    "004110f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004110f3(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint *extraout_ECX;\n    \n    if (arg_8h == 0) {\n        fcn.00402e00(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    fcn.004240ea(*in_ECX, arg_8h);\n    return;\n}\n",
        "token_count": 96
    },
    "00411176": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411176(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h_00;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.00411119(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.00403290();\n    }\n    else {\n        arg_10h_00 = fcn.00403510();\n        fcn.00411159(iVar1 + arg_ch, arg_10h, arg_10h_00);\n    }\n    return arg_8h;\n}\n",
        "token_count": 301
    },
    "00411234": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411234(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h_00;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_10h;\n    if (iVar2 < 0) {\n        uVar5 = fcn.00402e00(0x80070057);\n        iVar2 = uVar5 >> 0x20;\n        in_ECX = uVar5;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar1 = *in_ECX;\n        if (iVar2 < *(iVar1 + -0xc)) {\n            uVar3 = fcn.00403510();\n            fcn.004111f5(*arg_10h + iVar1, uVar3);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar1 = *in_ECX;\n        arg_8h_00 = iVar1 + iVar2;\n        uVar4 = *(iVar1 + -0xc) + iVar1;\n        if (arg_8h_00 < uVar4) {\n            iVar2 = fcn.004248b1(arg_8h_00, arg_ch);\n            if (arg_8h_00 + iVar2 < uVar4) {\n                arg_10h_00 = fcn.0042498f(arg_8h_00 + iVar2, arg_ch);\n                iVar1 = *arg_10h;\n                *arg_10h = iVar1 + iVar2 + 1 + arg_10h_00;\n                fcn.00411176(arg_8h, iVar1 + iVar2, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar3 = fcn.00403510();\n    fcn.004035a0(uVar3);\n    return arg_8h;\n}\n",
        "token_count": 497
    },
    "004118ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004118ba(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t arg_8h_01;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_164h;\n    uint var_160h;\n    uint lpFilePart;\n    uint lpFileName;\n    uint lpRootPathName;\n    uint lpFindFileData;\n    uint lpString;\n    uint var_4h;\n    \n    fcn.00421d39(0x158);\n    arg_8h_00 = *(unaff_EBP + 8);\n    iVar2 = *(unaff_EBP + 0xc);\n    arg_8h_01 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x158) = iVar2;\n    if (arg_8h_00 != 0) goto code_r0x004118e8;\n    do {\n        iVar2 = fcn.00408613();\ncode_r0x004118e8:\n    } while (iVar2 == 0);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(iVar2, 0x104, arg_8h_00, unaff_EBP + -0x15c);\n    if (uVar3 == 0) {\n        fcn.00407f4c(arg_8h_00, 0x104, *(unaff_EBP + -0x158), 0xffffffff);\n        fcn.0041188b(arg_8h_01, *(unaff_EBP + -0x158));\n        goto code_r0x00411a4f;\n    }\n    if (0x103 < uVar3) {\n        if (arg_8h_01 != 0) {\n            uVar1 = *(unaff_EBP + -0x158);\n            *(arg_8h_01 + 8) = 3;\n            fcn.00403b30(uVar1);\n        }\n        goto code_r0x00411a4f;\n    }\n    fcn.00403260();\n    *(unaff_EBP + -4) = 0;\n    fcn.004116fc(arg_8h_00, unaff_EBP + -0x154);\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(*(unaff_EBP + -0x154));\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                          (*(unaff_EBP + -0x154), 0, 0, 0, unaff_EBP + -0x164, unaff_EBP + -0x160, 0, 0);\n        if (iVar2 == 0) {\ncode_r0x004119a3:\n            fcn.0041188b(arg_8h_01, *(unaff_EBP + -0x158));\n        }\n        else {\n            if ((*(unaff_EBP + -0x160) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(arg_8h_00);\n            }\n            if (((*(unaff_EBP + -0x160) & 4) != 0) ||\n               (iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + -0x158), unaff_EBP + -0x150),  iVar2 == -1\n               )) goto code_r0x00411a3e;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            if ((*(unaff_EBP + -0x15c) == 0) ||\n               (*(unaff_EBP + -0x15c) < arg_8h_00 || *(unaff_EBP + -0x15c) == arg_8h_00)) goto code_r0x004119a3;\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(unaff_EBP + -0x124);\n            iVar4 = *(unaff_EBP + -0x15c) - arg_8h_00;\n            if (iVar2 + iVar4 < 0x104) {\n                fcn.004043aa(*(unaff_EBP + -0x15c), 0x104 - iVar4, unaff_EBP + -0x124);\n                goto code_r0x00411a3e;\n            }\n            if (arg_8h_01 != 0) {\n                uVar1 = *(unaff_EBP + -0x158);\n                *(arg_8h_01 + 8) = 3;\n                fcn.00403b30(uVar1);\n            }\n        }\n        fcn.00402e20();\n    }\n    else {\ncode_r0x00411a3e:\n        fcn.00402e20();\n    }\ncode_r0x00411a4f:\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 1152
    },
    "00411d5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411d5f(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    uint16_t uVar6;\n    bool bVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar7 = *(arg_8h + 2) == -1;\n    iVar2 = fcn.00411d0e(arg_8h);\n    iVar3 = fcn.00411cc7(arg_8h);\n    if (iVar3 != 0) {\n        iVar2 = iVar2 + (bVar7 * 2 + 1) * 2;\n        iVar3 = fcn.00423d33(iVar2);\n        iVar2 = iVar2 + 2 + iVar3 * 2;\n    }\n    if (bVar7) {\n        iVar1 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar1 = *(arg_8h + 8);\n    }\n    if (iVar1 != 0) {\n        do {\n            piVar4 = (iVar2 + 3U & 0xfffffffc) + (-bVar7 & 6) + 0x12;\n            if (*piVar4 == -1) {\n                piVar4 = piVar4 + 2;\n            }\n            else {\n                piVar4 = fcn.00411cfa(piVar4);\n            }\n            if (*piVar4 == -1) {\n                puVar5 = piVar4 + 2;\n            }\n            else {\n                puVar5 = fcn.00411cfa(piVar4);\n            }\n            uVar6 = *puVar5;\n            if ((uVar6 != 0) && (!bVar7)) {\n                uVar6 = uVar6 - 2;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = puVar5 + uVar6 + 2;\n        } while (iVar1 != 0);\n    }\n    return iVar2 - arg_8h;\n}\n",
        "token_count": 477
    },
    "00411eb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.00411eb4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t arg_10h;\n    uint *in_ECX;\n    int32_t iVar5;\n    uint32_t arg_ch_00;\n    int16_t iVar6;\n    uint32_t arg_8h_01;\n    bool bVar7;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar7 = *(arg_8h_00 + 2) == -1;\n        iVar2 = fcn.00411cc7(arg_8h_00);\n        iVar1 = bVar7 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar7) {\n            arg_8h_00[3] = arg_8h_00[3] | 0x40;\n        }\n        else {\n            *arg_8h_00 = *arg_8h_00 | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar3 < 0x20) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar3 = var_58h + iVar3 * 2;\n            if (var_58h <= iVar3) {\n                puVar4 = fcn.00411d0e(arg_8h_00);\n                iVar5 = 0;\n                if (iVar2 != 0) {\n                    iVar2 = fcn.00423d33(puVar4 + iVar1);\n                    iVar5 = var_58h + 2 + iVar2 * 2;\n                }\n                arg_10h = iVar5 + 3 + puVar4 & 0xfffffffc;\n                arg_8h_01 = puVar4 + iVar3 + 3 & 0xfffffffc;\n                if (bVar7) {\n                    iVar6 = *(arg_8h_00 + 4);\n                }\n                else {\n                    iVar6 = *(arg_8h_00 + 2);\n                }\n                if ((iVar3 != iVar5) && (iVar6 != 0)) {\n                    arg_ch_00 = (in_ECX[1] - arg_10h) + arg_8h_00;\n                    if (in_ECX[1] < arg_ch_00) goto code_r0x00411ff9;\n                    fcn.00411e31(arg_8h_01, arg_ch_00, arg_10h, arg_ch_00);\n                }\n                *puVar4 = arg_ch;\n                iVar3 = iVar3 + iVar1 * -2;\n                fcn.00411e31(puVar4 + iVar1, iVar3, &var_44h, iVar3);\n                in_ECX[1] = in_ECX[1] + (arg_8h_01 - arg_10h);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x00411ff9:\n    fcn.00421070(var_58h);\n    return;\n}\n",
        "token_count": 876
    },
    "00412008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412008(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00412086;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00412086:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.00411eb4(arg_8h_00, arg_8h);\n    fcn.00421070(unaff_EDI);\n    return;\n}\n",
        "token_count": 469
    },
    "004121c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004121c6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    ushort *puVar1;\n    int32_t *arg_10h_00;\n    uint *puVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint arg_8h_00;\n    uint32_t uVar9;\n    int32_t unaff_EBP;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t iVar10;\n    uint var_4h;\n    \n    fcn.00421d03(0x34);\n    arg_10h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x1c) = 0xffffffff;\n    uVar6 = arg_8h_00;\n    iVar5 = fcn.0041214f(arg_8h_00, *(unaff_EBP + 8), arg_10h_00);\n    if (iVar5 == 0) goto code_r0x004123c7;\n    puVar2 = *(unaff_EBP + 0x10);\n    if (puVar2 != NULL) {\n        *puVar2 = arg_8h_00;\n        iVar10 = *arg_10h_00;\n        if (-1 < iVar10) {\n            if (iVar10 < 2) {\n                uVar6 = *(iVar5 + 0x10);\n            }\n            else {\n                if (iVar10 != 2) goto code_r0x004123c7;\n                uVar6 = *(iVar5 + 0x14);\n            }\n            puVar2[1] = uVar6;\n        }\n        goto code_r0x004123c7;\n    }\n    iVar10 = *arg_10h_00;\n    iVar8 = *(iVar5 + 0x24);\n    *(unaff_EBP + 0x10) = 0;\n    uVar9 = iVar8 != -1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x18) = uVar9;\n    if (iVar10 == 0) {\n        iVar10 = unaff_EBP + -0x40;\n        fcn.0041c3eb(iVar10);\n        *(unaff_EBP + -0x30) = 0;\n        iVar8 = arg_10h_00[2];\n        if (*(unaff_EBP + -0x18) != 0) {\n            uVar7 = fcn.004206e0(unaff_EBP + -0x30, 0x10, iVar8, 0x10);\n            fcn.00404344(uVar7);\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + 1;\n            iVar4 = *(unaff_EBP + -0x28) * 0x10;\n            uVar7 = fcn.00403e25(-(iVar4 >> 0x20 != 0) | iVar4);\n            *(unaff_EBP + -0x30) = uVar7;\n            fcn.00406fe1(*(unaff_EBP + -0x30), *(unaff_EBP + -0x28) << 4, *arg_10h_00[2], \n                         (*(unaff_EBP + -0x28) + -1) * 0x10);\n            puVar1 = *(unaff_EBP + -0x28) * 0x10 + -0x10 + *(unaff_EBP + -0x30);\n            *puVar1 = 3;\n            *(puVar1 + 4) = *(unaff_EBP + 8);\n            iVar8 = unaff_EBP + -0x30;\n        }\n        uVar6 = fcn.0041da5c(iVar5, 1, unaff_EBP + -0x40, iVar8, unaff_EBP + -0x1c, iVar10, uVar6);\n        *(unaff_EBP + -0x14) = uVar6;\n        *(unaff_EBP + 0x10) = *(unaff_EBP + -0x38);\n        if (*(unaff_EBP + -0x18) != 0) {\n            fcn.00403e54(*(unaff_EBP + -0x30));\n        }\n    }\n    else if (iVar10 == 1) {\n        pcVar3 = *(iVar5 + 0x10);\n        *(unaff_EBP + -0x14) = 1;\n        if (uVar9 == 0) {\n            uVar6 = (*pcVar3)(unaff_EBP + -0x14);\n        }\n        else {\n            uVar6 = (*pcVar3)(*(unaff_EBP + 8));\n        }\ncode_r0x004122b4:\n        *(unaff_EBP + 0x10) = uVar6;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) == 0;\n    }\n    else if (iVar10 == 2) {\n        if (uVar9 == 0) {\n            uVar6 = (**(iVar5 + 0x14))();\n        }\n        else {\n            uVar6 = (**(iVar5 + 0x14))(*(unaff_EBP + 8));\n        }\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + 0x10) = uVar6;\n    }\n    else if (iVar10 == 3) {\n        pcVar3 = *(iVar5 + 0x10);\n        iVar5 = arg_10h_00[8];\n        iVar10 = arg_10h_00[7];\n        *(unaff_EBP + -0x14) = 1;\n        if (uVar9 == 0) {\n            uVar6 = (*pcVar3)(iVar10, iVar5, unaff_EBP + -0x14);\n        }\n        else {\n            uVar6 = (*pcVar3)(*(unaff_EBP + 8));\n        }\n        goto code_r0x004122b4;\n    }\n    iVar5 = *(unaff_EBP + -0x14);\n    if (((iVar5 < 0) && (arg_10h_00[4] != NULL)) && (*(unaff_EBP + -0x1c) != -1)) {\n        *arg_10h_00[4] = *(unaff_EBP + -0x1c);\n    }\n    arg_10h_00[6] = iVar5;\ncode_r0x004123c7:\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1653
    },
    "004123cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004123cf(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((arg_ch != 0) && (arg_10h != 0)) {\n        puVar2 = fcn.00403e25(arg_ch * arg_10h + 4);\n        *puVar2 = *arg_8h;\n        *arg_8h = puVar2;\n        return;\n    }\n    fcn.00408613();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 146
    },
    "0041280f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0041280f(int32_t *param_1)\n\n{\n    return *param_1 != 2;\n}\n",
        "token_count": 31
    },
    "004129b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.004129b4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    piVar3 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -0x14) = 0;\n    iVar1 = *piVar3;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (**(iVar1 + 0x130))(extraout_ECX, unaff_EBP + -0x14, *(unaff_EBP + 0x24), *(unaff_EBP + 0xc));\n    if ((iVar1 != 0) && (*(unaff_EBP + -0x14) == 0)) {\n        iVar1 = fcn.00408ff8();\n        if (*(iVar1 + 0x3c) == 0) {\n            fcn.00408613();\n        }\n        iVar1 = fcn.00408ff8();\n        uVar2 = (**(**(iVar1 + 0x3c) + 0xc))(extraout_ECX, *(unaff_EBP + 0x10));\n        *(unaff_EBP + -0x14) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x14) != NULL) {\n        if (**(unaff_EBP + 0x10) == 2) {\n            iVar1 = (**(**(unaff_EBP + -0x14) + 0x50))\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), \n                               *(unaff_EBP + 0x2c), *(unaff_EBP + 0x30));\n        }\n        else {\n            iVar1 = fcn.00413c09(*(unaff_EBP + 8), *(unaff_EBP + 0x10), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), \n                                 *(unaff_EBP + 0x20), *(unaff_EBP + 0x24));\n        }\n        if (iVar1 < 0) {\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        else {\n            iVar1 = fcn.00403e25(0xc);\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.00412424(*(unaff_EBP + -0x14));\n            }\n            fcn.0041be6e(uVar2);\n            iVar1 = *(unaff_EBP + -0x14);\n            if (*(iVar1 + 0x24) != 0) {\n                piVar3 = fcn.0041bc49(*(iVar1 + 0x24));\n                *piVar3 = iVar1;\n                iVar1 = *(unaff_EBP + -0x14);\n            }\n            if (*(unaff_EBP + 0x34) != NULL) {\n                **(unaff_EBP + 0x34) = iVar1;\n            }\n        }\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 997
    },
    "00412d18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00412d18(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar1 = extraout_ECX[0x11];\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        piVar2 = fcn.004073d9(unaff_EBP + -0x10);\n        if (((*piVar2 != 0) && (iVar3 = *(*piVar2 + 4),  iVar3 != 0)) && (*(iVar3 + 0x90) == 0)) {\n            fcn.0041bd41(*(unaff_EBP + -0x14));\n            fcn.00412465(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    pcVar1 = extraout_ECX[0x13];\n    while (pcVar1 != NULL) {\n        iVar3 = fcn.0041bd10();\n        if (iVar3 != 0) {\n            fcn.00412465(1);\n        }\n        pcVar1 = extraout_ECX[0x13];\n    }\n    fcn.0041b9fc();\n    fcn.0041b724(extraout_ECX + 0x19);\n    if (0 < extraout_ECX[1]) {\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -4) = 3;\n        iVar3 = fcn.0041b938(0x43f8d4, unaff_EBP + -0x10);\n        if (-1 < iVar3) {\n            fcn.0041b745(*(unaff_EBP + -0x10));\n        }\n        piVar2 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -4) = 2;\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0041bdd7();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041bbee();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405169();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 709
    },
    "00412f3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412f3a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = *(in_ECX + 0x44);\n    while (var_4h != 0) {\n        piVar1 = fcn.004073d9(&var_4h);\n        if (*(*piVar1 + 4) != 0) {\n            fcn.00414120(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "004137d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004137d7(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(unaff_EBP + 8) * 8;\n    iVar2 = fcn.00403e25(-(iVar1 >> 0x20 != 0) | iVar1);\n    *extraout_ECX = iVar2;\n    if (*extraout_ECX != 0) {\n        extraout_ECX[1] = *(unaff_EBP + 8);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 235
    },
    "00413904": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413904(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(in_ECX + 0x1c) == '\\0') {\n        iVar1 = *(*(in_ECX + 0x14) + 8);\n        in_EAX = *arg_8h;\n        if (in_EAX <= *(in_ECX + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *arg_8h = in_EAX;\ncode_r0x00413953:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(in_ECX + 0xc) != 0) {\n            in_EAX = *arg_8h;\n            puVar2 = *(in_ECX + 0x14) + 8;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *arg_8h = uVar3;\n                    goto code_r0x00413953;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(in_ECX + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 337
    },
    "00413d70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413d70(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x50) != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x442cd4, &var_8h),  -1 < iVar1)) {\n        var_4h = NULL;\n        var_ch = 0;\n        iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n        if (-1 < iVar1) {\n            (**(*var_4h + 0x14))(var_4h, arg_ch, &var_ch);\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_8h + 8))(var_8h);\n        return var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "00413ddc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413ddc(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (in_ECX[0x14] != 0)) {\n        var_8h = in_ECX;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x442cd4, &var_8h);\n        if (-1 < iVar1) {\n            var_4h = NULL;\n            iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar1) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00413e3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413e3e(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x442b94;\n    arg_8h[1] = *0x442b98;\n    arg_8h[2] = *0x442b9c;\n    arg_8h[3] = *0x442ba0;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x442d04, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.00404df0(arg_8h, 0x442b94);\n    if ((iVar1 != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x442cf4, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.00404df0(arg_8h, 0x442b94);\n    return iVar1 == 0;\n}\n",
        "token_count": 875
    },
    "0041400e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041400e(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x80) == 0) || (*(in_ECX + 0x7c) == 0)) {\n        var_4h = 0;\n    }\n    else {\n        puVar1 = fcn.00403e25(*(in_ECX + 0x80) * 6);\n        iVar2 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x7c), puVar1, *(in_ECX + 0x80));\n        var_4h = 0;\n        iVar5 = 0;\n        puVar3 = puVar1;\n        if (0 < iVar2) {\n            do {\n                if (arg_8h == 0) {\n                    fcn.00408613();\ncode_r0x004140a8:\n                    var_4h = 1;\n                    break;\n                }\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                else {\n                    uVar4 = 0;\n                }\n                if (((*puVar3 & 0xfd) == uVar4) && (*(puVar3 + 2) == *(arg_8h + 8))) goto code_r0x004140a8;\n                iVar5 = iVar5 + 1;\n                puVar3 = puVar3 + 6;\n            } while (iVar5 < iVar2);\n        }\n        fcn.00403e54(puVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 418
    },
    "004140c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004140c4(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    if ((in_ECX[0x1c] & 0x4000U) == 0) {\n        (**(*in_ECX + 0xb0))();\n    }\n    var_4h = NULL;\n    if (in_ECX[0x14] != 0) goto code_r0x004140ed;\n    while( true ) {\n        fcn.00408613();\ncode_r0x004140ed:\n        piVar1 = in_ECX + 0x14;\n        in_ECX = &var_4h;\n        iVar2 = (****piVar1)(*piVar1, 0x442d14);\n        if (iVar2 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x10))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00414120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414120(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (in_ECX[0x14] != 0) goto code_r0x00414131;\n    while( true ) {\n        fcn.00408613();\n        in_ECX = extraout_ECX;\ncode_r0x00414131:\n        var_4h = NULL;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x442d14, &var_4h);\n        if (iVar1 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x18))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "004141af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004141af(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x28);\n    *(param_1 + 0x24) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[8] != 0) {\n            piVar1 = (**(*piVar1 + 0xf8))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x28) + 0x20));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.0040bd2d();\n            }\n            fcn.0040b7fd();\n        }\n        *(*(param_1 + 0x28) + 0x50) = 0;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "004141ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004141ff(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x28) != 0) &&\n       (iVar1 = (**(**(in_ECX + 0x28) + 0xc))(*(in_ECX + 0x2c), 0xfffffffe, arg_8h, 0),  iVar1 != 0)) {\n        return 1;\n    }\n    iVar1 = *(in_ECX + 0x20);\n    if ((iVar1 == 0) || (*(iVar1 + 0x20) == 0)) {\n        iVar1 = fcn.00408613();\n    }\n    uVar2 = (**(**(iVar1 + 0x20) + 0xc))(*(in_ECX + 0x2c), 0xfffffffe, arg_8h, 0);\n    return uVar2;\n}\n",
        "token_count": 221
    },
    "00414c09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414c09(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0xc) + 0xb4))();\n    (**(**(*(param_1 + 0xc) + 0x90) + 4))(param_1, 1);\n    // WARNING: Could not recover jumptable at 0x00414c40. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (****(*(param_1 + 0xc) + 0x90))();\n    return uVar1;\n}\n",
        "token_count": 161
    },
    "00416ae4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416ae4(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    \n    if ((arg_ch != 0) && (cVar1 = fcn.00413904(&arg_8h),  cVar1 != '\\0')) {\n        fcn.00414dbe(arg_8h, arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "00416b17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416b17(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    \n    if ((arg_ch != 0) && (cVar1 = fcn.00413904(&arg_8h),  cVar1 != '\\0')) {\n        fcn.00414de5(arg_8h, arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00416b4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416b4a(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    \n    if ((arg_ch != 0) && (cVar1 = fcn.00413904(&arg_8h),  cVar1 != '\\0')) {\n        fcn.00414e08(arg_8h, arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "00416c31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416c31(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    \n    if ((arg_ch != 0) && (cVar1 = fcn.00413904(&arg_8h),  cVar1 != '\\0')) {\n        fcn.00414e91(arg_8h, arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00416dcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416dcb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    if (arg_8h == 0) {\n        return -0x7fffbffb;\n    }\n    var_4h = NULL;\n    iVar1 = fcn.00414d8c(arg_8h, &var_4h);\n    if (iVar1 < 0) {\ncode_r0x00416e0c:\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    else {\n        if (*in_ECX == 0) {\n            iVar1 = fcn.004137d7(1);\n            if (iVar1 < 0) goto code_r0x00416e0c;\n            *(*in_ECX + 4) = 1;\n        }\n        iVar1 = fcn.00413838(in_ECX[3], in_ECX[4], *in_ECX, in_ECX[6], var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 293
    },
    "0041757a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041757a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            if ((*(in_ECX + 0x10) == 0) || (*(*(in_ECX + 0x10) + var_4h) != '\\x01')) {\n                iVar2 = *(iVar4 + 0x14 + *(in_ECX + 0x14));\n                if ((iVar2 == 0xd) || (iVar2 == 9)) {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    if (*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 0)\n                    goto code_r0x00417649;\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                else {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                fcn.004174c8(*(iVar3 + 0x14), arg_ch, arg_8h);\n            }\n            else {\n                iVar3 = *(in_ECX + 0x14) + iVar4;\n                if (((*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 3) &&\n                    (piVar1 = *(iVar4 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8),  piVar1 != NULL)) && (*piVar1 != 0)) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar1);\n                    *piVar1 = 0;\n                }\n            }\ncode_r0x00417649:\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x30;\n        } while (var_4h < *(in_ECX + 0xc));\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "004179b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_39h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n\nvoid __cdecl fcn.004179b0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t arg_24h;\n    uint *puVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uchar auStack64 [3];\n    uint32_t var_39h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    fcn.00421d6f(0x68);\n    *(unaff_EBP + -0x24) = *0x43f8e4;\n    *(unaff_EBP + -0x20) = *0x43f8e8;\n    *(unaff_EBP + -0x1c) = *0x43f8ec;\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x4c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = *0x43f8f0;\n    *(unaff_EBP + -0x39) = 0;\n    if (*(unaff_EBP + 8) == 0) goto code_r0x00417fe5;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar5 = fcn.00414d8c(*(unaff_EBP + -0x50), unaff_EBP + -0x34);\n    if (iVar5 < 0) {\ncode_r0x00417fd2:\n        piVar6 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        goto code_r0x00417fe5;\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    if (extraout_ECX[5] == 0) {\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -4) = 1;\n        iVar5 = fcn.00414d5a(*(unaff_EBP + -0x50), unaff_EBP + -0x28);\n        *(unaff_EBP + -0x38) = iVar5;\n        piVar6 = *(unaff_EBP + -0x28);\n        if (-1 < iVar5) {\n            iVar5 = (**(*piVar6 + 0xc))(piVar6, extraout_ECX + 3, extraout_ECX + 5, extraout_ECX + 6);\n            piVar6 = *(unaff_EBP + -0x28);\n            *(unaff_EBP + -4) = 0;\n            if (iVar5 < 0) {\n                if (piVar6 != NULL) {\n                    (**(*piVar6 + 8))(piVar6);\n                }\n                goto code_r0x00417fd2;\n            }\n            *(extraout_ECX + 7) = 0;\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n            goto code_r0x00417aa1;\n        }\n        *(unaff_EBP + -4) = 0;\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        piVar6 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x00417a4e:\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        goto code_r0x00417fe5;\n    }\n    *(extraout_ECX + 7) = 1;\ncode_r0x00417aa1:\n    uVar10 = extraout_ECX[3];\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -4) = 2;\n    uVar7 = fcn.00403e25(-(uVar10 * 0x34 >> 0x20 != 0) | uVar10 * 0x34);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x44) = uVar7;\n    if (*(unaff_EBP + -0x44) == 0) {\ncode_r0x00417ae5:\n        piVar6 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x44);\n        iVar5 = extraout_ECX[3];\n        *(unaff_EBP + -4) = 5;\n        iVar5 = fcn.00403e25(iVar5);\n        extraout_ECX[4] = iVar5;\n        *(unaff_EBP + -4) = 4;\n        uVar10 = 0;\n        if (extraout_ECX[4] != 0) {\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x44);\n            *(unaff_EBP + -0x38) = 0;\n            while (uVar10 < extraout_ECX[3]) {\n                *(uVar10 + extraout_ECX[4]) = 0;\n                iVar11 = uVar10 * 0x30;\n                iVar5 = extraout_ECX[5] + iVar11;\n                if ((*(iVar5 + 0x10) < extraout_ECX[9] || *(iVar5 + 0x10) == extraout_ECX[9]) ||\n                   (*(iVar5 + 0x14) == 0xd)) {\n                    if (*(iVar5 + 0x14) == 0xd) {\n                        *(unaff_EBP + -0x40) = 0;\n                        *(unaff_EBP + -4) = 9;\n                        uVar7 = fcn.00403e25(0x14);\n                        *(unaff_EBP + -0x40) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x40) == 0) {\n                            iVar5 = *(unaff_EBP + -0x38);\n                            if (iVar5 != 0) {\n                                puVar9 = *(unaff_EBP + -0x44) + 0x14;\n                                do {\n                                    fcn.00403e54(*puVar9);\n                                    puVar9 = puVar9 + 0xd;\n                                    iVar5 = iVar5 + -1;\n                                } while (iVar5 != 0);\n                            }\n                            goto code_r0x00417d1d;\n                        }\n                        puVar9 = 0x43f8d4;\ncode_r0x00417d3f:\n                        puVar4 = *(unaff_EBP + -0x40);\n                        *puVar4 = 0;\n                        puVar4[1] = *puVar9;\n                        puVar4[2] = puVar9[1];\n                        puVar4[3] = puVar9[2];\n                        puVar4[4] = puVar9[3];\n                        iVar11 = *(unaff_EBP + -0x38) * 0x30;\n                        *(extraout_ECX[5] + 0x14 + iVar11) = 0xd;\n                        *(extraout_ECX[5] + 0x10 + iVar11) = 4;\n                        iVar5 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar5 + iVar11;\n                        iVar8 = fcn.0041395b(*(iVar5 + iVar11 + 0x14));\n                        uVar7 = *(unaff_EBP + -0x40);\n                        iVar5 = *(unaff_EBP + -0x28);\n                        arg_24h = iVar8 + -1 + *(unaff_EBP + -0x2c) & ~(iVar8 - 1U);\n                        uVar10 = *(iVar5 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        iVar8 = uVar10 + 4;\n                        uVar1 = *(iVar5 + 0x17);\n                        uVar2 = *(iVar5 + 0x16);\n                        var_34h = *(iVar5 + 0x10);\n                        uVar3 = *(iVar5 + 0x14);\n                        _auStack64 = *(iVar5 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    else {\n                        if (*(iVar5 + 0x14) == 0x81) {\n                            *(iVar5 + 0x10) = *(iVar5 + 0x10) + 1;\n                        }\n                        iVar5 = extraout_ECX[5] + iVar11;\n                        if (*(iVar5 + 0x14) == 0x82) {\n                            *(iVar5 + 0x10) = *(iVar5 + 0x10) * 2 + 2;\n                        }\n                        iVar5 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar5 + iVar11;\n                        iVar5 = fcn.0041395b(*(iVar5 + iVar11 + 0x14));\n                        arg_24h = iVar5 + -1 + *(unaff_EBP + -0x2c) & ~(iVar5 - 1U);\n                        iVar5 = *(unaff_EBP + -0x28);\n                        uVar10 = *(iVar5 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        uVar7 = 0;\n                        iVar8 = uVar10 + 4;\n                        uVar1 = *(iVar5 + 0x17);\n                        uVar2 = *(iVar5 + 0x16);\n                        var_34h = *(iVar5 + 0x10);\n                        uVar3 = *(iVar5 + 0x14);\n                        _auStack64 = *(iVar5 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    var_2ch = uVar1;\n                    var_30h = uVar2;\n                    stack0xffffffc4 = uVar3;\n                    *(unaff_EBP + -0x2c) = iVar8;\n                    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 4;\n                    fcn.00415076(*(unaff_EBP + -0x30), _auStack64, stack0xffffffc4, var_34h, var_30h, var_2ch, 0, \n                                 arg_24h, uVar10, iVar8, uVar7);\n                }\n                else if (extraout_ECX[8] == 2) {\n                    uVar10 = *(unaff_EBP + -0x2c) + 3U & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar10 + 4;\n                    *(unaff_EBP + -0x2c) = uVar10 + 8;\n                    uVar7 = *(unaff_EBP + -0x28);\n                    *(iVar5 + 0x10) = 0;\n                    iVar5 = extraout_ECX[5] + iVar11;\n                    arg_24h = 0;\n                    fcn.00415193(*(unaff_EBP + -0x30), *(iVar5 + 8), *(iVar5 + 0x14), *(iVar5 + 0x10), *(iVar5 + 0x16), \n                                 *(iVar5 + 0x17), 0, 0, uVar10, uVar7, 0, 0, 1);\n                }\n                else {\n                    if (extraout_ECX[8] != 1) {\n                        if (*(unaff_EBP + -0x39) == '\\0') {\n                            *(unaff_EBP + -0x60) = 0x89;\n                            *(unaff_EBP + -0x5c) = 0x8b;\n                            *(unaff_EBP + -0x58) = 0;\n                            *(unaff_EBP + -0x54) = 0;\n                            fcn.004178c3(*(unaff_EBP + -0x50), unaff_EBP + -0x60, unaff_EBP + -0x58, 2);\n                            if (*(unaff_EBP + -0x58) == 0) {\n                                if (*(unaff_EBP + -0x54) != 0) {\n                                    puVar9 = 0x442c24;\n                                    goto code_r0x00417cbd;\n                                }\n                            }\n                            else {\n                                puVar9 = 0x43f8e4;\ncode_r0x00417cbd:\n                                *(unaff_EBP + -0x24) = *puVar9;\n                                *(unaff_EBP + -0x20) = puVar9[1];\n                                *(unaff_EBP + -0x1c) = puVar9[2];\n                                *(unaff_EBP + -0x18) = puVar9[3];\n                            }\n                            *(unaff_EBP + -0x39) = 1;\n                        }\n                        *(unaff_EBP + -0x40) = 0;\n                        *(unaff_EBP + -4) = 7;\n                        uVar7 = fcn.00403e25(0x14);\n                        *(unaff_EBP + -0x40) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x40) != 0) {\n                            puVar9 = unaff_EBP + -0x24;\n                            goto code_r0x00417d3f;\n                        }\n                        iVar5 = *(unaff_EBP + -0x38);\n                        if (iVar5 != 0) {\n                            puVar9 = *(unaff_EBP + -0x44) + 0x14;\n                            do {\n                                fcn.00403e54(*puVar9);\n                                puVar9 = puVar9 + 0xd;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        goto code_r0x00417d1d;\n                    }\n                    *(iVar5 + 0x14) = *(iVar5 + 0x14) | 0x4000;\n                    iVar5 = *(unaff_EBP + -0x38);\n                    *(extraout_ECX[5] + 0x10 + iVar11) = 4;\n                    *(iVar5 + extraout_ECX[4]) = 1;\n                    iVar5 = extraout_ECX[5];\n                    *(unaff_EBP + -0x28) = iVar5 + iVar11;\n                    iVar5 = fcn.0041395b(*(iVar5 + iVar11 + 0x14));\n                    arg_24h = iVar5 + -1 + *(unaff_EBP + -0x2c) & ~(iVar5 - 1U);\n                    iVar5 = *(unaff_EBP + -0x28);\n                    uVar10 = *(iVar5 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar10 + 4;\n                    *(unaff_EBP + -0x2c) = uVar10 + 8;\n                    fcn.00415193(*(unaff_EBP + -0x30), *(iVar5 + 8), *(iVar5 + 0x14), *(iVar5 + 0x10), *(iVar5 + 0x16), \n                                 *(iVar5 + 0x17), 0, arg_24h, uVar10, *(unaff_EBP + -0x28), 0, 0, 0);\n                }\n                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x34;\n                iVar5 = extraout_ECX[5];\n                *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 1;\n                *(iVar5 + 4 + iVar11) = arg_24h;\n                uVar10 = *(unaff_EBP + -0x38);\n            }\n            if (*extraout_ECX == 0) {\n                iVar5 = fcn.004137d7(1);\n                *(unaff_EBP + -0x38) = iVar5;\n                if (iVar5 < 0) {\n                    uVar10 = 0;\n                    if (extraout_ECX[3] != 0) {\n                        puVar9 = *(unaff_EBP + -0x44) + 0x14;\n                        do {\n                            fcn.00403e54(*puVar9);\n                            uVar10 = uVar10 + 1;\n                            puVar9 = puVar9 + 0xd;\n                        } while (uVar10 < extraout_ECX[3]);\n                    }\n                    fcn.00403e54(extraout_ECX[4]);\n                    uVar7 = *(unaff_EBP + -0x48);\n                    extraout_ECX[4] = 0;\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00403e54(uVar7);\n                    piVar6 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    goto code_r0x00417a4e;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar7 = *(unaff_EBP + -0x2c);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 0xb;\n            iVar5 = fcn.00403e25(uVar7);\n            extraout_ECX[2] = iVar5;\n            *(unaff_EBP + -4) = 4;\n            uVar10 = 0;\n            if (extraout_ECX[2] != 0) {\n                fcn.004222e0(extraout_ECX[2], 0, *(unaff_EBP + -0x2c));\n                iVar5 = fcn.00413838(*(unaff_EBP + -0x44), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + -0x2c), \n                                     *(unaff_EBP + -0x34));\n                if (iVar5 < 0) {\n                    fcn.00403e54(extraout_ECX[4]);\n                    extraout_ECX[4] = 0;\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.00403e54(*(unaff_EBP + -0x48));\n                goto code_r0x00417fd2;\n            }\n            if (extraout_ECX[3] != 0) {\n                puVar9 = *(unaff_EBP + -0x44) + 0x14;\n                do {\n                    fcn.00403e54(*puVar9);\n                    uVar10 = uVar10 + 1;\n                    puVar9 = puVar9 + 0xd;\n                } while (uVar10 < extraout_ECX[3]);\n            }\ncode_r0x00417d1d:\n            fcn.00403e54(extraout_ECX[4]);\n            uVar7 = *(unaff_EBP + -0x48);\n            extraout_ECX[4] = 0;\n            *(unaff_EBP + -4) = 0;\n            fcn.00403e54(uVar7);\n            goto code_r0x00417ae5;\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.00403e54(*(unaff_EBP + -0x44));\n        piVar6 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\ncode_r0x00417fe5:\n    fcn.00421dcb();\n    return;\n}\n",
        "token_count": 4890
    },
    "00418a37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418a37(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1[4] != NULL) {\n        if (*param_1 != NULL) {\n            fcn.004178a4(*param_1);\n        }\n        if (param_1[4] != NULL) {\n            fcn.004167ac(1);\n        }\n        param_1[4] = NULL;\n    }\n    if (*param_1 != NULL) {\n        fcn.00414d0c();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0041a133": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a133(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_stack_ffffffd0;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00419d91(arg_10h);\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x20), 0xffffffec);\n        if ((uVar2 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.00419d43(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch == 0) goto code_r0x0041a207;\n        iVar1 = arg_8h;\n        uVar3 = fcn.0041a0fe(arg_8h);\n        iVar4 = fcn.00419ff1(arg_8h, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg_10h)) || (uVar2 = fcn.00419d43(iVar4),  (uVar2 & 0x10) == 0))\n        goto code_r0x0041a207;\ncode_r0x0041a1d3:\n        fcn.0041a09a(arg_8h, iVar1);\n    }\n    else {\n        iVar1 = arg_10h;\n        if (((arg_ch != 0) && (iVar4 = fcn.00419d43(arg_ch),  iVar4 != 0)) || ((arg_10h != 0 && (var_4h != 0))))\n        goto code_r0x0041a1d3;\n    }\n    if ((var_4h & 0x30) == 0) {\n        uVar3 = fcn.0041a0fe(arg_8h);\n        arg_10h = fcn.00419ff1(arg_8h, uVar3);\n        uVar2 = fcn.00419d43(arg_10h);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.0040e6a2();\n        if (iVar1 == 0) {\n            return;\n        }\n        in_stack_ffffffd0 = 1;\n    }\ncode_r0x0041a207:\n    fcn.0041a04b(arg_10h, in_stack_ffffffd0);\n    return;\n}\n",
        "token_count": 652
    },
    "0041a215": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041a215(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = fcn.0040a006();\n    iVar1 = arg_ch;\n    if (piVar2 != NULL) {\n        arg_8h = piVar2[0x11];\n        while (arg_8h != 0) {\n            ppiVar3 = fcn.004073d9(&arg_8h);\n            piVar2 = *ppiVar3;\n            if ((piVar2[1] != 0) && (*(piVar2[1] + 0x24) == *(iVar1 + 0x20))) {\n                return piVar2;\n            }\n            if (*piVar2 == *(iVar1 + 0x20)) {\n                return piVar2;\n            }\n        }\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 229
    },
    "0041a269": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041a269(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    \n    iVar3 = arg_8h;\n    if (arg_8h != 0) goto code_r0x0041a27d;\ncode_r0x0041a278:\n    fcn.00408613();\ncode_r0x0041a27d:\n    piVar6 = arg_ch;\n    arg_8h = 0;\n    piVar2 = piVar6;\n    if (arg_ch != NULL) {\n        if (arg_ch[1] == 0) {\n            iVar1 = *arg_ch;\n        }\n        else {\n            iVar1 = *(arg_ch[1] + 0x24);\n        }\n        if (iVar1 != 0) {\n            arg_ch_00 = fcn.0040b774(iVar1);\n            iVar1 = fcn.00419de1(iVar3, arg_ch_00);\n            if (iVar1 != 0) {\n                piVar2 = fcn.0041a215(iVar3, iVar1);\n            }\n        }\n    }\n    while (((piVar2 = fcn.0040efc4(piVar2),  piVar2 != NULL && (arg_8h = arg_8h + 1,  piVar2 != piVar6)) &&\n           (arg_8h < 0x3d))) {\n        iVar3 = fcn.00419cc9(piVar2, arg_10h);\n        if (iVar3 != 0) {\n            return piVar2;\n        }\n    }\n    iVar3 = fcn.0040a006();\n    if (iVar3 != 0) {\n        arg_8h = *(iVar3 + 0x44);\n        if (piVar6 == NULL) {\n            ppiVar4 = fcn.004073d9(&arg_8h);\n            piVar2 = *ppiVar4;\n            piVar6 = piVar2;\n        }\n        else {\n            piVar2 = NULL;\n            if (arg_8h == 0) {\n                return NULL;\n            }\n            do {\n                if (piVar2 == piVar6) break;\n                ppiVar4 = fcn.004073d9(&arg_8h);\n                piVar2 = *ppiVar4;\n            } while (arg_8h != 0);\n        }\n        if (((arg_8h != 0) && (piVar2 != NULL)) && (piVar6 != NULL)) {\n            do {\n                if (arg_8h == 0) {\n                    arg_8h = *(iVar3 + 0x44);\n                }\n                ppiVar4 = fcn.004073d9(&arg_8h);\n                piVar2 = *ppiVar4;\n                iVar1 = fcn.00419cc9(piVar2, arg_10h);\n                if (iVar1 != 0) {\n                    if (piVar2 == NULL) {\ncode_r0x0041a392:\n                        if (piVar2[1] == 0) goto code_r0x0041a278;\n                        uVar5 = (**(*piVar2[1] + 0x78))();\n                        uVar5 = uVar5 & 0x8000000;\n                    }\n                    else {\n                        if (piVar2[1] == 0) {\n                            iVar1 = *piVar2;\n                        }\n                        else {\n                            iVar1 = *(piVar2[1] + 0x24);\n                        }\n                        if (iVar1 == 0) goto code_r0x0041a392;\n                        uVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar1);\n                    }\n                    if (uVar5 != 0) {\n                        return piVar2;\n                    }\n                }\n                if (piVar2 == piVar6) {\n                    return NULL;\n                }\n            } while( true );\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 933
    },
    "0041a3bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041a3bc(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    piVar2 = fcn.0041a215(arg_8h, arg_ch);\n    piVar6 = piVar2;\n    if ((piVar2 == NULL) && (iVar3 = fcn.0040a006(),  iVar3 != 0)) {\n        arg_ch = *(iVar3 + 0x44);\n        while (piVar6 = piVar2,  arg_ch != 0) {\n            ppiVar4 = fcn.004073d9(&arg_ch);\n            piVar6 = *ppiVar4;\n            if (((piVar6[1] != 0) && (piVar6[1] == *(iVar3 + 0x70))) ||\n               ((*piVar6 != 0 && (iVar5 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar6 == iVar5)))) break;\n        }\n    }\n    iVar3 = 0;\n    do {\n        piVar6 = fcn.0041a269(arg_8h, piVar6, arg_10h);\n        if (piVar6 == NULL) {\n            return NULL;\n        }\n        iVar5 = fcn.00419ced(piVar6);\n        if ((iVar5 != 0) && (piVar6 = fcn.0040e985(piVar6, 0),  piVar6 == NULL)) {\n            return NULL;\n        }\n        if (piVar6 == NULL) {\ncode_r0x0041a47b:\n            if (piVar6[1] == 0) {\n                fcn.00408613();\n                pcVar1 = swi(3);\n                piVar6 = (*pcVar1)();\n                return piVar6;\n            }\n            uVar7 = (**(*piVar6[1] + 0x78))();\n            uVar7 = uVar7 & 0x8000000;\n        }\n        else {\n            if (piVar6[1] == 0) {\n                iVar5 = *piVar6;\n            }\n            else {\n                iVar5 = *(piVar6[1] + 0x24);\n            }\n            if (iVar5 == 0) goto code_r0x0041a47b;\n            uVar7 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar5);\n        }\n        if (uVar7 == 0) {\n            return piVar6;\n        }\n        if (piVar6 == var_4h) {\n            return NULL;\n        }\n        if (var_4h == NULL) {\n            var_4h = piVar6;\n        }\n        iVar3 = iVar3 + 1;\n        if (0x1ff < iVar3) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 702
    },
    "0041aafb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041aafb(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041aa4b(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00406fe1(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00406fe1(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 940
    },
    "0041ac2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ac2c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 377
    },
    "0041aca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aca4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_10h;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_01;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x0041acc0;\n    arg_8h_01 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.0041aa4b(arg_8h_01, in_stack_ffffffe4);\n        iVar4 = in_ECX;\ncode_r0x0041acc0:\n        in_ECX = in_stack_ffffffe4;\n        arg_10h = *(iVar4 + 0x28);\n        piVar1 = iVar4 + 0x2c;\n        var_4h = *piVar1 - arg_10h;\n        uVar2 = arg_8h + var_4h;\n        if (*(iVar4 + 8) == 0) {\n            arg_8h_00 = *(iVar4 + 0x30);\n            if (arg_8h_00 < arg_10h) {\n                if (0 < var_4h) {\n                    fcn.00411e31(arg_8h_00, *piVar1 - arg_8h_00, arg_10h, var_4h);\n                    arg_8h_00 = *(iVar4 + 0x30);\n                    *(iVar4 + 0x28) = arg_8h_00;\n                    *piVar1 = arg_8h_00 + var_4h;\n                }\n                if (*(iVar4 + 0xc) == 0) {\n                    arg_8h = *(iVar4 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar5 = var_4h + arg_8h_00;\n                do {\n                    iVar3 = (**(**(iVar4 + 0x24) + 0x34))(iVar5, arg_8h);\n                    var_4h = var_4h + iVar3;\n                    arg_8h = arg_8h - iVar3;\n                    iVar5 = iVar5 + iVar3;\n                    if ((iVar3 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar2);\n                *(iVar4 + 0x28) = *(iVar4 + 0x30);\n                *piVar1 = *(iVar4 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar4 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar4 + 0x24) + 0x50))(0, *(iVar4 + 0x20), iVar4 + 0x30, piVar1);\n            *(iVar4 + 0x28) = *(iVar4 + 0x30);\n        }\n        if (uVar2 <= *piVar1 - *(iVar4 + 0x28)) {\n            return;\n        }\n        arg_8h_01 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 845
    },
    "0041ae9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041ae9f(int32_t lpString1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (lpString1 == 0) {\n        fcn.00408613();\n    }\n    iVar1 = fcn.00408ff8();\n    fcn.00410b71(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.00410be3(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(lpString1, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.00410be3(0);\n    return puVar2;\n}\n",
        "token_count": 195
    },
    "0041af78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041af78(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    int32_t in_ECX;\n    uint32_t arg_14h;\n    int32_t iVar1;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0041aa4b(2, *(in_ECX + 0x14));\n        }\n        arg_ch_00 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        arg_14h = arg_ch;\n        if (arg_ch_00 <= arg_ch) {\n            arg_14h = arg_ch_00;\n        }\n        fcn.00406fe1(*(in_ECX + 0x28), arg_ch_00, arg_8h, arg_14h);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_14h;\n        arg_ch = arg_ch - arg_14h;\n        if (arg_ch != 0) {\n            fcn.0041ac2c();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + arg_14h, iVar1);\n            arg_ch = arg_ch - iVar1;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x0041b01f;\n            do {\n                fcn.00408613();\ncode_r0x0041b01f:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00406fe1(*(in_ECX + 0x28), arg_ch, arg_8h + arg_14h + iVar1, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 576
    },
    "0041b0e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b0e1(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.0041af68();\n    }\n    fcn.0041aa8e();\n    fcn.00402e20();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 173
    },
    "0041b79d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041b79d(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t *in_ECX;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*in_ECX + 0x44))(arg_8h);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*in_ECX + 0x38))();\n        if ((((*0x43f8d4 == *arg_8h) && (arg_8h[1] == *0x43f8d8)) && (arg_8h[2] == *0x43f8dc)) &&\n           (arg_8h[3] == *0x43f8e0)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + in_ECX) != 0) {\n                        return piVar1[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *arg_8h) && (piVar1[1] == arg_8h[1])) &&\n                       ((piVar1[2] == arg_8h[2] && ((piVar1[3] == arg_8h[3] && (*(ppiVar3[1] + in_ECX) != 0)))))) {\n                        return ppiVar3[1] + in_ECX;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 472
    },
    "0041b850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b850(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0041b8b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b8b2(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 88
    },
    "0041b8cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041b8cd(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.00421cd0(8);\n    if ((extraout_ECX[1] != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)\n       ) {\n        fcn.00409044(extraout_ECX[7]);\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x10))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.00408755();\n            iVar3 = iVar2;\n        }\n    }\n    fcn.00421da8(iVar3);\n    return;\n}\n",
        "token_count": 277
    },
    "0041b923": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b923(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    \n    if (*(param_1 + 8) == 0) {\n        iVar3 = 8;\n        fcn.00421cd0(8);\n        if ((extraout_ECX[1] != 0) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)) {\n            fcn.00409044(extraout_ECX[7]);\n            iVar1 = *extraout_ECX;\n            *(unaff_EBP + -4) = 0;\n            (**(iVar1 + 0x10))();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x10) != 0) {\n                fcn.00408755();\n                iVar3 = iVar2;\n            }\n        }\n        fcn.00421da8(iVar3);\n        return;\n    }\n    (**(**(param_1 + 8) + 8))(*(param_1 + 8));\n    return;\n}\n",
        "token_count": 288
    },
    "0041b97b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b97b(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 8) != 0) {\n        iVar1 = (****(in_ECX + 8))(*(in_ECX + 8), arg_8h, arg_ch);\n        return iVar1;\n    }\n    iVar1 = fcn.0041b79d(arg_8h);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041b850(arg_8h);\n        *arg_ch = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0041b8b2();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 215
    },
    "0041b99e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b99e(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0x11;\n    }\n    if (*(in_ECX + 4) != 0) {\n        fcn.00403e54(*(in_ECX + 4));\n        *(in_ECX + 4) = 0;\n    }\n    if (arg_ch != 0) {\n        uVar1 = fcn.00403e25(-(arg_8h * 4 >> 0x20 != 0) | arg_8h * 4);\n        *(in_ECX + 4) = uVar1;\n        fcn.004222e0(uVar1, 0, arg_8h << 2);\n    }\n    *(in_ECX + 8) = arg_8h;\n    return;\n}\n",
        "token_count": 219
    },
    "0041bbf9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bbf9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.004123cf(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "0041bde2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bde2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == 0) {\n        iVar2 = fcn.004123cf(in_ECX + 0x14, *(in_ECX + 0x18), 0xc);\n        iVar1 = *(in_ECX + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(in_ECX + 0x10);\n            *(in_ECX + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(in_ECX + 0x10);\n    *(in_ECX + 0x10) = *puVar3;\n    puVar3[1] = arg_8h;\n    *puVar3 = arg_ch;\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 296
    },
    "0041c055": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041c055(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00421cd0(0);\n    iVar1 = fcn.0040902b();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        arg_8h_00 = fcn.00403e0e(fcn.004100e8);\n        iVar2 = fcn.00403e25(0x60);\n        *(unaff_EBP + 8) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00410dc1(0x43fbf4, fcn.0041c03b, fcn.0040f1d3, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar3;\n        fcn.00403e0e(arg_8h_00);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 333
    },
    "0041c12a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041c12a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041c0fe();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0041c1b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c1b1(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x450ad4;\n    uVar3 = *0x450ad0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0040f5c7(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 358
    },
    "0041c241": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c241(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x450ad4;\n    uVar3 = *0x450ad0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0040f55c(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 355
    },
    "0041c2d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c2d1(int32_t arg_8h)\n\n{\n    if (arg_8h < 0) {\n        if (arg_8h == -0x7ff8fff2) {\n            fcn.004085db();\n        }\n        fcn.00408029(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041c2f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c2f6(uint arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 0xb) {\n        *in_ECX = 0xb;\n        if (arg_8h == 0) {\n            arg_8h._0_2_ = 0;\n        }\n        else {\n            arg_8h._0_2_ = -1;\n        }\n    }\n    else {\n        *in_ECX = 2;\n    }\n    in_ECX[4] = arg_8h;\n    return;\n}\n",
        "token_count": 133
    },
    "0041c32c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c32c(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        uVar1 = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            if (arg_8h == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 0xffff;\n            }\n            in_ECX[4] = uVar1;\n            return;\n        }\n        if (arg_ch == 0x16) {\n            uVar1 = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            uVar1 = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            uVar1 = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            uVar1 = 0x13;\n        }\n        else {\n            uVar1 = 3;\n        }\n    }\n    *in_ECX = uVar1;\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 279
    },
    "0041c6e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c6e0(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    \n    if (pszPath == 0) {\n        fcn.00408613();\n    }\n    arg_10h_00 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h_00);\n        iVar1 = iVar1 + 1;\n    }\n    else {\n        fcn.00407f4c(arg_ch, arg_10h, arg_10h_00, 0xffffffff);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "0041c720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c720(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    uint arg_8h_00;\n    uint *arg_8h_01;\n    char *arg_10h;\n    uint *arg_8h_02;\n    uint var_310h;\n    uint var_30ch;\n    uint var_20ch;\n    uint lpFilename;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    iVar1 = fcn.00408ff8();\n    *(iVar1 + 8) = *(param_1 + 0x44);\n    *(iVar1 + 0xc) = *(param_1 + 0x44);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x44), &lpFilename, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.0040f1b7();\n    }\n    arg_8h_02 = &lpFilename;\n    arg_8h = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (arg_8h == NULL) {\n        fcn.0040f1b7();\n    }\n    *arg_8h = 0;\n    iVar2 = fcn.0041c6e0(&lpFilename, &var_20ch, 0x104);\n    if (iVar2 != 0) {\n        fcn.0040f1b7();\n    }\n    if (*(param_1 + 0x60) != 0) goto code_r0x0041c7d1;\n    iVar2 = fcn.004223ce(&var_20ch);\n    *(param_1 + 0x60) = iVar2;\n    if (iVar2 != 0) goto code_r0x0041c7d1;\ncode_r0x0041c7cc:\n    do {\n        fcn.004085db();\ncode_r0x0041c7d1:\n        iVar2 = *(param_1 + 0x50);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00410921(0xe000, &var_30ch, 0x100);\n            if (iVar2 == 0) {\n                arg_8h_01 = *(param_1 + 0x60);\n            }\n            else {\n                arg_8h_01 = &var_30ch;\n            }\n            iVar2 = fcn.004223ce(arg_8h_01);\n            *(param_1 + 0x50) = iVar2;\n            if (iVar2 == 0) goto code_r0x0041c7cc;\n        }\n        *(iVar1 + 0x10) = iVar2;\n        if (*(param_1 + 100) == 0) {\n            if (*(param_1 + 0x6c) == 1) {\n                arg_10h = \".CHM\";\n            }\n            else {\n                arg_10h = \".HLP\";\n            }\n            fcn.004043aa(arg_8h, &var_4h - arg_8h, arg_10h);\n            iVar2 = fcn.004223ce(&lpFilename);\n            *(param_1 + 100) = iVar2;\n            if (iVar2 == 0) goto code_r0x0041c7cc;\n            *arg_8h = 0;\n        }\n        if (*(param_1 + 0x68) != 0) goto code_r0x0041c897;\n        arg_8h_00 = fcn.0042235a(&var_20ch, 0x104, \".INI\");\n        fcn.00404344(arg_8h_00);\n        iVar2 = fcn.004223ce(&var_20ch);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 != 0) {\ncode_r0x0041c897:\n            fcn.00421070(arg_8h_02);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 941
    },
    "0041c8a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c8a6(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00408ff8();\n    *(iVar3 + 8) = arg_8h;\n    *(iVar3 + 0xc) = arg_8h;\n    fcn.0040879f();\n    iVar3 = fcn.00408ff8();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = arg_10h;\n        *(iVar3 + 0x4c) = arg_14h;\n        *(iVar3 + 0x44) = arg_8h;\n        fcn.0041c720();\n    }\n    iVar3 = fcn.00408ff8();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00405ad7();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x4505bc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "0041ccbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ccbf(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t arg_10h;\n    \n    if (arg_8h != 0) {\n        arg_10h = arg_8h;\n        arg_8h_00 = fcn.0041c92d(arg_8h);\n        fcn.0041cc79(arg_8h_00, arg_8h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0041cce2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cce2(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t *in_ECX;\n    \n    if (arg_8h < 4) {\n        arg_8h = 4;\n    }\n    if (arg_ch < 2) {\n        arg_ch = 0x40;\n    }\n    in_ECX[3] = 0;\n    in_ECX[2] = 0;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    return;\n}\n",
        "token_count": 128
    },
    "0041cd2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd2c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.004123cf(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 200
    },
    "0041cf10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cf10(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    int32_t in_ECX;\n    uint var_28h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    uint32_t lpFileSize;\n    uint32_t var_4h;\n    \n    fcn.004222e0(arg_8h, 0, 0x128);\n    fcn.00407f4c(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x43f3c8) {\ncode_r0x0041d067:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(*(in_ECX + 4), &lpFileSize);\n            if (iVar1 != 0) {\n                arg_8h[6] = lpFileSize;\n                arg_8h[7] = var_4h;\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.0041cd8d(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar3 = fcn.0041ceb0(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar3;\n                    arg_8h[1] = puVar3[1];\n                }\n                iVar1 = fcn.0041cd8d(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar3 = fcn.0041ceb0(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar3;\n                    arg_8h[5] = puVar3[1];\n                }\n                iVar1 = fcn.0041cd8d(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar3 = fcn.0041ceb0(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar3;\n                    arg_8h[3] = puVar3[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x0041d067;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 872
    },
    "0041d2ab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2ab(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if (in_ECX[2] != 0) {\n        fcn.00403e54(*in_ECX);\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041d5ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d5ad(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        uVar1 = *arg_8h;\n        if (arg_8h[2] != 0) {\n            *arg_8h = 0;\n        }\n        *in_ECX = uVar1;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0041d6b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d6b8(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0041d4db(arg_8h);\n            if ((*piVar2 == 0) || (iVar3 = fcn.0041d4db(arg_8h),  *(iVar3 + 4) == 0)) {\n                fcn.00408613();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            ppiVar4 = fcn.0041d4db(arg_8h);\n            iVar3 = fcn.0041d4db(arg_8h);\n            arg_8h = arg_8h + 1;\n            **(iVar3 + 4) = -(**ppiVar4 != 0);\n        } while (arg_8h < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0041d778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0041d778(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint uVar8;\n    uint extraout_ECX;\n    uint *puVar9;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    int32_t unaff_EBP;\n    ulong *puVar12;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0x18);\n    puVar9 = *(unaff_EBP + 8);\n    *puVar9 = extraout_ECX;\n    puVar12 = puVar9 + 1;\n    if ((*(unaff_EBP + 0x14) == 6) || (*(unaff_EBP + 0x14) == 0xc)) {\n        *puVar12 = *(unaff_EBP + 0x10);\n        puVar12 = puVar9 + 2;\n    }\n    puVar9 = *(unaff_EBP + 0x18);\n    uVar8 = *puVar9;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = uVar8;\n    *(unaff_EBP + 8) = puVar9[2];\n    *(unaff_EBP + -0x10) = puVar9[3];\n    cVar1 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + 0x10) = *(unaff_EBP + 0xc);\n    if (cVar1 != '\\0') {\n        do {\n            uVar2 = **(unaff_EBP + 0x10);\n            uVar5 = uVar2;\n            iVar10 = *(unaff_EBP + 8) + -1;\n            *(unaff_EBP + 8) = iVar10;\n            *(unaff_EBP + 0x14) = uVar5;\n            if ((uVar2 != 0xff) && ((uVar2 & 0x40) != 0)) {\n                uVar5 = uVar5 & 0xffbf | 0x4000;\n                *(unaff_EBP + 0x14) = uVar5;\n            }\n            iVar4 = uVar5;\n            if (iVar10 < *(unaff_EBP + -0x10)) {\n                if (iVar4 == 0xff) {\n                    uVar8 = *(*(unaff_EBP + 0x18) + 0xc);\n                    *(unaff_EBP + -0x10) = 0;\n                    *(unaff_EBP + 8) = uVar8;\n                    *(unaff_EBP + -0x14) = 1;\n                    goto code_r0x0041d9c3;\n                }\n                if ((*(unaff_EBP + -0x14) == 0) && (iVar4 == 0xc)) {\n                    *0x450b18 = 10;\n                    *0x450b20 = 0x80020004;\n                    puVar11 = 0x450b18;\n                    goto code_r0x0041d8f8;\n                }\n                break;\n            }\n            if (iVar4 == 0xff) break;\n            puVar7 = iVar10 * 0x10 + *(unaff_EBP + -0x18);\n            puVar11 = puVar7;\n            if ((iVar4 != 0xc) && (iVar3 = *puVar7,  iVar4 != iVar3)) {\n                puVar11 = iVar10 * 0x10 + *(unaff_EBP + 0x20);\n                if (iVar4 == 0xe) {\n                    *(unaff_EBP + 0xc) = 8;\n                }\n                else {\n                    *(unaff_EBP + 0xc) = uVar5;\n                }\n                if (iVar3 != *(unaff_EBP + 0xc)) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(puVar11, puVar7, 0, *(unaff_EBP + 0xc));\n                    if (iVar10 < 0) goto code_r0x0041d9e0;\n                    uVar5 = *(unaff_EBP + 0x14);\n                }\n                if (uVar5 == 0xe) {\n                    if (*puVar7 == *(unaff_EBP + 0xc)) {\n                        uVar5 = fcn.0041b62c(puVar7[2]);\n                        puVar11[2] = uVar5;\n                        *puVar11 = 8;\n                    }\n                    else {\n                        uVar5 = puVar11[2];\n                        uVar6 = fcn.0041b62c(uVar5);\n                        puVar11[2] = uVar6;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n                    }\n                    *(unaff_EBP + 0x14) = 8;\n                    uVar5 = *(unaff_EBP + 0x14);\n                }\n            }\ncode_r0x0041d8f8:\n            if ((uVar5 & 0x4000) != 0) {\n                if ((uVar5 == 0x400b) && (*(unaff_EBP + 0x24) != 0)) {\n                    iVar4 = *puVar11[2];\n                    puVar7 = fcn.00403e25(4);\n                    if (puVar7 == NULL) {\n                        puVar7 = NULL;\n                    }\n                    else {\n                        *puVar7 = iVar4 != 0;\n                    }\n                    uVar8 = fcn.0041d271(puVar7, puVar11[2], 1);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0041d711(uVar8);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x1c) != 0) {\n                        fcn.00403e54(*(unaff_EBP + -0x24));\n                    }\n                }\n                else {\n                    puVar7 = puVar11[2];\n                }\ncode_r0x0041d965:\n                *puVar12 = puVar7;\n                goto code_r0x0041d9c1;\n            }\n            puVar7 = puVar11;\n    // switch table (20 cases) at 0x41da0c\n            switch(uVar5 & 0xffff) {\n            case 2:\n                uVar5 = *(puVar11 + 2);\n                break;\n            case 3:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0x13:\n                uVar5 = puVar11[2];\n                break;\n            case 4:\n                *puVar12 = puVar11[2];\n                goto code_r0x0041d9c1;\n            case 5:\n            case 7:\n                *puVar12 = *(puVar11 + 2);\n                goto code_r0x0041d99e;\n            case 6:\n            case 0x14:\n            case 0x15:\n                *puVar12 = puVar11[2];\n                *(puVar12 + 4) = puVar11[3];\ncode_r0x0041d99e:\n                puVar12 = puVar12 + 1;\n                goto code_r0x0041d9c3;\n            case 0xb:\n                uVar5 = *(puVar11 + 2) != 0;\n                break;\n            case 0xc:\n                goto code_r0x0041d965;\n            default:\n                goto code_r0x0041d9c3;\n            case 0x10:\n                uVar5 = *(puVar11 + 2);\n                break;\n            case 0x11:\n                uVar5 = *(puVar11 + 2);\n                break;\n            case 0x12:\n                uVar5 = *(puVar11 + 2);\n            }\n            *puVar12 = uVar5;\ncode_r0x0041d9c1:\n            puVar12 = puVar12 + 4;\ncode_r0x0041d9c3:\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 1;\n        } while (**(unaff_EBP + 0x10) != '\\0');\n        puVar9 = *(unaff_EBP + 0x18);\n    }\n    if (*(unaff_EBP + 8) < 1) {\n        if (**(unaff_EBP + 0x10) != '\\0') {\n            **(unaff_EBP + 0x1c) = puVar9[2];\n        }\n    }\n    else {\ncode_r0x0041d9e0:\n        **(unaff_EBP + 0x1c) = *(unaff_EBP + 8);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 2166
    },
    "0041da5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_2ch_3\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_19h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.0041da5c(uint noname_0, uint arg_14h_2, uint arg_18h, uint arg_8h, uint arg_ch, uint noname_5, uint arg_14h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t extraout_ECX;\n    int32_t *piVar7;\n    int32_t unaff_EBP;\n    float10 fVar8;\n    ulong uVar9;\n    uint var_4h;\n    uint var_6ch_2;\n    uint var_6ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_40h;\n    uint var_34h_2;\n    uint var_30h_2;\n    uint var_2ch_3;\n    uint var_30h;\n    uint var_2ch_2;\n    uint var_34h;\n    uint var_24h_2;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_10h_2 [3];\n    int32_t var_19h;\n    uint uVar10;\n    uint var_10h;\n    \n    fcn.00421d6f();\n    *(unaff_EBP + -0x34) = extraout_ECX;\n    var_10h = *(extraout_ECX + 0x1c);\n    fcn.00409044(var_10h);\n    iVar5 = *(unaff_EBP + 8);\n    iVar4 = *(iVar5 + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x19) = 0;\n    *(unaff_EBP + -0x18) = iVar4;\n    if (iVar4 == 0) {\n        *(unaff_EBP + -0x18) = unaff_EBP + -0x19;\n    }\n    uVar10 = *(unaff_EBP + -0x18);\n    stack0xfffffff0 = 0x41da9b;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    *(unaff_EBP + -0x20) = *(iVar5 + 0x10);\n    *(unaff_EBP + -0x24) = *(iVar5 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) == 0) {\ncode_r0x0041db22:\n        iVar5 = *(unaff_EBP + 0x14);\n        *NULL = *(iVar5 + 8) << 4;\n        _var_10h_2 = 0x41db31;\n        cVar2 = fcn.004080d2(*NULL, uVar10, var_10h);\n        if ((cVar2 != '\\0') && (uVar6 = *(iVar5 + 8),  uVar6 < 0x8000000)) {\n            stack0xfffffff0 = 0x41db5a;\n            fcn.00423f10();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            *(unaff_EBP + -0x30) = &stack0xfffffff4;\n            _var_10h_2 = 0;\n            unique0x10000355 = uVar6 << 4;\n            fcn.004222e0(*(unaff_EBP + -0x30));\n            unique0x00007a00 = *(unaff_EBP + -0x24);\n            _var_10h_2 = *(unaff_EBP + -0x18);\n            iVar5 = fcn.0041d20a(_var_10h_2, unique0x00007a00);\n            cVar2 = fcn.004080d2(iVar5 + 0x10, _var_10h_2, stack0xfffffff0);\n            if (cVar2 != '\\0') {\n                fcn.00423f10();\n                *(unaff_EBP + -0x10) = &stack0xffffffec;\n                piVar7 = NULL;\n                *(unaff_EBP + -0x58) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n                *(unaff_EBP + -0x54) = 0;\n                *(unaff_EBP + -0x48) = 0;\n                *(unaff_EBP + -0x4c) = 0;\n                *(unaff_EBP + -0x50) = 0;\n                *(unaff_EBP + -4) = 1;\n                iVar4 = fcn.0041d778(&stack0xffffffec, *(unaff_EBP + -0x18), unaff_EBP + -0x44, *(unaff_EBP + -0x24), \n                                     *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), *(unaff_EBP + -0x30), unaff_EBP + -0x58);\n                *(unaff_EBP + -0x18) = iVar4;\n                if (iVar4 == 0) {\n                    uVar6 = *(unaff_EBP + -0x24);\n                    uVar10 = *(unaff_EBP + -0x20);\n                    *(unaff_EBP + -4) = 2;\n                    if (uVar6 == 4) {\n                        fVar8 = fcn.0041f31d(uVar10, &stack0xffffffec, iVar5);\n                        *(unaff_EBP + -0x34) = fVar8;\n                        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x34);\n                    }\n                    else if ((uVar6 == 5) || (uVar6 == 7)) {\n                        fVar8 = fcn.0041f31d(uVar10, &stack0xffffffec, iVar5);\n                        *(unaff_EBP + -0x44) = fVar8;\n                    }\n                    else if (uVar6 - 0x14 < 2) {\n                        uVar9 = fcn.0041f31d(uVar10, &stack0xffffffec, iVar5);\n                        *(unaff_EBP + -0x44) = uVar9;\n                        *(unaff_EBP + -0x40) = uVar9 >> 0x20;\n                    }\n                    else {\n                        piVar7 = fcn.0041f31d(uVar10, &stack0xffffffec, iVar5);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                }\n                uVar6 = 0;\n                if (*(*(unaff_EBP + 0x14) + 8) != 0) {\n                    iVar5 = *(unaff_EBP + -0x30);\n                    do {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar5);\n                        uVar6 = uVar6 + 1;\n                        iVar5 = iVar5 + 0x10;\n                    } while (uVar6 < *(*(unaff_EBP + 0x14) + 8));\n                }\n                if (*(unaff_EBP + -0x18) != 0) {\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0041d5d8();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x28) != 0) {\n                        fcn.00408755(0, *(unaff_EBP + -0x2c));\n                    }\n                    goto code_r0x0041dd68;\n                }\n                fcn.0041d6b8();\n                puVar1 = *(unaff_EBP + 0x10);\n                if (puVar1 == NULL) {\n                    iVar3 = *(unaff_EBP + -0x24);\n                    if (iVar3 == 8) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar7);\n                    }\n                    else if (iVar3 == 9) {\ncode_r0x0041dd27:\n                        if (piVar7 != NULL) {\n                            (**(*piVar7 + 8))(piVar7);\n                        }\n                    }\n                    else if (iVar3 == 0xc) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n                    }\n                    else if (iVar3 == 0xd) goto code_r0x0041dd27;\n                }\n                else {\n                    uVar6 = *(unaff_EBP + -0x24);\n                    *puVar1 = uVar6;\n    // switch table (20 cases) at 0x41dd74\n                    switch(uVar6 & 0xffff) {\n                    case 2:\n                    case 0x12:\n                        *(puVar1 + 2) = piVar7;\n                        break;\n                    case 3:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        puVar1[2] = piVar7;\n                        break;\n                    case 4:\n                        puVar1[2] = *(unaff_EBP + -0x44);\n                        break;\n                    case 5:\n                    case 7:\n                        *(puVar1 + 2) = *(unaff_EBP + -0x44);\n                        break;\n                    case 6:\n                    case 0x14:\n                    case 0x15:\n                        puVar1[2] = *(unaff_EBP + -0x44);\n                        puVar1[3] = *(unaff_EBP + -0x40);\n                        break;\n                    case 0xb:\n                        *(puVar1 + 2) = (piVar7 == 0) - 1;\n                        break;\n                    case 0xc:\n                        *puVar1 = *(unaff_EBP + -0x44);\n                        puVar1[1] = *(unaff_EBP + -0x40);\n                        puVar1[2] = *(unaff_EBP + -0x3c);\n                        puVar1[3] = *(unaff_EBP + -0x38);\n                        break;\n                    case 0x10:\n                    case 0x11:\n                        *(puVar1 + 2) = piVar7;\n                    }\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.0041d5d8();\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x28) != 0) {\n                    fcn.00408755(0, *(unaff_EBP + -0x2c));\n                }\n                goto code_r0x0041dd68;\n            }\n            goto code_r0x0041dabe;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x28) == 0) goto code_r0x0041dd68;\n        unique0x00007a00 = *(unaff_EBP + -0x2c);\n    }\n    else {\n        unique0x00001d00 = iVar4 + 3;\n        _var_10h_2 = 0x41dab9;\n        cVar2 = fcn.004080d2(unique0x00001d00, uVar10, var_10h);\n        if (cVar2 != '\\0') {\n            stack0xfffffff0 = 0x41dae3;\n            fcn.00423f10();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            _var_10h_2 = *(unaff_EBP + -0x18);\n            unique0x10000351 = iVar4;\n            fcn.00406fe1(&stack0xfffffff4, iVar4 + 3, _var_10h_2, iVar4);\n            iVar3 = *(iVar5 + 0xc);\n            *(unaff_EBP + -0x18) = &stack0xfffffff4;\n            if (iVar3 == 8) {\n                iVar3 = 0xe;\n            }\n            *(unaff_EBP + -0x24) = 0;\n            (&stack0xfffffff4)[iVar4] = 0xff;\n            (&stack0xfffffff5)[iVar4] = iVar3;\n            (&stack0xfffffff6)[iVar4] = 0;\n            *(unaff_EBP + -0x20) = *(iVar5 + 0x14);\n            goto code_r0x0041db22;\n        }\ncode_r0x0041dabe:\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x28) == 0) goto code_r0x0041dd68;\n        unique0x00007a00 = *(unaff_EBP + -0x2c);\n    }\n    _var_10h_2 = 0;\n    fcn.00408755();\ncode_r0x0041dd68:\n    *(unaff_EBP + -0x70) = 0x41dd70;\n    fcn.00421dcb();\n    return;\n}\n",
        "token_count": 3233
    },
    "0041ddc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041ddc4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040862f();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.00403260();\n    *(unaff_EBP + -4) = 0;\n    fcn.00403260();\n    fcn.00403260();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.00403b30(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (iVar1 != 0) - 1 & 0x8000ffff;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 351
    },
    "0041de48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041de48(ushort *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *arg_ch_00;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x41de70;\n    fcn.004222e0(arg_8h, 0, 0x20);\n    var_10ch = &fcn.0041de48::var_104h;\n    iVar2 = fcn.0040fe21(0x43ff48);\n    pcVar1 = _sym.imp.OLEAUT32.dll_SysReAllocString;\n    if (iVar2 == 0) {\n        iVar2 = fcn.0040fe21(0x43e434);\n        arg_ch_00 = &fcn.0041de48::var_104h;\n        uVar4 = 0xf10a;\n        if (iVar2 == 0) {\n            uVar4 = 0xf108;\n        }\n        fcn.00410921(uVar4, arg_ch_00, 0x100);\n        *arg_8h = uVar4;\n    }\n    else {\n        var_10ch = *(arg_ch + 0xc);\n        *arg_8h = *(arg_ch + 8);\n        *(arg_8h + 8) = *(arg_ch + 0x10);\n        *(arg_8h + 0xe) = *(arg_ch + 0x1c);\n        if (*(*(arg_ch + 0x14) + -0xc) != 0) {\n            puVar3 = fcn.004084c7(*(arg_ch + 0x14));\n            arg_ch_00 = 0x41deca;\n            uVar4 = (*pcVar1)(*puVar3);\n            *(arg_8h + 6) = uVar4;\n            fcn.00402e20();\n        }\n        if (*(*(arg_ch + 0x18) + -0xc) != 0) {\n            puVar3 = fcn.004084c7(*(arg_ch + 0x18));\n            uVar4 = (*pcVar1)(*puVar3);\n            *(arg_8h + 2) = uVar4;\n            fcn.00402e20();\n        }\n    }\n    puVar3 = fcn.004084c7(var_10ch);\n    uVar4 = (*pcVar1)(*puVar3);\n    *(arg_8h + 4) = uVar4;\n    fcn.00402e20();\n    if (*(arg_8h + 2) == 0) {\n        iVar2 = fcn.00408ff8();\n        puVar3 = fcn.004084c7(*(iVar2 + 0x10));\n        uVar4 = (*pcVar1)(*puVar3);\n        *(arg_8h + 2) = uVar4;\n        fcn.00402e20();\n    }\n    if ((*(arg_8h + 6) == 0) && (*(arg_8h + 8) != 0)) {\n        iVar2 = fcn.00408ff8();\n        puVar3 = fcn.004084c7(*(*(iVar2 + 4) + 100));\n        uVar4 = (*pcVar1)(*puVar3);\n        *(arg_8h + 6) = uVar4;\n        fcn.00402e20();\n    }\n    fcn.00421070(arg_ch_00);\n    return;\n}\n",
        "token_count": 837
    },
    "0041dfcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041dfcf(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0041b8cd();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.00403e54(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405169();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 227
    },
    "0041e335": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e335(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041e385": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e385(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0041d4db(arg_8h);\n            if ((*piVar2 == 0) || (iVar3 = fcn.0041d4db(arg_8h),  *(iVar3 + 4) == 0)) {\n                fcn.00408613();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = fcn.0041d4db(arg_8h);\n            ppuVar4 = fcn.0041d4db(arg_8h);\n            arg_8h = arg_8h + 1;\n            **ppuVar4 = **(iVar3 + 4) != 0;\n        } while (arg_8h < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0041e3df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: pbstr\n\nvoid __cdecl fcn.0041e3df(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint lpString, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    code *pcVar9;\n    code *pcVar10;\n    int16_t iVar11;\n    uint uVar12;\n    int32_t iVar13;\n    uint32_t *puVar14;\n    int32_t iVar15;\n    int32_t *extraout_ECX;\n    uint16_t *puVar16;\n    uint32_t **ppuVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint pbstr;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.00421cd0(0x7c);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*extraout_ECX != 0) {\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.004222e0(unaff_EBP + -0x54, 0, 0x10);\n        if (*(unaff_EBP + 0x18) != 0) {\n            uVar12 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0x18));\n            *(unaff_EBP + -0x4c) = uVar12;\n        }\n        *(unaff_EBP + -0x20) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x48) = 1;\n            *(unaff_EBP + -0x50) = unaff_EBP + -0x20;\n        }\n        *(unaff_EBP + -0x68) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -4) = 1;\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar8 = *(unaff_EBP + -0x4c) * 0x10;\n            iVar13 = fcn.00403e25(-(iVar8 >> 0x20 != 0) | iVar8);\n            *(unaff_EBP + -0x54) = iVar13;\n            fcn.004222e0(iVar13, 0, *(unaff_EBP + -0x4c) << 4);\n            cVar1 = **(unaff_EBP + 0x18);\n            puVar16 = iVar13 + -0x10 + *(unaff_EBP + -0x4c) * 0x10;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -0x10) = puVar16;\n            if (cVar1 != '\\0') {\n                ppuVar17 = *(unaff_EBP + 0x1c) + -4;\n                puVar18 = puVar16 + 4;\n                *(unaff_EBP + -0x1c) = puVar18;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    uVar2 = **(unaff_EBP + -0x14);\n                    *puVar16 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar16 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar16;\n                    if (0x4002 < uVar3) {\n    // switch table (19 cases) at 0x41e91b\n                        switch(uVar3) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4010:\n                        case 0x4011:\n                        case 0x4012:\n                        case 0x4013:\n                        case 0x4014:\n                        case 0x4015:\n                            goto code_r0x0041e657;\n                        case 0x400b:\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            ppuVar17 = ppuVar17 + 1;\n                            puVar14 = *ppuVar17;\n                            *puVar14 = -(*puVar14 != 0) & 0xffff;\n                            *puVar18 = puVar14;\n                            uVar12 = fcn.0041d271(puVar14, puVar14, 0);\n                            *(unaff_EBP + -4) = 3;\n                            fcn.0041d711(uVar12);\n                            *(unaff_EBP + -4) = 1;\n                            if (*(unaff_EBP + -0x2c) != 0) {\n                                fcn.00403e54(*(unaff_EBP + -0x34));\n                            }\n                        }\n                        goto code_r0x0041e660;\n                    }\n                    if (uVar3 == 0x4002) {\ncode_r0x0041e657:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        goto code_r0x0041e660;\n                    }\n    // switch table (20 cases) at 0x41e8cb\n                    switch(uVar3) {\n                    case 2:\n                    case 0x12:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = *(ppuVar17 + 1);\n                        goto code_r0x0041e5e4;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        goto code_r0x0041e657;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar14 = *ppuVar17;\n                        goto code_r0x0041e528;\n                    case 8:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar14 = *ppuVar17;\n                        *(unaff_EBP + -0x1c) = puVar14;\n                        iVar15 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar14);\n                        iVar13 = *(unaff_EBP + -0x1c);\n                        *puVar18 = iVar15;\n                        if ((iVar13 != 0) && (iVar15 == 0)) {\n                            do {\n                                fcn.004085db();\ncode_r0x0041e590:\n                                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                                ppuVar17 = ppuVar17 + 1;\n                                puVar14 = *ppuVar17;\n                                *(unaff_EBP + -0x1c) = puVar14;\n                                fcn.004084c7(puVar14);\n                                *(unaff_EBP + -4) = 2;\n                                iVar15 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(unaff_EBP + -0x18));\n                                iVar13 = *(unaff_EBP + -0x1c);\n                                *puVar18 = iVar15;\n                            } while ((iVar13 != 0) && (iVar15 == 0));\n                            **(unaff_EBP + -0x10) = 8;\n                            *(unaff_EBP + -4) = 1;\n                            fcn.00402e20();\n                        }\n                        break;\n                    case 0xb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar11 = -(ppuVar17[1] != NULL);\ncode_r0x0041e5e4:\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = iVar11;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar14 = *(unaff_EBP + -0x10);\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar4 = *ppuVar17;\n                        *puVar14 = *puVar4;\n                        puVar14[1] = puVar4[1];\n                        puVar14[2] = puVar4[2];\n                        puVar14[3] = puVar4[3];\n                        puVar18 = *(unaff_EBP + -0x1c);\n                        break;\n                    case 0xe:\n                        goto code_r0x0041e590;\n                    case 0x10:\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        break;\n                    case 0x14:\n                    case 0x15:\n                        puVar14 = *(unaff_EBP + 0x1c) + 8;\n                        *(unaff_EBP + 0x1c) = puVar14;\n                        ppuVar17 = ppuVar17 + 2;\ncode_r0x0041e528:\n                        *puVar18 = *puVar14;\n                        *(puVar18 + 4) = puVar14[1];\n                    }\ncode_r0x0041e660:\n                    puVar16 = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    cVar1 = **(unaff_EBP + -0x14);\n                    *(unaff_EBP + -0x10) = puVar16;\n                    *(unaff_EBP + -0x1c) = puVar18;\n                } while (cVar1 != '\\0');\n            }\n        }\n        iVar15 = 0;\n        iVar13 = 0;\n        fcn.0041c3eb(unaff_EBP + -0x44);\n        if (*(unaff_EBP + 0x10) != 0) {\n            iVar13 = unaff_EBP + -0x44;\n        }\n        fcn.004222e0(unaff_EBP + -0x88, 0, 0x20);\n        piVar5 = **(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x28) = 0xffffffff;\n        uVar12 = (**(*piVar5 + 0x18))\n                           (piVar5, *(unaff_EBP + 8), 0x442b94, 0, *(unaff_EBP + 0xc), unaff_EBP + -0x54, iVar13, \n                            unaff_EBP + -0x88, unaff_EBP + -0x28);\n        *(unaff_EBP + 0xc) = uVar12;\n        fcn.0041e385();\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar13 = *(unaff_EBP + -0x4c) * 0x10 + -0x10 + *(unaff_EBP + -0x54);\n            for (pcVar19 = *(unaff_EBP + 0x18); *pcVar19 != '\\0'; pcVar19 = pcVar19 + 1) {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar13);\n                }\n                iVar13 = iVar13 + -0x10;\n            }\n        }\n        fcn.00403e54(*(unaff_EBP + -0x54));\n        *(unaff_EBP + -0x54) = 0;\n        if (-1 < *(unaff_EBP + 0xc)) goto code_r0x0041e7f0;\n        var_4h = unaff_EBP + -0x44;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        if (*(unaff_EBP + 0xc) == -0x7ffdfff7) goto code_r0x0041e73c;\n        while( true ) {\n            fcn.00408029(var_4h);\ncode_r0x0041e73c:\n            if (*(unaff_EBP + -0x70) != iVar15) {\n                (**(unaff_EBP + -0x70))(unaff_EBP + -0x88);\n            }\n            iVar13 = fcn.00403e25(0x20);\n            *(unaff_EBP + 0x14) = iVar13;\n            *(unaff_EBP + -4) = 4;\n            if (iVar13 != iVar15) {\n                iVar15 = fcn.0041ddc4(iVar15, iVar15, *(unaff_EBP + -0x88));\n            }\n            pcVar9 = _sym.imp.OLEAUT32.dll_VariantInit;\n            *(unaff_EBP + -4) = 1;\n            iVar13 = (*pcVar9)(*(unaff_EBP + -0x84));\n            if (iVar13 != 0) {\n                fcn.0040834e(*(unaff_EBP + -0x84));\n            }\n            pcVar10 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x84));\n            iVar13 = (*pcVar9)(*(unaff_EBP + -0x80));\n            if (iVar13 != 0) {\n                fcn.0040834e(*(unaff_EBP + -0x80));\n            }\n            (*pcVar10)(*(unaff_EBP + -0x80));\n            iVar13 = (*pcVar9)(*(unaff_EBP + -0x7c));\n            if (iVar13 != 0) {\n                fcn.0040834e(*(unaff_EBP + -0x7c));\n            }\n            (*pcVar10)(*(unaff_EBP + -0x7c));\n            *(iVar15 + 0x10) = *(unaff_EBP + -0x78);\n            *(iVar15 + 0x1c) = *(unaff_EBP + -0x6c);\n            *(unaff_EBP + 0x14) = iVar15;\n            fcn.00420b25(unaff_EBP + 0x14, 0x4484e4);\ncode_r0x0041e7f0:\n            uVar6 = *(unaff_EBP + 0x10);\n            if (uVar6 == iVar15) goto code_r0x0041e8ab;\n            if ((uVar6 == 0xc) ||\n               (var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x44, unaff_EBP + -0x44, iVar15, uVar6),  iVar15 <= var_4h)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n        }\n    // switch table (20 cases) at 0x41e967\n        switch(uVar6 & 0xffff) {\n        case 2:\n        case 0x12:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 3:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 4:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 5:\n        case 7:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 6:\n        case 0x14:\n        case 0x15:\n            puVar7 = *(unaff_EBP + 0x14);\n            *puVar7 = *(unaff_EBP + -0x3c);\n            puVar7[1] = *(unaff_EBP + -0x38);\n            break;\n        case 8:\n            fcn.0041b68e(*(unaff_EBP + 0x14), *(unaff_EBP + -0x3c));\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x3c));\n            break;\n        case 0xb:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c) != iVar15;\n            break;\n        case 0xc:\n            puVar7 = *(unaff_EBP + 0x14);\n            *puVar7 = *(unaff_EBP + -0x44);\n            puVar7[1] = *(unaff_EBP + -0x40);\n            puVar7[2] = *(unaff_EBP + -0x3c);\n            puVar7[3] = *(unaff_EBP + -0x38);\n            break;\n        case 0x10:\n        case 0x11:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n        }\ncode_r0x0041e8ab:\n        *(unaff_EBP + -4) = 0;\n        fcn.0041d5d8();\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041e351();\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 4873
    },
    "0041ea3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea3f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    fcn.0041f42c();\n    fcn.0041f38c();\n    fcn.0041f32e();\n    if (arg_8h == 0) {\n        iVar1 = fcn.004054a5();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x40) != NULL) {\n                (**(**(iVar1 + 0x40) + 4))(1);\n            }\n            *(iVar1 + 0x40) = 0;\n        }\n        iVar1 = fcn.00408a40();\n        if (*(iVar1 + 0x100) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0041ea9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea9b(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (arg_8h == 0) {\n        if (*0x450b28 == 0) {\n            *0x44d448 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x450b28 = *0x450b28 + 1;\n        }\n        iVar2 = (*pcVar1)();\n        if (60000 < iVar2 - *0x44d448) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            *0x44d448 = (*pcVar1)();\n        }\n    }\n    else {\n        fcn.0041ea3f(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0041ecf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ecf7(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x0041ed0c;\n    do {\n        fcn.00408613();\ncode_r0x0041ed0c:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0041ed64;\n                if (cVar2 < ':') goto code_r0x0041ed44;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0041ed44:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0041ed77;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x0041ed64:\n            iVar3 = fcn.00424487(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x0041ed77:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.004032b0(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00405c46(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x0041ee00;\n                if (cVar2 < ':') goto code_r0x0041edbd;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x0041edbd:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x0041ee1d;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.004043aa(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x0041ee00:\n            iVar3 = fcn.00424487(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x0041ee1d:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1011
    },
    "0041f369": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f369(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4a) != '\\0') {\n        if (*(param_1 + 0x24) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x24));\n            *(param_1 + 0x24) = 0;\n        }\n        *(param_1 + 0x4a) = 0;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0041f46b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f46b(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x20) = 0;\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0041fe21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0041fe21(int32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint arg_8h_01;\n    uint in_stack_ffffffdc;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x0041fe3e;\n    in_stack_ffffffdc = *(in_ECX + 0x14);\n    arg_8h_01 = 1;\ncode_r0x0041fe39:\n    do {\n        while( true ) {\n            fcn.0041aa4b(arg_8h_01, in_stack_ffffffdc);\ncode_r0x0041fe3e:\n            arg_8h_00 = 0xffff;\n            if ((arg_8h != 0) && (*(arg_8h + 8) == 0xffff)) {\n                fcn.004085f7();\n            }\n            fcn.0041fc33(0);\n            fcn.0041ae10(&var_4h);\n            if (var_4h == 0x7fff) {\n                fcn.0041ae58(&var_ch);\n            }\n            else {\n                var_ch = (var_4h & 0x8000) << 0x10 | var_4h & 0x7fff;\n            }\n            if ((var_ch & 0x80000000) != 0) break;\n            if (arg_10h != NULL) {\n                *arg_10h = var_ch;\n                return 0;\n            }\ncode_r0x0041fea9:\n            arg_8h_01 = 5;\n        }\n        if (var_4h != -1) {\n            uVar4 = var_ch & 0x7fffffff;\n            if ((uVar4 == 0) || (*(*(in_ECX + 0x38) + 8) - 1U < uVar4)) goto code_r0x0041fea9;\n            var_4h = 0;\n            fcn.0041bac7(1, &var_4h);\n            if (var_4h == 0) {\ncode_r0x0041ff41:\n                fcn.00408613();\n                goto code_r0x0041ff46;\n            }\n            piVar2 = fcn.0041f87a(uVar4);\n            if (*piVar2 == 2) goto code_r0x0041fea9;\n            arg_8h_00 = fcn.0041f2c3(uVar4);\n            var_8h = 0;\n            if ((*(in_ECX + 0x3c) == 0) || (iVar3 = fcn.0041bac7(arg_8h_00, &var_4h),  var_8h = var_4h,  iVar3 == 0)) {\n                var_8h = *(arg_8h_00 + 8) & 0x7fffffff;\n            }\ncode_r0x0041ffd7:\n            if ((arg_8h == 0) || (iVar3 = fcn.0040fdf6(arg_8h),  iVar3 != 0)) {\n                if (arg_ch == NULL) {\n                    *(in_ECX + 0x10) = var_8h;\n                }\n                else {\n                    *arg_ch = var_8h;\n                }\n                if (arg_10h != NULL) {\n                    *arg_10h = var_ch;\n                }\n                return arg_8h_00;\n            }\ncode_r0x0041fed3:\n            arg_8h_01 = 6;\n            goto code_r0x0041fe39;\n        }\n        arg_8h_00 = fcn.0041aef1(in_ECX, &var_8h);\n        if (arg_8h_00 == 0) goto code_r0x0041fed3;\n        if ((*(arg_8h_00 + 8) & 0x7fffffff) == var_8h) {\ncode_r0x0041ff12:\n            fcn.0041f89b();\n            uVar4 = 1;\n            fcn.0042027a(*(in_ECX + 0x34), arg_8h_00, 1);\n            var_10h = 0;\n            fcn.0041bac7(1, &var_10h);\n            if (var_10h == 0) goto code_r0x0041ff41;\ncode_r0x0041ff46:\n            var_4h = uVar4;\n            fcn.0041fa01(*(in_ECX + 0x34), &var_4h, uVar4);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            goto code_r0x0041ffd7;\n        }\n        if ((*(arg_8h_00 + 8) & 0x80000000) != 0) {\n            fcn.0041fb5f(0);\n            uVar4 = var_8h;\n            puVar1 = fcn.0041bc49(arg_8h_00);\n            *puVar1 = uVar4;\n            goto code_r0x0041ff12;\n        }\n        arg_8h_01 = 7;\n    } while( true );\n}\n",
        "token_count": 1296
    },
    "004200f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.004200f3(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar4;\n    uint var_4h;\n    \n    var_4h = 0x4200ff;\n    fcn.00421d03(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x00420111;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar4 = 4;\ncode_r0x0042010c:\n    do {\n        fcn.0041aa4b(uVar4, var_4h);\ncode_r0x00420111:\n        iVar2 = fcn.0041fe21(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x14) = 0;\n        if (iVar2 == 0) {\n            arg_ch = *(unaff_EBP + -0x18);\n            if (*(*(extraout_ECX + 0x38) + 8) + -1 < arg_ch) {\ncode_r0x0042013c:\n                uVar4 = 5;\n                goto code_r0x0042010c;\n            }\n            *(unaff_EBP + -0x14) = 0;\n            iVar2 = fcn.0041bac7(1, unaff_EBP + -0x14);\n            if (iVar2 != 0) {\n                iVar2 = *(unaff_EBP + -0x14);\n                if (iVar2 == 0) goto code_r0x0042015f;\n                goto code_r0x00420164;\n            }\n        }\n        else {\n            *(unaff_EBP + -4) = 0;\n            arg_ch = fcn.0040fdac();\n            *(unaff_EBP + -0x14) = arg_ch;\n            if (arg_ch == NULL) {\n                fcn.004085db();\n            }\n            fcn.0041f89b();\n            fcn.0042027a(*(extraout_ECX + 0x34), arg_ch, 1);\n            *(unaff_EBP + 8) = 0;\n            fcn.0041bac7(1, unaff_EBP + 8);\n            if (*(unaff_EBP + 8) != 0) {\n                uVar4 = *(extraout_ECX + 0x34);\n                *(unaff_EBP + -0x18) = 2;\n                fcn.0041fa01(uVar4, unaff_EBP + -0x18, 1);\n                uVar4 = *(unaff_EBP + -0x1c);\n                uVar1 = *(extraout_ECX + 0x10);\n                *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\n                *(extraout_ECX + 0x10) = uVar4;\n                (**(*arg_ch + 8))(extraout_ECX);\n                *(extraout_ECX + 0x10) = uVar1;\ncode_r0x0042022b:\n                fcn.00421da8();\n                return;\n            }\ncode_r0x0042015f:\n            fcn.00408613();\n            iVar2 = extraout_ECX_00;\ncode_r0x00420164:\n            if (arg_ch <= *(iVar2 + 8) + -1) {\n                piVar3 = fcn.0041f87a(arg_ch);\n                if (*piVar3 == 1) goto code_r0x0042013c;\n            }\n        }\n        iVar2 = fcn.0041f2c3(arg_ch);\n        if ((iVar2 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x0042022b;\n        iVar2 = fcn.0040fe21(*(unaff_EBP + 8));\n        if (iVar2 != 0) goto code_r0x0042022b;\n        uVar4 = 6;\n    } while( true );\n}\n",
        "token_count": 1066
    },
    "004203b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004203b8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x74) = arg_8h;\n    if (arg_8h != 1) {\n        arg_8h = ((arg_8h != 2) - 1 & 3) - 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 96
    },
    "004203fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004203fc(code *arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    fcn.004203e1(arg_14h);\n    *in_ECX = vtable.COleBusyDialog.0;\n    fcn.004222e0(in_ECX + 0x1e, 0, 0x2c);\n    in_ECX[0x1e] = 0x2c;\n    in_ECX[0x1f] = arg_10h;\n    if (arg_ch != 0) {\n        in_ECX[0x1f] = arg_10h | 8;\n    }\n    in_ECX[0x27] = arg_8h;\n    in_ECX[0x22] = fcn.0042036b;\n    return;\n}\n",
        "token_count": 201
    },
    "00420461": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00420461(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x68);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.0040630d(iVar2, &hWnd);\n    *(param_1 + 0x80) = uVar1;\n    fcn.0040d297(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x78);\n    fcn.0040b82d();\n    fcn.0040b7fd();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa4) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa4) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.004203b8(iVar2);\n            }\n            *(param_1 + 0xa4) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 349
    },
    "00420d80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00420d80(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x420e2b;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00420e57;\n        uStack36 = *0x44d680 ^ &fcn.00420d80::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00420d80::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00427f9f();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00420d80::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "00421070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421070(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x44d680) {\n        return;\n    }\n    *0x451178 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x45117c = &arg_8h;\n    *0x4510b8 = 0x10001;\n    *0x451060 = 0xc0000409;\n    *0x451064 = 1;\n    var_328h = *0x44d680;\n    var_324h = *0x44d684;\n    *0x45106c = unaff_retaddr;\n    *0x451144 = in_GS;\n    *0x451148 = in_FS;\n    *0x45114c = in_ES;\n    *0x451150 = in_DS;\n    *0x451154 = unaff_EDI;\n    *0x451158 = unaff_ESI;\n    *0x45115c = unaff_EBX;\n    *0x451160 = in_EDX;\n    *0x451164 = in_ECX;\n    *0x451168 = in_EAX;\n    *0x45116c = unaff_EBP;\n    *0x451170 = unaff_retaddr;\n    *0x451174 = in_CS;\n    *0x451180 = in_SS;\n    *0x4510b0 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0042fb72(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x440f84);\n    if (*0x4510b0 == 0) {\n        fcn.0042fb72(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 814
    },
    "00421551": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421551(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.004214a8(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00421a79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a79(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.004214a8(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00421f4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00422041: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00422046)\n// WARNING: Removing unreachable block (ram,0x00422074)\n// WARNING: Removing unreachable block (ram,0x0042204c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421f4e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x448ad8, 0x18);\n    fcn.004262ca(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x450bb8 != 1) {\n        *0x450bb4 = 1;\n        *0x450bb0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00427d53(*0x4529ac);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00427d53(*0x4529a8);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00427d4a();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00427d53(*piVar2);\n                        iVar3 = fcn.00427d4a();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00427d53(*0x4529ac);\n                        piVar1 = fcn.00427d53(*0x4529a8);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00421e88(0x43d608);\n        }\n        fcn.00421e88(0x43d610);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004261f0(8);\n    }\n    return;\n}\n",
        "token_count": 799
    },
    "00427104": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427104(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x448bb8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00427f9f();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.004282c1();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00428310(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004271ca();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.004282c1();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 565
    },
    "004271ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004271ca(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00427f9f();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00427f9f();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004274a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004274a5(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00420fbe(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00427f9f();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00427f9f();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00420f97(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0042722a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 383
    },
    "0042c073": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042c073(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004261f0(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0042fb7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042fb7a(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00427d4a();\n    var_4h = 0;\n    if (*0x451604 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x441a10);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x451604 = fcn.00427cd8(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x441a00);\n        *0x451608 = fcn.00427cd8(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4419ec);\n        *0x45160c = fcn.00427cd8(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x451614 = fcn.00427cd8(uVar3);\n        if (*0x451614 != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x451610 = fcn.00427cd8(uVar3);\n        }\n    }\n    if ((*0x451610 != iVar1) && (*0x451614 != iVar1)) {\n        pcVar4 = fcn.00427d53(*0x451610);\n        pcVar5 = fcn.00427d53(*0x451614);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0042fcbc;\n        }\n    }\n    if ((((*0x451608 != iVar1) && (pcVar4 = fcn.00427d53(*0x451608),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x45160c != iVar1 && (pcVar4 = fcn.00427d53(*0x45160c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0042fcbc:\n    pcVar4 = fcn.00427d53(*0x451604);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 816
    },
    "004335de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004335de(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    fcn.00423f3c(arg_10h);\n    var_14h = fcn.004355ff(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00434b77(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00433637:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00433677;\n        }\n        if (iVar1 != 2) {\ncode_r0x00433669:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00433677;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00433669;\n        goto code_r0x00433637;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00433677:\n    fcn.00421070(unaff_EBX);\n    return;\n}\n",
        "token_count": 494
    },
    "00433686": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433686(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    fcn.00423f3c(arg_10h);\n    var_14h = fcn.004355ff(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004350bb(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x004336df:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043371f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00433711:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043371f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00433711;\n        goto code_r0x004336df;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043371f:\n    fcn.00421070(unaff_EBX);\n    return;\n}\n",
        "token_count": 496
    },
    "00434b77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434b77(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00435078;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00434cac;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00434cb3;\ncode_r0x00434cac:\n                        do {\n                            var_4h = 1;\ncode_r0x00434cb3:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00434cc1;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00434cc1:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x44e69c - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x44e69c < iVar12) {\n                if (iVar12 < *0x44e698) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x44e698;\n                    uVar5 = 1;\n                }\n                goto code_r0x00435078;\n            }\n            var_10h = *0x44e69c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00434e64;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00434e64:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00435078:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3662
    },
    "004350bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004350bb(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004355bc;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x44e6b8 - 1;\n        iVar4 = *0x44e6b8 + (*0x44e6b8 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x44e6b8 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004351f0;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004351f7;\ncode_r0x004351f0:\n                        do {\n                            var_4h = 1;\ncode_r0x004351f7:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00435205;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00435205:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x44e6b4 - *0x44e6b8) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x44e6b4 < iVar12) {\n                if (iVar12 < *0x44e6b0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x44e6c4;\n                    iVar4 = *0x44e6bc + (*0x44e6bc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x44e6bc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x44e6bc + (*0x44e6bc >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x44e6bc & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x44e6c4 + *0x44e6b0;\n                    uVar5 = 1;\n                }\n                goto code_r0x004355bc;\n            }\n            var_10h = *0x44e6b4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x44e6b8 - 1;\n            iVar12 = *0x44e6b8 + (*0x44e6b8 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x44e6b8 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004353a8;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004353a8:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x44e6bc + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004355bc:\n    var_20h = iVar12 << (0x1fU - *0x44e6bc & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x44e6c0 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x44e6c0 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3676
    },
    "00435cf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Removing unreachable block (ram,0x00436232)\n// WARNING: Removing unreachable block (ram,0x0043623c)\n// WARNING: Removing unreachable block (ram,0x00436241)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00435cf7(uint32_t arg_8h, uint32_t noname_1, uint32_t noname_2, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    uint16_t uVar12;\n    uint32_t uVar13;\n    char cVar14;\n    uint32_t uVar15;\n    int16_t *piVar16;\n    int16_t *piVar17;\n    uint16_t uVar18;\n    uint16_t uVar19;\n    uint32_t uVar20;\n    uint *puVar21;\n    char *pcVar22;\n    uint var_74h;\n    uint var_70h;\n    uint16_t *var_6ch;\n    int32_t *var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint16_t *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_20h;\n    uint16_t var_1ch;\n    uint32_t var_1ah;\n    uint var_16h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    var_10h._0_1_ = arg_8h;\n    var_10h._1_1_ = arg_8h >> 8;\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_ch._0_2_ = noname_1;\n    var_ch._2_2_ = noname_1 >> 0x10;\n    var_8h._0_2_ = noname_2;\n    uVar8 = var_8h & 0x8000;\n    uVar13 = noname_2 & 0x7fff;\n    var_30h = 0xcccccccc;\n    var_2ch = 0xcccccccc;\n    var_28h = 0xcc;\n    var_27h = 0xcc;\n    var_26h = 0xfb;\n    var_25h = 0x3f;\n    if ((noname_2 & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar13 == 0) && (noname_1 == 0)) && (arg_8h == 0)) {\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n        goto code_r0x004365cf;\n    }\n    if (uVar13 == 0x7fff) {\n        *arg_1ch = 1;\n        var_ch = noname_1;\n        if (((noname_1 == 0x80000000) && (arg_8h == 0)) || ((noname_1 & 0x40000000) != 0)) {\n            if (((noname_2 & 0x8000) == 0) || (noname_1 != 0xc0000000)) {\n                if ((noname_1 != 0x80000000) || (arg_8h != 0)) goto code_r0x00435e2d;\n                pcVar22 = \"1#INF\";\n            }\n            else {\n                if (arg_8h != 0) {\ncode_r0x00435e2d:\n                    pcVar22 = \"1#QNAN\";\n                    goto code_r0x00435e32;\n                }\n                pcVar22 = \"1#IND\";\n            }\n            iVar6 = fcn.00422112(arg_1ch + 2, 0x16, pcVar22);\n            if (iVar6 != 0) {\n                fcn.00425a57(0, 0, 0, 0, 0);\n            }\n            *(arg_1ch + 3) = 5;\n            noname_1 = var_ch;\n        }\n        else {\n            pcVar22 = \"1#SNAN\";\ncode_r0x00435e32:\n            iVar6 = fcn.00422112(arg_1ch + 2, 0x16, pcVar22);\n            noname_1 = var_ch;\n            if (iVar6 != 0) {\n                fcn.00425a57(0, 0, 0, 0, 0);\n                noname_1 = var_ch;\n            }\n            *(arg_1ch + 3) = 6;\n        }\n        goto code_r0x004365cf;\n    }\n    var_4ch._0_2_ = ((uVar13 >> 8) + (noname_1 >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar13 * 0x4d10 >> 0x10;\n    uVar15 = var_4ch;\n    var_20h._0_2_ = 0;\n    var_16h._0_1_ = uVar13;\n    var_16h._1_1_ = uVar13 >> 8;\n    var_1ah._0_2_ = var_ch;\n    var_1ah._2_2_ = var_ch._2_2_;\n    var_20h._2_2_ = arg_8h;\n    var_64h = 0x44e670;\n    var_1ch = var_10h._2_2_;\n    var_1ah = noname_1;\n    if (-uVar15 != 0) {\n        uVar13 = -uVar15;\n        uVar11 = arg_8h;\n        if (0 < uVar15) {\n            var_64h = 0x44e7d0;\n            uVar13 = uVar15;\n        }\njoined_r0x00435ec0:\n        var_1ch = uVar11 >> 0x10;\n        arg_8h = uVar11 & 0xffff | var_10h._2_2_ << 0x10;\n        if (uVar13 != 0) {\n            var_64h = var_64h + 0x54;\n            uVar15 = uVar13 & 7;\n            uVar13 = uVar13 >> 3;\n            if (uVar15 != 0) {\n                piVar10 = uVar15 * 0xc + var_64h;\n                if (0x7fff < *piVar10) {\n                    var_3ch._0_2_ = *piVar10;\n                    var_3ch._2_2_ = *piVar10 >> 0x10;\n                    piVar2 = piVar10 + 2;\n                    var_38h._0_2_ = piVar10[1];\n                    var_38h._2_2_ = piVar10[1] >> 0x10;\n                    piVar10 = &var_3ch;\n                    var_34h = *piVar2;\n                    iVar6 = CONCAT22(var_38h, var_3ch._2_2_) + -1;\n                    var_3ch._2_2_ = iVar6;\n                    var_38h._0_2_ = iVar6 >> 0x10;\n                }\n                var_54h = 0;\n                var_10h._0_1_ = 0;\n                var_10h._1_1_ = 0;\n                var_10h._2_2_ = 0;\n                var_ch._0_2_ = 0;\n                var_ch._2_2_ = 0;\n                var_8h._0_2_ = 0;\n                var_8h._2_2_ = 0;\n                uVar18 = (*(piVar10 + 10) ^ CONCAT11(var_16h._1_1_, var_16h)) & 0x8000;\n                uVar9 = CONCAT11(var_16h._1_1_, var_16h) & 0x7fff;\n                uVar12 = *(piVar10 + 10) & 0x7fff;\n                uVar19 = uVar12 + uVar9;\n                if (((uVar9 < 0x7fff) && (uVar12 < 0x7fff)) && (uVar19 < 0xbffe)) {\n                    if (0x3fbf < uVar19) {\n                        if (((uVar9 == 0) &&\n                            (uVar19 = uVar19 + 1, \n                            (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah >> 0x10)) & 0x7fffffff) == 0)) &&\n                           ((CONCAT22(var_1ah, var_1ch) == 0 && (CONCAT22(uVar11, var_20h) == 0)))) {\n                            var_16h._0_1_ = 0;\n                            var_16h._1_1_ = 0;\n                            noname_1 = 0;\n                            goto joined_r0x00435ec0;\n                        }\n                        if ((((uVar12 != 0) || (uVar19 = uVar19 + 1,  (piVar10[2] & 0x7fffffffU) != 0)) ||\n                            (piVar10[1] != 0)) || (*piVar10 != 0)) {\n                            var_58h = 0;\n                            puVar21 = &var_ch;\n                            var_40h = 5;\n                            do {\n                                var_50h = var_40h;\n                                if (0 < var_40h) {\n                                    var_6ch = &var_20h + var_58h * 2;\n                                    var_68h = piVar10 + 2;\n                                    do {\n                                        bVar5 = false;\n                                        uVar15 = puVar21[-1] + *var_6ch * *var_68h;\n                                        if ((uVar15 < puVar21[-1]) || (uVar15 < *var_6ch * *var_68h)) {\n                                            bVar5 = true;\n                                        }\n                                        puVar21[-1] = uVar15;\n                                        if (bVar5) {\n                                            *puVar21 = *puVar21 + 1;\n                                        }\n                                        var_6ch = var_6ch + 1;\n                                        var_68h = var_68h + -2;\n                                        var_50h = var_50h + -1;\n                                    } while (0 < var_50h);\n                                }\n                                puVar21 = puVar21 + 2;\n                                var_58h = var_58h + 1;\n                                var_40h = var_40h + -1;\n                            } while (0 < var_40h);\n                            uVar19 = uVar19 + 0xc002;\n                            if (uVar19 < 1) {\ncode_r0x00436073:\n                                uVar19 = uVar19 - 1;\n                                if (uVar19 < 0) {\n                                    uVar15 = -uVar19;\n                                    uVar19 = 0;\n                                    do {\n                                        if ((var_10h & 1) != 0) {\n                                            var_54h = var_54h + 1;\n                                        }\n                                        iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                                        uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                        iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                                        var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                                        var_8h._2_2_ = var_8h._2_2_ >> 1;\n                                        var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                                        uVar20 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                                        var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                                        uVar15 = uVar15 - 1;\n                                        var_ch._0_2_ = uVar11 >> 1;\n                                        var_10h._0_1_ = uVar20;\n                                        var_10h._1_1_ = uVar20 >> 8;\n                                    } while (uVar15 != 0);\n                                    if (var_54h != 0) {\n                                        var_10h._0_1_ = var_10h | 1;\n                                    }\n                                }\n                            }\n                            else {\n                                do {\n                                    uVar12 = var_ch._2_2_;\n                                    uVar9 = var_10h._2_2_;\n                                    if ((var_8h._2_2_ & 0x8000) != 0) break;\n                                    iVar6 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                                    var_10h._0_1_ = iVar6;\n                                    var_10h._1_1_ = iVar6 >> 8;\n                                    var_10h._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                                    var_ch._0_2_ = iVar6 | uVar9 >> 0xf;\n                                    var_ch._2_2_ = iVar6 >> 0x10;\n                                    iVar6 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                                    var_8h._0_2_ = iVar6 | uVar12 >> 0xf;\n                                    uVar19 = uVar19 - 1;\n                                    var_8h._2_2_ = iVar6 >> 0x10;\n                                } while (0 < uVar19);\n                                if (uVar19 < 1) goto code_r0x00436073;\n                            }\n                            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                                    var_10h._2_2_ = 0;\n                                    var_ch._0_2_ = 0;\n                                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                                        var_ch._2_2_ = 0;\n                                        var_8h._0_2_ = 0;\n                                        if (var_8h._2_2_ == 0xffff) {\n                                            var_8h._2_2_ = 0x8000;\n                                            uVar19 = uVar19 + 1;\n                                        }\n                                        else {\n                                            var_8h._2_2_ = var_8h._2_2_ + 1;\n                                        }\n                                    }\n                                    else {\n                                        iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                                        var_ch._2_2_ = iVar6;\n                                        var_8h._0_2_ = iVar6 >> 0x10;\n                                    }\n                                }\n                                else {\n                                    iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                                    var_10h._2_2_ = iVar6;\n                                    var_ch._0_2_ = iVar6 >> 0x10;\n                                }\n                            }\n                            noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            if (uVar19 < 0x7fff) {\n                                var_16h._1_1_ = uVar19 >> 8 | uVar18 >> 8;\n                                var_20h._0_2_ = var_10h._2_2_;\n                                var_20h._2_2_ = var_ch;\n                                var_1ch = var_ch._2_2_;\n                                uVar11 = CONCAT22(var_ch._2_2_, var_ch);\n                                var_1ah._0_2_ = var_8h;\n                                var_1ah._2_2_ = var_8h._2_2_;\n                                var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                                var_16h._0_1_ = uVar19;\n                            }\n                            else {\n                                var_1ch = 0;\n                                var_1ah._0_2_ = 0;\n                                var_20h._0_2_ = 0;\n                                var_20h._2_2_ = 0;\n                                uVar11 = 0;\n                                iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                                var_1ah._2_2_ = iVar6;\n                                var_1ah = 0x80000000;\n                                var_16h._0_1_ = iVar6 >> 0x10;\n                                var_16h._1_1_ = iVar6 >> 0x18;\n                                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                            }\n                            goto joined_r0x00435ec0;\n                        }\n                    }\n                    var_1ah._2_2_ = 0;\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                }\n                else {\n                    iVar6 = ((uVar18 == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah._2_2_ = iVar6;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                }\n                var_1ch = 0;\n                var_1ah._0_2_ = 0;\n                var_1ah = var_1ah._2_2_ << 0x10;\n                var_20h._0_2_ = 0;\n                var_20h._2_2_ = 0;\n                uVar11 = 0;\n                noname_1 = 0;\n            }\n            goto joined_r0x00435ec0;\n        }\n    }\n    var_1ah._2_2_ = var_1ah >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    uVar13 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n    if (0x3ffe < uVar13 >> 0x10) {\n        var_4ch._0_2_ = var_4ch + 1;\n        var_50h = 0;\n        var_10h._0_1_ = 0;\n        var_10h._1_1_ = 0;\n        var_10h._2_2_ = 0;\n        arg_8h = arg_8h & 0xffff;\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h._0_2_ = 0;\n        var_8h._2_2_ = 0;\n        uVar13 = uVar13 >> 0x10 & 0x7fff;\n        iVar6 = uVar13 + 0x3ffb;\n        if ((uVar13 < 0x7fff) && (iVar6 < 0xbffe)) {\n            if (0x3fbf < iVar6) {\n                if ((((uVar13 == 0) &&\n                     (iVar6 = uVar13 + 0x3ffc, \n                     (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) & 0x7fffffff) == 0)) &&\n                    (CONCAT22(var_1ah, var_1ch) == 0)) && (CONCAT22(var_20h._2_2_, var_20h) == 0)) {\n                    var_16h._0_1_ = 0;\n                    var_16h._1_1_ = 0;\n                    noname_1 = 0;\n                    goto code_r0x00436407;\n                }\n                var_58h = 0;\n                puVar21 = &var_ch;\n                var_40h = 5;\n                do {\n                    var_54h = var_40h;\n                    if (0 < var_40h) {\n                        var_48h = &var_28h;\n                        puVar7 = &var_20h + var_58h * 2;\n                        do {\n                            bVar5 = false;\n                            uVar13 = puVar21[-1] + *var_48h * *puVar7;\n                            if ((uVar13 < puVar21[-1]) || (uVar13 < *var_48h * *puVar7)) {\n                                bVar5 = true;\n                            }\n                            puVar21[-1] = uVar13;\n                            if (bVar5) {\n                                *puVar21 = *puVar21 + 1;\n                            }\n                            var_48h = var_48h + -1;\n                            puVar7 = puVar7 + 1;\n                            var_54h = var_54h + -1;\n                        } while (0 < var_54h);\n                    }\n                    puVar21 = puVar21 + 2;\n                    var_58h = var_58h + 1;\n                    var_40h = var_40h + -1;\n                } while (0 < var_40h);\n                iVar6 = iVar6 + 0xc002;\n                if (iVar6 < 1) {\ncode_r0x00436300:\n                    uVar19 = iVar6 + 0xffff;\n                    if (uVar19 < 0) {\n                        uVar13 = -(iVar6 + 0xffff) & 0xffff;\n                        uVar19 = uVar19 + uVar13;\n                        do {\n                            if ((var_10h & 1) != 0) {\n                                var_50h = var_50h + 1;\n                            }\n                            iVar3 = CONCAT22(var_8h._2_2_, var_8h);\n                            uVar15 = CONCAT22(var_ch._2_2_, var_ch);\n                            iVar6 = CONCAT22(var_ch._2_2_, var_ch);\n                            var_8h._0_2_ = CONCAT22(var_8h._2_2_, var_8h) >> 1;\n                            var_8h._2_2_ = var_8h._2_2_ >> 1;\n                            var_ch._2_2_ = var_ch._2_2_ >> 1 | (iVar3 << 0x1f) >> 0x10;\n                            uVar11 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) >> 1;\n                            var_10h._2_2_ = var_10h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                            uVar13 = uVar13 - 1;\n                            var_ch._0_2_ = uVar15 >> 1;\n                            var_10h._0_1_ = uVar11;\n                            var_10h._1_1_ = uVar11 >> 8;\n                        } while (uVar13 != 0);\n                        if (var_50h != 0) {\n                            var_10h._0_1_ = var_10h | 1;\n                        }\n                    }\n                }\n                else {\n                    do {\n                        uVar9 = var_ch._2_2_;\n                        uVar19 = var_10h._2_2_;\n                        if (var_8h._2_2_ < 0) break;\n                        iVar3 = CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) << 1;\n                        var_10h._0_1_ = iVar3;\n                        var_10h._1_1_ = iVar3 >> 8;\n                        var_10h._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_ch._2_2_, var_ch) * 2;\n                        var_ch._0_2_ = iVar3 | uVar19 >> 0xf;\n                        var_ch._2_2_ = iVar3 >> 0x10;\n                        iVar3 = CONCAT22(var_8h._2_2_, var_8h) * 2;\n                        var_8h._0_2_ = iVar3 | uVar9 >> 0xf;\n                        iVar6 = iVar6 + 0xffff;\n                        var_8h._2_2_ = iVar3 >> 0x10;\n                    } while (0 < iVar6);\n                    uVar19 = iVar6;\n                    if (uVar19 < 1) goto code_r0x00436300;\n                }\n                if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n                   ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                    if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                        var_10h._2_2_ = 0;\n                        var_ch._0_2_ = 0;\n                        if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                            var_ch._2_2_ = 0;\n                            var_8h._0_2_ = 0;\n                            if (var_8h._2_2_ == 0xffff) {\n                                var_8h._2_2_ = 0x8000;\n                                uVar19 = uVar19 + 1;\n                            }\n                            else {\n                                var_8h._2_2_ = var_8h._2_2_ + 1;\n                            }\n                        }\n                        else {\n                            iVar6 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                            var_ch._2_2_ = iVar6;\n                            var_8h._0_2_ = iVar6 >> 0x10;\n                        }\n                    }\n                    else {\n                        iVar6 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                        var_10h._2_2_ = iVar6;\n                        var_ch._0_2_ = iVar6 >> 0x10;\n                    }\n                }\n                noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                if (uVar19 < 0x7fff) {\n                    var_16h._1_1_ = uVar19 >> 8 | var_16h._1_1_ & 0x80;\n                    var_20h._0_2_ = var_10h._2_2_;\n                    arg_8h = CONCAT22(var_10h._2_2_, var_ch);\n                    var_1ch = var_ch._2_2_;\n                    var_1ah = CONCAT22(var_8h._2_2_, var_8h);\n                    var_16h._0_1_ = uVar19;\n                }\n                else {\n                    var_1ch = 0;\n                    var_20h._0_2_ = 0;\n                    arg_8h = var_10h._2_2_ << 0x10;\n                    iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n                    var_1ah = 0x80000000;\n                    var_16h._0_1_ = iVar6 >> 0x10;\n                    var_16h._1_1_ = iVar6 >> 0x18;\n                    noname_1 = CONCAT22(var_ch._2_2_, var_ch);\n                }\n                goto code_r0x00436407;\n            }\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = (((var_16h._1_1_ & 0x80) == 0) - 1 & 0x80000000) + 0x7fff8000;\n        }\n        var_1ch = 0;\n        arg_8h = 0;\n        var_20h._0_2_ = 0;\n        var_1ah = iVar6 << 0x10;\n        var_16h._0_1_ = iVar6 >> 0x10;\n        var_16h._1_1_ = iVar6 >> 0x18;\n        noname_1 = 0;\n    }\ncode_r0x00436407:\n    var_10h._2_2_ = arg_8h >> 0x10;\n    var_20h._2_2_ = arg_8h;\n    *arg_1ch = var_4ch;\n    if (((arg_18h & 1) == 0) || (arg_14h = arg_14h + var_4ch,  0 < arg_14h)) {\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar6 = CONCAT11(var_16h._1_1_, var_16h) - 0x3ffe;\n        var_16h._0_1_ = 0;\n        var_16h._1_1_ = 0;\n        var_44h = 8;\n        do {\n            uVar19 = var_20h._2_2_;\n            var_1ah._2_2_ = var_1ah >> 0x10;\n            iVar3 = CONCAT22(var_20h._2_2_, var_20h) << 1;\n            var_20h._0_2_ = iVar3;\n            var_20h._2_2_ = iVar3 >> 0x10;\n            iVar3 = CONCAT22(var_1ah, var_1ch) * 2;\n            var_1ch = iVar3 | uVar19 >> 0xf;\n            iVar4 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2;\n            var_1ah._2_2_ = iVar4 | var_1ah >> 0xf;\n            var_44h = var_44h + -1;\n            var_1ah._0_2_ = iVar3 >> 0x10;\n            var_16h._0_1_ = iVar4 >> 0x10;\n            var_16h._1_1_ = iVar4 >> 0x18;\n        } while (var_44h != 0);\n        if ((iVar6 < 0) && (uVar13 = -iVar6 & 0xff,  uVar13 != 0)) {\n            do {\n                iVar3 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n                uVar11 = CONCAT22(var_1ah, var_1ch);\n                iVar6 = CONCAT22(var_1ah, var_1ch);\n                uVar15 = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) >> 1;\n                var_1ah._2_2_ = uVar15;\n                var_16h._0_1_ = uVar15 >> 0x10;\n                var_16h._1_1_ = var_16h._1_1_ >> 1;\n                var_1ah._0_2_ = var_1ah >> 1 | (iVar3 << 0x1f) >> 0x10;\n                uVar15 = CONCAT22(var_20h._2_2_, var_20h);\n                var_20h._2_2_ = var_20h._2_2_ >> 1 | (iVar6 << 0x1f) >> 0x10;\n                uVar13 = uVar13 - 1;\n                var_1ch = uVar11 >> 1;\n                var_20h._0_2_ = uVar15 >> 1;\n            } while (0 < uVar13);\n        }\n        piVar1 = arg_1ch + 2;\n        piVar16 = piVar1;\n        uVar19 = var_20h;\n        uVar9 = var_20h._2_2_;\n        uVar12 = var_1ch;\n        uVar18 = var_1ah;\n        for (arg_14h = arg_14h + 1; var_1ah = CONCAT22(var_1ah._2_2_, uVar18),  0 < arg_14h; arg_14h = arg_14h + -1) {\n            var_34h = CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_));\n            uVar15 = CONCAT22(uVar9, uVar19) * 4;\n            uVar13 = CONCAT22(uVar18, uVar12) * 2;\n            uVar11 = (CONCAT13(var_16h._1_1_, CONCAT12(var_16h, var_1ah._2_2_)) * 2 | uVar18 >> 0xf) * 2 |\n                     uVar13 >> 0x1f;\n            uVar20 = (uVar13 | uVar9 >> 0xf) * 2 | (CONCAT22(uVar9, uVar19) << 1) >> 0x1f;\n            uVar13 = CONCAT22(uVar9, uVar19) + uVar15;\n            if ((uVar13 < uVar15) || (uVar15 = uVar20,  uVar13 < CONCAT22(uVar9, uVar19))) {\n                uVar15 = uVar20 + 1;\n                bVar5 = false;\n                if ((uVar15 < uVar20) || (uVar15 == 0)) {\n                    bVar5 = true;\n                }\n                if (bVar5) {\n                    uVar11 = uVar11 + 1;\n                }\n            }\n            uVar20 = CONCAT22(uVar18, uVar12) + uVar15;\n            if ((uVar20 < uVar15) || (uVar20 < CONCAT22(uVar18, uVar12))) {\n                uVar11 = uVar11 + 1;\n            }\n            iVar6 = (uVar11 + var_34h) * 2;\n            var_1ah._2_2_ = iVar6 | uVar20 >> 0x1f;\n            var_20h._0_2_ = uVar13 * 2;\n            var_20h._2_2_ = uVar13 * 2 >> 0x10;\n            var_16h._0_1_ = iVar6 >> 0x10;\n            var_1ch = uVar20 * 2 | uVar13 >> 0x1f;\n            *piVar16 = (iVar6 >> 0x18) + '0';\n            piVar16 = piVar16 + 1;\n            var_1ah._0_2_ = uVar20 * 2 >> 0x10;\n            var_16h._1_1_ = 0;\n            var_3ch._0_2_ = uVar19;\n            var_3ch._2_2_ = uVar9;\n            var_38h._0_2_ = uVar12;\n            var_38h._2_2_ = uVar18;\n            uVar19 = var_20h;\n            uVar9 = var_20h._2_2_;\n            uVar12 = var_1ch;\n            uVar18 = var_1ah;\n        }\n        piVar17 = piVar16 + -1;\n        var_20h._0_2_ = uVar19;\n        var_20h._2_2_ = uVar9;\n        var_1ch = uVar12;\n        if (*(piVar16 + -1) < '5') {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '0')); piVar17 = piVar17 + -1) {\n            }\n            if (piVar17 < piVar1) {\n                *arg_1ch = 0;\n                *(arg_1ch + 3) = 1;\n                *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n                *piVar1 = 0x30;\n                *(arg_1ch + 5) = 0;\n                goto code_r0x004365cf;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar17 && (*piVar17 == '9')); piVar17 = piVar17 + -1) {\n                *piVar17 = 0x30;\n            }\n            if (piVar17 < piVar1) {\n                piVar17 = piVar17 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar17 = *piVar17 + '\\x01';\n        }\n        cVar14 = (piVar17 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar14;\n        *(cVar14 + 4 + arg_1ch) = 0;\n    }\n    else {\n        *arg_1ch = 0;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 1) = ((uVar8 != 0x8000) - 1U & 0xd) + 0x20;\n        *(arg_1ch + 2) = 0x30;\n        *(arg_1ch + 5) = 0;\n    }\ncode_r0x004365cf:\n    var_ch = noname_1;\n    fcn.00421070(1);\n    return;\n}\n",
        "token_count": 8979
    },
    "00438d5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00438d5a(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x12) != '\\0') {\n        fcn.00438b88();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00437d9a();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 180
    },
    "0040b2fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b2fd(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint hWnd;\n    uint lpMsg;\n    uint var_ch;\n    int32_t lParam;\n    uint var_4h;\n    \n    bVar2 = true;\n    lParam = 0;\n    if ((arg_8h & 4) != 0) {\n        uVar4 = fcn.0040e5a5();\n        bVar1 = true;\n        if ((uVar4 & 0x10000000) == 0) goto code_r0x0040b32d;\n    }\n    bVar1 = false;\ncode_r0x0040b32d:\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n    in_ECX[0xf] = in_ECX[0xf] | 0x18;\n    arg_8h_00 = fcn.004054ae();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0040b3b8:\n    while ((!bVar2 || (iVar6 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h_00, 0, 0, 0, 0),  iVar6 != 0))) {\n        do {\n            iVar6 = fcn.00405929();\n            if (iVar6 == 0) {\n                fcn.00404167(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(arg_8h_00 + 4) == 0x118 || (*(arg_8h_00 + 4) == 0x104)))) {\n                fcn.0040e67b(1);\n                (*pcVar3)(in_ECX[8]);\n                bVar1 = false;\n            }\n            iVar6 = (**(*in_ECX + 0x88))();\n            if (iVar6 == 0) {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffffe7;\n                return in_ECX[0x11];\n            }\n            iVar6 = fcn.0040582c(arg_8h_00);\n            if (iVar6 != 0) {\n                bVar2 = true;\n                lParam = 0;\n            }\n            iVar6 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h_00, 0, 0, 0, 0);\n        } while (iVar6 != 0);\n    }\n    if (bVar1) {\n        fcn.0040e67b(1);\n        (*pcVar3)(in_ECX[8]);\n        bVar1 = false;\n    }\n    if ((((arg_8h & 1) == 0) && (iVar5 != 0)) && (lParam == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, in_ECX[8]);\n    }\n    if ((arg_8h & 2) == 0) goto code_r0x0040b39c;\n    goto code_r0x0040b3b5;\ncode_r0x0040b39c:\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x36a, 0, lParam);\n    lParam = lParam + 1;\n    if (iVar6 == 0) {\ncode_r0x0040b3b5:\n        bVar2 = false;\n    }\n    goto code_r0x0040b3b8;\n}\n",
        "token_count": 851
    },
    "0040e198": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040e198(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00408ff8();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.004222e0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00408ff8();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x450af8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd90s\";\n            iVar1 = fcn.0040df9c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl90s\";\n            iVar1 = fcn.0040df9c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar90s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0040df9c(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0040e154(&var_34h, \"AfxMDIFrame90s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0040e154(&var_34h, \"AfxFrameOrView90s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80000) != 0) {\n            var_8h = 0x1000;\n            uVar2 = fcn.0040bcd4(&var_ch, 0x80000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1865
    },
    "0040e7b5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040e7b5(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040e753();\n    return uVar1 >> 0x11 & 1;\n}\n",
        "token_count": 59
    },
    "004103b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004103b8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar1 = param_1 + 0x1c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar1);\n    iVar7 = *(param_1 + 4);\n    iVar8 = *(param_1 + 8);\n    if ((iVar7 <= iVar8) || ((*(*(param_1 + 0x10) + iVar8 * 8) & 1) != 0)) {\n        iVar8 = 1;\n        if (1 < iVar7) {\n            puVar3 = *(param_1 + 0x10);\n            do {\n                puVar3 = puVar3 + 8;\n                if ((*puVar3 & 1) == 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar7);\n            if (iVar8 < iVar7) goto code_r0x004104a6;\n        }\n        iVar7 = iVar7 + 0x20;\n        if (*(param_1 + 0x10) == 0) {\n            uVar4 = fcn.0040fcec(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        }\n        else {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(*(param_1 + 0x10));\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar4);\n            uVar9 = 0x2002;\n            uVar6 = fcn.0040fcec(iVar7, 8);\n            iVar5 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar4, uVar6, uVar9);\n        }\n        if (iVar5 == 0) {\n            param_1 = *(param_1 + 0x10);\n            if (param_1 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1);\n                (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar4);\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n            iVar5 = fcn.004085db();\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n        fcn.004222e0(iVar5 + *(param_1 + 4) * 8, 0, (iVar7 - *(param_1 + 4)) * 8);\n        *(param_1 + 4) = iVar7;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x004104a6:\n    if (*(param_1 + 0xc) <= iVar8) {\n        *(param_1 + 0xc) = iVar8 + 1;\n    }\n    puVar2 = *(param_1 + 0x10) + iVar8 * 8;\n    *puVar2 = *puVar2 | 1;\n    *(param_1 + 8) = iVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar1);\n    return iVar8;\n}\n",
        "token_count": 777
    },
    "004108d6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004108d6(uint32_t arg_8h)\n\n{\n    fcn.0041087d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00412465": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412465(uint32_t arg_8h)\n\n{\n    fcn.00412456();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00413d09": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413d09(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    uint *puVar2;\n    \n    if ((*(in_ECX + 0x70) & 0x1000) != 0) {\n        if ((*(in_ECX + 0x6c) & 1) != (arg_8h != NULL)) {\n            arg_8h = NULL;\n            *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n            puVar2 = *(in_ECX + 0x50);\n            if (puVar2 == NULL) {\n                fcn.00408613();\n                puVar2 = extraout_ECX;\n            }\n            iVar1 = (***puVar2)(puVar2, 0x442d14, &arg_8h);\n            if (-1 < iVar1) {\n                (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00415076": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00415076(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00402e00(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[8] = (arg_10h & 0xffff) >> 0xe & 1;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[5] = arg_30h;\n    arg_8h[1] = arg_24h;\n    arg_8h[9] = arg_20h;\n    arg_8h[10] = arg_14h;\n    *arg_8h = arg_ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[7] = 1;\n    if (arg_28h != iVar1) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "004167ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004167ac(uint32_t arg_8h)\n\n{\n    fcn.004138c6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00418f88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418f88(uint32_t arg_8h)\n\n{\n    fcn.00418c46();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00419261": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419261(uint32_t arg_8h)\n\n{\n    fcn.00419074();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403e54();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00419d43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00419d43(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (arg_8h == 0) {\n        return arg_8h;\n    }\n    iVar1 = *(arg_8h + 0x50);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x70) & 0x1000) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.00419c97(arg_8h, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 184
    },
    "00419e3a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419e3a(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_ch == 0) {\ncode_r0x00419ed2:\n        uVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(*(arg_8h + 0x20));\n        iVar1 = fcn.0040b774(uVar2);\n        if (iVar1 == 0) {\n            return arg_8h;\n        }\n    }\n    else {\n        iVar1 = fcn.0040e8c5(2);\n        while (iVar1 == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(arg_ch + 0x20));\n            uVar2 = fcn.0040b774(uVar2);\n            arg_ch = fcn.00419de1(arg_8h, uVar2);\n            if ((arg_ch == 0) || (arg_ch == arg_8h)) goto code_r0x00419ed2;\n            iVar1 = fcn.0040e8c5(2);\n        }\n        iVar1 = fcn.0040e8c5(2);\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(iVar1 + 0x20), 0xffffffec);\n    if ((uVar3 & 0x10000) != 0) {\n        if ((((arg_10h & 1) == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20)),  iVar4 != 0)) &&\n           (((arg_10h & 2) == 0 || (iVar4 = fcn.0040e6a2(),  iVar4 != 0)))) {\n            arg_8h = iVar1;\n            iVar1 = 0;\n        }\n        iVar1 = fcn.00419e3a(arg_8h, iVar1, arg_10h);\n    }\n    return iVar1;\n}\n",
        "token_count": 486
    },
    "0041ad93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad93(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041aa4b(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 2;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0041ac2c();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 195
    },
    "0041add2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041add2(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041aa4b(2, *(in_ECX + 0x14));\n    }\n    uVar1 = *(in_ECX + 0x28) + 4;\n    if (*(in_ECX + 0x2c) <= uVar1 && uVar1 != *(in_ECX + 0x2c)) {\n        fcn.0041ac2c();\n    }\n    **(in_ECX + 0x28) = arg_8h;\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 195
    },
    "0041ae10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ae10(ushort *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041aa4b(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 2U) {\n        fcn.0041aca4((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 2);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 2;\n    return;\n}\n",
        "token_count": 190
    },
    "0041ae58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ae58(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041aa4b(4, *(in_ECX + 0x14));\n    }\n    if (*(in_ECX + 0x2c) < *(in_ECX + 0x28) + 4U) {\n        fcn.0041aca4((*(in_ECX + 0x28) - *(in_ECX + 0x2c)) + 4);\n    }\n    *arg_8h = **(in_ECX + 0x28);\n    *(in_ECX + 0x28) = *(in_ECX + 0x28) + 4;\n    return;\n}\n",
        "token_count": 189
    },
    "0041b11f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041b11f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00403260();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.00408613();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.00403960(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00402e20();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.00403e25(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    extraout_ECX[10] = iVar4;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 865
    },
    "0041d525": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d525(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00408613();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.0040762c(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.0041af78(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 331
    },
    "0041fad7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fad7(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00408613();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.0040762c(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.0041af78(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "0041fd72": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fd72(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint in_stack_ffffffec;\n    \n    if (arg_8h != 0) goto code_r0x0041fd8d;\n    in_stack_ffffffec = *(in_ECX + 0x14);\n    arg_8h_00 = 6;\n    while( true ) {\n        fcn.0041aa4b(arg_8h_00, in_stack_ffffffec);\ncode_r0x0041fd8d:\n        if ((~*(in_ECX + 0x18) & 1) != 0) break;\n        arg_8h_00 = 1;\n    }\n    if (*(arg_8h + 8) == 0xffff) {\n        fcn.004085f7();\n    }\n    fcn.0041fc33(0);\n    puVar2 = fcn.0041bc49(arg_8h);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.0041ad93(0xffff);\n        fcn.0041b0a4(in_ECX);\n        fcn.0041f89b();\n        puVar3 = fcn.0041bc49(arg_8h);\n        *puVar3 = *(in_ECX + 0x34);\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.0041ad93(uVar1 | 0x8000);\n    }\n    else {\n        fcn.0041ad93(0x7fff);\n        fcn.0041add2(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "00420057": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420057(int32_t *arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    uint32_t *puVar1;\n    uint arg_8h_01;\n    uint *puVar2;\n    int32_t in_ECX;\n    \n    if ((~*(in_ECX + 0x18) & 1) == 0) {\n        fcn.0041aa4b(2, *(in_ECX + 0x14));\n    }\n    fcn.0041fc33(0);\n    if (arg_8h == NULL) {\n        fcn.0041ad93(0);\n    }\n    else {\n        puVar1 = fcn.0041bc49(arg_8h);\n        arg_8h_00 = *puVar1;\n        if (arg_8h_00 == 0) {\n            arg_8h_01 = (***arg_8h)();\n            fcn.0041fd72(arg_8h_01);\n            fcn.0041f89b();\n            puVar2 = fcn.0041bc49(arg_8h);\n            *puVar2 = *(in_ECX + 0x34);\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + 1;\n            (**(*arg_8h + 8))();\n        }\n        else if (arg_8h_00 < 0x7fff) {\n            fcn.0041ad93(arg_8h_00);\n        }\n        else {\n            fcn.0041ad93(0x7fff);\n            fcn.0041add2(arg_8h_00);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0042a9b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042a9b9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x448da8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042229f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042228c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x45184c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x451860;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004304a5(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042228c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042229f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0042a286(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0042aa8b(0x448da8);\n                goto code_r0x0042aa85;\n            }\n        }\n        puVar2 = fcn.0042229f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042228c();\n        *puVar2 = 9;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n    }\ncode_r0x0042aa85:\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 635
    },
    "004346f6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004346f6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x4490a8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0042229f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042228c();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x45184c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x451860;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004304a5(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0042228c();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0042229f();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00434681(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004347c8(0x4490a8);\n                goto code_r0x004347c2;\n            }\n        }\n        puVar2 = fcn.0042229f();\n        *puVar2 = 0;\n        puVar2 = fcn.0042228c();\n        *puVar2 = 9;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n    }\ncode_r0x004347c2:\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 633
    },
    "00401380": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401380(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43a670;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.00401110(var_8h + 1, 0);\n    if (var_ch_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.004206e0(arg_8h, var_8h + 1, arg_10h, var_ch_2);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.00403e54(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch_2;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 580
    },
    "00405c46": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c46(int32_t arg_8h)\n\n{\n    int32_t *in_ECX;\n    \n    if (arg_8h == -1) {\n        arg_8h = fcn.00405c31(*in_ECX, *(*in_ECX + -8));\n    }\n    fcn.00403060(arg_8h);\n    return;\n}\n",
        "token_count": 86
    },
    "0040656e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040656e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    fcn.00403260();\n    *(unaff_EBP + -4) = 0;\n    fcn.00404b25(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.00406520(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00402e20();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 254
    },
    "00407eb7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407eb7(uint *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (arg_ch * arg_10h >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch * arg_10h;\n    return 0;\n}\n",
        "token_count": 85
    },
    "00407fa4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407fa4(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.00423d33(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.00407f2b(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 113
    },
    "00408a59": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00408a59(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.00403e54(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.00408729(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00410844();\n    fcn.00402e20();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 454
    },
    "0040e029": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e029(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint16_t *puVar4;\n    uint *puVar5;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar4 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            if (*puVar4 == 0) break;\n            var_ch = *puVar4;\n            uVar2 = puVar4[1];\n            var_10h = *(puVar4 + 2);\n            puVar4 = puVar4 + 4;\n            if (uVar2 == 0x1234) {\ncode_r0x0040e0a3:\n                puVar5 = &var_30h;\n                for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00404d66(puVar4);\n                var_2ch = arg_8h;\n                iVar3 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar3 == -1) {\n                    var_4h = 0;\n                }\n                fcn.00402e20();\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x0040e107:\n                iVar3 = (*pcVar1)(*(var_8h + 0x20), var_ch, uVar2, 0, puVar4);\n                if (iVar3 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x0040e0a3;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x0040e107;\n            }\n            puVar4 = puVar4 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0040c0fe(*(var_8h + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 714
    },
    "004104d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004104d0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar1;\n    if (iVar1 == -1) {\n        fcn.004085db();\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 + 7);\n    return param_1;\n}\n",
        "token_count": 169
    },
    "0041087d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041087d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.004106c7(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 230
    },
    "00411601": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411601(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    bool bVar2;\n    uint arg_ch;\n    \n    bVar2 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar2 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00403540();\n    if (bVar2) {\n        arg_ch = *(param_1 + 0xc);\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.0041ccbf(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041176f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0041176f(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_21ch;\n    uint var_4h;\n    \n    fcn.00421d6f(0x214);\n    *(unaff_EBP + -0x21c) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    pcVar1 = extraout_ECX[1];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if ((pcVar1 != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00411601();\n    }\n    fcn.00402e20();\n    fcn.00421dcb();\n    return;\n}\n",
        "token_count": 194
    },
    "0041214f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041214f(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (arg_10h == NULL) {\n        fcn.00408613();\n    }\n    puVar1 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        for (iVar2 = puVar1[1]; *(iVar2 + 0x18) != 0xffffffff; iVar2 = iVar2 + 0x28) {\n            if ((*(iVar2 + 4) == arg_10h[1]) && (*(iVar2 + 0x18) == (*arg_10h != 0))) {\n                if (*(iVar2 + 0x24) == 0xffffffff) {\n                    if (*(iVar2 + 0x20) == 0xffffffff) {\n                        return iVar2;\n                    }\n                    if (*(iVar2 + 0x20) == arg_ch) {\n                        return iVar2;\n                    }\n                }\n                else if ((*(iVar2 + 0x20) < arg_ch || *(iVar2 + 0x20) == arg_ch) && (arg_ch <= *(iVar2 + 0x24))) {\n                    return iVar2;\n                }\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 329
    },
    "00414b0a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414b0a(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    arg_8h[4] = arg_ch[4];\n    iVar1 = arg_ch[4];\n    if (iVar1 == 0) {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n        arg_8h[2] = arg_ch[2];\n        arg_8h[3] = arg_ch[3];\n    }\n    else {\n        if (iVar1 == 1) {\n            *arg_8h = *arg_ch;\n            arg_8h[1] = arg_ch[1];\n            arg_8h[2] = arg_ch[2];\n            arg_8h[3] = arg_ch[3];\n            arg_8h[5] = arg_ch[5];\n            return 1;\n        }\n        if (iVar1 != 2) {\n            return 1;\n        }\n    }\n    iVar1 = fcn.00423d33(arg_ch[5]);\n    arg_8h_00 = fcn.00407edb(2, iVar1 + 1);\n    arg_8h[5] = arg_8h_00;\n    if (arg_8h_00 != 0) {\n        fcn.00423d4d(arg_8h_00, iVar1 + 1, arg_ch[5]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 347
    },
    "0041bb38": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bb38(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *arg_8h;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(in_ECX + 8) != 0) {\n                ppiVar1 = *(in_ECX + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x0041bb6c;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(in_ECX + 8));\n                fcn.00408613();\n                in_ECX = extraout_ECX;\n            }\n        }\ncode_r0x0041bb6c:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(in_ECX + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(in_ECX + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *arg_8h = piVar5;\n        *arg_ch = piVar3[1];\n        *arg_10h = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "0041cdbe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041cdbe(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    if (0x76b < arg_8h) goto code_r0x0041cddc;\n    do {\n        do {\n            fcn.00402e00();\ncode_r0x0041cddc:\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        iVar1 = fcn.004254cf(&var_24h);\n        *in_ECX = iVar1;\n        in_ECX[1] = iVar1 >> 0x20;\n    } while (iVar1 == -1);\n    return;\n}\n",
        "token_count": 395
    },
    "0041eed3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eed3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_8h;\n    iVar3 = 0;\n    if (-1 < arg_8h) goto code_r0x0041eeeb;\n    do {\n        fcn.00408613();\ncode_r0x0041eeeb:\n        if (iVar3 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h_00 == iVar3) {\n            fcn.00403e54(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar3;\n            *(in_ECX + 8) = iVar3;\n            goto code_r0x0041efdb;\n        }\n        if (*(in_ECX + 4) == iVar3) {\n            uVar1 = fcn.00403e25(arg_8h_00);\n            *(in_ECX + 4) = uVar1;\n            fcn.004222e0(uVar1, iVar3, arg_8h_00);\n            *(in_ECX + 0xc) = arg_8h_00;\ncode_r0x0041ef52:\n            *(in_ECX + 8) = arg_8h_00;\n            return;\n        }\n        iVar3 = *(in_ECX + 0xc);\n        if (arg_8h_00 <= iVar3) {\n            iVar3 = *(in_ECX + 8);\n            if (iVar3 < arg_8h_00) {\n                fcn.004222e0(iVar3 + *(in_ECX + 4), 0, arg_8h_00 - iVar3);\n            }\n            goto code_r0x0041ef52;\n        }\n        iVar2 = *(in_ECX + 0x10);\n        if (iVar2 == 0) {\n            iVar2 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar2 < 4) {\ncode_r0x0041ef84:\n                iVar2 = 4;\n            }\n            else if (iVar2 < 0x401) {\n                if (iVar2 < 4) goto code_r0x0041ef84;\n            }\n            else {\n                iVar2 = 0x400;\n            }\n        }\n        arg_8h = iVar2 + iVar3;\n        if (iVar2 + iVar3 <= arg_8h_00) {\n            arg_8h = arg_8h_00;\n        }\n    } while (arg_8h < iVar3);\n    iVar3 = fcn.00403e25(arg_8h);\n    fcn.00406fe1(iVar3, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.004222e0(*(in_ECX + 8) + iVar3, 0, arg_8h_00 - *(in_ECX + 8));\n    fcn.00403e54(*(in_ECX + 4));\n    *(in_ECX + 8) = arg_8h_00;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041efdb:\n    *(in_ECX + 4) = iVar3;\n    return;\n}\n",
        "token_count": 799
    },
    "0043849d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043849d(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    \n    if (arg_8h == -1) {\n        fcn.004377ea();\n    }\n    cVar1 = fcn.004014f0(arg_8h, 0);\n    if (cVar1 != '\\0') {\n        fcn.00437e8e(0, arg_8h, arg_ch);\n        fcn.00401250(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00438bd3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00438bd3(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0x14);\n    fcn.0043915e(0);\n    iVar2 = *0x45163c;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00437912();\n    iVar1 = fcn.00437a06(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.004387d4(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00420652(\"bad cast\");\n            fcn.00420b25(unaff_EBP + -0x20, 0x449308);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x45163c = iVar2;\n        fcn.00437949();\n        fcn.004392ff(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00439186();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 403
    },
    "00438df2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00438df2(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0x14);\n    fcn.0043915e(0);\n    iVar2 = *0x451640;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar2;\n    arg_8h_00 = fcn.00437912();\n    iVar1 = fcn.00437a06(arg_8h_00);\n    if ((iVar1 == 0) && (iVar2 == 0)) {\n        iVar2 = fcn.00438c70(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar2 == -1) {\n            fcn.00420652(\"bad cast\");\n            fcn.00420b25(unaff_EBP + -0x20, 0x449308);\n        }\n        iVar2 = *(unaff_EBP + -0x10);\n        *0x451640 = iVar2;\n        fcn.00437949();\n        fcn.004392ff(iVar2);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00439186();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 401
    },
    "00439b7b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00439b7b(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x4494d0, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.0042228c();\n        *puVar2 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        goto code_r0x00439c6e;\n    }\n    fcn.0042a1a8(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.0042a06e(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x44dcb8;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x451860);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x44dcb8;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x451860);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00439c41;\n        }\n        puVar2 = fcn.0042228c();\n        *puVar2 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00439c41:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.00433b32(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00439c77();\ncode_r0x00439c6e:\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 795
    },
    "00439c7f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00439c7f(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x4494f0, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.0042228c();\n        *puVar3 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        goto code_r0x00439d7a;\n    }\n    fcn.0042a1a8(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.0042a06e(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x44dcb8;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x451860);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x44dcb8;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x451860);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x00439d45;\n        }\n        puVar3 = fcn.0042228c();\n        *puVar3 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00439d45:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00428593(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00439d83();\ncode_r0x00439d7a:\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 839
    },
    "0040ed72": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ed72(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = *(in_ECX + 0x4c);\n    if (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x44);\n        while (iVar1 != 0) {\n            var_4h = iVar1;\n            if (iVar1 == 0) {\n                fcn.00408613();\n                return 0;\n            }\n            iVar2 = fcn.0040e8ad(iVar1);\n            if (iVar2 == arg_8h) {\n                return iVar1;\n            }\n            fcn.0040e851(&var_4h);\n            iVar1 = var_4h;\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 218
    },
    "00411e52": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411e52(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    in_ECX[1] = arg_ch;\n    if (arg_ch <= arg_ch + 0x40) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_ch + 0x40);\n        *in_ECX = iVar1;\n        if (iVar1 != 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.00406fe1(arg_8h_00, in_ECX[1], arg_8h, in_ECX[1]);\n            iVar1 = fcn.00411cc7(arg_8h_00);\n            in_ECX[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "004133f9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004133f9(uint arg_8h)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405141();\n    pcVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    extraout_ECX[8] = pcVar1;\n    fcn.0041bbbb(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00412cda(10);\n    extraout_ECX[0x17] = 0xffffffff;\n    extraout_ECX[0x18] = 0xffffffff;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = vtable.COleControlContainer::XOleIPFrame.0;\n    extraout_ECX[0x1f] = vtable.COleControlContainer::XOleContainer.0;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 367
    },
    "00419a91": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00419a91(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **ppcVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x6c) == extraout_ECX)) {\n        *(pcVar1 + 0x6c) = 0;\n    }\n    if (extraout_ECX[0x24] != NULL) {\n        fcn.00419261(1);\n    }\n    fcn.004141af();\n    fcn.00413ddc(extraout_ECX + 0x10, extraout_ECX[0x18]);\n    fcn.00413ddc(0x442d34, extraout_ECX[0x19]);\n    fcn.00413ddc(0x442bd4, extraout_ECX[0x23]);\n    piVar2 = extraout_ECX[0x17];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        extraout_ECX[0x17] = NULL;\n    }\n    piVar2 = extraout_ECX[0x15];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0x14))(piVar2);\n        (**(*extraout_ECX[0x15] + 8))(extraout_ECX[0x15]);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar2 = extraout_ECX[0x16];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n        extraout_ECX[0x16] = NULL;\n    }\n    piVar2 = extraout_ECX[0x14];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, 0);\n        (**(*extraout_ECX[0x14] + 0x18))(extraout_ECX[0x14], 1);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2b);\n    pcVar1 = extraout_ECX[0x25];\n    if (pcVar1 != NULL) {\n        extraout_ECX[0x25] = *(pcVar1 + 0x18);\n        iVar5 = *(pcVar1 + 0xc);\n        if ((iVar5 != 0) && (*(iVar5 + 0x90) != 0)) {\n            (**(**(iVar5 + 0x90) + 4))(pcVar1, 0);\n        }\n        fcn.00403e54(pcVar1);\n    }\n    if (((extraout_ECX[0x27] != NULL) && (extraout_ECX[0x26] != NULL)) &&\n       (ppiVar4 = extraout_ECX[0x26] + 0x90,  *ppiVar4 != NULL)) {\n        (**(**ppiVar4 + 8))(extraout_ECX, 0);\n    }\n    if ((extraout_ECX[8] != NULL) && (extraout_ECX[0x1d] != NULL)) {\n        piVar2 = extraout_ECX[8] + 0x74;\n        *piVar2 = *piVar2 + -1;\n    }\n    *(unaff_EBP + -0x14) = 0;\n    ppcVar3 = extraout_ECX[0x36];\n    *(unaff_EBP + -4) = 3;\n    iVar5 = (**ppcVar3)(extraout_ECX + 0x36, 0x43f8d4, unaff_EBP + -0x14);\n    if (-1 < iVar5) {\n        fcn.0041b745(*(unaff_EBP + -0x14));\n    }\n    *(unaff_EBP + -0x10) = 0;\n    ppcVar3 = extraout_ECX[0x37];\n    *(unaff_EBP + -4) = 4;\n    iVar5 = (**ppcVar3)(extraout_ECX + 0x37, 0x43f8d4, unaff_EBP + -0x10);\n    if (-1 < iVar5) {\n        fcn.0041b745(*(unaff_EBP + -0x10));\n    }\n    piVar2 = *(unaff_EBP + -0x10);\n    *(unaff_EBP + -4) = 3;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n    }\n    piVar2 = *(unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 2;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0041e335();\n    fcn.00402e20();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405169();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1386
    },
    "0041f32e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041f32e(void)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408ff8();\n    fcn.00410b71(0xb);\n    while (arg_8h = *(iVar1 + 0x40),  arg_8h != NULL) {\n        fcn.00410347(arg_8h);\n        if (arg_8h != NULL) {\n            (***arg_8h)(1);\n        }\n    }\n    fcn.00410be3(0xb);\n    return;\n}\n",
        "token_count": 132
    },
    "0041f44c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f44c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(param_1 + 0x40, 0);\n    if (iVar1 == 0) {\n        *(param_1 + 0x20) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040db62": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040db62(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.00404f44(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0040dbf8;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.00404f44(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0040dbf8:\n        uVar1 = fcn.0040d44e(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if (arg_8h - 0x132 < 7) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0040d44e(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "0040531b": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.0040531b(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    int32_t var_90h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    nWidth = uVar2;\n    nHeight = uVar2 >> 0x10;\n    if ((nWidth < 5) || (iVar4 = nWidth,  nHeight < 6)) {\n        fcn.00408613();\n        iVar4 = extraout_ECX;\n    }\n    if (0x20 < iVar4) {\n        iVar4 = 0x20;\n        nWidth = 0x20;\n    }\n    iVar7 = iVar4 + 0xf >> 4;\n    iVar4 = ((iVar4 + -4) / 2 + iVar7 * 0x10) - iVar4;\n    if (0xc < iVar4) {\n        iVar4 = 0xc;\n    }\n    if (0x20 < nHeight) {\n        nHeight = 0x20;\n    }\n    fcn.004222e0(&lpvBits, 0xff, 0x80);\n    puVar3 = &lpvBits + (nHeight + -6 >> 1) * iVar7 * 2;\n    puVar5 = 0x43df64;\n    var_90h = 5;\n    do {\n        uVar1 = *puVar5;\n        puVar5 = puVar5 + 1;\n        uVar6 = ~(uVar1 << (iVar4 & 0x1f));\n        *puVar3 = uVar6 >> 8;\n        puVar3[1] = uVar6;\n        puVar3 = puVar3 + iVar7 * 2;\n        var_90h = var_90h + -1;\n    } while (var_90h != 0);\n    uVar2 = 1;\n    *0x450b08 = (*_sym.imp.GDI32.dll_CreateBitmap)(nWidth, nHeight, 1, 1, &lpvBits);\n    if (*0x450b08 == 0) {\n        *0x450b08 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    fcn.00421070(uVar2);\n    return;\n}\n",
        "token_count": 611
    },
    "004054ae": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.004054ae(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408a40();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 44
    },
    "00404710": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_13h\n\nvoid __cdecl fcn.00404710(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t unaff_EBP;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint lParam;\n    uint var_11ch;\n    uint lpFilename;\n    uint var_13h;\n    uint var_4h;\n    \n    fcn.00421d39(0x15c);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    *(unaff_EBP + -0x124) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x130) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x120) = 0;\n    *(unaff_EBP + -0x11c) = 0;\n    uVar4 = (*pcVar1)(0x43d66c);\n    pcVar7 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *(unaff_EBP + -0x134) = uVar4;\n    pcVar5 = (*pcVar7)(uVar4, \"GetUserDefaultUILanguage\");\n    if (pcVar5 == NULL) {\n        iVar8 = (*pcVar1)(\"ntdll.dll\");\n        if (iVar8 != 0) {\n            *(unaff_EBP + -0x120) = 0;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar8, 0x10, 1, fcn.00403e6a, unaff_EBP + -0x120);\n            pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n            if (*(unaff_EBP + -0x120) != 0) {\n                uVar6 = *(unaff_EBP + -0x120) & 0x3ff;\n                uVar4 = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)((*(unaff_EBP + -0x120) >> 10) << 10 | uVar6);\n                *(unaff_EBP + -0x148) = uVar4;\n                uVar4 = (*pcVar1)(uVar6);\n                *(unaff_EBP + -0x144) = uVar4;\n                *(unaff_EBP + -0x11c) = 2;\n            }\n        }\n    }\n    else {\n        uVar6 = (*pcVar5)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        *(unaff_EBP + -0x120) = uVar6 & 0xffff;\n        *(unaff_EBP + -0x11c) = uVar6 & 0x3ff;\n        uVar4 = (*pcVar1)(uVar6 & 0xffff);\n        *(unaff_EBP + -0x148) = uVar4;\n        uVar4 = (*pcVar1)(*(unaff_EBP + -0x11c));\n        *(unaff_EBP + -0x144) = uVar4;\n        *(unaff_EBP + -0x11c) = 2;\n        pcVar7 = (*pcVar7)(*(unaff_EBP + -0x134), \"GetSystemDefaultUILanguage\");\n        if (pcVar7 != NULL) {\n            uVar3 = (*pcVar7)();\n            *(unaff_EBP + -0x120) = uVar3;\n            uVar4 = (*pcVar1)(uVar3);\n            *(unaff_EBP + -0x140) = uVar4;\n            uVar4 = (*pcVar1)(uVar3 & 0x3ff);\n            *(unaff_EBP + -0x13c) = uVar4;\n            *(unaff_EBP + -0x11c) = 4;\n        }\n    }\n    iVar8 = *(unaff_EBP + -0x11c);\n    *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 1;\n    *(unaff_EBP + -0x148 + iVar8 * 4) = 0x800;\n    *(unaff_EBP + -0x13) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0x400000, unaff_EBP + -0x118, 0x105);\n    if (iVar8 != 0) {\n        fcn.004222e0(unaff_EBP + -0x168, 0, 0x20);\n        *(unaff_EBP + -0x168) = 0x20;\n        *(unaff_EBP + -0x160) = unaff_EBP + -0x118;\n        *(unaff_EBP + -0x154) = 1000;\n        *(unaff_EBP + -0x14c) = 0x400000;\n        *(unaff_EBP + -0x164) = 0x88;\n        fcn.00403e84(0xffffffff);\n        *(unaff_EBP + -4) = 0;\n        cVar2 = fcn.00403f3b(unaff_EBP + -0x168);\n        if (cVar2 != '\\0') {\n            fcn.00403f75();\n        }\n        iVar8 = 0;\n        if (0 < *(unaff_EBP + -0x11c)) {\n            do {\n                iVar9 = fcn.004044e0(*(unaff_EBP + -0x148 + iVar8 * 4));\n                if (iVar9 != 0) break;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < *(unaff_EBP + -0x11c));\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004045b2();\n    }\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 1489
    },
    "0040b690": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0040b690(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.004107ba(0x4056d9);\n    if (iVar1 == 0) {\n        fcn.00408613();\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 160
    },
    "0041a0fe": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a0fe(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 124
    },
    "0042deb0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042deb0(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "0040701c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040701c(uint32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *arg_8h;\n    iVar2 = fcn.00407002();\n    if (iVar2 == 0) {\n        piVar3 = arg_8h + 0x12;\n    }\n    else {\n        uVar4 = arg_8h[3];\n        piVar3 = arg_8h + 0x1a;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar3 + (iVar2 != 0) * 2 + 1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffc;\n}\n",
        "token_count": 391
    },
    "00416d72": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416d72(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    \n    puVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        fcn.00402e00(0x80004005);\n    }\n    uVar3 = fcn.00413904(&arg_8h);\n    if (uVar3 == '\\0') {\n        uVar3 = uVar3 & 0xffffff00;\n    }\n    else {\n        iVar4 = arg_8h * 0x30 + *(in_ECX + 0x14);\n        uVar1 = *((*(iVar4 + 0x10) + 3 + *(iVar4 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8));\n        *puVar2 = uVar1;\n        uVar3 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 250
    },
    "004100e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004100e8(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.00408a40();\n    if ((iVar2 != 0) && (*(iVar2 + 0xc) != 0)) {\n        uVar3 = fcn.0042465e(*(iVar2 + 0xc));\n        if (arg_8h + 4U < uVar3) {\n            fcn.0042451e(*(iVar2 + 0xc), (uVar3 - arg_8h) + -4);\n        }\n        else {\n            fcn.00421c42(*(iVar2 + 0xc));\n            *(iVar2 + 0xc) = 0;\n        }\n        return 1;\n    }\n    fcn.004085db();\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 229
    },
    "00412aef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00412aef(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 2;\n    var_14h = *arg_ch;\n    uStack20 = arg_ch[1];\n    uStack16 = arg_ch[2];\n    uStack12 = arg_ch[3];\n    fcn.004129b4(arg_8h, arg_ch, &var_1ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                 arg_30h);\n    fcn.00421070(arg_10h);\n    return;\n}\n",
        "token_count": 325
    },
    "004178c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004178c3(int32_t arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    var_2ch = arg_10h;\n    if ((arg_8h != 0) && (arg_10h != NULL)) {\n        var_28h = NULL;\n        var_24h = fcn.00414d73(arg_8h, &var_28h);\n        uVar1 = arg_14h;\n        if (arg_14h != 0) {\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                *arg_10h = 0;\n                arg_10h = arg_10h + 1;\n            }\n        }\n        if (-1 < var_24h) {\n            var_1ch = arg_ch;\n            var_18h = arg_14h;\n            var_14h = *0x443308;\n            uStack20 = *0x44330c;\n            uStack16 = *0x443310;\n            var_30h = 0;\n            var_20h = NULL;\n            uStack12 = *0x443314;\n            var_24h = (**(*var_28h + 0xc))(var_28h, 1, &var_1ch, &var_30h, &var_20h);\n            if (-1 < var_24h) {\n                uVar1 = 0;\n                iVar3 = 0;\n                while( true ) {\n                    uVar2 = var_20h[1];\n                    if (arg_14h <= var_20h[1]) {\n                        uVar2 = arg_14h;\n                    }\n                    if (uVar2 <= uVar1) break;\n                    var_2ch[uVar1] = *(*var_20h + 0x2c + iVar3);\n                    uVar1 = uVar1 + 1;\n                    iVar3 = iVar3 + 0x34;\n                }\n                if (*var_20h != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*var_20h);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_20h);\n        }\n        if (var_28h != NULL) {\n            (**(*var_28h + 8))(var_28h);\n        }\n    }\n    fcn.00421070(unaff_EDI);\n    return;\n}\n",
        "token_count": 697
    },
    "004100b0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100b0(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(arg_8h);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00431158": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00431158(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x451860) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00430545(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00401050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nuint fcn.00401050(void)\n\n{\n    uint arg_10h;\n    int32_t iVar1;\n    uint arg_8h;\n    uint unaff_EDI;\n    uint uStack4;\n    \n    arg_8h = 0;\n    uStack4 = 0;\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleExA(0, 0x43d66c, &uStack4);\n    arg_10h = uStack4;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, uStack4, 0x3000, 0x40);\n        fcn.004207c0(arg_8h, unaff_EDI, arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 181
    },
    "00401190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00401190(uint param_1, int32_t param_2, uchar *param_3)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *0x44ec94 = fcn.00420bc0(0x1ae);\n    uVar3 = 0;\n    iVar2 = 0;\n    do {\n        *(*0x44ec94 + iVar2) = iVar2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1ae);\n    iVar2 = 0;\n    *param_3 = 0;\n    param_3[1] = 0;\n    do {\n        fcn.00401040();\n        uVar1 = (uVar3 & 0xff) + 1;\n        uVar3 = uVar1 % param_2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x1ae);\n    return uVar1 / param_2;\n}\n",
        "token_count": 231
    },
    "00401270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401270(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.004206e0(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 60
    },
    "004012f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004012f0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00437822();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.0042075d(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 370
    },
    "004015b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004015b0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00437822();\n    }\n    param_3 = *(param_2 + 0x14) - param_3;\n    if (param_3 < param_4) {\n        param_4 = param_3;\n    }\n    uVar2 = *(param_1 + 0x14);\n    if ((-uVar2 - 1 <= param_4) || (uVar2 + param_4 < uVar2)) {\n        fcn.004377ea();\n    }\n    if (param_4 != 0) {\n        uVar2 = *(param_1 + 0x14) + param_4;\n        if (uVar2 == 0xffffffff) {\n            fcn.004377ea();\n        }\n        if (*(param_1 + 0x18) < uVar2) {\n            fcn.00401380(uVar2, *(param_1 + 0x14));\n        }\n        else if (uVar2 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < *(param_1 + 0x18)) {\n                **(param_1 + 4) = 0;\n                return param_1;\n            }\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (uVar2 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar1 = param_1 + 4;\n            }\n            else {\n                iVar1 = *(param_1 + 4);\n            }\n            fcn.004206e0(*(param_1 + 0x14) + iVar1, *(param_1 + 0x18) - *(param_1 + 0x14), param_2 + unaff_retaddr, \n                         param_4);\n            *(param_1 + 0x14) = uVar2;\n            if (0xf < *(param_1 + 0x18)) {\n                *(*(param_1 + 4) + uVar2) = 0;\n                return param_1;\n            }\n            *(param_1 + 4 + uVar2) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 632
    },
    "00401710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401710(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00437822();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.004377ea();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.00401380(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.004206e0(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.004012f0(arg_14h + param_3, 0xffffffff);\n    fcn.004012f0(0, param_3);\n    return param_1;\n}\n",
        "token_count": 578
    },
    "004017f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004017f0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *arg_8h;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    if (param_2 != NULL) {\n        uVar1 = *(param_1 + 0x18);\n        puVar2 = param_1 + 4;\n        puVar4 = puVar2;\n        if (0xf < uVar1) {\n            puVar4 = *puVar2;\n        }\n        if (puVar4 <= param_2) {\n            puVar4 = puVar2;\n            if (0xf < uVar1) {\n                puVar4 = *puVar2;\n            }\n            if (param_2 < *(param_1 + 0x14) + puVar4) {\n                if (0xf < uVar1) {\n                    puVar2 = *puVar2;\n                }\n                iVar3 = fcn.00401710(param_1, param_2 - puVar2, param_3);\n                return iVar3;\n            }\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.004377ea();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00401380(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        piVar5 = param_1 + 4;\n        arg_8h = piVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            arg_8h = *piVar5;\n        }\n        fcn.004206e0(arg_8h, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            piVar5 = *piVar5;\n        }\n        *(piVar5 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 594
    },
    "00401930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00401930(code **param_1, uint param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a698;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x44d680 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &puStack12;\n    fcn.0042056e();\n    *param_1 = vtable.std::runtime_error.0;\n    param_1[8] = NULL;\n    param_1[9] = 0xf;\n    uStack4 = 0;\n    *(param_1 + 4) = 0;\n    fcn.00401710(param_2, 0, 0xffffffff);\n    *in_FS_OFFSET = puVar1;\n    return param_1;\n}\n",
        "token_count": 226
    },
    "00401a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401a20(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *unaff_EBX;\n    uint32_t unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint uVar3;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a6c8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d680 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00401710(param_2, 0, 0xffffffff, uVar1);\n    uVar3 = 0xffffffff;\n    uVar2 = fcn.004015b0(unaff_retaddr, 0, 0xffffffff);\n    *0x18 = 0xf;\n    *0x14 = 0;\n    *0x4 = 0;\n    fcn.00401710(uVar2, 0, 0xffffffff);\n    if (0xf < unaff_ESI) {\n        fcn.00403e54(uVar3);\n    }\n    *in_FS_OFFSET = unaff_EBX;\n    return 0;\n}\n",
        "token_count": 303
    },
    "00401c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00401c00(code **param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a738;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x44d680 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &puStack12;\n    fcn.004205d2(param_2);\n    *param_1 = vtable.std::runtime_error.0;\n    param_1[9] = 0xf;\n    param_1[8] = NULL;\n    uStack8 = 0;\n    *(param_1 + 4) = 0;\n    fcn.00401710(param_2 + 0xc, 0, 0xffffffff);\n    *in_FS_OFFSET = puVar1;\n    return param_1;\n}\n",
        "token_count": 237
    },
    "00401e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e00(int32_t **param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43a7b8;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x44d680 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    cVar1 = fcn.004378ce(uVar2);\n    if (cVar1 == '\\0') {\n        fcn.00401da0();\n    }\n    uStack4 = 0xffffffff;\n    if (*(*(**param_1 + 4) + 0x28 + *param_1) != 0) {\n        fcn.004376c0();\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 225
    },
    "00402e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00402e80(code **param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t **in_FS_OFFSET;\n    uint uVar4;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43a928;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x44d680 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uVar4 = 0x66;\n    fcn.0040668b(0x66, param_2);\n    piStack12 = NULL;\n    *param_1 = vtable.CCCircFileDemoDlg.0;\n    fcn.00408ff8(uVar4, param_2, uVar1);\n    iVar2 = fcn.00408ff8();\n    pcVar3 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar2 + 0xc), 0x80);\n    param_1[0x1d] = pcVar3;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 291
    },
    "00403260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403260(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040fc72();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00402e00(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "00403290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403290(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004031f0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "004032e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004032e0(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00402e00(0x80070057);\n    }\n    iVar2 = fcn.00421214(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.004031a0(iVar2);\n    }\n    fcn.00421384(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00402e00(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 252
    },
    "004035a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004035a0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00402e00(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 123
    },
    "004035d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004035d0(int32_t *param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.004031a0(param_5);\n    }\n    arg_8h = *param_1;\n    fcn.004206e0(arg_8h, param_3, param_1, param_3);\n    fcn.004206e0(arg_8h + param_3, param_4, param_3, param_4);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(param_5 + *param_1) = 0;\n        return;\n    }\n    fcn.00402e00(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 279
    },
    "00403650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403650(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00403540();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x00403678;\n    do {\n        fcn.00402e00();\n        param_2 = extraout_ECX;\ncode_r0x00403678:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.004031a0(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.004206e0(iVar1, *(iVar1 + -8), param_2, param_3);\n        }\n        else {\n            fcn.0042075d(iVar1, *(iVar1 + -8), iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 477
    },
    "004036e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004036e0(code **param_1)\n\n{\n    int32_t *piVar1;\n    code *arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43a98b;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x44d680 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CCirFile.0;\n    uStack4 = 0;\n    if (param_1[1] != NULL) {\n        fcn.004215e0(param_1[1]);\n        param_1[1] = NULL;\n    }\n    if (param_1[2] != NULL) {\n        fcn.00403e54(param_1[2], uVar3);\n        param_1[2] = NULL;\n    }\n    arg_8h = param_1[3];\n    if (arg_8h != NULL) {\n        fcn.00421506(arg_8h, 4, *(arg_8h + -4), 0x403180);\n        fcn.00403e54(arg_8h + -4);\n        param_1[3] = NULL;\n    }\n    ppiVar4 = param_1[4] + -0x10;\n    piVar1 = param_1[4] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar4 + 4))(ppiVar4);\n    }\n    *in_FS_OFFSET = unaff_EDI;\n    return;\n}\n",
        "token_count": 448
    },
    "004037a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004037a0(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43a9c9;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x44d680 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x004037fb;\n    }\n    piVar3 = fcn.0040fc72();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x004037fb:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00402e00(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.004035d0(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 470
    },
    "00403980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00403980(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43aa00;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x44d680 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    iVar6 = param_1[1];\n    uStack4 = 0;\n    piStack16 = param_1;\n    fcn.004215e0(iVar6);\n    iVar4 = fcn.00421a15(param_1[2], 0x43daac);\n    param_1[1] = iVar4;\n    if (iVar4 == 0) {\n        param_1[6] = 1;\n        uStack4 = 0xffffffff;\n        piVar1 = param_2 + -4;\n        LOCK();\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        unaff_retaddr = param_2;\ncode_r0x004039f2:\n        if (iVar6 + -1 < 1) {\n            (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n        }\n        *in_FS_OFFSET = piStack12;\n        return 0xffffffff;\n    }\n    iVar4 = param_1[5];\n    while (iVar4 = iVar4 + -1,  0 < iVar4) {\n        uVar3 = (param_1[3] + iVar4 * 4) - 4;\n        fcn.00403880(iVar6, uVar3);\n    }\n    uVar5 = fcn.004037a0(&piStack16, &param_2, 0x43daa8, uVar3);\n    uStack4 = CONCAT31(uStack4._1_3_, 1);\n    fcn.00403880(uVar5);\n    uStack8 = uStack8 & 0xffffff00;\n    piVar1 = unaff_EBP + -4;\n    LOCK();\n    iVar6 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar6 + -1 < 1) {\n        (**(**(unaff_EBP + -0x10) + 4))(unaff_EBP + -0x10);\n    }\n    iVar6 = 0;\n    if (0 < param_1[5]) {\n        do {\n            iVar4 = param_1[3];\n            iVar2 = *(iVar4 + iVar6 * 4);\n            if ((*(iVar2 + -8) | 1U - *(iVar2 + -4)) < 0) {\n                fcn.004031a0();\n            }\n            iVar4 = fcn.00421842(*(iVar4 + iVar6 * 4), param_1[1]);\n            if (iVar4 != 0) {\n                uStack8 = 0xffffffff;\n                piVar1 = unaff_retaddr + -4;\n                LOCK();\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                goto code_r0x004039f2;\n            }\n            fcn.004217e6(param_1[1]);\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < param_1[5]);\n    }\n    uStack8 = 0xffffffff;\n    piVar1 = unaff_retaddr + -4;\n    LOCK();\n    iVar6 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar6 == 1 || iVar6 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = piStack16;\n    return 0;\n}\n",
        "token_count": 977
    },
    "00403b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403b70(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t *arg_8h;\n    int32_t **in_FS_OFFSET;\n    char *pcStack48;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43aa28;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x44d680 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    piVar4 = fcn.0040fc72(uVar3);\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00402e00(0x80004005);\n    }\n    ppiVar5 = (**(*piVar4 + 0xc))();\n    pcStack48 = \"                                                                                \\n\";\n    uStack8 = 0;\n    fcn.00403650();\n    iVar6 = fcn.00421a15(*(param_1 + 8), 0x43daac);\n    *(param_1 + 4) = iVar6;\n    if (iVar6 == 0) {\n        *(param_1 + 0x18) = 1;\n        ppiVar1 = ppiVar5 + 3;\n        LOCK();\n        piVar4 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\ncode_r0x00403c0f:\n        if (piVar4 + -1 < 1) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *in_FS_OFFSET = 0x51;\n        return 0xffffffff;\n    }\n    uVar3 = *(param_1 + 0x14);\n    uVar9 = -(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4;\n    puVar7 = fcn.00403e5f(-(0xfffffffb < uVar9) | uVar9 + 4);\n    if (puVar7 == NULL) {\n        arg_8h = NULL;\n    }\n    else {\n        arg_8h = puVar7 + 1;\n        *puVar7 = uVar3;\n        fcn.00421a2c(arg_8h, 4, uVar3, fcn.00403260);\n    }\n    *(param_1 + 0xc) = arg_8h;\n    iVar6 = 0;\n    ppiVar5 = ppiVar5 + 4;\n    if (0 < *(param_1 + 0x14)) {\n        do {\n            fcn.00403880();\n            iVar8 = *(param_1 + 0xc);\n            iVar2 = *(iVar8 + iVar6 * 4);\n            if ((*(iVar2 + -8) | 1U - *(iVar2 + -4)) < 0) {\n                fcn.004031a0();\n            }\n            iVar8 = fcn.00421842(*(iVar8 + iVar6 * 4), *(param_1 + 4));\n            if (iVar8 != 0) {\n                ppiVar5 = 0x43daa0;\n                LOCK();\n                piVar4 = *0x43daac;\n                *0x43daac = *0x43daac + -1;\n                goto code_r0x00403c0f;\n            }\n            fcn.004217e6(*(param_1 + 4));\n            iVar6 = iVar6 + 1;\n            ppiVar5 = pcStack48;\n        } while (iVar6 < *(param_1 + 0x14));\n    }\n    ppiVar1 = ppiVar5 + -1;\n    LOCK();\n    piVar4 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n        (**(*ppiVar5[-4] + 4))(ppiVar5 + -4);\n    }\n    *in_FS_OFFSET = 0x51;\n    return 0;\n}\n",
        "token_count": 991
    },
    "00403d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00403d50(code **param_1, code *param_2)\n\n{\n    code cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t **in_FS_OFFSET;\n    code *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43aa5b;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x44d680 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CCirFile.0;\n    piVar3 = fcn.0040fc72(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00402e00(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_1[4] = iVar4 + 0x10;\n    uStack8 = 0;\n    param_1[5] = param_2;\n    param_1[6] = NULL;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    pcVar5 = fcn.00403e5f(0x100);\n    param_1[2] = pcVar5;\n    do {\n        cVar1 = *unaff_retaddr;\n        *pcVar5 = cVar1;\n        unaff_retaddr = unaff_retaddr + 1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != 0x0);\n    iVar4 = fcn.00403b70();\n    if (iVar4 < 0) {\n        param_1[6] = 0x2;\n    }\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 464
    },
    "004043aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043aa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00422112(arg_8h, arg_ch, arg_10h);\n    fcn.00404344(arg_8h_00);\n    return;\n}\n",
        "token_count": 82
    },
    "004043c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004043c8(uint hModule, uint hResInfo, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, hResInfo);\n        puVar3 = iVar1 + puVar2;\n        for (arg_10h = arg_10h & 0xf; arg_10h != 0; arg_10h = arg_10h - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "00404425": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404425(uint hModule, uint32_t arg_ch)\n\n{\n    int32_t hResInfo;\n    \n    hResInfo = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg_ch >> 4) + 1 & 0xffff, 6);\n    if (hResInfo == 0) {\n        return;\n    }\n    fcn.004043c8(hModule, hResInfo, arg_ch);\n    return;\n}\n",
        "token_count": 106
    },
    "00403fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00403fc8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x44c1b4;\n    var_10h = param_1;\n    iVar1 = *0x44c1b4;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 501
    },
    "00404aca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00404aca(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    puVar1 = fcn.00404425(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        arg_ch_00 = fcn.0040449e(puVar1 + 1, *puVar1);\n        arg_8h_00 = fcn.004032b0(arg_ch_00);\n        fcn.004044ba(arg_8h_00, arg_ch_00, puVar1 + 1, *puVar1);\n        fcn.00403060(arg_ch_00);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 194
    },
    "00404b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00404b6e(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_21ch;\n    uint var_4h;\n    \n    fcn.00421d6f(0x214);\n    *(unaff_EBP + -0x21c) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar2 = fcn.00408ff8();\n    if (*(iVar2 + 0x14) == '\\0') {\n        if (*0x44ed4c != NULL) {\n            (**(**0x44ed4c + 4))(1);\n            *0x44ed4c = NULL;\n        }\n        if (*0x44ed48 != NULL) {\n            (**(**0x44ed48 + 4))(1);\n            *0x44ed48 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.004100b0(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.004100b0(extraout_ECX[0x1d]);\n    }\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar2 = fcn.00408ff8();\n    if (*(iVar2 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar2 + 0x10) = 0;\n    }\n    if (*(iVar2 + 4) == extraout_ECX) {\n        *(iVar2 + 4) = 0;\n    }\n    fcn.00421c42(extraout_ECX[0x14]);\n    fcn.00421c42(extraout_ECX[0x15]);\n    fcn.00421c42(extraout_ECX[0x18]);\n    fcn.00421c42(extraout_ECX[0x19]);\n    fcn.00421c42(extraout_ECX[0x1a]);\n    extraout_ECX[0xb] = NULL;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00405537();\n    fcn.00421dcb();\n    return;\n}\n",
        "token_count": 750
    },
    "00404df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404df0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00422423(arg_8h, arg_ch, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "00404e0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00404e0c(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00404e1d;\ncode_r0x00404e18:\n    fcn.00408613();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x00404e1d:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x39U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x404f14\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x39U) * 4 + 0x404f14)) {\n    case 0x404e4e:\n        (*arg_14h)();\n        return 1;\n    case 0x404e56:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x404e5e:\n        arg_18h = arg_ch;\n        break;\n    case 0x404e69:\n        arg_18h = arg_ch;\n        goto code_r0x00404f02;\n    case 0x404e71:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00404e18;\n    case 0x404e85:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00404e18;\n    case 0x404e96:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00404e18;\n    case 0x404eae:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00404e18;\n    case 0x404ec6:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00404ed5;\n        }\n        goto code_r0x00404e18;\n    case 0x404ee3:\n        goto code_r0x00404ee3;\n    case 0x404ef7:\n        break;\n    case 0x404eff:\ncode_r0x00404f02:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x00404ee3:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00404ed5:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x00404e18;\n}\n",
        "token_count": 963
    },
    "004054fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054fe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.00408a40();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 198
    },
    "0040562a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040562a(int32_t arg_8h)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    uint arg_14h;\n    uint var_4h;\n    \n    ppcVar1 = (**(*in_ECX + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(arg_8h + 4) < 0xc000) {\n            iVar2 = fcn.00409b2c(ppcVar1[1], *(arg_8h + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00405664:\n                (**(iVar2 + 0x14))(*(arg_8h + 8), *(arg_8h + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.00409b2c(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg_8h + 4)) goto code_r0x00405664;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 365
    },
    "00405c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    if (-1 < arg_ch) goto code_r0x00405c97;\n    do {\n        fcn.00402e00();\ncode_r0x00405c97:\n        iVar2 = fcn.004034f0(arg_8h);\n        if (iVar2 < arg_ch) {\n            arg_ch = iVar2;\n        }\n    } while (0x7fffffff - arg_ch < uVar1);\n    iVar2 = fcn.004032b0(uVar1 + arg_ch);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.004206e0(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.00403060(uVar1 + arg_ch);\n    return;\n}\n",
        "token_count": 275
    },
    "00405ceb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405ceb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    piVar1 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x10) = 0;\n    uVar3 = fcn.00403510();\n    fcn.004035a0(uVar3);\n    iVar2 = *piVar1;\n    uVar3 = *(iVar2 + -0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    uVar3 = fcn.004034f0(*(unaff_EBP + 0xc), iVar2, uVar3);\n    fcn.004035d0(*(unaff_EBP + 8), *(unaff_EBP + 0xc), uVar3);\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 297
    },
    "004061d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004061d3(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t extraout_ECX;\n    \n    iVar2 = in_ECX[0x22];\n    if (iVar2 != 0) goto code_r0x004061eb;\n    do {\n        fcn.00408613();\n        iVar2 = extraout_ECX;\ncode_r0x004061eb:\n    } while ((arg_8h < 0xe110) || (*(iVar2 + 4) + 0xe110U <= arg_8h));\n    puVar1 = fcn.004061a0(arg_8h - 0xe110);\n    iVar2 = (**(*in_ECX + 0x88))(*puVar1);\n    if (iVar2 == 0) {\n        (***in_ECX[0x22])(arg_8h - 0xe110);\n    }\n    return 1;\n}\n",
        "token_count": 226
    },
    "00406520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406520(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408ff8();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00406536. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.004063bf(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 142
    },
    "0040668b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040668b(code *arg_8h, code *arg_ch)\n\n{\n    code **in_ECX;\n    \n    fcn.0040a439();\n    *in_ECX = vtable.CDialog.0;\n    fcn.004222e0(in_ECX + 0x15, 0, 0x20);\n    in_ECX[0x1a] = arg_ch;\n    in_ECX[0x15] = arg_8h;\n    in_ECX[0x16] = arg_8h & 0xffff;\n    return;\n}\n",
        "token_count": 131
    },
    "00406b7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406b7f(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.00421d03(0x3c);\n    *(unaff_EBP + -0x20) = arg_8h_00;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.00408ff8();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.00408ff8();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040e198(0x10);\n    fcn.0040e198(0x3c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*arg_8h_00 + 0x134))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x00406d2d;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 != 0) {\n        fcn.00403260();\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x18) = 0;\n        iVar3 = fcn.004120e8(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n        if (iVar3 == 0) {\n            fcn.004120ac(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.00412008(*(unaff_EBP + -0x18));\n            uVar4 = fcn.00411cf4();\n            *(unaff_EBP + -0x14) = uVar4;\n            *(unaff_EBP + -4) = 1;\n            fcn.00411ce6();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n        arg_8h_00[0x11] = -1;\n        arg_8h_00[0xf] = arg_8h_00[0xf] | 0x10;\n        fcn.0040d297(arg_8h_00);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *(*(unaff_EBP + 0xc) + 0x20);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar4, fcn.004065bd, 0);\n        fcn.00402e20();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if ((*(unaff_EBP + -0x28) != NULL) && (iVar2 != 0)) {\n            (**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48);\n            (**(*arg_8h_00 + 0x134))(0);\n        }\n        iVar3 = fcn.0040b82d();\n        if (iVar3 == 0) {\n            (**(*arg_8h_00 + 0x11c))();\n        }\n        if ((iVar2 != 0) && ((*(arg_8h_00 + 0xf) & 0x10) == 0)) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n        }\n    }\ncode_r0x00406d2d:\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1190
    },
    "00406fe1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406fe1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.004206e0(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00404344(arg_8h_00);\n    return;\n}\n",
        "token_count": 95
    },
    "004073d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004073d9(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *arg_8h;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00408613();\n        arg_8h = extraout_ECX;\n    }\n    *arg_8h = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 112
    },
    "0040782a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040782a(void)\n\n{\n    uint *puVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CControlSiteFactoryMgr.0;\n    puVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    fcn.0040743e();\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[1] = vtable.CList_class_IControlSiteFactory___class_IControlSiteFactory__.0;\n    fcn.0040743e();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 233
    },
    "00407edb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407edb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.00407eb7(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 112
    },
    "00407f2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f2b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00407f0a(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00404344(arg_8h_00);\n    return;\n}\n",
        "token_count": 97
    },
    "00407f4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407f4c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00423d16(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00404344(arg_8h_00);\n    return;\n}\n",
        "token_count": 96
    },
    "00408003": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408003(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    if (-arg_ch - 1U < arg_10h) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch + arg_10h;\n    return 0;\n}\n",
        "token_count": 82
    },
    "004080d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.004080d2(uint noname_0, uint noname_1, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    uint var_34h;\n    uint var_24h;\n    uint var_1dh;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x14;\n    var_4h_2 = 0x446b48;\n    fcn.00423eac();\n    *(unaff_EBP + -0x1d) = 1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00408003(unaff_EBP + -0x24, *(unaff_EBP + 8), 0x2000);\n    if (iVar1 < 0) {\n        *(unaff_EBP + -0x1d) = 0;\n    }\n    else {\n        fcn.00423f10();\n        *(unaff_EBP + -0x18) = &fcn.004080d2::var_4h_2;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    *(unaff_EBP + -0x38) = 0x408146;\n    fcn.00423ef4();\n    return;\n}\n",
        "token_count": 360
    },
    "00408169": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408169(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    \n    if (arg_8h == NULL) {\n        fcn.00402e00(0x80004005);\n        arg_8h = extraout_ECX;\n    }\n    iVar1 = (**(*arg_8h + 0xc))();\n    *in_ECX = iVar1 + 0x10;\n    return;\n}\n",
        "token_count": 120
    },
    "004081cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004081cb(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    piVar1 = *(iVar2 + -0x10);\n    if (*(iVar2 + -0xc) != 0) {\n        if (*(iVar2 + -4) < 0) {\n            fcn.00408193(0);\n        }\n        else {\n            fcn.00402e20();\n            iVar2 = (**(*piVar1 + 0xc))();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00408202": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408202(int32_t arg_8h)\n\n{\n    int32_t arg_10h;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = *in_ECX;\n    iVar1 = *(arg_10h + -0xc);\n    puVar2 = (**(**(arg_10h + -0x10) + 0x10))();\n    iVar3 = (***puVar2)(arg_8h, 2);\n    if (iVar3 == 0) {\n        fcn.004081c0();\n    }\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    fcn.00407f0a(iVar3 + 0x10, arg_8h + 1, arg_10h, arg_8h + 1);\n    *(iVar3 + 4) = iVar1;\n    fcn.00402e20();\n    *in_ECX = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 263
    },
    "0040826c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040826c(int32_t arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    ppiVar1 = *in_ECX + -0x10;\n    if ((*(*in_ECX + -8) < arg_8h) && (0 < arg_8h)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, arg_8h, 2);\n        if (iVar2 != 0) goto code_r0x0040829b;\n    }\n    iVar2 = fcn.004081c0();\ncode_r0x0040829b:\n    *in_ECX = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 174
    },
    "00408432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00408432(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h_00;\n    uint32_t arg_8h_01;\n    \n    puVar1 = fcn.00404425(arg_8h, arg_ch);\n    if (puVar1 != NULL) {\n        arg_8h_01 = *puVar1;\n        arg_8h_00 = fcn.00408320(arg_8h_01);\n        fcn.00407fa4(arg_8h_00, arg_8h_01, puVar1 + 1, *puVar1);\n        fcn.00408193(arg_8h_01);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "00408b6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00408b6a(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    fcn.00404d66(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00408afc(unaff_EBP + -0x10);\n    fcn.00402e20();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1388
    },
    "00408d8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00408d8e(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    fcn.00404d66(\"comdlg32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00408afc(unaff_EBP + -0x10);\n    fcn.00402e20();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 409
    },
    "00408e11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00408e11(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    fcn.00404d66(\"shell32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.00408afc(unaff_EBP + -0x10);\n    fcn.00402e20();\n    *extraout_ECX = vtable.CShellWrapper.0;\n    extraout_ECX[4] = NULL;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 163
    },
    "0040902b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040902b(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.00408ff8();\n    iVar2 = fcn.004046f7();\n    if (iVar2 == 0) {\n        uStack8 = 0x44c628;\n        fcn.00420b25(&uStack8, 0x446c08);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0040928b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040928b(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.004090d6();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.00424101(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x4505a8)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 420
    },
    "0040a420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a420(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.0041bc49(arg_8h);\n    *puVar1 = arg_ch;\n    return;\n}\n",
        "token_count": 60
    },
    "0040b0b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b0b2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.00408a40();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xfc))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 357
    },
    "0040b13d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b13d(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0040e5a5();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if (iVar5 != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0);\n            if (iVar4 != 0) {\n                iVar5 = iVar4;\n            }\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if (iVar5 != 0) {\n            uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n            if (((uVar2 & 0x10000000) == 0) || ((uVar2 & 0x20000000) != 0)) {\n                iVar5 = 0;\n            }\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0040446b();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0040921e(iVar5, 1);\n            fcn.0040928b(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040921e(iVar5, 2);\n            fcn.0040928b(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if (var_10h < (var_30h - var_38h) + iVar5) {\n        iVar5 = (var_38h - var_30h) + var_10h;\n    }\n    if (iVar5 < lprcDst) {\n        iVar5 = lprcDst;\n    }\n    if (var_ch < (var_2ch - var_34h) + iVar4) {\n        iVar4 = (var_34h - var_2ch) + var_ch;\n    }\n    if (iVar4 < var_14h) {\n        iVar4 = var_14h;\n    }\n    fcn.0040e8e1(0, iVar5, iVar4, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1089
    },
    "0040b7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040b7a0(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0040b700(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00408613(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0040e86f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e86f(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *arg_8h;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00408613();\n        arg_8h = extraout_ECX;\n    }\n    *arg_8h = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 109
    },
    "0040fcec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fcec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00407eb7(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00402e00(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 94
    },
    "0040fff1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fff1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00410018;\n    do {\n        fcn.00408613();\ncode_r0x00410018:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.004222e0(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00410078;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x00410078:\n    fcn.00421070(unaff_EBX);\n    return;\n}\n",
        "token_count": 342
    },
    "00410577": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.00410577(uint arg_8h, uint arg_ch)\n\n{\n    code **arg_8h_00;\n    uint uVar1;\n    code *pcVar2;\n    uint *extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint uVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.00421d03(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x0041069e;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (arg_8h_00 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.004101f7(0x10);\n        if (arg_8h_00 == NULL) {\n            arg_8h_00 = NULL;\n        }\n        else {\n            *arg_8h_00 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        arg_8h_00[2] = NULL;\n        arg_8h_00[3] = NULL;\n        fcn.00410329(arg_8h_00);\ncode_r0x004105ce:\n        if (arg_8h_00[3] == NULL) {\n            uVar1 = fcn.0040fcec(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar1);\n        }\n        else {\n            uVar4 = 2;\n            uVar1 = fcn.0040fcec(extraout_ECX[3], 4);\n            pcVar2 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(arg_8h_00[3], uVar1, uVar4);\n        }\n        if (pcVar2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar2 = fcn.004085db();\n        }\n        arg_8h_00[3] = pcVar2;\n        fcn.004222e0(pcVar2 + arg_8h_00[2] * 4, 0, (extraout_ECX[3] - arg_8h_00[2]) * 4);\n        arg_8h_00[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, arg_8h_00);\n        iVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar3 = *(unaff_EBP + 8);\n        if ((arg_8h_00[2] <= iVar3) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x004105ce;\n    }\n    if ((arg_8h_00[3] != NULL) && (iVar3 < arg_8h_00[2])) {\n        *(arg_8h_00[3] + iVar3 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x0041069e:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 927
    },
    "00410921": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410921(uint arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((arg_ch != NULL) && (arg_10h != 0)) {\n        iVar2 = fcn.00408ff8();\n        puVar3 = fcn.00404425(*(iVar2 + 0xc), arg_8h);\n        if (puVar3 == NULL) {\n            *arg_ch = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, arg_ch, arg_10h + -1, 0, 0);\n            arg_ch[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00408613();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 244
    },
    "00410996": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410996(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408ff8();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 57
    },
    "00410be3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410be3(uint32_t arg_8h)\n\n{\n    if (0x10 < arg_8h) {\n        arg_8h = fcn.00408613();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h * 0x18 + 0x4508c0);\n    return;\n}\n",
        "token_count": 83
    },
    "004110cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004110cb(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (0x7fffffff - arg_ch < arg_10h) {\n        return 0x80070057;\n    }\n    *arg_8h = arg_ch + arg_10h;\n    return 0;\n}\n",
        "token_count": 83
    },
    "00411119": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411119(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004110cb(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00402e00(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 92
    },
    "004116fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004116fc(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.004032b0(0x104);\n    fcn.004222e0(arg_8h_00, 0, 0x104);\n    fcn.00407f4c(arg_8h_00, 0x104, arg_8h, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(arg_8h_00);\n    fcn.00405c46(0xffffffff);\n    return;\n}\n",
        "token_count": 143
    },
    "00411d0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411d0e(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(arg_8h + 2) == -1) {\n        piVar2 = arg_8h + 0x1a;\n    }\n    else {\n        piVar2 = arg_8h + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 258
    },
    "00411e31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e31(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0042075d(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.00404344(arg_8h_00);\n    return;\n}\n",
        "token_count": 95
    },
    "004128e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004128e0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar3 = extraout_ECX + 0x13;\n    if (*piVar3 == 0) {\n        iVar1 = (**(*extraout_ECX + 300))(piVar3);\n        if ((iVar1 != 0) && (*piVar3 == 0)) {\n            *(unaff_EBP + -4) = 0;\n            iVar1 = fcn.00408ff8();\n            iVar1 = (**(**(iVar1 + 0x3c) + 8))(extraout_ECX);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n        }\n        if (*(unaff_EBP + 8) == 0) {\n            iVar1 = *extraout_ECX[0x13];\n            uVar2 = (**(*extraout_ECX + 0x138))();\n            (**(iVar1 + 0xa0))(uVar2);\n        }\n    }\n    piVar3 = extraout_ECX;\n    if (extraout_ECX[0x13] != 0) {\n        while ((piVar3[0xf] & 0x100U) == 0) {\n            piVar3[0xf] = piVar3[0xf] | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[8]);\n            piVar3 = fcn.0040b774(uVar2);\n            piVar4 = piVar3;\n            if (piVar3 != NULL) {\n                piVar4 = piVar3[8];\n            }\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(piVar4, 0xfffffff0);\n            if (((uVar5 & 0x40000000) == 0) || (piVar3 == NULL)) break;\n        }\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 556
    },
    "00413499": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_35h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413499(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *arg_8h_00;\n    uint var_90h;\n    uint hdc;\n    uint clr;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint lpvObject;\n    uint var_3ch;\n    uint var_35h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00421d39(0x84);\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x50) = 0;\n    *(unaff_EBP + -0x54) = vtable.CFont.0;\n    *(unaff_EBP + -4) = 0;\n    if ((iVar1 == 0) || (*(iVar1 + 4) == 0)) {\n        iVar1 = fcn.004128a8(0x11);\n        if (iVar1 == 0) {\n            iVar1 = fcn.004128a8(0xd);\n            if (iVar1 == 0) {\n                *(extraout_ECX + 100) = 0;\n                goto code_r0x004135bb;\n            }\n        }\n        iVar1 = unaff_EBP + -0x54;\n    }\n    (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar1 + 4), 0x3c, unaff_EBP + -0x4c);\n    *(unaff_EBP + -0x7c) = 0x20;\n    fcn.004084c7(unaff_EBP + -0x30);\n    *(unaff_EBP + -0x78) = *(unaff_EBP + -0x5c);\n    *(unaff_EBP + -0x6c) = *(unaff_EBP + -0x3c);\n    *(unaff_EBP + -0x6a) = *(unaff_EBP + -0x35);\n    *(unaff_EBP + -0x68) = *(unaff_EBP + -0x38);\n    *(unaff_EBP + -100) = *(unaff_EBP + -0x37);\n    *(unaff_EBP + -0x60) = *(unaff_EBP + -0x36);\n    iVar1 = *(unaff_EBP + -0x4c);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x58) = iVar1;\n    if (iVar1 < 0) {\n        *(unaff_EBP + -0x58) = -iVar1;\n    }\n    fcn.0040f863(*(extraout_ECX + 0x20));\n    *(unaff_EBP + -4) = 2;\n    iVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(unaff_EBP + -0x88), 0x5a);\n    arg_8h_00 = extraout_ECX + 100;\n    *(unaff_EBP + -0x70) = 0;\n    *(unaff_EBP + -0x74) = (*(unaff_EBP + -0x58) * 720000) / iVar1;\n    fcn.0041b724(arg_8h_00);\n    iVar1 = (*_sym.imp.OLEAUT32.dll_OleTranslateColor)(unaff_EBP + -0x7c, 0x442d74, arg_8h_00);\n    if (iVar1 < 0) {\n        *arg_8h_00 = 0;\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0040f8b7();\n    fcn.00402e20();\ncode_r0x004135bb:\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x54) = vtable.CFont.0;\n    fcn.0040fb8c();\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 1020
    },
    "00413838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413838(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_18h == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*arg_18h + 0x10))\n                          (arg_18h, (*(arg_8h + 0x24) != 0) * '\\x02' + '\\x02', arg_ch, arg_8h, arg_14h, arg_10h, 0);\n        if (arg_ch != 0) {\n            puVar2 = arg_8h + 0x14;\n            do {\n                fcn.00403e54(*puVar2);\n                puVar2 = puVar2 + 0xd;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 265
    },
    "00413a17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413a17(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00402e00(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.004222e0(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "00413afe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00413afe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 0x10);\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 8) = uVar1;\n    *(extraout_ECX + 0x18) = uVar3;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.004222e0(uVar1, 0, uVar3);\n    fcn.00403e54(*(extraout_ECX + 0xc));\n    iVar2 = *(unaff_EBP + 8) * 0x34;\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.00403e25(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(extraout_ECX + 0xc) = uVar3;\n    if (*(extraout_ECX + 0xc) != 0) {\n        *(extraout_ECX + 0x10) = *(unaff_EBP + 8);\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 419
    },
    "00413c09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413c09(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *in_ECX;\n    \n    (**(*in_ECX + 0xc4))(arg_8h, arg_ch + 8, arg_ch, 0, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    return;\n}\n",
        "token_count": 120
    },
    "00413fb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413fb5(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *var_4h;\n    \n    puVar1 = param_1 + 0x78;\n    var_4h = param_1;\n    fcn.004222e0(puVar1, 0, 0x10);\n    puVar2 = *(param_1 + 0x50);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    if (puVar2 == NULL) {\n        fcn.00408613();\n    }\n    iVar3 = (***puVar2)(puVar2, 0x442d14, &var_4h);\n    if (-1 < iVar3) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "004148ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004148ce(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *in_ECX;\n    \n    in_ECX[2] = arg_10h + arg_8h;\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    in_ECX[3] = arg_14h + arg_ch;\n    return;\n}\n",
        "token_count": 111
    },
    "00414dbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414dbe(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h * 0x30 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8);\n    *arg_ch = *puVar1;\n    arg_ch[1] = puVar1[1];\n    arg_ch[2] = puVar1[2];\n    arg_ch[3] = puVar1[3];\n    *(arg_ch + 4) = *(puVar1 + 4);\n    *(arg_ch + 0x12) = *(puVar1 + 0x12);\n    return;\n}\n",
        "token_count": 169
    },
    "00414de5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414de5(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h * 0x30 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8);\n    *arg_ch = *puVar1;\n    *(arg_ch + 1) = *(puVar1 + 1);\n    return;\n}\n",
        "token_count": 110
    },
    "00414e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414e08(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h * 0x30 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8);\n    *arg_ch = *puVar1;\n    arg_ch[1] = puVar1[1];\n    arg_ch[2] = puVar1[2];\n    arg_ch[3] = puVar1[3];\n    return;\n}\n",
        "token_count": 132
    },
    "00414eb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414eb2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    \n    puVar1 = *(arg_8h * 0x30 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8);\n    *puVar1 = *arg_ch;\n    puVar1[1] = arg_ch[1];\n    puVar1[2] = arg_ch[2];\n    puVar1[3] = arg_ch[3];\n    return;\n}\n",
        "token_count": 132
    },
    "00414f6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414f6e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.004222e0(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.00413a17(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 245
    },
    "0041513b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041513b(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.00413904(&arg_8h);\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(arg_8h * 0x30 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 129
    },
    "0041522e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041522e(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.00415076(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 267
    },
    "00415284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00415284(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0x1c);\n    iVar3 = *(extraout_ECX + 0x3c);\n    iVar1 = *(extraout_ECX + 0x34);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x38) - *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x10) = iVar3 - iVar1;\n    fcn.0040f7d4(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041c1b1(unaff_EBP + -0x14);\n    piVar2 = *(extraout_ECX + 0x50);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00408613();\n    }\n    iVar3 = (**(*piVar2 + 0x44))(piVar2, 1, unaff_EBP + -0x14);\n    if (-1 < iVar3) {\n        iVar3 = (**(**(extraout_ECX + 0x50) + 0x48))(*(extraout_ECX + 0x50), 1, unaff_EBP + -0x14);\n        if (-1 < iVar3) {\n            fcn.0041c241(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x3c) = *(extraout_ECX + 0x34) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040f828();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 545
    },
    "004167cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004167cd(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **var_4h;\n    \n    if ((param_1[2] != 0x80010001) && (piVar1 = *param_1,  piVar1 != NULL)) {\n        var_4h = param_1;\n        if (piVar1[0x14] == 0) {\n            piVar1 = fcn.00408613();\n        }\n        iVar2 = (***piVar1[0x14])(piVar1[0x14], 0x442be4, &var_4h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.00414c09();\n            if (iVar2 != 0) {\n                uVar3 = 0xd;\n                if (param_1[3][0x24] != 0) {\n                    uVar3 = 0x800d;\n                }\n                (**(**param_1 + 0x70))(*param_1, param_1[2], uVar3, iVar2);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 332
    },
    "00416968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416968(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x0041698c:\n    // switch table (31 cases) at 0x4169f4\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x004169a2;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    fcn.0041501b(3);\n    var_8h = arg_14h;\n    fcn.004141ff(&var_24h);\n    return var_ch;\ncode_r0x004169a2:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x0041698c;\n}\n",
        "token_count": 464
    },
    "00417fed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00417fed(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar7;\n    int32_t unaff_EBP;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint pv;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d39(0x94);\n    *(unaff_EBP + -0x88) = extraout_ECX[5];\n    *(unaff_EBP + -0x80) = extraout_ECX[4];\n    if (extraout_ECX[0x12] == 0) {\n        piVar1 = extraout_ECX[2];\n        if ((piVar1 == NULL) ||\n           (iVar3 = (**(*piVar1 + 0xc))(piVar1, 0x442ba4, unaff_EBP + -0x78, unaff_EBP + -0x7c),  iVar3 < 0))\n        goto code_r0x0041834c;\n        fcn.00414b0a(unaff_EBP + -0x70, 0x4432d4);\n        *(unaff_EBP + -0x50) = 0xffffffff;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x4c) = 0x18;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x44) = 0x1fb;\n        fcn.00414b0a(unaff_EBP + -0x40, 0x4432ec);\n        *(unaff_EBP + -0x20) = 0xffffffff;\n        *(unaff_EBP + -0x28) = 0x1c;\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x1c) = 0x20;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0x1e;\n        iVar3 = (**(**(unaff_EBP + -0x78) + 0x10))(*(unaff_EBP + -0x78), 2, unaff_EBP + -0x70, 0x28, 0);\n        if (iVar3 < 0) {\n            (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            goto code_r0x0041834c;\n        }\n        *(unaff_EBP + -0xa0) = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x9c) = 1;\n        *(unaff_EBP + -0x98) = 0;\n        *(unaff_EBP + -0x94) = 0;\n        *(unaff_EBP + -0x90) = 0;\n        iVar3 = (**(**(unaff_EBP + -0x78) + 0x18))(*(unaff_EBP + -0x78), 0, 0, unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x84) = iVar3;\n        if (iVar3 < 0) {\n            (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            goto code_r0x0041834c;\n        }\n        iVar3 = *(unaff_EBP + -0x94);\n        extraout_ECX[5] = *(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x8c);\n        extraout_ECX[4] = *(unaff_EBP + -0x8c);\n        piVar1 = *(unaff_EBP + -0x78);\n        extraout_ECX[0xd] = iVar3;\n        (**(*piVar1 + 8))(piVar1);\n    }\n    else {\n        iVar3 = (**(*extraout_ECX[0x13] + 0x14))(extraout_ECX[0x13], 0x442dd4, unaff_EBP + -0x74);\n        *(unaff_EBP + -0x84) = iVar3;\n        if (iVar3 < 0) goto code_r0x0041834c;\n        iVar3 = (****(unaff_EBP + -0x74))(*(unaff_EBP + -0x74), 0x442cd4, unaff_EBP + -0x7c);\n        if (-1 < iVar3) {\n            *(unaff_EBP + -0x78) = 0;\n            iVar3 = (**(**(unaff_EBP + -0x7c) + 0x10))(*(unaff_EBP + -0x7c), 0x442ef4, unaff_EBP + -0x78);\n            if (-1 < iVar3) {\n                (**(**(unaff_EBP + -0x78) + 0x14))(*(unaff_EBP + -0x78), extraout_ECX[1] + 0xe8, extraout_ECX + 0x16);\n                (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            }\n            (**(**(unaff_EBP + -0x7c) + 8))(*(unaff_EBP + -0x7c));\n        }\n        iVar3 = fcn.00403e25(0x14);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0041782e(*(unaff_EBP + -0x74));\n        }\n        extraout_ECX[0x14] = iVar3;\n        (**(**(unaff_EBP + -0x74) + 8))(*(unaff_EBP + -0x74));\n        iVar3 = *extraout_ECX[0x14];\n        if (iVar3 != 0) {\n            fcn.00414da5(iVar3, extraout_ECX[0x14] + 1);\n        }\n        iVar3 = fcn.00403e25(0x28);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00413899(0, 8000);\n        }\n        extraout_ECX[0x15] = iVar3;\n        fcn.004179b0(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        uVar2 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = uVar2;\n        if (0x3333333 < uVar2) goto code_r0x0041834c;\n        iVar3 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(uVar2 * 0x28);\n        extraout_ECX[5] = iVar3;\n        if (iVar3 == 0) {\n            iVar3 = fcn.004085db();\n        }\n        fcn.004222e0(iVar3, 0, extraout_ECX[4] * 0x28);\n        fcn.00417855();\n        fcn.00414d0c();\n    }\n    iVar3 = extraout_ECX[4];\n    *(unaff_EBP + -0x74) = 0;\n    if (0 < iVar3) {\n        iVar3 = 0;\n        do {\n            iVar4 = fcn.00403e25(0x1c);\n            *(unaff_EBP + -0x7c) = iVar4;\n            *(unaff_EBP + -4) = 0;\n            if (iVar4 == 0) {\n                uVar5 = 0;\n            }\n            else {\n                uVar5 = fcn.0041bdaf(10);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar4 = extraout_ECX[5];\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 1;\n            *(iVar3 + 0x24 + iVar4) = uVar5;\n            iVar3 = iVar3 + 0x28;\n        } while (*(unaff_EBP + -0x74) < extraout_ECX[4]);\n    }\n    if (*(unaff_EBP + -0x88) != 0) {\n        if (0 < *(unaff_EBP + -0x80)) {\n            ppiVar7 = *(unaff_EBP + -0x88) + 0x24;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x80);\n            *(unaff_EBP + -0x7c) = -0x24 - *(unaff_EBP + -0x88);\n            do {\n                iVar3 = (*ppiVar7)[1];\n                *(unaff_EBP + -0x80) = iVar3;\n                while (iVar3 != 0) {\n                    puVar6 = fcn.004073d9(unaff_EBP + -0x80);\n                    (**(*extraout_ECX + 8))(*puVar6, 1);\n                    iVar3 = *(unaff_EBP + -0x80);\n                }\n                fcn.0041bcc7();\n                if (*ppiVar7 != NULL) {\n                    (**(**ppiVar7 + 4))(1);\n                }\n                ppiVar7 = ppiVar7 + 10;\n                piVar1 = unaff_EBP + -0x74;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x88));\n    }\ncode_r0x0041834c:\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 2605
    },
    "00418c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418c6b(uint arg_8h)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405141();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[0xb] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.COleControlSite.0;\n    extraout_ECX[8] = pcVar1;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    fcn.00403260();\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0x2a] = NULL;\n    fcn.0041e328();\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = vtable.COleControlSite::XOleClientSite.0;\n    extraout_ECX[0x33] = vtable.COleControlSite::XOleIPSite.0;\n    extraout_ECX[0x34] = vtable.COleControlSite::XOleControlSite.0;\n    extraout_ECX[0x35] = vtable.COleControlSite::XAmbientProps.0;\n    extraout_ECX[0x36] = vtable.COleControlSite::XPropertyNotifySink.0;\n    extraout_ECX[0x37] = vtable.COleControlSite::XEventSink.0;\n    extraout_ECX[0x38] = vtable.COleControlSite::XBoundObjectSite.0;\n    extraout_ECX[0x39] = vtable.COleControlSite::XNotifyDBEvents.0;\n    extraout_ECX[0x3a] = vtable.COleControlSite::XRowsetNotify.0;\n    fcn.004222e0(extraout_ECX + 0x2b, 0, 0x10);\n    *(extraout_ECX + 0x2b) = 0;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 733
    },
    "00419074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00419074(void)\n\n{\n    uint *puVar1;\n    int32_t **ppiVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pvargDest;\n    uint var_4h;\n    \n    fcn.00421cd0(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[0x16] != NULL) && (extraout_ECX[0x14] != NULL)) &&\n        (puVar1 = *extraout_ECX[0x14],  iVar5 = (***puVar1)(puVar1, 0x442cd4, unaff_EBP + -0x14),  -1 < iVar5)) &&\n       (piVar6 = *(unaff_EBP + -0x14),  piVar6 != NULL)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(*piVar6 + 0x10))(piVar6, 0x442ef4, unaff_EBP + -0x10);\n        if ((-1 < iVar5) && (piVar6 = *(unaff_EBP + -0x10),  piVar6 != NULL)) {\n            (**(*piVar6 + 0x18))(piVar6, extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    }\n    while (((extraout_ECX[9] != NULL && (ppiVar2 = *(extraout_ECX[7] + 8),  ppiVar2 != NULL)) && (*ppiVar2 != NULL))) {\n        (**(**ppiVar2 + 0xbc))(ppiVar2[2], 0);\n        (*ppiVar2)[0x26] = 0;\n    }\n    *(unaff_EBP + -0x18) = extraout_ECX + 6;\n    fcn.0041bcc7();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar3 = extraout_ECX[0xe];\n        if (0 < pcVar3) {\n            *(unaff_EBP + -0x10) = 0;\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + *(unaff_EBP + -0x10));\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x10;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar3 = extraout_ECX[0xe];\n        }\n        if (pcVar3 != NULL) {\n            fcn.00403e54(extraout_ECX[0xf]);\n            fcn.00403e54(extraout_ECX[0x10]);\n        }\n    }\n    piVar6 = extraout_ECX[2];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[3];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar3 = extraout_ECX[4];\n        *(unaff_EBP + -0x10) = 0;\n        if (0 < pcVar3) {\n            iVar5 = 0;\n            do {\n                iVar4 = *(*(extraout_ECX[5] + iVar5 + 0x24) + 4);\n                *(unaff_EBP + -0x14) = iVar4;\n                while (iVar4 != 0) {\n                    piVar6 = fcn.004073d9(unaff_EBP + -0x14);\n                    *(*piVar6 + 0x98) = 0;\n                    iVar4 = *(unaff_EBP + -0x14);\n                }\n                fcn.0041bcc7();\n                if (*(extraout_ECX[5] + iVar5 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar5 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                iVar5 = iVar5 + 0x28;\n            } while (*(unaff_EBP + -0x10) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.004178a4(*extraout_ECX[0x14]);\n        fcn.004138c6();\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.004167ac(1);\n    }\n    if (extraout_ECX[0x14] != NULL) {\n        fcn.00418f88(1);\n    }\n    piVar6 = extraout_ECX[0x13];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[0x12];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bdd7();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1497
    },
    "004193c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.004193c0(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    double dVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong *puVar8;\n    uint *puVar9;\n    uint uVar10;\n    uint16_t *puVar11;\n    uchar *puVar12;\n    int32_t iVar13;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_144h;\n    uint var_138h;\n    uint var_128h;\n    uint var_118h;\n    uint var_108h;\n    uint var_f8h;\n    uint var_e8h;\n    uint var_d8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_a8h;\n    uint var_98h;\n    uint var_88h;\n    uint var_78h;\n    uint var_68h;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint pvargDest;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00421d39(0x138);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x48) = 0;\n    if (*(extraout_ECX + 0x48) != 0) goto code_r0x004193ed;\n    do {\n        fcn.00408613();\ncode_r0x004193ed:\n    } while (*(extraout_ECX + 0x54) == 0);\n    fcn.0041c3eb(unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 3;\n    fcn.00416d72(*(unaff_EBP + 0xc), unaff_EBP + -0x28);\n    if ((*(unaff_EBP + -0x28) == 3) ||\n       (cVar7 = fcn.00415103(*(unaff_EBP + 0xc), unaff_EBP + -0x28),  pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy, \n       cVar7 == '\\0')) {\n        fcn.0041c5a1(unaff_EBP + -0x3c);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x3c);\n        goto code_r0x004198f4;\n    }\n    uVar3 = *(unaff_EBP + -0x28);\n    if (uVar3 < 0x82) {\n        if (uVar3 != 0x81) {\n            if (uVar3 < 9) {\n                if (uVar3 == 8) goto code_r0x00419897;\n                if (uVar3 == 2) {\ncode_r0x004195d9:\n                    puVar11 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    uVar10 = fcn.0041c2f6(*puVar11, 2);\n                    *(unaff_EBP + -4) = 7;\n                    fcn.0041c3c7(uVar10);\n                    iVar13 = unaff_EBP + -0x118;\n                }\n                else if (uVar3 == 3) {\ncode_r0x004195a8:\n                    puVar9 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    uVar10 = fcn.0041c32c(*puVar9, 3);\n                    *(unaff_EBP + -4) = 8;\n                    fcn.0041c3c7(uVar10);\n                    iVar13 = unaff_EBP + -0xe8;\n                }\n                else if (uVar3 == 4) {\n                    puVar9 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0x28) = *puVar9;\n                    *(unaff_EBP + -0x60) = *(unaff_EBP + -0x28);\n                    *(unaff_EBP + -0x68) = 4;\n                    *(unaff_EBP + -4) = 9;\n                    fcn.0041c3c7(unaff_EBP + -0x68);\n                    iVar13 = unaff_EBP + -0x68;\n                }\n                else if (uVar3 == 5) {\n                    puVar8 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0x90) = *puVar8;\n                    *(unaff_EBP + -0x98) = 5;\n                    *(unaff_EBP + -4) = 10;\n                    fcn.0041c3c7(unaff_EBP + -0x98);\n                    iVar13 = unaff_EBP + -0x98;\n                }\n                else if (uVar3 == 6) {\n                    puVar9 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    uVar10 = *puVar9;\n                    uVar4 = puVar9[1];\n                    *(unaff_EBP + -0x58) = 6;\n                    *(unaff_EBP + -0x50) = uVar10;\n                    *(unaff_EBP + -0x4c) = uVar4;\n                    *(unaff_EBP + -4) = 0xd;\n                    fcn.0041c3c7(unaff_EBP + -0x58);\n                    iVar13 = unaff_EBP + -0x58;\n                }\n                else {\n                    if (uVar3 != 7) goto code_r0x004198e2;\n                    puVar8 = fcn.0041513b(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0xd0) = *puVar8;\n                    *(unaff_EBP + -0xd8) = 7;\n                    *(unaff_EBP + -4) = 0xc;\n                    fcn.0041c3c7(unaff_EBP + -0xd8);\n                    iVar13 = unaff_EBP + -0xd8;\n                }\n            }\n            else if (uVar3 == 0xb) {\n                puVar11 = fcn.0041513b(*(unaff_EBP + 0xc));\n                uVar10 = fcn.0041c2f6(*puVar11, 0xb);\n                *(unaff_EBP + -4) = 0xb;\n                fcn.0041c3c7(uVar10);\n                iVar13 = unaff_EBP + -0x108;\n            }\n            else {\n                if (uVar3 != 0xc) {\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            puVar12 = fcn.0041513b(*(unaff_EBP + 0xc));\n                            uVar2 = *puVar12;\n                            *(unaff_EBP + -200) = 0x11;\n                            *(unaff_EBP + -0xc0) = uVar2;\n                            *(unaff_EBP + -4) = 6;\n                            fcn.0041c3c7(unaff_EBP + -200);\n                            iVar13 = unaff_EBP + -200;\n                            goto code_r0x00419669;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x004195d9;\n                        if (uVar3 == 0x13) goto code_r0x004195a8;\n                    }\n                    goto code_r0x004198e2;\n                }\n                uVar10 = fcn.0041513b(*(unaff_EBP + 0xc));\n                uVar10 = fcn.0041c5a1(uVar10);\n                *(unaff_EBP + -4) = 1;\n                fcn.0041c3c7(uVar10);\n                iVar13 = unaff_EBP + -0xf8;\n            }\n            goto code_r0x00419669;\n        }\n        uVar10 = fcn.0041513b(*(unaff_EBP + 0xc));\n        puVar9 = fcn.00404d66(uVar10);\n        uVar10 = *puVar9;\n        *(unaff_EBP + -4) = 2;\n        uVar10 = fcn.0041c66d(uVar10, 8);\n        *(unaff_EBP + -4) = 3;\n        fcn.0041c3c7(uVar10);\n        (*pcVar6)(unaff_EBP + -0x128);\ncode_r0x004198d7:\n        *(unaff_EBP + -4) = 0;\n        fcn.00402e20();\n    }\n    else {\n        if (uVar3 == 0x82) {\ncode_r0x00419897:\n            uVar10 = fcn.0041513b(*(unaff_EBP + 0xc));\n            puVar9 = fcn.0040839e(uVar10);\n            uVar10 = *puVar9;\n            *(unaff_EBP + -4) = 4;\n            uVar10 = fcn.0041c66d(uVar10, 8);\n            *(unaff_EBP + -4) = 5;\n            fcn.0041c3c7(uVar10);\n            (*pcVar6)(unaff_EBP + -0x138);\n            goto code_r0x004198d7;\n        }\n        if (uVar3 == 0x83) {\n            cVar7 = fcn.00416ae4(*(unaff_EBP + 0xc), unaff_EBP + -0x24);\n            if (cVar7 != '\\0') {\n                dVar5 = *(unaff_EBP + -0x21);\n                cVar7 = *(unaff_EBP + -0x23);\n                while (cVar7 != '\\0') {\n                    pcVar1 = unaff_EBP + -0x23;\n                    *pcVar1 = *pcVar1 + -1;\n                    dVar5 = dVar5 / *0x43fa60;\n                    cVar7 = *pcVar1;\n                }\n                if (*(unaff_EBP + -0x22) == '\\0') {\n                    dVar5 = -dVar5;\n                }\n                *(unaff_EBP + -0x80) = dVar5;\n                *(unaff_EBP + -0x88) = 5;\n                *(unaff_EBP + -4) = 0xe;\n                fcn.0041c3c7(unaff_EBP + -0x88);\n                iVar13 = unaff_EBP + -0x88;\n                goto code_r0x00419669;\n            }\n        }\n        else if (uVar3 == 0x85) {\n            cVar7 = fcn.00416b17(*(unaff_EBP + 0xc), unaff_EBP + -0x44);\n            if (cVar7 != '\\0') {\n                *(unaff_EBP + -0x20) = 0;\n                *(unaff_EBP + -0x18) = 0;\n                fcn.00414fd0(*(unaff_EBP + -0x44), *(unaff_EBP + -0x42), *(unaff_EBP + -0x40));\n                *(unaff_EBP + -0x70) = *(unaff_EBP + -0x20);\n                *(unaff_EBP + -0x78) = 7;\n                *(unaff_EBP + -4) = 0xf;\n                fcn.0041c3c7(unaff_EBP + -0x78);\n                iVar13 = unaff_EBP + -0x78;\n                goto code_r0x00419669;\n            }\n        }\n        else if (uVar3 == 0x86) {\n            cVar7 = fcn.00416b17(*(unaff_EBP + 0xc), unaff_EBP + -0x44);\n            if (cVar7 != '\\0') {\n                *(unaff_EBP + -0x20) = 0;\n                *(unaff_EBP + -0x18) = 0;\n                fcn.00414fec(*(unaff_EBP + -0x44), *(unaff_EBP + -0x42), *(unaff_EBP + -0x40));\n                *(unaff_EBP + -0xb0) = *(unaff_EBP + -0x20);\n                *(unaff_EBP + -0xb8) = 7;\n                *(unaff_EBP + -4) = 0x10;\n                fcn.0041c3c7(unaff_EBP + -0xb8);\n                iVar13 = unaff_EBP + -0xb8;\n                goto code_r0x00419669;\n            }\n        }\n        else if ((uVar3 == 0x87) && (cVar7 = fcn.00416b4a(*(unaff_EBP + 0xc), unaff_EBP + -0x24),  cVar7 != '\\0')) {\n            puVar8 = fcn.00416cbe(*(unaff_EBP + -0x24), *(unaff_EBP + -0x22), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1e)\n                                  , *(unaff_EBP + -0x1c), *(unaff_EBP + -0x1a));\n            *(unaff_EBP + -0xa8) = 7;\n            *(unaff_EBP + -0xa0) = *puVar8;\n            *(unaff_EBP + -4) = 0x11;\n            fcn.0041c3c7(unaff_EBP + -0xa8);\n            iVar13 = unaff_EBP + -0xa8;\ncode_r0x00419669:\n            *(unaff_EBP + -4) = 0;\n            (*pcVar6)(iVar13);\n        }\n    }\ncode_r0x004198e2:\n    fcn.0041c5a1(unaff_EBP + -0x3c);\n    (*pcVar6)(unaff_EBP + -0x3c);\ncode_r0x004198f4:\n    fcn.00421dbc();\n    return;\n}\n",
        "token_count": 3387
    },
    "0041a04b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a04b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if (*(arg_8h + 0x50) == 0) {\n        uVar1 = fcn.00419c97(arg_8h, 0);\n        if (((-(arg_ch != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0xf4, arg_ch != 0, 1);\n        }\n    }\n    else {\n        fcn.00413d09(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0041b938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b938(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b79d(arg_8h);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041b850(arg_8h);\n        *arg_ch = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.0041b8b2();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "0041bc49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041bc49(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0041ba47(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0041b99e(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0041bbf9();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 219
    },
    "0041bf03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041bf03(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.00421cd0(0xc);\n    fcn.00408ff8();\n    fcn.00410b71(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.00411234(unaff_EBP + -0x10, 0x43daa8, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.00408ff8();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.00411234(unaff_EBP + -0x18, 0x43daa8, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.00403880(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402e20();\n    }\n    fcn.00403540();\n    fcn.00410be3(1);\n    fcn.00402e20();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 417
    },
    "0041c0dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041c0dd(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = fcn.0041c055(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00408613(uVar3);\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 239
    },
    "0041c3eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c3eb(uint arg_8h)\n\n{\n    fcn.004222e0(arg_8h, 0, 0x10);\n    return;\n}\n",
        "token_count": 44
    },
    "0041c92d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c92d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < arg_8h) {\n        if (arg_8h == 0x3e3) {\n            return 10;\n        }\n        if (arg_8h == 0x3e4) {\n            return 10;\n        }\n        if (arg_8h == 0x3e5) {\n            return 10;\n        }\n        if (arg_8h != 999) {\n            return 1;\n        }\n        return 5;\n    }\n    if (arg_8h == 0x10b) {\n        return 3;\n    }\n    if (arg_8h < 0x3f) {\n        if (arg_8h == 0x3e) {\n            return 8;\n        }\n        if (arg_8h < 0x1a) {\n            if (arg_8h == 0x19) {\n                return 9;\n            }\n            if (arg_8h < 0x19) {\n    // switch table (25 cases) at 0x41cb3d\n                switch(*(arg_8h * 4 + 0x41cb3d)) {\n                case 0x41c96e:\n                    return 0;\n                case 0x41c975:\n                    return 2;\n                case 0x41c97c:\n                    return 4;\n                case 0x41c983:\n                    return 7;\n                case 0x41c9b3:\n                    return 9;\n                case 0x41ca39:\n                    return 3;\n                case 0x41ca62:\n                    return 10;\n                case 0x41ca9e:\n                    return 6;\n                case 0x41caf1:\n                    return 5;\n                case 0x41cb33:\n                    return 1;\n                }\n            }\n            return 1;\n        }\n        if (0x27 < arg_8h) {\n            if (8 < arg_8h - 0x34) {\n                return 1;\n            }\n    // switch table (9 cases) at 0x41cba1\n            switch(*((arg_8h - 0x34) * 4 + 0x41cba1)) {\n            case 0x41ca39:\n                return 3;\n            case 0x41ca62:\n                return 10;\n            case 0x41ca9e:\n                return 6;\n            case 0x41caf1:\n                return 5;\n            case 0x41cb33:\n                return 1;\n            }\n        }\n        if (arg_8h == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < arg_8h) {\n            if (arg_8h == 0x21) {\n                return 0xc;\n            }\n            if (arg_8h == 0x22) {\n                return 3;\n            }\n            if (arg_8h == 0x24) {\n                return 4;\n            }\n            if (arg_8h != 0x26) {\n                return 1;\n            }\n            return 0xe;\n        }\n        if (arg_8h == 0x20) {\n            return 0xb;\n        }\n        if (arg_8h == 0x1a) {\n            return 6;\n        }\n        if (arg_8h == 0x1b) {\n            return 9;\n        }\n        iVar1 = arg_8h - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0041c9ac:\n        if (iVar1 == 1) {\n            return 9;\n        }\n    }\n    else {\n        if (arg_8h < 0x6c) {\n            if (arg_8h == 0x6b) {\n                return 2;\n            }\n            if (0x47 < arg_8h) {\n                if (arg_8h == 0x50) {\n                    return 5;\n                }\n                if (arg_8h == 0x52) {\n                    return 5;\n                }\n                if (arg_8h == 0x55) {\n                    return 3;\n                }\n                if (arg_8h == 0x56) {\n                    return 5;\n                }\n                if (arg_8h != 0x58) {\n                    return 1;\n                }\n                return 10;\n            }\n            if (arg_8h == 0x47) {\n                return 5;\n            }\n            if (arg_8h == 0x40) {\n                return 5;\n            }\n            if (arg_8h == 0x41) {\n                return 5;\n            }\n            if (arg_8h == 0x42) {\n                return 6;\n            }\n            if (arg_8h == 0x43) {\n                return 3;\n            }\n            iVar1 = arg_8h - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (arg_8h < 0x91) {\n                if (arg_8h == 0x90) {\n                    return 3;\n                }\n                if (arg_8h < 0x76) {\n                    if (arg_8h == 0x75) {\n                        return 10;\n                    }\n                    if (arg_8h == 0x6c) {\n                        return 0xc;\n                    }\n                    if (arg_8h == 0x6f) {\n                        return 3;\n                    }\n                    if (arg_8h != 0x70) {\n                        if (arg_8h == 0x71) {\n                            return 4;\n                        }\n                        if (arg_8h == 0x72) {\n                            return 6;\n                        }\n                        return 1;\n                    }\n                    return 0xd;\n                }\n                if (arg_8h == 0x7b) {\n                    return 3;\n                }\n                if (arg_8h == 0x7c) {\n                    return 3;\n                }\n                if (arg_8h == 0x7d) {\n                    return 3;\n                }\n                iVar1 = arg_8h - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0041c9ac;\n            }\n            if (arg_8h < 0xb7) {\n                if (arg_8h == 0xb6) {\n                    return 6;\n                }\n                if (arg_8h == 0x91) {\n                    return 7;\n                }\n                if (arg_8h == 0x9a) {\n                    return 3;\n                }\n                if (arg_8h == 0xa1) {\n                    return 3;\n                }\n                if (arg_8h == 0xa7) {\n                    return 0xc;\n                }\n                if (arg_8h != 0xaa) {\n                    return 1;\n                }\n                return 5;\n            }\n            if (arg_8h == 0xb7) {\n                return 5;\n            }\n            if (arg_8h == 0xbf) {\n                return 6;\n            }\n            if (arg_8h == 0xc1) {\n                return 6;\n            }\n            iVar1 = arg_8h - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\n            return 3;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1718
    },
    "0041d20a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d20a(uint8_t *arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    if (arg_ch < 0x16) goto code_r0x0041d21b;\ncode_r0x0041d216:\n    fcn.00408613();\ncode_r0x0041d21b:\n    uVar1 = *arg_8h;\n    iVar2 = *(arg_ch * 4 + 0x43fef0) + 4;\n    puVar3 = arg_8h;\n    do {\n        if (uVar1 == 0) {\n            return iVar2;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x43fe98;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x43fe40;\n            }\n            if (0x15 < (uVar1 & 0xbf)) goto code_r0x0041d216;\n            iVar2 = iVar2 + *(iVar4 + (uVar1 & 0xbf) * 4);\n        }\n        puVar3 = puVar3 + 1;\n        uVar1 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 307
    },
    "0041d2d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d2d5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x0041d2ed;\n    do {\n        fcn.00408613();\ncode_r0x0041d2ed:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.0041d2ab(arg_8h);\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.00403e54(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.00403e25(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.004222e0(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x0041d4cb;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.004222e0(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.0041d2ab(0);\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x0041d4d1;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.00403e25(arg_8h * 0xc);\n    fcn.00406fe1(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.004222e0(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.00403e54(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x0041d4cb:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041d4d1:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1399
    },
    "0041d4db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d4db(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (arg_8h < *(in_ECX + 8))) {\n        return arg_8h * 0xc + *(in_ECX + 4);\n    }\n    fcn.00408613();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 127
    },
    "0041d5d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d5d8(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.0041d2ab(0);\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.00403e54(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0041d678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d678(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_8h < 0) {\n        fcn.00408613();\n    }\n    if (*(in_ECX + 8) <= arg_8h) {\n        fcn.0041d2d5(arg_8h + 1, 0xffffffff);\n    }\n    fcn.0041d5ad(arg_ch);\n    return;\n}\n",
        "token_count": 112
    },
    "0041e096": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041e096(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch;\n    int32_t in_ECX;\n    bool bVar2;\n    \n    uVar1 = *(in_ECX + 0x2c);\n    bVar2 = uVar1 < *(in_ECX + 0x30);\n    if (bVar2) {\n        arg_ch = *(in_ECX + 0x20);\n        fcn.00406fe1(arg_8h, arg_ch, arg_ch * uVar1 + *(in_ECX + 0x28), arg_ch);\n        *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 178
    },
    "0041ee3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041ee3b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    fcn.00403260();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00404b25(*(unaff_EBP + 0xc));\n    if (iVar1 != 0) {\n        fcn.0041ecf7(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00402e20();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 237
    },
    "0041f0fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f0fb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0041f113;\n    do {\n        fcn.00408613();\ncode_r0x0041f113:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.00403e54(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0041f217;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00403e25(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.004222e0(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0041f17f:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.004222e0(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0041f17f;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0041f1b1:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0041f1b1;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00403e25(arg_8h << 2);\n    fcn.00406fe1(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.004222e0(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00403e54(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041f217:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 784
    },
    "0041f31d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f31d(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x41f32d;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 89
    },
    "0041f8c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f8c6(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar2 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0041f8db;\n    do {\n        fcn.00408613();\n        iVar4 = unaff_EDI;\ncode_r0x0041f8db:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar2 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.00403e54(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar4 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar2) {\n                iVar4 = iVar2;\n            }\n            uVar3 = fcn.00403e25(iVar4 << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.004222e0(uVar3, 0, iVar4 << 2);\n            *(in_ECX + 0xc) = iVar4;\n            goto code_r0x0041f9f7;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar2 <= unaff_EDI) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < iVar2) {\n                fcn.004222e0(*(in_ECX + 4) + iVar1 * 4, 0, (iVar2 - iVar1) * 4, iVar4);\n            }\n            goto code_r0x0041f9f7;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar4 < 4) {\n                iVar4 = 4;\n            }\n            else if (0x400 < iVar4) {\n                iVar4 = 0x400;\n            }\n        }\n        arg_8h = iVar4 + unaff_EDI;\n        if (iVar4 + unaff_EDI <= iVar2) {\n            arg_8h = iVar2;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00403e25(arg_8h << 2);\n    fcn.00406fe1(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.004222e0(iVar4 + *(in_ECX + 8) * 4, 0, (iVar2 - *(in_ECX + 8)) * 4);\n    fcn.00403e54(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041f9f7:\n    *(in_ECX + 8) = iVar2;\n    return;\n}\n",
        "token_count": 833
    },
    "0041fa01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fa01(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar2 = *(in_ECX + 8);\n            fcn.0041f8c6(iVar2 + arg_10h, 0xffffffff);\n            iVar2 = (iVar2 - arg_8h) * 4;\n            fcn.00411e31(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, iVar2, *(in_ECX + 4) + arg_8h * 4, iVar2);\n            fcn.004222e0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0041f8c6(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = *arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00408613();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 378
    },
    "0042027a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042027a(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0041f0fb(iVar1 + arg_10h, 0xffffffff);\n            fcn.00411e31(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.004222e0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0041f0fb(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00408613();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 391
    },
    "00421214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421214(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004211bd(fcn.0042879d, arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "00421a15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421a15(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00421951(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 46
    },
    "0042207a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042207a(uint arg_8h)\n\n{\n    fcn.00421f4e(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0042bc4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042bc60)\n// WARNING: Removing unreachable block (ram,0x0042bc66)\n// WARNING: Removing unreachable block (ram,0x0042bc68)\n\nvoid fcn.0042bc4c(void)\n\n{\n    return;\n}\n",
        "token_count": 65
    },
    "0042f159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f159(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042228c();\n        *puVar1 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x44e354;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0042f192": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f192(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042228c();\n        *puVar1 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x44e358;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 138
    },
    "0042f1cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f1cb(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042228c();\n        *puVar1 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x44e350;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 139
    },
    "004310ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004310ba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x449048, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0042228c();\n        *puVar1 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0043099b(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00431158();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 453
    },
    "00431186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431186(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004310ba(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "0043488e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043488e(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042228c();\n        *puVar1 = 0x16;\n        fcn.00425b7f(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x451630;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0043785a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043785a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.004205d2(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.004018d0(arg_8h_00 + 0xc);\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 200
    },
    "0043844b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043844b(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (-*(in_ECX + 0x14) - 1U <= arg_8h) {\n        fcn.004377ea();\n    }\n    if (arg_8h != 0) {\n        iVar2 = *(in_ECX + 0x14) + arg_8h;\n        cVar1 = fcn.004014f0(iVar2, 0);\n        if (cVar1 != '\\0') {\n            fcn.00437e8e(*(in_ECX + 0x14), arg_8h, arg_ch);\n            fcn.00401250(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00438efd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00438efd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x44345c;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.00438ead(*(unaff_EBP + 8), arg_ch_00);\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 311
    },
    "0043977e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043977e(uint param_1)\n\n{\n    fcn.004222e0(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 44
    },
    "00420d17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420d17(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00427bf2(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00439186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439186(int32_t *param_1)\n\n{\n    if (*param_1 < 4) {\n        fcn.00438f87(*param_1 * 0x18 + 0x4516e0);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00401250": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401250(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "004018d0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004018d0(int32_t param_1, uint param_2)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.00401710(param_2, 0, 0xffffffff);\n    return param_1;\n}\n",
        "token_count": 96
    },
    "004019e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004019e0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004017f0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 162
    },
    "004050c7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004050c7(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "00405141": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405141(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00408ff8();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 149
    },
    "004057bb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004057bb(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(arg_8h + 4);\n    if ((iVar2 == 0x200) || (iVar2 == 0xa0)) {\n        iVar2 = fcn.00408a40();\n        iVar3 = fcn.00405708(*(arg_8h + 0x14), *(arg_8h + 0x18));\n        if ((iVar3 == 0) || (*(arg_8h + 4) != *(iVar2 + 0x54))) {\n            *(iVar2 + 0x4c) = *(arg_8h + 0x14);\n            *(iVar2 + 0x50) = *(arg_8h + 0x18);\n            *(iVar2 + 0x54) = *(arg_8h + 4);\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    else if ((iVar2 == 0xf) || (iVar2 == 0x118)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 291
    },
    "00407604": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407604(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    in_ECX[5] = NULL;\n    *in_ECX = vtable.CList_class_IControlSiteFactory___class_IControlSiteFactory__.0;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 117
    },
    "00408e78": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408e78(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00421d03(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.00403260();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.004032b0(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.00403e25(0xc);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.004101f7(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00408b6a();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.004101f7(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00408d8e();\n    }\n    pcVar3 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *(pcVar3 + 4) = uVar5;\n    iVar4 = fcn.004101f7(0x14);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 6;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00408e11();\n    }\n    *(extraout_ECX[0x1e] + 8) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 884
    },
    "00410dc1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00410dc1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t arg_ch_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.0041cce2(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041bbbb(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041bbbb(4);\n    arg_ch_00 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00410e16;\n    do {\n        arg_ch_00 = fcn.00408613();\ncode_r0x00410e16:\n    } while (*(unaff_EBP + 0x10) == arg_ch_00);\n    fcn.0041b99e(7, arg_ch_00);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 469
    },
    "00413899": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413899(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[8] = arg_8h;\n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[9] = arg_ch;\n    in_ECX[4] = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "004138c6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004138c6(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(*(param_1 + 0x14));\n    *(param_1 + 0x14) = 0;\n    (*pcVar1)(*(param_1 + 0x18));\n    *(param_1 + 0x18) = 0;\n    fcn.00403e54(*(param_1 + 8));\n    *(param_1 + 8) = 0;\n    fcn.00403e54(*(param_1 + 0x10));\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "00414a4c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414a4c(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CDataSourceControl.0;\n    in_ECX[1] = arg_8h;\n    in_ECX[2] = NULL;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[5] = NULL;\n    fcn.0041bdaf(10);\n    in_ECX[0xd] = NULL;\n    in_ECX[0xe] = NULL;\n    in_ECX[0xf] = NULL;\n    in_ECX[0x10] = NULL;\n    in_ECX[0x11] = NULL;\n    in_ECX[0x12] = NULL;\n    in_ECX[0x13] = NULL;\n    in_ECX[0x14] = NULL;\n    in_ECX[0x15] = NULL;\n    in_ECX[0x16] = NULL;\n    return;\n}\n",
        "token_count": 227
    },
    "00414bce": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414bce(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    *(in_ECX + 1) = arg_10h;\n    in_ECX[3] = 0;\n    in_ECX[5] = 0;\n    in_ECX[2] = arg_ch;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 110
    },
    "00415193": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00415193(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00402e00(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    arg_8h[8] = arg_34h;\n    arg_8h[5] = arg_30h;\n    arg_8h[9] = arg_20h;\n    *arg_8h = arg_ch;\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[1] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = iVar1;\n    if (arg_38h == iVar1) {\n        arg_8h[7] = 1;\n        arg_8h[1] = arg_24h;\n    }\n    if (arg_28h != iVar1) {\n        arg_8h[7] = arg_8h[7] | 2;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0041b228": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b228(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    code *extraout_ECX_00;\n    code *pcVar2;\n    code *extraout_EDX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00411667();\n    pcVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar2 = *(unaff_EBP + 0xc);\n    *extraout_ECX = vtable.CMemFile.0;\n    if ((pcVar3 == NULL) && (pcVar2 != NULL)) {\n        fcn.00408613();\n        pcVar2 = extraout_ECX_00;\n        pcVar3 = extraout_EDX;\n    }\n    pcVar1 = *(unaff_EBP + 0x10);\n    extraout_ECX[5] = NULL;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[7] = ~-(pcVar1 != NULL) & pcVar2;\n    extraout_ECX[6] = pcVar2;\n    extraout_ECX[8] = pcVar3;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 356
    },
    "0041b493": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b493(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0041b5a8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041b5a8(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0041b493();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.0041176f();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 210
    },
    "0041bbbb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bbbb(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    *in_ECX = vtable.CMapPtrToPtr.0;\n    if (arg_8h < 1) {\n        arg_8h = 0xa;\n    }\n    in_ECX[1] = NULL;\n    in_ECX[2] = 0x11;\n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[5] = NULL;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 136
    },
    "0041bdaf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bdaf(code *arg_8h)\n\n{\n    code **in_ECX;\n    \n    in_ECX[3] = NULL;\n    in_ECX[4] = NULL;\n    in_ECX[2] = NULL;\n    in_ECX[1] = NULL;\n    in_ECX[5] = NULL;\n    *in_ECX = vtable.CPtrList.0;\n    in_ECX[6] = arg_8h;\n    return;\n}\n",
        "token_count": 108
    },
    "0041d72a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d72a(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.00402e20();\n    fcn.00402e20();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0041b0a4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0a4(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    uint *in_ECX;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*in_ECX);\n    arg_8h_00 = *(in_ECX + 2);\n    fcn.0041ad93(arg_8h_00);\n    fcn.0041ad93(arg_8h_00);\n    fcn.0041af78(*in_ECX, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 139
    },
    "0041ce53": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce53(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0041cdbe(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0041395b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041395b(uint32_t arg_8h)\n\n{\n    if (((arg_8h & 0x4000) != 0) || ((arg_8h & 0x2000) != 0)) {\ncode_r0x0041396c:\n        return 4;\n    }\n    if ((arg_8h & 0x1000) != 0) {\n        return 2;\n    }\n    arg_8h = arg_8h & 0xffff;\n    if (arg_8h < 0x49) {\n        if (arg_8h == 0x48) {\n            return 4;\n        }\n        if (arg_8h - 2 < 0x14) {\n    // switch table (20 cases) at 0x4139c7\n            switch(*((arg_8h - 2) * 4 + 0x4139c7)) {\n            case 0x41396a:\n                goto code_r0x0041396c;\n            case 0x4139c0:\n                goto code_r0x004139c3;\n            case 0x4139c3:\n                return 2;\n            }\n        }\n        return 8;\n    }\n    if ((arg_8h != 0x80) && (arg_8h != 0x81)) {\n        if (arg_8h == 0x82) {\n            return 2;\n        }\n        if (arg_8h != 0x83) {\n            if (arg_8h == 0x85) {\n                return 2;\n            }\n            if (arg_8h != 0x86) {\n                if (arg_8h != 0x87) {\n                    return 8;\n                }\n                return 2;\n            }\n            return 2;\n        }\n    }\ncode_r0x004139c3:\n    return 1;\n}\n",
        "token_count": 422
    },
    "00416e50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00416e50(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x443304, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.00416a45();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00418a8f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nint32_t __fastcall fcn.00418a8f(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = *(param_1 + 4);\n    if (iVar4 != 0) goto code_r0x00418aaa;\n    do {\n        iVar4 = fcn.00408613();\ncode_r0x00418aaa:\n    } while ((*(iVar4 + 0x28) == 0) || (var_4h = fcn.0040cac8(),  var_4h == 0));\n    iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(var_4h + 0x20));\n    var_14h = iVar4 == 0;\n    if (var_14h != 0) {\n        arg_8h = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        iVar4 = fcn.0040b774(arg_8h);\n        pcVar3 = _sym.imp.USER32.dll_GetWindowRect;\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar4 + 0x20), &var_34h);\n        (*pcVar3)(*(var_4h + 0x20), &var_24h);\n        var_28h = var_28h - var_30h;\n        var_30h = 0;\n        var_34h = 0;\n        fcn.0040e63b(var_2ch / 2, var_28h / 2, 0, 0, 0);\n        fcn.0040e67b(1);\n    }\n    puVar1 = *(*(param_1 + 4) + 0x50);\n    iVar4 = (***puVar1)(puVar1, 0x43f6f8, param_1 + 0x48);\n    if (iVar4 < 0) {\n        puVar1 = *(*(param_1 + 4) + 0x50);\n        iVar4 = (***puVar1)(puVar1, 0x43f750, &var_ch);\n        if (iVar4 < 0) {\n            return iVar4;\n        }\n        (**(*var_ch + 0x14))(var_ch, &var_10h);\n        (**(*var_ch + 8))(var_ch);\n        if (var_10h == NULL) {\n            return -0x7fffbffb;\n        }\n        var_8h = (***var_10h)(var_10h, 0x442bb4, param_1 + 8);\n        (**(*var_10h + 8))(var_10h);\n        if (var_8h < 0) {\n            return var_8h;\n        }\n        puVar1 = *(param_1 + 8);\n        (***puVar1)(puVar1, 0x442bc4, param_1 + 0xc);\n    }\n    else {\n        piVar2 = *(param_1 + 0x48);\n        var_8h = (**(*piVar2 + 0xc))(piVar2, 0, 0x442e44, param_1 + 0x4c);\n        if (*(param_1 + 0x4c) == 0) {\n            var_8h = -0x7fffbffd;\n        }\n        if (var_8h < 0) {\n            if (var_14h == 0) {\n                return var_8h;\n            }\n            fcn.0040e63b(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n            fcn.0040e67b(0);\n            return var_8h;\n        }\n    }\n    iVar4 = fcn.00417fed();\n    if (var_14h != 0) {\n        fcn.0040e63b(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n        fcn.0040e67b(0);\n    }\n    return iVar4;\n}\n",
        "token_count": 1094
    },
    "0041c167": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041c167(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.00421070(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "0040743e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040743e(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00412402();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 142
    },
    "004085b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004085b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00410921(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0040cbd3": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0040cbd3(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00410996();\n    return param_1;\n}\n",
        "token_count": 144
    },
    "0040f8f2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f8f2(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar2 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    arg_8h_00 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar2 = fcn.0040f752(arg_8h_00);\n    if (iVar2 == 0) {\n        fcn.0040f19b();\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 305
    },
    "0041b9fc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b9fc(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00403e54(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00412402();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "0041bcc7": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bcc7(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00412402();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00439813": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00439813(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004397df();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0x900;\n    param_1[4] = 0x443480;\n    iVar1 = fcn.00439794();\n    if (iVar1 < 0) {\n        *0x44ed3c = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 142
    },
    "0040fe8d": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fe8d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 382
    },
    "0040ff20": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ff20(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0040fe8d();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 166
    },
    "00410caa": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410caa(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    fcn.00410c4e();\n    *(param_1 + 0x24) = 0;\n    fcn.00410c08();\n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *(param_1 + 0x3c) = uVar2;\n    uVar2 = (*pcVar1)(0, 0x7f00);\n    *(param_1 + 0x40) = uVar2;\n    *(param_1 + 0x10) = 2;\n    *(param_1 + 0x14) = 2;\n    *(param_1 + 0x50) = 0;\n    *(param_1 + 0x44) = 0;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "00433dc0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00433dc0(void)\n\n{\n    *0x44e594 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "00401900": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401900(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004017f0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 102
    },
    "004034f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.004034f0(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    if (param_1 == NULL) {\n        return param_1;\n    }\n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 + -pcVar1;\n}\n",
        "token_count": 109
    },
    "00403900": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403900(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00403650(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403650(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 129
    },
    "00403b30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00403b30(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00403650(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403650(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00403e25": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403e25(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00420bc0(arg_8h);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44c1ac == NULL) break;\n        iVar1 = (**0x44c1ac)(arg_8h);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "00403e5f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403e5f(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00420bc0(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44c1ac == NULL) break;\n        iVar1 = (**0x44c1ac)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00403e84": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403e84(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    if (*0x44ed60 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x00403ebe;\ncode_r0x00403eb9:\n        do {\n            fcn.00408613();\ncode_r0x00403ebe:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            iVar3 = iVar2;\n            *0x44ed50 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\");\n            *0x44ed54 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x44ed58 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x44ed5c = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            iVar2 = iVar3;\n            if (*0x44ed50 == 0) {\n                if ((*0x44ed54 != 0) || (*0x44ed58 != 0)) goto code_r0x00403eb9;\n            }\n            else if ((*0x44ed54 == 0) || (*0x44ed58 == 0)) goto code_r0x00403eb9;\n        } while (*0x44ed5c != 0);\n        *0x44ed60 = '\\x01';\n    }\n    return;\n}\n",
        "token_count": 393
    },
    "00404370": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404370(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        return;\n    }\n    if (arg_8h == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (arg_8h == 0x16) goto code_r0x0040439a;\n        if (arg_8h == 0x22) goto code_r0x0040439a;\n        if (arg_8h == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00402e00(uVar1);\ncode_r0x0040439a:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 196
    },
    "004049f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004049f3(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040586e();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CWinApp.0;\n    if (*(unaff_EBP + 8) == 0) {\n        extraout_ECX[0x14] = NULL;\n    }\n    else {\n        pcVar1 = fcn.004223ce(*(unaff_EBP + 8));\n        extraout_ECX[0x14] = pcVar1;\n    }\n    iVar2 = fcn.00408ff8();\n    if (iVar2 != 0) goto code_r0x00404a3a;\n    do {\n        fcn.00408613();\ncode_r0x00404a3a:\n        iVar3 = fcn.004046f7();\n    } while (iVar3 == 0);\n    *(iVar3 + 4) = extraout_ECX;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    extraout_ECX[0xb] = pcVar1;\n    pcVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    extraout_ECX[0xc] = pcVar1;\n    *(iVar2 + 4) = extraout_ECX;\n    *(extraout_ECX + 0x92) = 0;\n    *(extraout_ECX + 0x24) = 0;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x26] = 0x200;\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 690
    },
    "004075c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004075c9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    puVar3 = *(in_ECX + 8);\n    iVar2 = 0;\n    do {\n        if (puVar3 == NULL) {\n            return iVar2;\n        }\n        ppiVar1 = puVar3 + 2;\n        puVar3 = *puVar3;\n    } while ((*ppiVar1 == NULL) || (iVar2 = (**(**ppiVar1 + 4))(arg_8h, arg_ch),  iVar2 == 0));\n    return iVar2;\n}\n",
        "token_count": 164
    },
    "0040767d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040767d(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    if (arg_ch == NULL) {\n        puVar2 = *(in_ECX + 4);\n    }\n    else {\n        puVar2 = *arg_ch;\n    }\n    while( true ) {\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        iVar1 = fcn.004073f7(puVar2 + 2, &arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 162
    },
    "0040a3d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t unaff_ESI;\n    \n    iVar2 = 0x7fffffff;\n    iVar1 = unaff_ESI;\n    if (arg_8h == 0x7fffffff) goto code_r0x0040a3f3;\n    if (*in_ECX == 0x7fffffff) goto code_r0x0040a3f1;\n    if (*in_ECX == arg_8h) goto code_r0x0040a3f1;\n    do {\n        iVar2 = fcn.00408613();\n        in_ECX = extraout_ECX;\ncode_r0x0040a3f1:\n        *in_ECX = arg_8h;\n        iVar1 = unaff_ESI;\ncode_r0x0040a3f3:\n        arg_8h = iVar1;\n        unaff_ESI = arg_8h;\n    } while (*in_ECX == iVar2);\n    fcn.00410b71(*in_ECX);\n    return;\n}\n",
        "token_count": 273
    },
    "0040a5ad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a5ad(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t nPos;\n    \n    if (arg_8h == 0) {\n        fcn.00408613();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    nPos = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040a38a(nPos);\n            if (iVar2 == 0) {\n                iVar2 = fcn.0040a375(nPos);\n                if (iVar2 == arg_ch) goto code_r0x0040a60f;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x0040a60f:\n                    iVar1 = fcn.0041c0dd(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0040a5ad(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            nPos = nPos + 1;\n        } while (nPos < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 298
    },
    "0040baf3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040baf3(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *arg_ch;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0040b7a0(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x108))(arg_ch),  iVar2 != 0)) break;\n        if (iVar3 == arg_8h) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 182
    },
    "0040bc69": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040bc69(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_1ch, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_1ch);\n    }\n    fcn.0040b6ce();\n    return;\n}\n",
        "token_count": 134
    },
    "0040c07e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040c07e(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t *piVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            arg_8h = (*pcVar1)(iVar2);\n            piVar3 = fcn.0040b774(arg_8h);\n            if ((piVar3 == NULL) || (iVar2 = (**(*piVar3 + 0x128))(),  iVar2 != 0)) break;\n            iVar2 = piVar3[8];\n        }\n        return piVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 198
    },
    "0040cac8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cac8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            arg_8h = iVar1;\n            iVar1 = fcn.0040ca7e(arg_8h);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040b774(arg_8h);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0040fe21": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040fe21(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint unaff_EBP;\n    \n    if (param_1 != NULL) goto code_r0x0040fe2f;\n    do {\n        fcn.00408613();\n        param_1 = extraout_ECX;\ncode_r0x0040fe2f:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x0040fe06;\n    do {\n        iVar1 = fcn.00408613(unaff_EBP);\ncode_r0x0040fe06:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 227
    },
    "00410181": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410181(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar4 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar4);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0xffff) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar2 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar2 != 0) {\n                return hWnd;\n            }\n        }\n        uVar4 = 2;\n    } while( true );\n}\n",
        "token_count": 293
    },
    "00410347": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410347(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *in_ECX;\n    if (arg_8h_00 == 0) {\n        var_4h = 0;\n    }\n    else {\n        if (arg_8h_00 == arg_8h) {\n            piVar1 = fcn.0041030f(arg_8h);\n            *in_ECX = *piVar1;\n        }\n        else {\n            do {\n                piVar1 = fcn.0041030f(arg_8h_00);\n                if (*piVar1 == arg_8h) break;\n                piVar1 = fcn.0041030f(arg_8h_00);\n                arg_8h_00 = *piVar1;\n            } while (arg_8h_00 != 0);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            puVar2 = fcn.0041030f(arg_8h);\n            puVar3 = fcn.0041030f(arg_8h_00);\n            *puVar3 = *puVar2;\n        }\n        var_4h = 1;\n    }\n    return var_4h;\n}\n",
        "token_count": 331
    },
    "0041050f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041050f(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    return;\n}\n",
        "token_count": 297
    },
    "004112e9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004112e9(uint param_1, int32_t param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    \n    iVar1 = 0;\n    iVar2 = param_2;\n    if (param_2 != 0) {\n        do {\n            if (*in_EAX == '\\0') break;\n            in_EAX = in_EAX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n        if (iVar2 != 0) goto code_r0x00411307;\n    }\n    iVar1 = -0x7ff8ffa9;\ncode_r0x00411307:\n    if (unaff_EDI != NULL) {\n        if (-1 < iVar1) {\n            *unaff_EDI = param_2 - iVar2;\n            return;\n        }\n        *unaff_EDI = 0;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00411cfa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411cfa(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    \n    do {\n        iVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 70
    },
    "00412402": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412402(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00403e54(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00412679": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412679(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_ch);\n        if (iVar1 == arg_8h) break;\n        arg_ch = (*_sym.imp.USER32.dll_GetWindow)(arg_ch, 2);\n    }\n    return arg_ch;\n}\n",
        "token_count": 118
    },
    "00412760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00412760(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar2 = NULL;\n    *(unaff_EBP + -4) = 0;\n    if ((extraout_ECX[9] == NULL) && (pcVar1 = extraout_ECX[10],  extraout_ECX[0xc] != NULL)) {\n        do {\n            (**(**(pcVar1 + pcVar2 * 4) + 8))(*(pcVar1 + pcVar2 * 4));\n            pcVar2 = pcVar2 + 1;\n        } while (pcVar2 < extraout_ECX[0xc]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041dfcf();\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 278
    },
    "00414c42": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414c42(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_10h != NULL) {\n        *arg_10h = 0;\n    }\n    iVar2 = *(in_ECX + 0x94);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if (*(iVar2 + 8) == arg_8h) break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    uVar1 = fcn.00414c09();\n    *arg_ch = uVar1;\n    return 0;\n}\n",
        "token_count": 174
    },
    "00416a45": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00416a45(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t arg_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    arg_8h = 0;\n    var_4h = 0;\n    if (uVar1 != 0) {\n        do {\n            cVar2 = fcn.004137b8(arg_8h);\n            if ((cVar2 != '\\0') && (var_4h = fcn.00414d2e(arg_8h),  var_4h < 0)) {\n                return var_4h;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < uVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 207
    },
    "00416ce4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416ce4(int32_t *arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    if (arg_8h == NULL) {\ncode_r0x00416cf7:\n        iVar3 = -0x7fffbffb;\n    }\n    else {\n        if (in_ECX[1] == 0) {\n            return 0;\n        }\n        ppcVar1 = *arg_8h;\n        arg_8h = NULL;\n        iVar3 = (**ppcVar1)(puVar2, 0x43f79c, &arg_8h);\n        if (-1 < iVar3) {\n            if (*in_ECX == 0) {\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n                goto code_r0x00416cf7;\n            }\n            uVar4 = 0;\n            if (in_ECX[1] != 0) {\n                do {\n                    (**(*arg_8h + 0x18))(arg_8h, *(*in_ECX + uVar4 * 8), 0);\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < in_ECX[1]);\n            }\n        }\n        in_ECX[1] = 0;\n        fcn.00403e54(*in_ECX);\n        *in_ECX = 0;\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 406
    },
    "0041787a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041787a(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar2 = 0;\n    arg_8h = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00417490(arg_8h);\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 161
    },
    "00419de1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419de1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar3 = 0;\n    iVar4 = iVar3;\n    if (arg_ch != 0) {\n        do {\n            iVar4 = arg_ch;\n            uVar2 = (*pcVar1)(*(iVar4 + 0x20), 0xfffffff0);\n            if ((uVar2 & 0xc0000000) != 0x40000000) {\n                return iVar3;\n            }\n            if (iVar4 == arg_8h) {\n                return iVar3;\n            }\n            arg_8h_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x20));\n            arg_ch = fcn.0040b774(arg_8h_00);\n            uVar2 = (*pcVar1)(*(arg_ch + 0x20), 0xffffffec);\n            iVar3 = iVar4;\n        } while ((uVar2 & 0x10000) == 0);\n    }\n    return iVar4;\n}\n",
        "token_count": 293
    },
    "00419eff": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419eff(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (arg_8h != 0) {\n        piVar4 = NULL;\n        iVar3 = arg_8h;\n        do {\n            iVar1 = *(iVar3 + 0x4c);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x50),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x20));\n            iVar3 = fcn.0040b774(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xb0))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0040b774(uVar2);\n            if ((iVar3 != arg_8h) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(arg_8h + 0x20)),  iVar3 != 0)) {\n                if (*(arg_8h + 0x50) != 0) {\n    // WARNING: Could not recover jumptable at 0x0040e6ff. Too many branches\n    // WARNING: Treating indirect jump as call\n                    (**(**(arg_8h + 0x50) + 0xb0))();\n                    return;\n                }\n                uVar2 = (*_sym.imp.USER32.dll_SetFocus)(*(arg_8h + 0x20));\n                fcn.0040b774(uVar2);\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00419f72": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f72(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    \n    if (((arg_8h != 0) && (iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg_8h + 0x20)),  iVar2 != 0)) &&\n       (arg_8h != arg_ch)) {\n        do {\n            piVar1 = *(arg_8h + 0x4c);\n            if (piVar1 != NULL) {\n                iVar2 = piVar1[0x1a];\n                iVar3 = 0;\n                if (((iVar2 != 0) && (*(iVar2 + 0x74) == 0)) && (iVar3 = fcn.0040b774(*(iVar2 + 0x24)),  iVar3 == 0)) {\n                    return;\n                }\n                if ((arg_ch != 0) && (iVar3 != 0)) {\n                    if (arg_ch == iVar3) {\n                        return;\n                    }\n                    iVar2 = fcn.00419d91(arg_ch);\n                    if (iVar2 != 0) {\n                        return;\n                    }\n                }\n                (**(*piVar1 + 0x60))(0);\n                return;\n            }\n            arg_8h_00 = (*_sym.imp.USER32.dll_GetParent)(*(arg_8h + 0x20));\n            arg_8h = fcn.0040b774(arg_8h_00);\n        } while (arg_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "00419ff1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00419ff1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0040e544(arg_ch);\n    if (iVar1 == 0) {\n        iVar2 = fcn.00419e3a(arg_8h, 0, 1);\n        iVar1 = iVar2;\n        if (iVar2 == arg_8h) {\n            iVar1 = 0;\n        }\n        else {\n            do {\n                iVar3 = fcn.0040e620();\n                if (iVar3 == arg_ch) {\n                    return iVar1;\n                }\n                iVar1 = fcn.00419e3a(arg_8h, iVar1, 1);\n            } while ((iVar1 != 0) && (iVar1 != iVar2));\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 218
    },
    "0041a09a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a09a(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    \n    if ((arg_ch == 0) ||\n       (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_ch + 0x20), 0xffffffec),  (uVar1 & 0x10000) != 0)) {\n        iVar2 = fcn.00419e3a(arg_8h, 0, 3);\n    }\n    else {\n        iVar2 = fcn.00419de1(0x41a0c3, arg_ch);\n    }\n    arg_8h_00 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.0041a04b(arg_8h_00, 0);\n            arg_8h_00 = fcn.00419e3a(arg_8h, arg_8h_00, 0);\n            if (arg_8h_00 == 0) {\n                return;\n            }\n        } while (arg_8h_00 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "0041ba47": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041ba47(uint32_t arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    *arg_10h = arg_8h >> 4;\n    uVar2 = (arg_8h >> 4) % *(in_ECX + 8);\n    *arg_ch = uVar2;\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 196
    },
    "0041ba82": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ba82(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (in_ECX == 0) {\n        fcn.00408613();\n        in_ECX = extraout_ECX;\n    }\n    if (*(in_ECX + 4) != 0) {\n        for (puVar1 = *(*(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == arg_8h) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "0041baf0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041baf0(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint *puVar2;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        puVar2 = *(in_ECX + 4) + ((arg_8h >> 4) % *(in_ECX + 8)) * 4;\n        puVar1 = *puVar2;\n        while (arg_8h_00 = puVar1,  arg_8h_00 != NULL) {\n            if (arg_8h_00[1] == arg_8h) {\n                *puVar2 = *arg_8h_00;\n                fcn.0041ba29(arg_8h_00);\n                return 0x1;\n            }\n            puVar2 = arg_8h_00;\n            puVar1 = *arg_8h_00;\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 252
    },
    "0041bd10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041bd10(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    \n    if (param_1 != 0) goto code_r0x0041bd19;\n    do {\n        fcn.00408613();\n        param_1 = extraout_ECX;\ncode_r0x0041bd19:\n        arg_8h = *(param_1 + 4);\n    } while (arg_8h == NULL);\n    iVar1 = *arg_8h;\n    iVar2 = arg_8h[2];\n    *(param_1 + 4) = iVar1;\n    if (iVar1 == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        *(iVar1 + 4) = 0;\n    }\n    fcn.0041bce9(arg_8h);\n    return iVar2;\n}\n",
        "token_count": 226
    },
    "0041bd86": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd86(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) goto code_r0x0041bd9f;\n    for (arg_ch = *(in_ECX + 4); (arg_ch != NULL && (arg_ch[2] != arg_8h)); arg_ch = *arg_ch) {\ncode_r0x0041bd9f:\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0041ceb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ceb0(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x0041cedd;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00402e00();\ncode_r0x0041cedd:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.0041ce53(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 250
    },
    "0041f38c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f38c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408ff8();\n    fcn.00410b71(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n        fcn.0041f369();\n    }\n    fcn.00410be3(0);\n    return;\n}\n",
        "token_count": 104
    },
    "0041fc33": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041fc33(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00421cd0(0xc);\n    if ((~*(extraout_ECX + 0x18) & 1) == 0) {\n        if (*(extraout_ECX + 0x38) != 0) goto code_r0x0041fd21;\n        iVar1 = fcn.00403e25(0x14);\n        *(unaff_EBP + -0x18) = iVar1;\n        *(unaff_EBP + -4) = 1;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00420253();\n        }\n        arg_ch = *(extraout_ECX + 0x40);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x38) = uVar2;\n        fcn.0041f0fb(1, arg_ch);\n        iVar1 = *(extraout_ECX + 0x38);\n        if (0 < *(iVar1 + 8)) goto code_r0x0041fcfa;\n        do {\n            iVar1 = fcn.00408613();\ncode_r0x0041fcfa:\n            **(iVar1 + 4) = 0;\n            *(extraout_ECX + 0x34) = 1;\n            *(unaff_EBP + -0x10) = 0;\n            fcn.0041fb5f(unaff_EBP + -0x10);\n            *(unaff_EBP + -0x18) = 0;\n            fcn.0041fa01(0, unaff_EBP + -0x18, 1);\ncode_r0x0041fd21:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x0041fd6a;\n            fcn.0041f89b();\n            fcn.0042027a(*(extraout_ECX + 0x34), *(unaff_EBP + 8), 1);\n            *(unaff_EBP + -0x14) = 0;\n            fcn.0041bac7(1, unaff_EBP + -0x14);\n        } while (*(unaff_EBP + -0x14) == 0);\n        uVar2 = *(extraout_ECX + 0x34);\n        *(unaff_EBP + 8) = 2;\n        fcn.0041fa01(uVar2, unaff_EBP + 8, 1);\n    }\n    else {\n        if (*(extraout_ECX + 0x38) == 0) {\n            iVar1 = fcn.00403e25(0x1c);\n            *(unaff_EBP + -0x18) = iVar1;\n            *(unaff_EBP + -4) = 0;\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.0041bbbb(*(extraout_ECX + 0x40));\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(extraout_ECX + 0x38) = uVar2;\n            fcn.0041b99e(*(extraout_ECX + 0x44), 1);\n            puVar3 = fcn.0041bc49(0);\n            *puVar3 = 0;\n            *(extraout_ECX + 0x34) = 1;\n        }\n        if (*(unaff_EBP + 8) == 0) goto code_r0x0041fd6a;\n        fcn.0041f89b();\n        puVar3 = fcn.0041bc49(*(unaff_EBP + 8));\n        *puVar3 = *(extraout_ECX + 0x34);\n    }\n    *(extraout_ECX + 0x34) = *(extraout_ECX + 0x34) + 1;\ncode_r0x0041fd6a:\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1051
    },
    "00425943": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425943(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00423ac0(0x448b58, 0xc);\n    fcn.004262ca(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x450bd0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x450bcc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00425987;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00421c42(arg_8h_00);\ncode_r0x00425987:\n        fcn.00421c42(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004259aa();\n    fcn.00423b05();\n    return;\n}\n",
        "token_count": 391
    },
    "004090d6": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.004090d6(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x4505b4 != 0) {\n        return *0x4505a8 != 0;\n    }\n    *0x4505b8 = fcn.0040907c();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x450598 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x43e684),  *0x450598 != 0)) &&\n         (*0x45059c = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x45059c != 0)) &&\n        ((*0x4505a0 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x4505a0 != 0 &&\n         (*0x4505a4 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x4505a4 != 0)))) &&\n       ((*0x4505ac = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x4505ac != 0 &&\n        ((*0x4505a8 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x4505a8 != 0 &&\n         (*0x4505b0 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x4505b0 != 0)))))) {\n        *0x4505b4 = 1;\n        return true;\n    }\n    *0x450598 = 0;\n    *0x45059c = 0;\n    *0x4505a0 = 0;\n    *0x4505a4 = 0;\n    *0x4505a8 = 0;\n    *0x4505ac = 0;\n    *0x4505b0 = 0;\n    *0x4505b4 = 1;\n    return false;\n}\n",
        "token_count": 479
    },
    "0041b745": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b745(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_EBX;\n    uint lpModuleName;\n    uint uStack16;\n    ushort uStack12;\n    char cStack10;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d680 ^ &stack0xfffffffc;\n    lpModuleName = str.mfcm90.dll._0_4_;\n    uStack16 = str.mfcm90.dll._4_4_;\n    uStack12 = str.mfcm90.dll._8_2_;\n    cStack10 = str.mfcm90.dll[10];\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&lpModuleName);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"AfxmReleaseManagedReferences\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(arg_8h);\n        }\n    }\n    fcn.00421070(unaff_EBX);\n    return;\n}\n",
        "token_count": 251
    },
    "00406d35": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00406d35(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *arg_8h;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint var_4h;\n    \n    fcn.00421d03(0x24);\n    *(unaff_EBP + -0x20) = arg_8h;\n    *(unaff_EBP + -0x1c) = arg_8h[0x18];\n    *(unaff_EBP + -0x18) = arg_8h[0x17];\n    iVar1 = fcn.00408ff8();\n    uVar5 = *(iVar1 + 0xc);\n    if (arg_8h[0x16] != 0) {\n        iVar1 = fcn.00408ff8();\n        uVar5 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, arg_8h[0x16], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\n    if (*(unaff_EBP + -0x1c) != 0) {\n        uVar2 = fcn.004068af();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0040b82d();\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (((*(unaff_EBP + -0x14) != 0) &&\n            (iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  *(unaff_EBP + -0x14) != iVar1)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14)),  iVar1 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n            *(unaff_EBP + -0x2c) = 1;\n            piVar3 = fcn.0040446b();\n            *(unaff_EBP + -0x24) = piVar3;\n            if (((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x128))(),  iVar1 != 0)) &&\n               (iVar1 = fcn.0040e6a2(),  iVar1 != 0)) {\n                fcn.0040e6bd(0);\n                *(unaff_EBP + -0x28) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.0040d297(arg_8h);\n        uVar2 = fcn.0040b774(*(unaff_EBP + -0x14));\n        iVar1 = fcn.00406b7f(*(unaff_EBP + -0x1c), uVar2, uVar5);\n        if (iVar1 != 0) {\n            if ((*(arg_8h + 0xf) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0040e5a5();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.0040b2fd(uVar5);\n            }\n            if (arg_8h[8] != 0) {\n                fcn.0040e8e1(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x28) != 0) {\n            fcn.0040e6bd(1);\n        }\n        if (*(unaff_EBP + -0x2c) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if ((*(unaff_EBP + -0x14) != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar1 == arg_8h[8])) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n        }\n        (**(*arg_8h + 0x60))();\n        fcn.004068eb();\n        if (arg_8h[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n    }\n    fcn.00421da8();\n    return;\n}\n",
        "token_count": 1359
    },
    "00406f2e": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f2e(uint hResData, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    \n    arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(hResData);\n    fcn.00406f01(arg_8h, arg_ch, 0, arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "0040e4af": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e4af(int32_t lpName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (lpName != 0) {\n        iVar1 = fcn.00408ff8();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, lpName, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0040e029(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "004088f1": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004088f1(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.00421c42(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0041bfa2": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0041bfa2(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.0041bf03();\n    iVar2 = fcn.00408ff8();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0040902b();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x144))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.00408a40();\n    iVar3 = fcn.00408ff8();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 357
    },
    "0041022a": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041022a(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < arg_8h) && (arg_8h < in_ECX[3])) && (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX),  iVar3 != 0))\n       && (arg_8h < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}