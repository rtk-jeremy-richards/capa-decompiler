{
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    ulong uVar1;\n    uint32_t arg_ch;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffcc;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    // [00] -r-x section size 61440 named .text\n    arg_ch = fcn.00401501(100, 0x10);\n    if (arg_ch == 0) {\n        fcn.00401421(\"Error allocation aligned memory.\", in_stack_ffffffcc);\n        uVar2 = 0xffffffff;\n    }\n    else {\n        if (arg_ch % 0x10 == 0) {\n            fcn.00401421(\"This pointer, %d, is aligned on %d\\n\", arg_ch);\n        }\n        else {\n            fcn.00401421(\"This pointer, %d, is not aligned on %d\\n\", arg_ch);\n        }\n        uVar2 = fcn.0040169d(arg_ch, 200, 0x10);\n        fcn.004014e7(uVar2);\n        iVar3 = fcn.00401439(200, 0x10, 5);\n        if (iVar3 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.00401518(iVar3, 200, 0x10, 5);\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n            }\n            else {\n                fcn.004014e7(iVar3);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", 0x410293, 0x410292, 0x410291, 0);\n                fcn.00401320();\n                uVar1 = *0x410320;\n                fcn.00401190(*0x410320, *0x410318);\n                fcn.00401390(\"%f, %f and %f form a right-angled triangle.\\n\", uVar1);\n                (*0x415593)();\n                uVar2 = 0;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 496
    },
    "00401d81": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d81(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    \n    arg_8h_00 = fcn.0040672e(arg_8h);\n    iVar2 = fcn.004066ca(arg_8h_00);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (arg_8h == 0x414128) {\n        iVar2 = 0;\n    }\n    else {\n        if (arg_8h != 0x414148) {\n            return 0;\n        }\n        iVar2 = 1;\n    }\n    *0x4165f0 = *0x4165f0 + 1;\n    if ((arg_8h[3] & 0x10cU) != 0) {\n        return 0;\n    }\n    piVar1 = iVar2 * 4 + 0x4165f4;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.00402ff2(0x1000);\n        *piVar1 = iVar2;\n        if (iVar2 == 0) {\n            arg_8h[2] = arg_8h + 5;\n            *arg_8h = arg_8h + 5;\n            arg_8h[6] = 2;\n            arg_8h[1] = 2;\n            goto code_r0x00401e02;\n        }\n    }\n    iVar2 = *piVar1;\n    arg_8h[2] = iVar2;\n    *arg_8h = iVar2;\n    arg_8h[6] = 0x1000;\n    arg_8h[1] = 0x1000;\ncode_r0x00401e02:\n    arg_8h[3] = arg_8h[3] | 0x1102;\n    return 1;\n}\n",
        "token_count": 445
    },
    "00401f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401f90(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t uVar3;\n    int32_t *piVar4;\n    uint64_t uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    code *pcVar9;\n    int32_t *piVar10;\n    int32_t iVar11;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    char *pcVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    bool bVar15;\n    int64_t iVar16;\n    uint *puVar17;\n    uint uVar18;\n    int32_t *var_278h;\n    int32_t *var_274h;\n    int32_t var_270h;\n    int32_t var_26ch;\n    char *var_264h;\n    uint var_260h;\n    int32_t var_25ch;\n    int32_t var_258h;\n    int32_t *var_254h;\n    int32_t var_250h;\n    uint var_24ch;\n    int32_t var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    uint8_t *var_230h;\n    uint var_22ch;\n    int32_t var_228h;\n    int32_t **var_224h;\n    char *var_220h;\n    int32_t *var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    var_25ch = arg_8h;\n    var_230h = arg_ch;\n    var_224h = arg_14h;\n    var_258h = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_260h = 0;\n    var_250h = 0;\n    var_23ch = 0;\n    fcn.00401e49(arg_10h);\n    if (arg_8h != 0) {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            iVar7 = fcn.0040672e(arg_8h);\n            if ((iVar7 == -1) || (iVar7 = fcn.0040672e(arg_8h),  iVar7 == -2)) {\n                iVar7 = 0x4147a8;\n            }\n            else {\n                iVar7 = fcn.0040672e(arg_8h);\n                uVar8 = fcn.0040672e(arg_8h);\n                iVar7 = (uVar8 & 0x1f) * 0x24 + *((iVar7 >> 5) * 4 + 0x417080);\n                arg_ch = var_230h;\n            }\n            if ((*(iVar7 + 8) & 3) == 0) {\n                iVar7 = fcn.0040672e(arg_8h);\n                if ((iVar7 == -1) || (iVar7 = fcn.0040672e(arg_8h),  iVar7 == -2)) {\n                    iVar7 = 0x4147a8;\n                }\n                else {\n                    iVar7 = fcn.0040672e(arg_8h);\n                    uVar8 = fcn.0040672e(arg_8h);\n                    iVar7 = (uVar8 & 0x1f) * 0x24 + *((iVar7 >> 5) * 4 + 0x417080);\n                    arg_ch = var_230h;\n                }\n                if ((*(iVar7 + 8) & 8) == 0) goto code_r0x004020e4;\n            }\n        }\n        else {\ncode_r0x004020e4:\n            if (arg_ch != NULL) {\n                var_211h = *arg_ch;\n                var_228h = 0;\n                var_220h = NULL;\n                var_254h = NULL;\n                iVar7 = 0;\n                piVar13 = *0x414388;\n                while ((*0x414388 = piVar13,  var_211h != 0 && (var_230h = arg_ch + 1,  -1 < var_228h))) {\n                    if (var_211h - 0x20 < 0x59) {\n                        uVar8 = *(var_211h + 0x410338) & 0xf;\n                    }\n                    else {\n                        uVar8 = 0;\n                    }\n                    var_270h = *(iVar7 + 0x410358 + uVar8 * 8) >> 4;\n    // switch table (8 cases) at 0x402bac\n                    switch(var_270h) {\n                    case 0:\ncode_r0x00402363:\n                        var_23ch = 0;\n                        iVar7 = fcn.00407432(var_211h, &var_24ch);\n                        if (iVar7 != 0) {\n                            fcn.00401eea();\n                            uVar1 = *var_230h;\n                            var_230h = var_230h + 1;\n                            if (uVar1 == 0) goto code_r0x00402007;\n                        }\n                        fcn.00401eea();\n                        break;\n                    case 1:\n                        var_218h = 0xffffffff;\n                        var_260h = 0;\n                        var_250h = 0;\n                        var_238h = NULL;\n                        var_234h = 0;\n                        var_210h = 0;\n                        var_23ch = 0;\n                        break;\n                    case 2:\n                        if (var_211h == 0x20) {\n                            var_210h = var_210h | 2;\n                        }\n                        else if (var_211h == 0x23) {\n                            var_210h = var_210h | 0x80;\n                        }\n                        else if (var_211h == 0x2b) {\n                            var_210h = var_210h | 1;\n                        }\n                        else if (var_211h == 0x2d) {\n                            var_210h = var_210h | 4;\n                        }\n                        else if (var_211h == 0x30) {\n                            var_210h = var_210h | 8;\n                        }\n                        break;\n                    case 3:\n                        if (var_211h == 0x2a) {\n                            var_224h = arg_14h + 1;\n                            var_238h = *arg_14h;\n                            if (var_238h < 0) {\n                                var_210h = var_210h | 4;\n                                var_238h = -var_238h;\n                            }\n                        }\n                        else {\n                            var_238h = var_238h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 4:\n                        var_218h = NULL;\n                        break;\n                    case 5:\n                        if (var_211h == 0x2a) {\n                            var_224h = arg_14h + 1;\n                            var_218h = *arg_14h;\n                            if (var_218h < 0) {\n                                var_218h = 0xffffffff;\n                            }\n                        }\n                        else {\n                            var_218h = var_218h * 10 + -0x30 + var_211h;\n                        }\n                        break;\n                    case 6:\n                        if (var_211h == 0x49) {\n                            uVar1 = *var_230h;\n                            if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                                var_230h = arg_ch + 3;\n                                var_210h = var_210h | 0x8000;\n                            }\n                            else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                                var_230h = arg_ch + 3;\n                                var_210h = var_210h & 0xffff7fff;\n                            }\n                            else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                                     ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                                var_270h = 0;\n                                goto code_r0x00402363;\n                            }\n                        }\n                        else if (var_211h == 0x68) {\n                            var_210h = var_210h | 0x20;\n                        }\n                        else if (var_211h == 0x6c) {\n                            if (*var_230h == 0x6c) {\n                                var_230h = arg_ch + 2;\n                                var_210h = var_210h | 0x1000;\n                            }\n                            else {\n                                var_210h = var_210h | 0x10;\n                            }\n                        }\n                        else if (var_211h == 0x77) {\n                            var_210h = var_210h | 0x800;\n                        }\n                        break;\n                    case 7:\n                        if (var_211h < 'e') {\n                            if (var_211h == 100) {\ncode_r0x00402675:\n                                var_210h = var_210h | 0x40;\ncode_r0x0040267c:\n                                var_220h = 0xa;\ncode_r0x00402686:\n                                if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                                    var_224h = arg_14h + 1;\n                                    if ((var_210h & 0x20) == 0) {\n                                        piVar13 = *arg_14h;\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar14 = NULL;\n                                        }\n                                        else {\n                                            piVar14 = piVar13 >> 0x1f;\n                                        }\n                                    }\n                                    else {\n                                        if ((var_210h & 0x40) == 0) {\n                                            piVar13 = *arg_14h;\n                                        }\n                                        else {\n                                            piVar13 = *arg_14h;\n                                        }\n                                        piVar14 = piVar13 >> 0x1f;\n                                    }\n                                }\n                                else {\n                                    piVar13 = *arg_14h;\n                                    piVar14 = arg_14h[1];\n                                    var_224h = arg_14h + 2;\n                                }\n                                if ((((var_210h & 0x40) != 0) && (piVar14 < 1)) && (piVar14 < 0)) {\n                                    bVar15 = piVar13 != NULL;\n                                    piVar13 = -piVar13;\n                                    piVar14 = -(piVar14 + bVar15);\n                                    var_210h = var_210h | 0x100;\n                                }\n                                if ((var_210h & 0x9000) == 0) {\n                                    piVar14 = NULL;\n                                }\n                                iVar16 = CONCAT44(piVar14, piVar13);\n                                if (var_218h < 0) {\n                                    var_218h = 0x1;\n                                }\n                                else {\n                                    var_210h = var_210h & 0xfffffff7;\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                }\n                                if ((piVar13 | piVar14) == 0) {\n                                    var_234h = 0;\n                                }\n                                piVar13 = &var_dh;\n                                while( true ) {\n                                    uVar5 = iVar16 >> 0x20;\n                                    piVar14 = var_218h + -1;\n                                    if ((var_218h < 1) && (iVar16 == 0)) break;\n                                    var_218h = piVar14;\n                                    iVar16 = fcn.00407490();\n                                    iVar7 = extraout_ECX + 0x30;\n                                    if (0x39 < iVar7) {\n                                        iVar7 = iVar7 + var_258h;\n                                    }\n                                    *piVar13 = iVar7;\n                                    piVar13 = piVar13 + -1;\n                                    var_264h = uVar5;\n                                }\n                                var_220h = &var_dh + -piVar13;\n                                var_21ch = piVar13 + 1;\n                                var_218h = piVar14;\n                                if (((var_210h & 0x200) != 0) && ((var_220h == NULL || (*var_21ch != '0')))) {\n                                    *piVar13 = '0';\n                                    var_220h = &var_ch + -piVar13;\n                                    var_21ch = piVar13;\n                                }\n                            }\n                            else if (var_211h < 'T') {\n                                if (var_211h == 0x53) {\n                                    if ((var_210h & 0x830) == 0) {\n                                        var_210h = var_210h | 0x800;\n                                    }\n                                    goto code_r0x00402473;\n                                }\n                                if (var_211h != 0x41) {\n                                    if (var_211h == 0x43) {\n                                        if ((var_210h & 0x830) == 0) {\n                                            var_210h = var_210h | 0x800;\n                                        }\ncode_r0x004024e6:\n                                        var_224h = arg_14h + 1;\n                                        if ((var_210h & 0x810) == 0) {\n                                            var_20ch._0_1_ = *arg_14h;\n                                            var_220h = 0x1;\n                                        }\n                                        else {\n                                            iVar7 = fcn.00407415(&var_220h, &var_20ch, 0x200, *arg_14h);\n                                            if (iVar7 != 0) {\n                                                var_250h = 1;\n                                            }\n                                        }\n                                        var_21ch = &var_20ch;\n                                        goto code_r0x004029be;\n                                    }\n                                    if ((var_211h != 0x45) && (var_211h != 0x47)) goto code_r0x004029be;\n                                }\n                                var_211h = var_211h + 0x20;\n                                var_260h = 1;\ncode_r0x00402404:\n                                var_210h = var_210h | 0x40;\n                                var_21ch = &var_20ch;\n                                var_264h = 0x200;\n                                pcVar12 = var_264h;\n                                piVar13 = var_21ch;\n                                if (var_218h < 0) {\n                                    var_218h = 0x6;\n                                }\n                                else if (var_218h == NULL) {\n                                    if (var_211h == 0x67) {\n                                        var_218h = 0x1;\n                                    }\n                                }\n                                else {\n                                    if (0x200 < var_218h) {\n                                        var_218h = 0x200;\n                                    }\n                                    if (0xa3 < var_218h) {\n                                        pcVar12 = var_218h + 0x15d;\n                                        var_254h = fcn.00402ff2(pcVar12);\n                                        piVar13 = var_254h;\n                                        if (var_254h == NULL) {\n                                            var_218h = 0xa3;\n                                            pcVar12 = var_264h;\n                                            piVar13 = var_21ch;\n                                        }\n                                    }\n                                }\n                                var_21ch = piVar13;\n                                var_264h = pcVar12;\n                                piVar14 = var_21ch;\n                                var_278h = *arg_14h;\n                                var_224h = arg_14h + 2;\n                                var_274h = arg_14h[1];\n                                puVar6 = &var_24ch;\n                                iVar7 = var_211h;\n                                puVar17 = &var_278h;\n                                piVar13 = var_21ch;\n                                pcVar12 = var_264h;\n                                piVar10 = var_218h;\n                                uVar18 = var_260h;\n                                pcVar9 = fcn.00405a3e(*0x414518);\n                                (*pcVar9)(puVar17, piVar13, pcVar12, iVar7, piVar10, uVar18, puVar6);\n                                uVar8 = var_210h & 0x80;\n                                if ((uVar8 != 0) && (var_218h == NULL)) {\n                                    puVar6 = &var_24ch;\n                                    piVar13 = piVar14;\n                                    pcVar9 = fcn.00405a3e(*0x414524);\n                                    (*pcVar9)(piVar13, puVar6);\n                                }\n                                if ((var_211h == 0x67) && (uVar8 == 0)) {\n                                    puVar6 = &var_24ch;\n                                    piVar13 = piVar14;\n                                    pcVar9 = fcn.00405a3e(*0x414520);\n                                    (*pcVar9)(piVar13, puVar6);\n                                }\n                                piVar13 = piVar14;\n                                if (*piVar14 == '-') {\n                                    var_210h = var_210h | 0x100;\n                                    piVar14 = piVar14 + 1;\n                                    var_21ch = piVar14;\n                                    piVar13 = piVar14;\n                                }\n                                do {\n                                    cVar2 = *piVar14;\n                                    piVar14 = piVar14 + 1;\n                                } while (cVar2 != '\\0');\ncode_r0x004025d7:\n                                var_220h = piVar14 - (piVar13 + 1);\n                            }\n                            else {\n                                if (var_211h == 0x58) goto code_r0x004027e5;\n                                if (var_211h == 0x5a) {\n                                    piVar10 = *arg_14h;\n                                    var_224h = arg_14h + 1;\n                                    piVar14 = piVar13;\n                                    if ((piVar10 == NULL) || (piVar4 = piVar10[1],  piVar4 == NULL)) {\n                                        do {\n                                            cVar2 = *piVar14;\n                                            piVar14 = piVar14 + 1;\n                                            var_21ch = piVar13;\n                                        } while (cVar2 != '\\0');\n                                        goto code_r0x004025d7;\n                                    }\n                                    uVar3 = *piVar10;\n                                    if (*(piVar10 + 2) < uVar3) {\ncode_r0x00402b6e:\n                                        puVar6 = fcn.00402cbf();\n                                        *puVar6 = 0x16;\n                                        goto code_r0x00402019;\n                                    }\n                                    if ((var_210h & 0x800) == 0) {\n                                        var_23ch = 0;\n                                        var_220h = uVar3;\n                                        var_21ch = piVar4;\n                                    }\n                                    else {\n                                        if (((~uVar3 & 1) == 0) || ((~piVar4 & 1) == 0)) goto code_r0x00402b6e;\n                                        var_23ch = 1;\n                                        var_220h = uVar3 >> 1;\n                                        var_21ch = piVar4;\n                                    }\n                                }\n                                else {\n                                    if (var_211h == 0x61) goto code_r0x00402404;\n                                    if (var_211h == 99) goto code_r0x004024e6;\n                                }\n                            }\ncode_r0x004029be:\n                            if (var_250h == 0) {\n                                if ((var_210h & 0x40) != 0) {\n                                    if ((var_210h & 0x100) == 0) {\n                                        if ((var_210h & 1) == 0) {\n                                            if ((var_210h & 2) == 0) goto code_r0x00402a07;\n                                            var_22ch._0_1_ = 0x20;\n                                        }\n                                        else {\n                                            var_22ch._0_1_ = 0x2b;\n                                        }\n                                    }\n                                    else {\n                                        var_22ch._0_1_ = 0x2d;\n                                    }\n                                    var_234h = 1;\n                                }\ncode_r0x00402a07:\n                                pcVar12 = var_238h + (-var_234h - var_220h);\n                                if ((var_210h & 0xc) == 0) {\n                                    fcn.00401f1d(0x20, pcVar12, var_25ch);\n                                }\n                                iVar7 = var_25ch;\n                                fcn.00401f43(var_234h);\n                                if (((var_210h & 8) != 0) && ((var_210h & 4) == 0)) {\n                                    fcn.00401f1d(0x30, pcVar12, iVar7);\n                                }\n                                if ((var_23ch == 0) || (var_220h < 1)) {\n                                    fcn.00401f43(var_220h);\n                                }\n                                else {\n                                    var_264h = var_220h;\n                                    piVar13 = var_21ch;\n                                    do {\n                                        uVar3 = *piVar13;\n                                        var_264h = var_264h + -1;\n                                        piVar13 = piVar13 + 2;\n                                        iVar11 = fcn.00407415(&var_26ch, &var_ch, 6, uVar3);\n                                        if ((iVar11 != 0) || (var_26ch == 0)) {\n                                            var_228h = -1;\n                                            break;\n                                        }\n                                        fcn.00401f43(var_26ch);\n                                    } while (var_264h != NULL);\n                                }\n                                if ((-1 < var_228h) && ((var_210h & 4) != 0)) {\n                                    fcn.00401f1d(0x20, pcVar12, iVar7);\n                                }\n                            }\n                        }\n                        else {\n                            if ('p' < var_211h) {\n                                if (var_211h == 0x73) {\ncode_r0x00402473:\n                                    piVar14 = var_218h;\n                                    if (var_218h == 0xffffffff) {\n                                        piVar14 = 0x7fffffff;\n                                    }\n                                    var_224h = arg_14h + 1;\n                                    var_21ch = *arg_14h;\n                                    if ((var_210h & 0x810) == 0) {\n                                        piVar10 = var_21ch;\n                                        if (var_21ch == NULL) {\n                                            piVar10 = piVar13;\n                                            var_21ch = piVar13;\n                                        }\n                                        for (; (piVar14 != NULL && (piVar14 = piVar14 + -1,  *piVar10 != '\\0'));\n                                            piVar10 = piVar10 + 1) {\n                                        }\n                                        var_220h = piVar10 - var_21ch;\n                                    }\n                                    else {\n                                        if (var_21ch == NULL) {\n                                            var_21ch = *0x41438c;\n                                        }\n                                        var_23ch = 1;\n                                        for (piVar13 = var_21ch;\n                                            (piVar14 != NULL && (piVar14 = piVar14 + -1,  *piVar13 != 0));\n                                            piVar13 = piVar13 + 2) {\n                                        }\n                                        var_220h = piVar13 - var_21ch >> 1;\n                                    }\n                                    goto code_r0x004029be;\n                                }\n                                if (var_211h == 0x75) goto code_r0x0040267c;\n                                if (var_211h != 0x78) goto code_r0x004029be;\n                                var_258h = 0x27;\ncode_r0x00402811:\n                                var_220h = 0x10;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_22ch._1_1_ = var_258h + 'Q';\n                                    var_22ch._0_1_ = 0x30;\n                                    var_234h = 2;\n                                }\n                                goto code_r0x00402686;\n                            }\n                            if (var_211h == 0x70) {\n                                var_218h = 0x8;\ncode_r0x004027e5:\n                                var_258h = 7;\n                                goto code_r0x00402811;\n                            }\n                            if (var_211h < 'e') goto code_r0x004029be;\n                            if (var_211h < 'h') goto code_r0x00402404;\n                            if (var_211h == 0x69) goto code_r0x00402675;\n                            if (var_211h != 0x6e) {\n                                if (var_211h != 0x6f) goto code_r0x004029be;\n                                var_220h = 0x8;\n                                if ((var_210h & 0x80) != 0) {\n                                    var_210h = var_210h | 0x200;\n                                }\n                                goto code_r0x00402686;\n                            }\n                            piVar13 = *arg_14h;\n                            var_224h = arg_14h + 1;\n                            iVar7 = fcn.00407293();\n                            if (iVar7 == 0) goto code_r0x00402007;\n                            if ((var_210h & 0x20) == 0) {\n                                *piVar13 = var_228h;\n                            }\n                            else {\n                                *piVar13 = var_228h;\n                            }\n                            var_250h = 1;\n                        }\n                        if (var_254h != NULL) {\n                            fcn.004030bc(var_254h);\n                            var_254h = NULL;\n                        }\n                    }\n                    var_211h = *var_230h;\n                    iVar7 = var_270h;\n                    arg_14h = var_224h;\n                    arg_ch = var_230h;\n                    piVar13 = *0x414388;\n                }\n                if (var_240h != '\\0') {\n                    *(var_244h + 0x70) = *(var_244h + 0x70) & 0xfffffffd;\n                }\n                goto code_r0x00402b9c;\n            }\n        }\n    }\ncode_r0x00402007:\n    puVar6 = fcn.00402cbf();\n    *puVar6 = 0x16;\ncode_r0x00402019:\n    fcn.00402c72(0, 0, 0, 0, 0);\n    if (var_240h != '\\0') {\n        *(var_244h + 0x70) = *(var_244h + 0x70) & 0xfffffffd;\n    }\ncode_r0x00402b9c:\n    fcn.0040747d(unaff_EBX);\n    return;\n}\n",
        "token_count": 6195
    },
    "0040499d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040499d(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.00409fec();\n            goto code_r0x00404a1b;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x00404a0e;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.00409fd5();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x00404a0e:\n            uVar1 = 1;\ncode_r0x00404a1b:\n            if (*0x4165e0 == 0) {\n                uVar3 = fcn.00409f77(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x0040a05e;\n        }\n    }\n    if (*0x4165e0 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.00409f77(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x0040a05e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 649
    },
    "00404cc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404cc8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x410328 != NULL) {\n        iVar1 = fcn.00407704(0x410328);\n        if (iVar1 != 0) {\n            (**0x410328)(arg_8h);\n        }\n    }\n    fcn.00404131();\n    *0x417184 = fcn.00405a35();\n    *0x417188 = *0x417184;\n    iVar1 = fcn.00404b9e(0x41023c, 0x410250);\n    if (iVar1 == 0) {\n        fcn.00404c2e(0x410238);\n        if (*0x417194 != NULL) {\n            iVar1 = fcn.00407704(0x417194);\n            if (iVar1 != 0) {\n                (**0x417194)(0, 2, 0);\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 238
    },
    "00404d50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404de5: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404dea)\n// WARNING: Removing unreachable block (ram,0x00404e18)\n// WARNING: Removing unreachable block (ram,0x00404df0)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404d50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411a68, 0xc);\n    fcn.00406697(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x416640 != 1) {\n        *0x41663c = 1;\n        *0x416638 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.00405a3e(*0x417188);\n            uVar2 = fcn.00405a3e(*0x417184);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.00404c2e(0x410260);\n        }\n        fcn.00404c2e(0x410268);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004065bd(8);\n    }\n    return;\n}\n",
        "token_count": 490
    },
    "0040532e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040532e(uint arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    if (arg_ch != 0) {\n        *arg_10h = 0xffffffff;\n        return 0x80070216;\n    }\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00405380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405380(uint8_t *arg_8h, uint8_t **arg_ch, uint8_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    int32_t *unaff_ESI;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *unaff_ESI;\n    iVar2 = *arg_14h;\n    *unaff_ESI = 0;\n    *arg_14h = 1;\n    if ((arg_ch != NULL) && (0 < iVar2)) {\n        *arg_ch = arg_10h;\n        arg_ch = arg_ch + 1;\n    }\n    bVar3 = false;\n    do {\n        if (*arg_8h == 0x22) {\n            bVar3 = !bVar3;\n            uVar7 = 0x22;\n            puVar8 = arg_8h + 1;\n        }\n        else {\n            *unaff_ESI = *unaff_ESI + 1;\n            if ((arg_10h != NULL) && (*unaff_ESI <= iVar1)) {\n                *arg_10h = *arg_8h;\n                arg_10h = arg_10h + 1;\n            }\n            uVar7 = *arg_8h;\n            puVar8 = arg_8h + 1;\n            iVar5 = fcn.0040a777(uVar7);\n            if (iVar5 != 0) {\n                *unaff_ESI = *unaff_ESI + 1;\n                if ((arg_10h != NULL) && (*unaff_ESI <= iVar1)) {\n                    *arg_10h = *puVar8;\n                    arg_10h = arg_10h + 1;\n                }\n                puVar8 = arg_8h + 2;\n            }\n            if (uVar7 == 0) {\n                puVar8 = puVar8 + -1;\n                goto code_r0x00405436;\n            }\n        }\n        arg_8h = puVar8;\n    } while ((bVar3) || ((uVar7 != 0x20 && (uVar7 != 9))));\n    if (arg_10h != NULL) {\n        arg_10h[-1] = 0;\n    }\ncode_r0x00405436:\n    bVar3 = false;\n    while (puVar9 = puVar8,  *puVar8 != 0) {\n        for (; (*puVar9 == 0x20 || (*puVar9 == 9)); puVar9 = puVar9 + 1) {\n        }\n        if (*puVar9 == 0) break;\n        *arg_14h = *arg_14h + 1;\n        if ((arg_ch != NULL) && (*arg_14h <= iVar2)) {\n            *arg_ch = arg_10h;\n            arg_ch = arg_ch + 1;\n        }\n        while( true ) {\n            bVar4 = true;\n            uVar6 = 0;\n            for (; *puVar9 == 0x5c; puVar9 = puVar9 + 1) {\n                uVar6 = uVar6 + 1;\n            }\n            puVar8 = puVar9;\n            if (*puVar9 == 0x22) {\n                if ((uVar6 & 1) == 0) {\n                    if ((!bVar3) || (puVar8 = puVar9 + 1,  *puVar8 != 0x22)) {\n                        bVar4 = false;\n                        puVar8 = puVar9;\n                    }\n                    bVar3 = !bVar3;\n                }\n                uVar6 = uVar6 >> 1;\n            }\n            while (uVar6 != 0) {\n                uVar6 = uVar6 - 1;\n                *unaff_ESI = *unaff_ESI + 1;\n                if ((arg_10h != NULL) && (*unaff_ESI <= iVar1)) {\n                    *arg_10h = 0x5c;\n                    arg_10h = arg_10h + 1;\n                }\n            }\n            uVar7 = *puVar8;\n            if ((uVar7 == 0) || ((!bVar3 && ((uVar7 == 0x20 || (uVar7 == 9)))))) break;\n            if (bVar4) {\n                *unaff_ESI = *unaff_ESI + 1;\n                iVar5 = fcn.0040a777(*puVar8);\n                if (arg_10h == NULL) {\n                    if (iVar5 != 0) {\n                        puVar8 = puVar8 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                }\n                else {\n                    if (iVar5 != 0) {\n                        *arg_10h = *puVar8;\n                        puVar8 = puVar8 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                        arg_10h = arg_10h + 1;\n                    }\n                    *arg_10h = *puVar8;\n                    arg_10h = arg_10h + 1;\n                }\n            }\n            puVar9 = puVar8 + 1;\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n        if ((arg_10h != NULL) && (*unaff_ESI <= iVar1)) {\n            *arg_10h = 0;\n            arg_10h = arg_10h + 1;\n        }\n    }\n    *arg_14h = *arg_14h + 1;\n    if ((arg_ch != NULL) && (*arg_14h <= iVar2)) {\n        *arg_ch = NULL;\n    }\n    return;\n}\n",
        "token_count": 1342
    },
    "00405b21": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405b21(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411aa8, 0xc);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"KERNELBASE.DLL\");\n    *(unaff_EBP + -0x1c) = iVar3;\n    if (iVar3 == 0) {\n        uVar4 = (*pcVar2)(L\"KERNEL32.DLL\");\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    iVar3 = *(unaff_EBP + 8);\n    *(iVar3 + 0x5c) = 0x414720;\n    *(iVar3 + 0x14) = 1;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (*(unaff_EBP + -0x1c) != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(unaff_EBP + -0x1c), \"EncodePointer\");\n        *(iVar3 + 0x1f8) = uVar4;\n        uVar4 = (*pcVar2)(*(unaff_EBP + -0x1c), \"DecodePointer\");\n        *(iVar3 + 0x1fc) = uVar4;\n    }\n    *(iVar3 + 0x70) = 1;\n    *(iVar3 + 200) = 0x43;\n    *(iVar3 + 0x14b) = 0x43;\n    *(iVar3 + 0x68) = 0x4148f8;\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0x4148f8);\n    fcn.00406697(0xc);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(unaff_EBP + 0xc);\n    *(iVar3 + 0x6c) = iVar1;\n    if (iVar1 == 0) {\n        *(iVar3 + 0x6c) = *0x414f00;\n    }\n    fcn.00406f65(*(iVar3 + 0x6c));\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00405be0();\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 611
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406986": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00406986(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t arg_8h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411b98, 0xc);\n    iVar1 = fcn.00405c65();\n    if ((((*(iVar1 + 0x70) & 2) == 0) && ((*0x414e1c & 1) != 0)) || (*(iVar1 + 0x6c) == 0)) {\n        fcn.00406697(0xd);\n        *(unaff_EBP + -4) = 0;\n        arg_8h = *(iVar1 + 0x68);\n        *(unaff_EBP + -0x1c) = arg_8h;\n        if (arg_8h != *0x414d20) {\n            if (arg_8h != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(arg_8h);\n                if ((iVar2 == 0) && (arg_8h != 0x4148f8)) {\n                    fcn.004030bc(arg_8h);\n                }\n            }\n            *(iVar1 + 0x68) = *0x414d20;\n            arg_8h = *0x414d20;\n            *(unaff_EBP + -0x1c) = *0x414d20;\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h);\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406a0f();\n    }\n    else {\n        arg_8h = *(iVar1 + 0x68);\n    }\n    if (arg_8h == 0) {\n        fcn.00404bc2(0x20);\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 468
    },
    "00406aad": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.00406aad(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    ushort *puVar7;\n    uint8_t *puVar8;\n    int32_t extraout_ECX;\n    ushort *puVar9;\n    ulong uVar10;\n    uint32_t var_20h;\n    uint8_t *var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    iVar3 = fcn.00406a31();\n    if (iVar3 != 0) {\n        var_1ch = NULL;\n        uVar4 = 0;\ncode_r0x00406aeb:\n        if (*(uVar4 + 0x414d28) != iVar3) goto code_r0x00406af3;\n        fcn.004098a0(arg_ch + 0x1c, 0, 0x101);\n        var_20h = 0;\n        puVar8 = var_1ch * 0x30 + 0x414d38;\n        var_1ch = puVar8;\n        do {\n            for (; (*puVar8 != 0 && (uVar2 = puVar8[1],  uVar2 != 0)); puVar8 = puVar8 + 2) {\n                for (uVar4 = *puVar8; uVar4 <= uVar2; uVar4 = uVar4 + 1) {\n                    puVar1 = arg_ch + 0x1d + uVar4;\n                    *puVar1 = *puVar1 | *(var_20h + 0x414d24);\n                    uVar2 = puVar8[1];\n                }\n            }\n            var_20h = var_20h + 1;\n            puVar8 = var_1ch + 8;\n            var_1ch = puVar8;\n        } while (var_20h < 4);\n        *(arg_ch + 4) = iVar3;\n        *(arg_ch + 8) = 1;\n        uVar6 = fcn.00406760();\n        *(arg_ch + 0xc) = uVar6;\n        puVar7 = arg_ch + 0x10;\n        puVar9 = extraout_ECX + 0x414d2c;\n        iVar3 = 6;\n        do {\n            *puVar7 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar7 = puVar7 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n        goto code_r0x00406bee;\n    }\ncode_r0x00406ad8:\n    fcn.0040678f();\ncode_r0x00406c55:\n    fcn.0040747d(var_20h);\n    return;\ncode_r0x00406af3:\n    var_1ch = var_1ch + 1;\n    uVar4 = uVar4 + 0x30;\n    if (0xef < uVar4) goto code_r0x00406b00;\n    goto code_r0x00406aeb;\ncode_r0x00406b00:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(iVar3, &lpCPInfo);\n    if (iVar5 != 0) {\n        fcn.004098a0(arg_ch + 0x1c, 0, 0x101);\n        *(arg_ch + 4) = iVar3;\n        *(arg_ch + 0xc) = 0;\n        if (lpCPInfo < 2) {\n            *(arg_ch + 8) = 0;\n        }\n        else {\n            if (var_12h != '\\0') {\n                puVar8 = &var_12h + 1;\n                do {\n                    uVar2 = *puVar8;\n                    if (uVar2 == 0) break;\n                    for (uVar4 = puVar8[-1]; uVar4 <= uVar2; uVar4 = uVar4 + 1) {\n                        puVar1 = arg_ch + 0x1d + uVar4;\n                        *puVar1 = *puVar1 | 4;\n                    }\n                    puVar1 = puVar8 + 1;\n                    puVar8 = puVar8 + 2;\n                } while (*puVar1 != 0);\n            }\n            puVar8 = arg_ch + 0x1e;\n            iVar3 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            uVar10 = fcn.00406760();\n            *(arg_ch + 0xc) = uVar10;\n            *(arg_ch + 8) = uVar10 >> 0x20;\n        }\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\ncode_r0x00406bee:\n        fcn.004067f3();\n        goto code_r0x00406c55;\n    }\n    if (*0x416bd0 == 0) goto code_r0x00406c55;\n    goto code_r0x00406ad8;\n}\n",
        "token_count": 1277
    },
    "004070cb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004070cb(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411bd8, 0xc);\n    iVar1 = fcn.00405c65();\n    if ((((*(iVar1 + 0x70) & 2) == 0) && ((*0x414e1c & 1) != 0)) || (*(iVar1 + 0x6c) == 0)) {\n        fcn.00406697(0xc);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040708d();\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00407121();\n        iVar1 = *(unaff_EBP + -0x1c);\n    }\n    else {\n        iVar1 = fcn.00405c65();\n        iVar1 = *(iVar1 + 0x6c);\n    }\n    if (iVar1 == 0) {\n        fcn.00404bc2(0x20);\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 315
    },
    "00407770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407770(int32_t arg_8h, uint8_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint64_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    char *pcVar11;\n    int32_t *piVar12;\n    bool bVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    int32_t *piVar16;\n    uint uVar17;\n    int32_t *var_278h;\n    int32_t *var_274h;\n    int32_t var_270h;\n    uint var_26ch;\n    char *var_264h;\n    int32_t var_260h;\n    int32_t var_25ch;\n    int32_t *var_258h;\n    int32_t var_254h;\n    uint32_t var_250h;\n    uint var_24ch;\n    int32_t var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    int32_t *var_238h;\n    int32_t var_234h;\n    uint8_t *var_230h;\n    uint var_22ch;\n    int32_t var_228h;\n    int32_t **var_224h;\n    char *var_220h;\n    int32_t *var_21ch;\n    int32_t *var_218h;\n    uint8_t var_211h;\n    uint32_t var_210h;\n    uint var_20ch;\n    uchar var_dh;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    var_260h = arg_8h;\n    var_230h = arg_ch;\n    var_224h = arg_14h;\n    var_25ch = 0;\n    var_210h = 0;\n    var_238h = NULL;\n    var_218h = NULL;\n    var_234h = 0;\n    var_26ch = 0;\n    var_254h = 0;\n    var_23ch = 0;\n    fcn.00401e49(arg_10h);\n    if (arg_8h == 0) {\ncode_r0x004077e7:\n        puVar5 = fcn.00402cbf();\n        *puVar5 = 0x16;\n    }\n    else {\n        if ((*(arg_8h + 0xc) & 0x40) == 0) {\n            iVar6 = fcn.0040672e(arg_8h);\n            if ((iVar6 == -1) || (iVar6 = fcn.0040672e(arg_8h),  iVar6 == -2)) {\n                iVar6 = 0x4147a8;\n            }\n            else {\n                iVar6 = fcn.0040672e(arg_8h);\n                uVar7 = fcn.0040672e(arg_8h);\n                iVar6 = (uVar7 & 0x1f) * 0x24 + *((iVar6 >> 5) * 4 + 0x417080);\n                arg_ch = var_230h;\n            }\n            if ((*(iVar6 + 8) & 3) == 0) {\n                iVar6 = fcn.0040672e(arg_8h);\n                if ((iVar6 == -1) || (iVar6 = fcn.0040672e(arg_8h),  iVar6 == -2)) {\n                    iVar6 = 0x4147a8;\n                }\n                else {\n                    iVar6 = fcn.0040672e(arg_8h);\n                    uVar7 = fcn.0040672e(arg_8h);\n                    iVar6 = (uVar7 & 0x1f) * 0x24 + *((iVar6 >> 5) * 4 + 0x417080);\n                    arg_ch = var_230h;\n                }\n                if ((*(iVar6 + 8) & 8) == 0) goto code_r0x004078c4;\n            }\n            goto code_r0x004077e7;\n        }\ncode_r0x004078c4:\n        if (arg_ch == NULL) goto code_r0x004077e7;\n        var_211h = *arg_ch;\n        var_228h = 0;\n        var_220h = NULL;\n        var_250h = 0;\n        var_258h = NULL;\n        if (var_211h == 0) {\ncode_r0x0040839c:\n            if (var_240h != '\\0') {\n                *(var_244h + 0x70) = *(var_244h + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004083b5;\n        }\n        do {\n            uVar7 = 0;\n            var_230h = arg_ch + 1;\n            if (var_228h < 0) break;\n            if (var_211h - 0x20 < 0x59) {\n                uVar7 = *(var_211h + 0x410b78) & 0xf;\n            }\n            var_250h = *(uVar7 * 9 + 0x410b98 + var_250h) >> 4;\n    // switch table (8 cases) at 0x4083c4\n            switch(var_250h) {\n            case 0:\ncode_r0x00407b58:\n                var_23ch = 0;\n                iVar6 = fcn.00407432(var_211h, &var_24ch);\n                if (iVar6 != 0) {\n                    fcn.00401eea();\n                    uVar1 = *var_230h;\n                    var_230h = var_230h + 1;\n                    if (uVar1 == 0) goto code_r0x004077e7;\n                }\n                fcn.00401eea();\n                break;\n            case 1:\n                var_218h = 0xffffffff;\n                var_26ch = 0;\n                var_254h = 0;\n                var_238h = NULL;\n                var_234h = 0;\n                var_210h = 0;\n                var_23ch = 0;\n                break;\n            case 2:\n                if (var_211h == 0x20) {\n                    var_210h = var_210h | 2;\n                }\n                else if (var_211h == 0x23) {\n                    var_210h = var_210h | 0x80;\n                }\n                else if (var_211h == 0x2b) {\n                    var_210h = var_210h | 1;\n                }\n                else if (var_211h == 0x2d) {\n                    var_210h = var_210h | 4;\n                }\n                else if (var_211h == 0x30) {\n                    var_210h = var_210h | 8;\n                }\n                break;\n            case 3:\n                if (var_211h == 0x2a) {\n                    var_224h = arg_14h + 1;\n                    var_238h = *arg_14h;\n                    if (var_238h < 0) {\n                        var_210h = var_210h | 4;\n                        var_238h = -var_238h;\n                    }\n                }\n                else {\n                    var_238h = var_238h * 10 + -0x30 + var_211h;\n                }\n                break;\n            case 4:\n                var_218h = NULL;\n                break;\n            case 5:\n                if (var_211h == 0x2a) {\n                    var_224h = arg_14h + 1;\n                    var_218h = *arg_14h;\n                    if (var_218h < 0) {\n                        var_218h = 0xffffffff;\n                    }\n                }\n                else {\n                    var_218h = var_218h * 10 + -0x30 + var_211h;\n                }\n                break;\n            case 6:\n                if (var_211h == 0x49) {\n                    uVar1 = *var_230h;\n                    if ((uVar1 == 0x36) && (arg_ch[2] == 0x34)) {\n                        var_230h = arg_ch + 3;\n                        var_210h = var_210h | 0x8000;\n                    }\n                    else if ((uVar1 == 0x33) && (arg_ch[2] == 0x32)) {\n                        var_230h = arg_ch + 3;\n                        var_210h = var_210h & 0xffff7fff;\n                    }\n                    else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                             ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                        var_250h = 0;\n                        goto code_r0x00407b58;\n                    }\n                }\n                else if (var_211h == 0x68) {\n                    var_210h = var_210h | 0x20;\n                }\n                else if (var_211h == 0x6c) {\n                    if (*var_230h == 0x6c) {\n                        var_230h = arg_ch + 2;\n                        var_210h = var_210h | 0x1000;\n                    }\n                    else {\n                        var_210h = var_210h | 0x10;\n                    }\n                }\n                else if (var_211h == 0x77) {\n                    var_210h = var_210h | 0x800;\n                }\n                break;\n            case 7:\n                if (var_211h < 'e') {\n                    if (var_211h == 100) {\ncode_r0x00407e6a:\n                        var_210h = var_210h | 0x40;\ncode_r0x00407e71:\n                        var_220h = 0xa;\ncode_r0x00407e7b:\n                        if (((var_210h & 0x8000) == 0) && ((var_210h & 0x1000) == 0)) {\n                            var_224h = arg_14h + 1;\n                            if ((var_210h & 0x20) == 0) {\n                                piVar12 = *arg_14h;\n                                if ((var_210h & 0x40) == 0) {\n                                    piVar9 = NULL;\n                                }\n                                else {\n                                    piVar9 = piVar12 >> 0x1f;\n                                }\n                            }\n                            else {\n                                if ((var_210h & 0x40) == 0) {\n                                    piVar12 = *arg_14h;\n                                }\n                                else {\n                                    piVar12 = *arg_14h;\n                                }\n                                piVar9 = piVar12 >> 0x1f;\n                            }\n                        }\n                        else {\n                            piVar12 = *arg_14h;\n                            piVar9 = arg_14h[1];\n                            var_224h = arg_14h + 2;\n                        }\n                        if ((((var_210h & 0x40) != 0) && (piVar9 < 1)) && (piVar9 < 0)) {\n                            bVar13 = piVar12 != NULL;\n                            piVar12 = -piVar12;\n                            piVar9 = -(piVar9 + bVar13);\n                            var_210h = var_210h | 0x100;\n                        }\n                        if ((var_210h & 0x9000) == 0) {\n                            piVar9 = NULL;\n                        }\n                        iVar14 = CONCAT44(piVar9, piVar12);\n                        if (var_218h < 0) {\n                            var_218h = 0x1;\n                        }\n                        else {\n                            var_210h = var_210h & 0xfffffff7;\n                            if (0x200 < var_218h) {\n                                var_218h = 0x200;\n                            }\n                        }\n                        if ((piVar12 | piVar9) == 0) {\n                            var_234h = 0;\n                        }\n                        piVar12 = &var_dh;\n                        while( true ) {\n                            uVar4 = iVar14 >> 0x20;\n                            piVar9 = var_218h + -1;\n                            if ((var_218h < 1) && (iVar14 == 0)) break;\n                            var_218h = piVar9;\n                            iVar14 = fcn.00407490();\n                            iVar6 = extraout_ECX + 0x30;\n                            if (0x39 < iVar6) {\n                                iVar6 = iVar6 + var_25ch;\n                            }\n                            *piVar12 = iVar6;\n                            piVar12 = piVar12 + -1;\n                            var_264h = uVar4;\n                        }\n                        var_220h = &var_dh + -piVar12;\n                        var_21ch = piVar12 + 1;\n                        var_218h = piVar9;\n                        if (((var_210h & 0x200) != 0) && ((var_220h == NULL || (*var_21ch != '0')))) {\n                            *piVar12 = '0';\n                            var_220h = &var_ch + -piVar12;\n                            var_21ch = piVar12;\n                        }\n                    }\n                    else if (var_211h < 'T') {\n                        if (var_211h == 0x53) {\n                            if ((var_210h & 0x830) == 0) {\n                                var_210h = var_210h | 0x800;\n                            }\n                            goto code_r0x00407c68;\n                        }\n                        if (var_211h != 0x41) {\n                            if (var_211h == 0x43) {\n                                if ((var_210h & 0x830) == 0) {\n                                    var_210h = var_210h | 0x800;\n                                }\ncode_r0x00407cdb:\n                                var_224h = arg_14h + 1;\n                                if ((var_210h & 0x810) == 0) {\n                                    var_20ch._0_1_ = *arg_14h;\n                                    var_220h = 0x1;\n                                }\n                                else {\n                                    iVar6 = fcn.00407415(&var_220h, &var_20ch, 0x200, *arg_14h);\n                                    if (iVar6 != 0) {\n                                        var_254h = 1;\n                                    }\n                                }\n                                var_21ch = &var_20ch;\n                                goto code_r0x004081b3;\n                            }\n                            if ((var_211h != 0x45) && (var_211h != 0x47)) goto code_r0x004081b3;\n                        }\n                        var_211h = var_211h + 0x20;\n                        var_26ch = 1;\ncode_r0x00407bf9:\n                        var_210h = var_210h | 0x40;\n                        var_21ch = &var_20ch;\n                        var_264h = 0x200;\n                        pcVar11 = var_264h;\n                        piVar12 = var_21ch;\n                        if (var_218h < 0) {\n                            var_218h = 0x6;\n                        }\n                        else if (var_218h == NULL) {\n                            if (var_211h == 0x67) {\n                                var_218h = 0x1;\n                            }\n                        }\n                        else {\n                            if (0x200 < var_218h) {\n                                var_218h = 0x200;\n                            }\n                            if (0xa3 < var_218h) {\n                                pcVar11 = var_218h + 0x15d;\n                                var_258h = fcn.00402ff2(pcVar11);\n                                piVar12 = var_258h;\n                                if (var_258h == NULL) {\n                                    var_218h = 0xa3;\n                                    pcVar11 = var_264h;\n                                    piVar12 = var_21ch;\n                                }\n                            }\n                        }\n                        var_21ch = piVar12;\n                        var_264h = pcVar11;\n                        piVar12 = var_21ch;\n                        var_278h = *arg_14h;\n                        var_224h = arg_14h + 2;\n                        var_274h = arg_14h[1];\n                        puVar5 = &var_24ch;\n                        iVar6 = var_211h;\n                        puVar15 = &var_278h;\n                        piVar9 = var_21ch;\n                        pcVar11 = var_264h;\n                        piVar16 = var_218h;\n                        uVar17 = var_26ch;\n                        pcVar8 = fcn.00405a3e(*0x414518);\n                        (*pcVar8)(puVar15, piVar9, pcVar11, iVar6, piVar16, uVar17, puVar5);\n                        uVar7 = var_210h & 0x80;\n                        if ((uVar7 != 0) && (var_218h == NULL)) {\n                            puVar5 = &var_24ch;\n                            piVar9 = piVar12;\n                            pcVar8 = fcn.00405a3e(*0x414524);\n                            (*pcVar8)(piVar9, puVar5);\n                        }\n                        if ((var_211h == 0x67) && (uVar7 == 0)) {\n                            puVar5 = &var_24ch;\n                            piVar9 = piVar12;\n                            pcVar8 = fcn.00405a3e(*0x414520);\n                            (*pcVar8)(piVar9, puVar5);\n                        }\n                        piVar9 = piVar12;\n                        if (*piVar12 == '-') {\n                            var_210h = var_210h | 0x100;\n                            piVar12 = piVar12 + 1;\n                            var_21ch = piVar12;\n                            piVar9 = piVar12;\n                        }\n                        do {\n                            cVar2 = *piVar12;\n                            piVar12 = piVar12 + 1;\n                        } while (cVar2 != '\\0');\ncode_r0x00407dcc:\n                        var_220h = piVar12 - (piVar9 + 1);\n                    }\n                    else {\n                        if (var_211h == 0x58) goto code_r0x00407fda;\n                        if (var_211h == 0x5a) {\n                            piVar12 = *arg_14h;\n                            var_224h = arg_14h + 1;\n                            if ((piVar12 == NULL) || (piVar9 = piVar12[1],  piVar9 == NULL)) {\n                                var_21ch = *0x414388;\n                                piVar12 = *0x414388;\n                                do {\n                                    cVar2 = *piVar12;\n                                    piVar12 = piVar12 + 1;\n                                    piVar9 = *0x414388;\n                                } while (cVar2 != '\\0');\n                                goto code_r0x00407dcc;\n                            }\n                            uVar3 = *piVar12;\n                            if (*(piVar12 + 2) < uVar3) {\ncode_r0x0040835f:\n                                puVar5 = fcn.00402cbf();\n                                *puVar5 = 0x16;\n                                goto code_r0x004077f9;\n                            }\n                            if ((var_210h & 0x800) == 0) {\n                                var_23ch = 0;\n                                var_220h = uVar3;\n                                var_21ch = piVar9;\n                            }\n                            else {\n                                if (((~uVar3 & 1) == 0) || ((~piVar9 & 1) == 0)) goto code_r0x0040835f;\n                                var_23ch = 1;\n                                var_220h = uVar3 >> 1;\n                                var_21ch = piVar9;\n                            }\n                        }\n                        else {\n                            if (var_211h == 0x61) goto code_r0x00407bf9;\n                            if (var_211h == 99) goto code_r0x00407cdb;\n                        }\n                    }\ncode_r0x004081b3:\n                    if (var_254h == 0) {\n                        if ((var_210h & 0x40) != 0) {\n                            if ((var_210h & 0x100) == 0) {\n                                if ((var_210h & 1) == 0) {\n                                    if ((var_210h & 2) == 0) goto code_r0x004081fc;\n                                    var_22ch._0_1_ = 0x20;\n                                }\n                                else {\n                                    var_22ch._0_1_ = 0x2b;\n                                }\n                            }\n                            else {\n                                var_22ch._0_1_ = 0x2d;\n                            }\n                            var_234h = 1;\n                        }\ncode_r0x004081fc:\n                        pcVar11 = var_238h + (-var_234h - var_220h);\n                        if ((var_210h & 0xc) == 0) {\n                            fcn.00401f1d(0x20, pcVar11, var_260h);\n                        }\n                        iVar6 = var_260h;\n                        fcn.00401f43(var_234h);\n                        if (((var_210h & 8) != 0) && ((var_210h & 4) == 0)) {\n                            fcn.00401f1d(0x30, pcVar11, iVar6);\n                        }\n                        if ((var_23ch == 0) || (var_220h < 1)) {\n                            fcn.00401f43(var_220h);\n                        }\n                        else {\n                            var_264h = var_220h;\n                            piVar12 = var_21ch;\n                            do {\n                                uVar3 = *piVar12;\n                                var_264h = var_264h + -1;\n                                piVar12 = piVar12 + 2;\n                                iVar10 = fcn.00407415(&var_270h, &var_ch, 6, uVar3);\n                                if ((iVar10 != 0) || (var_270h == 0)) {\n                                    var_228h = -1;\n                                    break;\n                                }\n                                fcn.00401f43(var_270h);\n                            } while (var_264h != NULL);\n                        }\n                        if ((-1 < var_228h) && ((var_210h & 4) != 0)) {\n                            fcn.00401f1d(0x20, pcVar11, iVar6);\n                        }\n                    }\n                }\n                else {\n                    if ('p' < var_211h) {\n                        if (var_211h == 0x73) {\ncode_r0x00407c68:\n                            piVar12 = var_218h;\n                            if (var_218h == 0xffffffff) {\n                                piVar12 = 0x7fffffff;\n                            }\n                            var_224h = arg_14h + 1;\n                            var_21ch = *arg_14h;\n                            if ((var_210h & 0x810) == 0) {\n                                piVar9 = var_21ch;\n                                if (var_21ch == NULL) {\n                                    var_21ch = *0x414388;\n                                    piVar9 = *0x414388;\n                                }\n                                for (; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar9 != '\\0'));\n                                    piVar9 = piVar9 + 1) {\n                                }\n                                var_220h = piVar9 - var_21ch;\n                            }\n                            else {\n                                if (var_21ch == NULL) {\n                                    var_21ch = *0x41438c;\n                                }\n                                var_23ch = 1;\n                                for (piVar9 = var_21ch; (piVar12 != NULL && (piVar12 = piVar12 + -1,  *piVar9 != 0));\n                                    piVar9 = piVar9 + 2) {\n                                }\n                                var_220h = piVar9 - var_21ch >> 1;\n                            }\n                            goto code_r0x004081b3;\n                        }\n                        if (var_211h == 0x75) goto code_r0x00407e71;\n                        if (var_211h != 0x78) goto code_r0x004081b3;\n                        var_25ch = 0x27;\ncode_r0x00408006:\n                        var_220h = 0x10;\n                        if ((var_210h & 0x80) != 0) {\n                            var_22ch._1_1_ = var_25ch + 'Q';\n                            var_22ch._0_1_ = 0x30;\n                            var_234h = 2;\n                        }\n                        goto code_r0x00407e7b;\n                    }\n                    if (var_211h == 0x70) {\n                        var_218h = 0x8;\ncode_r0x00407fda:\n                        var_25ch = 7;\n                        goto code_r0x00408006;\n                    }\n                    if (var_211h < 'e') goto code_r0x004081b3;\n                    if (var_211h < 'h') goto code_r0x00407bf9;\n                    if (var_211h == 0x69) goto code_r0x00407e6a;\n                    if (var_211h != 0x6e) {\n                        if (var_211h != 0x6f) goto code_r0x004081b3;\n                        var_220h = 0x8;\n                        if ((var_210h & 0x80) != 0) {\n                            var_210h = var_210h | 0x200;\n                        }\n                        goto code_r0x00407e7b;\n                    }\n                    piVar12 = *arg_14h;\n                    var_224h = arg_14h + 1;\n                    iVar6 = fcn.00407293();\n                    if (iVar6 == 0) goto code_r0x004077e7;\n                    if ((var_210h & 0x20) == 0) {\n                        *piVar12 = var_228h;\n                    }\n                    else {\n                        *piVar12 = var_228h;\n                    }\n                    var_254h = 1;\n                }\n                if (var_258h != NULL) {\n                    fcn.004030bc(var_258h);\n                    var_258h = NULL;\n                }\n                break;\n            default:\n                goto code_r0x004077e7;\n            case 0xbad1abe1:\n                break;\n            }\n            var_211h = *var_230h;\n            arg_ch = var_230h;\n            arg_14h = var_224h;\n        } while (var_211h != 0);\n        if ((var_250h == 0) || (var_250h == 7)) goto code_r0x0040839c;\n        puVar5 = fcn.00402cbf();\n        *puVar5 = 0x16;\n    }\ncode_r0x004077f9:\n    fcn.00402c72(0, 0, 0, 0, 0);\n    if (var_240h != '\\0') {\n        *(var_244h + 0x70) = *(var_244h + 0x70) & 0xfffffffd;\n    }\ncode_r0x004083b5:\n    fcn.0040747d(unaff_EBX);\n    return;\n}\n",
        "token_count": 6315
    },
    "004091a7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004091a7(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x416bec == 0) {\n        uVar1 = 0xffffffff;\n        if (arg_8h != 0xffffffff) {\n            uVar1 = arg_8h & 0xff;\n        }\n        return *(*0x414ef0 + uVar1 * 2) & 4;\n    }\n    uVar1 = fcn.00409156(arg_8h, 0);\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "0040a36c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a36c(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004065bd(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040ac34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: CodePage\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ac34(uint32_t arg_8h, uint16_t *arg_ch, uint16_t *nNumberOfBytesToWrite)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char *pcVar11;\n    int32_t *piVar12;\n    int32_t CodePage;\n    uint16_t *var_590h;\n    uint32_t lpMode;\n    uint32_t var_588h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t *hFile;\n    uint16_t *var_57ch;\n    int32_t var_578h;\n    uint16_t *var_574h;\n    uint16_t *var_570h;\n    uint32_t lpWideCharStr;\n    uint16_t *var_568h;\n    uint var_564h;\n    uint var_410h;\n    uint var_160h;\n    uint lpBuffer;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    var_574h = arg_ch;\n    var_570h = NULL;\n    var_578h = 0;\n    if (nNumberOfBytesToWrite == NULL) goto code_r0x0040b303;\n    if (arg_ch == NULL) {\n        puVar4 = fcn.00402cd2();\n        *puVar4 = 0;\n        puVar4 = fcn.00402cbf();\n        *puVar4 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n        goto code_r0x0040b303;\n    }\n    iVar9 = (arg_8h & 0x1f) * 0x24;\n    piVar12 = (arg_8h >> 5) * 4 + 0x417080;\n    var_588h = *(*piVar12 + iVar9 + 8) & 3;\n    CodePage = iVar9;\n    hFile = piVar12;\n    if (((var_588h == 2) || (var_588h == 1)) && ((~nNumberOfBytesToWrite & 1) == 0)) {\n        puVar4 = fcn.00402cd2();\n        *puVar4 = 0;\n        puVar4 = fcn.00402cbf();\n        *puVar4 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n        goto code_r0x0040b303;\n    }\n    if ((*(*piVar12 + iVar9 + 4) & 0x20) != 0) {\n        fcn.0040c170(arg_8h, 0, 0, 2);\n    }\n    iVar5 = fcn.004066ca(arg_8h);\n    if ((iVar5 == 0) || ((*(iVar9 + 4 + *piVar12) & 0x80) == 0)) {\ncode_r0x0040af88:\n        if ((*(*piVar12 + iVar9 + 1) & 0x80) == 0) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                              (*(*piVar12 + iVar9), var_574h, nNumberOfBytesToWrite, &var_57ch, 0);\n            if (iVar5 == 0) {\ncode_r0x0040b279:\n                lpWideCharStr = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            else {\n                lpWideCharStr = 0;\n                var_570h = var_57ch;\n            }\ncode_r0x0040b285:\n            if (var_570h != NULL) goto code_r0x0040b303;\n            goto code_r0x0040b28f;\n        }\n        lpWideCharStr = 0;\n        if (var_588h == 0) {\n            var_568h = var_574h;\n            if (nNumberOfBytesToWrite == NULL) goto code_r0x0040b2c5;\n            do {\n                uVar10 = 0;\n                puVar7 = var_568h - var_574h;\n                puVar4 = &var_564h;\n                do {\n                    if (nNumberOfBytesToWrite <= puVar7) break;\n                    puVar8 = var_568h + 1;\n                    cVar1 = *var_568h;\n                    puVar7 = puVar7 + 1;\n                    if (cVar1 == '\\n') {\n                        var_578h = var_578h + 1;\n                        *puVar4 = '\\r';\n                        puVar4 = puVar4 + 1;\n                        uVar10 = uVar10 + 1;\n                    }\n                    *puVar4 = cVar1;\n                    puVar4 = puVar4 + 1;\n                    uVar10 = uVar10 + 1;\n                    piVar12 = hFile;\n                    var_568h = puVar8;\n                } while (uVar10 < 0x400);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (*(iVar9 + *piVar12), &var_564h, puVar4 - &var_564h, &var_57ch, 0);\n                if (iVar5 == 0) goto code_r0x0040b279;\n                var_570h = var_570h + var_57ch;\n            } while ((puVar4 - &var_564h <= var_57ch) && (var_568h - var_574h < nNumberOfBytesToWrite));\n            goto code_r0x0040b285;\n        }\n        if (var_588h == 2) {\n            puVar7 = var_574h;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    uVar10 = 0;\n                    puVar8 = puVar7 - var_574h;\n                    puVar4 = &var_564h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar8) break;\n                        uVar2 = *puVar7;\n                        puVar8 = puVar8 + 1;\n                        if (uVar2 == 10) {\n                            if (0x3fd < uVar10) break;\n                            var_578h = var_578h + 2;\n                            *puVar4 = 0xd;\n                            puVar4 = puVar4 + 2;\n                            uVar10 = uVar10 + 2;\n                        }\n                        *puVar4 = uVar2;\n                        puVar4 = puVar4 + 2;\n                        uVar10 = uVar10 + 2;\n                        puVar7 = puVar7 + 1;\n                    } while (uVar10 < 0x3ff);\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (*(iVar9 + *hFile), &var_564h, puVar4 - &var_564h, &var_57ch, 0);\n                    if (iVar5 == 0) goto code_r0x0040b279;\n                    var_570h = var_570h + var_57ch;\n                } while (((puVar4 - &var_564h <= var_57ch) && (var_57ch != NULL)) &&\n                        (puVar7 - var_574h < nNumberOfBytesToWrite));\n                goto code_r0x0040b285;\n            }\n        }\n        else {\n            var_568h = var_574h;\n            if (nNumberOfBytesToWrite != NULL) {\n                do {\n                    uVar10 = 0;\n                    puVar7 = var_568h - var_574h;\n                    puVar4 = &var_160h;\n                    do {\n                        if (nNumberOfBytesToWrite <= puVar7) break;\n                        puVar8 = var_568h + 1;\n                        uVar2 = *var_568h;\n                        puVar7 = puVar7 + 1;\n                        if (uVar2 == 10) {\n                            if (0x150 < uVar10) break;\n                            *puVar4 = 0xd;\n                            puVar4 = puVar4 + 2;\n                            uVar10 = uVar10 + 2;\n                        }\n                        *puVar4 = uVar2;\n                        puVar4 = puVar4 + 2;\n                        uVar10 = uVar10 + 2;\n                        var_568h = puVar8;\n                    } while (uVar10 < 0x152);\n                    pcVar11 = NULL;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (0xfde9, 0, &var_160h, (puVar4 - &var_160h) / 2, &var_410h, 0x2ab, 0, 0);\n                    if (iVar5 == 0) goto code_r0x0040b279;\n                    do {\n                        iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                          (*(iVar9 + *hFile), &var_410h + pcVar11, iVar5 - pcVar11, &var_57ch, 0);\n                        if (iVar6 == 0) {\n                            lpWideCharStr = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            break;\n                        }\n                        pcVar11 = pcVar11 + var_57ch;\n                    } while (pcVar11 < iVar5);\n                } while ((iVar5 <= pcVar11) && (var_570h = var_568h - var_574h,  var_570h < nNumberOfBytesToWrite));\n                goto code_r0x0040b285;\n            }\n        }\n    }\n    else {\n        iVar5 = fcn.00405c65();\n        iVar5 = *(*(iVar5 + 0x6c) + 0x14);\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(*(iVar9 + *piVar12), &lpMode);\n        if ((iVar6 == 0) || ((iVar5 == 0 && (var_588h == 0)))) goto code_r0x0040af88;\n        CodePage = (*_sym.imp.KERNEL32.dll_GetConsoleCP)();\n        lpNumberOfBytesWritten = 0;\n        var_590h = var_574h;\n        if (nNumberOfBytesToWrite != NULL) {\n            var_568h = NULL;\n            do {\n                if (var_588h == 0) {\n                    lpMode = *var_590h == '\\n';\n                    iVar5 = fcn.0040746a(*var_590h);\n                    if (iVar5 == 0) {\n                        iVar5 = fcn.0040ebe9(&lpWideCharStr, var_590h, 1);\n                        if (iVar5 == -1) break;\n                    }\n                    else {\n                        if (((var_574h - var_590h) + nNumberOfBytesToWrite < 0x2) ||\n                           (iVar5 = fcn.0040ebe9(&lpWideCharStr, var_590h, 2),  iVar5 == -1)) break;\n                        var_590h = var_590h + 1;\n                        var_568h = var_568h + 1;\n                    }\n                    var_590h = var_590h + 1;\n                    var_568h = var_568h + 1;\n                    iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (CodePage, 0, &lpWideCharStr, 1, &lpBuffer, 5, 0, 0);\n                    if (iVar5 == 0) break;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                      (*(iVar9 + *piVar12), &lpBuffer, iVar5, &lpNumberOfBytesWritten, 0);\n                    if (iVar6 == 0) goto code_r0x0040b279;\n                    var_570h = var_570h + lpNumberOfBytesWritten;\n                    if (lpNumberOfBytesWritten < iVar5) break;\n                    if (lpMode != 0) {\n                        lpBuffer._0_1_ = 0xd;\n                        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                          (*(iVar9 + *piVar12), &lpBuffer, 1, &lpNumberOfBytesWritten, 0);\n                        if (iVar5 == 0) goto code_r0x0040b279;\n                        if (lpNumberOfBytesWritten < 1) break;\n                        var_578h = var_578h + 1;\n                        var_570h = var_570h + 1;\n                    }\n                }\n                else {\n                    if ((var_588h == 1) || (var_588h == 2)) {\n                        lpWideCharStr = *var_590h;\n                        lpMode = *var_590h == 10;\n                        var_590h = var_590h + 1;\n                        var_568h = var_568h + 1;\n                    }\n                    if ((var_588h == 1) || (var_588h == 2)) {\n                        iVar3 = fcn.0040ea0d(lpWideCharStr);\n                        if (iVar3 != lpWideCharStr) goto code_r0x0040b279;\n                        var_570h = var_570h + 1;\n                        if (lpMode != 0) {\n                            lpWideCharStr = 0xd;\n                            iVar3 = fcn.0040ea0d(0xd);\n                            if (iVar3 != lpWideCharStr) goto code_r0x0040b279;\n                            var_570h = var_570h + 1;\n                            var_578h = var_578h + 1;\n                        }\n                    }\n                }\n            } while (var_568h < nNumberOfBytesToWrite);\n            goto code_r0x0040b285;\n        }\ncode_r0x0040b28f:\n        if (lpWideCharStr != 0) {\n            if (lpWideCharStr == 5) {\n                puVar4 = fcn.00402cbf();\n                *puVar4 = 9;\n                puVar4 = fcn.00402cd2();\n                *puVar4 = 5;\n            }\n            else {\n                fcn.00402ce5(lpWideCharStr);\n            }\n            goto code_r0x0040b303;\n        }\n    }\ncode_r0x0040b2c5:\n    if (((*(iVar9 + 4 + *hFile) & 0x40) == 0) || (*var_574h != '\\x1a')) {\n        puVar4 = fcn.00402cbf();\n        *puVar4 = 0x1c;\n        puVar4 = fcn.00402cd2();\n        *puVar4 = 0;\n    }\ncode_r0x0040b303:\n    fcn.0040747d(CodePage);\n    return;\n}\n",
        "token_count": 3396
    },
    "0040b503": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h_3\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpDestStr\n// WARNING: Variable defined which should be unmapped: cchDest\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: lpWideCharStr\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_28h_2\n\nvoid __cdecl\nfcn.0040b503(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint CodePage, uint arg_28h, uint arg_ch, uint arg_10h, uint arg_14h, uint cchSrc, uint arg_1ch, \n            uint arg_20h, uint arg_24h)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_4h;\n    uint var_34h_3;\n    uint lpSrcStr;\n    uint var_18h_3;\n    uint uVar9;\n    uint var_34h_2;\n    uint var_30h_2;\n    uint32_t var_4ch;\n    uint32_t var_28h_2;\n    uchar *var_24h;\n    uint32_t lpWideCharStr;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t lpDestStr;\n    int32_t cchDest;\n    uint var_2ch;\n    uint var_28h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x2c;\n    var_4h_2 = 0x411cf8;\n    var_28h = 0x40b50f;\n    fcn.0040609c();\n    iVar6 = *(unaff_EBP + 0x24);\n    if (*0x416c5c == 0) {\n        var_28h = 0;\n        var_2ch = 0;\n        cchDest = 1;\n        lpDestStr = 0x410d18;\n        var_38h = 0x100;\n        var_3ch = 0;\n        lpWideCharStr = 0x40b533;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            var_28h = 0x40b545;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x416c5c = 2;\n            }\n        }\n        else {\n            *0x416c5c = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x18)) {\n        iVar1 = *(unaff_EBP + 0x18);\n        pcVar2 = *(unaff_EBP + 0x14);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x0040b56c;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x0040b56c:\n        iVar1 = *(unaff_EBP + 0x18) - iVar1;\n        iVar3 = iVar1 + -1;\n        if (iVar3 < *(unaff_EBP + 0x18)) {\n            iVar3 = iVar1;\n        }\n        *(unaff_EBP + 0x18) = iVar3;\n    }\n    if ((*0x416c5c != 2) && (*0x416c5c != 0)) {\n        if (*0x416c5c != 1) goto code_r0x0040b9ae;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        if (iVar6 == 0) {\n            iVar6 = *(**(unaff_EBP + 8) + 4);\n            *(unaff_EBP + 0x24) = iVar6;\n        }\n        var_28h = 0;\n        var_2ch = 0;\n        cchDest = *(unaff_EBP + 0x18);\n        lpDestStr = *(unaff_EBP + 0x14);\n        var_38h = (*(unaff_EBP + 0x28) != 0) * 8 + 1;\n        lpWideCharStr = 0x40b5d4;\n        puVar8 = &fcn.0040b503::var_3ch;\n        var_3ch = iVar6;\n        uVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x30) = uVar4;\n        if (uVar4 == 0) goto code_r0x0040b9ae;\n        *(unaff_EBP + -4) = 1;\n        if ((uVar4 < 1) || (0xffffffe0 / uVar4 < 2)) {\n            uVar5 = 0;\n        }\n        else {\n            var_24h = uVar4 * 2 + 8;\n            if (var_24h < 0x401) {\n                lpWideCharStr = 0x40b606;\n                fcn.0040f150();\n                *(unaff_EBP + -0x18) = &fcn.0040b503::var_3ch;\n                lpWideCharStr = 0xcccc;\n            }\n            else {\n                lpWideCharStr = 0xdddd;\n                var_28h_2 = 0x40b61d;\n                puVar8 = fcn.00402ff2(var_24h);\n            }\n            var_28h_2 = 0x40b624;\n            var_24h = puVar8;\n            uVar5 = fcn.0040b4cd(puVar8, lpWideCharStr);\n        }\n        *(unaff_EBP + -0x20) = uVar5;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        if (*(unaff_EBP + -0x20) == 0) {\n            lpWideCharStr = uVar4 * 2;\n            var_24h = 0x40b660;\n            iVar6 = fcn.00402ff2(lpWideCharStr);\n            *(unaff_EBP + -0x20) = iVar6;\n            if (iVar6 == 0) goto code_r0x0040b9ae;\n            *(unaff_EBP + -0x34) = 1;\n        }\n        var_24h = *(unaff_EBP + -0x20);\n        var_28h_2 = *(unaff_EBP + 0x18);\n        var_4ch = *(unaff_EBP + 0x14);\n        var_30h_2 = 1;\n        var_34h_2 = *(unaff_EBP + 0x24);\n        lpWideCharStr = uVar4;\n        iVar6 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        if (iVar6 != 0) {\n            puVar8 = &fcn.0040b503::var_34h_2;\n            uVar7 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x20), uVar4, 0, 0);\n            *(unaff_EBP + -0x2c) = uVar7;\n            if (uVar7 != 0) {\n                if ((*(unaff_EBP + 0x10) & 0x400) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    if ((uVar7 < 1) || (0xffffffe0 / uVar7 < 2)) {\n                        uVar5 = 0;\n                    }\n                    else {\n                        arg_8h = uVar7 * 2 + 8;\n                        if (arg_8h < 0x401) {\n                            fcn.0040f150();\n                            *(unaff_EBP + -0x18) = &fcn.0040b503::var_34h_2;\n                            uVar5 = 0xcccc;\n                        }\n                        else {\n                            uVar5 = 0xdddd;\n                            puVar8 = fcn.00402ff2(arg_8h);\n                        }\n                        uVar5 = fcn.0040b4cd(puVar8, uVar5);\n                    }\n                    *(unaff_EBP + -0x24) = uVar5;\n                    *(unaff_EBP + -4) = 0xfffffffe;\n                    if (*(unaff_EBP + -0x24) == 0) {\n                        iVar6 = fcn.00402ff2(uVar7 * 2);\n                        *(unaff_EBP + -0x24) = iVar6;\n                        if (iVar6 == 0) goto code_r0x0040b7b3;\n                        *(unaff_EBP + -0x28) = 1;\n                    }\n                    iVar6 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                      (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x20), uVar4, \n                                       *(unaff_EBP + -0x24), uVar7);\n                    if (iVar6 != 0) {\n                        if (*(unaff_EBP + 0x20) == 0) {\n                            uVar5 = 0;\n                            uVar9 = 0;\n                        }\n                        else {\n                            uVar5 = *(unaff_EBP + 0x20);\n                            uVar9 = *(unaff_EBP + 0x1c);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x24), 0, *(unaff_EBP + -0x24), uVar7, uVar9, uVar5, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x20) != 0) && (uVar7 <= *(unaff_EBP + 0x20))) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + -0x20), uVar4, *(unaff_EBP + 0x1c)\n                               , *(unaff_EBP + 0x20));\n                }\n            }\n        }\ncode_r0x0040b7b3:\n        if (*(unaff_EBP + -0x28) == 0) {\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.0040b4e3(*(unaff_EBP + -0x24));\n            }\n        }\n        else {\n            fcn.004030bc(*(unaff_EBP + -0x24));\n        }\n        if (*(unaff_EBP + -0x34) == 0) {\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.0040b4e3(*(unaff_EBP + -0x20));\n            }\n        }\n        else {\n            fcn.004030bc(*(unaff_EBP + -0x20));\n        }\n        goto code_r0x0040b9ae;\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    uVar4 = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        *(unaff_EBP + 0xc) = *(**(unaff_EBP + 8) + 0x14);\n    }\n    if (iVar6 == 0) {\n        iVar6 = *(**(unaff_EBP + 8) + 4);\n        *(unaff_EBP + 0x24) = iVar6;\n    }\n    var_28h = *(unaff_EBP + 0xc);\n    var_2ch = 0x40b828;\n    iVar1 = fcn.0040ede3(var_28h);\n    *(unaff_EBP + -0x30) = iVar1;\n    if (iVar1 == -1) goto code_r0x0040b9ae;\n    if (*(unaff_EBP + -0x30) == iVar6) {\n        var_28h = *(unaff_EBP + 0x20);\n        var_2ch = *(unaff_EBP + 0x1c);\n        cchDest = *(unaff_EBP + 0x18);\n        lpDestStr = *(unaff_EBP + 0x14);\n        var_38h = *(unaff_EBP + 0x10);\n        var_3ch = *(unaff_EBP + 0xc);\n        lpWideCharStr = 0x40b988;\n        (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n    }\n    else {\n        var_28h = 0;\n        var_2ch = 0;\n        cchDest = unaff_EBP + 0x18;\n        lpDestStr = *(unaff_EBP + 0x14);\n        var_38h = *(unaff_EBP + -0x30);\n        lpWideCharStr = 0x40b853;\n        var_3ch = iVar6;\n        iVar6 = fcn.0040ee2c(iVar6, var_38h, lpDestStr, cchDest, 0, 0);\n        *(unaff_EBP + -0x2c) = iVar6;\n        if (iVar6 == 0) goto code_r0x0040b9ae;\n        var_28h = 0;\n        var_2ch = 0;\n        cchDest = *(unaff_EBP + 0x18);\n        var_38h = *(unaff_EBP + 0x10);\n        var_3ch = *(unaff_EBP + 0xc);\n        lpWideCharStr = 0x40b86f;\n        puVar8 = &fcn.0040b503::var_3ch;\n        lpDestStr = iVar6;\n        uVar7 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        *(unaff_EBP + -0x28) = uVar7;\n        if (uVar7 != 0) {\n            *(unaff_EBP + -4) = 0;\n            if ((uVar7 < 1) || (0xffffffe0 < uVar7)) {\n                uVar4 = 0;\n            }\n            else {\n                var_24h = uVar7 + 8;\n                if (var_24h < 0x401) {\n                    lpWideCharStr = 0x40b898;\n                    fcn.0040f150();\n                    *(unaff_EBP + -0x18) = &fcn.0040b503::var_3ch;\n                    lpWideCharStr = 0xcccc;\n                }\n                else {\n                    lpWideCharStr = 0xdddd;\n                    var_28h_2 = 0x40b8af;\n                    puVar8 = fcn.00402ff2(var_24h);\n                }\n                var_28h_2 = 0x40b8b6;\n                var_24h = puVar8;\n                uVar4 = fcn.0040b4cd(puVar8, lpWideCharStr);\n            }\n            *(unaff_EBP + -0x3c) = uVar4;\n            *(unaff_EBP + -4) = 0xfffffffe;\n            if (uVar4 == 0) {\n                lpWideCharStr = *(unaff_EBP + -0x28);\n                var_24h = 0x40b8f0;\n                uVar4 = fcn.00402ff2(lpWideCharStr);\n                if (uVar4 == 0) goto code_r0x0040b955;\n                lpWideCharStr = *(unaff_EBP + -0x28);\n                var_24h = NULL;\n                var_4ch = 0x40b905;\n                var_28h_2 = uVar4;\n                fcn.004098a0();\n                *(unaff_EBP + -0x34) = 1;\n            }\n            lpWideCharStr = *(unaff_EBP + -0x28);\n            var_28h_2 = *(unaff_EBP + 0x18);\n            var_4ch = *(unaff_EBP + -0x2c);\n            var_30h_2 = *(unaff_EBP + 0x10);\n            var_34h_2 = *(unaff_EBP + 0xc);\n            var_24h = uVar4;\n            iVar6 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            *(unaff_EBP + -0x28) = iVar6;\n            if (iVar6 != 0) {\n                lpWideCharStr = *(unaff_EBP + 0x20);\n                var_24h = *(unaff_EBP + 0x1c);\n                var_28h_2 = unaff_EBP + -0x28;\n                var_30h_2 = *(unaff_EBP + 0x24);\n                var_34h_2 = *(unaff_EBP + -0x30);\n                var_4ch = uVar4;\n                uVar5 = fcn.0040ee2c(var_34h_2, var_30h_2, uVar4, var_28h_2, var_24h, lpWideCharStr);\n                *(unaff_EBP + -0x38) = uVar5;\n            }\n        }\ncode_r0x0040b955:\n        if (*(unaff_EBP + -0x34) == 0) {\n            if (uVar4 != 0) {\n                var_24h = 0x40b96d;\n                lpWideCharStr = uVar4;\n                fcn.0040b4e3(uVar4);\n            }\n        }\n        else {\n            var_24h = 0x40b961;\n            lpWideCharStr = uVar4;\n            fcn.004030bc(uVar4);\n        }\n    }\n    if (*(unaff_EBP + -0x2c) != 0) {\n        lpWideCharStr = *(unaff_EBP + -0x2c);\n        var_24h = 0x40b998;\n        fcn.004030bc(lpWideCharStr);\n    }\n    uVar4 = *(unaff_EBP + -0x38);\n    if ((uVar4 != 0) && (*(unaff_EBP + 0x1c) != uVar4)) {\n        var_24h = 0x40b9ab;\n        lpWideCharStr = uVar4;\n        fcn.004030bc(uVar4);\n    }\ncode_r0x0040b9ae:\n    *(unaff_EBP + -0x50) = 0x40b9b6;\n    fcn.004060e4();\n    return;\n}\n",
        "token_count": 4640
    },
    "0040c898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c898(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040cd99;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c9cd;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c9d4;\ncode_r0x0040c9cd:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c9d4:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c9e2;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c9e2:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x415154 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x415154 < iVar12) {\n                if (iVar12 < *0x415150) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x415150;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040cd99;\n            }\n            var_10h = *0x415154 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040cb85;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040cb85:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040cd99:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "0040cddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cddc(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040d2dd;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x415170 - 1;\n        iVar4 = *0x415170 + (*0x415170 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x415170 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040cf11;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040cf18;\ncode_r0x0040cf11:\n                        do {\n                            var_4h = 1;\ncode_r0x0040cf18:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cf26;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cf26:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x41516c - *0x415170) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x41516c < iVar12) {\n                if (iVar12 < *0x415168) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x41517c;\n                    iVar4 = *0x415174 + (*0x415174 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x415174 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x415174 + (*0x415174 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x415174 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x41517c + *0x415168;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040d2dd;\n            }\n            var_10h = *0x41516c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x415170 - 1;\n            iVar12 = *0x415170 + (*0x415170 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x415170 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040d0c9;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040d0c9:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x415174 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040d2dd:\n    var_20h = iVar12 << (0x1fU - *0x415174 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x415178 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x415178 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3625
    },
    "0040d4ee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d748)\n// WARNING: Removing unreachable block (ram,0x0040d711)\n// WARNING: Removing unreachable block (ram,0x0040daf9)\n// WARNING: Removing unreachable block (ram,0x0040d720)\n// WARNING: Removing unreachable block (ram,0x0040d728)\n// WARNING: Removing unreachable block (ram,0x0040d72e)\n// WARNING: Removing unreachable block (ram,0x0040d731)\n// WARNING: Removing unreachable block (ram,0x0040d738)\n// WARNING: Removing unreachable block (ram,0x0040d742)\n// WARNING: Removing unreachable block (ram,0x0040d79d)\n// WARNING: Removing unreachable block (ram,0x0040d797)\n// WARNING: Removing unreachable block (ram,0x0040d7a3)\n// WARNING: Removing unreachable block (ram,0x0040d7c0)\n// WARNING: Removing unreachable block (ram,0x0040d7c2)\n// WARNING: Removing unreachable block (ram,0x0040d7ca)\n// WARNING: Removing unreachable block (ram,0x0040d7cd)\n// WARNING: Removing unreachable block (ram,0x0040d7d2)\n// WARNING: Removing unreachable block (ram,0x0040d7d5)\n// WARNING: Removing unreachable block (ram,0x0040db02)\n// WARNING: Removing unreachable block (ram,0x0040d7e0)\n// WARNING: Removing unreachable block (ram,0x0040d7eb)\n// WARNING: Removing unreachable block (ram,0x0040d7fe)\n// WARNING: Removing unreachable block (ram,0x0040d800)\n// WARNING: Removing unreachable block (ram,0x0040d80d)\n// WARNING: Removing unreachable block (ram,0x0040d812)\n// WARNING: Removing unreachable block (ram,0x0040d818)\n// WARNING: Removing unreachable block (ram,0x0040d821)\n// WARNING: Removing unreachable block (ram,0x0040d828)\n// WARNING: Removing unreachable block (ram,0x0040d840)\n// WARNING: Removing unreachable block (ram,0x0040d851)\n// WARNING: Removing unreachable block (ram,0x0040d85f)\n// WARNING: Removing unreachable block (ram,0x0040d89e)\n// WARNING: Removing unreachable block (ram,0x0040d8a7)\n// WARNING: Removing unreachable block (ram,0x0040dabf)\n// WARNING: Removing unreachable block (ram,0x0040d8b5)\n// WARNING: Removing unreachable block (ram,0x0040d8bf)\n// WARNING: Removing unreachable block (ram,0x0040dada)\n// WARNING: Removing unreachable block (ram,0x0040d8cc)\n// WARNING: Removing unreachable block (ram,0x0040d8d3)\n// WARNING: Removing unreachable block (ram,0x0040d8dd)\n// WARNING: Removing unreachable block (ram,0x0040d8e2)\n// WARNING: Removing unreachable block (ram,0x0040d8f2)\n// WARNING: Removing unreachable block (ram,0x0040d8f7)\n// WARNING: Removing unreachable block (ram,0x0040d901)\n// WARNING: Removing unreachable block (ram,0x0040d906)\n// WARNING: Removing unreachable block (ram,0x0040d918)\n// WARNING: Removing unreachable block (ram,0x0040d925)\n// WARNING: Removing unreachable block (ram,0x0040d934)\n// WARNING: Removing unreachable block (ram,0x0040d941)\n// WARNING: Removing unreachable block (ram,0x0040d95e)\n// WARNING: Removing unreachable block (ram,0x0040d962)\n// WARNING: Removing unreachable block (ram,0x0040d969)\n// WARNING: Removing unreachable block (ram,0x0040d972)\n// WARNING: Removing unreachable block (ram,0x0040d975)\n// WARNING: Removing unreachable block (ram,0x0040d986)\n// WARNING: Removing unreachable block (ram,0x0040d994)\n// WARNING: Removing unreachable block (ram,0x0040d99f)\n// WARNING: Removing unreachable block (ram,0x0040d9a6)\n// WARNING: Removing unreachable block (ram,0x0040d9d1)\n// WARNING: Removing unreachable block (ram,0x0040d9d6)\n// WARNING: Removing unreachable block (ram,0x0040d9e1)\n// WARNING: Removing unreachable block (ram,0x0040d9ea)\n// WARNING: Removing unreachable block (ram,0x0040d9f0)\n// WARNING: Removing unreachable block (ram,0x0040d9f3)\n// WARNING: Removing unreachable block (ram,0x0040da19)\n// WARNING: Removing unreachable block (ram,0x0040da1e)\n// WARNING: Removing unreachable block (ram,0x0040da23)\n// WARNING: Removing unreachable block (ram,0x0040da30)\n// WARNING: Removing unreachable block (ram,0x0040da41)\n// WARNING: Removing unreachable block (ram,0x0040da72)\n// WARNING: Removing unreachable block (ram,0x0040da47)\n// WARNING: Removing unreachable block (ram,0x0040da6d)\n// WARNING: Removing unreachable block (ram,0x0040da51)\n// WARNING: Removing unreachable block (ram,0x0040da67)\n// WARNING: Removing unreachable block (ram,0x0040da60)\n// WARNING: Removing unreachable block (ram,0x0040da75)\n// WARNING: Removing unreachable block (ram,0x0040daa2)\n// WARNING: Removing unreachable block (ram,0x0040da7f)\n// WARNING: Removing unreachable block (ram,0x0040d90a)\n// WARNING: Removing unreachable block (ram,0x0040d8e7)\n// WARNING: Removing unreachable block (ram,0x0040dadd)\n// WARNING: Removing unreachable block (ram,0x0040d823)\n// WARNING: Removing unreachable block (ram,0x0040dae7)\n// WARNING: Removing unreachable block (ram,0x0040db19)\n// WARNING: Removing unreachable block (ram,0x0040db20)\n// WARNING: Removing unreachable block (ram,0x0040db28)\n\nvoid __cdecl\nfcn.0040d4ee(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040d55b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40db4e\n    (**0x40db4e)();\n    return;\n}\n",
        "token_count": 1788
    },
    "0040ed1b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ed1b(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411d70, 0xc);\n    uVar1 = *(unaff_EBP + 8);\n    iVar3 = (uVar1 & 0x1f) * 0x24 + *((uVar1 >> 5) * 4 + 0x417080);\n    *(unaff_EBP + -0x1c) = 1;\n    if ((*(iVar3 + 8) & 4) == 0) {\n        fcn.00406697(10);\n        *(unaff_EBP + -4) = 0;\n        if ((*(iVar3 + 8) & 4) == 0) {\n            iVar2 = fcn.0040a3db(iVar3 + 0xc, 4000);\n            if (iVar2 == 0) {\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            *(iVar3 + 8) = *(iVar3 + 8) | 4;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040edb3();\n    }\n    if (*(unaff_EBP + -0x1c) != 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar1 >> 5) * 4 + 0x417080) + 0xc + (uVar1 & 0x1f) * 0x24);\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 421
    },
    "0040f1ce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f1ce(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0040c7b2(arg_8h, 0, 10, 1);\n    return uVar1;\n}\n",
        "token_count": 82
    },
    "0042324c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0042324c(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint in_EDX;\n    \n    uVar4 = 8;\n    if (arg_10h < 8) {\n        iVar3 = 8 - arg_10h;\n        do {\n            arg_8h = arg_8h << 4 | arg_8h >> 0x1c;\n            iVar3 = iVar3 + -1;\n            uVar4 = arg_10h;\n        } while (iVar3 != 0);\n    }\n    do {\n        uVar1 = arg_8h >> 0x1c;\n        if (arg_8h >> 0x1c < 10) {\n            cVar2 = uVar1 + 0x30;\n        }\n        else {\n            cVar2 = uVar1 + 0x37;\n        }\n        *arg_ch = cVar2;\n        arg_ch = arg_ch + 1;\n        uVar4 = uVar4 - 1;\n        arg_8h = arg_8h << 4 | arg_8h >> 0x1c;\n    } while (uVar4 != 0);\n    return CONCAT44(in_EDX, arg_ch);\n}\n",
        "token_count": 312
    },
    "004232d1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004232d1(char *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint in_EDX;\n    \n    pcVar2 = NULL;\n    if (arg_ch != 0) {\n        do {\n            pcVar2 = arg_8h;\n            if (arg_ch == 0) break;\n            arg_ch = arg_ch + -1;\n            pcVar2 = arg_8h + 1;\n            cVar1 = *arg_8h;\n            arg_8h = pcVar2;\n        } while (arg_10h != cVar1);\n        pcVar2 = pcVar2 + -1;\n        if (*pcVar2 != arg_10h) {\n            pcVar2 = NULL;\n        }\n    }\n    return CONCAT44(in_EDX, pcVar2);\n}\n",
        "token_count": 198
    },
    "00423308": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00423308(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    \n    iVar2 = 0;\n    if (arg_8h != NULL) {\n        uVar3 = 0xffffffff;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n        } while (cVar1 != '\\0');\n        iVar2 = ~uVar3 - 1;\n    }\n    return CONCAT44(in_EDX, iVar2);\n}\n",
        "token_count": 162
    },
    "00423335": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00423335(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint in_EDX;\n    \n    iVar3 = -1;\n    if ((arg_8h != NULL) && (arg_ch != NULL)) {\n        while( true ) {\n            uVar1 = *arg_8h;\n            uVar2 = *arg_ch;\n            if ((uVar1 == 0) || ((uVar2 == 0 || (uVar2 != uVar1)))) break;\n            arg_ch = arg_ch + 1;\n            arg_8h = arg_8h + 1;\n        }\n        iVar3 = uVar1 - uVar2;\n    }\n    return CONCAT44(in_EDX, iVar3);\n}\n",
        "token_count": 190
    },
    "0042337b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042337b(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = (**(arg_8h + 0x2001bba6))(arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = (**(arg_8h + 0x2001bb9e))(arg_ch);\n    }\n    if (iVar1 != 0) {\n        while( true ) {\n            piVar3 = arg_10h;\n            piVar5 = arg_ch;\n            iVar2 = (*(arg_8h + 0x2001b5d0))();\n            pcVar4 = arg_ch + iVar2 + 1;\n            if (*pcVar4 == '\\0') break;\n            iVar2 = (**(arg_8h + 0x2001bba2))(iVar1, pcVar4, pcVar4);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            *piVar5 = iVar2;\n            arg_10h = piVar5 + 1;\n            arg_ch = piVar3;\n        }\n        var_8h = 1;\n    }\n    return var_8h;\n}\n",
        "token_count": 337
    },
    "00404eaa": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404eaa(int32_t arg_8h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint lpNumberOfBytesWritten;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == *(var_4h * 8 + 0x414668)) break;\n        var_4h = var_4h + 1;\n    } while (var_4h < 0x17);\n    uVar3 = var_4h;\n    if (var_4h < 0x17) {\n        iVar4 = fcn.0040a6d9(3);\n        if ((iVar4 != 1) && ((iVar4 = fcn.0040a6d9(3),  iVar4 != 0 || (*0x414104 != 1)))) {\n            if (arg_8h == 0xfc) {\n                return;\n            }\n            iVar4 = fcn.004094fb(0x416648, 0x314, \"Runtime Error!\\n\\nProgram: \");\n            if (iVar4 != 0) {\n                fcn.00402bcc(0, 0, 0, 0, 0);\n            }\n            *0x416765 = 0;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x416661, 0x104);\n            if ((iVar4 == 0) && (iVar4 = fcn.004094fb(0x416661, 0x2fb, \"<program name unknown>\"),  iVar4 != 0)) {\n                fcn.00402bcc(0, 0, 0, 0, 0);\n            }\n            iVar4 = fcn.0040a665(0x416648, 0x314, 0x416661);\n            if (iVar4 != 0) {\n                fcn.00402bcc(0, 0, 0, 0, 0);\n            }\n            iVar4 = fcn.0040a665(0x416648, 0x314, 0x410a58);\n            if (iVar4 != 0) {\n                fcn.00402bcc(0, 0, 0, 0, 0);\n            }\n            iVar4 = fcn.0040a665(0x416648, 0x314, *(var_4h * 8 + 0x41466c));\n            if (iVar4 != 0) {\n                fcn.00402bcc(0, 0, 0, 0, 0);\n            }\n            fcn.0040a4c3(0x416648, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n            return;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff4);\n        if ((iVar4 != 0) && (iVar4 != -1)) {\n            pcVar2 = *(uVar3 * 8 + 0x41466c);\n            pcVar5 = pcVar2;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            (*_sym.imp.KERNEL32.dll_WriteFile)(iVar4, pcVar2, pcVar5 - (pcVar2 + 1), &lpNumberOfBytesWritten, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 796
    },
    "00405788": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00405788(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint lpStartupInfo;\n    uint var_32h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411a88, 0x54);\n    *(unaff_EBP + -4) = 0;\n    (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(unaff_EBP + -100);\n    *(unaff_EBP + -4) = 0xfffffffe;\n    puVar3 = fcn.004062a2(0x20, 0x24);\n    if (puVar3 != NULL) {\n        *0x417068 = 0x20;\n        *0x417080 = puVar3;\n        for (; puVar3 < *0x417080 + 0x120; puVar3 = puVar3 + 9) {\n            *(puVar3 + 1) = 0;\n            *puVar3 = 0xffffffff;\n            *(puVar3 + 5) = 10;\n            puVar3[2] = 0;\n            *(puVar3 + 6) = 10;\n            *(puVar3 + 7) = 10;\n        }\n        if ((*(unaff_EBP + -0x32) != 0) && (piVar5 = *(unaff_EBP + -0x30),  piVar5 != NULL)) {\n            iVar7 = *piVar5;\n            piVar5 = piVar5 + 1;\n            *(unaff_EBP + -0x1c) = piVar5 + iVar7;\n            if (0x7ff < iVar7) {\n                iVar7 = 0x800;\n            }\n            iVar6 = 1;\n            while ((iVar8 = iVar7,  *0x417068 < iVar7 &&\n                   (puVar3 = fcn.004062a2(0x20, 0x24),  iVar8 = *0x417068,  puVar3 != NULL))) {\n                puVar1 = iVar6 * 4 + 0x417080;\n                *puVar1 = puVar3;\n                *0x417068 = *0x417068 + 0x20;\n                puVar2 = puVar3;\n                for (; puVar3 < puVar2 + 0x120; puVar3 = puVar3 + 9) {\n                    *(puVar3 + 1) = 0;\n                    *puVar3 = 0xffffffff;\n                    *(puVar3 + 5) = 10;\n                    puVar3[2] = 0;\n                    *(puVar3 + 6) = 10;\n                    *(puVar3 + 7) = 10;\n                    puVar2 = *puVar1;\n                }\n                iVar6 = iVar6 + 1;\n            }\n            *(unaff_EBP + -0x20) = 0;\n            if (0 < iVar8) {\n                do {\n                    iVar7 = **(unaff_EBP + -0x1c);\n                    if ((((iVar7 != -1) && (iVar7 != -2)) && ((*piVar5 & 1) != 0)) &&\n                       (((*piVar5 & 8) != 0 || (iVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar7),  iVar7 != 0)))) {\n                        puVar3 = (*(unaff_EBP + -0x20) & 0x1f) * 0x24 + *((*(unaff_EBP + -0x20) >> 5) * 4 + 0x417080);\n                        *puVar3 = **(unaff_EBP + -0x1c);\n                        *(puVar3 + 1) = *piVar5;\n                        iVar7 = fcn.0040a3db(puVar3 + 3, 4000);\n                        if (iVar7 == 0) goto code_r0x004059bc;\n                        puVar3[2] = puVar3[2] | 4;\n                    }\n                    *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                    piVar5 = piVar5 + 1;\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n                } while (*(unaff_EBP + -0x20) < iVar8);\n            }\n        }\n        iVar7 = 0;\n        do {\n            piVar5 = *0x417080 + iVar7 * 9;\n            if ((*piVar5 == -1) || (*piVar5 == -2)) {\n                *(piVar5 + 1) = 0x81;\n                if (iVar7 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar7 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(iVar6);\n                if (((iVar6 == -1) || (iVar6 == 0)) ||\n                   (uVar4 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar6),  uVar4 == 0)) {\n                    *(piVar5 + 1) = *(piVar5 + 1) | 0x40;\n                    *piVar5 = -2;\n                }\n                else {\n                    *piVar5 = iVar6;\n                    if ((uVar4 & 0xff) == 2) {\n                        *(piVar5 + 1) = *(piVar5 + 1) | 0x40;\n                    }\n                    else if ((uVar4 & 0xff) == 3) {\n                        *(piVar5 + 1) = *(piVar5 + 1) | 8;\n                    }\n                    iVar6 = fcn.0040a3db(piVar5 + 3, 4000);\n                    if (iVar6 == 0) goto code_r0x004059bc;\n                    piVar5[2] = piVar5[2] | 4;\n                }\n            }\n            else {\n                *(piVar5 + 1) = *(piVar5 + 1) | 0x80;\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < 3);\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(*0x417068);\n    }\ncode_r0x004059bc:\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 1526
    },
    "00405f44": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00405f44(void)\n\n{\n    int32_t iVar1;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    iVar1 = fcn.00404c4b(&var_4h);\n    if (iVar1 != 0) {\n        fcn.00402bcc(0, 0, 0, 0, 0);\n    }\n    iVar1 = fcn.00404c87(&var_8h);\n    if (iVar1 != 0) {\n        fcn.00402bcc(0, 0, 0, 0, 0);\n    }\n    if ((var_4h == 2) && (4 < var_8h)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 193
    },
    "00406062": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406062(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00406001(iVar1);\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x5c) == 2) {\n                return 2;\n            }\n            if (*(iVar1 + 0x5c) == 3) {\n                return 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 138
    },
    "00406515": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00406515(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = 0x416a80;\n    do {\n        if (*(iVar3 * 8 + 0x4147dc) == 1) {\n            piVar1 = iVar3 * 8 + 0x4147d8;\n            *piVar1 = iVar4;\n            iVar4 = iVar4 + 0x18;\n            iVar2 = fcn.0040a4af(*piVar1, 4000);\n            if (iVar2 == 0) {\n                *(iVar3 * 8 + 0x4147d8) = 0;\n                return 0;\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x24);\n    return 1;\n}\n",
        "token_count": 212
    },
    "0040931f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040931f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    fcn.00401e49(arg_10h);\n    var_14h = fcn.0040db7e(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c898(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00409378:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004093b8;\n        }\n        if (iVar1 != 2) {\ncode_r0x004093aa:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004093b8;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004093aa;\n        goto code_r0x00409378;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004093b8:\n    fcn.0040747d(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "004093c7": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004093c7(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    fcn.00401e49(arg_10h);\n    var_14h = fcn.0040db7e(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040cddc(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00409420:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409460;\n        }\n        if (iVar1 != 2) {\ncode_r0x00409452:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00409460;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00409452;\n        goto code_r0x00409420;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00409460:\n    fcn.0040747d(unaff_EBX);\n    return;\n}\n",
        "token_count": 498
    },
    "0040a3db": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a3db(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411c78, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    pcVar1 = fcn.00405a3e(*0x416c40);\n    if (pcVar1 != NULL) goto code_r0x0040a460;\n    iVar2 = fcn.00404c4b(unaff_EBP + -0x1c);\n    if (iVar2 != 0) {\n        fcn.00402bcc(0, 0, 0, 0, 0);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    if (*(unaff_EBP + -0x1c) == 1) {\ncode_r0x0040a44f:\n        pcVar1 = fcn.0040a3c6;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernelbase.dll\");\n        if (iVar2 == 0) {\n            (*pcVar1)(L\"kernel32.dll\");\n            goto code_r0x0040a44f;\n        }\n        pcVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"InitializeCriticalSectionAndSpinCount\");\n        if (pcVar1 == NULL) goto code_r0x0040a44f;\n    }\n    *0x416c40 = fcn.004059c2(pcVar1);\ncode_r0x0040a460:\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 514
    },
    "0040a4c3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a4c3(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.00405a35();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x416c44 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(\"USER32.DLL\", 0, 0);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MessageBoxA\"),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x416c44 = fcn.004059c2(iVar2);\n        uVar3 = (*pcVar4)(iVar1, \"GetActiveWindow\");\n        *0x416c48 = fcn.004059c2(uVar3);\n        uVar3 = (*pcVar4)(iVar1, \"GetLastActivePopup\");\n        *0x416c4c = fcn.004059c2(uVar3);\n        iVar2 = fcn.00404c4b(&var_8h);\n        if (iVar2 != 0) {\n            fcn.00402bcc(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x416c54 = fcn.004059c2(uVar3);\n            if (*0x416c54 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x416c50 = fcn.004059c2(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x416c50 == var_10h) || (*0x416c54 == var_10h)) {\ncode_r0x0040a615:\n        if (*0x416c48 != iVar1) {\n            pcVar4 = fcn.00405a3e(*0x416c48);\n            iVar2 = (*pcVar4)();\n            var_4h = iVar2;\n            if ((iVar2 != 0) && (*0x416c4c != iVar1)) {\n                pcVar4 = fcn.00405a3e(*0x416c4c);\n                var_4h = (*pcVar4)(iVar2);\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.00405a3e(*0x416c50);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            puVar7 = &var_14h;\n            uVar6 = 0xc;\n            puVar5 = &var_20h;\n            uVar3 = 1;\n            pcVar4 = fcn.00405a3e(*0x416c54);\n            iVar2 = (*pcVar4)(iVar2, uVar3, puVar5, uVar6, puVar7);\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x0040a615;\n        }\n        iVar1 = fcn.00404c87(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00402bcc(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    iVar1 = var_4h;\n    pcVar4 = fcn.00405a3e(*0x416c44);\n    uVar3 = (*pcVar4)(iVar1, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 1030
    },
    "0040e837": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e837(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0040ec89(arg_8h);\n    if (iVar1 != -1) {\n        if (((arg_8h == 1) && ((*(*0x417080 + 0x4c) & 1) != 0)) || ((arg_8h == 2 && ((*(*0x417080 + 0x28) & 1) != 0))))\n        {\n            iVar1 = fcn.0040ec89(2);\n            iVar2 = fcn.0040ec89(1);\n            if (iVar2 == iVar1) goto code_r0x0040e89a;\n        }\n        uVar3 = fcn.0040ec89(arg_8h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            goto code_r0x0040e89c;\n        }\n    }\ncode_r0x0040e89a:\n    iVar1 = 0;\ncode_r0x0040e89c:\n    fcn.0040ec03(arg_8h);\n    *(*((arg_8h >> 5) * 4 + 0x417080) + 4 + (arg_8h & 0x1f) * 0x24) = 0;\n    if (iVar1 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        fcn.00402ce5(iVar1);\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 399
    },
    "0040ec03": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ec03(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if ((-1 < arg_8h) && (arg_8h < *0x417068)) {\n        iVar4 = (arg_8h & 0x1f) * 0x24;\n        piVar1 = (arg_8h >> 5) * 4 + 0x417080;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x414104 == 1) {\n                if (arg_8h == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (arg_8h == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (arg_8h != 2) goto code_r0x0040ec65;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x0040ec65:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.00402cbf();\n    *puVar3 = 9;\n    puVar3 = fcn.00402cd2();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 378
    },
    "0040ee2c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0040ee2c(int32_t arg_8h, int32_t CodePage, char *arg_10h, char **arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t arg_8h_00;\n    char cVar1;\n    char *pcVar2;\n    bool bVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    int32_t iStack76;\n    uint *puStack72;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *lpWideCharStr;\n    int32_t var_18h;\n    uint32_t var_4h;\n    \n    pcVar5 = _sym.imp.KERNEL32.dll_GetCPInfo;\n    var_4h = *0x414f10 ^ &stack0xfffffffc;\n    pcVar2 = *arg_14h;\n    bVar3 = false;\n    if (arg_8h == CodePage) goto code_r0x0040efd4;\n    puStack72 = &var_18h;\n    iStack76 = arg_8h;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    pcVar4 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if ((((iVar6 == 0) || (var_18h != 1)) || (iVar6 = (*pcVar5)(CodePage, &var_18h),  iVar6 == 0)) || (var_18h != 1)) {\n        pcVar7 = (*pcVar4)(arg_8h, 1, arg_10h, pcVar2, 0, 0);\n        bVar9 = pcVar7 == NULL;\n        if (bVar9) goto code_r0x0040efd4;\n    }\n    else {\n        bVar3 = true;\n        pcVar7 = pcVar2;\n        if (pcVar2 == 0xffffffff) {\n            pcVar7 = arg_10h;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            pcVar7 = pcVar7 + (1 - (arg_10h + 1));\n        }\n        bVar9 = pcVar7 == NULL;\n    }\n    piVar8 = &iStack76;\n    if ((bVar9 || pcVar7 < 0) || (0x7ffffff0 < pcVar7)) {\n        lpWideCharStr = NULL;\n    }\n    else {\n        arg_8h_00 = pcVar7 * 2 + 8;\n        if (arg_8h_00 < 0x401) {\n            fcn.0040f150();\n            lpWideCharStr = &iStack76;\n            if (*0x10 != 0x4c) {\n                iStack76 = 0xcccc;\ncode_r0x0040ef14:\n                lpWideCharStr = piVar8 + 2;\n            }\n        }\n        else {\n            piVar8 = fcn.00402ff2(arg_8h_00);\n            lpWideCharStr = piVar8;\n            if (piVar8 != NULL) {\n                *piVar8 = 0xdddd;\n                goto code_r0x0040ef14;\n            }\n        }\n    }\n    if (lpWideCharStr != NULL) {\n        fcn.004098a0(lpWideCharStr, 0, pcVar7 * 2);\n        iVar6 = (*pcVar4)(arg_8h, 1, arg_10h, pcVar2, lpWideCharStr, pcVar7);\n        pcVar5 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        if (iVar6 != 0) {\n            if (arg_18h == 0) {\n                if (((bVar3) ||\n                    (pcVar7 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                        (CodePage, 0, lpWideCharStr, pcVar7, 0, 0, 0, 0),  pcVar7 != NULL)) &&\n                   (iVar6 = fcn.004062a2(1, pcVar7),  iVar6 != 0)) {\n                    pcVar7 = (*pcVar5)(CodePage, 0, lpWideCharStr, pcVar7, iVar6, pcVar7, 0, 0);\n                    if (pcVar7 == NULL) {\n                        fcn.004030bc(iVar6);\n                    }\n                    else if (pcVar2 != 0xffffffff) {\n                        *arg_14h = pcVar7;\n                    }\n                }\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(CodePage, 0, lpWideCharStr, pcVar7, arg_18h, arg_1ch, 0, 0)\n                ;\n            }\n        }\n        fcn.0040b4e3(lpWideCharStr);\n    }\ncode_r0x0040efd4:\n    fcn.0040747d(arg_18h);\n    return;\n}\n",
        "token_count": 1232
    },
    "0040efe6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpSystemInfo\n// WARNING: Variable defined which should be unmapped: var_68h\n\nvoid fcn.0040efe6(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    uint var_68h;\n    uint lpSystemInfo;\n    int32_t var_58h;\n    uint lpBuffer;\n    int32_t var_34h;\n    uint lpflOldProtect;\n    int32_t var_18h;\n    uint *lpAddress;\n    uint32_t var_10h;\n    int32_t var_ch_2;\n    uint32_t dwSize;\n    uint32_t var_4h_2;\n    \n    var_4h_2 = *0x414f10 ^ &stack0xfffffffc;\n    var_ch_2 = 0;\n    iVar1 = fcn.00404c4b(&var_ch_2);\n    if (iVar1 != 0) {\n        fcn.00402bcc(0, 0, 0, 0, 0);\n    }\n    lpAddress = &var_68h;\n    fcn.0040f240();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(&var_68h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        var_18h = var_34h;\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n        bVar4 = var_ch_2 != 1;\n        dwSize = 0;\n        if (var_ch_2 == 2) {\n            var_10h = 0;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernelbase.dll\");\n            if (((iVar1 != 0) || (iVar1 = (*pcVar2)(L\"kernel32.dll\"),  iVar1 != 0)) &&\n               (pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"SetThreadStackGuarantee\"),  pcVar2 != NULL)) {\n                var_10h = 0;\n                iVar1 = (*pcVar2)(&var_10h);\n                if ((iVar1 == 1) && (var_10h != 0)) {\n                    dwSize = var_10h;\n                }\n            }\n        }\n        iVar1 = fcn.00405359(dwSize, var_58h - 1U, &dwSize);\n        if ((-1 < iVar1) &&\n           ((dwSize = dwSize & ~(var_58h - 1U),  dwSize == 0 ||\n            (iVar1 = fcn.00405359(dwSize, var_58h, &dwSize),  -1 < iVar1)))) {\n            if (dwSize < var_58h * 2) {\n                dwSize = var_58h * 2;\n            }\n            uVar3 = (~(var_58h - 1U) & lpAddress) - dwSize;\n            if (var_ch_2 == 1) {\n                var_58h = 0x11;\n            }\n            if ((var_58h + var_18h <= uVar3) &&\n               (iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(uVar3, dwSize, 0x1000, 4),  iVar1 != 0)) {\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)(uVar3, dwSize, (-bVar4 & 0x103) + 1, &lpflOldProtect);\n            }\n        }\n    }\n    fcn.0040747d(lpSystemInfo);\n    return;\n}\n",
        "token_count": 856
    },
    "00423678": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423678(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_28h;\n    \n    iVar1 = (*(arg_8h + 0x2001b790))(arg_8h, 0x7f3, 0, &var_28h);\n    if (iVar1 == 1) {\n        (*(arg_8h + 0x2001b4c2))(arg_8h, &var_28h);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00405fa1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405fa1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    *0x416a7c = (*_sym.imp.KERNEL32.dll_HeapCreate)(arg_8h == 0, 0x1000, 0);\n    if (*0x416a7c == 0) {\n        return 0;\n    }\n    *0x417064 = fcn.00405f44();\n    if ((*0x417064 == 3) && (iVar1 = fcn.004083e4(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapDestroy)(*0x416a7c);\n        *0x416a7c = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 185
    },
    "00401e49": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e49(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    *(in_ECX + 3) = 0;\n    if (arg_8h == NULL) {\n        iVar2 = fcn.00405be9();\n        in_ECX[2] = iVar2;\n        if (iVar2 != 0) {\n            *in_ECX = *(iVar2 + 0x6c);\n            in_ECX[1] = *(iVar2 + 0x68);\n            if (((*in_ECX != *0x414f00) && ((*(iVar2 + 0x70) & 2) == 0)) && ((*0x414e1c & 1) != 0)) {\n                iVar2 = fcn.004070cb();\n                *in_ECX = iVar2;\n            }\n            if (((in_ECX[1] != *0x414d20) && ((*(in_ECX[2] + 0x70) & 2) == 0)) && ((*0x414e1c & 1) != 0)) {\n                iVar2 = fcn.00406986();\n                in_ECX[1] = iVar2;\n            }\n            if ((*(in_ECX[2] + 0x70) & 2) != 0) {\n                return;\n            }\n            puVar1 = in_ECX[2] + 0x70;\n            *puVar1 = *puVar1 | 2;\n            *(in_ECX + 3) = 1;\n            return;\n        }\n        *in_ECX = *0x414f00;\n        iVar2 = *0x414d20;\n    }\n    else {\n        *in_ECX = *arg_8h;\n        iVar2 = arg_8h[1];\n    }\n    in_ECX[1] = iVar2;\n    return;\n}\n",
        "token_count": 439
    },
    "00407146": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407146(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    \n    arg_8h_00 = arg_ch;\n    arg_ch = fcn.0040672e(arg_ch);\n    uVar1 = arg_8h_00[3];\n    if ((uVar1 & 0x82) == 0) {\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\ncode_r0x0040716b:\n        arg_8h_00[3] = arg_8h_00[3] | 0x20;\n        return 0xffffffff;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 0x22;\n        goto code_r0x0040716b;\n    }\n    iVar5 = 0;\n    if ((uVar1 & 1) != 0) {\n        arg_8h_00[1] = 0;\n        if ((uVar1 & 0x10) == 0) {\n            arg_8h_00[3] = uVar1 | 0x20;\n            return 0xffffffff;\n        }\n        *arg_8h_00 = arg_8h_00[2];\n        arg_8h_00[3] = uVar1 & 0xfffffffe;\n    }\n    uVar1 = arg_8h_00[3];\n    arg_8h_00[3] = uVar1 & 0xffffffef | 2;\n    arg_8h_00[1] = 0;\n    if (((uVar1 & 0x10c) == 0) &&\n       (((arg_8h_00 != 0x414128 && (arg_8h_00 != 0x414148)) || (iVar3 = fcn.004066ca(arg_ch),  iVar3 == 0)))) {\n        fcn.0040c30e(arg_8h_00);\n    }\n    if ((arg_8h_00[3] & 0x108U) == 0) {\n        iVar3 = 1;\n        iVar5 = fcn.0040b310(arg_ch, &arg_8h, 1);\n    }\n    else {\n        iVar4 = arg_8h_00[2];\n        iVar3 = *arg_8h_00;\n        *arg_8h_00 = iVar4 + 1;\n        iVar3 = iVar3 - iVar4;\n        arg_8h_00[1] = arg_8h_00[6] + -1;\n        if (iVar3 < 1) {\n            if ((arg_ch == 0xffffffff) || (arg_ch == 0xfffffffe)) {\n                iVar4 = 0x4147a8;\n            }\n            else {\n                iVar4 = (arg_ch & 0x1f) * 0x24 + *((arg_ch >> 5) * 4 + 0x417080);\n            }\n            if (((*(iVar4 + 4) & 0x20) != 0) && (iVar6 = fcn.0040c1f5(arg_ch, 0, 0, 2),  iVar6 == -1))\n            goto code_r0x0040727d;\n        }\n        else {\n            iVar5 = fcn.0040b310(arg_ch, iVar4, iVar3);\n        }\n        *arg_8h_00[2] = arg_8h;\n    }\n    if (iVar5 == iVar3) {\n        return arg_8h & 0xff;\n    }\ncode_r0x0040727d:\n    arg_8h_00[3] = arg_8h_00[3] | 0x20;\n    return 0xffffffff;\n}\n",
        "token_count": 913
    },
    "00407704": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407704(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00402d08(0x411bf8, 8);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00407680(0x400000);\n    if (iVar1 != 0) {\n        iVar1 = fcn.004076c0(0x400000, *(unaff_EBP + 8) + -0x400000);\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0xfffffffe;\n            goto code_r0x0040776a;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x0040776a:\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 228
    },
    "0040b310": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b310(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411cb8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00402cd2();\n        *puVar2 = 0;\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x417068)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x417080;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040ed1b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00402cbf();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00402cd2();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040ac34(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040b3e2(0x411cb8);\n                goto code_r0x0040b3dc;\n            }\n        }\n        puVar2 = fcn.00402cd2();\n        *puVar2 = 0;\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\n        fcn.00402c72(0, 0, 0, 0, 0);\n    }\ncode_r0x0040b3dc:\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 636
    },
    "0040e8d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e8d0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411d50, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xffffffff) {\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\n        puVar2 = fcn.00402cd2();\n        *puVar2 = 0;\n    }\n    else if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00402cd2();\n        *puVar2 = 0;\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\n    }\n    else if ((arg_8h_00 < 0) || (*0x417068 <= arg_8h_00)) {\n        puVar2 = fcn.00402cd2();\n        *puVar2 = 0;\n        puVar2 = fcn.00402cbf();\n        *puVar2 = 9;\n        fcn.00402c72(0, 0, 0, 0, 0);\n    }\n    else {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x417080;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n            puVar2 = fcn.00402cd2();\n            *puVar2 = 0;\n            puVar2 = fcn.00402cbf();\n            *puVar2 = 9;\n            fcn.00402c72(0, 0, 0, 0, 0);\n        }\n        else {\n            fcn.0040ed1b(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar2 = fcn.00402cbf();\n                *puVar2 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar3 = fcn.0040e837(*(unaff_EBP + 8));\n                *(unaff_EBP + -0x1c) = uVar3;\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040e9d2(0x411d50);\n        }\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 697
    },
    "0040ec89": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ec89(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    if (arg_8h != 0xffffffff) {\n        if (arg_8h != 0xfffffffe) {\n            if ((arg_8h < 0) || (*0x417068 <= arg_8h)) {\n                puVar1 = fcn.00402cd2();\n                *puVar1 = 0;\n                puVar1 = fcn.00402cbf();\n                *puVar1 = 9;\n            }\n            else {\n                puVar1 = (arg_8h & 0x1f) * 0x24 + *((arg_8h >> 5) * 4 + 0x417080);\n                if ((*(puVar1 + 1) & 1) != 0) {\n                    return *puVar1;\n                }\n                puVar1 = fcn.00402cd2();\n                *puVar1 = 0;\n                puVar1 = fcn.00402cbf();\n                *puVar1 = 9;\n                fcn.00402c72(0, 0, 0, 0, 0);\n            }\n            return 0xffffffff;\n        }\n        puVar1 = fcn.00402cd2();\n        *puVar1 = 0;\n    }\n    puVar1 = fcn.00402cbf();\n    *puVar1 = 9;\n    return 0xffffffff;\n}\n",
        "token_count": 329
    },
    "00405dca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405dca(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"KERNEL32.DLL\");\n    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar1 != 0) {\n        *0x416a6c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"FlsAlloc\");\n        *0x416a70 = (*pcVar2)(iVar1, \"FlsGetValue\");\n        *0x416a74 = (*pcVar2)(iVar1, \"FlsSetValue\");\n        *0x416a78 = (*pcVar2)(iVar1, \"FlsFree\");\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_TlsSetValue;\n    if ((((*0x416a6c == 0) || (*0x416a70 == 0)) || (*0x416a74 == NULL)) || (*0x416a78 == 0)) {\n        *0x416a70 = _sym.imp.KERNEL32.dll_TlsGetValue;\n        *0x416a6c = 0x405ab1;\n        *0x416a74 = _sym.imp.KERNEL32.dll_TlsSetValue;\n        *0x416a78 = _sym.imp.KERNEL32.dll_TlsFree;\n    }\n    *0x4147cc = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if ((*0x4147cc != -1) && (iVar1 = (*pcVar2)(*0x4147cc, *0x416a70),  iVar1 != 0)) {\n        fcn.00404e68();\n        *0x416a6c = fcn.004059c2(*0x416a6c);\n        *0x416a70 = fcn.004059c2(*0x416a70);\n        *0x416a74 = fcn.004059c2(*0x416a74);\n        *0x416a78 = fcn.004059c2(*0x416a78);\n        iVar1 = fcn.00406515();\n        if (iVar1 != 0) {\n            uVar4 = 0x405c7f;\n            pcVar2 = fcn.00405a3e(*0x416a6c);\n            *0x4147d0 = (*pcVar2)(uVar4);\n            if ((*0x4147d0 != -1) && (iVar1 = fcn.0040aaf5(1, 0x214),  iVar1 != 0)) {\n                iVar3 = *0x4147d0;\n                iVar5 = iVar1;\n                pcVar2 = fcn.00405a3e(*0x416a74);\n                iVar3 = (*pcVar2)(iVar3, iVar5);\n                if (iVar3 != 0) {\n                    fcn.00405b21(iVar1, 0);\n                    *(iVar1 + 4) = 0xffffffff;\n                    return 1;\n                }\n                fcn.004030bc(iVar1);\n            }\n        }\n        fcn.00405ae4();\n    }\n    return 0;\n}\n",
        "token_count": 735
    },
    "00406001": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406001(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411af0, 0xc);\n    piVar1 = *(unaff_EBP + 8);\n    if ((piVar1 != NULL) && (piVar1 != 0xffffffff)) {\n        *(unaff_EBP + -4) = 0;\n        if ((*piVar1 == 0x5a4d) &&\n           (((uVar2 = *(piVar1 + 0x1e),  -1 < uVar2 && (uVar2 < 0x10000000)) &&\n            (*(unaff_EBP + -0x1c) = uVar2 + piVar1,  *(uVar2 + piVar1) != 0x4550)))) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        *(unaff_EBP + -4) = 0xfffffffe;\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 286
    },
    "004236ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004236ab(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (**(arg_8h + 0x2001bc4a))(arg_ch, 0x40000000, 2, 0, 2, 0x80, 0);\n    if (iVar1 != -1) {\n        (**(arg_8h + 0x2001bc4e))(iVar1, arg_10h, arg_14h, &var_4h, 0, iVar1);\n        (**(arg_8h + 0x2001bc46))();\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 177
    },
    "0040edbc": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040edbc(uint32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg_8h >> 5) * 4 + 0x417080) + 0xc + (arg_8h & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 79
    },
    "00404164": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00404164(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, ulong *arg_18h, ulong *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint dwExceptionCode;\n    \n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    dwExceptionCode = 0;\n    arg_8h[3] = 0;\n    if ((arg_10h & 0x10) != 0) {\n        arg_8h[1] = arg_8h[1] | 1;\n        dwExceptionCode = 0xc000008f;\n    }\n    if ((arg_10h & 2) != 0) {\n        arg_8h[1] = arg_8h[1] | 2;\n        dwExceptionCode = 0xc0000093;\n    }\n    if ((arg_10h & 1) != 0) {\n        arg_8h[1] = arg_8h[1] | 4;\n        dwExceptionCode = 0xc0000091;\n    }\n    if ((arg_10h & 4) != 0) {\n        arg_8h[1] = arg_8h[1] | 8;\n        dwExceptionCode = 0xc000008e;\n    }\n    if ((arg_10h & 8) != 0) {\n        arg_8h[1] = arg_8h[1] | 0x10;\n        dwExceptionCode = 0xc0000090;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch * 2) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00404a3a();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar4 = *puVar1 & 0xc00;\n    if (uVar4 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar4 == 0x400) {\n            uVar4 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar4 != 0x800) {\n                if (uVar4 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x004042c7;\n            }\n            uVar4 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar4;\n    }\ncode_r0x004042c7:\n    uVar4 = *puVar1 & 0x300;\n    if (uVar4 == 0) {\n        uVar4 = *arg_8h & 0xffffffeb | 8;\ncode_r0x004042fd:\n        *arg_8h = uVar4;\n    }\n    else {\n        if (uVar4 == 0x200) {\n            uVar4 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x004042fd;\n        }\n        if (uVar4 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    if (arg_20h == 0) {\n        arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n        *(arg_8h + 4) = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n        *(arg_8h + 0x14) = *arg_1ch;\n    }\n    else {\n        arg_8h[8] = arg_8h[8] & 0xffffffe1;\n        arg_8h[4] = *arg_18h;\n        arg_8h[0x18] = arg_8h[0x18] | 1;\n        arg_8h[0x18] = arg_8h[0x18] & 0xffffffe1;\n        arg_8h[0x14] = *arg_1ch;\n    }\n    fcn.00404a4a();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(dwExceptionCode, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar4 = *arg_8h & 3;\n    if (uVar4 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar4 == 1) {\n            uVar4 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar4 != 2) {\n                if (uVar4 == 3) {\n                    *puVar1 = *puVar1 | 0xc00;\n                }\n                goto code_r0x00404402;\n            }\n            uVar4 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar4;\n    }\ncode_r0x00404402:\n    uVar4 = *arg_8h >> 2 & 7;\n    if (uVar4 == 0) {\n        uVar4 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar4 != 1) {\n            if (uVar4 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x0040442e;\n        }\n        uVar4 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar4;\ncode_r0x0040442e:\n    if (arg_20h == 0) {\n        *puVar2 = *(arg_8h + 0x14);\n    }\n    else {\n        *puVar2 = arg_8h[0x14];\n    }\n    return;\n}\n",
        "token_count": 2073
    },
    "00405228": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint fcn.00405228(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *arg_8h;\n    int32_t iVar6;\n    char *pcVar7;\n    uint var_8h;\n    uint *var_4h;\n    \n    iVar6 = 0;\n    if (*0x41718c == 0) {\n        fcn.00406dfe();\n    }\n    if (*0x4165e4 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar5 = 0;\n        for (pcVar7 = *0x4165e4; *pcVar7 != '\\0'; pcVar7 = pcVar7 + pcVar4 + (1 - (pcVar7 + 1))) {\n            pcVar4 = pcVar7;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            if (*pcVar7 != '=') {\n                iVar6 = iVar6 + 1;\n                iVar5 = iVar5 + pcVar4 + (1 - (pcVar7 + 1));\n            }\n        }\n        iVar5 = iVar5 + iVar6 * 4 + 4;\n        puVar3 = fcn.004062a2(iVar5, 1);\n        if (puVar3 == NULL) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            arg_8h = puVar3 + iVar6 + 1;\n            *0x417190 = puVar3 + iVar5;\n            *0x416620 = puVar3;\n            *0x416624 = puVar3;\n            var_4h = arg_8h;\n            for (pcVar7 = *0x4165e4; *pcVar7 != '\\0'; pcVar7 = pcVar7 + pcVar4) {\n                pcVar4 = pcVar7;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = pcVar4 + (1 - (pcVar7 + 1));\n                if (*pcVar7 != '=') {\n                    *puVar3 = arg_8h;\n                    iVar6 = fcn.004094fb(arg_8h, pcVar4, pcVar7);\n                    if (iVar6 != 0) {\n                        fcn.00402bcc(0, 0, 0, 0, 0);\n                    }\n                    arg_8h = var_4h + pcVar4;\n                    puVar3 = puVar3 + 1;\n                    var_4h = arg_8h;\n                }\n            }\n            fcn.004030bc(*0x4165e4);\n            *0x4165e4 = NULL;\n            *puVar3 = 0;\n            *0x417180 = 1;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 701
    },
    "0040a005": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040a005(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "00405562": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.00405562(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    char *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    if (*0x41718c == 0) {\n        fcn.00406dfe();\n    }\n    *0x416a64 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x416960, 0x104);\n    *0x416630 = 0x416960;\n    if ((*0x4181a4 == NULL) || (var_8h = *0x4181a4,  **0x4181a4 == '\\0')) {\n        var_8h = 0x416960;\n    }\n    fcn.00405380(var_8h, 0, 0, &var_4h);\n    uVar1 = var_4h;\n    iVar2 = fcn.0040532e(var_4h * 4, var_4h * 4 >> 0x20, &var_14h);\n    if ((((-1 < iVar2) && (iVar2 = fcn.0040532e(var_ch * 4, var_ch * 4 >> 0x20, &var_10h),  -1 < iVar2)) &&\n        (iVar2 = fcn.00405359(var_14h, var_10h, &var_14h),  -1 < iVar2)) && (iVar2 = fcn.00402ff2(var_14h),  iVar2 != 0)\n       ) {\n        fcn.00405380(var_8h, iVar2, iVar2 + uVar1 * 4, &var_4h);\n        *0x416614 = var_4h - 1;\n        *0x416618 = iVar2;\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 465
    },
    "004060f3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004060f3(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t lpPerformanceCount;\n    uint32_t var_ch;\n    uint32_t lpSystemTimeAsFileTime;\n    uint32_t var_4h;\n    \n    lpSystemTimeAsFileTime = 0;\n    var_4h = 0;\n    if ((*0x414f10 == 0xbb40e64e) || ((*0x414f10 & 0xffff0000) == 0)) {\n        (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&lpSystemTimeAsFileTime);\n        uVar4 = var_4h ^ lpSystemTimeAsFileTime;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount);\n        uVar1 = uVar4 ^ uVar1 ^ uVar2 ^ uVar3 ^ var_ch ^ lpPerformanceCount;\n        if ((uVar1 == 0xbb40e64e) || ((*0x414f10 & 0xffff0000) == 0)) {\n            uVar1 = 0xbb40e64f;\n        }\n        *0x414f14 = ~uVar1;\n        *0x414f10 = uVar1;\n    }\n    else {\n        *0x414f14 = ~*0x414f10;\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0040f180": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f180(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x0040f1c6;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x0040f1c6:\n    return cVar2;\n}\n",
        "token_count": 342
    },
    "004233f2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004233f2(uint32_t arg_8h)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = arg_8h & 0xffff0000;\n    while ((*piVar1 != 0x5a4d || (*(piVar1 + *(piVar1 + 0x1e)) != 0x4550))) {\n        piVar1 = piVar1 + -0x8000;\n        if (piVar1 < 0x70000000) {\n            return NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 133
    },
    "00401190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401190(ulong param_1, ulong param_2)\n\n{\n    fcn.00401983(param_1, param_2);\n    return;\n}\n",
        "token_count": 39
    },
    "00401320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid fcn.00401320(void)\n\n{\n    uint var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    do {\n        *(var_8h + 0x415588) = *(var_8h + 0x413000) + (var_8h + 1U ^ 2);\n        var_8h = var_8h + 1;\n    } while (var_8h != 0x10f9);\n    return;\n}\n",
        "token_count": 135
    },
    "00401390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00401390(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x411960, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00402cbf();\n        *puVar1 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.00401cfc(1, 0x414128);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.00401d81(0x414128);\n        uVar2 = fcn.00401f90(0x414128, *(unaff_EBP + 8), 0, unaff_EBP + 0xc);\n        *(unaff_EBP + -0x1c) = uVar2;\n        fcn.00401e15(arg_8h_00, 0x414128);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00401416();\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 355
    },
    "00401421": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401421(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00402f86(arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 45
    },
    "00401439": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401439(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch & arg_ch - 1) == 0) {\n        if ((arg_10h == 0) || (arg_10h < arg_8h)) {\n            if (arg_ch < 5) {\n                arg_ch = 4;\n            }\n            iVar3 = (-arg_10h & 3) + 4 + (arg_ch - 1);\n            arg_8h_00 = iVar3 + arg_8h;\n            if (arg_8h_00 < arg_8h) {\n                puVar1 = fcn.00402cbf();\n                *puVar1 = 0xc;\n            }\n            else {\n                iVar2 = fcn.00402ff2(arg_8h_00);\n                if (iVar2 != 0) {\n                    iVar3 = (iVar2 + iVar3 + arg_10h & ~(arg_ch - 1)) - arg_10h;\n                    *((iVar3 - (-arg_10h & 3)) + -4) = iVar2;\n                    return iVar3;\n                }\n            }\n        }\n        else {\n            puVar1 = fcn.00402cbf();\n            *puVar1 = 0x16;\n            fcn.00402c72(0, 0, 0, 0, 0);\n        }\n    }\n    else {\n        puVar1 = fcn.00402cbf();\n        *puVar1 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "00401501": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401501(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00401439(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "00401cc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cc7(uint32_t arg_8h)\n\n{\n    if ((0x414107 < arg_8h) && (arg_8h < 0x414369)) {\n        fcn.00406697((arg_8h - 0x414108 >> 5) + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 106
    },
    "00401cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cfc(int32_t arg_8h, int32_t lpCriticalSection)\n\n{\n    if (arg_8h < 0x14) {\n        fcn.00406697(arg_8h + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 86
    },
    "00401d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d24(uint32_t arg_8h)\n\n{\n    if ((0x414107 < arg_8h) && (arg_8h < 0x414369)) {\n        fcn.004065bd((arg_8h - 0x414108 >> 5) + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 107
    },
    "00401d59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d59(int32_t arg_8h, int32_t lpCriticalSection)\n\n{\n    if (arg_8h < 0x14) {\n        fcn.004065bd(arg_8h + 0x10);\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 87
    },
    "00402efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00402efc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00402d08(0x4119a8, 0x10);\n    *(unaff_EBP + -0x1c) = 0x414128;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.00402cbf();\n        *puVar1 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.00401cc7(0x414128);\n        *(unaff_EBP + -4) = 0;\n        arg_8h_00 = fcn.00401d81(0x414128);\n        uVar2 = (**(unaff_EBP + 8))(0x414128, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        fcn.00401e15(arg_8h_00, 0x414128);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00402f7c();\n    }\n    fcn.00402d4d();\n    return;\n}\n",
        "token_count": 426
    },
    "00402f86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f86(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00402efc(fcn.00407770, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00404444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404444(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.00404164(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0);\n    return;\n}\n",
        "token_count": 87
    },
    "00404c4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c4b(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if ((arg_8h == NULL) || (*0x416600 == 0)) {\n        puVar1 = fcn.00402cbf();\n        *puVar1 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x416600;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00404e1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e1e(uint arg_8h)\n\n{\n    fcn.00404d50(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "00404e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e68(void)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00405a35();\n    fcn.00408ef6(arg_8h);\n    fcn.0040a3b7(arg_8h);\n    fcn.0040a3a8(arg_8h);\n    fcn.0040a196(arg_8h);\n    fcn.00405068(arg_8h);\n    fcn.0040a185(arg_8h);\n    *0x414664 = fcn.004059c2(fcn.00404e34);\n    return;\n}\n",
        "token_count": 141
    },
    "00405359": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405359(uint32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    if (arg_8h <= arg_ch + arg_8h) {\n        *arg_10h = arg_ch + arg_8h;\n        return 0;\n    }\n    *arg_10h = 0xffffffff;\n    return 0x80070216;\n}\n",
        "token_count": 94
    },
    "004062a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004062a2(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    iVar2 = fcn.00406184(arg_8h, arg_ch, &var_4h);\n    iVar1 = var_4h;\n    if (((iVar2 == 0) && (var_4h != 0)) && (iVar3 = fcn.00402cbf(),  iVar3 != 0)) {\n        piVar4 = fcn.00402cbf();\n        *piVar4 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 176
    },
    "00409563": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409563(char *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char *arg_ch_00;\n    uint *puVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    uint uVar5;\n    char *var_4h;\n    \n    var_4h = *(arg_14h + 0xc);\n    if ((arg_8h == NULL) || (arg_ch == 0)) {\n        puVar1 = fcn.00402cbf();\n        uVar5 = 0x16;\n        *puVar1 = 0x16;\n    }\n    else {\n        *arg_8h = '\\0';\n        iVar2 = arg_10h;\n        if (arg_10h < 1) {\n            iVar2 = 0;\n        }\n        if (iVar2 + 1U < arg_ch) {\n            arg_ch_00 = arg_8h + 1;\n            *arg_8h = '0';\n            pcVar3 = arg_ch_00;\n            if (0 < arg_10h) {\n                do {\n                    cVar4 = *var_4h;\n                    if (cVar4 == '\\0') {\n                        cVar4 = '0';\n                    }\n                    else {\n                        var_4h = var_4h + 1;\n                    }\n                    *pcVar3 = cVar4;\n                    pcVar3 = pcVar3 + 1;\n                    arg_10h = arg_10h + -1;\n                } while (0 < arg_10h);\n            }\n            *pcVar3 = '\\0';\n            if ((-1 < arg_10h) && ('4' < *var_4h)) {\n                while (pcVar3 = pcVar3 + -1,  *pcVar3 == '9') {\n                    *pcVar3 = '0';\n                }\n                *pcVar3 = *pcVar3 + '\\x01';\n            }\n            if (*arg_8h == '1') {\n                *(arg_14h + 4) = *(arg_14h + 4) + 1;\n            }\n            else {\n                pcVar3 = arg_ch_00;\n                do {\n                    cVar4 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar4 != '\\0');\n                fcn.00403150(arg_8h, arg_ch_00, pcVar3 + (1 - (arg_8h + 2)));\n            }\n            return 0;\n        }\n        puVar1 = fcn.00402cbf();\n        uVar5 = 0x22;\n        *puVar1 = 0x22;\n    }\n    fcn.00402c72(0, 0, 0, 0, 0);\n    return uVar5;\n}\n",
        "token_count": 645
    },
    "0040c7b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c7b2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    if (*0x416bec == 0) {\n        arg_8h_00 = 0x414f08;\n    }\n    else {\n        arg_8h_00 = 0;\n    }\n    fcn.0040c577(arg_8h_00, arg_8h, arg_ch, arg_10h, 0, arg_14h);\n    return;\n}\n",
        "token_count": 131
    },
    "0040db7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040db7e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_24h == NULL) {\n        puVar1 = fcn.00402cbf();\n        *puVar1 = 0x16;\n        fcn.00402c72(0, 0, 0, 0, 0);\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0040d4ee(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, ***(*arg_24h + 0xbc));\n    }\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00423431": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "parse PE header",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00423431(int32_t arg_8h, int16_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint in_EDX;\n    uint32_t *puVar5;\n    ulong uVar6;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    if ((*arg_ch == 0x5a4d) && (*(arg_ch + *(arg_ch + 0x1e)) == 0x4550)) {\n        puVar5 = arg_ch + *(arg_ch + 0x1e) + 0x1e;\n        uVar3 = *puVar5;\n        if (uVar3 != 0) {\n            uVar4 = 0;\n            iVar1 = *(arg_ch + uVar3 + 0x20);\n            do {\n                iVar2 = *(arg_ch + uVar4 * 4 + iVar1);\n                if (iVar2 != 0) {\n                    uVar6 = (*(arg_8h + 0x2001b5fd))(iVar2 + arg_ch, arg_10h);\n                    puVar5 = uVar6 >> 0x20;\n                    uVar4 = extraout_ECX;\n                    if (uVar6 == 0) break;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(arg_ch + uVar3 + 0x18));\n            if ((uVar4 < *(arg_ch + uVar3 + 0x18)) &&\n               (iVar1 = *(arg_ch + *(arg_ch + uVar4 * 2 + *(arg_ch + uVar3 + 0x24)) * 4 + *(arg_ch + uVar3 + 0x1c)), \n               iVar1 != 0)) {\n                uVar3 = iVar1 + arg_ch;\n                if ((uVar3 < *puVar5) || (*puVar5 + puVar5[1] < uVar3)) {\n                    var_4h = uVar3;\n                }\n            }\n        }\n    }\n    return CONCAT44(in_EDX, var_4h);\n}\n",
        "token_count": 506
    },
    "004234c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004234c8(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uchar *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint arg_ch_00;\n    uint unaff_EDI;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uVar7;\n    ulong uVar8;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_106h;\n    \n    var_128h = 0;\n    iVar1 = (**(arg_8h + 0x2001bc5a))(&var_106h, 0x104);\n    if (iVar1 != 0) {\n        iVar1 = (*(arg_8h + 0x2001b599))(&var_106h, iVar1, 0x3a);\n        if (iVar1 != 0) {\n            *(iVar1 + 1) = 0x5c;\n            *(iVar1 + 2) = 0;\n            var_10ch = 0;\n            (**(arg_8h + 0x2001bc5e))(&var_106h, 0, 0, &var_10ch, 0, 0, 0, 0);\n            uVar4 = (*(arg_8h + 0x2001b55f))(var_10ch, 0xffffffff);\n            uVar5 = (*(arg_8h + 0x2001b55f))(uVar4 >> 0x20, 0xffff);\n            uVar6 = (*(arg_8h + 0x2001b55f))(uVar5 >> 0x20, 0xffff);\n            uVar7 = (*(arg_8h + 0x2001b55f))(uVar6 >> 0x20, 0xffff);\n            uVar8 = (*(arg_8h + 0x2001b55f))(uVar7 >> 0x20, 0xffffffff);\n            uVar2 = (*(arg_8h + 0x2001b55f))(uVar8 >> 0x20, 0xffff);\n            *arg_14h = 0x7b;\n            puVar3 = (*(arg_8h + 0x2001b514))(uVar4 + arg_ch, arg_14h + 1, 8);\n            *puVar3 = 0x2d;\n            puVar3 = (*(arg_8h + 0x2001b514))(uVar5 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            puVar3 = (*(arg_8h + 0x2001b514))(uVar6 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            puVar3 = fcn.0042324c(uVar7 & 0xffff, puVar3 + 1, 4);\n            *puVar3 = 0x2d;\n            arg_ch_00 = (*(arg_8h + 0x2001b514))(uVar8 + arg_10h, puVar3 + 1, 8);\n            puVar3 = fcn.0042324c(uVar2 & 0xffff, arg_ch_00, 4);\n            *puVar3 = 0x7d;\n            puVar3[1] = 0;\n            var_128h = 1;\n        }\n    }\n    return CONCAT44(unaff_EDI, var_128h);\n}\n",
        "token_count": 861
    },
    "00423706": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423706(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_54h;\n    uint uStack84;\n    uint var_44h;\n    \n    puVar2 = &var_44h;\n    for (iVar1 = 0x44; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    puVar2 = &var_54h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (**(arg_8h + 0x2001bc56))(0, arg_ch, 0, 0, 0, 0, 0, 0, &var_44h, &var_54h);\n    (**(arg_8h + 0x2001bc46))(uStack84, var_54h);\n    (**(arg_8h + 0x2001bc46))();\n    return;\n}\n",
        "token_count": 277
    },
    "004011b0": {
        "rules": [
            "create process on Windows",
            "create or open registry key",
            "create or open file",
            "delay execution",
            "set file attributes",
            "get file attributes",
            "create thread",
            "get common file path",
            "get file size",
            "delete directory",
            "query environment variable",
            "accept command line arguments",
            "get OS version",
            "create directory",
            "set current directory",
            "enumerate files on windows",
            "query or enumerate registry key",
            "delete registry value",
            "write file on Windows",
            "write and execute a file",
            "delete registry key",
            "query or enumerate registry value",
            "read .ini file",
            "read file on Windows",
            "copy file",
            "link function at runtime on Windows",
            "move file",
            "get file version info",
            "terminate process",
            "set registry value",
            "get disk size",
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.004011b0(void)\n\n{\n    func_0x00410004();\n    func_0x00410020();\n    func_0x0041001c();\n    func_0x00410018();\n    func_0x00410000();\n    func_0x00410014();\n    func_0x00410010();\n    func_0x0041000c();\n    func_0x00410008();\n    func_0x00410114();\n    func_0x00410110();\n    func_0x0041010c();\n    func_0x00410108();\n    func_0x00410104();\n    func_0x00410100();\n    func_0x004100fc();\n    func_0x004100f8();\n    func_0x004100f4();\n    func_0x004100f0();\n    func_0x004100ec();\n    func_0x004100e8();\n    func_0x004100e4();\n    func_0x004100e0();\n    func_0x004100dc();\n    func_0x004100d8();\n    func_0x004100d4();\n    func_0x004100d0();\n    func_0x004100cc();\n    func_0x004100c8();\n    func_0x004100c4();\n    func_0x004100c0();\n    func_0x004100bc();\n    func_0x004100b8();\n    func_0x004100b4();\n    func_0x004100b0();\n    func_0x004100ac();\n    func_0x004100a8();\n    func_0x004100a4();\n    func_0x004100a0();\n    func_0x0041009c();\n    func_0x00410098();\n    func_0x00410094();\n    func_0x00410090();\n    func_0x0041008c();\n    func_0x00410088();\n    func_0x00410084();\n    func_0x00410080();\n    func_0x0041007c();\n    func_0x00410078();\n    func_0x00410074();\n    func_0x00410070();\n    func_0x0041006c();\n    func_0x00410068();\n    func_0x00410064();\n    func_0x00410060();\n    func_0x0041005c();\n    func_0x00410058();\n    func_0x00410054();\n    func_0x00410050();\n    func_0x0041004c();\n    func_0x00410048();\n    func_0x00410044();\n    func_0x00410040();\n    func_0x0041003c();\n    func_0x00410038();\n    func_0x00410034();\n    func_0x00410030();\n    func_0x0041002c();\n    sub.VERSION.dll_GetFileVersionInfoA();\n    sub.VERSION.dll_GetFileVersionInfoSizeA();\n    sub.VERSION.dll_VerQueryValueA();\n    return;\n}\n",
        "token_count": 686
    },
    "0040f1f0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040f1f0(void)\n\n{\n    *0x415504 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "0040c30e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c30e(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    *0x4165f0 = *0x4165f0 + 1;\n    iVar1 = fcn.004062a2(1, 0x1000);\n    arg_8h[2] = iVar1;\n    if (iVar1 == 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n        arg_8h[5] = 0;\n        arg_8h[2] = arg_8h + 5;\n        arg_8h[6] = 2;\n    }\n    else {\n        arg_8h[3] = arg_8h[3] | 8;\n        arg_8h[6] = 0x1000;\n    }\n    arg_8h[1] = 0;\n    *arg_8h = arg_8h[2];\n    return;\n}\n",
        "token_count": 223
    },
    "00423224": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423224(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        if (iVar1 == 0) {\n            iVar1 = arg_14h + -1;\n        }\n        *arg_8h = *(iVar1 + arg_10h) ^ *arg_8h;\n        arg_8h = arg_8h + 1;\n        iVar1 = iVar1 + -1;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    return;\n}\n",
        "token_count": 155
    },
    "00402bcc": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2d0h\n// WARNING: Variable defined which should be unmapped: var_22ch\n// WARNING: Variable defined which should be unmapped: var_20ch\n// WARNING: Variable defined which should be unmapped: var_230h\n// WARNING: Variable defined which should be unmapped: var_234h\n\nvoid fcn.00402bcc(void)\n\n{\n    char *arg_8h;\n    uint var_2d0h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_4h;\n    \n    arg_8h = \"Invalid parameter passed to C runtime function.\\n\";\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"Invalid parameter passed to C runtime function.\\n\", 0x10001);\n    fcn.0040747d(arg_8h);\n    return;\n}\n",
        "token_count": 294
    },
    "00402c72": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid fcn.00402c72(void)\n\n{\n    char *arg_8h;\n    \n    arg_8h = \"Invalid parameter passed to C runtime function.\\n\";\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(\"Invalid parameter passed to C runtime function.\\n\", 0x10001);\n    fcn.0040747d(arg_8h);\n    return;\n}\n",
        "token_count": 85
    },
    "00405be9": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00405be9(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    fcn.00405aba();\n    pcVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*0x4147cc, *0x4147d0);\n    arg_8h = (*pcVar2)();\n    if ((arg_8h == 0) && (arg_8h = fcn.0040aaf5(1, 0x214),  arg_8h != 0)) {\n        uVar4 = *0x4147d0;\n        iVar3 = arg_8h;\n        pcVar2 = fcn.00405a3e(*0x416a74);\n        iVar3 = (*pcVar2)(uVar4, iVar3);\n        if (iVar3 == 0) {\n            fcn.004030bc(arg_8h);\n            arg_8h = 0;\n        }\n        else {\n            fcn.00405b21(arg_8h, 0);\n            *(arg_8h + 4) = 0xffffffff;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 313
    }
}