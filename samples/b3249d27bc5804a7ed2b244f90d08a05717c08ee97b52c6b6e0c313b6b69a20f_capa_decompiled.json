{
    "null": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    char cVar1;\n    int32_t *arg_8h;\n    uint uVar2;\n    char cVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    uint var_8h;\n    int32_t iStack32;\n    uchar auStack28 [8];\n    uint var_ch;\n    uint var_8h_2;\n    \n    *0x46108f = *0x46108b << 2;\n    sub.KERNEL32.DLL_GetModuleHandleA();\n    fcn.004548ac();\n    fcn.00454810();\n    fcn.004548ec();\n    fcn.00455cf8(0);\n    *0x461093 = sub.KERNEL32.DLL_GetModuleHandleA();\n    *0x464008 = *0x10 & 1;\n    fcn.00458198();\n    fcn.004584d0(*0x1c, *0x20);\n    fcn.00456390(*0x28);\n    fcn.004563a0(*0x44);\n    *0x467a2c = 1;\n    *0x467a30 = 0;\n    *0x467a14 = auStack28;\n    fcn.00455ee0();\n    *0x467a04 = sub.KERNEL32.DLL_GetEnvironmentStrings();\n    *0x467a00 = sub.KERNEL32.DLL_GetCommandLineA();\n    fcn.0045a0ac(*0x2c, *0x30);\n    fcn.0045a0f0(*0x34, *0x38, *0x3c, *0x40);\n    arg_8h = fcn.0045ac48();\n    if (arg_8h != NULL) {\n        arg_8h[*arg_8h + 1] = -1;\n        fcn.0045ac50(arg_8h, 0);\n        piVar4 = arg_8h;\n        for (iStack32 = 0; piVar4 = piVar4 + 1,  iStack32 < *arg_8h; iStack32 = iStack32 + 1) {\n            (**(*piVar4 + 0x18))(0, *(*piVar4 + 0x14));\n        }\n    }\n    fcn.0045ac50(0x467a2c, 0);\n    pcVar5 = *0x467a00;\n    if ((*0x10 & 1) == 0) {\n        uVar2 = (**0x18)(*0x4679f4, *0x4679f8, *0x4679fc);\n        fcn.0045a05c(uVar2);\n    }\n    else {\n        for (; (*pcVar5 == ' ' || (*pcVar5 == '\\t')); pcVar5 = pcVar5 + 1) {\n        }\n        if (*pcVar5 == '\\\"') {\n            cVar3 = '\\\"';\n            pcVar5 = pcVar5 + 1;\n        }\n        else {\n            cVar3 = ' ';\n        }\n        for (; ((cVar1 = *pcVar5,  cVar1 != '\\0' && (cVar3 != cVar1)) && (cVar1 != '\\t')); pcVar5 = pcVar5 + 1) {\n        }\n        if (*pcVar5 == '\\\"') {\n            pcVar5 = pcVar5 + 1;\n        }\n        for (; ((cVar3 = *pcVar5,  cVar3 != '\\0' && (cVar3 == ' ')) || (cVar3 == '\\t')); pcVar5 = pcVar5 + 1) {\n        }\n        uVar2 = fcn.0045af48();\n        uVar2 = sub.KERNEL32.DLL_GetModuleHandleA(0, 0, pcVar5, uVar2);\n        uVar2 = (**0x18)(uVar2);\n        fcn.0045a05c(uVar2);\n    }\n    return;\n}\n",
        "token_count": 889
    },
    "0045580c": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045580c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    if (*(arg_8h + 4) == *(arg_ch + 4)) {\n        uVar2 = CONCAT31(*(arg_8h + 4) >> 8, 1);\n    }\n    else if (((*(arg_8h + 4) == 0) || ((*(*(arg_8h + 4) + 4) & 0x80) == 0)) &&\n            ((*(arg_ch + 4) == 0 || ((*(*(arg_ch + 4) + 4) & 0x80) == 0)))) {\n        pcVar3 = fcn.004559d0(arg_8h);\n        pcVar4 = fcn.004559d0(arg_ch);\n        do {\n            bVar5 = *pcVar3 == *pcVar4;\n            if ((!bVar5) || (bVar5 = *pcVar3 == '\\0',  bVar5)) break;\n            pcVar1 = pcVar3 + 1;\n            bVar5 = *pcVar1 == pcVar4[1];\n            if (!bVar5) break;\n            pcVar3 = pcVar3 + 2;\n            pcVar4 = pcVar4 + 2;\n            bVar5 = *pcVar1 == '\\0';\n        } while (!bVar5);\n        uVar2 = bVar5;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 379
    },
    "00455cf8": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455cf8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00455d44(&var_8h);\n        arg_8h = var_4h;\n    }\n    arg_10h = 0x9c;\n    iVar1 = fcn.0040143c();\n    fcn.00454ccc(iVar1 + 0x10, arg_8h, arg_10h);\n    fcn.00455b80();\n    return;\n}\n",
        "token_count": 153
    },
    "00455f60": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00455f60(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x462ec4 <= arg_8h) {\n        return false;\n    }\n    iVar1 = sub.KERNEL32.DLL_GetFileType(*(arg_8h * 4 + 0x4676d4));\n    return iVar1 == 2;\n}\n",
        "token_count": 87
    },
    "00455f90": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00455f90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.KERNEL32.DLL_GetFileType(arg_8h);\n    return iVar1 == 2;\n}\n",
        "token_count": 52
    },
    "00456c4c": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00456c4c(uint arg_8h, uint arg_ch, uint8_t *arg_10h, int32_t arg_14h, uint arg_18h, uint16_t **arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t **ppuVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    char cVar14;\n    uint32_t unaff_EBX;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_520h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    int32_t var_4c0h;\n    uint *var_4bch;\n    uint var_4b8h;\n    uchar auStack256 [68];\n    uchar var_b8h;\n    uint var_b7h;\n    uint var_b0h;\n    uint8_t var_56h [2];\n    uint8_t *var_54h;\n    int32_t var_50h;\n    uint8_t *var_4ch;\n    uint *var_44h;\n    uint8_t *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint16_t var_32h;\n    uint16_t *var_30h;\n    uint16_t *var_2ch;\n    uint16_t *var_28h;\n    uint16_t *var_24h;\n    uint8_t var_1dh;\n    int32_t var_1ch;\n    char16_t *var_18h;\n    uint8_t *var_14h;\n    uint *var_10h;\n    uint16_t *var_9h;\n    uint16_t *var_4h;\n    \n    var_4c0h = 0;\n    var_4c4h = 0;\n    var_4d0h = 0;\n    var_4cch = arg_8h;\n    var_4c8h = arg_ch;\n    if (arg_14h == 0) {\n        var_4bch = NULL;\n    }\n    else {\n        var_4bch = &arg_18h;\n    }\ncode_r0x00456c94:\n    puVar13 = arg_10h;\n    uVar1 = *puVar13;\n    uVar15 = unaff_EBX & 0xffffff00;\n    unaff_EBX = uVar15 | uVar1;\n    arg_10h = puVar13 + 1;\n    if (uVar1 != 0) {\n        if (uVar1 == 0x25) {\n            unaff_EBX = uVar15 | *arg_10h;\n            if (*arg_10h != 0x25) {\n                uVar7 = 0;\n                var_10h = NULL;\n                var_9h._0_1_ = 0;\n                stack0xfffffff4 = 0xffffffff;\n                var_4h = 0xffffffff;\n                uVar15 = 0;\n                bVar16 = false;\n                bVar6 = false;\n                var_1ch = 0;\ncode_r0x00456d07:\n                puVar10 = arg_10h;\n                bVar5 = false;\n                uVar1 = *puVar10;\n                uVar4 = unaff_EBX & 0xffffff00;\n                unaff_EBX = uVar4 | uVar1;\n                arg_10h = puVar10 + 1;\n                var_14h = puVar13;\n                if ((uVar1 < ' ') || ('\\x7f' < uVar1)) goto code_r0x00457554;\n    // switch table (27 cases) at 0x456d3c\n                switch(*((uVar1 - 0x20) + 0x463622)) {\n                case 0:\n                    var_14h = puVar13;\n                    if (uVar7 != 0) goto code_r0x00457554;\n                    if (var_9h != 0x2b) {\n                        var_9h._0_1_ = uVar1;\n                    }\n                    goto code_r0x00456d07;\n                case 1:\n                    var_14h = puVar13;\n                    if (uVar7 != 0) goto code_r0x00457554;\n                    uVar15 = uVar15 | 1;\n                    goto code_r0x00456d07;\n                case 2:\n                    ppuVar3 = arg_1ch + 1;\n                    var_30h = *arg_1ch;\n                    arg_1ch = ppuVar3;\n                    if (uVar7 < 2) {\n                        var_4h = var_30h;\n                        if (var_30h < 0) {\n                            var_4h = -var_30h;\n                            bVar6 = true;\n                        }\n                        uVar7 = 3;\n                    }\n                    else {\n                        var_14h = puVar13;\n                        if (uVar7 != 4) goto code_r0x00457554;\n                        uVar7 = 5;\n                        unique0x100007b0 = var_30h;\n                    }\n                    goto code_r0x00456d07;\n                case 3:\n                    var_14h = puVar13;\n                    if (uVar7 != 0) goto code_r0x00457554;\n                    bVar6 = true;\n                    goto code_r0x00456d07;\n                case 4:\n                    var_14h = puVar13;\n                    if (3 < uVar7) goto code_r0x00457554;\n                    uVar7 = 4;\n                    unique0x00007a80 = stack0xfffffff4 + 1;\n                    goto code_r0x00456d07;\n                case 5:\n                    goto code_r0x00456e79;\n                case 6:\n                    uVar15 = uVar15 | 0x10;\n                    uVar7 = 5;\n                    goto code_r0x00456d07;\n                case 7:\n                    uVar7 = 5;\n                    uVar15 = uVar15 & 0xffffffef | 0x100;\n                    goto code_r0x00456d07;\n                case 8:\n                    uVar7 = 5;\n                    uVar15 = uVar15 & 0xffffffef | 0x200;\n                    goto code_r0x00456d07;\n                case 9:\n                    if (uVar7 == 0) {\n                        if (!bVar6) {\n                            bVar16 = true;\n                            uVar7 = 1;\n                        }\n                    }\n                    else {\ncode_r0x00456e79:\n                        cVar14 = uVar1 - 0x30;\n                        if (uVar7 < 3) {\n                            uVar7 = 2;\n                            if (var_4h == 0xffffffff) {\n                                var_4h = cVar14;\n                                unaff_EBX = uVar4;\n                            }\n                            else {\n                                var_4h = var_4h * 10 + cVar14;\n                                unaff_EBX = uVar4;\n                            }\n                        }\n                        else {\n                            var_14h = puVar13;\n                            if (uVar7 != 4) goto code_r0x00457554;\n                            *0x4 = stack0xfffffff4 * 10 + cVar14;\n                            unaff_EBX = uVar4;\n                        }\n                    }\n                    goto code_r0x00456d07;\n                case 10:\n                    goto code_r0x00456fa7;\n                case 0xb:\n                    var_38h = 8;\n                    break;\n                case 0xc:\n                    var_38h = 10;\n                    break;\n                case 0xd:\n                    var_38h = 0x10;\n                    var_1dh = uVar1 - 0x17;\n                    break;\n                case 0xe:\n                    var_18h = *arg_1ch;\n                    arg_1ch = arg_1ch + 1;\n                    fcn.00456c18(var_18h, &var_b8h);\n                    var_b0h._0_1_ = 0;\n                    var_18h = &var_b8h;\n                    goto code_r0x004572c4;\n                case 0xf:\n                    if ((uVar15 & 0x100) == 0) {\n                        uVar9 = 6;\n                    }\n                    else {\n                        uVar9 = 8;\n                    }\n                    var_18h = &var_b7h;\n                    puVar8 = stack0xfffffff4;\n                    if (stack0xfffffff4 < 0) {\n                        puVar8 = 0x6;\n                    }\n                    fcn.00458150(arg_1ch, puVar8, var_18h, unaff_EBX, uVar15 & 0xffffff01, uVar9);\n                    arg_1ch = fcn.00458156(arg_1ch, uVar15 & 0x100);\n                    goto code_r0x004572c4;\n                case 0x10:\n                    goto code_r0x00457139;\n                case 0x11:\n                    goto code_r0x004571b4;\n                case 0x12:\n                    if ((uVar15 & 0x210) == 0) {\n                        uVar15 = uVar15 | 0x10;\n                    }\ncode_r0x00457139:\n                    if ((uVar15 & 0x10) == 0) {\n                        var_18h = &var_b8h;\n                        _var_b8h = *arg_1ch;\n                        var_1ch = 0;\n                        var_40h = 0x1;\n                        arg_1ch = arg_1ch + 1;\n                    }\n                    else {\n                        var_18h = &var_b8h;\n                        _var_b8h = *arg_1ch;\n                        var_b7h._1_2_ = 0;\n                        var_1ch = 1;\n                        var_40h = 0x1;\n                        arg_1ch = arg_1ch + 1;\n                    }\n                    goto code_r0x00457332;\n                case 0x13:\n                    if ((uVar15 & 0x210) == 0) {\n                        uVar15 = uVar15 | 0x10;\n                    }\ncode_r0x004571b4:\n                    if ((uVar15 & 0x10) == 0) {\n                        var_18h = *arg_1ch;\n                        var_1ch = 0;\n                        if (var_18h == NULL) {\n                            var_18h = 0x46360c;\n                        }\n                    }\n                    else {\n                        var_18h = *arg_1ch;\n                        var_1ch = 1;\n                        if (var_18h == NULL) {\n                            var_18h = L\"(null)\";\n                        }\n                    }\n                    arg_1ch = arg_1ch + 1;\n                    if (var_1ch == 0) {\n                        puVar8 = stack0xfffffff4;\n                        if (stack0xfffffff4 < 0) {\n                            puVar8 = 0x7fffffff;\n                        }\n                        var_40h = NULL;\n                        for (puVar12 = var_18h; (puVar8 != NULL && (*puVar12 != 0)); puVar12 = puVar12 + 1) {\n                            puVar8 = puVar8 + -1;\n                            var_40h = var_40h + 1;\n                        }\n                    }\n                    else {\n                        puVar8 = stack0xfffffff4;\n                        if (stack0xfffffff4 < 0) {\n                            puVar8 = 0x7fffffff;\n                        }\n                        var_40h = NULL;\n                        for (puVar12 = var_18h; (puVar8 != NULL && (*puVar12 != 0)); puVar12 = puVar12 + 2) {\n                            puVar8 = puVar8 + -1;\n                            var_40h = var_40h + 1;\n                        }\n                    }\n                    goto code_r0x00457332;\n                case 0x14:\n                    ppuVar3 = arg_1ch + 1;\n                    var_18h = *arg_1ch;\n                    arg_1ch = ppuVar3;\n                    if ((uVar15 & 0x10) == 0) {\n                        if ((uVar15 & 0x200) == 0) {\n                            *var_18h = var_4c4h;\n                        }\n                        else {\n                            *var_18h = var_4c4h;\n                        }\n                    }\n                    else {\n                        *var_18h = var_4c4h;\n                    }\n                    goto code_r0x00456c94;\n                case 0x15:\n                case 0x16:\n                case 0x17:\n                    goto code_r0x00457554;\n                case 0x18:\n                    uVar7 = 5;\n                    goto code_r0x00456d07;\n                case 0x19:\n                    uVar7 = 5;\n                    goto code_r0x00456d07;\n                case 0x1a:\n                    if ((*arg_10h == 0x36) && (puVar10[2] == 0x34)) {\n                        uVar15 = uVar15 & 0xfffffdef | 0x100;\n                        uVar7 = 5;\n                        arg_10h = puVar10 + 3;\n                    }\n                    else if ((*arg_10h == 0x33) && (puVar10[2] == 0x32)) {\n                        uVar15 = uVar15 & 0xfffffcff | 0x10;\n                        uVar7 = 5;\n                        arg_10h = puVar10 + 3;\n                    }\n                    else if ((*arg_10h == 0x31) && (puVar10[2] == 0x36)) {\n                        uVar15 = uVar15 & 0xfffffeef | 0x200;\n                        uVar7 = 5;\n                        arg_10h = puVar10 + 3;\n                    }\n                    else if (*arg_10h == 0x38) {\n                        uVar15 = uVar15 & 0xfffffcef;\n                        uVar7 = 5;\n                        arg_10h = puVar10 + 2;\n                    }\n                default:\n                    goto code_r0x00456d07;\n                }\n                var_9h._0_1_ = 0;\n                uVar9 = 0;\n                goto code_r0x00456fb0;\n            }\n            arg_10h = puVar13 + 2;\n        }\n        if (((*((unaff_EBX & 0xff) + 0x4677ad) & 4) != 0) && (*arg_10h != 0)) {\n            fcn.00456be4(unaff_EBX, &var_520h);\n            unaff_EBX = unaff_EBX & 0xffffff00 | *arg_10h;\n            arg_10h = arg_10h + 1;\n        }\n        fcn.00456be4(unaff_EBX, &var_520h);\n        goto code_r0x00456c94;\n    }\n    goto code_r0x00457560;\ncode_r0x00456fa7:\n    var_38h = 10;\n    uVar9 = 1;\ncode_r0x00456fb0:\n    if ((uVar15 & 0x100) == 0) {\n        cVar14 = uVar9;\n        if ((uVar15 & 0x10) == 0) {\n            if ((uVar15 & 0x200) == 0) {\n                var_30h = *arg_1ch;\n                var_28h = var_30h;\n                if (cVar14 == '\\0') {\n                    var_24h = NULL;\n                    arg_1ch = arg_1ch + 1;\n                }\n                else {\n                    var_24h = var_30h >> 0x1f;\n                    arg_1ch = arg_1ch + 1;\n                }\n            }\n            else {\n                var_32h = *arg_1ch;\n                if (cVar14 == '\\0') {\n                    var_28h = var_32h;\n                    var_24h = NULL;\n                    arg_1ch = arg_1ch + 1;\n                }\n                else {\n                    var_28h = var_32h;\n                    var_24h = var_28h >> 0x1f;\n                    arg_1ch = arg_1ch + 1;\n                }\n            }\n        }\n        else {\n            var_2ch = *arg_1ch;\n            var_28h = var_2ch;\n            if (cVar14 == '\\0') {\n                var_24h = NULL;\n                arg_1ch = arg_1ch + 1;\n            }\n            else {\n                var_24h = var_2ch >> 0x1f;\n                arg_1ch = arg_1ch + 1;\n            }\n        }\n    }\n    else {\n        var_28h = *arg_1ch;\n        var_24h = arg_1ch[1];\n        arg_1ch = arg_1ch + 2;\n    }\n    var_18h = &var_b7h;\n    if (((var_24h == NULL) && (var_28h == NULL)) && (stack0xfffffff4 == NULL)) {\n    // WARNING: Ignoring partial resolution of indirect\n        var_b7h._0_1_ = 0;\n    }\n    else {\n        fcn.00458218(var_28h, var_24h, var_18h, var_38h, uVar9, auStack256 | var_1dh);\n    }\n    if (stack0xfffffff4 < 0) {\ncode_r0x004572c4:\n        if ((bVar16) && (0 < var_4h)) {\n            var_40h = fcn.00454e1c(var_18h);\n            if (*var_18h == 0x2d) {\n                var_40h = var_40h + -1;\n            }\n            if (var_40h < var_4h) {\n                var_10h = var_4h - var_40h;\n            }\n        }\n        if ((*var_18h == 0x2d) || (var_9h != 0)) {\n            if (*var_18h != 0x2d) {\n                var_18h = var_18h + -1;\n                *var_18h = var_9h;\n            }\n            if (0 < var_10h) {\n                var_10h = var_10h + -1;\n            }\n        }\n        var_40h = fcn.00454e1c(var_18h);\n    }\n    else {\n        var_3ch = fcn.00454e1c(var_18h);\n        var_40h = var_3ch;\n        if (*var_18h == 0x2d) {\n            var_3ch = var_3ch + -1;\n        }\n        else if (var_9h != 0) {\n            var_40h = var_3ch + 1;\n            var_18h = var_18h + -1;\n            *var_18h = var_9h;\n        }\n        if (var_3ch < stack0xfffffff4) {\n            var_10h = stack0xfffffff4 - var_3ch;\n        }\n    }\ncode_r0x00457332:\n    if ((uVar15 & 1) != 0) {\n        if (uVar1 == 0x6f) {\n            if (var_10h < 1) {\n                var_10h = 0x1;\n            }\n        }\n        else if ((uVar1 == 0x78) || (uVar1 == 0x58)) {\n            bVar5 = true;\n            var_4h = var_4h + -1;\n            var_10h = var_10h + -2;\n            if (var_10h < 0) {\n                var_10h = NULL;\n            }\n        }\n    }\n    var_40h = var_40h + var_10h;\n    if ((!bVar6) && (var_40h < var_4h)) {\n        do {\n            fcn.00456be4(0x20, &var_520h);\n            var_4h = var_4h + -1;\n        } while (var_40h < var_4h);\n    }\n    if (bVar5) {\n        fcn.00456be4(0x30, &var_520h);\n        fcn.00456be4(unaff_EBX, &var_520h);\n    }\n    if (0 < var_10h) {\n        var_40h = var_40h + -var_10h;\n        var_4h = var_4h - var_10h;\n        puVar12 = var_10h;\n        if (((*var_18h == 0x2d) || (*var_18h == 0x20)) || (puVar12 = var_18h,  *var_18h == 0x2b)) {\n            uVar1 = *var_18h;\n            var_18h = var_18h + 1;\n            fcn.00456be4(puVar12 & 0xffffff00 | uVar1, &var_520h);\n            var_40h = var_40h + -1;\n            var_4h = var_4h + -1;\n        }\n        while (puVar12 = var_10h + -1,  bVar16 = var_10h != NULL,  var_10h = puVar12,  bVar16) {\n            fcn.00456be4(0x30, &var_520h);\n        }\n    }\n    if (var_1ch != 0) {\n        puVar13 = NULL;\n        var_44h = var_18h;\n        var_4ch = NULL;\n        var_54h = var_40h;\n        while (puVar10 = var_54h + -1,  bVar16 = 0 < var_54h,  var_54h = puVar10,  bVar16) {\n            uVar2 = *var_44h;\n            var_44h = var_44h + 2;\n            var_50h = fcn.00457a04(var_56h, puVar13 & 0xffff0000 | uVar2);\n            if (var_50h < 1) break;\n            iVar11 = 0;\n            puVar13 = &var_4b8h + var_4ch;\n            puVar10 = var_56h;\n            if (0 < var_50h) {\n                do {\n                    uVar1 = *puVar10;\n                    unaff_EBX = unaff_EBX & 0xffffff00;\n                    puVar10 = puVar10 + 1;\n                    *puVar13 = uVar1;\n                    puVar13 = puVar13 + 1;\n                    var_4ch = var_4ch + 1;\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 < var_50h);\n            }\n        }\n        var_18h = &var_4b8h;\n        var_40h = var_4ch;\n    }\n    if (var_40h != NULL) {\n        var_4h = var_4h - var_40h;\n        puVar13 = var_40h;\n        while (puVar10 = var_40h + -1,  bVar16 = var_40h != NULL,  var_40h = puVar10,  bVar16) {\n            uVar1 = *var_18h;\n            var_18h = var_18h + 1;\n            puVar13 = fcn.00456be4(puVar13 & 0xffffff00 | uVar1, &var_520h);\n        }\n    }\n    while (puVar8 = var_4h + -1,  bVar16 = 0 < var_4h,  var_4h = puVar8,  bVar16) {\n        fcn.00456be4(0x20, &var_520h);\n    }\n    goto code_r0x00456c94;\ncode_r0x00457554:\n    while( true ) {\n        puVar13 = var_14h + 1;\n        uVar1 = *var_14h;\n        uVar15 = var_14h & 0xffffff00;\n        var_14h = puVar13;\n        if (uVar1 == 0) break;\n        fcn.00456be4(uVar15 | uVar1, &var_520h);\n    }\ncode_r0x00457560:\n    fcn.00456b9c(&var_520h);\n    if (var_4c0h != 0) {\n        var_4c4h = 0xffffffff;\n    }\n    return var_4c4h;\n}\n",
        "token_count": 5697
    },
    "00457628": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00457628(uint32_t arg_8h)\n\n{\n    return arg_8h < 0x80;\n}\n",
        "token_count": 32
    },
    "0045772c": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045772c(uint arg_8h)\n\n{\n    return arg_8h < 0x80;\n}\n",
        "token_count": 31
    },
    "00459534": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00459534(float10 *arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t arg_8h_01;\n    float10 fVar6;\n    uint var_28h;\n    uchar *var_24h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint16_t var_4h;\n    uint var_2h;\n    \n    var_2h._0_2_ = 10;\n    if (arg_18h == 2) {\n        _var_ch = *arg_8h;\n    }\n    else if (arg_18h == 6) {\n        _var_ch = *arg_8h;\n    }\n    else if (arg_18h == 8) {\n        _var_ch = *arg_8h;\n    }\n    fVar6 = _var_ch;\n    _var_ch = _var_ch & 0xffffffffffffffff;\n    *arg_10h = (fVar6 & 0x8000) != 0;\n    uVar2 = fcn.00458204(&var_ch);\n    uVar2 = uVar2 & 0x4700;\n    if (uVar2 != 0x4000) {\n        if (uVar2 == 0x500) {\n            return 0x7fff;\n        }\n        if (uVar2 == 0x100) {\n            return 0x7ffe;\n        }\n        uVar3 = ((var_4h & 0x7fff) - 0x3fff) * 0x4d10 + (var_8h._3_1_ * 2 & 0xff) * 0x4d;\n        var_14h = uVar3 >> 0x10;\n        if ((uVar3 & 0xffff) != 0) {\n            var_14h = var_14h + 1;\n        }\n        arg_8h_01 = arg_ch;\n        if ((0 < arg_ch) || (arg_8h_01 = var_14h - arg_ch,  -1 < arg_8h_01)) {\n            if (0x13 < arg_8h_01) {\n                arg_8h_01 = 0x13;\n            }\n            for (iVar5 = arg_8h_01 - var_14h; iVar5 != 0; iVar5 = iVar5 + arg_8h_00) {\n                arg_8h_00 = iVar5;\n                if (iVar5 < 0) {\n                    arg_8h_00 = -iVar5;\n                }\n                if (0x1344 < arg_8h_00) {\n                    arg_8h_00 = 0x1344;\n                }\n                fVar6 = fcn.00457f84(arg_8h_00);\n                if (iVar5 < 0) {\n                    _var_ch = _var_ch / fVar6;\n                }\n                else {\n                    _var_ch = _var_ch * fVar6;\n                    arg_8h_00 = -arg_8h_00;\n                }\n            }\n            fVar6 = fcn.00457f84(arg_8h_01);\n            if (_var_ch <= fVar6) {\n                fVar6 = fcn.00457f84(arg_8h_01 + -1);\n                iVar5 = arg_8h_01;\n                if (_var_ch < fVar6) {\n                    var_14h = var_14h + -1;\n                    iVar5 = arg_8h_01 + -1;\n                    if (0 < arg_ch) {\n                        _var_ch = _var_ch * var_2h;\n                        iVar5 = arg_8h_01;\n                    }\n                }\n            }\n            else {\n                var_14h = var_14h + 1;\n                iVar5 = arg_8h_01 + 1;\n                if ((iVar5 < 0x14) && (0 < arg_ch)) {\n                    _var_ch = _var_ch / var_2h;\n                    iVar5 = arg_8h_01;\n                }\n            }\n            if (-1 < iVar5) {\n                fcn.004581e0(&var_ch, &var_ch);\n                var_24h = arg_14h + iVar5;\n                uVar3 = 0;\n                *var_24h = 0;\n                pcVar4 = var_24h + -1;\n                if (iVar5 == 0) {\n                    uVar3 = var_ch ^ 1;\n                    if (uVar3 != 0) goto code_r0x004595bd;\n                }\n                else {\n                    do {\n                        cVar1 = fcn.004584e8(&var_ch);\n                        uVar3 = uVar3 | cVar1;\n                        *pcVar4 = cVar1 + '0';\n                        pcVar4 = pcVar4 + -1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                }\n                if (uVar3 == 0) {\n                    var_14h = var_14h + 1;\n                    if (arg_ch < 1) {\n                        *var_24h = 0x30;\n                    }\n                    var_24h = var_24h + 1;\n                    pcVar4[1] = '1';\n                }\n                if (arg_ch < 1) {\n                    arg_ch = var_14h - arg_ch;\n                }\n                if (0x28 < arg_ch) {\n                    arg_ch = 0x28;\n                }\n                *var_24h = 0;\n                arg_ch = arg_ch - (var_24h - arg_14h);\n                if (arg_ch < 1) {\n                    return var_14h;\n                }\n                fcn.00454d3c(var_24h, 0x30, arg_ch);\n                var_24h[arg_ch] = 0;\n                return var_14h;\n            }\n        }\n    }\ncode_r0x004595bd:\n    if (arg_ch < 1) {\n        arg_ch = 1 - arg_ch;\n    }\n    if (0x28 < arg_ch) {\n        arg_ch = 0x28;\n    }\n    fcn.00454d3c(arg_14h, 0x30, arg_ch);\n    *(arg_14h + arg_ch) = 0;\n    return 1;\n}\n",
        "token_count": 1536
    },
    "00459808": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00459808(float10 *arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    float10 fVar7;\n    uint var_28h;\n    ushort *var_24h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint16_t var_4h;\n    uint var_2h;\n    \n    var_2h._0_2_ = 10;\n    if (arg_18h == 2) {\n        _var_ch = *arg_8h;\n    }\n    else if (arg_18h == 6) {\n        _var_ch = *arg_8h;\n    }\n    else if (arg_18h == 8) {\n        _var_ch = *arg_8h;\n    }\n    fVar7 = _var_ch;\n    _var_ch = _var_ch & 0xffffffffffffffff;\n    *arg_10h = (fVar7 & 0x8000) != 0;\n    uVar2 = fcn.00458204(&var_ch);\n    uVar2 = uVar2 & 0x4700;\n    if (uVar2 != 0x4000) {\n        if (uVar2 == 0x500) {\n            return 0x7fff;\n        }\n        if (uVar2 == 0x100) {\n            return 0x7ffe;\n        }\n        uVar3 = ((var_4h & 0x7fff) - 0x3fff) * 0x4d10 + (var_8h._3_1_ * 2 & 0xff) * 0x4d;\n        var_14h = uVar3 >> 0x10;\n        if ((uVar3 & 0xffff) != 0) {\n            var_14h = var_14h + 1;\n        }\n        iVar6 = arg_ch;\n        if ((0 < arg_ch) || (iVar6 = var_14h - arg_ch,  -1 < iVar6)) {\n            if (0x13 < iVar6) {\n                iVar6 = 0x13;\n            }\n            for (iVar5 = iVar6 - var_14h; iVar5 != 0; iVar5 = iVar5 + arg_8h_00) {\n                arg_8h_00 = iVar5;\n                if (iVar5 < 0) {\n                    arg_8h_00 = -iVar5;\n                }\n                if (0x1344 < arg_8h_00) {\n                    arg_8h_00 = 0x1344;\n                }\n                fVar7 = fcn.00457f84(arg_8h_00);\n                if (iVar5 < 0) {\n                    _var_ch = _var_ch / fVar7;\n                }\n                else {\n                    _var_ch = _var_ch * fVar7;\n                    arg_8h_00 = -arg_8h_00;\n                }\n            }\n            fVar7 = fcn.00457f84(iVar6);\n            if (_var_ch <= fVar7) {\n                fVar7 = fcn.00457f84(iVar6 + -1);\n                iVar5 = iVar6;\n                if (_var_ch < fVar7) {\n                    var_14h = var_14h + -1;\n                    iVar5 = iVar6 + -1;\n                    if (0 < arg_ch) {\n                        _var_ch = _var_ch * var_2h;\n                        iVar5 = iVar6;\n                    }\n                }\n            }\n            else {\n                var_14h = var_14h + 1;\n                iVar5 = iVar6 + 1;\n                if ((iVar5 < 0x14) && (0 < arg_ch)) {\n                    _var_ch = _var_ch / var_2h;\n                    iVar5 = iVar6;\n                }\n            }\n            if (-1 < iVar5) {\n                fcn.004581e0(&var_ch, &var_ch);\n                uVar3 = 0;\n                var_24h = iVar5 * 2 + arg_14h;\n                *var_24h = 0;\n                piVar4 = var_24h + -1;\n                if (iVar5 == 0) {\n                    uVar3 = var_ch ^ 1;\n                    if (uVar3 != 0) goto code_r0x00459891;\n                }\n                else {\n                    do {\n                        cVar1 = fcn.004584e8(&var_ch);\n                        uVar3 = uVar3 | cVar1;\n                        *piVar4 = cVar1 + 0x30;\n                        piVar4 = piVar4 + -1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                }\n                if (uVar3 == 0) {\n                    var_14h = var_14h + 1;\n                    if (arg_ch < 1) {\n                        *var_24h = 0x30;\n                    }\n                    var_24h = var_24h + 1;\n                    piVar4[1] = 0x31;\n                }\n                if (arg_ch < 1) {\n                    arg_ch = var_14h - arg_ch;\n                }\n                if (0x28 < arg_ch) {\n                    arg_ch = 0x28;\n                }\n                *var_24h = 0;\n                iVar6 = var_24h - arg_14h >> 1;\n                if (iVar6 < 0) {\n                    iVar6 = iVar6 + ((var_24h - arg_14h & 1U) != 0);\n                }\n                arg_ch = arg_ch - iVar6;\n                if (arg_ch < 1) {\n                    return var_14h;\n                }\n                fcn.00454dc8(var_24h, 0x30, arg_ch);\n                var_24h[arg_ch] = 0;\n                return var_14h;\n            }\n        }\n    }\ncode_r0x00459891:\n    if (arg_ch < 1) {\n        arg_ch = 1 - arg_ch;\n    }\n    if (0x28 < arg_ch) {\n        arg_ch = 0x28;\n    }\n    fcn.00454dc8(arg_14h, 0x30, arg_ch);\n    *(arg_14h + arg_ch * 2) = 0;\n    return 1;\n}\n",
        "token_count": 1539
    },
    "0045c2db": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c2db(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t arg_10h_00;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t *arg_ch_00;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    int32_t **var_8h;\n    uint32_t var_4h;\n    \n    if (*(arg_10h + 0x28) != arg_ch) {\n        fcn.00459cf4(\"dscPtr->xdERRaddr == errPtr\", 0x464ddc, 0x721);\n    }\n    if (*(arg_10h + 0x2c) != arg_8h) {\n        fcn.00459cf4(\"dscPtr->xdHtabAdr == hdtPtr\", 0x464dff, 0x722);\n    }\n    if (*(arg_10h + 0x45) != '\\0') {\n        fcn.00459cf4(\"dscPtr->xdArgCopy == 0\", 0x464e1d, 0x724);\n    }\n    arg_ch_00 = *(arg_8h + 4);\n    *(arg_10h + 0x3c) = arg_ch_00;\n    if ((arg_ch_00 != NULL) && ((*(arg_8h + 8) & 0x80) == 0)) {\n        bVar5 = (*(arg_8h + 8) & 1) == 0;\n        var_8h = arg_10h + 0x52;\n        *(arg_10h + 0x45) = 1;\n        *(arg_10h + 0x40) = *arg_14h + arg_18h;\n        uVar1 = *(arg_ch_00 + 1);\n        arg_10h_00 = *arg_ch_00;\n        uVar2 = uVar1;\n        if ((uVar1 & 0x30) != 0) {\n            arg_ch_00 = arg_ch_00[2];\n            uVar2 = *(arg_ch_00 + 1);\n        }\n        var_4h = uVar2;\n        if (((uVar1 & 0x10) == 0) || ((*(arg_10h + 0xc) & 1) == 0)) {\n            if (((uVar2 & 1) == 0) || ((uVar1 & 0x30) == 0)) {\n                if ((*(arg_10h + 0x18) & 1) == 0) {\n                    if ((uVar1 & 0x20) == 0) {\n                        if (arg_10h_00 != *(arg_10h + 0x10)) {\n                            fcn.00459cf4(\"dscPtr->xdSize == size\", 0x464ee2, 0x7f7);\n                        }\n                        fcn.00454ccc(*(arg_10h + 0x40), var_8h, arg_10h_00);\n                    }\n                    else {\n                        fcn.00454ccc(*(arg_10h + 0x40), &var_8h, arg_10h_00);\n                        bVar5 = true;\n                    }\n                }\n                else {\n                    if (*(arg_10h + 4) != *(arg_10h + 0x14)) {\n                        fcn.00459cf4(\"dscPtr->xdTypeID == dscPtr->xdBase\", 0x464eaa, 0x7b5);\n                    }\n                    iVar4 = fcn.00455600(*(arg_10h + 0x14), arg_ch_00);\n                    if (iVar4 == 0) {\n                        var_8h = fcn.00455a38(var_8h, *(arg_10h + 0x14), arg_ch_00);\n                    }\n                    bVar5 = iVar4 == 0 || bVar5;\n                    if ((*(arg_ch_00 + 3) & 1) == 0) {\n                        fcn.00454ccc(*(arg_10h + 0x40), var_8h, arg_10h_00);\n                    }\n                    else {\n                        if (*(arg_8h + 0xc) == 0) {\n                            fcn.00459cf4(\"hdtPtr->HDcctrAddr\", 0x464ec4, 1999);\n                        }\n                        fcn.0045b903(*(arg_10h + 0x40), var_8h, *(arg_8h + 0xc), *(arg_8h + 0x10));\n                        bVar5 = true;\n                    }\n                }\n            }\n            else {\n                if ((uVar1 & 0x20) == 0) {\n                    if ((uVar1 & 0x10) == 0) {\n                        fcn.00459cf4(\"mask & TM_IS_PTR\", 0x464e5e, 0x794);\n                    }\n                    if ((*(arg_10h + 0x18) & 0x10) == 0) {\n                        fcn.00459cf4(\"dscPtr->xdMask & TM_IS_PTR\", 0x464e80, 0x795);\n                    }\n                    var_8h = *var_8h;\n                }\n                else {\n                    if ((*(arg_10h + 0x18) & 0x10) != 0) {\n                        fcn.00459cf4(\"(dscPtr->xdMask & TM_IS_PTR) == 0\", 0x464e46, 0x781);\n                    }\n                    bVar5 = true;\n                    if ((*(arg_10h + 0xc) & 2) != 0) {\n                        var_8h = *var_8h;\n                    }\n                }\n                iVar4 = fcn.00455600(*(arg_10h + 0x14), arg_ch_00);\n                ppiVar3 = var_8h;\n                if (iVar4 == 0) {\n                    var_8h = fcn.00455a38(var_8h, *(arg_10h + 0x14), arg_ch_00);\n                    if (var_8h != ppiVar3) {\n                        bVar5 = true;\n                    }\n                }\n                fcn.00454ccc(*(arg_10h + 0x40), &var_8h, arg_10h_00);\n            }\n        }\n        else {\n            fcn.00454d3c(*(arg_10h + 0x40), 0, arg_10h_00);\n            bVar5 = true;\n        }\n        if ((!bVar5) && ((var_4h & 3) != 0)) {\n            if ((*(arg_ch_00 + 3) & 2) != 0) {\n                fcn.0045bf76(var_8h, arg_ch_00, arg_ch_00[10], *(arg_ch_00 + 0xb));\n            }\n            *(arg_10h + 0x44) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 1635
    },
    "0045f048": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0045f048(void)\n\n{\n    fcn.0040147c(*0x46107d != '\\0', *0x46107c != '\\0', *0x461093, *0x461044 != '\\0');\n    return;\n}\n",
        "token_count": 59
    },
    "0045f7a0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045f7a0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint32_t arg_ch_00;\n    uint uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint var_148h;\n    uint var_138h;\n    int32_t var_12ch;\n    int32_t var_124h;\n    int32_t var_114h;\n    uint var_10ch;\n    uint var_104h;\n    \n    fcn.00455058();\n    puVar7 = &var_148h;\n    uVar6 = 0;\n    uVar5 = 0;\n    uVar4 = 0;\n    uVar3 = 1;\n    pcVar2 = fcn.0045f934;\n    uVar1 = 0;\n    var_138h._0_2_ = 0x14;\n    var_12ch = var_12ch + 1;\n    arg_ch = fcn.0045f268(&var_124h, arg_8h);\n    var_12ch = var_12ch + 4;\n    fcn.0045f9a0(&var_104h, arg_ch);\n    var_104h = 0x466100;\n    var_12ch = var_12ch + 2;\n    arg_ch_00 = var_114h - var_124h;\n    if ((var_124h == 0) != (arg_ch_00 == 0)) {\n        fcn.0045f6d8(0x465a83, 0x465a9c, 0x167);\n    }\n    if (var_124h != 0) {\n        if (arg_ch_00 < 0x81) {\n            fcn.0045f73c(var_124h, arg_ch_00);\n        }\n        else {\n            fcn.00454224(var_124h);\n        }\n    }\n    var_12ch = var_12ch + -3;\n    var_138h._0_2_ = 8;\n    fcn.0045be65(0x45f8d8, &var_104h, uVar1, pcVar2, uVar3, uVar4, uVar5, uVar6, puVar7);\n    return;\n}\n",
        "token_count": 546
    },
    "0045fd10": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fd10(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint32_t arg_ch_00;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        arg_8h_00 = *arg_8h;\n        arg_ch_00 = arg_8h[4] - arg_8h_00;\n        if ((arg_8h_00 == 0) != (arg_ch_00 == 0)) {\n            fcn.0045f6d8(0x465da0, 0x465db9, 0x167);\n        }\n        if (arg_8h_00 != 0) {\n            if (arg_ch_00 < 0x81) {\n                fcn.0045f73c(arg_8h_00, arg_ch_00);\n            }\n            else {\n                fcn.00454224(arg_8h_00);\n            }\n        }\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 302
    },
    "0045fe58": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fe58(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint32_t arg_ch_00;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        arg_8h_00 = *arg_8h;\n        arg_ch_00 = arg_8h[4] - arg_8h_00;\n        if ((arg_8h_00 == 0) != (arg_ch_00 == 0)) {\n            fcn.0045f6d8(0x465dd1, 0x465dea, 0x167);\n        }\n        if (arg_8h_00 != 0) {\n            if (arg_ch_00 < 0x81) {\n                fcn.0045f73c(arg_8h_00, arg_ch_00);\n            }\n            else {\n                fcn.00454224(arg_8h_00);\n            }\n        }\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 301
    },
    "00401e34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e34(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        iVar1 = arg_8h[4] - *arg_8h >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((arg_8h[4] - *arg_8h & 1U) != 0);\n        }\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != 0) {\n            if (iVar1 * 2 < 0x81) {\n                fcn.0045f73c(arg_8h_00, iVar1 * 2);\n            }\n            else {\n                fcn.00454224(arg_8h_00);\n            }\n        }\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 289
    },
    "00401f38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f38(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && ((arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00402068": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402068(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        iVar1 = arg_8h[4] - *arg_8h >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((arg_8h[4] - *arg_8h & 1U) != 0);\n        }\n        arg_8h_00 = *arg_8h;\n        if (arg_8h_00 != 0) {\n            if (iVar1 * 2 < 0x81) {\n                fcn.0045f73c(arg_8h_00, iVar1 * 2);\n            }\n            else {\n                fcn.00454224(arg_8h_00);\n            }\n        }\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 288
    },
    "004023bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023bc(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if ((arg_8h != 0) && ((arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 108
    },
    "0040af40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040af40(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -1) & 1) == 0) && (*(arg_8h + -8) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "0040b214": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040b214(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack56 = &fcn.0040b214::var_1h + 1;\n    uStack60 = 0x40b3d9;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x40b247;\n    (**(*in_EAX + 0x24))();\n    puStack68 = 0x40b252;\n    fcn.0040c44c();\n    puStack68 = 0x40b25d;\n    fcn.0040c44c();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack72 = 0x40b3b7;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &fcn.0040b214::var_1h + 1;\n    if (param_2 == NULL) {\n        if ((var_1h & 1) == 0) {\n            uStack84 = 0x40b29e;\n            puStack68 = &fcn.0040b214::var_1h + 1;\n            fcn.0040afc0(&fcn.0040b214::var_1h + 1);\n        }\n        else {\n            uStack84 = 0x40b295;\n            puStack68 = &fcn.0040b214::var_1h + 1;\n            fcn.0040b170(&fcn.0040b214::var_1h + 1);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack84 = 0x40b375;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        if ((var_1h & 1) == 0) {\n            fcn.0040b0d0(&fcn.0040b214::var_1h + 1);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack88;\n            fcn.00422468();\n            *in_FS_OFFSET = uStack76;\n            puStack68 = 0x40b3e0;\n            uStack72 = 0x40b3d8;\n            fcn.00422780();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        if ((var_1h & 2) != 0) {\n            fcn.00421e24();\n        }\n        if (((var_1h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0040732c();\n        }\n        else {\n            iVar3 = fcn.004074e4();\n            if (iVar3 < 0) {\n                fcn.0040732c();\n            }\n        }\n        *in_FS_OFFSET = uStack88;\n    }\n    *in_FS_OFFSET = uStack76;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1005
    },
    "0040f380": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040f380(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00407570();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x40f3d4 != (*0x40f3d4 & *(in_EAX + 0x1c)))) {\n            fcn.0040f2c8();\n        }\n        else {\n            fcn.0040f348();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0041e2b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e2b4(uint16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t in_EDX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_208h;\n    int32_t aiStack520 [127];\n    int32_t var_8h;\n    uint var_2h;\n    \n    if (((in_EDX & 1) != 0) && (in_EDX < 0x80)) {\n        cVar1 = fcn.0041e47c();\n        if (cVar1 != '\\0') goto code_r0x0041e2e3;\n    }\n    fcn.0041750c();\ncode_r0x0041e2e3:\n    iVar3 = in_EDX + 1 >> 1;\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + ((in_EDX + 1 & 1) != 0);\n    }\n    var_8h = iVar3;\n    if (-1 < iVar3 + -1) {\n        piVar2 = &var_208h;\n        do {\n            piVar2[1] = *in_EAX;\n            *piVar2 = (in_EAX[1] - piVar2[1]) + 1;\n            in_EAX = in_EAX + 2;\n            piVar2 = piVar2 + 2;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = sub.OLEAUT32.DLL_SafeArrayDestroy(var_2h, var_8h, &var_208h);\n    if (iVar3 == 0) {\n        fcn.0041750c();\n    }\n    fcn.00417b3c();\n    *arg_8h = var_2h | 0x2000;\n    *(arg_8h + 4) = iVar3;\n    return;\n}\n",
        "token_count": 470
    },
    "0041fa5c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.0041fa5c(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.KERNEL32.DLL_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 99
    },
    "004203c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.004203c0(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(in_EAX + -4);\n    if ((uVar1 & 0x80000002) != 0x80000002) {\n        *0x466ec8 = 4;\n    }\n    uVar3 = uVar1 & 0x7ffffffc;\n    puVar2 = in_EAX - uVar3;\n    if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {\n        *0x466ec8 = 5;\n    }\n    if ((*puVar2 & 1) != 0) {\n        uVar1 = puVar2[-1];\n        if (uVar1 != *(puVar2 + (8 - uVar1))) {\n            *0x466ec8 = 6;\n        }\n        fcn.004202b0();\n        uVar3 = uVar3 + uVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 252
    },
    "00420988": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00420988(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    *0x466ec8 = 0;\n    if (*0x466ec4 == '\\0') {\n        puStack24 = 0x4209a6;\n        cVar2 = fcn.0042010c();\n        if (cVar2 == '\\0') {\n            *0x466ec8 = 8;\n            return 8;\n        }\n    }\n    uStack28 = 0x420b1a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x46694d != '\\0') {\n        uStack36 = 0x466ecc;\n        puStack24 = &stack0xfffffffc;\n        sub.KERNEL32.DLL_EnterCriticalSection();\n    }\n    puVar5 = in_EAX + -4;\n    uVar4 = *puVar5;\n    if ((uVar4 & 2) == 0) {\n        *0x466ec8 = 9;\n        goto code_r0x00420af1;\n    }\n    *0x466eb8 = *0x466eb8 + -1;\n    *0x466ebc = *0x466ebc - ((uVar4 & 0x7ffffffc) - 4);\n    if ((uVar4 & 1) != 0) {\n        uVar1 = *(in_EAX + -8);\n        if ((uVar1 < 0xc) || ((uVar1 & 0x80000003) != 0)) {\n            *0x466ec8 = 10;\n            goto code_r0x00420af1;\n        }\n        puVar5 = puVar5 - uVar1;\n        if (uVar1 != puVar5[2]) {\n            *0x466ec8 = 10;\n            goto code_r0x00420af1;\n        }\n        uVar4 = uVar4 + uVar1;\n        fcn.004202b0();\n    }\n    uVar4 = uVar4 & 0x7ffffffc;\n    puVar5 = puVar5 + uVar4;\n    if (puVar5 == *0x466f20) {\n        *0x466f20 = *0x466f20 - uVar4;\n        *0x466f1c = *0x466f1c + uVar4;\n        if (0x3c00 < *0x466f1c) {\n            fcn.004205a0();\n        }\n        fcn.00422468();\n        return 0;\n    }\n    if ((*puVar5 & 2) == 0) {\n        if (((puVar5[1] == 0) || (*puVar5 == 0)) || (puVar5[2] < 0xc)) {\n            *0x466ec8 = 0xb;\n            goto code_r0x00420af1;\n        }\n        fcn.004202b0();\n    }\n    else {\n        if ((*puVar5 & 0x7ffffffc) < 4) {\n            *0x466ec8 = 0xb;\n            goto code_r0x00420af1;\n        }\n        *puVar5 = *puVar5 | 1;\n    }\n    fcn.00420518();\ncode_r0x00420af1:\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x420b21;\n    if (*0x46694d != '\\0') {\n        uStack32 = 0x466ecc;\n        uVar3 = sub.KERNEL32.DLL_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 910
    },
    "004236c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004236c8(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n            bVar6 = !bVar6;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar6 - param_2;\n        }\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 561
    },
    "00423790": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00423790(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        bVar6 = param_2 < 0;\n        if (bVar6) {\n            bVar4 = in_EAX != 0;\n            in_EAX = -in_EAX;\n            param_2 = -bVar4 - param_2;\n        }\n        if (param_4 < 0) {\n            bVar4 = param_3 != 0;\n            param_3 = -param_3;\n            param_4 = -bVar4 - param_4;\n        }\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (bVar6) {\n            bVar6 = uVar2 != 0;\n            uVar2 = -uVar2;\n            uVar3 = -bVar6 - uVar3;\n        }\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 550
    },
    "00429140": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00429140(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "0042a358": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a358(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42abb0;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(arg_8h - 0x21) == '\\0') {\n        fcn.00430d00();\n        puVar2 = puStack24;\n    }\n    puStack24 = puVar2;\n    if (*(arg_8h - 0x2c) == 0) {\n        cVar3 = fcn.00421db4();\n        if (cVar3 == '\\0') {\n            *(arg_8h - 0x2d) = 0;\n        }\n        else {\n            *(arg_8h - 0x2d) = *(*(arg_8h - 0x2c) + 0x60);\n        }\n    }\n    else {\n        *(arg_8h - 0x2d) = 0;\n    }\n    *(arg_8h - 0x10) = *(arg_8h - 0x20) + 1;\n    iVar5 = *(arg_8h - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(arg_8h - 0xc) = iVar5;\n    fcn.00422b58();\n    if (bVar9) {\n        fcn.00430d00();\n        *(arg_8h - 0x10) = 0;\n        *(arg_8h - 8) = 0xfffffffc;\n        *(arg_8h - 0x35) = 0;\n    }\n    else {\n        if ((*(arg_8h - 0x3c) == 0) ||\n           (((iVar5 = *(*(arg_8h - 0x34) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00425f04(),  iVar6 <= iVar5)) &&\n            ((*(*(arg_8h - 0x34) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(arg_8h - 0x34) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))\n             )))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(arg_8h - 0x3d) = uVar4;\n        if ((*(arg_8h - 0x3d) == '\\0') &&\n           ((piVar1 = *(*(arg_8h - 0x34) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(arg_8h - 0x3c) == 0) || (*(arg_8h + 8) != '\\0')) {\n                *(arg_8h - 8) = *(arg_8h - 0x10);\n                *(arg_8h - 4) = *(arg_8h - 0xc);\n            }\n            else {\n                *(arg_8h - 8) = *(arg_8h - 0x10) + *(*(arg_8h - 0x3c) + 0x34);\n                *(arg_8h - 4) = *(arg_8h - 0xc) + *(*(arg_8h - 0x3c) + 0x30);\n            }\n            *(arg_8h - 0x35) = 0;\n        }\n        else {\n            *(arg_8h - 0x35) = 1;\n            if (*(arg_8h - 0x3d) == '\\0') {\n                *(arg_8h - 8) = *(arg_8h - 0x10) + 0x10;\n                *(arg_8h - 4) = *(arg_8h - 0xc) + 0x10;\n            }\n            else {\n                *(arg_8h - 8) = *(arg_8h - 0x10) + *(*(arg_8h - 0x3c) + 0x34);\n                *(arg_8h - 4) = *(arg_8h - 0xc) + *(*(arg_8h - 0x3c) + 0x30);\n            }\n            if (*(*(arg_8h - 0x34) + 0x38) != '\\0') {\n                *(arg_8h - 8) = *(arg_8h - 8) + 1;\n                *(arg_8h - 4) = *(arg_8h - 4) + 1;\n                uVar7 = fcn.00430954();\n                *(arg_8h - 0x44) = uVar7;\n                if ((*(arg_8h + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00430954();\n                    *(arg_8h - 0x44) = uVar7;\n                    fcn.004357d4();\n                    fcn.00430930();\n                    fcn.00430d00();\n                }\n                else {\n                    fcn.0043095c();\n                    fcn.00430d00();\n                }\n                fcn.0043095c();\n                *(arg_8h - 0x10) = *(arg_8h - 0x10) + 1;\n                *(arg_8h - 0xc) = *(arg_8h - 0xc) + 1;\n            }\n            if (*(arg_8h - 0x3d) == '\\0') {\n                *(arg_8h - 0x58) = *(arg_8h - 0x10);\n                *(arg_8h - 0x54) = *(arg_8h - 0xc);\n                *(arg_8h - 0x50) = *(arg_8h - 8);\n                *(arg_8h - 0x4c) = *(arg_8h - 4);\n                iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                if (iVar5 < *(arg_8h - 8) - *(arg_8h - 0x10)) {\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                    uVar8 = (*(arg_8h - 8) - *(arg_8h - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h - 0x10) = iVar5 + *(arg_8h - 0x10) + 1;\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                    *(arg_8h - 8) = iVar5 + *(arg_8h - 0x10);\n                }\n                iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                if (iVar5 < *(arg_8h - 4) - *(arg_8h - 0xc)) {\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                    uVar8 = (*(arg_8h - 4) - *(arg_8h - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h - 0xc) = iVar5 + *(arg_8h - 0xc) + 1;\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                    *(arg_8h - 4) = iVar5 + *(arg_8h - 0xc);\n                }\n                fcn.00430dc8();\n                *(arg_8h - 0x10) = *(arg_8h - 0x58);\n                *(arg_8h - 0xc) = *(arg_8h - 0x54);\n                *(arg_8h - 8) = *(arg_8h - 0x50);\n                *(arg_8h - 4) = *(arg_8h - 0x4c);\n            }\n            else {\n                iVar5 = *(*(arg_8h - 0x34) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00425f04(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.004336e4();\n                    *(arg_8h - 0x48) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(arg_8h - 0x48) + 0x3c))();\n                    sub.USER32.DLL_LoadBitmapA(0, 0x7ff8);\n                    fcn.004347cc();\n                    *(arg_8h - 0x44) = *(*(*(arg_8h - 0x28) + 0xc) + 0x18);\n                    fcn.00430190();\n                    iVar5 = *(arg_8h - 0x48);\n                    iVar6 = (**(**(arg_8h - 0x48) + 0x20))();\n                    uVar8 = (*(arg_8h - 4) - *(arg_8h - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(arg_8h - 0x48) + 0x2c))(iVar6 + *(arg_8h - 0xc) + 1);\n                    fcn.00430c54(iVar5);\n                    fcn.00430190();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00421c28(0x42a83b);\n                    return;\n                }\n                fcn.004261f4(*(arg_8h - 0x34) & 0xffffff00 | *(*(arg_8h - 0x34) + 0x39), *(*(arg_8h - 0x34) + 0x40), \n                             *(arg_8h - 0xc));\n            }\n            if (*(*(arg_8h - 0x34) + 0x38) != '\\0') {\n                *(arg_8h - 8) = *(arg_8h - 8) + -1;\n                *(arg_8h - 4) = *(arg_8h - 4) + -1;\n            }\n        }\n    }\n    *(arg_8h - 0x10) = *(arg_8h - 0x10) + -1;\n    *(arg_8h - 0xc) = *(arg_8h - 0xc) + -1;\n    *(arg_8h - 8) = *(arg_8h - 8) + 2;\n    *(arg_8h - 4) = *(arg_8h - 4) + 2;\n    if ((*(*(arg_8h - 0x34) + 0x38) != '\\0') || ((*(arg_8h - 0x21) != '\\0' && (*(arg_8h - 0x35) != '\\0')))) {\n        uVar7 = fcn.00430fe8();\n        sub.USER32.DLL_DrawEdge(uVar7);\n    }\n    if (*(arg_8h - 0x21) != '\\0') {\n        if (*(arg_8h - 0x35) != '\\0') {\n            *(arg_8h - 0x20) = *(arg_8h - 8) + 1;\n        }\n        if ((*(arg_8h - 0x59) == '\\0') || (*(arg_8h + 8) == '\\0')) {\n            fcn.0043095c();\n        }\n        fcn.00430d00();\n    }\n    if ((*(arg_8h + 8) != '\\0') && (*(arg_8h - 0x59) != '\\0')) {\n        if (*(arg_8h - 0x21) == '\\0') {\n            if ((*(arg_8h + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00430fe8();\n                sub.USER32.DLL_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00430fe8();\n            sub.USER32.DLL_DrawEdge(uVar7);\n        }\n        if (*(arg_8h - 0x21) == '\\0') {\n            iStack32 = arg_8h - 0x20;\n            sub.USER32.DLL_OffsetRect();\n        }\n    }\n    if ((*(arg_8h - 0x21) == '\\0') || (*(arg_8h - 0x35) == '\\0')) {\n        *(arg_8h - 0x20) = *(arg_8h - 8) + 1;\n    }\n    *(arg_8h - 0x20) = *(arg_8h - 0x20) + 2;\n    *(arg_8h - 0x18) = *(arg_8h - 0x18) + -1;\n    *(arg_8h - 0x60) = *(*(arg_8h - 0x2d) * 2 + 0x461bcc) | 0x60;\n    if ((*(arg_8h - 0x61) != '\\0') && ((*(arg_8h + 0xd) & 1) != 0)) {\n        *(arg_8h - 0x60) = *(arg_8h - 0x60) | 0x100000;\n    }\n    *(arg_8h - 0x58) = *(arg_8h - 0x20);\n    *(arg_8h - 0x54) = *(arg_8h - 0x1c);\n    *(arg_8h - 0x50) = *(arg_8h - 0x18);\n    *(arg_8h - 0x4c) = *(arg_8h - 0x14);\n    if ((*(arg_8h + 0xc) & 0x20) != 0) {\n        fcn.0043045c();\n    }\n    fcn.0042a108(*(arg_8h - 0x60) | 0x500, arg_8h & 0xffffff00 | *(arg_8h - 0x21), arg_8h - 0x20);\n    uVar8 = (*(arg_8h - 0x4c) - *(arg_8h - 0x54)) - (*(arg_8h - 0x14) - *(arg_8h - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.USER32.DLL_OffsetRect(arg_8h - 0x20, 0, iVar5);\n    if (((*(arg_8h + 8) != '\\0') && (*(arg_8h - 0x21) != '\\0')) && (*(arg_8h - 0x59) != '\\0')) {\n        sub.USER32.DLL_OffsetRect(arg_8h - 0x20, 1, 0);\n    }\n    fcn.0042a108(*(arg_8h - 0x60), arg_8h & 0xffffff00 | *(arg_8h - 0x21), arg_8h - 0x20);\n    if ((*(*(arg_8h - 0x34) + 0x60) != 0) && (*(arg_8h + 8) == '\\0')) {\n        *(arg_8h - 0x20) = *(arg_8h - 0x18);\n        *(arg_8h - 0x18) = *(arg_8h - 0x50) + -10;\n        iVar5 = arg_8h - 0x20;\n        uVar8 = arg_8h & 0xffffff00 | *(arg_8h - 0x21);\n        in_stack_ffffffa4 = 2;\n        fcn.004291cc();\n        fcn.0042a108(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0042275c(0x42abb7);\n    return;\n}\n",
        "token_count": 4044
    },
    "0042abd0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042abd0(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x42b452;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puVar2 = &stack0xfffffffc;\n    if (*(arg_8h - 0x21) == '\\0') {\n        fcn.00430d00();\n        puVar2 = puStack24;\n    }\n    puStack24 = puVar2;\n    if (*(arg_8h - 0x2c) == 0) {\n        cVar3 = fcn.00421db4();\n        if (cVar3 == '\\0') {\n            *(arg_8h - 0x2d) = 0;\n        }\n        else {\n            *(arg_8h - 0x2d) = *(*(arg_8h - 0x2c) + 0x60);\n        }\n    }\n    else {\n        *(arg_8h - 0x2d) = 0;\n    }\n    *(arg_8h - 8) = *(arg_8h - 0x18) + -1;\n    iVar5 = *(arg_8h - 0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(arg_8h - 0xc) = iVar5;\n    fcn.00422b58();\n    if (bVar9) {\n        fcn.00430d00();\n        *(arg_8h - 0x10) = *(arg_8h - 8) + 2;\n        *(arg_8h - 8) = 0;\n        *(arg_8h - 0x35) = 0;\n    }\n    else {\n        if ((*(arg_8h - 0x3c) == 0) ||\n           (((iVar5 = *(*(arg_8h - 0x34) + 0x40),  iVar5 < 0 || (iVar6 = fcn.00425f04(),  iVar6 <= iVar5)) &&\n            ((*(*(arg_8h - 0x34) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(arg_8h - 0x34) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0'))\n             )))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(arg_8h - 0x3d) = uVar4;\n        if ((*(arg_8h - 0x3d) == '\\0') &&\n           ((piVar1 = *(*(arg_8h - 0x34) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(arg_8h - 0x3c) == 0) || (*(arg_8h + 8) != '\\0')) {\n                *(arg_8h - 0x10) = *(arg_8h - 8);\n                *(arg_8h - 4) = *(arg_8h - 0xc);\n            }\n            else {\n                *(arg_8h - 0x10) = *(arg_8h - 8) - *(*(arg_8h - 0x3c) + 0x34);\n                *(arg_8h - 4) = *(arg_8h - 0xc) + *(*(arg_8h - 0x3c) + 0x30);\n            }\n            *(arg_8h - 0x35) = 0;\n        }\n        else {\n            *(arg_8h - 0x35) = 1;\n            if (*(arg_8h - 0x3d) == '\\0') {\n                *(arg_8h - 0x10) = *(arg_8h - 8) + -0x10;\n                *(arg_8h - 4) = *(arg_8h - 0xc) + 0x10;\n            }\n            else {\n                *(arg_8h - 0x10) = *(arg_8h - 8) - *(*(arg_8h - 0x3c) + 0x34);\n                *(arg_8h - 4) = *(arg_8h - 0xc) + *(*(arg_8h - 0x3c) + 0x30);\n            }\n            if (*(*(arg_8h - 0x34) + 0x38) != '\\0') {\n                *(arg_8h - 0x10) = *(arg_8h - 0x10) + -1;\n                *(arg_8h - 4) = *(arg_8h - 4) + 1;\n                uVar7 = fcn.00430954();\n                *(arg_8h - 0x44) = uVar7;\n                if (*(arg_8h - 0x21) == '\\0') {\n                    uVar7 = fcn.00430954();\n                    *(arg_8h - 0x44) = uVar7;\n                    fcn.004357d4();\n                    fcn.00430930();\n                    fcn.00430d00();\n                }\n                else {\n                    fcn.0043095c();\n                    fcn.00430d00();\n                }\n                fcn.0043095c();\n                *(arg_8h - 8) = *(arg_8h - 8) + -1;\n                *(arg_8h - 0xc) = *(arg_8h - 0xc) + 1;\n            }\n            if (*(arg_8h - 0x3d) == '\\0') {\n                *(arg_8h - 0x58) = *(arg_8h - 0x10);\n                *(arg_8h - 0x54) = *(arg_8h - 0xc);\n                *(arg_8h - 0x50) = *(arg_8h - 8);\n                *(arg_8h - 0x4c) = *(arg_8h - 4);\n                iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                if (iVar5 < *(arg_8h - 8) - *(arg_8h - 0x10)) {\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                    uVar8 = (*(arg_8h - 8) - *(arg_8h - 0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h - 8) = (*(arg_8h - 8) - iVar5) + 1;\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x2c))();\n                    *(arg_8h - 0x10) = *(arg_8h - 8) - iVar5;\n                }\n                iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                if (iVar5 < *(arg_8h - 4) - *(arg_8h - 0xc)) {\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                    uVar8 = (*(arg_8h - 4) - *(arg_8h - 0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(arg_8h - 0xc) = iVar5 + *(arg_8h - 0xc) + 1;\n                    iVar5 = (**(**(*(arg_8h - 0x34) + 0x4c) + 0x20))();\n                    *(arg_8h - 4) = iVar5 + *(arg_8h - 0xc);\n                }\n                fcn.00430dc8();\n                *(arg_8h - 0x10) = *(arg_8h - 0x58);\n                *(arg_8h - 0xc) = *(arg_8h - 0x54);\n                *(arg_8h - 8) = *(arg_8h - 0x50);\n                *(arg_8h - 4) = *(arg_8h - 0x4c);\n            }\n            else {\n                iVar5 = *(*(arg_8h - 0x34) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.00425f04(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.004336e4();\n                    *(arg_8h - 0x48) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(arg_8h - 0x48) + 0x3c))();\n                    sub.USER32.DLL_LoadBitmapA(0, 0x7ff8);\n                    fcn.004347cc();\n                    *(arg_8h - 0x44) = *(*(*(arg_8h - 0x28) + 0xc) + 0x18);\n                    fcn.00430190();\n                    iVar5 = *(arg_8h - 0x48);\n                    iVar6 = (**(**(arg_8h - 0x48) + 0x20))();\n                    uVar8 = (*(arg_8h - 4) - *(arg_8h - 0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(arg_8h - 0x48) + 0x2c))(iVar6 + *(arg_8h - 0xc) + 1);\n                    fcn.00430c54(iVar5);\n                    fcn.00430190();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00421c28(0x42b0bc);\n                    return;\n                }\n                fcn.004261f4(*(arg_8h - 0x34) & 0xffffff00 | *(*(arg_8h - 0x34) + 0x39), *(*(arg_8h - 0x34) + 0x40), \n                             *(arg_8h - 0xc));\n            }\n            if (*(*(arg_8h - 0x34) + 0x38) != '\\0') {\n                *(arg_8h - 8) = *(arg_8h - 8) + -1;\n                *(arg_8h - 4) = *(arg_8h - 4) + -1;\n            }\n        }\n    }\n    *(arg_8h - 0x10) = *(arg_8h - 0x10) + -1;\n    *(arg_8h - 0xc) = *(arg_8h - 0xc) + -1;\n    *(arg_8h - 8) = *(arg_8h - 8) + 2;\n    *(arg_8h - 4) = *(arg_8h - 4) + 2;\n    if ((*(*(arg_8h - 0x34) + 0x38) != '\\0') || ((*(arg_8h - 0x21) != '\\0' && (*(arg_8h - 0x35) != '\\0')))) {\n        uVar7 = fcn.00430fe8();\n        sub.USER32.DLL_DrawEdge(uVar7);\n    }\n    if (*(arg_8h - 0x21) != '\\0') {\n        if (*(arg_8h - 0x35) != '\\0') {\n            *(arg_8h - 0x18) = *(arg_8h - 0x10) + -1;\n        }\n        if ((*(arg_8h - 0x59) == '\\0') || (*(arg_8h + 8) == '\\0')) {\n            fcn.0043095c();\n        }\n        fcn.00430d00();\n    }\n    if ((*(arg_8h + 8) != '\\0') && (*(arg_8h - 0x59) != '\\0')) {\n        if (*(arg_8h - 0x21) == '\\0') {\n            if ((*(arg_8h + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00430fe8();\n                sub.USER32.DLL_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00430fe8();\n            sub.USER32.DLL_DrawEdge(uVar7);\n        }\n        if (*(arg_8h - 0x21) == '\\0') {\n            iStack32 = arg_8h - 0x20;\n            sub.USER32.DLL_OffsetRect();\n        }\n    }\n    if ((*(arg_8h - 0x21) == '\\0') || (*(arg_8h - 0x35) == '\\0')) {\n        *(arg_8h - 0x18) = *(arg_8h - 0x10) + -1;\n    }\n    *(arg_8h - 0x20) = *(arg_8h - 0x20) + 2;\n    *(arg_8h - 0x18) = *(arg_8h - 0x18) + -1;\n    *(arg_8h - 0x60) = *(*(arg_8h - 0x2d) * 2 + 0x461bcc) | 0x60;\n    if ((*(arg_8h - 0x61) != '\\0') && ((*(arg_8h + 0xd) & 1) != 0)) {\n        *(arg_8h - 0x60) = *(arg_8h - 0x60) | 0x100000;\n    }\n    *(arg_8h - 0x58) = *(arg_8h - 0x20);\n    *(arg_8h - 0x54) = *(arg_8h - 0x1c);\n    *(arg_8h - 0x50) = *(arg_8h - 0x18);\n    *(arg_8h - 0x4c) = *(arg_8h - 0x14);\n    if ((*(arg_8h + 0xc) & 0x20) != 0) {\n        fcn.0043045c();\n    }\n    fcn.0042a108(*(arg_8h - 0x60) | 0x500, arg_8h & 0xffffff00 | *(arg_8h - 0x21), arg_8h - 0x20);\n    *(arg_8h - 0x20) = *(arg_8h - 0x58);\n    *(arg_8h - 0x18) = *(arg_8h - 0x50);\n    uVar8 = (*(arg_8h - 0x4c) - *(arg_8h - 0x54)) - (*(arg_8h - 0x14) - *(arg_8h - 0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.USER32.DLL_OffsetRect(arg_8h - 0x20, 0, iVar5);\n    if (((*(arg_8h + 8) != '\\0') && (*(arg_8h - 0x21) != '\\0')) && (*(arg_8h - 0x59) != '\\0')) {\n        sub.USER32.DLL_OffsetRect(arg_8h - 0x20, 1, 0);\n    }\n    fcn.0042a108(*(arg_8h - 0x60), arg_8h & 0xffffff00 | *(arg_8h - 0x21), arg_8h - 0x20);\n    if ((*(*(arg_8h - 0x34) + 0x60) != 0) && (*(arg_8h + 8) == '\\0')) {\n        fcn.004291cc();\n        *(arg_8h - 0x20) = 10;\n        iVar5 = fcn.00430e48();\n        *(arg_8h - 0x18) = iVar5 + *(arg_8h - 0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.0042a108(2, arg_8h & 0xffffff00 | *(arg_8h - 0x21), arg_8h - 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.0042275c(0x42b459);\n    return;\n}\n",
        "token_count": 4079
    },
    "0042b470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b470(uint noname_0, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint var_61h;\n    uint var_59h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.0042bf6c();\n    iVar3 = fcn.0042b588();\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.0042d5a8(),  cVar1 != '\\0')) {\n            fcn.0042abd0(&stack0xfffffffc);\n        }\n        else {\n            fcn.0042a358(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))(in_EAX & 0xffffff00 | (arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(&var_20h & 0xffff0000 | arg_ch & 0xffff, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "0042be34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042be34(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00421c28();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.00421e24();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x42c0c8;\n        fcn.00421e24();\n        fcn.0040f208();\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0042d2e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d2e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = sub.USER32.DLL_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.0042d87c(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.00412c54();\n        uVar3 = sub.USER32.DLL_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "0042e2ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e2ec(uint32_t arg_8h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint16_t extraout_var;\n    uint16_t extraout_var_00;\n    uint16_t extraout_var_01;\n    uint16_t uVar3;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x4663e0 < 5) && ((**0x4663e0 != 4 || (**0x4663e8 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00421e24();\n    uVar2 = fcn.00421db4();\n    if (((arg_8h & 1) == 0) || ((uVar2 != 0 && ((uVar2 == 0 || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.0043095c();\n            fcn.00430190();\n            uVar3 = extraout_var_00;\n        }\n        else {\n            fcn.0043095c();\n            fcn.00430190();\n            uVar3 = extraout_var_01;\n        }\n    }\n    else {\n        fcn.0043095c();\n        fcn.00430190();\n        uVar3 = extraout_var;\n    }\n    (**(*in_EAX + 0x30))(arg_8h & 0xff00 | uVar3 << 0x10 | uVar2, arg_8h & 0xffff | uVar3 << 0x10);\n    return;\n}\n",
        "token_count": 393
    },
    "004301a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004301a4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    uStack92 = 0x43032d;\n    iStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack100 = 0x4301e3;\n        fcn.0042f4e8();\n        uStack104 = 0x430305;\n        iStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_40h = *(var_4h + 0x14);\n            var_3ch = 0;\n            var_38h = 0;\n            var_34h = 0;\n            if ((*(var_4h + 0x19) & 1) == 0) {\n                var_30h = 400;\n            }\n            else {\n                var_30h = 700;\n            }\n            var_2ch._0_1_ = (*(var_4h + 0x19) & 2) != 0;\n            var_2ch._1_1_ = (*(var_4h + 0x19) & 4) != 0;\n            var_2ch._2_1_ = (*(var_4h + 0x19) & 8) != 0;\n            var_2ch._3_1_ = *(var_4h + 0x1a);\n            puStack100 = &stack0xfffffffc;\n            fcn.004229b8();\n            iVar2 = fcn.0041275c();\n            if (iVar2 == 0) {\n                fcn.004229b8();\n                fcn.00412cd4();\n            }\n            else {\n                fcn.004229b8();\n                fcn.00412cd4();\n            }\n            var_26h = 0;\n            var_28h = 0;\n            var_27h = 0;\n            cVar1 = fcn.00430488();\n            if (cVar1 == '\\x01') {\n                var_25h = 2;\n            }\n            else if (cVar1 == '\\x02') {\n                var_25h = 1;\n            }\n            else {\n                var_25h = 0;\n            }\n            puStack112 = &fcn.004301a4::var_40h;\n            uVar3 = sub.GDI32.DLL_CreateFontIndirectA();\n            *(var_4h + 8) = uVar3;\n        }\n        *in_FS_OFFSET = puStack112;\n        uStack104 = 0x43030c;\n        iStack108 = 0x430304;\n        fcn.0042f4f4();\n        return;\n    }\n    *in_FS_OFFSET = iStack96;\n    puStack88 = 0x430334;\n    uStack92 = 0x43032c;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 913
    },
    "004310bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004310bc(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x43112c != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.00414c2c();\n                fcn.004223bc();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00431158();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.00431184();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.004311b4();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00438cf8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00438cf8(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x438d48;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = uVar2 | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.USER32.DLL_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 268
    },
    "00439fa0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439fa0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x208) + 0x1e) = 1;\n            *(*(in_EAX + 0x20c) + 0x1e) = 1;\n        }\n        fcn.004396d4();\n        fcn.004396d4();\n        if (*(in_EAX + 0x210) == '\\0') {\n            if (*(*(in_EAX + 0x208) + 0x1e) != '\\0') {\n                sub.KERNEL32.DLL_MulDiv(*(*(in_EAX + 0x208) + 0x10), param_2, param_1);\n                fcn.00439824();\n            }\n            if (*(*(in_EAX + 0x20c) + 0x1e) != '\\0') {\n                sub.KERNEL32.DLL_MulDiv(*(*(in_EAX + 0x20c) + 0x10), param_2, param_1);\n                fcn.00439824();\n            }\n        }\n    }\n    *(*(in_EAX + 0x208) + 0x1e) = 0;\n    *(*(in_EAX + 0x20c) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 351
    },
    "0043b4ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b4ec(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x2ec) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0043c55c();\n        }\n        fcn.00448af0();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) | 2;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0043cdec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cdec(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43ce94;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x220)) goto code_r0x0043ce7e;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 == 0) goto code_r0x0043ce57;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x0043ce36:\n        puStack24 = puVar1;\n        fcn.00424964();\n        fcn.00414b70();\n        fcn.004223bc();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.00438e44();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x0043ce36;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.00421e24();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x0043ce36;\n        }\n    }\ncode_r0x0043ce57:\n    puStack24 = puVar1;\n    *(in_EAX + 0x220) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x22e) != '\\0') {\n            fcn.0043d1a4();\n        }\n        fcn.00421e24();\n    }\ncode_r0x0043ce7e:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x43ce9b;\n    uStack28 = 0x43ce93;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 538
    },
    "0043d6c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043d6c0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x229) != '\\0') && ((*(*(arg_8h + -4) + 0x228) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x22f) != '\\x01')) {\n        uVar1 = fcn.0044f188(0);\n        uVar1 = sub.USER32.DLL_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x229) == '\\x03') {\n            sub.USER32.DLL_DeleteMenu(uVar1, 0xf130, 0);\n            sub.USER32.DLL_DeleteMenu(uVar1, 7, 0x400);\n            sub.USER32.DLL_DeleteMenu(uVar1, 5, 0x400);\n            sub.USER32.DLL_DeleteMenu(uVar1, 0xf030, 0);\n            sub.USER32.DLL_DeleteMenu(uVar1, 0xf020, 0);\n            sub.USER32.DLL_DeleteMenu(uVar1, 0xf000, 0);\n            sub.USER32.DLL_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x228) & 2) == 0) {\n                sub.USER32.DLL_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x228) & 4) == 0) {\n                sub.USER32.DLL_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0043df40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043df40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    iVar1 = *(param_2 + 8);\n    if (((*0x43dfd4 == (*(in_EAX + 0x1c) & *0x43dfd0)) && ((*(iVar1 + 0x18) & 1) == 0)) &&\n       ((*(iVar1 + 0x10) != *(in_EAX + 0x48) || (*(iVar1 + 0x14) != *(in_EAX + 0x4c))))) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    *(in_EAX + 0x22a) = uVar2;\n    uStack24 = 0x43dfc3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0044d788();\n    *in_FS_OFFSET = uStack28;\n    *(in_EAX + 0x22a) = 0;\n    return;\n}\n",
        "token_count": 310
    },
    "0043f26c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0043f26c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43f343;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.0044dc88();\n    if (iVar1 == 1) {\n        fcn.00448b44();\n        fcn.0042284c();\n        uVar2 = fcn.00422a14();\n        fcn.00422c0c(uVar2);\n        fcn.00448b54();\n        iVar1 = fcn.00422a14();\n        if (0 < iVar1) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00422d98();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00448c00();\n    }\n    fcn.0044daf4();\n    fcn.004480f4();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0043b4ec();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x43f34a;\n    uStack32 = 0x43f342;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 423
    },
    "00447f54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447f54(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00421c28();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.00421e24();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x44ab94;\n        fcn.00421e24();\n        fcn.0040f208();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "004480f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004480f4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.00447f34();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x84))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else {\n                fcn.00421e24();\n            }\n        }\n    }\n    fcn.00421e24();\n    return;\n}\n",
        "token_count": 294
    },
    "0044819c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044819c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.0044a308();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00449018();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.00448234();\n        (**(*in_EAX + 0x7c))();\n        fcn.00449d78(0);\n        fcn.00421e24();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.00421e24();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00448234": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00448234(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack16;\n    uint uStack12;\n    \n    if ((*(in_EAX + 0x62) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        if (*0x44834c == uVar1) {\n            *(in_EAX + 0x90) = 0;\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar3 = *(in_EAX + 0x48) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x48) & 1) != 0);\n                }\n                *(in_EAX + 0x88) = iVar3 + *(in_EAX + 0x40);\n            }\n            else if ((uVar1 & 1) == 0) {\n                *(in_EAX + 0x88) = *(in_EAX + 0x40);\n            }\n            else {\n                *(in_EAX + 0x88) = *(in_EAX + 0x48);\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar3 = *(in_EAX + 0x4c) >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((*(in_EAX + 0x4c) & 1) != 0);\n                }\n                *(in_EAX + 0x8c) = iVar3 + *(in_EAX + 0x44);\n            }\n            else if ((uVar1 & 2) == 0) {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x44);\n            }\n            else {\n                *(in_EAX + 0x8c) = *(in_EAX + 0x4c);\n            }\n            iVar3 = *(in_EAX + 0x30);\n            if (iVar3 != 0) {\n                if ((*(iVar3 + 0x1c) & 2) == 0) {\n                    cVar2 = fcn.0044f48c();\n                    if (cVar2 == '\\0') {\n                        *(in_EAX + 0x90) = *(*(in_EAX + 0x30) + 0x48);\n                        *(in_EAX + 0x94) = *(*(in_EAX + 0x30) + 0x4c);\n                    }\n                    else {\n                        (**(**(in_EAX + 0x30) + 0x44))();\n                        *(in_EAX + 0x90) = uStack16;\n                        *(in_EAX + 0x94) = uStack12;\n                    }\n                }\n                else if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n                    *(in_EAX + 0x90) = *(iVar3 + 0x1fa);\n                    *(in_EAX + 0x94) = *(iVar3 + 0x1fe);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "00448548": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448548(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 1;\n    }\n    *(in_EAX + 0x158) = param_2;\n    return;\n}\n",
        "token_count": 90
    },
    "0044855c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044855c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x150) = 0;\n    }\n    fcn.004227b0();\n    return;\n}\n",
        "token_count": 74
    },
    "004487ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004487ec(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    bool bVar4;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar1 = *0x448990;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar1 = *(in_EAX + 0x26);\n        }\n        if ((uVar1 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.KERNEL32.DLL_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar1 & 2) != 0) {\n            sub.KERNEL32.DLL_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar1 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar1 & 1) == 0) {\n            sub.KERNEL32.DLL_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.KERNEL32.DLL_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar4 = (uVar1 & 8) == 0;\n        if ((bVar4) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar4) {\n                sub.KERNEL32.DLL_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.KERNEL32.DLL_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        (**(*in_EAX + 0x84))(iStack32, in_stack_ffffffdc);\n        if (*0x448998 != (uVar1 & *0x448994)) {\n            iVar2 = sub.KERNEL32.DLL_MulDiv(in_EAX[0x24], param_2, iStack32);\n            in_EAX[0x24] = iVar2;\n        }\n        if (*0x448998 != (uVar1 & *0x44899c)) {\n            iVar2 = sub.KERNEL32.DLL_MulDiv(in_EAX[0x25], param_2, iStack32);\n            in_EAX[0x25] = iVar2;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar1 & 0x10) != 0)) {\n            uVar3 = fcn.00430414(param_2, iStack32);\n            sub.KERNEL32.DLL_MulDiv(uVar3);\n            fcn.00430430();\n        }\n    }\n    *(in_EAX + 0x26) = *0x448998;\n    return;\n}\n",
        "token_count": 815
    },
    "004489b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004489b8(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x448a4e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.00448bd0();\n        fcn.00422b58();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.00421db4();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x00448a1a;\n            }\n            bVar2 = true;\n            goto code_r0x00448a20;\n        }\n    }\ncode_r0x00448a1a:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x00448a20:\n    fcn.0040f690();\n    if (bVar2) {\n        fcn.00448c00();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x448a55;\n    uStack32 = 0x448a4d;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 470
    },
    "0044926c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044926c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint arg_8h;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    cVar1 = fcn.00421db4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x9b) != '\\x01')) {\n        fcn.00414c2c();\n        fcn.004223bc();\n    }\n    fcn.00449dac();\n    if ((*0x467120 == 0) || (*0x467120 == -1)) {\n        *0x467120 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.USER32.DLL_GetCursorPos(&uStack28);\n            fcn.00448724();\n            uStack28 = uStack20;\n            arg_8h = fcn.00402798(uStack24);\n            fcn.00449d78(arg_8h);\n        }\n        if (*0x467120 != -1) {\n            fcn.00446f30();\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0044a6ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a6ac(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x44a758 == (*0x44a754 & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x28] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00449dac();\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "0044b448": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b448(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint8_t in_DL;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint var_40h;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_5h;\n    \n    var_30h = *in_ECX;\n    uStack48 = in_ECX[1];\n    uStack44 = in_ECX[2];\n    uStack40 = in_ECX[3];\n    unique0x100001df = in_EAX;\n    if ((in_DL == 0) || (*(in_DL + 0x4620a4) != *(in_EAX + 0x61))) {\n        if ((in_EAX[0x24] != 0) && (in_EAX[0x25] != 0)) {\n            var_ch = in_EAX[0x10];\n            var_10h = in_EAX[0x11];\n            var_14h = in_EAX[0x12];\n            var_18h = in_EAX[0x13];\n            puStack84 = 0x44b4cc;\n            cVar2 = fcn.0044f48c();\n            if (cVar2 == '\\0') {\n                puStack84 = 0x44b500;\n                fcn.00405e40();\n            }\n            else {\n                puStack84 = 0x44b4de;\n                (**(*stack0xfffffff8[0xc] + 0x44))();\n                var_20h = var_38h;\n                var_1ch = var_34h;\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 4) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                    puStack84 = stack0xfffffff8[0x24];\n                    puStack88 = var_20h;\n                    puStack92 = stack0xfffffff8[0x22];\n                    var_ch = sub.KERNEL32.DLL_MulDiv();\n                    iVar3 = var_14h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 1) == 0) {\n                var_ch = var_20h - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            else {\n                var_14h = var_20h - (stack0xfffffff8[0x24] - stack0xfffffff8[0x22]);\n            }\n            if ((*(stack0xfffffff8 + 0x61) & 8) == 0) {\n                if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                    puStack84 = stack0xfffffff8[0x25];\n                    puStack88 = var_1ch;\n                    puStack92 = stack0xfffffff8[0x23];\n                    var_10h = sub.KERNEL32.DLL_MulDiv();\n                    iVar3 = var_18h >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((var_18h & 1) != 0);\n                    }\n                    var_10h = var_10h - iVar3;\n                }\n            }\n            else if ((*(stack0xfffffff8 + 0x61) & 2) == 0) {\n                var_10h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            else {\n                var_18h = var_1ch - (stack0xfffffff8[0x25] - stack0xfffffff8[0x23]);\n            }\n            *(stack0xfffffff8 + 0x62) = 1;\n            puStack88 = 0x44b641;\n            puStack92 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffa4;\n            puStack84 = &stack0xfffffffc;\n            (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n            *in_FS_OFFSET = var_18h;\n            *(stack0xfffffff8 + 0x62) = 0;\n            return;\n        }\n        if (in_DL == 0) {\n            return;\n        }\n    }\n    var_14h = *(*(arg_8h + -8) + 8) - **(arg_8h + -8);\n    if (((var_14h < 0) || (in_DL - 3 < 2)) || (in_DL == 6)) {\n        var_14h = in_EAX[0x12];\n    }\n    var_18h = *(*(arg_8h + -8) + 0xc) - *(*(arg_8h + -8) + 4);\n    if (((var_18h < 0) || (in_DL - 1 < 2)) || (in_DL == 6)) {\n        var_18h = in_EAX[0x13];\n    }\n    var_ch = **(arg_8h + -8);\n    var_10h = *(*(arg_8h + -8) + 4);\n    // switch table (7 cases) at 0x44b6de\n    switch(in_DL) {\n    case 1:\n        piVar1 = *(arg_8h + -8) + 4;\n        *piVar1 = *piVar1 + var_18h;\n        break;\n    case 2:\n        piVar1 = *(arg_8h + -8) + 0xc;\n        *piVar1 = *piVar1 - var_18h;\n        var_10h = *(*(arg_8h + -8) + 0xc);\n        break;\n    case 3:\n        **(arg_8h + -8) = **(arg_8h + -8) + var_14h;\n        break;\n    case 4:\n        piVar1 = *(arg_8h + -8) + 8;\n        *piVar1 = *piVar1 - var_14h;\n        var_ch = *(*(arg_8h + -8) + 8);\n        break;\n    case 6:\n        var_ch = in_EAX[0x10];\n        var_10h = in_EAX[0x11];\n        puStack84 = &fcn.0044b448::var_10h;\n        puStack88 = &fcn.0044b448::var_14h;\n        puStack92 = &fcn.0044b448::var_18h;\n        (**(**(arg_8h + -4) + 0xa8))(&fcn.0044b448::var_30h, *(arg_8h + -8));\n    }\n    *(stack0xfffffff8 + 0x62) = 1;\n    puStack88 = 0x44b7c9;\n    puStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0x84))(var_18h, var_14h);\n    *in_FS_OFFSET = var_18h;\n    *(stack0xfffffff8 + 0x62) = 0;\n    return;\n}\n",
        "token_count": 1827
    },
    "0044c16c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c16c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x44c28a;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.0042153c();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.0044c104();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x69) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[100];\n    }\n    else {\n        iVar2 = fcn.0044f188();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.USER32.DLL_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.USER32.DLL_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x46652c;\n    fcn.00421b78();\n    fcn.004229b8();\n    fcn.00412cd4();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x44c291;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 656
    },
    "0044d3b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d3b8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_6ch;\n    uint var_64h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_4ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x7e) != '\\0') && (*(param_2 + 4) == 0)) {\n        uStack128 = 0;\n        uStack132 = 0x44d408;\n        uVar2 = sub.USER32.DLL_GetDC();\n        uStack132 = 0x44d414;\n        (**(*in_EAX + 0x44))();\n        uStack136 = 0x44d422;\n        (**(*in_EAX + 0x44))();\n        uStack144 = 0x44d42c;\n        uStack140 = uVar2;\n        var_8h = sub.GDI32.DLL_CreateCompatibleBitmap();\n        uStack148 = 0;\n        uStack152 = 0x44d437;\n        uStack144 = uVar2;\n        sub.USER32.DLL_ReleaseDC();\n        uStack152 = 0;\n        uStack156 = 0x44d43e;\n        uStack160 = sub.GDI32.DLL_CreateCompatibleDC();\n        uStack156 = var_8h;\n        puStack164 = 0x44d44e;\n        var_4h = uStack160;\n        var_ch = sub.GDI32.DLL_SelectObject();\n        uStack168 = 0x44d50a;\n        uStack172 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff54;\n        puStack164 = &stack0xfffffffc;\n        uVar2 = fcn.0044f188(&fcn.0044d3b8::var_4ch);\n        uVar2 = sub.USER32.DLL_BeginPaint(uVar2);\n        fcn.00449d78(var_4h);\n        *(param_2 + 4) = var_4h;\n        fcn.0044d3b8();\n        *(param_2 + 4) = 0;\n        (**(*in_EAX + 0x44))(var_4h, 0, 0, 0xcc0020);\n        (**(*in_EAX + 0x44))(var_50h);\n        sub.GDI32.DLL_BitBlt(uVar2, 0, 0, var_64h);\n        uVar2 = fcn.0044f188(&fcn.0044d3b8::var_4ch);\n        sub.USER32.DLL_EndPaint();\n        *in_FS_OFFSET = uVar2;\n        sub.GDI32.DLL_SelectObject(var_4h, var_ch, 0x44d511);\n        sub.GDI32.DLL_DeleteDC(var_4h);\n        sub.GDI32.DLL_DeleteObject(var_8h);\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        uStack128 = 0x44d3e1;\n        iVar1 = fcn.0044c07c();\n        if (iVar1 == 0) {\n            uStack128 = 0x44d3ee;\n            (**(*in_EAX + -0x10))();\n            return;\n        }\n    }\n    uStack128 = 0x44d3fc;\n    fcn.0044ced8();\n    return;\n}\n",
        "token_count": 890
    },
    "0044d788": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d788(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x44d7d4 == (*0x44d7d0 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.0044a308();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 188
    },
    "0044d7d8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044d7d8(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.0044f498();\n    (**(*in_EAX + -0x10))();\n    fcn.0044bc0c();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.00421e24();\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0044e25c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044e25c(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    if ((*(in_EAX + 0x1a6) != '\\0') && (in_EAX = fcn.0044c07c(),  piVar2 = in_EAX,  -1 < in_EAX + -1)) {\n        do {\n            piVar1 = fcn.0044c040();\n            in_EAX = piVar1;\n            if (((*(piVar1 + 0x57) != '\\0') && (in_EAX = (**(*piVar1 + 0x50))(),  in_EAX != '\\0')) &&\n               ((((*(piVar1 + 0x52) & 1) != 0 && (in_EAX = fcn.00449d78(*(*(arg_8h + -4) + 8)),  in_EAX != NULL)) ||\n                ((in_EAX = fcn.00421db4(),  in_EAX != '\\0' && (in_EAX = fcn.0044e25c(arg_8h),  in_EAX != '\\0')))))) {\n                var_5h = 1;\n                break;\n            }\n            piVar2 = piVar2 + -1;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 360
    },
    "0044ff9c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ff9c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    if ((*(in_EAX + 0x165) == '\\0') && (in_EAX[0x5b] == 0)) {\n        uStack80 = 0x450214;\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    uStack80 = 0x44ffcf;\n    var_4h = in_EAX;\n    uStack80 = fcn.0044f188();\n    puStack84 = 0x44ffd5;\n    var_ch = sub.USER32.DLL_GetWindowDC();\n    uStack88 = 0x450202;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.0044f188(&fcn.0044ff9c::var_1ch);\n    sub.USER32.DLL_GetClientRect(uVar3);\n    uVar3 = fcn.0044f188(&fcn.0044ff9c::var_2ch);\n    sub.USER32.DLL_GetWindowRect(uVar3);\n    uVar3 = fcn.0044f188(&fcn.0044ff9c::var_2ch, 2);\n    sub.USER32.DLL_MapWindowPoints(0, uVar3);\n    sub.USER32.DLL_OffsetRect(&fcn.0044ff9c::var_1ch, -var_2ch, -var_28h);\n    sub.GDI32.DLL_ExcludeClipRect(var_ch, var_1ch, var_18h, var_14h, var_10h);\n    iVar2 = var_28h;\n    iVar1 = var_2ch;\n    sub.USER32.DLL_InflateRect(&fcn.0044ff9c::var_1ch, var_4h[0x5b], var_4h[0x5b]);\n    var_2ch = var_1ch;\n    var_28h = var_18h;\n    var_24h = var_14h;\n    var_20h = var_10h;\n    if (*(var_4h + 0x165) != '\\0') {\n        iVar7 = 0;\n        if (*(var_4h + 0x163) != '\\0') {\n            iVar7 = var_4h[0x5a];\n        }\n        if (*(var_4h + 0x59) != '\\0') {\n            iVar7 = iVar7 + var_4h[0x5a];\n        }\n        uVar3 = fcn.0044f188(0xfffffff0);\n        uVar4 = sub.USER32.DLL_GetWindowLongA(uVar3);\n        if ((*(var_4h + 0x162) & 1) != 0) {\n            var_2ch = var_2ch - iVar7;\n        }\n        if ((*(var_4h + 0x162) & 2) != 0) {\n            var_28h = var_28h - iVar7;\n        }\n        if ((*(var_4h + 0x162) & 4) != 0) {\n            var_24h = var_24h + iVar7;\n        }\n        if ((uVar4 & 0x200000) != 0) {\n            iVar5 = (***0x466430)(0x14);\n            var_24h = var_24h + iVar5;\n        }\n        if ((*(var_4h + 0x162) & 8) != 0) {\n            var_20h = var_20h + iVar7;\n        }\n        if ((uVar4 & 0x100000) != 0) {\n            iVar7 = (***0x466430)(0x15);\n            var_20h = var_20h + iVar7;\n        }\n        sub.USER32.DLL_DrawEdge\n                  (var_ch, &fcn.0044ff9c::var_2ch, \n                   *(*(var_4h + 0x163) * 4 + 0x462168) | *(*(var_4h + 0x59) * 4 + 0x462178), \n                   *(var_4h + 0x162) | *(*(var_4h + 0x165) * 4 + 0x462188) | *(*(var_4h + 0x1a5) * 4 + 0x462198) |\n                   0x2000);\n    }\n    sub.GDI32.DLL_IntersectClipRect(var_ch, var_2ch, var_28h, var_24h, var_20h);\n    sub.USER32.DLL_OffsetRect(&fcn.0044ff9c::var_2ch, -iVar1, -iVar2);\n    uVar6 = fcn.00430990();\n    uVar3 = var_ch;\n    sub.USER32.DLL_FillRect(var_ch, &fcn.0044ff9c::var_2ch, uVar6);\n    *in_FS_OFFSET = uVar3;\n    uVar3 = fcn.0044f188(var_ch, 0x450209);\n    sub.USER32.DLL_ReleaseDC(uVar3);\n    return;\n}\n",
        "token_count": 1379
    },
    "00454b24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454b24(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (arg_8h != 0) {\n        if (*(arg_8h + 0x18) != 0) {\n            *(arg_8h + 0x18) = 0;\n            sub.KERNEL32.DLL_DeleteCriticalSection(arg_8h);\n        }\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00454b50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454b50(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != 0) {\n        fcn.00454c50(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 129
    },
    "00454b94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454b94(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != 0) {\n        fcn.00454c50(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 129
    },
    "00454c50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454c50(uint *arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h != NULL) && (*arg_8h = 0x462228,  (arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00454c70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454c70(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        *arg_8h = 0x46223c;\n        fcn.00454c50(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 148
    },
    "004550c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004550c8(int32_t arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(arg_ch + 4) & 1) == 0) {\n        fcn.00459cf4(\"IS_STRUC(base->tpMask)\", 0x46261a, 0x13b);\n    }\n    if ((*(arg_8h + 4) & 1) == 0) {\n        fcn.00459cf4(\"IS_STRUC(derv->tpMask)\", 0x46263c, 0x13c);\n    }\n    if ((*(arg_8h + 0xc) & 4) == 0) {\n        fcn.00459cf4(\"derv->tpClass.tpcFlags & CF_HAS_BASES\", 0x46266d, 0x13e);\n    }\n    piVar4 = *(arg_8h + 0x12) + arg_8h;\n    do {\n        iVar2 = *piVar4;\n        if (iVar2 == 0) {\n            piVar4 = *(arg_8h + 0x10) + arg_8h;\n            while( true ) {\n                iVar2 = *piVar4;\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                if ((arg_14h == 0) || ((piVar4[2] & 3U) != 3)) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = 1;\n                }\n                iVar1 = fcn.00455600(arg_ch, iVar2);\n                if ((iVar1 != 0) && (iVar3 != 0)) break;\n                if (((*(iVar2 + 0xc) & 4) != 0) && (iVar2 = fcn.004550c8(iVar2, arg_ch, arg_10h, iVar3),  iVar2 != 0)) {\n                    return 1;\n                }\n                piVar4 = piVar4 + 3;\n            }\n            return 1;\n        }\n        if ((*(piVar4 + 2) & 8) == 0) {\n            if ((arg_14h == 0) || ((piVar4[2] & 3U) != 3)) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = 1;\n            }\n            iVar1 = fcn.00455600(arg_ch, iVar2);\n            if ((iVar1 != 0) && (iVar3 != 0)) {\n                return 1;\n            }\n            if (((*(iVar2 + 0xc) & 4) != 0) && (iVar2 = fcn.004550c8(iVar2, arg_ch, arg_10h, iVar3),  iVar2 != 0)) {\n                return 1;\n            }\n        }\n        piVar4 = piVar4 + 3;\n    } while( true );\n}\n",
        "token_count": 708
    },
    "00455272": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl\nfcn.00455272(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *arg_8h_00;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = NULL;\n    var_10h = 0;\n    if ((arg_ch == 0) || ((*(arg_ch + 4) & 1) == 0)) {\n        fcn.00459cf4(\"topTypPtr != 0 && IS_STRUC(topTypPtr->tpMask)\", 0x4626e1, 0x34f);\n    }\n    if ((arg_14h == 0) || ((*(arg_14h + 4) & 1) == 0)) {\n        fcn.00459cf4(\"tgtTypPtr != 0 && IS_STRUC(tgtTypPtr->tpMask)\", 0x46271a, 0x350);\n    }\n    if ((arg_1ch != 0) && ((*(arg_1ch + 4) & 1) == 0)) {\n        fcn.00459cf4(\"srcTypPtr == 0 || IS_STRUC(srcTypPtr->tpMask)\", 0x462753, 0x351);\n    }\n    if (arg_1ch != 0) {\n        iVar2 = fcn.00455600(arg_1ch, arg_14h);\n        if (iVar2 != 0) {\n            fcn.00459cf4(\"__isSameTypeID(srcTypPtr, tgtTypPtr) == 0\", 0x462788, 0x355);\n        }\n        iVar2 = fcn.00455600(arg_1ch, arg_ch);\n        if (iVar2 != 0) {\n            return NULL;\n        }\n    }\n    if ((arg_14h == 0) || (iVar2 = fcn.00455600(arg_ch, arg_14h),  iVar2 != 0)) {\n        fcn.00459cf4(\"tgtTypPtr != 0 && __isSameTypeID(topTypPtr, tgtTypPtr) == 0\", 0x4627cf, 0x35b);\n    }\n    if ((*(arg_ch + 0xc) & 4) == 0) {\n        return NULL;\n    }\n    bVar1 = false;\n    piVar4 = *(arg_ch + 0x12) + arg_ch;\n    do {\n        while (iVar2 = *piVar4,  iVar2 == 0) {\n            if (bVar1) {\n                *arg_20h = var_8h;\n                if (var_10h == 1) {\n                    return var_ch;\n                }\n                return NULL;\n            }\n            bVar1 = true;\n            piVar4 = *(arg_ch + 0x10) + arg_ch;\n        }\n        if ((*(piVar4 + 2) & 8) == 0) {\n            if ((arg_24h == 0) || ((piVar4[2] & 3U) != 3)) {\n                var_14h = 0;\n            }\n            else {\n                var_14h = 1;\n            }\n            arg_8h_00 = arg_8h + piVar4[1];\n            var_18h = arg_28h;\n            if ((*(piVar4 + 2) & 4) != 0) {\n                arg_8h_00 = *arg_8h_00;\n                var_18h = iVar2;\n            }\n            iVar3 = fcn.00455600(arg_14h, iVar2);\n            if (iVar3 == 0) {\n                if (((*(iVar2 + 0xc) & 4) != 0) &&\n                   (arg_8h_00 = fcn.00455272(arg_8h_00, iVar2, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, var_14h, \n                                             var_18h),  arg_8h_00 != NULL)) {\n                    var_14h = *arg_20h;\n                    goto code_r0x0045547d;\n                }\n            }\n            else if (arg_10h == NULL) {\n                if (arg_18h != 0) {\n                    if (arg_1ch == 0) {\n                        fcn.00459cf4(\"srcTypPtr\", 0x4627e4, 0x3d0);\n                    }\n                    iVar2 = fcn.00455272(arg_8h_00, iVar2, arg_18h, arg_1ch, 0, 0, arg_20h, 0, 0);\n                    if (iVar2 == 0) goto code_r0x0045549c;\n                }\ncode_r0x0045547d:\n                if ((var_10h == 0) || (arg_8h_00 != var_ch)) {\n                    var_10h = var_10h + 1;\n                    var_8h = var_14h;\n                    var_ch = arg_8h_00;\n                }\n                else {\n                    var_8h = var_8h | var_14h;\n                }\n            }\n            else if (arg_8h_00 == arg_10h) {\n                return arg_8h_00;\n            }\n        }\ncode_r0x0045549c:\n        piVar4 = piVar4 + 3;\n    } while( true );\n}\n",
        "token_count": 1338
    },
    "004556dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004556dc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    while( true ) {\n        while( true ) {\n            if (arg_ch == arg_8h) {\n                return 1;\n            }\n            uVar1 = *(arg_8h + 4);\n            uVar2 = *(arg_ch + 4);\n            if ((uVar2 & uVar1 & 0x10) == 0) break;\n            uVar6 = uVar1 & 0x300;\n            uVar3 = uVar2 & 0x300;\n            if (uVar6 != uVar3) {\n                if ((arg_10h != 0) || (uVar6 == uVar3)) {\n                    return 0;\n                }\n                if ((~(uVar3 >> 8) & uVar6 >> 8) != 0) {\n                    return 0;\n                }\n            }\n            arg_10h = 1;\n            arg_8h = *(arg_8h + 8);\n            arg_ch = *(arg_ch + 8);\n        }\n        if ((uVar2 & uVar1 & 0x400) == 0) break;\n        if ((*(arg_8h + 0xc) != *(arg_ch + 0xc)) && ((arg_10h != 0 || ((*(arg_8h + 0xc) | *(arg_ch + 0xc)) != 0)))) {\n            return 0;\n        }\n        arg_10h = 1;\n        arg_8h = *(arg_8h + 8);\n        arg_ch = *(arg_ch + 8);\n    }\n    iVar4 = fcn.00455600(arg_8h, arg_ch);\n    if (iVar4 != 0) {\n        return 1;\n    }\n    if ((((uVar1 & 2) != 0) && ((uVar2 & 1) != 0)) && ((*(arg_8h + 0xc) & 4) != 0)) {\n        uVar5 = fcn.004550c8(arg_8h, arg_ch, arg_14h, 1);\n        return uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 559
    },
    "004557ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004557ec(uint *arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h != NULL) && (*arg_8h = 0x4628d4,  (arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00455b58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455b58(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if (arg_8h != 0) {\n        fcn.004557ec(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00457f84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00457f84(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_ch = *0x4580f0;\n    if (((-0x1345 < arg_8h) && (_var_ch = *0x463b9e,  arg_8h < 0x1345)) && (_var_ch = *0x4580fc,  arg_8h != 0)) {\n        uVar1 = arg_8h;\n        if (arg_8h < 0) {\n            uVar1 = -arg_8h;\n        }\n        uVar2 = uVar1 & 7;\n        _var_ch = CONCAT28(*(uVar2 * 10 + 0x463af0), CONCAT44(*(uVar2 * 10 + 0x463aec), *(uVar2 * 10 + 0x463ae8)));\n        if ((uVar1 >> 3 & 1U) != 0) {\n            _var_ch = _var_ch * *0x463b38;\n        }\n        if (uVar1 >> 4 != 0) {\n            if ((uVar1 >> 4 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b44;\n            }\n            if ((uVar1 >> 5 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b4e;\n            }\n            if ((uVar1 >> 6 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b58;\n            }\n            if ((uVar1 >> 7 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b62;\n            }\n            if ((uVar1 >> 8 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b6c;\n            }\n            if ((uVar1 >> 9 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b76;\n            }\n            if ((uVar1 >> 10 & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b80;\n            }\n            if ((uVar1 >> 0xb & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b8a;\n            }\n            if ((uVar1 >> 0xc & 1U) != 0) {\n                _var_ch = _var_ch * *0x463b94;\n            }\n        }\n        if (arg_8h < 0) {\n            _var_ch = *0x458108 / _var_ch;\n        }\n    }\n    return _var_ch;\n}\n",
        "token_count": 670
    },
    "0045af48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.0045af48(void)\n\n{\n    uchar auStack68 [40];\n    uint8_t uStack28;\n    ushort uStack24;\n    \n    sub.KERNEL32.DLL_GetStartupInfoA(auStack68);\n    if ((uStack28 & 1) == 0) {\n        uStack24 = 10;\n    }\n    return uStack24;\n}\n",
        "token_count": 83
    },
    "0045b77d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045b77d(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00454720(arg_8h);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    if (arg_8h < 0x81) {\n        iVar1 = fcn.0040143c();\n        if ((*(iVar1 + 0x14) & 1) == 0) goto code_r0x0045b7aa;\n    }\n    fcn.00459fdc();\ncode_r0x0045b7aa:\n    iVar1 = fcn.0040143c();\n    *(iVar1 + 0x14) = *(iVar1 + 0x14) | 1;\n    iVar1 = fcn.0040143c();\n    return *(iVar1 + 0x24);\n}\n",
        "token_count": 200
    },
    "0045b7f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b7f4(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = fcn.004556dc(arg_8h, arg_10h, 0, arg_ch);\n    if (iVar3 != 0) {\n        return 1;\n    }\n    uVar1 = *(arg_8h + 4);\n    uVar2 = *(arg_10h + 4);\n    if (((arg_14h & 2) != 0) && ((uVar2 & 0x20) != 0)) {\n        if ((uVar1 & 0x20) == 0) {\n            fcn.00459cf4(\"srcmask & TM_IS_REF\", 0x464bc9, 0x196);\n        }\n        iVar3 = fcn.004556dc(*(arg_8h + 8), *(arg_10h + 8), 1, arg_ch);\n        if (iVar3 != 0) {\n            return 1;\n        }\n    }\n    if ((uVar2 & 0x20) != 0) {\n        iVar3 = fcn.004556dc(arg_8h, *(arg_10h + 8), 1, arg_ch);\n        if (iVar3 != 0) {\n            return 1;\n        }\n        uVar2 = *(*(arg_10h + 8) + 4);\n        if ((uVar2 & 0x10) == 0) {\n            return 0;\n        }\n        iVar3 = fcn.004556dc(arg_8h, *(arg_10h + 8), 0, arg_ch);\n        if (iVar3 != 0) {\n            return 1;\n        }\n    }\n    if ((uVar2 & 0x10) != 0) {\n        if ((arg_14h & 1) != 0) {\n            return 1;\n        }\n        if ((uVar1 & 0x10) == 0) {\n            return 0;\n        }\n        if ((((uVar2 & 0x40) != 0) && (((uVar2 & 0x100) != 0 || ((uVar1 & 0x100) == 0)))) &&\n           (((uVar2 & 0x200) != 0 || ((uVar1 & 0x200) == 0)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 586
    },
    "0045b903": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b903(uint arg_8h, uint arg_ch, code *arg_10h, uint32_t arg_14h)\n\n{\n    if (((arg_14h & 0x100) == 0) && ((arg_14h & 0x20) != 0)) {\n        fcn.00459cf4(\"(ctorMask & 0x0100) != 0 || (ctorMask & 0x0020) == 0\", 0x464c05, 0x204);\n    }\n    if ((arg_14h & 0x80) != 0) {\n        fcn.00459cf4(\"(ctorMask & 0x0080) == 0\", 0x464c25, 0x206);\n    }\n    if ((arg_14h & 0x1000) == 0) {\n        arg_14h = arg_14h & 7;\n        if (arg_14h == 1) {\n            (*arg_10h)(arg_8h, arg_ch);\n        }\n        else if (arg_14h == 2) {\n            (*arg_10h)(arg_ch, arg_8h);\n        }\n        else if (arg_14h == 3) {\n            (*arg_10h)();\n        }\n        else if (arg_14h == 5) {\n            (*arg_10h)(arg_8h, arg_ch);\n        }\n        else {\n            fcn.00459cf4(0x464c48, 0x464c51, 0x25d);\n        }\n    }\n    else {\n        arg_14h = arg_14h & 7;\n        if (arg_14h == 1) {\n            (*arg_10h)(arg_8h, 0, arg_ch);\n        }\n        else if (arg_14h == 2) {\n            (*arg_10h)(arg_8h, arg_ch, 0);\n        }\n        else if (arg_14h == 3) {\n            (*arg_10h)();\n        }\n        else if (arg_14h == 5) {\n            (*arg_10h)(arg_8h, 0, arg_ch);\n        }\n        else {\n            fcn.00459cf4(0x464c32, 0x464c3b, 0x231);\n        }\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "0045bb94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0045bb94(int32_t *arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, uint32_t arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint noname_10, uint arg_34h, uint arg_38h)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    ushort in_FS;\n    int32_t iStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint var_40h;\n    int32_t var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00455058();\n    iVar3 = fcn.0040143c();\n    *(iVar3 + 0x14) = *(iVar3 + 0x14) | 2;\n    iVar3 = fcn.0040143c();\n    if (arg_8h == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = *(arg_8h + 6) + arg_8h;\n    }\n    *(iVar3 + 0x20) = iVar4;\n    iVar3 = fcn.0040143c();\n    *(iVar3 + 0x1c) = arg_20h;\n    iVar3 = fcn.0040143c();\n    *(iVar3 + 0x18) = arg_24h;\n    if ((arg_8h == NULL) && ((arg_2ch == 0 || ((arg_1ch & 4) == 0)))) {\n        uStack96 = 0x45bc0f;\n        fcn.00459cf4(\"typeID || (reThrow && (flags & XDF_ISDELPHIEXCEPTION))\", 0x464cfa, 0x372);\n    }\n    if ((((arg_8h != NULL) && ((*(arg_8h + 1) & 2) != 0)) && ((*(arg_8h + 3) & 0x80) != 0)) || ((arg_1ch & 4) != 0)) {\n        var_28h = arg_8h;\n        if ((arg_8h != NULL) && ((*(arg_8h + 1) & 0x30) != 0)) {\n            var_28h = arg_8h[2];\n        }\n        arg_28h = arg_28h + -4;\n        uStack96 = CONCAT13(arg_38h._2_1_, CONCAT12(arg_38h._1_1_, CONCAT11(arg_38h, arg_34h._3_1_)));\n        uStack100 = arg_38h;\n        uStack104 = CONCAT13(arg_38h, arg_34h >> 8);\n        uStack108 = arg_ch;\n        iStack112 = arg_28h;\n        sub.KERNEL32.DLL_RaiseException(0xeedfade, 0xc0000025, 8, &stack0xffffff90);\n    }\n    var_28h = arg_8h;\n    uVar2 = *(arg_8h + 1);\n    iVar3 = *arg_8h;\n    if ((uVar2 & 2) == 0) {\n        var_2ch = 0;\n    }\n    else {\n        var_2ch = arg_8h[3];\n    }\n    if ((uVar2 & 0x30) != 0) {\n        var_28h = arg_8h[2];\n    }\n    var_30h = fcn.0045b77d(iVar3 + 0x52);\n    *var_30h = 0;\n    var_30h[1] = arg_8h;\n    var_30h[3] = arg_1ch;\n    var_30h[4] = iVar3;\n    *(var_30h + 6) = uVar2;\n    *(var_30h + 0x1a) = var_2ch;\n    var_30h[5] = var_28h;\n    var_30h[2] = arg_10h;\n    var_30h[10] = 0;\n    var_30h[0xb] = 0;\n    var_30h[7] = fcn.0045b7c7;\n    var_30h[0xd] = arg_20h;\n    var_30h[0xe] = arg_24h;\n    var_30h[8] = arg_14h;\n    var_30h[9] = arg_18h;\n    *(var_30h + 0x45) = 0;\n    *(var_30h + 0x11) = 1;\n    fcn.00454ccc(var_30h + 0x52, arg_ch, iVar3);\n    if ((**0x46aa48 == 1) || (**0x46aa48 == 2)) {\n        arg_8h_00 = fcn.004555c8(arg_8h);\n        fcn.0045ba11(arg_8h_00);\n        fcn.0045ba29(1, 0xb);\n    }\n    if ((var_2ch & 1) != 0) {\n        if (arg_14h == 0) {\n            fcn.00459cf4(\"cctrAddr\", 0x464d0a, 0x444);\n        }\n        var_34h = *0x46aa44;\n        var_14h._0_2_ = 8;\n        fcn.0045b903(var_30h + 0x52, arg_ch, arg_14h, arg_18h);\n        var_14h._0_2_ = 0;\n        *0x46aa44 = var_34h;\n    }\n    iVar3 = fcn.0040143c();\n    var_40h = *(iVar3 + 0x20);\n    var_3ch = arg_28h;\n    var_38h = var_30h;\n    sub.KERNEL32.DLL_RaiseException(0xeefface, 1, 3, &fcn.0045bb94::var_40h);\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_24h;\n    return;\n}\n",
        "token_count": 1517
    },
    "0045c8a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0045c8a0(uint32_t *arg_8h, uint *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch)\n\n{\n    uint *puVar1;\n    int32_t **ppiVar2;\n    char *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *arg_8h_00;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    ushort in_FS;\n    uint var_160h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar9 = &stack0xfffffffc;\n    fcn.00455058();\n    uVar8 = arg_8h[7];\n    ppiVar2 = arg_ch[2];\n    if (*arg_8h == 0xeedfae6) {\n        uVar4 = 0;\n        puVar1 = segment(in_FS, 0);\n        *puVar1 = var_2ch;\n    }\n    else {\n        fcn.00458198();\n        if ((*(arg_8h + 1) & 6) == 0) {\n            uVar8 = *(arg_ch + 4);\n            while (uVar8 != 0) {\n                *(puVar9 + -0x38) = *(*(puVar9 + -0x34) + uVar8);\n                *(puVar9 + -0x44) = *(*(puVar9 + -0x34) + uVar8 + 2);\n                iVar5 = uVar8 + 4;\n    // switch table (6 cases) at 0x45c9b7\n                switch(*(puVar9 + -0x44)) {\n                case 0:\n                case 4:\n                case 5:\n                    break;\n                case 1:\n                    if (*arg_8h != 0xeefface) {\n                        *(puVar9 + -0x5c) = arg_8h;\n                        *(puVar9 + -0x58) = *(puVar9 + 0x10);\n                        *(*(puVar9 + 0xc) + 0x14) = *arg_8h;\n                        *(*(puVar9 + 0xc) + 0x18) = puVar9 + -0x5c;\n                        *0x46aa50 = *(*(puVar9 + -0x34) + iVar5);\n                        iVar6 = fcn.00455f57();\ncode_r0x0045ccd2:\n                        if (iVar6 < 0) {\n                            if ((*(arg_8h + 1) & 1) != 0) {\n                                *(*(puVar9 + 0xc) + 0x10) = *(puVar9 + -0x38);\n                            }\n                            puVar1 = segment(in_FS, 0);\n                            *puVar1 = *(puVar9 + -0x2c);\n                            return 0;\n                        }\n                        if (iVar6 != 0) {\n                            *(*(puVar9 + 0xc) + 0x18) = 0;\n                            iVar5 = iVar5 + 4;\n                            uVar8 = *(puVar9 + -0x38);\n                            *(puVar9 + -0x54) = uVar8;\n                            *(puVar9 + -0x50) = *(*(puVar9 + -0x34) + iVar5);\ncode_r0x0045cb3e:\n                            fcn.0045bf31(*(puVar9 + 0xc), arg_8h);\n                            fcn.0045c5bd(*(puVar9 + 0xc), uVar8);\n                            *(*(puVar9 + 0xc) + 0x10) = *(puVar9 + -0x54);\n                            if (*(puVar9 + -0x44) == 3) {\n                                if (*arg_8h == 0xeedfade) {\n                                    fcn.0045c1b9(*(puVar9 + -0x48), *(puVar9 + 0xc), arg_8h, *(puVar9 + -0x4c), \n                                                 *(puVar9 + -0x3c), iVar5);\n                                }\n                                else {\n                                    fcn.0045c2db(*(puVar9 + -0x48), *(puVar9 + 0xc), *(puVar9 + -0x30), \n                                                 *(puVar9 + -0x4c), *(puVar9 + -0x3c));\n                                }\n                            }\n                            iVar5 = fcn.0040143c();\n                            *(iVar5 + 0x14) = *(iVar5 + 0x14) & 0xfffffffd;\n                            if ((**0x46aa48 == 2) && (*(puVar9 + -0x44) == 3)) {\n                                if (*arg_8h == 0xeedfade) {\n                                    pcVar3 = *(*arg_8h[6] + -0x2c);\n                                    fcn.00454fb0(puVar9 + -0x160, pcVar3 + 1, *pcVar3);\n                                    arg_8h_00 = puVar9 + -0x160;\n                                    puVar9[*pcVar3 + -0x160] = 0;\n                                }\n                                else {\n                                    arg_8h_00 = fcn.004555c8(*(*(puVar9 + -0x30) + 4));\n                                }\n                                fcn.0045ba11(arg_8h_00);\n                                fcn.0045ba29(3, 5);\n                            }\n                            fcn.0045b2eb();\n                        }\n                    }\n                    break;\n                case 2:\n                    if (*arg_8h != 0xeefface) {\n                        *(*(puVar9 + 0xc) + 0x14) = *arg_8h;\n                        iVar6 = *(*(puVar9 + -0x34) + iVar5);\n                        goto code_r0x0045ccd2;\n                    }\n                    break;\n                case 3:\n                    if (((*(arg_8h + 3) & 0x80) == 0) || ((puVar9[0x2c] & 2) == 0)) {\n                        if (*arg_8h == 0xeedfade) {\n                            if ((puVar9[0x2c] & 1) != 0) goto code_r0x0045ca27;\n                        }\n                        else if (*arg_8h == 0xeefface) {\ncode_r0x0045ca27:\n                            *(puVar9 + -0x4c) = *(*(puVar9 + -0x34) + iVar5);\n                            iVar5 = uVar8 + 8;\n                            if (*arg_8h == 0xeedfade) {\n                                uVar4 = fcn.0045c757(*(puVar9 + -0x4c), arg_8h);\n                                *(puVar9 + -0x48) = uVar4;\n                            }\n                            else {\n                                uVar4 = fcn.0045c85b(*(puVar9 + -0x4c), *(puVar9 + -0x30));\n                                *(puVar9 + -0x48) = uVar4;\n                            }\n                            if (*(puVar9 + -0x48) != 0) {\n                                if (((**0x46aa48 == 1) || (**0x46aa48 == 2)) &&\n                                   ((*arg_8h < 0xeedface || (0xeefface < *arg_8h)))) {\n                                    fcn.0045ba29(2, 3);\n                                }\n                                if (*arg_8h != 0xeedfade) {\n                                    iVar6 = fcn.0040143c();\n                                    **(puVar9 + -0x30) = *(iVar6 + 0x10);\n                                    iVar6 = fcn.0040143c();\n                                    *(iVar6 + 0x10) = *(puVar9 + -0x30);\n                                    *(*(puVar9 + -0x30) + 0x28) = *(puVar9 + 0xc);\n                                    *(*(puVar9 + -0x30) + 0x2c) = *(puVar9 + -0x48);\n                                    *(*(puVar9 + -0x30) + 0x30) = iVar5;\n                                }\n                                *(puVar9 + -0x54) = iVar5;\n                                *(puVar9 + -0x50) = **(puVar9 + -0x48);\n                                goto code_r0x0045cb3e;\n                            }\n                            if ((*(arg_8h + 3) & 0x80) != 0) {\n                                iVar5 = fcn.0040143c();\n                                *(iVar5 + 0x10) = **(puVar9 + -0x30);\n                                *(puVar9 + -8) = *(*(puVar9 + -0x30) + 0x52);\n                                if (*(puVar9 + -8) != 0) {\n                                    *(puVar9 + -4) = **(puVar9 + -8);\n                                    *(puVar9 + -0x1c) = 0x14;\n                                    (**(**(puVar9 + -8) + -4))();\n                                    *(puVar9 + -0x1c) = 8;\n                                }\n                                (**(*(puVar9 + -0x30) + 0x1c))(*(puVar9 + -0x30));\n                            }\n                        }\n                    }\n                    else {\n                        puVar1 = segment(in_FS, 0);\n                        *(puVar9 + -0x60) = *puVar1;\n                        uVar4 = fcn.0045b38b(arg_8h, *(puVar9 + 0x18), *(puVar9 + -0x60), *(puVar9 + 0x10));\n                        *(puVar9 + -0x30) = uVar4;\n                        if (*(puVar9 + -0x30) != 0) goto code_r0x0045ca27;\n                    }\n                    break;\n                default:\n                    fcn.00459cf4(\"!\\\"bogus context in _ExceptionHandler()\\\"\", 0x464fb4, 0xbff);\n                }\n                uVar8 = *(puVar9 + -0x38);\n            }\n            uVar4 = 1;\n            puVar1 = segment(in_FS, 0);\n            *puVar1 = *(puVar9 + -0x2c);\n        }\n        else {\n            fcn.0045c5bd(arg_ch, 0);\n            if ((*arg_8h == 0xeefface) && (piVar7 = *ppiVar2,  piVar7 != NULL)) {\n                for (; *piVar7 != 0; piVar7 = piVar7 + 1) {\n                    iVar5 = fcn.0045b7f4(*(uVar8 + 4), *(uVar8 + 8), *piVar7, *(uVar8 + 0xc));\n                    if (iVar5 != 0) goto code_r0x0045c966;\n                }\n                puVar1 = segment(in_FS, 0);\n                uVar4 = *puVar1;\n                puVar1 = segment(in_FS, 0);\n                *puVar1 = *arg_ch;\n                fcn.00455cc0();\n                puVar1 = segment(in_FS, 0);\n                *puVar1 = uVar4;\n            }\ncode_r0x0045c966:\n            uVar4 = 1;\n            puVar1 = segment(in_FS, 0);\n            *puVar1 = var_2ch;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 2746
    },
    "0045ce9b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0045ce9b(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t *arg_14h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((*(arg_ch + 0xc) & 2) == 0) {\n        fcn.00459cf4(0x465055, 0x46507d, 0xcb2);\n    }\n    if (arg_18h == 0) {\n        uVar2 = *(arg_ch + 0x24);\n    }\n    else {\n        uVar2 = *(arg_ch + 0x20);\n    }\n    if ((arg_14h == 0) || (uVar2 <= arg_14h)) {\n        if ((arg_14h == 0) && ((arg_10h & 2) != 0)) {\n            if (*(arg_ch + 0x10) != 0) {\n                piVar3 = *(arg_ch + 0x10) + arg_ch;\n                if (piVar3 == NULL) {\n                    fcn.00459cf4(0x465084, 0x465087, 0xccf);\n                }\n                iVar1 = *piVar3;\n                if ((*(iVar1 + 0xc) & 2) != 0) {\n                    if (piVar3[1] != 0) {\n                        fcn.00459cf4(\"bl->blOffs == 0\", 0x46509e, 0xcd3);\n                    }\n                    fcn.0045cd59(arg_8h, iVar1, arg_10h, 0, arg_20h);\n                }\n            }\n        }\n        else {\n            fcn.0045cd59(arg_8h, arg_ch, arg_10h, arg_18h, arg_20h);\n        }\n    }\n    else {\n        if (uVar2 <= arg_14h) {\n            fcn.00459cf4(\"dtorCnt < varCount\", 0x4650b8, 0xcec);\n        }\n        piVar3 = *(arg_ch + 0x12) + arg_ch;\n        var_10h = piVar3;\n        if (arg_18h != 0) {\n            for (; iVar1 = *var_10h,  iVar1 != 0; var_10h = var_10h + 3) {\n                if ((*(iVar1 + 4) & 1) == 0) {\n                    fcn.00459cf4(0x4650bf, 0x4650d8, 0xd17);\n                }\n                if ((*(iVar1 + 0xc) & 2) != 0) {\n                    if (arg_14h <= *(iVar1 + 0x24)) {\n                        fcn.0045ce50(arg_8h, arg_10h, var_10h + 3, piVar3, arg_14h, 1, arg_1ch, arg_20h);\n                        return;\n                    }\n                    arg_14h = arg_14h - *(iVar1 + 0x24);\n                }\n            }\n        }\n        arg_14h_00 = *(arg_ch + 0x10) + arg_ch;\n        for (var_8h = arg_14h_00; iVar1 = *var_8h,  iVar1 != 0; var_8h = var_8h + 3) {\n            if ((*(iVar1 + 4) & 1) == 0) {\n                fcn.00459cf4(\"IS_STRUC(blType->tpMask)\", 0x4650f8, 0xd3e);\n            }\n            if ((*(iVar1 + 0xc) & 2) != 0) {\n                if (arg_14h <= *(iVar1 + 0x24)) {\n                    fcn.0045ce50(arg_8h, arg_10h, var_8h + 3, arg_14h_00, arg_14h, 0, arg_1ch, arg_20h);\n                    if (arg_18h == 0) {\n                        return;\n                    }\n                    fcn.0045ce50(arg_8h, arg_10h, var_10h, piVar3, 0, 1, arg_1ch, arg_20h);\n                    return;\n                }\n                arg_14h = arg_14h - *(iVar1 + 0x24);\n            }\n        }\n        piVar4 = *(arg_ch + 0x2e) + arg_ch;\n        piVar5 = piVar4;\n        while( true ) {\n            iVar1 = *piVar5;\n            if (iVar1 == 0) {\n                fcn.00459cf4(\"memType\", 0x465107, 0xd64);\n            }\n            var_18h = 1;\n            if ((*(iVar1 + 5) & 4) != 0) {\n                var_18h = *(iVar1 + 0xc);\n                iVar1 = *(iVar1 + 8);\n            }\n            if ((*(iVar1 + 0xc) & 2) == 0) {\n                fcn.00459cf4(\"memType->tpClass.tpcFlags & CF_HAS_DTOR\", 0x465136, 0xd72);\n            }\n            var_18h = var_18h * *(iVar1 + 0x20);\n            if (arg_14h <= var_18h) break;\n            arg_14h = arg_14h - var_18h;\n            piVar5 = piVar5 + 2;\n        }\n        do {\n            iVar1 = *piVar5;\n            var_18h = 1;\n            if ((*(iVar1 + 5) & 4) != 0) {\n                var_18h = *(iVar1 + 0xc);\n                iVar1 = *(iVar1 + 8);\n            }\n            if (var_18h < 2) {\n                fcn.0045ce9b(piVar5[1] + arg_8h, iVar1, 0, arg_14h, 1, arg_1ch, arg_20h);\n            }\n            else {\n                fcn.0045d1ce(piVar5[1] + arg_8h, *piVar5, arg_14h, arg_1ch, arg_20h);\n            }\n            arg_14h = 0;\n            piVar5 = piVar5 + -2;\n        } while (piVar4 <= piVar5);\n        fcn.0045ce50(arg_8h, arg_10h, var_8h, arg_14h_00, 0, 0, arg_1ch, arg_20h);\n        if (arg_18h != 0) {\n            fcn.0045ce50(arg_8h, arg_10h, var_10h, piVar3, 0, 1, arg_1ch, arg_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 1682
    },
    "0045d379": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045d379(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0;\n    if (arg_8h == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        var_4h = *(arg_10h + 0x1c) - arg_ch;\n        if ((*(arg_8h + 1) & 0x20) != 0) {\n            if ((*(arg_8h + 1) & 0x11) == 0) {\n                fcn.00459cf4(\"dttPtr->dttFlags & (DTCVF_PTRVAL|DTCVF_RETVAL)\", 0x46527b, 0xe77);\n            }\n            if ((*(*arg_8h + 4) & 0x10) == 0) {\n                fcn.00459cf4(\"dttPtr->dttType->tpMask & TM_IS_PTR\", 0x4652a6, 0xe7b);\n            }\n            if ((*(*(*arg_8h + 8) + 0xc) & 2) == 0) {\n                fcn.00459cf4(\"dttPtr->dttType->tpPtr.tppBaseType->tpClass.tpcFlags & CF_HAS_DTOR\", 0x4652f0, 0xe7c);\n            }\n            var_4h = *(*(*arg_8h + 8) + 0x20);\n        }\n        if ((*(arg_8h + 5) & 1) == 0) {\n            piVar5 = arg_8h;\n            if ((var_4h < 1) && ((*(arg_8h + 5) & 4) == 0)) {\n                if ((arg_8h[1] & 3U) != 3) {\n                    return 0;\n                }\n                var_8h = var_8h + 1;\n            }\n            else {\n                for (; *piVar5 != 0; piVar5 = piVar5 + 3) {\n                    if ((*(piVar5 + 5) & 0x10) == 0) {\n                        var_ch = *piVar5;\n                    }\n                    else {\n                        if ((*(*piVar5 + 5) & 4) == 0) {\n                            fcn.00459cf4(\"dtvtPtr->dttType->tpMask & TM_IS_ARRAY\", 0x46537c, 0xed6);\n                        }\n                        var_ch = *(*piVar5 + 8);\n                    }\n                    iVar8 = 1;\n                    if (((((*(var_ch + 4) & 0x10) != 0) && (var_ch = *(var_ch + 8),  (*(var_ch + 4) & 2) != 0)) &&\n                        ((*(var_ch + 0xc) & 0x20) != 0)) && ((*(piVar5 + 1) & 8) != 0)) {\n                        iVar6 = 0;\n                        if ((*(var_ch + 0xc) & 2) == 0) {\n                            fcn.00459cf4(\"varType->tpClass.tpcFlags & CF_HAS_DTOR\", 0x4653ab, 0xef6);\n                        }\n                        if ((*(piVar5 + 1) & 4) == 0) {\n                            var_10h = piVar5[2];\n                        }\n                        else {\n                            var_10h = arg_14h + piVar5[2];\n                        }\n                        iVar1 = *var_10h;\n                        if ((*(piVar5 + 5) & 0x10) != 0) {\n                            iVar6 = var_10h[1];\n                        }\n                        var_10h = iVar1;\n                        if ((*(piVar5 + 1) & 0x40) != 0) {\n                            var_10h = iVar1 + 4;\n                        }\n                        var_10h = fcn.0045d2f2(var_10h, &var_ch, iVar6);\n                    }\n                    iVar6 = var_ch;\n                    if ((*(var_ch + 5) & 4) != 0) {\n                        iVar8 = *(var_ch + 0xc);\n                        iVar6 = *(var_ch + 8);\n                    }\n                    if ((*(iVar6 + 0xc) & 2) == 0) {\n                        fcn.00459cf4(\"elemType->tpClass.tpcFlags & CF_HAS_DTOR\", 0x4653db, 0xf21);\n                    }\n                    uVar7 = iVar8 * *(iVar6 + 0x20);\n                    if (var_4h <= uVar7) goto code_r0x0045d5b4;\n                    var_4h = var_4h - uVar7;\n                }\n                piVar5 = piVar5 + -3;\n            }\ncode_r0x0045d5b4:\n            do {\n                var_14h = *piVar5;\n                uVar7 = piVar5[1];\n                if ((uVar7 & 4) == 0) {\n                    var_18h = piVar5[2];\n                }\n                else {\n                    var_18h = arg_14h + piVar5[2];\n                }\n                if ((uVar7 & 0x1000) != 0) {\n                    if ((*(var_14h + 5) & 4) == 0) {\n                        fcn.00459cf4(\"varType->tpMask & TM_IS_ARRAY\", 0x465400, 0xf51);\n                    }\n                    var_14h = *(var_14h + 8);\n                }\n                if ((uVar7 & 0x11) != 0) {\n                    iVar8 = 0;\n                    if ((*(var_14h + 4) & 0x10) == 0) {\n                        fcn.00459cf4(\"varType->tpMask & TM_IS_PTR\", 0x465423, 0xf5b);\n                    }\n                    var_14h = *(var_14h + 8);\n                    var_1ch = *var_18h;\n                    if ((uVar7 & 0x1000) != 0) {\n                        iVar8 = var_18h[1];\n                    }\n                    var_18h = var_1ch;\n                    if ((uVar7 & 0x48) == 0x40) {\n                        var_18h = var_1ch + 1;\n                    }\n                    if ((((*(var_14h + 4) & 2) != 0) && ((*(var_14h + 0xc) & 0x20) != 0)) && ((uVar7 & 8) != 0)) {\n                        var_1ch = fcn.0045d2f2(var_18h, &var_14h, iVar8);\n                        var_18h = var_1ch;\n                    }\n                }\n                if (var_8h == 0) {\n                    if ((uVar7 & 0x400) == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        if (*(var_14h + 0x10) == 0) {\n                            uVar4 = 0;\n                        }\n                        else {\n                            piVar9 = *(var_14h + 0x10) + var_14h;\n                            if (piVar9 == NULL) {\n                                fcn.00459cf4(0x46542a, \"xx.cpp\", 0xf91);\n                            }\n                            uVar4 = *(*piVar9 + 0x20);\n                        }\n                        if (var_4h < uVar4) {\n                            uVar3 = 2;\n                        }\n                        else {\n                            uVar3 = 1;\n                        }\n                    }\n                    if ((*(var_14h + 5) & 4) == 0) {\n                        fcn.0045ce9b(var_18h, var_14h, uVar3, var_4h, 1, arg_14h, arg_10h);\n                    }\n                    else {\n                        fcn.0045d1ce(var_18h, var_14h, var_4h, arg_14h, arg_10h);\n                    }\n                    if ((((uVar7 & 0x400) != 0) && ((*(arg_10h + 0x20) & 1) != 0)) && (*(arg_10h + 0x20) != -1)) {\n                        (**(*var_18h + -8))();\n                    }\n                }\n                if ((uVar7 & 3) == 3) {\n                    if ((uVar7 & 0x48) == 0x48) {\n                        var_1ch = var_1ch + -1;\n                    }\n                    if ((*(var_14h + 5) & 4) == 0) {\n                        if (*(var_14h + 0x14) == 0) {\n                            fcn.00454224(var_1ch);\n                        }\n                        else {\n                            fcn.0045bb16(var_1ch, *(var_14h + 0x14), *(var_14h + 0x18));\n                        }\n                    }\n                    else {\n                        var_14h = *(var_14h + 8);\n                        if (*(var_14h + 0x1c) == 0) {\n                            fcn.00454234(var_1ch);\n                        }\n                        else {\n                            fcn.0045bb16(var_1ch, *(var_14h + 0x1c), *(var_14h + 0x1a));\n                        }\n                    }\n                }\n                var_4h = 0;\n                bVar2 = arg_8h < piVar5;\n                piVar5 = piVar5 + -3;\n            } while (bVar2);\n            uVar3 = 0;\n        }\n        else {\n            if (((*(*arg_8h + 4) & 2) == 0) || ((*(*arg_8h + 0xc) & 2) == 0)) {\n                fcn.00459cf4(\"IS_CLASS(dttPtr->dttType->tpMask) && (dttPtr->dttType->tpClass.tpcFlags & CF_HAS_DTOR)\", \n                             0x46534e, 0xe8a);\n            }\n            uVar3 = *(*arg_8h + 0x24);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2484
    },
    "0045efe8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045efe8(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        fcn.0042275c();\n        if ((param_2 & 1) != 0) {\n            fcn.00454224(in_EAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0045fa58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fa58(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        *arg_8h = 0x4660ec;\n        fcn.00454c50(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 148
    },
    "0045fab8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fab8(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        *arg_8h = 0x466114;\n        fcn.0045fa58(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 147
    },
    "0045fb38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fb38(uint *arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (arg_8h != NULL) {\n        *arg_8h = 0x466100;\n        fcn.0045fab8(arg_8h, 0);\n        if ((arg_ch & 1) != 0) {\n            fcn.00454224(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 147
    },
    "0045fcec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fcec(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && (*0x465ef0 = 0,  (arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0045fdb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fdb8(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    if ((arg_8h != 0) && ((arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "0045ff3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ff3c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if ((arg_8h != 0) && ((arg_ch & 1) != 0)) {\n        fcn.00454224(arg_8h);\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 110
    },
    "0040ae28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t fcn.0040ae28(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040c628();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 55
    },
    "0040cd38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.0040cd38(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x40cf35;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.004235c4();\n    uVar2 = fcn.0040ad7c();\n    // switch table (21 cases) at 0x40cd7a\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0040c628();\n        if (cVar1 != '\\r') {\n            fcn.0041f394();\n        }\n        break;\n    default:\n        fcn.00414c2c();\n        fcn.004223bc();\n        break;\n    case 2:\n        fcn.0040b738();\n        fcn.0042361c();\n        break;\n    case 3:\n        fcn.0040b738();\n        fcn.0042361c();\n        break;\n    case 4:\n        fcn.0040b738();\n        fcn.0042361c();\n        break;\n    case 5:\n        fcn.0040b52c();\n        fcn.00423640();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0040c488();\n        fcn.00423658();\n        break;\n    case 8:\n    case 9:\n        fcn.0040c628();\n        fcn.00423638();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x40ced8;\n        fcn.0040cb78(&stack0xfffffffc);\n        fcn.004235cc();\n        break;\n    case 0xf:\n        fcn.0040b56c();\n        fcn.00423640();\n        break;\n    case 0x10:\n        fcn.0040b5ac();\n        fcn.00423650();\n        break;\n    case 0x11:\n        fcn.0040b5f8();\n        fcn.00423648();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0040c544();\n        fcn.00423660();\n        break;\n    case 0x13:\n        uVar3 = fcn.0040b7a4();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00423624(in_stack_ffffffc8, uVar3 >> 0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x40cf3c;\n    fcn.00423694();\n    fcn.00422e4c();\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 710
    },
    "0041c8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c8dc(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    ushort *in_EAX;\n    uint32_t uVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = fcn.0041c4d4(&stack0xfffffffc);\n    uVar1 = *((uVar4 & 0xffff) + 0x461900);\n    uVar4 = fcn.0041c4d4(&stack0xfffffffc);\n    uVar2 = *((uVar4 & 0xffff) + 0x461900);\n    // switch table (10 cases) at 0x41c942\n    switch(*(uVar1 * 10 + 0x46191c + uVar2)) {\n    case 0:\n    case 2:\n        fcn.0041741c();\n        break;\n    case 1:\n        fcn.00417b3c();\n        break;\n    case 3:\n        if (param_1 == 3) {\n            fcn.0041c51c();\n        }\n        else {\n            fcn.0041c5f4();\n        }\n        break;\n    case 4:\n        if (param_1 < 4) {\n            fcn.0041c51c();\n        }\n        else {\n            fcn.0041c5f4();\n        }\n        break;\n    case 5:\n        if (param_1 == 0) {\n            fcn.0041a854();\n            fcn.0041a854();\n            fcn.00423650();\n        }\n        else if (param_1 == 1) {\n            fcn.0041a854();\n            fcn.0041a854();\n            fcn.00423650();\n        }\n        else if (param_1 - 2U < 2) {\n            if ((uVar1 == 5) && (uVar2 == 5)) {\n                if (param_1 == 2) {\n                    fcn.0041a854();\n                    fcn.0041a854();\n                    fcn.00423650();\n                }\n                else {\n                    fcn.0041a854();\n                    fcn.0041a854();\n                    fcn.00423640();\n                }\n            }\n            else if (uVar2 == 5) {\n                if (param_1 == 2) {\n                    fcn.00419e28();\n                    fcn.0041a854();\n                    fcn.00423650();\n                }\n                else {\n                    fcn.0041a854();\n                    fcn.0041a854();\n                    fcn.00423640();\n                }\n            }\n            else if (param_1 == 2) {\n                fcn.00419e28();\n                fcn.0041a854();\n                fcn.00423650();\n            }\n            else {\n                fcn.00419e28();\n                fcn.0041a854();\n                fcn.00423650();\n            }\n        }\n        else {\n            fcn.0041c5f4();\n        }\n        break;\n    case 6:\n        if (param_1 == 0) {\n            fcn.0041c048();\n        }\n        else if (param_1 < 4) {\n            fcn.0041c51c();\n        }\n        else {\n            fcn.0041c5f4();\n        }\n        break;\n    case 7:\n        if (param_1 < 8) {\n            if (param_1 < 4) {\n                fcn.0041c51c();\n            }\n            else {\n                fcn.0041c5f4();\n            }\n        }\n        else if (param_1 == 8) {\n            cVar3 = fcn.00419970();\n            if (cVar3 != '\\0') {\n                fcn.00419970();\n            }\n            fcn.00423638();\n        }\n        else if (param_1 == 9) {\n            cVar3 = fcn.00419970();\n            if (cVar3 == '\\0') {\n                fcn.00419970();\n            }\n            fcn.00423638();\n        }\n        else if (param_1 == 10) {\n            fcn.00419970();\n            fcn.00419970();\n            fcn.00423638();\n        }\n        break;\n    case 8:\n        if (param_1 == 0) {\n            fcn.0041c598();\n        }\n        else if (param_1 == 1) {\n            fcn.0041c598();\n            if ((uVar1 == 8) && (uVar2 == 8)) {\n                *in_EAX = 5;\n            }\n        }\n        else if (param_1 - 2U < 2) {\n            fcn.0041c51c();\n        }\n        else {\n            fcn.0041c5f4();\n        }\n        break;\n    case 9:\n        if (param_1 == 3) {\n            fcn.0041c51c();\n        }\n        else {\n            fcn.0041c700();\n        }\n        break;\n    default:\n        fcn.0041741c();\n    }\n    return;\n}\n",
        "token_count": 1168
    },
    "0041d034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nulong fcn.0041d034(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    float10 fVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uint32_t in_stack_ffffffdc;\n    uint32_t uVar6;\n    \n    uVar2 = fcn.0041cecc(1);\n    uVar1 = *((uVar2 & 0xffff) + 0x461900);\n    uVar2 = fcn.0041cecc();\n    // switch table (10 cases) at 0x41d08b\n    switch(*(uVar1 * 10 + 0x46198c + *((uVar2 & 0xffff) + 0x461900))) {\n    case 0:\n        uVar2 = fcn.0041741c();\n        break;\n    case 1:\n        uVar2 = fcn.0041ce74();\n        break;\n    case 2:\n        uVar2 = fcn.0041ce88();\n        break;\n    case 3:\n        fcn.00418e24();\n        fcn.00418e24();\n        uVar2 = fcn.0041cef0();\n        break;\n    case 4:\n        fVar3 = fcn.00419e28();\n        fVar3 = fcn.00419e28(fVar3);\n        uVar6 = SUB84(fVar3, 0);\n        uVar2 = fcn.0041cf40();\n        in_stack_ffffffdc = uVar6 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    case 5:\n        fVar3 = fcn.0041a854();\n        fVar3 = fcn.0041a854(ROUND(fVar3));\n        uVar6 = ROUND(fVar3);\n        uVar2 = fcn.0041cf90();\n        in_stack_ffffffdc = uVar6 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    case 6:\n        uVar2 = fcn.0041cfbc();\n        break;\n    case 7:\n        fcn.00419970();\n        fcn.00419970();\n        uVar2 = fcn.0041cef0();\n        break;\n    case 8:\n        fVar3 = fcn.0041a330();\n        fVar3 = fcn.0041a330(fVar3);\n        uVar6 = SUB84(fVar3, 0);\n        uVar2 = fcn.0041cf68();\n        in_stack_ffffffdc = uVar6 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    case 9:\n        uVar4 = fcn.004193f0();\n        uVar5 = fcn.004193f0();\n        uVar6 = uVar5;\n        uVar2 = fcn.0041cf04(uVar6, uVar5 >> 0x20, uVar4, uVar4 >> 0x20);\n        in_stack_ffffffdc = uVar6 & 0xffffff00 | uVar2 & 0xff;\n        break;\n    default:\n        uVar2 = fcn.0041741c();\n    }\n    return CONCAT44(in_stack_ffffffdc, uVar2 & 0xffffff00 | in_stack_ffffffdc & 0xff);\n}\n",
        "token_count": 741
    },
    "0041e0a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.0041e0a8(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t *piStack32;\n    uint16_t uStack28;\n    \n    puVar2 = fcn.0041e098();\n    uStack28 = *puVar2;\n    if (uStack28 < 0x10f) {\n        if (uStack28 != 0) {\n            if (((uStack28 != 9) && (uStack28 != 0xd)) || (puVar2[2] != 0)) {\n                return 0;\n            }\n        }\n        uVar3 = 1;\n    }\n    else {\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 == '\\0') {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = (**(*piStack32 + 0x14))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "0041e95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0041e95c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_38h;\n    uint *arg_8h_00;\n    int32_t var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    uStack40 = 0x41ec61;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e95c::var_28h;\n    fcn.00423d9c();\n    fcn.00423d9c();\n    fcn.004235c4();\n    arg_8h_00 = 0x41e9b4;\n    iVar3 = fcn.0041e934();\n    if (((1 < iVar3) && (iVar3 < 0x12)) || (iVar3 == 0x100)) {\n        iVar2 = fcn.0041e794();\n        if (1 < iVar2) {\n            arg_8h_00 = 0x41e9f1;\n            cVar1 = fcn.0041e7b4();\n            if (cVar1 == '\\0') goto code_r0x0041ec2d;\n        }\n        fcn.0041e8dc();\n        fcn.0041e81c();\n        fcn.00423c88();\n        arg_8h_00 = &fcn.0041e95c::var_38h;\n        fcn.00423ac8();\n        fcn.0041e2b4(arg_8h_00);\n        fcn.004235cc();\n        do {\n            fcn.00423ac8();\n            iVar2 = fcn.0041e738();\n            if (iVar2 != 0) {\n                if (iVar3 < 0xb) {\n    // switch table (10 cases) at 0x41ea84\n                    switch(iVar3) {\n                    case 0:\n                    case 1:\ncode_r0x0041ebfb:\n                        fcn.004235c4();\n                        break;\n                    case 2:\n                        fcn.0042361c();\n                        break;\n                    case 3:\n                        fcn.0042361c();\n                        break;\n                    case 4:\n                        fcn.00423640();\n                        break;\n                    case 5:\n                        fcn.00423640();\n                        break;\n                    case 6:\n                        fcn.00423650();\n                        break;\n                    case 7:\n                        fcn.00423640();\n                        break;\n                    case 8:\n                        fcn.00423660();\n                        break;\n                    case 9:\n                        fcn.00423670();\n                        break;\n                    default:\n                        fcn.0042361c();\n                    }\n                }\n                else if (iVar3 < 0x12) {\n                    if (iVar3 == 0x11) {\n                        fcn.0042361c();\n                    }\n                    else if (iVar3 == 0xb) {\n                        fcn.00423638();\n                    }\n                    else if (iVar3 == 0xc) {\n                        fcn.004235cc();\n                    }\n                    else if (iVar3 == 0xd) {\n                        fcn.00423668();\n                    }\n                    else {\n                        if (iVar3 != 0x10) goto code_r0x0041ebfb;\n                        fcn.0042361c();\n                    }\n                }\n                else if (iVar3 == 0x12) {\n                    fcn.0042361c();\n                }\n                else if (iVar3 == 0x13) {\n                    fcn.0042361c();\n                }\n                else {\n                    if (iVar3 != 0x100) goto code_r0x0041ebfb;\n                    fcn.00423658();\n                }\n                arg_8h = fcn.00423ac8();\n                var_38h = 0x41ec1a;\n                fcn.0041e710(arg_8h);\n            }\n            cVar1 = fcn.0041e870();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x0041ec2d:\n    *in_FS_OFFSET = arg_8h_00;\n    uStack40 = 0x41ec68;\n    var_28h = 0x41ec4d;\n    fcn.00423230();\n    var_28h = 0x41ec60;\n    fcn.00423230();\n    return;\n}\n",
        "token_count": 1087
    },
    "0041ec70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0041ec70(void)\n\n{\n    uchar uVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    double *pdVar6;\n    float fVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *in_FS_OFFSET;\n    float10 fVar10;\n    uint *arg_8h_00;\n    uint uVar11;\n    uint var_28h;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    iVar8 = 4;\n    do {\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    var_8h = 0;\n    uStack40 = 0x41ef19;\n    var_28h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_28h;\n    iVar8 = fcn.0041e3dc();\n    arg_8h = fcn.00420dc0();\n    if (-1 < iVar8 + -1) {\n        iVar9 = 0;\n        do {\n            iVar4 = fcn.0041e428();\n            iVar5 = fcn.0041e404();\n            *(arg_8h + iVar9 * 4) = (iVar4 - iVar5) + 1;\n            iVar9 = iVar9 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    fcn.00423af0(arg_8h);\n    fcn.0041e794();\n    iVar8 = fcn.0041e934();\n    fcn.0041e81c();\n    fcn.00423c88();\n    do {\n        arg_8h_00 = &var_28h;\n        fcn.00423ac8();\n        fcn.0041e5a4(arg_8h_00);\n        uVar11 = var_8h;\n        fcn.00423ac8();\n        pdVar6 = fcn.0041e738();\n        if (iVar8 < 0xb) {\n    // switch table (10 cases) at 0x41ed7a\n            switch(iVar8) {\n            case 0:\n            case 1:\n                break;\n            case 2:\n                uVar3 = fcn.004235d4();\n                *pdVar6 = uVar3;\n                break;\n            case 3:\n                fVar7 = fcn.004235d4();\n                *pdVar6 = fVar7;\n                break;\n            case 4:\n                fVar10 = fcn.004235ec();\n                *pdVar6 = fVar10;\n                break;\n            case 5:\n                fVar10 = fcn.004235ec();\n                *pdVar6 = fVar10;\n                break;\n            case 6:\n                fVar10 = fcn.004235f4();\n                *pdVar6 = ROUND(fVar10);\n                break;\n            case 7:\n                fVar10 = fcn.004235ec();\n                *pdVar6 = fVar10;\n                break;\n            case 8:\n                fcn.00423604();\n                break;\n            case 9:\n                fcn.00423614();\n                break;\n            default:\n                fVar7 = fcn.004235d4();\n                *pdVar6 = fVar7;\n            }\n        }\n        else if (iVar8 < 0x12) {\n            if (iVar8 == 0x11) {\n                uVar1 = fcn.004235d4();\n                *pdVar6 = uVar1;\n            }\n            else if (iVar8 == 0xb) {\n                uVar3 = fcn.004235e4();\n                *pdVar6 = uVar3;\n            }\n            else if (iVar8 == 0xc) {\n                fcn.004235cc();\n            }\n            else if (iVar8 == 0xd) {\n                fcn.0042360c();\n            }\n            else if (iVar8 == 0x10) {\n                uVar1 = fcn.004235d4();\n                *pdVar6 = uVar1;\n            }\n        }\n        else if (iVar8 == 0x12) {\n            uVar3 = fcn.004235d4();\n            *pdVar6 = uVar3;\n        }\n        else if (iVar8 == 0x13) {\n            fVar7 = fcn.004235d4();\n            *pdVar6 = fVar7;\n        }\n        else if (iVar8 == 0x100) {\n            fcn.004235fc();\n        }\n        cVar2 = fcn.0041e870();\n    } while (cVar2 != '\\0');\n    fcn.00420de0();\n    *in_FS_OFFSET = uVar11;\n    fcn.00423694(0x41ef20);\n    fcn.00423230();\n    return;\n}\n",
        "token_count": 1180
    },
    "0042155c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042155c(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x004215d2:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 != 0x2d) {\n            if (uVar3 == 0x2b) goto code_r0x004215e2;\n            if (((uVar3 != 0x24) && (uVar3 != 0x78)) && (uVar3 != 0x58)) {\n                if (uVar3 == 0x30) {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar5 + 2;\n                    if ((uVar3 != 0x78) && (uVar3 != 0x58)) goto joined_r0x004215a6;\n                    goto code_r0x004215e7;\n                }\n                goto code_r0x004215aa;\n            }\ncode_r0x004215e7:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 == 0) goto code_r0x004215d2;\n            do {\n                if (0x60 < uVar3) {\n                    uVar3 = uVar3 - 0x20;\n                }\n                uVar4 = uVar3 - 0x30;\n                if (9 < uVar4) {\n                    if (5 < uVar3 + 0xbf) goto code_r0x004215db;\n                    uVar4 = uVar3 - 0x37;\n                }\n                if (0xfffffff < uVar2) goto code_r0x004215db;\n                uVar2 = uVar2 * 0x10 + uVar4;\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\n            } while (uVar3 != 0);\n            goto code_r0x0042161e;\n        }\n        bVar1 = true;\ncode_r0x004215e2:\n        uVar3 = *puVar6;\n        puVar6 = puVar5 + 2;\ncode_r0x004215aa:\n        if (uVar3 != 0) {\n            do {\n                if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x004215db;\n                uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n                uVar3 = *puVar6;\n                puVar6 = puVar6 + 1;\njoined_r0x004215a6:\n            } while (uVar3 != 0);\n            if (bVar1) {\n                if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x0042161e;\n            }\n            else if (-1 < uVar2) {\ncode_r0x0042161e:\n                iVar7 = 0;\n                goto code_r0x00421621;\n            }\n        }\n    }\ncode_r0x004215db:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00421621:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 870
    },
    "0043565c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t * fcn.0043565c(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x435676;\n    var_8h = fcn.004336e4();\n    uStack48 = 0x43573b;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.00433cac();\n    fcn.00430a78();\n    fcn.0043095c();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0043565c::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00405e68(arg_8h, arg_ch);\n    fcn.00430d00();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.00430fa0(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.00433968();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 539
    },
    "00458b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00458b70(uint *arg_8h, code *arg_ch, code *arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, uint *arg_20h)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    float10 fVar7;\n    uint var_44h;\n    int32_t var_3dh;\n    uint var_38h;\n    uint *var_34h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    char var_dh;\n    char var_ch;\n    char var_bh;\n    char var_ah;\n    char var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = &var_24h;\n    var_4h = 0x8000;\n    var_8h = 0x13;\n    var_9h = '\\0';\n    var_ah = '\\x01';\n    var_bh = '\\0';\n    var_ch = '\\0';\n    var_dh = '\\0';\n    var_14h = 0;\n    iVar5 = -2;\n    var_18h = 1;\n    _var_24h = _var_24h & 0;\n    pcVar2 = fcn.004575bc(0xe);\n    var_3dh._0_1_ = *pcVar2;\n    do {\n        var_14h = var_14h + 1;\n        arg_8h_00 = (*arg_ch)(arg_14h);\n        if (arg_8h_00 == 0xffffffff) {\n            var_18h = 0xffffffff;\n            goto code_r0x00458ea4;\n        }\n    } while (((arg_8h_00 & 0x80) == 0) && (iVar3 = fcn.00459c38(arg_8h_00),  iVar3 != 0));\n    arg_18h = arg_18h + -1;\n    if (-1 < arg_18h) {\n        iVar3 = var_8h;\n        if (arg_8h_00 == 0x2b) {\n            var_bh = '\\x01';\n        }\n        else {\n            iVar6 = iVar5;\n            if (arg_8h_00 != 0x2d) goto code_r0x00458c31;\n            var_bh = '\\x01';\n            var_9h = '\\x01';\n        }\n        while (var_8h = iVar3,  arg_18h = arg_18h + -1,  -1 < arg_18h) {\n            var_14h = var_14h + 1;\n            arg_8h_00 = (*arg_ch)(arg_14h);\n            iVar6 = iVar5;\ncode_r0x00458c31:\n            if ((var_ah == '\\x01') && (var_bh != '\\0')) {\n                if (arg_8h_00 == 0x49) {\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -1;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x4e)) goto code_r0x00458e9f;\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -2;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x46)) goto code_r0x00458e9f;\n                    if (var_9h == '\\0') {\n                        _var_24h = CONCAT44(*0x463d48, *0x463d44);\n                        _var_24h = CONCAT28(*0x463d4c, _var_24h);\n                    }\n                    else {\n                        _var_24h = CONCAT44(*0x463d52, *0x463d4e);\n                        _var_24h = CONCAT28(*0x463d56, _var_24h);\n                    }\n                    goto code_r0x00458e74;\n                }\n                if (arg_8h_00 == 0x4e) {\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -1;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x41)) goto code_r0x00458e9f;\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -2;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x4e)) goto code_r0x00458e9f;\n                    if (var_9h == '\\0') {\n                        _var_24h = CONCAT44(*0x463d5c, *0x463d58);\n                        _var_24h = CONCAT28(*0x463d60, _var_24h);\n                    }\n                    else {\n                        _var_24h = CONCAT44(*0x463d66, *0x463d62);\n                        _var_24h = CONCAT28(*0x463d6a, _var_24h);\n                    }\n                    goto code_r0x00458e74;\n                }\n            }\n            var_ah = '\\0';\n            iVar5 = iVar6;\n            iVar3 = var_8h;\n            if (arg_8h_00 == var_3dh) {\n                if (var_4h != 0x8000) goto code_r0x00458d17;\n                var_4h = iVar6;\n                if (iVar6 < 1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if ((arg_8h_00 < 0x30) || (0x39 < arg_8h_00)) goto code_r0x00458d17;\n                iVar4 = arg_8h_00 - 0x30;\n                iVar5 = iVar6 + 1;\n                if (iVar5 < 1) {\n                    *var_34h = iVar4;\n                    iVar3 = var_8h;\n                    if (iVar4 == 0) {\n                        iVar5 = -1;\n                        if (var_4h != 0x8000) {\n                            var_4h = var_4h + -1;\n                        }\n                    }\n                    else {\n                        iVar5 = 1;\n                    }\n                }\n                else if (iVar5 < 10) {\n                    _var_24h = CONCAT64(_var_20h, var_24h * 10 + iVar4);\n                }\n                else if (iVar5 <= var_8h) {\n                    stack0xffffffc0 = var_24h;\n                    var_38h = var_20h;\n                    iVar4 = fcn.00458510(&var_3dh + 1, iVar4);\n                    iVar3 = iVar6;\n                    if (iVar4 == 0) {\n                        _var_24h = CONCAT44(var_38h, stack0xffffffc0);\n                        iVar3 = var_8h;\n                    }\n                }\n            }\n        }\n    }\n    arg_8h_00 = 0x65;\ncode_r0x00458d17:\n    iVar3 = arg_18h;\n    if (iVar5 == -2) {\ncode_r0x00458e9f:\n        arg_18h = iVar3;\n        var_18h = 0;\ncode_r0x00458ea4:\n        if (-1 < arg_18h) {\n            (*arg_10h)(arg_8h_00, arg_14h);\n            var_14h = var_14h + -1;\n        }\n        _var_24h = _var_24h & 0;\n    }\n    else {\n        if (var_4h == 0x8000) {\n            var_4h = iVar5;\n        }\n        iVar3 = 0;\n        if ((arg_8h_00 == 0x65) || (arg_8h_00 == 0x45)) {\n            bVar1 = true;\ncode_r0x00458d3f:\n            while (arg_18h = arg_18h + -1,  -1 < arg_18h) {\n                var_14h = var_14h + 1;\n                arg_8h_00 = (*arg_ch)(arg_14h);\n                if (!bVar1) goto code_r0x00458d6c;\n                bVar1 = false;\n                if (arg_8h_00 != 0x2d) goto code_r0x00458d67;\n                var_ch = '\\x01';\n            }\n        }\n        else {\ncode_r0x00458d92:\n            (*arg_10h)(arg_8h_00, arg_14h);\n            var_14h = var_14h + -1;\n        }\n        if (var_ch != '\\0') {\n            iVar3 = -iVar3;\n            var_dh = -var_dh;\n        }\n        if (iVar5 < 0) {\n            _var_24h = _var_20h << 0x20;\n            _var_24h = _var_24h & 0xffffffff;\n        }\n        else if (var_dh == '\\0') {\n            if (var_8h < iVar5) {\n                iVar5 = var_8h;\n            }\n            iVar3 = iVar3 + (var_4h - iVar5);\n            _var_24h = fcn.004581b0(&var_24h);\n            if (iVar3 != 0) {\n                iVar5 = iVar3;\n                if (iVar3 < 1) {\n                    iVar5 = -iVar3;\n                }\n                fVar7 = fcn.00457f84(iVar5);\n                if (iVar3 < 0) {\n                    _var_24h = _var_24h / fVar7;\n                }\n                else {\n                    _var_24h = fVar7 * _var_24h;\n                }\n            }\n        }\n        else {\n            if (var_dh == '\\x01') {\n                *(var_34h + 6) = 0xffff;\n                *(var_34h + 1) = 0xffff;\n                *(var_34h + 2) = 0xffff;\n                *var_34h = 0xffff;\n                *(var_34h + 2) = 0x7ffe;\n            }\n            else {\n                _var_24h = _var_20h << 0x20;\n                _var_24h = _var_24h & 0xffffffff;\n            }\n            var_18h = 2;\n        }\n    }\n    if (var_9h != '\\0') {\n        _var_24h = -_var_24h;\n    }\ncode_r0x00458e74:\n    *arg_1ch = *arg_1ch + var_14h;\n    *arg_20h = var_18h;\n    *arg_8h = var_24h;\n    arg_8h[1] = var_20h;\n    *(arg_8h + 2) = var_1ch;\n    return;\ncode_r0x00458d67:\n    if (arg_8h_00 != 0x2b) {\ncode_r0x00458d6c:\n        if ((arg_8h_00 < 0x30) || (0x39 < arg_8h_00)) goto code_r0x00458d92;\n        iVar3 = arg_8h_00 + iVar3 * 10 + -0x30;\n        if (0x1344 < iVar3) {\n            var_dh = '\\x01';\n        }\n    }\n    goto code_r0x00458d3f;\n}\n",
        "token_count": 2771
    },
    "00459054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00459054(uint *arg_8h, code *arg_ch, code *arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, uint *arg_20h)\n\n{\n    bool bVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    float10 fVar7;\n    uint var_44h;\n    int32_t var_3eh;\n    uint var_38h;\n    uint *var_34h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    char var_dh;\n    char var_ch;\n    char var_bh;\n    char var_ah;\n    char var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_34h = &var_24h;\n    var_4h = 0x8000;\n    var_8h = 0x13;\n    var_9h = '\\0';\n    var_ah = '\\x01';\n    var_bh = '\\0';\n    var_ch = '\\0';\n    var_dh = '\\0';\n    var_14h = 0;\n    iVar5 = -2;\n    var_18h = 1;\n    _var_24h = _var_24h & 0;\n    puVar2 = fcn.004575bc(0xe);\n    var_3eh._0_2_ = *puVar2;\n    do {\n        var_14h = var_14h + 1;\n        arg_8h_00 = (*arg_ch)(arg_14h);\n        if (arg_8h_00 == 0xffffffff) {\n            var_18h = 0xffffffff;\n            goto code_r0x00459385;\n        }\n        iVar3 = fcn.004577d8(arg_8h_00);\n    } while (iVar3 != 0);\n    arg_18h = arg_18h + -1;\n    if (-1 < arg_18h) {\n        iVar3 = var_8h;\n        if (arg_8h_00 == 0x2b) {\n            var_bh = '\\x01';\n        }\n        else {\n            iVar6 = iVar5;\n            if (arg_8h_00 != 0x2d) goto code_r0x00459112;\n            var_bh = '\\x01';\n            var_9h = '\\x01';\n        }\n        while (var_8h = iVar3,  arg_18h = arg_18h + -1,  -1 < arg_18h) {\n            var_14h = var_14h + 1;\n            arg_8h_00 = (*arg_ch)(arg_14h);\n            iVar6 = iVar5;\ncode_r0x00459112:\n            if ((var_ah == '\\x01') && (var_bh != '\\0')) {\n                if (arg_8h_00 == 0x49) {\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -1;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x4e)) goto code_r0x00459380;\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -2;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x46)) goto code_r0x00459380;\n                    if (var_9h == '\\0') {\n                        _var_24h = CONCAT44(*0x463d70, *0x463d6c);\n                        _var_24h = CONCAT28(*0x463d74, _var_24h);\n                    }\n                    else {\n                        _var_24h = CONCAT44(*0x463d7a, *0x463d76);\n                        _var_24h = CONCAT28(*0x463d7e, _var_24h);\n                    }\n                    goto code_r0x00459355;\n                }\n                if (arg_8h_00 == 0x4e) {\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -1;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x41)) goto code_r0x00459380;\n                    var_14h = var_14h + 1;\n                    arg_8h_00 = (*arg_ch)(arg_14h);\n                    iVar3 = arg_18h + -2;\n                    if ((iVar3 < 0) || (arg_8h_00 != 0x4e)) goto code_r0x00459380;\n                    if (var_9h == '\\0') {\n                        _var_24h = CONCAT44(*0x463d84, *0x463d80);\n                        _var_24h = CONCAT28(*0x463d88, _var_24h);\n                    }\n                    else {\n                        _var_24h = CONCAT44(*0x463d8e, *0x463d8a);\n                        _var_24h = CONCAT28(*0x463d92, _var_24h);\n                    }\n                    goto code_r0x00459355;\n                }\n            }\n            var_ah = '\\0';\n            iVar5 = iVar6;\n            iVar3 = var_8h;\n            if (arg_8h_00 == var_3eh) {\n                if (var_4h != 0x8000) goto code_r0x004591f8;\n                var_4h = iVar6;\n                if (iVar6 < 1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if ((arg_8h_00 < 0x30) || (0x39 < arg_8h_00)) goto code_r0x004591f8;\n                iVar4 = arg_8h_00 - 0x30;\n                iVar5 = iVar6 + 1;\n                if (iVar5 < 1) {\n                    *var_34h = iVar4;\n                    iVar3 = var_8h;\n                    if (iVar4 == 0) {\n                        iVar5 = -1;\n                        if (var_4h != 0x8000) {\n                            var_4h = var_4h + -1;\n                        }\n                    }\n                    else {\n                        iVar5 = 1;\n                    }\n                }\n                else if (iVar5 < 10) {\n                    _var_24h = CONCAT64(_var_20h, var_24h * 10 + iVar4);\n                }\n                else if (iVar5 <= var_8h) {\n                    stack0xffffffc0 = var_24h;\n                    var_38h = var_20h;\n                    iVar4 = fcn.00458510(&var_3eh + 2, iVar4);\n                    iVar3 = iVar6;\n                    if (iVar4 == 0) {\n                        _var_24h = CONCAT44(var_38h, stack0xffffffc0);\n                        iVar3 = var_8h;\n                    }\n                }\n            }\n        }\n    }\n    arg_8h_00 = 0x65;\ncode_r0x004591f8:\n    iVar3 = arg_18h;\n    if (iVar5 == -2) {\ncode_r0x00459380:\n        arg_18h = iVar3;\n        var_18h = 0;\ncode_r0x00459385:\n        if (-1 < arg_18h) {\n            (*arg_10h)(arg_8h_00, arg_14h);\n            var_14h = var_14h + -1;\n        }\n        _var_24h = _var_24h & 0;\n    }\n    else {\n        if (var_4h == 0x8000) {\n            var_4h = iVar5;\n        }\n        iVar3 = 0;\n        if ((arg_8h_00 == 0x65) || (arg_8h_00 == 0x45)) {\n            bVar1 = true;\ncode_r0x00459220:\n            while (arg_18h = arg_18h + -1,  -1 < arg_18h) {\n                var_14h = var_14h + 1;\n                arg_8h_00 = (*arg_ch)(arg_14h);\n                if (!bVar1) goto code_r0x0045924d;\n                bVar1 = false;\n                if (arg_8h_00 != 0x2d) goto code_r0x00459248;\n                var_ch = '\\x01';\n            }\n        }\n        else {\ncode_r0x00459273:\n            (*arg_10h)(arg_8h_00, arg_14h);\n            var_14h = var_14h + -1;\n        }\n        if (var_ch != '\\0') {\n            iVar3 = -iVar3;\n            var_dh = -var_dh;\n        }\n        if (iVar5 < 0) {\n            _var_24h = _var_20h << 0x20;\n            _var_24h = _var_24h & 0xffffffff;\n        }\n        else if (var_dh == '\\0') {\n            if (var_8h < iVar5) {\n                iVar5 = var_8h;\n            }\n            iVar3 = iVar3 + (var_4h - iVar5);\n            _var_24h = fcn.004581b0(&var_24h);\n            if (iVar3 != 0) {\n                iVar5 = iVar3;\n                if (iVar3 < 1) {\n                    iVar5 = -iVar3;\n                }\n                fVar7 = fcn.00457f84(iVar5);\n                if (iVar3 < 0) {\n                    _var_24h = _var_24h / fVar7;\n                }\n                else {\n                    _var_24h = fVar7 * _var_24h;\n                }\n            }\n        }\n        else {\n            if (var_dh == '\\x01') {\n                *(var_34h + 6) = 0xffff;\n                *(var_34h + 1) = 0xffff;\n                *(var_34h + 2) = 0xffff;\n                *var_34h = 0xffff;\n                *(var_34h + 2) = 0x7ffe;\n            }\n            else {\n                _var_24h = _var_20h << 0x20;\n                _var_24h = _var_24h & 0xffffffff;\n            }\n            var_18h = 2;\n        }\n    }\n    if (var_9h != '\\0') {\n        _var_24h = -_var_24h;\n    }\ncode_r0x00459355:\n    *arg_1ch = *arg_1ch + var_14h;\n    *arg_20h = var_18h;\n    *arg_8h = var_24h;\n    arg_8h[1] = var_20h;\n    *(arg_8h + 2) = var_1ch;\n    return;\ncode_r0x00459248:\n    if (arg_8h_00 != 0x2b) {\ncode_r0x0045924d:\n        if ((arg_8h_00 < 0x30) || (0x39 < arg_8h_00)) goto code_r0x00459273;\n        iVar3 = arg_8h_00 + iVar3 * 10 + -0x30;\n        if (0x1344 < iVar3) {\n            var_dh = '\\x01';\n        }\n    }\n    goto code_r0x00459220;\n}\n",
        "token_count": 2728
    },
    "0045a284": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a284(uint arg_8h, char *arg_ch, code *arg_10h)\n\n{\n    char cVar1;\n    bool bVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint var_ch;\n    uchar *var_8h;\n    char *var_4h;\n    \n    var_4h = arg_ch;\n    (*arg_10h)(arg_8h, 0);\n    for (; (*var_4h == ' ' || (*var_4h == '\\t')); var_4h = var_4h + 1) {\n    }\n    if (*var_4h == '\\\"') {\n        do {\n            pcVar3 = var_4h;\n            var_4h = pcVar3 + 1;\n            if (*var_4h == '\\\"') break;\n        } while (*var_4h != '\\0');\n        if (*var_4h == '\\\"') {\n            var_4h = pcVar3 + 2;\n        }\n    }\n    else {\n        for (; ((cVar1 = *var_4h,  cVar1 != ' ' && (cVar1 != '\\t')) && (cVar1 != '\\0')); var_4h = var_4h + 1) {\n        }\n    }\n    iVar5 = fcn.00454e1c(var_4h);\n    *0x4679dc = fcn.00454720(iVar5 + 1);\n    var_8h = *0x4679dc;\n    if (*0x4679dc == NULL) {\n        fcn.00459fb0(0x463ecc);\n    }\n    while( true ) {\n        puVar4 = var_8h;\n        if (*var_4h == '\\0') {\n            return 1;\n        }\n        bVar2 = false;\n        for (; (*var_4h == ' ' || (*var_4h == '\\t')); var_4h = var_4h + 1) {\n        }\n        if (*var_4h == '\\0') break;\n        while (((cVar1 = *var_4h,  cVar1 != ' ' && (cVar1 != '\\t')) && (cVar1 != '\\0'))) {\n            if (cVar1 == '\\\"') {\n                var_4h = var_4h + 1;\n                while ((*var_4h != '\\\"' && (*var_4h != '\\0'))) {\n                    fcn.0045a3f8(&var_8h, &var_4h);\n                }\n                if (*var_4h == '\\\"') {\n                    var_4h = var_4h + 1;\n                }\n            }\n            else {\n                if ((*var_4h == '*') || (*var_4h == '?')) {\n                    bVar2 = true;\n                }\n                fcn.0045a3f8(&var_8h, &var_4h);\n            }\n        }\n        *var_8h = 0;\n        var_8h = var_8h + 1;\n        if (bVar2) {\n            (**0x463f14)(puVar4, arg_10h);\n        }\n        else {\n            (*arg_10h)(puVar4, 0);\n        }\n        if (*var_4h == '\\0') {\n            return 1;\n        }\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 772
    },
    "0045a46c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a46c(uint arg_8h, int16_t *arg_ch, code *arg_10h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    int16_t *piVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint var_ch;\n    ushort *var_8h;\n    int16_t *var_4h;\n    \n    var_4h = arg_ch;\n    (*arg_10h)(arg_8h, 0);\n    for (; (*var_4h == 0x20 || (*var_4h == 9)); var_4h = var_4h + 1) {\n    }\n    if (*var_4h == 0x22) {\n        do {\n            piVar3 = var_4h;\n            var_4h = piVar3 + 1;\n            if (*var_4h == 0x22) break;\n        } while (*var_4h != 0);\n        if (*var_4h == 0x22) {\n            var_4h = piVar3 + 2;\n        }\n    }\n    else {\n        for (; ((iVar1 = *var_4h,  iVar1 != 0x20 && (iVar1 != 9)) && (iVar1 != 0)); var_4h = var_4h + 1) {\n        }\n    }\n    iVar5 = fcn.00455000(var_4h);\n    *0x4679e0 = fcn.00454720(iVar5 * 2 + 2);\n    var_8h = *0x4679e0;\n    if (*0x4679e0 == NULL) {\n        fcn.00459fb0(\"No space for copy of command line\");\n    }\n    while( true ) {\n        puVar4 = var_8h;\n        if (*var_4h == 0) {\n            return 1;\n        }\n        bVar2 = false;\n        for (; (*var_4h == 0x20 || (*var_4h == 9)); var_4h = var_4h + 1) {\n        }\n        if (*var_4h == 0) break;\n        while (((iVar1 = *var_4h,  iVar1 != 0x20 && (iVar1 != 9)) && (iVar1 != 0))) {\n            if (iVar1 == 0x22) {\n                var_4h = var_4h + 1;\n                while ((*var_4h != 0x22 && (*var_4h != 0))) {\n                    fcn.0045a61c(&var_8h, &var_4h);\n                }\n                if (*var_4h == 0x22) {\n                    var_4h = var_4h + 1;\n                }\n            }\n            else {\n                if ((*var_4h == 0x2a) || (*var_4h == 0x3f)) {\n                    bVar2 = true;\n                }\n                fcn.0045a61c(&var_8h, &var_4h);\n            }\n        }\n        *var_8h = 0;\n        var_8h = var_8h + 1;\n        if (bVar2) {\n            (**0x463f18)(puVar4, arg_10h);\n        }\n        else {\n            (*arg_10h)(puVar4, 0);\n        }\n        if (*var_4h == 0) {\n            return 1;\n        }\n        var_4h = var_4h + 1;\n    }\n    return 1;\n}\n",
        "token_count": 809
    },
    "0040147c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040147c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == '\\0') {\n        *0x466520 = arg_8h;\n        **0x466398 = arg_8h;\n    }\n    else {\n        *0x466520 = '\\x01';\n    }\n    *0x466521 = arg_ch != '\\0';\n    *0x46652c = arg_10h;\n    *0x4610ac = arg_10h;\n    *0x4610b0 = 0;\n    *0x4610b4 = 0;\n    *0x466522 = 1;\n    fcn.0040144c();\n    if (*0x466520 == '\\0') {\n        *0x4610b0 = fcn.00423e00();\n        *0x4610b4 = fcn.00423e00();\n        uVar1 = sub.KERNEL32.DLL_GetCommandLineA();\n        **0x46639c = uVar1;\n        **0x4663a4 = arg_14h ^ 1;\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "00401518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401518(void)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    \n    ppcVar2 = *0x4663a0;\n    if (*0x466520 == '\\0') {\n        pcVar1 = **0x4663a0;\n        while (pcVar1 != NULL) {\n            pcVar1 = *ppcVar2;\n            *ppcVar2 = NULL;\n            (*pcVar1)();\n            pcVar1 = *ppcVar2;\n        }\n    }\n    fcn.00401458();\n    return;\n}\n",
        "token_count": 129
    },
    "004016d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004016d4(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < arg_ch) {\n        arg_8h = fcn.0045f150();\n    }\n    fcn.00455058();\n    fcn.004017ac(arg_8h, 0);\n    fcn.0045efac();\n    *(arg_8h + 8) = *(arg_10h + 8);\n    *in_FS_OFFSET = var_24h;\n    if (arg_ch != '\\0') {\n        arg_8h = fcn.0045f15d();\n    }\n    return arg_8h;\n}\n",
        "token_count": 187
    },
    "004017ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004017ac(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_4h;\n    \n    if ('\\0' < arg_ch) {\n        arg_8h = fcn.0045f150();\n    }\n    fcn.00455058();\n    *in_FS_OFFSET = var_24h;\n    if (arg_ch != '\\0') {\n        arg_8h = fcn.0045f15d();\n    }\n    return arg_8h;\n}\n",
        "token_count": 123
    },
    "00401b18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b18(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    if ((arg_ch < 0x80000000) && (arg_ch != 0)) {\n        if (arg_ch == 0) {\n            iVar1 = 0;\n        }\n        else {\n            arg_8h_00 = arg_ch * 2;\n            if (arg_8h_00 < 0x81) {\n                iVar1 = fcn.0045f37c(arg_8h_00);\n            }\n            else {\n                iVar1 = fcn.00454258(arg_8h_00);\n            }\n        }\n        *arg_8h = iVar1;\n        arg_8h[1] = *arg_8h;\n        arg_8h[4] = arg_ch * 2 + *arg_8h;\n    }\n    else {\n        fcn.00401b78(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "004027e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004027e4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.USER32.DLL_FindWindowA(0x402894, 0x402880);\n    uVar2 = sub.USER32.DLL_RegisterWindowMessageA(0x40289c);\n    *in_EAX = uVar2;\n    iVar3 = sub.USER32.DLL_RegisterWindowMessageA(0x4028ac);\n    *in_EDX = iVar3;\n    iVar3 = sub.USER32.DLL_RegisterWindowMessageA(0x4028c4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.USER32.DLL_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.USER32.DLL_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 345
    },
    "004029f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004029f4(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x402a0a;\n    fcn.00422bfc();\n    uStack28 = 0x402ab3;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x466588) == '\\0') {\n        if (*0x466584 == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x466590 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x466570 = fcn.004029f4(),  *0x466590 == '\\0')) {\n                fcn.0042275c();\n            }\n            uVar1 = fcn.00422c0c();\n            in_stack_ffffffd8 = *0x466584;\n            iVar2 = sub.KERNEL32.DLL_GetProcAddress(*0x466584, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x466590 = '\\x01';\n        }\n        *(in_AL + 0x466588) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x402aba;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 430
    },
    "00402adc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402adc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x466588 == '\\0') {\n        *0x466560 = fcn.004029f4();\n        (**0x466560)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.USER32.DLL_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "00402b64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b64(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x46658a == '\\0') {\n        *0x466568 = fcn.004029f4();\n        uVar1 = (**0x466568)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x466560)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x466560)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 231
    },
    "00402bf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402bf4(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x466589 == '\\0') {\n        *0x466564 = fcn.004029f4();\n        uVar1 = (**0x466564)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.USER32.DLL_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.USER32.DLL_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.USER32.DLL_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.00402b64(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 236
    },
    "00402c8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c8c(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x46658b == '\\0') {\n        *0x46656c = fcn.004029f4();\n        uVar1 = (**0x46656c)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x466560)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x466560)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 235
    },
    "00402d24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d24(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x46658c == '\\0') {\n        *0x466570 = fcn.004029f4();\n        uVar1 = (**0x466570)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.USER32.DLL_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x466560)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x466560)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.KERNEL32.DLL_lstrcpyA(arg_ch + 10, 0x402df0);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "00402df8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402df8(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x46658d == '\\0') {\n        *0x466574 = fcn.004029f4();\n        uVar1 = (**0x466574)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.USER32.DLL_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x466560)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x466560)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.KERNEL32.DLL_lstrcpyA(arg_ch + 10, 0x402ec4);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 397
    },
    "00402ecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ecc(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x46658e == '\\0') {\n        *0x466578 = fcn.004029f4();\n        uVar1 = (**0x466578)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.USER32.DLL_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x466560)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x466560)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x4b < *arg_ch) {\n                    sub.KERNEL32.DLL_lstrcpyA(arg_ch + 10, 0x402f98);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 396
    },
    "00402fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402fa0(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x46658f == '\\0') {\n        *0x46657c = fcn.004029f4();\n        uVar1 = (**0x46657c)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x466560)(0);\n            var_10h = (**0x466560)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.USER32.DLL_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.GDI32.DLL_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.GDI32.DLL_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.USER32.DLL_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.USER32.DLL_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.USER32.DLL_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 557
    },
    "004031ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004031ec(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4665c4 != NULL) {\n        iVar2 = (**0x4665c4)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00403218;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00403218:\n    return -uVar1;\n}\n",
        "token_count": 150
    },
    "00403220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403220(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x4665c8 != NULL) {\n        iVar2 = (**0x4665c8)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00403240;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00403240:\n    return -uVar1;\n}\n",
        "token_count": 121
    },
    "00404000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404000(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_20h = 0;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_10h = 0;\n    iVar4 = 0;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (param_1 != 0) {\n        fcn.004227b0();\n    }\n    iVar2 = *(*(var_4h + 0x10) + 8);\n    if (0 < iVar2) {\n        if (-1 < iVar2 + -1) {\n            iVar3 = 0;\n            do {\n                iVar1 = fcn.00411418();\n                iVar1 = (**(**(iVar1 + 4) + 0x10))();\n                if (0 < iVar1) {\n                    iVar4 = iVar4 + 1;\n                    var_10h = iVar3;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (iVar4 == 0) {\n            var_2ch = fcn.00422c0c();\n            var_28h._0_1_ = 6;\n            uVar5 = 0;\n            fcn.00414c68(0, &var_2ch);\n            fcn.004223bc();\n        }\n        if (iVar4 == 1) {\n            iVar2 = fcn.00411418();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        if (1 < iVar4) {\n            var_14h = fcn.00421bf8();\n            iVar4 = *(*(var_4h + 0x10) + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_1ch = fcn.00411418();\n                    iVar2 = (**(**(var_1ch + 4) + 0x10))();\n                    if (0 < iVar2) {\n                        var_18h = (**(**(var_1ch + 4) + 0x14))();\n                        iVar2 = (**(*var_18h + 0x14))();\n                        if (-1 < iVar2 + -1) {\n                            var_ch = 0;\n                            var_24h = iVar2;\n                            do {\n                                (**(*var_18h + 0xc))();\n                                (**(*var_14h + 0x3c))();\n                                var_ch = var_ch + 1;\n                                var_24h = var_24h + -1;\n                            } while (var_24h != 0);\n                        }\n                        fcn.00421c28();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (*(var_4h + 0xc) == 0) {\n                iVar4 = (**(*var_14h + 0x18))();\n                (**(*var_14h + 0xc))();\n                (**(**(iVar4 + 4) + 0x20))();\n            }\n            else {\n                (**(*var_14h + 0x90))();\n                iVar4 = (**(**(var_4h + 0xc) + 0xc))();\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_14h + 0x18))();\n                    (**(*var_14h + 0xc))();\n                    (**(**(iVar4 + 4) + 0x20))();\n                }\n            }\n            fcn.00421c28();\n        }\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.0042275c();\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 1012
    },
    "00404214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404214(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x404307;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004227b0();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.00414c2c();\n        fcn.004223bc();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00411418();\n            fcn.00424460();\n            fcn.0042448c();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                fcn.0042448c();\n                (**(_pe_dos_header + 0x3c))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x40430e;\n    uStack48 = 0x4042fe;\n    fcn.00423230();\n    uStack48 = 0x404306;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 443
    },
    "0040442c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040442c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x40443e;\n    fcn.004244b8();\n    uStack20 = 0x404484;\n    piStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xc) != 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00424448();\n    }\n    fcn.00424460();\n    (**(*param_2 + 4))();\n    *in_FS_OFFSET = param_2;\n    uStack20 = 0x40448b;\n    piStack24 = 0x404483;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 239
    },
    "00404490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404490(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4044a9;\n    fcn.00422bfc();\n    uStack28 = 0x40453a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.00404214();\n    }\n    else if (iVar1 == 2) {\n        fcn.00403d28();\n    }\n    else if (iVar1 == 3) {\n        fcn.00403d58();\n    }\n    else if (iVar1 == 8) {\n        fcn.00404214();\n    }\n    else {\n        fcn.00403ef8(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x404541;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 343
    },
    "004039bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004039bc(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4039d6;\n    fcn.004244b8();\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack28 = 0x403a44;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x4665ec == 0) {\n        puStack24 = &stack0xfffffffc;\n        *0x4665ec = fcn.00403b34();\n    }\n    fcn.00403ba8();\n    fcn.00424460();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x403a4b;\n    uStack28 = 0x403a3b;\n    fcn.00424448();\n    uStack28 = 0x403a43;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 284
    },
    "00403a54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00403a54(void)\n\n{\n    uint *in_EAX;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    if (*0x4665ec == 0) {\n        *0x4665ec = fcn.00403b34();\n        fcn.00424518(*0x4665ec);\n    }\n    fcn.0042448c();\n    return 0;\n}\n",
        "token_count": 101
    },
    "00403d58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00403d58(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x403eea;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(*(in_EAX + 0x10) + 8) == 1) {\n        puStack44 = 0x403d87;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.00411418();\n        puStack44 = 0x403d8f;\n        cVar2 = (**(**(iVar3 + 4) + 0x18))();\n        if (cVar2 != '\\0') {\n            puStack44 = 0x403da1;\n            iVar3 = fcn.00411418();\n            puStack44 = 0x403da9;\n            (**(**(iVar3 + 4) + 0x1c))();\n        }\n    }\n    else {\n        if (*(in_EAX + 0xc) != 0) {\n            puStack44 = 0x403dc4;\n            puStack32 = &stack0xfffffffc;\n            piVar4 = fcn.00421bf8();\n            uStack48 = 0x403e85;\n            uStack52 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffcc;\n            var_ch = *(*(in_EAX + 0x10) + 8);\n            puStack44 = &stack0xfffffffc;\n            puVar1 = &stack0xfffffffc;\n            if (-1 < var_ch + -1) {\n                do {\n                    puStack44 = puVar1;\n                    iVar3 = fcn.00411418();\n                    cVar2 = (**(**(iVar3 + 4) + 0x18))();\n                    if (cVar2 != '\\0') {\n                        (**(**(iVar3 + 4) + 0xc))();\n                        (**(*piVar4 + 0x3c))();\n                    }\n                    var_ch = var_ch + -1;\n                    puVar1 = puStack44;\n                } while (var_ch != 0);\n            }\n            iVar3 = (**(*piVar4 + 0x14))();\n            if (iVar3 < 2) {\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            else {\n                (**(*piVar4 + 0x90))();\n                (**(**(in_EAX + 0xc) + 0x10))();\n                iVar3 = (**(*piVar4 + 0x18))();\n                (**(**(iVar3 + 4) + 0x1c))();\n            }\n            *in_FS_OFFSET = uStack52;\n            puStack44 = 0x403ed4;\n            uStack48 = 0x403e84;\n            fcn.00421c28();\n            return;\n        }\n        puVar1 = &stack0xfffffffc;\n        if (0 < *(*(in_EAX + 0x10) + 8)) {\n            puStack44 = 0x403e9e;\n            iVar3 = fcn.00411418();\n            puStack44 = 0x403ea6;\n            cVar2 = (**(**(iVar3 + 4) + 0x18))();\n            puVar1 = puStack32;\n            if (cVar2 != '\\0') {\n                puStack44 = 0x403eb4;\n                iVar3 = fcn.00411418();\n                puStack44 = 0x403ebc;\n                (**(**(iVar3 + 4) + 0x1c))();\n                goto code_r0x00403ed4;\n            }\n        }\n        puStack32 = puVar1;\n        puStack44 = 0x403ecf;\n        fcn.00414c2c();\n        puStack44 = 0x403ed4;\n        fcn.004223bc();\n    }\ncode_r0x00403ed4:\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x403ef1;\n    uStack36 = 0x403ee9;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 1053
    },
    "00404648": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00404648(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uchar auStack16 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack16;\n    *0x4665e8 = *0x4665e8 + 1;\n    if ((*0x4665e8 == 0) && (*0x4665ec != 0)) {\n        *0x4665ec = 0;\n    }\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 125
    },
    "00407c94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407c94(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00407cb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407cb4(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040f908": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f908(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0040f928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f928(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "00405fe8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fe8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00405f88();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00405f88();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.00421e3c();\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00406058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00406058(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 8) = uVar1;\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.0040732c();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 253
    },
    "00406298": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406298(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00407488();\n            cVar1 = fcn.00406278();\n            if (cVar1 != '\\0') {\n                fcn.00407378();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00407488();\n            cVar1 = fcn.00406278();\n            if (cVar1 != '\\0') {\n                fcn.00407378();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    iVar2 = (**(**(in_EAX + 8) + 0x14))();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            (**(**(in_EAX + 8) + 0x18))();\n            cVar1 = fcn.00406278();\n            if (cVar1 != '\\0') {\n                (**(**(in_EAX + 8) + 0x48))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0040649c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040649c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00407488();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.00406114();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 173
    },
    "00406570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406570(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00406458();\n    if (iVar2 == 0) {\n        fcn.004064e0(&stack0xfffffffc);\n    }\n    fcn.00405f7c();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00407488();\n            if ((iVar3 != iVar2) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00407488();\n                    cVar1 = fcn.00421e3c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00406458(),  iVar4 == iVar2)) {\n                        fcn.00407378();\n                        fcn.0040732c();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "004066fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004066fc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar1) {\n        do {\n            fcn.00407488();\n            fcn.00406298();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0040672c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040672c(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x406741;\n        in_EAX = fcn.00421f74();\n    }\n    puStack48 = 0x406754;\n    fcn.00421bf8();\n    puStack48 = 0x406760;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x406770;\n    fcn.00406638();\n    uStack52 = 0x40682b;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x466600 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00407488();\n            cVar2 = fcn.00406174();\n            if (cVar2 != '\\0') {\n                fcn.0040732c();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x466600 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00407488();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.0040732c();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x406832;\n    uStack52 = 0x40682a;\n    fcn.004066f0();\n    return;\n}\n",
        "token_count": 538
    },
    "00406888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00406888(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4068a5;\n    fcn.00406638();\n    uStack32 = 0x4068ff;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00407488();\n            iVar1 = fcn.00406114();\n            if (iVar1 != 0) {\n                fcn.00422468();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x406906;\n    uStack32 = 0x4068fe;\n    iVar2 = fcn.004066f0();\n    return iVar2;\n}\n",
        "token_count": 291
    },
    "00406c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00406c70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x406c88;\n    iVar1 = fcn.00407850();\n    uStack28 = 0x406cda;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00407488();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 0xc);\n                fcn.00422468();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x406ce1;\n    uStack28 = 0x406cd9;\n    uVar3 = fcn.004078b4();\n    return uVar3;\n}\n",
        "token_count": 301
    },
    "00406cec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00406cec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x406d04;\n    iVar1 = fcn.00407850();\n    uStack28 = 0x406d56;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00407488();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00422468();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x406d5d;\n    uStack28 = 0x406d55;\n    uVar3 = fcn.004078b4();\n    return uVar3;\n}\n",
        "token_count": 300
    },
    "00406dec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406dec(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x466604 == 0) {\n        *0x466604 = fcn.00421bf8();\n    }\n    iVar1 = fcn.004074e4();\n    if (iVar1 < 0) {\n        fcn.0040732c();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00406e2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406e2c(void)\n\n{\n    if (*0x466604 != 0) {\n        fcn.00407628();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "00406e44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00406e44(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x466604 != 0) && (iVar3 = *(*0x466604 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00407488();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00406e84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00406e84(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4665f4 != NULL) {\n        uVar1 = (**0x4665f4)();\n        return uVar1;\n    }\n    uVar1 = fcn.00406e44();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 89
    },
    "00406fb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00406fb4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    fcn.0040143c();\n    fcn.00421c28();\n    iVar1 = fcn.0040143c();\n    iVar1 = *(iVar1 + 4);\n    uVar2 = fcn.00407570();\n    puVar3 = fcn.0040143c();\n    *puVar3 = uVar2;\n    fcn.00407378();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.0040143c();\n        *(iVar1 + 4) = 0;\n        fcn.00421c28();\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004070b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004070b8(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x4070ce;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00416060();\n    uStack24 = 0x407166;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x407178 == (*(var_4h + 0x1c) & *0x407174);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x407103;\n        puStack20 = &stack0xfffffffc;\n        fcn.00406f2c();\n    }\n    uStack36 = 0x407147;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421b70();\n    var_9h = fcn.00407010(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00406f84();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40714e;\n    if (var_ah != '\\0') {\n        uStack36 = 0x407146;\n        fcn.00406fb4();\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "004077c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004077c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4077da;\n    fcn.00407850();\n    uStack20 = 0x407844;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.004074e4();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00407414();\n            }\n            goto code_r0x0040782e;\n        }\n    }\n    fcn.0040732c();\ncode_r0x0040782e:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40784b;\n    uStack20 = 0x407843;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 284
    },
    "0040792c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040792c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00407908(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar2 = (iVar1 >> 5) << 2;\n        iVar1 = *(in_EAX + 4) + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) << 2;\n        if (iVar1 != iVar2) {\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar3 = fcn.00420dc0();\n                fcn.0042153c();\n            }\n            if (iVar1 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00407920();\n                    fcn.00421024();\n                }\n                fcn.00420de0();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "004079d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004079d0(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.00414c2c();\n            fcn.004223bc();\n            return;\n        }\n        fcn.0040792c();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 216
    },
    "00407b90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407bf9)\n\nvoid fcn.00407b90(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x407c25;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00421b78();\n    fcn.004229b8();\n    iVar1 = fcn.00421e24();\n    if (iVar1 != 0) {\n        fcn.00421e24();\n        fcn.00421e24();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.0042275c(0x407c2c);\n    return;\n}\n",
        "token_count": 222
    },
    "00407d94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407dc7)\n\nvoid fcn.00407d94(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x407de9;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00424448();\n    fcn.00407cfc();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x407df0;\n    uStack28 = 0x407de8;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 171
    },
    "00407e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00407e60(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    piVar1 = *(in_EAX + 4);\n    if ((piVar1 != NULL) && (piVar1[3] == 0)) {\n        (**(*piVar1 + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00407ec4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407ec4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x407f59;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    if (*(in_EAX + 4) == 0) {\n        fcn.00421b78();\n        param_2 = 0x407f43;\n        fcn.004229b8();\n    }\n    else {\n        puStack296 = &stack0xfffffffc;\n        fcn.00421e24();\n        fcn.00407e84();\n        fcn.0041339c(param_2);\n    }\n    *in_FS_OFFSET = param_2;\n    uStack300 = 0x407f60;\n    uStack304 = 0x407f58;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 283
    },
    "004080e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004080e4(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[3] == 0) {\n        (**(*in_EAX + 0x1c))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "004080f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004080f4(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x408110;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x40814e;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00407570();\n            fcn.00421c28();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x408155;\n        uStack20 = 0x40814d;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "004081b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408220)\n// WARNING: Removing unreachable block (ram,0x00408230)\n\nvoid fcn.004081b4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed0;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x408262;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00421b78();\n    fcn.004229b8();\n    iVar1 = fcn.00421e24();\n    if (iVar1 != 0) {\n        fcn.00421e24();\n        fcn.00421e24();\n    }\n    *in_FS_OFFSET = in_stack_fffffed0;\n    fcn.00422780(0x408269);\n    return;\n}\n",
        "token_count": 239
    },
    "0040827c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040827c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x408299;\n    fcn.004227b0();\n    puStack36 = 0x4082a5;\n    iVar1 = fcn.00421e24();\n    if ((*param_2 == 0) && (iVar1 != 0)) {\n        puStack36 = 0x4082c8;\n        iVar1 = fcn.00421e50();\n        if (iVar1 != 0) {\n            puStack36 = 0x4082da;\n            fcn.00421e50();\n            puStack36 = 0x4082df;\n            iVar1 = fcn.0041048c();\n            if ((iVar1 != 0) && (*(iVar1 + 8) != 0)) {\n                puStack36 = 0x408300;\n                iVar2 = fcn.00420dc0();\n                uStack40 = 0x408379;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00421e50();\n                fcn.004106ac();\n                iVar1 = *(iVar1 + 8);\n                if (-1 < iVar1 + -1) {\n                    iVar4 = 0;\n                    do {\n                        if (****(iVar2 + iVar4 * 4) == '\\a') {\n                            iVar3 = fcn.00410730();\n                            if (iVar3 == in_EAX) {\n                                fcn.004229b8();\n                            }\n                        }\n                        iVar4 = iVar4 + 1;\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                *in_FS_OFFSET = uStack44;\n                puStack36 = 0x408380;\n                uStack40 = 0x408378;\n                fcn.00420de0();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "00408648": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408648(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[2] = in_EAX[2] + 1;\n    return;\n}\n",
        "token_count": 72
    },
    "00408704": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408704(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[2] = in_EAX[2] + -1;\n    if (in_EAX[2] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00408fc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00408fc8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x10))();\n    }\n    fcn.00424460();\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0040904c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040904c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x409100;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x409073;\n    fcn.00408648();\n    uStack36 = 0x4090e3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1) {\n            }\n            fcn.0042284c();\n            (**(*in_EAX + 0x38))();\n            if (*param_2 == '\\r') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '\\n') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4090ea;\n    uStack36 = 0x4090e2;\n    fcn.00408704();\n    return;\n}\n",
        "token_count": 419
    },
    "0040952c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040952c(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 7) != '\\0') {\n        fcn.004087fc();\n    }\n    if ((in_EDX < 0) || (in_EAX[5] < in_EDX)) {\n        fcn.004087fc();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 116
    },
    "0040988c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040988c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EAX;\n    uint *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x004098a4:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x004098ce;\n            }\n            else if (arg_ch < 1) goto code_r0x004098ce;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x004098a4;\n    fcn.00414c2c();\n    fcn.004223bc();\n    in_EAX = extraout_ECX;\ncode_r0x004098ce:\n    (***in_EAX)();\n    return;\n}\n",
        "token_count": 200
    },
    "0040992c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040992c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x14);\n    var_4h = in_EAX;\n    var_20h = fcn.00421b70();\n    while ((var_20h != 0 && (var_20h != *0x40543c))) {\n        var_20h = fcn.00421bb4();\n    }\n    if (var_20h == 0) {\n        fcn.004098e0(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x14);\n    if (var_10h == unique0x00007a00) {\n        fcn.004098e0(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x14))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 289
    },
    "004099b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.004099b0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x004099cf:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x004099f9;\n            }\n            else if (arg_ch < 1) goto code_r0x004099f9;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x004099cf;\n    fcn.00414c2c();\n    fcn.004223bc();\ncode_r0x004099f9:\n    iVar1 = (**(*in_EAX + 0x10))();\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "00409a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409a90(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        puStackY52 = 0x409ab5;\n        fcn.00409814(0, 0);\n        puStackY52 = 0x409abc;\n        iVar2 = fcn.00409828();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x00409aea:\n            var_14h = arg_8h;\n            goto code_r0x00409af0;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x00409aea;\n    var_14h = 0xf000;\ncode_r0x00409af0:\n    puStackY52 = 0x409af8;\n    fcn.00420dc0();\n    uStackY56 = 0x409b6d;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStackY52 = &stack0xfffffffc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY60;\n            puStackY52 = 0x409b74;\n            uStackY56 = 0x409b6c;\n            fcn.00420de0();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x00409b22:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x00409b22;\n        fcn.00409a20();\n        fcn.00409a58();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 614
    },
    "00409d48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00409d48(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_DL = extraout_DL;\n    }\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        fcn.00412a70();\n        fcn.00409c40();\n        if (*(in_EAX + 4) < 0) {\n            var_8h._0_1_ = 0xb;\n            fcn.00414c68(0, &var_ch);\n            fcn.004223bc();\n        }\n    }\n    else {\n        fcn.004129f0();\n        fcn.00409c40();\n        if (*(in_EAX + 4) < 0) {\n            var_8h._0_1_ = 0xb;\n            fcn.00414c68(0, &var_ch);\n            fcn.004223bc();\n        }\n    }\n    if (var_1h != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack44;\n    }\n    return in_EAX;\n}\n",
        "token_count": 351
    },
    "0040a37c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040a37c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.0042284c();\n        fcn.00422cac();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 132
    },
    "0040a458": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a458(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40a4fe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.0042284c();\n            iVar2 = fcn.0040f640();\n            if ((iVar2 == 0) && (cVar1 = fcn.00412700(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a505;\n    uStack32 = 0x40a4fd;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 396
    },
    "0040a5a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040a5a0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x40a5b3;\n    fcn.00416060();\n    uStack36 = 0x40a739;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x40a5cb;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = fcn.00407850();\n    uStack48 = 0x40a71a;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x40a721;\n        uStack48 = 0x40a719;\n        fcn.004078b4();\n        return;\n    }\n    puStack56 = 0x40a5f1;\n    puStack44 = &stack0xfffffffc;\n    fcn.00421bf8();\n    uStack60 = 0x40a6fb;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x40a60e;\n    puStack56 = &stack0xfffffffc;\n    fcn.00421bf8();\n    uStack72 = 0x40a6a9;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar5 = 0;\n    puStack68 = &stack0xfffffffc;\n    do {\n        while( true ) {\n            if (*(iVar1 + 8) <= iVar5) {\n                *in_FS_OFFSET = uStack76;\n                puStack68 = 0x40a6b0;\n                uStack72 = 0x40a6a8;\n                fcn.00421c28();\n                return;\n            }\n            puVar2 = fcn.00407488();\n            iVar3 = fcn.00406e44();\n            if (iVar3 == 0) break;\ncode_r0x0040a64e:\n            if (iVar3 != 0) {\n                fcn.0040a458();\n                (***puVar2)();\n            }\n            fcn.0040a520(&stack0xfffffffc);\n            fcn.00407378();\n            fcn.00421c28();\n        }\n        iVar4 = fcn.00410730();\n        if (iVar4 != 0) goto code_r0x0040a64e;\n        fcn.0040a558(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 742
    },
    "0040a748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a748(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x466608 == 0) {\n        return;\n    }\n    puStack28 = 0x40a76e;\n    iVar2 = fcn.00407850();\n    uStack32 = 0x40a7e3;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00407488();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00412700();\n                    if (cVar1 == '\\0') goto code_r0x0040a7c5;\n                }\n                fcn.00407378();\n                fcn.00421c28();\n            }\ncode_r0x0040a7c5:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a7ea;\n    uStack32 = 0x40a7e2;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 392
    },
    "0040a7f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040a7f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x466608 != 0) {\n        puStack24 = 0x40a811;\n        iVar1 = fcn.00407850();\n        uStack28 = 0x40a86b;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00407488();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.00407378();\n                    fcn.00421c28();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x40a872;\n        uStack28 = 0x40a86a;\n        fcn.004078b4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0040a928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a928(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00412700();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.0042275c();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0040a95c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a95c(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x40a975;\n    cVar1 = fcn.00412700();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x40a990;\n        cVar1 = fcn.0040c628();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x40a9a2;\n            fcn.0040c738();\n            *(in_EAX + 0x78) = 1;\n            puStack24 = 0x40a9ae;\n            fcn.0040a890();\n        }\n        puStack24 = 0x40a9ba;\n        puVar2 = fcn.00421bf8();\n        uStack28 = 0x40aa1c;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040ada0();\n        (***puVar2)();\n        fcn.0040ada0();\n        *(in_EAX + 0x78) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x40aa23;\n        uStack28 = 0x40aa1b;\n        fcn.00421c28();\n        return;\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "0040aad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040aad4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x40aae6;\n    iVar1 = fcn.00407850();\n    uStack24 = 0x40ab44;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00407488();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00421c28();\n                fcn.00407378();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40ab4b;\n    uStack24 = 0x40ab43;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 297
    },
    "0040afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040afc0(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40b0a6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x40afe5;\n    iVar2 = fcn.0040cabc();\n    *(arg_8h + -0x10) = 0;\n    if (*(*(arg_8h + -0xc) + 0x6a) != 0) {\n        puStack32 = arg_8h + -0x10;\n        uStack36 = 0x40b017;\n        (**(*(arg_8h + -0xc) + 0x68))();\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        puStack32 = 0x40b025;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x10) = uVar3;\n        if ((*(arg_8h + -1) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x10) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x10) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x40b07a;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x10) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x10) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 542
    },
    "0040b3ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040b3ec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x40b40b;\n        uVar1 = fcn.00421bf8();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x40b447;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0040b45c();\n        fcn.0040ab50();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x40b458;\n        uStack20 = 0x40b446;\n        fcn.0040ac94();\n        return;\n    }\n    puStack16 = 0x40b458;\n    fcn.0040b45c();\n    return;\n}\n",
        "token_count": 259
    },
    "0040b838": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040b838(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x40b929;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.0042275c();\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        fcn.004227f4();\n    }\n    if (var_4h == 0) {\n        fcn.00421b78();\n        fcn.004229b8();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x46617c;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.00414c68(3, &var_124h);\n    fcn.004223bc();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x40b930;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 461
    },
    "0040b954": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b954(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack44 = 0x40bb24;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x40bad9;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x40b98f;\n    fcn.0040c44c();\n    uStack68 = 0x40bab2;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    iVar4 = 1;\n    puStack64 = &stack0xfffffffc;\n    iVar2 = fcn.00422a14();\n    *(in_EAX + 0x78) = 1;\n    var_10h = param_2;\n    while( true ) {\n        for (; (iVar4 <= iVar2 && (*(iVar4 + -1) != '.')); iVar4 = iVar4 + 1) {\n        }\n        iStack72 = in_EAX + 0x70;\n        fcn.00422c6c();\n        if (iVar2 < iVar4) break;\n        fcn.00421e50();\n        puVar3 = fcn.0041063c();\n        if (puVar3 == NULL) {\n            fcn.0040ad8c();\n        }\n        var_14h = NULL;\n        if (***puVar3 == '\\a') {\n            var_14h = fcn.00410730();\n        }\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            fcn.0040b938(&stack0xfffffffc);\n        }\n        var_10h = var_14h;\n        iVar4 = iVar4 + 1;\n    }\n    fcn.00421e50();\n    iVar2 = fcn.0041063c();\n    if (iVar2 == 0) {\n        *(in_EAX + 0x78) = 0;\n        (**(*var_10h + 4))();\n        *(in_EAX + 0x78) = 1;\n        if (*(in_EAX + 0x70) != 0) {\n            fcn.0040ad8c();\n        }\n    }\n    else {\n        fcn.0040bcd8();\n    }\n    *in_FS_OFFSET = iStack72;\n    *in_FS_OFFSET = iStack60;\n    *in_FS_OFFSET = iStack48;\n    puStack40 = 0x40bb2b;\n    uStack44 = 0x40bb23;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 778
    },
    "0040bcd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0040bcd8(uint param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_ch = NULL;\n    var_18h = 0x40bfd3;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040bcd8::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00410730();\n            cVar2 = fcn.00421db4();\n            puVar1 = var_14h;\n            if (cVar2 != '\\0') {\n                iVar3 = fcn.00410730();\n                puVar1 = var_14h;\n                if ((*(iVar3 + 0x24) & 4) != 0) goto code_r0x0040bd4d;\n            }\n        }\n        var_14h = puVar1;\n        fcn.0040a878();\n        puVar1 = var_14h;\n    }\ncode_r0x0040bd4d:\n    var_14h = puVar1;\n    if (***var_ch < 0x11) {\n    // switch table (17 cases) at 0x40bd68\n        switch(*(***var_ch * 4 + 0x40bd68)) {\n        case 0x40bdac:\n            cVar2 = fcn.0040ad7c();\n            if (cVar2 == '\\a') {\n                fcn.0040b638();\n                fcn.0040bb34();\n            }\n            else {\n                fcn.0040b738();\n                fcn.004107a4();\n            }\n            break;\n        case 0x40bdf0:\n            fcn.0040ae3c();\n            fcn.004107a4();\n            break;\n        case 0x40be0c:\n            fcn.0040b638();\n            fcn.004105d8();\n            fcn.004107a4();\n            break;\n        case 0x40be33:\n            Var4 = fcn.0040b52c();\n            var_28h = Var4;\n            var_24h = Var4 >> 0x20;\n            fcn.00410d78(var_28h, var_24h, CONCAT22(0x40, Var4 >> 0x40));\n            break;\n        case 0x40be52:\n            fcn.0040c488();\n            fcn.00410a78();\n            break;\n        case 0x40be70:\n            fcn.0040c544();\n            fcn.00410b8c();\n            break;\n        case 0x40be8e:\n            fcn.0040c36c();\n            fcn.004107a4();\n            break;\n        case 0x40beaa:\n            cVar2 = fcn.0040ad7c();\n            if (cVar2 == '\\r') {\n                fcn.0040c628();\n                fcn.004107a4();\n            }\n            else if (cVar2 == '\\x0e') {\n                fcn.0040c628();\n                fcn.00410730();\n                fcn.0040ae94();\n            }\n            else {\n                fcn.0040b638();\n                var_24h = 0x40bf12;\n                fcn.0040bb7c(&stack0xfffffffc);\n            }\n            break;\n        case 0x40bf18:\n            cVar2 = fcn.0040ad7c();\n            if (cVar2 == '\\r') {\n                fcn.0040c628();\n                fcn.00411044();\n            }\n            else {\n                fcn.0040b638();\n                var_14h = (**(*var_4h + 0x18))();\n                var_10h = var_4h[6];\n                if (var_14h != NULL) {\n                    fcn.00411044();\n                }\n            }\n            break;\n        case 0x40bf7c:\n            var_24h = 0x40bf82;\n            fcn.0040bbbc(&stack0xfffffffc);\n            break;\n        case 0x40bf85:\n            uVar5 = fcn.0040b7a4();\n            var_24h = uVar5;\n            fcn.004110a4(var_24h, uVar5 >> 0x20);\n            break;\n        case 0x40bf9c:\n            var_24h = 0x40bfa2;\n            fcn.0040bc18(&stack0xfffffffc);\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x40bfda;\n    fcn.00422780();\n    fcn.00422e4c();\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 1376
    },
    "0040c040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c040(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x40c35b;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x40c079;\n    fcn.0040c428();\n    puStack80 = 0x40c088;\n    fcn.00416060();\n    uStack84 = 0x40c339;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x40c2fa;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x24))();\n    if (param_2 == NULL) {\n        fcn.0040c44c();\n        iVar1 = fcn.004069dc();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0040c44c();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0040c44c();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0040c44c();\n            fcn.0040bfe0();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0040c44c();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x40c158;\n    fcn.00421b70();\n    puStackY108 = 0x40c166;\n    iVar1 = fcn.0040672c(arg_8h);\n    in_EAX[0x1d] = iVar1;\n    uStackY112 = 0x40c29f;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x40c188;\n    puStackY108 = &stack0xfffffffc;\n    piVar2 = fcn.0040143c();\n    iVar1 = *piVar2;\n    if (iVar1 == 0) {\n        puStackY120 = 0x40c1ae;\n        iVar3 = fcn.00421bf8();\n        in_EAX[0xd] = iVar3;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x40c27f;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar3 = fcn.004074e4();\n    if (iVar3 < 0) {\n        fcn.0040732c();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar3 = *(in_EAX[0xd] + 8),  -1 < iVar3 + -1)) {\n        do {\n            piVar2 = fcn.00407488();\n            (**(*piVar2 + 0xc))();\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x40c286;\n    if (iVar1 == 0) {\n        uStackY124 = 0x40c276;\n        fcn.00421c28();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1279
    },
    "0040c36c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c3cb)\n// WARNING: Removing unreachable block (ram,0x0040c3da)\n\nvoid fcn.0040c36c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x40c416;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40c3e9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0040c628();\n    if (cVar1 != '\\v') {\n        fcn.0040a890();\n    }\n    fcn.0041048c();\n    fcn.0040c44c();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40c41d;\n    uStack32 = 0x40c415;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 318
    },
    "0040c63c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040c63c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x40c678;\n    fcn.0040c44c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40c67f;\n    uStack20 = 0x40c677;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 151
    },
    "0040c9c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040c9c4(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004227f4();\n    var_4h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_4h = fcn.0040f640();\n    }\n    if (var_4h == 0) {\n        if (*(in_EAX + 0x52) != 0) {\n            (**(in_EAX + 0x50))(&var_4h, param_1);\n        }\n        if (var_4h == 0) {\n            var_10h = var_8h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.00414c68(0, &var_10h);\n            fcn.004223bc();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 312
    },
    "0040cabc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.0040cabc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0040acd0();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0040acd0();\n    }\n    if (*(in_EAX + 0x62) != 0) {\n        (**(in_EAX + 0x60))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.00421e3c();\n        if (cVar1 != '\\0') goto code_r0x0040cb26;\n    }\n    fcn.0040691c();\ncode_r0x0040cb26:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 227
    },
    "0040cf7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cf7c(code *arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.0040edac();\n        (*arg_8h)();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0040cfa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cfa4(uint arg_8h, uint arg_ch)\n\n{\n    char in_CL;\n    \n    if ((in_CL != '\\0') && (arg_8h._2_2_ != 0)) {\n        fcn.0040edac();\n        fcn.0040d088(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "0040d27c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d27c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_8h = *(in_EAX + 0x20);\n    var_ch = *(in_EAX + 0x28);\n    uStack36 = 0x40d34a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *(param_2 + 7) = *(param_2 + 7) | 4;\n    puVar1 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if (*(in_EAX + 0x30) != 0) {\n        uVar3 = fcn.0040d22c(&stack0xfffffffc);\n        *(var_4h + 0x20) = uVar3;\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(var_4h + 0x42) != 0) {\n        if (*(var_4h + 0x20) != 0) {\n            cVar2 = fcn.00421db4();\n            if (cVar2 == '\\0') goto code_r0x0040d31b;\n        }\n        var_10h = *(var_4h + 0x20);\n        (**(var_4h + 0x40))(var_4h + 0x28, &var_10h, param_2[2]);\n        *(var_4h + 0x20) = var_10h;\n    }\ncode_r0x0040d31b:\n    (**(*param_2 + 0x24))();\n    *(param_2 + 7) = *(param_2 + 7) & 0xfffb;\n    *in_FS_OFFSET = uStack40;\n    *(var_4h + 0x20) = var_8h;\n    *(var_4h + 0x28) = var_ch;\n    return;\n}\n",
        "token_count": 538
    },
    "0040d358": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040d358(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char cVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    code **in_FS_OFFSET;\n    code *pcVar9;\n    code *pcStack372;\n    uint uStack368;\n    uchar *puStack364;\n    code *pcStack360;\n    uint uStack356;\n    uchar *puStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    code *pcStack336;\n    uint uStack332;\n    uchar *puStack328;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_25h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack328 = &stack0xfffffffc;\n    puStack364 = &stack0xfffffffc;\n    uStack332 = 0x40d734;\n    pcStack336 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb0;\n    uStack340 = 0x40d3a1;\n    fcn.00421b78();\n    uStack340 = 0x40d3b4;\n    iVar7 = fcn.00422a14();\n    if (*(in_EAX + 0xc) - *(in_EAX + 0x10) < var_128h + iVar7 + 9) {\n        uStack340 = 0x40d3d5;\n        fcn.0040d110();\n    }\n    uStack340 = 0x40d3dd;\n    fcn.0040cfd0();\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x34) < *(*(in_EAX + 0x30) + 8))) && (*(in_EAX + 0x20) != 0)) {\n        uStack340 = 0x40d454;\n        fcn.00407488();\n    }\n    uStack340 = 0x40d471;\n    fcn.0040d9b0();\n    if (*(in_EAX + 0x48) == '\\0') {\n        uStack340 = 0x40d4fc;\n        fcn.00421b78();\n        uStack340 = 0x40d50d;\n        fcn.004229b8();\n        uStack340 = 0x40d51b;\n        fcn.0040ee10();\n    }\n    else {\n        uStack340 = 0x40d482;\n        fcn.00421b70();\n        uStack340 = 0x40d487;\n        fcn.00421e50();\n        uStack340 = 0x40d48c;\n        fcn.0041048c();\n        uStack340 = 0x40d49a;\n        fcn.004229b8();\n        uStack340 = 0;\n        uStack344 = 0x40d750;\n        uStack348 = 0x40d4b5;\n        fcn.00421b78();\n        uStack348 = 0x40d4c6;\n        fcn.004229b8();\n        uStack348 = 0;\n        puStack352 = 0x40d4dc;\n        fcn.00422ad4();\n        puStack352 = 0x40d4ea;\n        fcn.0040ee10();\n    }\n    puStack352 = 0x40d529;\n    fcn.0040ee10();\n    puStack352 = 0x40d531;\n    fcn.0040cfd0();\n    if ((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x34) < *(*(in_EAX + 0x30) + 8))) {\n        if (*(in_EAX + 0x20) != 0) {\n            *(in_EAX + 0x34) = *(in_EAX + 0x34) + 1;\n        }\n        *(in_EAX + 0x38) = *(in_EAX + 0x38) + 1;\n    }\n    puStack352 = 0x40d569;\n    fcn.0040d9f4();\n    puStack352 = 0x40d571;\n    fcn.0040d9a8();\n    uVar8 = *(in_EAX + 0x30);\n    uVar1 = *(in_EAX + 0x34);\n    uVar2 = *(in_EAX + 0x38);\n    uVar3 = *(in_EAX + 0x18);\n    uVar4 = *(in_EAX + 0x28);\n    uStack356 = 0x40d6d5;\n    pcStack360 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe98;\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    if (*(in_EAX + 0x24) != '\\0') {\n        *in_FS_OFFSET = pcStack360;\n        *(in_EAX + 0x30) = uVar8;\n        *(in_EAX + 0x34) = uVar1;\n        *(in_EAX + 0x38) = uVar2;\n        *(in_EAX + 0x18) = uVar3;\n        *(in_EAX + 0x28) = uVar4;\n        return;\n    }\n    uStack368 = 0x40d693;\n    pcStack372 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    puVar5 = &stack0xfffffffc;\n    puStack352 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x20) != 0) &&\n       (puStack352 = &stack0xfffffffc,  cVar6 = fcn.00421db4(),  puVar5 = puStack364,  cVar6 != '\\0')) {\n        iVar7 = *(in_EAX + 0x20);\n        cVar6 = fcn.00421db4();\n        if ((cVar6 != '\\0') && ((*(iVar7 + 0x1d) & 2) != 0)) {\n            *(in_EAX + 0x28) = iVar7;\n        }\n        uVar8 = fcn.00421bf8();\n        *(in_EAX + 0x30) = uVar8;\n        fcn.00421e24(0x40cf70, in_EAX);\n        puVar5 = puStack364;\n    }\n    puStack364 = puVar5;\n    if ((*(param_2 + 0x1d) & 2) != 0) {\n        *(in_EAX + 0x18) = param_2;\n    }\n    pcVar9 = fcn.0040d27c;\n    fcn.00421e24(fcn.0040d27c, in_EAX);\n    *in_FS_OFFSET = pcVar9;\n    fcn.00421c28(0x40d69a);\n    return;\n}\n",
        "token_count": 1713
    },
    "0040d948": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d948(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == -1) {\n        if (arg_8h < 0x80000000) goto code_r0x0040d982;\n    }\n    else if (arg_ch < -1) goto code_r0x0040d982;\n    if (arg_ch == 0) {\n        if (arg_8h < 0x80000000) {\ncode_r0x0040d974:\n            fcn.0040d8d4();\n            return;\n        }\n    }\n    else if (arg_ch < 1) goto code_r0x0040d974;\ncode_r0x0040d982:\n    fcn.0040eff8();\n    fcn.0040d03c();\n    return;\n}\n",
        "token_count": 188
    },
    "0040d9f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d9f4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x40da0d;\n    fcn.00421e50();\n    puStack36 = 0x40da12;\n    iVar2 = fcn.0041048c();\n    iVar2 = *(iVar2 + 8);\n    if (iVar2 < 1) {\n        puStack36 = 0x40dab3;\n        (**(*param_2 + 4))();\n        return;\n    }\n    puStack36 = 0x40da2e;\n    iVar3 = fcn.00420dc0();\n    uStack40 = 0x40daa1;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421e50();\n    fcn.004106ac();\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            if (*(iVar3 + iVar4 * 4) == 0) break;\n            cVar1 = fcn.00410700();\n            if (cVar1 != '\\0') {\n                fcn.0040e89c();\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x40daa8;\n    uStack40 = 0x40daa0;\n    fcn.00420de0();\n    return;\n}\n",
        "token_count": 448
    },
    "0040dabc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dabc(int32_t arg_8h)\n\n{\n    char cVar1;\n    \n    if ((*(*(arg_8h + -4) + 0x20) != 0) && (*(*(arg_8h + -4) + 0x28) != 0)) {\n        fcn.00421b70();\n        cVar1 = fcn.00421e3c();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "0040ded0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ded0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    ulong uVar3;\n    \n    cVar1 = fcn.0040dabc(*(arg_8h + 8));\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.0041107c();\n        bVar2 = uVar3 >> 0x20 == *(arg_8h - 4);\n        if (bVar2) {\n            bVar2 = uVar3 == *(arg_8h - 8);\n        }\n        return uVar3 & 0xffffff00 | bVar2;\n    }\n    bVar2 = *(arg_8h - 4) == 0;\n    if (bVar2) {\n        bVar2 = *(arg_8h - 8) == 0;\n    }\n    return arg_8h & 0xffffff00 | bVar2;\n}\n",
        "token_count": 217
    },
    "0040e074": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e074(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40e163;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    iVar1 = *(*(arg_8h + -4) + 0x1c);\n    if (iVar1 == *(in_EAX + 4)) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    else if (iVar1 == in_EAX) {\n        puStack24 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    else if (((*(in_EAX + 4) == 0) || (*(*(in_EAX + 4) + 8) == 0)) || (*(in_EAX + 8) == 0)) {\n        if (*(in_EAX + 8) == 0) {\n            fcn.0042275c();\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            fcn.00422a60();\n        }\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        cVar2 = fcn.0040e05c();\n        if (cVar2 == '\\0') {\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.00422ad4(in_stack_ffffffd4, 0x40e188, *(*(in_EAX + 4) + 8));\n        }\n        else {\n            fcn.0040e074(arg_8h);\n            in_stack_ffffffd4 = *(in_EAX + 8);\n            fcn.00422ad4(in_stack_ffffffd4, 0x40e188, 0);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    fcn.0042275c(0x40e16a);\n    return;\n}\n",
        "token_count": 507
    },
    "0040e244": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e244(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x40e45c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = fcn.00410730();\n    if (var_4h == 0) {\n        uStack44 = 0x40e27c;\n        cVar1 = fcn.0040e1e4(&stack0xfffffffc);\n        if (cVar1 == '\\0') {\n            uStack44 = 0x40e28a;\n            fcn.0040db04(arg_8h);\n            fcn.0040eff8();\n            goto code_r0x0040e441;\n        }\n    }\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00421db4();\n        if ((cVar1 == '\\0') || ((*(var_4h + 0x24) & 4) != 0)) {\n            var_8h = *(*(arg_8h + -4) + 0x20);\n            fcn.004227f4();\n            uStack44 = 0x40e3d8;\n            uStack48 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd0;\n            fcn.004229b8(*(*(arg_8h + -4) + 0x2c));\n            uVar3 = 0x40e470;\n            fcn.00422ad4(0x40e470, var_14h);\n            cVar1 = fcn.0040dabc(arg_8h);\n            if (cVar1 != '\\0') {\n                uVar2 = fcn.00410730();\n                *(*(arg_8h + -4) + 0x20) = uVar2;\n            }\n            fcn.0040d9f4();\n            *in_FS_OFFSET = uVar3;\n            *(*(arg_8h + -4) + 0x20) = var_8h;\n            fcn.004227b0(0x40e3df);\n            return;\n        }\n        uStack44 = 0x40e2d4;\n        cVar1 = fcn.0040e1e4(&stack0xfffffffc);\n        if (cVar1 == '\\0') {\n            uStack44 = 0x40e2ec;\n            fcn.0040e074(arg_8h);\n            if (var_10h != 0) {\n                uStack44 = 0x40e300;\n                fcn.0040db04(arg_8h);\n                fcn.0040d810();\n            }\n        }\n    }\ncode_r0x0040e441:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40e463;\n    uStack32 = 0x40e45b;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 824
    },
    "0040e474": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e474(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40e528;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.0040dabc(*(arg_8h + 8));\n    if (cVar1 != '\\0') {\n        fcn.004110e0();\n        if (*(arg_8h + -4) != 0) {\n            fcn.00424448();\n            cVar1 = fcn.00416350();\n            if (cVar1 != '\\0') {\n                arg_8h_00 = *(arg_8h + 8);\n                (**(_pe_dos_header + 0xc))();\n                fcn.0040e19c(arg_8h_00);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40e52f;\n    uStack24 = 0x40e51f;\n    fcn.00424448();\n    uStack24 = 0x40e527;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 330
    },
    "0040e548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e548(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = NULL;\n    var_10h = 0;\n    var_14h = 0;\n    uStack32 = 0x40e64b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004110e0();\n    if (var_4h != 0) {\n        fcn.00424448();\n        cVar1 = fcn.00416350();\n        if (cVar1 != '\\0') {\n            var_8h = (**(*var_ch + 0xc))();\n            cVar1 = fcn.0040e474(&stack0xfffffffc);\n            if (cVar1 == '\\0') {\n                fcn.0040e074(arg_8h);\n                if (var_10h != 0) {\n                    fcn.0040db04(arg_8h);\n                    fcn.0040d810();\n                }\n            }\n            goto code_r0x0040e61d;\n        }\n    }\n    cVar1 = fcn.0040dabc(arg_8h);\n    if (cVar1 != '\\0') {\n        fcn.004110e0();\n        if (var_14h != 0) {\n            fcn.0040db04(arg_8h);\n            fcn.0040eff8();\n        }\n    }\ncode_r0x0040e61d:\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40e652;\n    uStack32 = 0x40e632;\n    fcn.00424448();\n    uStack32 = 0x40e63a;\n    fcn.0042275c();\n    uStack32 = 0x40e642;\n    fcn.00424448();\n    uStack32 = 0x40e64a;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 539
    },
    "0040e668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040e668(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_108h;\n    int32_t var_8h;\n    \n    cVar1 = fcn.0040dabc(*(arg_8h + 8));\n    iVar3 = 0;\n    if (cVar1 != '\\0') {\n        fcn.00411004();\n        iVar3 = var_8h;\n    }\n    if (iVar3 == *(arg_8h + -8)) {\ncode_r0x0040e6e3:\n        uVar2 = 1;\n    }\n    else {\n        if (*(arg_8h + -8) != 0) {\n            fcn.00421ee4();\n            if (var_108h == '\\0') goto code_r0x0040e6e3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 231
    },
    "0040e89c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __fastcall fcn.0040e89c(uint *param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_1[1] == 0) {\n        return;\n    }\n    if (param_1[2] == 0) {\n        if (***param_1 != '\\a') {\n            return;\n        }\n        fcn.00410730(param_2);\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            return;\n        }\n        iVar2 = fcn.00410730(param_2);\n        if ((*(iVar2 + 0x24) & 4) == 0) {\n            return;\n        }\n    }\n    // switch table (17 cases) at 0x40e924\n    switch(***param_1) {\n    case 1:\n    case 2:\n    case 3:\n    case 6:\n        fcn.0040dd58(&stack0xfffffffc);\n        break;\n    case 4:\n        fcn.0040de84(&stack0xfffffffc);\n        break;\n    case 5:\n    case 10:\n    case 0xb:\n        fcn.0040dff0(&stack0xfffffffc);\n        break;\n    case 7:\n        fcn.0040e244(&stack0xfffffffc);\n        break;\n    case 8:\n        fcn.0040e6ec(&stack0xfffffffc);\n        break;\n    case 0xc:\n        fcn.0040e82c(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0040e548(&stack0xfffffffc);\n        break;\n    case 0x10:\n        fcn.0040df20(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "0040f00c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040f00c(void)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStackY64;\n    uchar *puStackY60;\n    int32_t iStackY56;\n    uint uStackY52;\n    uchar *puStackY48;\n    uint uStackY44;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    uVar1 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    if (uVar1 != **0x466394) {\n        var_10h = sub.KERNEL32.DLL_GetCurrentThreadId();\n        var_ch._0_1_ = 0;\n        uStackY44 = 0x40f048;\n        fcn.00414c68(0, &fcn.0040f00c::var_10h);\n        uStackY44 = 0x40f04d;\n        uVar1 = fcn.004223bc();\n    }\n    if (*0x46660c == '\\0') {\n        return uVar1 & 0xffffff00;\n    }\n    uStackY44 = 0x466610;\n    puStackY48 = 0x40f064;\n    sub.KERNEL32.DLL_EnterCriticalSection();\n    uStackY52 = 0x40f122;\n    iStackY56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((*0x461538 == 0) || (*(*0x461538 + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    puStackY48 = &fcn.0040f00c::var_1h + 1;\n    if (var_1h != '\\0') {\n        while (0 < *(*0x461538 + 8)) {\n            puStackY60 = 0x40f0a3;\n            var_8h = fcn.00407488();\n            puStackY60 = 0x40f0b2;\n            fcn.00407378();\n            iStackY64 = 0x40f0d5;\n            iStackY68 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffbc;\n            puStackY60 = &fcn.0040f00c::var_1h + 1;\n            (**(*var_8h + 0x20))();\n            *in_FS_OFFSET = iStackY64;\n            iStackY56 = var_8h[1];\n            puStackY60 = 0x40f0f8;\n            sub.KERNEL32.DLL_SetEvent();\n        }\n        *0x46660c = '\\0';\n    }\n    *in_FS_OFFSET = iStackY56;\n    puStackY48 = 0x40f12d;\n    uStackY52 = 0x466610;\n    iStackY56 = 0x40f121;\n    uVar1 = sub.KERNEL32.DLL_LeaveCriticalSection();\n    return uVar1;\n}\n",
        "token_count": 741
    },
    "0040f184": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040f184(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00421fdc();\n    fcn.0040f3d8();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00407488();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.00416340();\n    }\n    fcn.0040f380();\n    if (*(iVar1 + 4) != 0) {\n        fcn.0040f348();\n    }\n    fcn.00407a74();\n    if ('\\0' < extraout_DL) {\n        fcn.00421fc4();\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0040f208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f208(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00421bf8();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.004074e4();\n        if (iVar2 < 0) {\n            fcn.0040732c();\n            fcn.0040f208();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 206
    },
    "0040f29c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f29c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00421bf8();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0040732c();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 115
    },
    "0040f2c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f2c8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.00407628();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00421c28();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040f414": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040f414(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.00407628();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00421c28();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0040f454": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f454(char param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.0040f438();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar3 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar3) {\n            piVar2 = fcn.00407488();\n            (**(*piVar2 + 0x10))();\n            iVar3 = iVar3 + -1;\n            iVar1 = *(*(in_EAX + 0x10) + 8);\n            if (iVar1 <= iVar3) {\n                iVar3 = iVar1 + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0040f5a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040f5a8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00412700();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.0040f640();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.00414c68(0, &var_ch);\n                fcn.004223bc();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040f640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f640(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00407488();\n            cVar1 = fcn.00412700();\n            if (cVar1 != '\\0') goto code_r0x0040f685;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x0040f685:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 207
    },
    "0040f730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040f730(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00407414();\n    }\n    fcn.00407488();\n    return;\n}\n",
        "token_count": 60
    },
    "0040f7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f7c0(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.0040f75c(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.0040f730();\n            fcn.0040f7c0();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0040f8c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f8c8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00421cdc();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 164
    },
    "0040faa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040faa4(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00421fdc();\n    fcn.0040f184();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.0040f438();\n    }\n    while (0 < *(*(iVar1 + 0x50) + 8)) {\n        fcn.00407570();\n        fcn.0040fbe4();\n    }\n    fcn.00416340();\n    if ('\\0' < extraout_DL) {\n        fcn.00421fc4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0040fb30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040fb30(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 64
    },
    "0040fb4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040fb4c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 66
    },
    "0040fca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fca4(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40fcf3;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 8))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0040fd0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fd0c(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40fd5b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0040fd74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fd74(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40fdde;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 284
    },
    "0040fe5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040fe5c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x40fe6d;\n    fcn.004244b8();\n    uStack64 = 0x410049;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x410022;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x0040fec6:\n            var_ch = arg_10h;\n            goto code_r0x0040fecc;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x0040fec6;\n    var_ch = 0x100000;\ncode_r0x0040fecc:\n    puStack84 = 0x40fed4;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00420dc0();\n    uStack88 = 0x410011;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x0040ffd1:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x410018;\n                uStack88 = 0x40ffe6;\n                fcn.00420de0();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x0040ffd1;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x0040fefd:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x0040fefd;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            uVar2 = (**(**(arg_8h + 0xc) + 8))();\n            if (uVar2 == 0) {\n                fcn.00422468();\n                *in_FS_OFFSET = uStack92;\ncode_r0x00410033:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x410050;\n                uStack76 = 0x410048;\n                fcn.00424448();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.0040fe5c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00422468();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x00410033;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1267
    },
    "004101bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004101bc(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x46662c;\n    if (*0x466630 == NULL) {\n        puVar1 = sub.KERNEL32.DLL_VirtualAlloc(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x46662c;\n        fcn.00421024();\n        uVar2 = fcn.004101b4();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.004101b4();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x466630;\n            puVar3 = puVar4 + 0xd;\n            *0x466630 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x46662c = puVar1;\n    puVar3 = *0x466630;\n    puVar1 = *0x466630 + 5;\n    *0x466630 = *(*0x466630 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 365
    },
    "00410278": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410278(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    code *var_24h;\n    \n    *0x461550 = *0x46652c;\n    iVar1 = sub.USER32.DLL_GetClassInfoA(*0x46652c, *0x461564, &var_28h);\n    if ((iVar1 == 0) || (var_24h != sub.USER32.DLL_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.USER32.DLL_UnregisterClassA(*0x461564, *0x46652c);\n        }\n        sub.USER32.DLL_RegisterClassA(0x461540);\n    }\n    uVar2 = sub.USER32.DLL_CreateWindowExA(0x80, *0x461564, 0x410328, 0x80000000, 0, 0, 0, 0, 0, 0, *0x46652c, 0);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.004101bc(arg_8h, arg_ch);\n        sub.USER32.DLL_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 315
    },
    "00410498": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410498(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x410573;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*in_EAX == '\\x01') {\n        puStack24 = &stack0xfffffffc;\n        fcn.00412880();\n    }\n    else {\n        fcn.0041048c();\n        iVar2 = fcn.0041048c();\n        if ((in_EAX == *0x41f770) || (*(iVar2 + 1) < 0)) {\n            if (*0x41f770 == in_EAX) {\n                fcn.004227b0();\n            }\n            else {\n                fcn.004227b0();\n            }\n            cVar1 = fcn.00412700();\n            if (cVar1 != '\\0') {\n                fcn.00412620();\n                fcn.004227b0();\n            }\n        }\n        else {\n            if (param_2 != 0) {\n                do {\n                    param_2 = param_2 + -1;\n                } while (param_2 != 0);\n            }\n            fcn.004229b8();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41057a;\n    uStack28 = 0x410572;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 390
    },
    "004105d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.004105d8(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00412920();\n        return uVar2;\n    }\n    iVar3 = fcn.0041048c();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00412700();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00412700();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00412920();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.0041058c();\n    }\n    return uVar2;\n}\n",
        "token_count": 213
    },
    "004106ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004106ac(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    puVar4 = param_2;\n    for (uVar2 = *(in_EAX + 10 + *(in_EAX + 1)); uVar2 != 0; uVar2 = uVar2 - 1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    while( true ) {\n        iVar1 = in_EAX + 2 + (uVar2 & 0xffffff00 | *(in_EAX + 1));\n        uVar3 = uVar2 & 0xffffff00 | *(iVar1 + 10);\n        uVar2 = *(iVar1 + 0xb + uVar3);\n        if (uVar2 != 0) {\n            iVar5 = iVar1 + 0xd + uVar3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(iVar5 + 0x1a);\n                if (param_2[*(iVar5 + 0x18)] == 0) {\n                    param_2[*(iVar5 + 0x18)] = iVar5;\n                }\n                iVar5 = iVar5 + 0x1b + uVar3;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar2 = 0;\n        if (*(iVar1 + 4) == NULL) break;\n        in_EAX = **(iVar1 + 4);\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "00410730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410730(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "004107a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004107a4(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0041620c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041620c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    puStack20 = 0x41621d;\n    iVar2 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    if (iVar2 != *(in_EAX + 0x24)) {\n        while( true ) {\n            puStack20 = 0x416245;\n            iVar2 = fcn.00415d48();\n            if (0 < iVar2) break;\n            puStack20 = 0x416232;\n            fcn.00415d3c();\n            puStack20 = 0x41623a;\n            fcn.00416040();\n        }\n        uVar1 = 1;\n    }\n    puStack20 = 0x416259;\n    fcn.00415e90();\n    uStack24 = 0x4162a2;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_8h + 0xc) = *(var_8h + 0xc) + 1;\n    if (1 < *(var_8h + 0xc) & uVar1) {\n        puStack20 = &stack0xfffffffc;\n        fcn.00415d3c();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4162a9;\n    uStack24 = 0x4162a1;\n    fcn.00415f08();\n    return;\n}\n",
        "token_count": 396
    },
    "004162b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004162b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack16 = 0x4162c7;\n    var_4h = in_EAX;\n    fcn.00415e90();\n    uStack20 = 0x416335;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(var_8h + 0xc) = *(var_8h + 0xc) + -1;\n    if (*(var_8h + 0xc) == 0) {\n        puStack16 = &stack0xfffffffc;\n        fcn.00415f10();\n        iVar1 = sub.KERNEL32.DLL_GetCurrentThreadId();\n        if (iVar1 != *(var_4h + 0x24)) {\n            iVar1 = fcn.00415d3c();\n            if (iVar1 == 0xffff) {\n                fcn.00416034();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41633c;\n    uStack20 = 0x416334;\n    fcn.00415f08();\n    return;\n}\n",
        "token_count": 317
    },
    "00416060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00416060(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x416071;\n    iVar1 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    if (*(in_EAX + 0x24) != iVar1) {\n        puStack32 = 0x41608b;\n        fcn.0041601c();\n        puStack32 = 0x4160a2;\n        fcn.00415e90();\n        uStack36 = 0x4160e8;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        if (*(var_8h + 0xc) != 0) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00415d3c();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x416117;\n        uStack36 = 0x4160e7;\n        uVar2 = fcn.00415f08();\n        return uVar2;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return 1;\n}\n",
        "token_count": 339
    },
    "00416168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416168(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack16 = 0x41617f;\n    var_4h = in_EAX;\n    fcn.00415e90();\n    uStack20 = 0x4161fe;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *(var_4h + 0x1c) = *(var_4h + 0x1c) + -1;\n    puStack16 = &stack0xfffffffc;\n    if (*(var_4h + 0x1c) == 0) {\n        *(var_4h + 0x24) = 0;\n        puStack16 = &stack0xfffffffc;\n        fcn.00415d5c();\n        fcn.00416034();\n        uStack28 = 0;\n        sub.KERNEL32.DLL_Sleep();\n        fcn.00416028();\n    }\n    if (*(var_8h + 0xc) == 0) {\n        fcn.00415f10();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x416205;\n    uStack24 = 0x4161fd;\n    fcn.00415f08();\n    return;\n}\n",
        "token_count": 343
    },
    "00412920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00412920(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.0042155c();\n    if (iStack20 != 0) {\n        fcn.0041253c();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "0041295c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041295c(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0042155c();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00412974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00412974(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0042155c();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 83
    },
    "00412994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00412994(void)\n\n{\n    ulong uVar1;\n    int32_t iStack16;\n    \n    uVar1 = fcn.0042389c();\n    if (iStack16 != 0) {\n        fcn.0041253c();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "004129f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004129f0(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) >> 4 < 0x41)) {\n        uVar1 = fcn.00422c0c(*((param_2 & 3) * 4 + 0x461618), *(((param_2 & 0xf0) >> 4) * 4 + 0x461624), 0, 3, 0x80, 0);\n        uVar1 = sub.KERNEL32.DLL_CreateFileA(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "00412b10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00412b10(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00422a14();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0041540c(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 115
    },
    "00412b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412b40(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.00422a14();\n    fcn.00422c0c();\n    do {\n        if (iVar2 < 1) {\n            return iVar2;\n        }\n        if ((*(param_2 + -1 + iVar2) != '\\0') && (iVar3 = fcn.00412dc0(),  iVar3 != 0)) {\n            cVar1 = fcn.0041540c();\n            if (cVar1 != '\\x02') {\n                return iVar2;\n            }\n            iVar2 = iVar2 + -1;\n        }\n        iVar2 = iVar2 + -1;\n    } while( true );\n}\n",
        "token_count": 189
    },
    "00412e90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412e90(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.00415430();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.00412c68();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.0041253c();\n    return;\n}\n",
        "token_count": 168
    },
    "00412f08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412fd7)\n\nvoid __cdecl fcn.00412f08(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x00412f31:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x00412f5b;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0041330c:\n    fcn.004132fc();\n    return;\ncode_r0x00412f5b:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0041330c;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.00412fea(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x00412f7a;\n    if (in_ECX == extraout_ECX) goto code_r0x0041330c;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x00412f5b;\ncode_r0x00412f7a:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0041330c;\n        in_ECX = in_ECX + 1;\n        fcn.00412fea(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.00413032(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x00412f31;\n}\n",
        "token_count": 1189
    },
    "00412fea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412fea(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) < *(unaff_EBP + 8) || *(unaff_EBP + -0xc) == *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0041330c:\n            fcn.004132fc();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0041330c;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "004134b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004134b4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0041378c(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.004135b3();\n        puVar4 = extraout_ECX * 3 + 0x4135a4;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x413590))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 445
    },
    "004135b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004135b3(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00413657": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413657(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.004135aa();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.004135aa();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "0041378c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041378c(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.004137b9(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.004138db(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "004137b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004137b9(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x004137e4:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00421780();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x461640);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x46164c);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x004137e4;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x004138a6;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x004138a6:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x004138b9;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x004138b9:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x004138bc;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x004137e4;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004138bc:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1176
    },
    "004139b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004139b8(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x466653;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.00413a6f();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.00413a7a();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.00413a7a();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.00413a96(iVar4);\n        }\n        fcn.00413a6f();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00421780();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "00413c70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.00413c70(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    double *pdVar4;\n    uint16_t in_CX;\n    int32_t iVar5;\n    uint16_t in_DX;\n    int32_t iVar6;\n    uint var_8h;\n    uint8_t var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.00413c34();\n    pdVar4 = (uVar2 & 0x7f) * 3;\n    iVar6 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) &&\n        (puVar1 = iVar6 + 0x4615a6 + in_DX * 2,  pdVar4 = in_DX,  in_CX < *puVar1 || in_CX == *puVar1)))) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar5 = 1;\n            do {\n                in_CX = in_CX + *(iVar6 + 0x4615a6 + iVar5 * 2);\n                iVar5 = iVar5 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar6 = iVar3;\n        if (iVar3 < 0) {\n            iVar6 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n        pdVar4 = arg_8h;\n    }\n    return pdVar4 & 0xffffff00 | var_3h;\n}\n",
        "token_count": 500
    },
    "00413f58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00413f58(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x46671c;\n    puVar4 = 0x466738;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.00422c0c();\n        fcn.00422c0c(uVar1);\n        iVar2 = fcn.00415518();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 228
    },
    "00413fac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413fac(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x466710 == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.00413d38();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 240
    },
    "00414008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414008(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_14h;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    char var_ah;\n    uchar var_9h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack64 = 0x41431a;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_12h._0_2_ = 0;\n    var_14h = 0;\n    var_18h._0_1_ = 0;\n    var_9h = 0;\n    var_ah = fcn.00413ec4();\n    var_4h = 0;\n    if (**0x466658 == 'g') {\n        fcn.00413f10();\n        fcn.00422c6c(&fcn.00414008::var_20h);\n        fcn.004127cc();\n        var_4h = fcn.00413f58();\n    }\n    else {\n        iVar2 = fcn.004154e0();\n        if (0 < iVar2) {\n            var_4h = *0x466738;\n        }\n    }\n    cVar1 = fcn.00413df8(&fcn.00414008::var_18h + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00413e8c(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x4140f5;\n        cVar1 = fcn.00413df8(&fcn.00414008::var_18h + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00413e8c();\n            if (cVar1 == '\\0') {\n                fcn.00413d38();\n                if (var_ah == '\\x01') {\n                    var_14h = var_ch;\n                    var_12h._0_2_ = var_eh;\n                }\n                else {\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.00414008::var_18h + 1;\n                cVar1 = fcn.00413df8(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x004142ff;\n                if (var_ah == '\\0') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_ch;\n                    var_14h = var_eh;\n                }\n                else if (var_ah == '\\x01') {\n                    var_18h._0_1_ = var_18h._1_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_ch;\n                }\n                else if (var_ah == '\\x02') {\n                    var_18h._0_1_ = var_18h._3_1_;\n                    var_12h._0_2_ = var_eh;\n                    var_14h = var_12h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_18h < 3) {\n                        fcn.00413d38();\n                    }\n                }\n                else {\n                    fcn.00413fac(&stack0xfffffffc);\n                }\n            }\n            fcn.00413e8c();\n            fcn.00413dd4();\n            if ((*0x466718 != '\\0') && (iVar2 = fcn.00422d50(),  iVar2 != 0)) {\n                if (**0x46666c - 0x30U < 10) {\n                    fcn.00413f10();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.00422a14(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.00413dd4();\n                        iVar2 = fcn.00422a14();\n                        if (iVar2 < *param_2) break;\n                        fcn.00422a14();\n                        fcn.00422c6c();\n                        iVar2 = fcn.0041275c();\n                        if (iVar2 == 0) break;\n                        fcn.00422a14();\n                        fcn.00422c6c();\n                        iVar2 = fcn.0041275c();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_9h = fcn.00413c70(var_8h);\n            in_stack_ffffffac = var_8h;\n        }\n    }\ncode_r0x004142ff:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00422780(0x414321);\n    return;\n}\n",
        "token_count": 1277
    },
    "00414438": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414438(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.004143c4(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00424964();\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00414598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414598(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x466718) == 0) {\n            fcn.0042294c();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 103
    },
    "00414ab8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00414ab8(void)\n\n{\n    uint uVar1;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uint uStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [16];\n    uchar auStack1028 [1028];\n    \n    puStack1104 = &stack0xfffffbb8;\n    uStack1100 = 0x414acc;\n    fcn.00414930(0x400);\n    if (**0x4663a4 == '\\0') {\n        uStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x466264 + 4);\n        puStack1112 = 0x414b3f;\n        puStack1112 = fcn.00423e78();\n        uStack1116 = 0x414b45;\n        sub.USER32.DLL_LoadStringA();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        sub.USER32.DLL_MessageBoxA(0, &stack0xfffffbec);\n    }\n    else {\n        uStack1100 = 0x414ae0;\n        fcn.004213bc();\n        uStack1100 = 0x414ae5;\n        fcn.00420f90();\n        uStack1100 = 0;\n        uStack1108 = 0x414af5;\n        uStack1108 = fcn.00412c3c();\n        puStack1112 = &stack0xfffffbfc;\n        uStack1116 = 0xfffffff5;\n        puStack1120 = 0x414b02;\n        puStack1120 = sub.KERNEL32.DLL_GetStdHandle();\n        sub.KERNEL32.DLL_WriteFile();\n        uVar1 = sub.KERNEL32.DLL_GetStdHandle(0xfffffff5, 0x414b6c, 2, &stack0xfffffba0, 0);\n        sub.KERNEL32.DLL_WriteFile(uVar1);\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "00414f84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414f84(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_125h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x41513f;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00424964();\n    }\n    else {\n        fcn.00424964();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.KERNEL32.DLL_VirtualQuery(*(iVar1 + 0xc), &var_20h, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.KERNEL32.DLL_GetModuleFileNameA(var_1ch, &var_125h, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004229c4();\n            fcn.00412b90();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00424964();\n            fcn.00414bac(arg_8h_00, puVar4);\n            goto code_r0x0041510e;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00424964();\n    fcn.00414bac(arg_8h_00, puVar4);\ncode_r0x0041510e:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0042275c(0x415146);\n    fcn.00422780();\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 866
    },
    "00415394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415394(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x4615e8) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x4615e8) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x4615e8) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "0041540c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041540c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x466718 != '\\0') {\n        fcn.00422c0c();\n        uVar1 = fcn.00415394();\n    }\n    return uVar1;\n}\n",
        "token_count": 70
    },
    "00415430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00415430(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x466718 != '\\0') {\n        uVar1 = fcn.00415394();\n    }\n    return uVar1;\n}\n",
        "token_count": 59
    },
    "00415448": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00415448(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x466718 != '\\0') {\n        iVar1 = sub.USER32.DLL_CharNextA();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 71
    },
    "00415468": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415468(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x466718 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x4615e8) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00422c0c();\n        uVar1 = fcn.00415448();\n    }\n    return uVar1;\n}\n",
        "token_count": 152
    },
    "004154a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004154a4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x466718 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x4615e8) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.00422c0c();\n        iVar1 = fcn.00415448();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 168
    },
    "00415518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00415518(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.00412c3c();\n        uVar2 = fcn.00412c3c();\n        iVar4 = fcn.00412de0();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.00415430();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.KERNEL32.DLL_CompareStringA();\n                if (iVar3 == 2) goto code_r0x004155ae;\n            }\n            iVar4 = fcn.00412de0();\n        }\n        iVar4 = 0;\n    }\ncode_r0x004155ae:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 315
    },
    "0041570c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041570c(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uchar uVar6;\n    uint var_196h;\n    uint var_94h;\n    \n    *0x46670c = 0x409;\n    *0x466710 = 9;\n    *0x466714 = 1;\n    uVar2 = sub.KERNEL32.DLL_GetThreadLocale();\n    if (uVar2 != 0) {\n        *0x46670c = uVar2;\n    }\n    if (uVar2 != 0) {\n        *0x466710 = uVar2 & 0x3ff;\n        *0x466714 = (uVar2 & 0xffff) >> 10;\n    }\n    puVar4 = 0x415860;\n    puVar5 = 0x4615e8;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*0x461580 == 2) {\n        cVar1 = fcn.004156f4();\n        uVar6 = cVar1 == '\\0';\n        if (uVar6) {\n            fcn.00415694(&stack0xfffffffc);\n            fcn.0042176c();\n            *0x466718 = !uVar6;\n            if (*0x466718) {\n                *0x466719 = 0;\n            }\n            else {\n                iVar3 = 0x80;\n                puVar4 = &var_94h;\n                do {\n                    *puVar4 = iVar3;\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                } while (iVar3 != 0x100);\n                sub.KERNEL32.DLL_GetStringTypeExA(*0x46670c, 2, &var_94h, 0x80, &var_196h);\n                iVar3 = 0x80;\n                puVar4 = &var_196h;\n                do {\n                    *0x466719 = *puVar4 == 2;\n                    if (*0x466719) {\n                        return;\n                    }\n                    puVar4 = puVar4 + 2;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        }\n        else {\n            *0x466719 = 0;\n            *0x466718 = 0;\n        }\n    }\n    else {\n        iVar3 = sub.USER32.DLL_GetSystemMetrics(0x4a);\n        *0x466719 = iVar3 != 0;\n        iVar3 = sub.USER32.DLL_GetSystemMetrics(0x2a);\n        *0x466718 = iVar3 != 0;\n        if (*0x466718) {\n            fcn.00415694(&stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 695
    },
    "00415880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00415880(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x415b4b;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00415880::var_18h;\n    var_1ch = 0x4158a3;\n    var_ch = unaff_EBX;\n    fcn.0041570c();\n    var_1ch = 0x4158a8;\n    fcn.00414474();\n    if (*0x466718 != '\\0') {\n        var_1ch = 0x4158b6;\n        fcn.0041464c();\n    }\n    var_1ch = 0x4158bb;\n    sub.KERNEL32.DLL_GetThreadLocale();\n    var_1ch = &fcn.00415880::var_10h;\n    var_20h = 0x4158cf;\n    fcn.004143c4(var_1ch);\n    var_20h = 0x4158dc;\n    fcn.004227b0();\n    var_20h = &fcn.00415880::var_14h;\n    var_24h = 0x4158f1;\n    fcn.004143c4(var_20h);\n    var_24h = 0x4158fb;\n    *0x466650 = fcn.0041295c();\n    var_24h = &fcn.00415880::var_18h;\n    var_28h = 0x415915;\n    fcn.004143c4(var_24h);\n    var_28h = 0x41591f;\n    *0x466651 = fcn.0041295c();\n    var_28h = 0x415932;\n    *0x466652 = fcn.00414410();\n    var_28h = 0x415945;\n    *0x466653 = fcn.00414410();\n    var_28h = &fcn.00415880::var_1ch;\n    var_2ch = 0x41595f;\n    fcn.004143c4(var_28h);\n    var_2ch = 0x415969;\n    *0x466654 = fcn.0041295c();\n    var_2ch = 0x41597c;\n    *0x466655 = fcn.00414410();\n    var_2ch = &fcn.00415880::var_24h;\n    var_30h = 0x415996;\n    fcn.004143c4(var_2ch);\n    var_30h = 0x4159a1;\n    fcn.004146fc();\n    var_30h = 0x4159ae;\n    fcn.004227b0();\n    var_30h = &fcn.00415880::var_2ch;\n    var_34h = 0x4159c3;\n    fcn.004143c4(var_30h);\n    var_34h = 0x4159ce;\n    fcn.004146fc();\n    var_34h = 0x4159db;\n    fcn.004227b0();\n    var_34h = 0x4159e9;\n    *0x466660 = fcn.00414410();\n    var_34h = &fcn.00415880::var_30h;\n    var_38h = 0x415a03;\n    fcn.004143c4(var_34h);\n    var_38h = 0x415a10;\n    fcn.004227b0();\n    var_38h = &fcn.00415880::var_34h;\n    var_3ch = 0x415a25;\n    fcn.004143c4(var_38h);\n    var_3ch = 0x415a32;\n    fcn.004227b0();\n    var_3ch = 0x415a3a;\n    fcn.0042275c();\n    var_3ch = 0x415a42;\n    fcn.0042275c();\n    var_3ch = &fcn.00415880::var_38h;\n    var_40h = 0x415a57;\n    fcn.004143c4(var_3ch);\n    var_40h = 0x415a61;\n    iVar1 = fcn.0041295c();\n    if (iVar1 == 0) {\n        var_40h = 0x415a72;\n        fcn.004227f4();\n    }\n    else {\n        var_40h = 0x415a81;\n        fcn.004227f4();\n    }\n    var_40h = &fcn.00415880::var_3ch;\n    fcn.004143c4(var_40h);\n    iVar1 = fcn.0041295c();\n    if (iVar1 == 0) {\n        fcn.004143c4(&fcn.00415880::var_40h);\n        iVar1 = fcn.0041295c();\n        if (iVar1 == 0) {\n            fcn.004227f4();\n        }\n        else {\n            fcn.004227f4();\n        }\n    }\n    fcn.00422ad4(var_ch, 0x415be4, var_4h, var_8h);\n    fcn.00422ad4(var_ch, 0x415bf0, var_4h, var_8h);\n    *0x46671a = fcn.00414410();\n    *in_FS_OFFSET = var_ch;\n    fcn.00422780(0x415b52);\n    return;\n}\n",
        "token_count": 1627
    },
    "00415cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00415cc0(void)\n\n{\n    while( true ) {\n        if (*0x4617d8 == NULL) break;\n        *0x4617d8 = **0x4617d8;\n        fcn.00420de0();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00415ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00415ce0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.KERNEL32.DLL_GetModuleHandleA(0x415d18);\n    if (iVar1 != 0) {\n        *0x461574 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x415d28);\n    }\n    if (*0x461574 == NULL) {\n        *0x461574 = fcn.00412bc8;\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004168e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004168e0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x416948;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x46675c == 0;\n    *0x46675c = *0x46675c + -1;\n    if (bVar1) {\n        fcn.00422508();\n        fcn.00422530();\n        if (*0x466522 != '\\0') {\n            fcn.004227b0();\n        }\n        fcn.0041522c();\n        fcn.0041531c();\n        fcn.00415ce0();\n        fcn.00415880();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 219
    },
    "00417b3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00417b3c(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n        return;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "00417b64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417b64(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint var_18h;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.00417b64(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.OLEAUT32.DLL_VariantClear();\n        var_8h = &var_18h;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x00417be4:\n            if (*0x466788 != NULL) {\n                (**0x466788)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x00417c2f;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x00417be4;\n    cVar2 = fcn.0041f1f4();\n    if (cVar2 == '\\0') {\n        fcn.0041741c();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x00417c2f:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.00417f80();\n        fcn.00417b3c();\n    }\n    return;\n}\n",
        "token_count": 488
    },
    "00417ec8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417ec8(int32_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    uVar1 = *param_2;\n    if (uVar1 < 0x14) {\n        sub.OLEAUT32.DLL_VariantCopyInd();\n        fcn.00417560();\n    }\n    else if (uVar1 == 0x100) {\n        *in_EAX = 0x100;\n        *(in_EAX + 4) = 0;\n        fcn.004227b0();\n    }\n    else if (uVar1 == 0x101) {\n        *in_EAX = 0x101;\n        *(in_EAX + 4) = *(param_2 + 4);\n        (**0x466794)();\n    }\n    else if ((uVar1 & 0x2000) == 0) {\n        cVar2 = fcn.0041f1f4();\n        if (cVar2 == '\\0') {\n            fcn.0041741c();\n        }\n        else {\n            (**(*param_1 + 0x28))(0);\n        }\n    }\n    else {\n        fcn.00417cf4();\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00417f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417f80(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    if (in_EAX != param_2) {\n        uVar1 = *param_2;\n        if (((uVar1 < 0x15) && (*(uVar1 + 0x4618e8) != '\\0')) || ((uVar1 & 0x4000) != 0)) {\n            uVar1 = *in_EAX;\n            if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n                fcn.00417ac8();\n            }\n            *in_EAX = *param_2;\n            *(in_EAX + 4) = *(param_2 + 4);\n            *(in_EAX + 6) = *(param_2 + 6);\n        }\n        else {\n            fcn.00417ec8();\n        }\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004182c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004182c8(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uchar *puVar2;\n    uint16_t *in_EAX;\n    uint32_t uVar3;\n    uint16_t in_DX;\n    uint32_t *in_FS_OFFSET;\n    bool bVar4;\n    uint32_t in_stack_ffffffc0;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x418558;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (puVar2 = &stack0xfffffffc,  *(uVar1 + 0x4618e8) == '\\0')) &&\n       (puVar2 = &stack0xfffffffc,  (uVar1 & 0x4000) == 0)) {\n        puStack48 = 0x418319;\n        fcn.00417ac8();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    uStack52 = 0x418519;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    // switch table (21 cases) at 0x41833b\n    switch(in_DX) {\n    case 0:\n        break;\n    default:\n        puStack48 = &stack0xfffffffc;\n        fcn.00417380();\n        break;\n    case 2:\n        uVar3 = arg_8h + 0x8000;\n        bVar4 = arg_ch + (0xffff7fff < arg_8h) != 0;\n        if ((bVar4 || 0xfffe < uVar3) && (bVar4 || uVar3 != 0xffff)) {\n            puStack48 = &stack0xfffffffc;\n            uVar3 = fcn.00421b68();\n        }\n        in_EAX[4] = uVar3 + 0x8000;\n        break;\n    case 3:\n        if (arg_8h >> 0x1f != arg_ch) {\n            puStack48 = &stack0xfffffffc;\n            arg_8h = fcn.00421b68();\n        }\n        *(in_EAX + 4) = arg_8h;\n        break;\n    case 4:\n        *(in_EAX + 4) = CONCAT44(arg_ch, arg_8h);\n        break;\n    case 5:\n        *(in_EAX + 4) = CONCAT44(arg_ch, arg_8h);\n        break;\n    case 6:\n        *(in_EAX + 4) = ROUND(CONCAT44(arg_ch, arg_8h) * *0x418568);\n        break;\n    case 7:\n        *(in_EAX + 4) = CONCAT44(arg_ch, arg_8h);\n        break;\n    case 8:\n        puStack48 = &stack0xfffffffc;\n        fcn.004128b0(arg_8h);\n        fcn.00422f98(arg_8h, arg_ch);\n        fcn.0041bcf8();\n        in_stack_ffffffc0 = arg_8h;\n        break;\n    case 0xb:\n        in_EAX[4] = -(arg_ch != 0 || arg_8h != 0);\n        break;\n    case 0x10:\n        uVar3 = arg_8h + 0x80;\n        bVar4 = arg_ch + (0xffffff7f < arg_8h) != 0;\n        if ((bVar4 || 0xfe < uVar3) && (bVar4 || uVar3 != 0xff)) {\n            puStack48 = &stack0xfffffffc;\n            uVar3 = fcn.00421b68();\n        }\n        *(in_EAX + 4) = uVar3 + -0x80;\n        break;\n    case 0x11:\n        if ((arg_ch != 0 || 0xfe < arg_8h) && (arg_ch != 0 || arg_8h != 0xff)) {\n            puStack48 = &stack0xfffffffc;\n            arg_8h = fcn.00421b68();\n        }\n        *(in_EAX + 4) = arg_8h;\n        break;\n    case 0x12:\n        if ((arg_ch != 0 || 0xfffe < arg_8h) && (arg_ch != 0 || arg_8h != 0xffff)) {\n            puStack48 = &stack0xfffffffc;\n            arg_8h = fcn.00421b68();\n        }\n        in_EAX[4] = arg_8h;\n        break;\n    case 0x13:\n        if (arg_ch != 0) {\n            puStack48 = &stack0xfffffffc;\n            arg_8h = fcn.00421b68();\n        }\n        *(in_EAX + 4) = arg_8h;\n        break;\n    case 0x14:\n        *(in_EAX + 4) = arg_8h;\n        *(in_EAX + 6) = arg_ch;\n    }\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    *in_EAX = in_DX;\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x41855f;\n    puStack48 = 0x41854f;\n    fcn.0042275c();\n    puStack48 = 0x418557;\n    fcn.00422e4c();\n    return;\n}\n",
        "token_count": 1311
    },
    "0041856c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041856c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint16_t in_CX;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    uint in_stack_ffffffd0;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        puStack28 = 0x4185ab;\n        fcn.00417ac8();\n    }\n    uStack32 = 0x41862d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_CX == 4) {\n        *(in_EAX + 4) = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n    }\n    else if (in_CX == 5) {\n        *(in_EAX + 4) = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n    }\n    else if (in_CX == 6) {\n        puStack28 = &stack0xfffffffc;\n        fVar2 = fcn.00413b4c(arg_8h, arg_ch, arg_10h);\n        *(in_EAX + 4) = ROUND(fVar2);\n        in_stack_ffffffd0 = arg_8h;\n    }\n    else if (in_CX == 7) {\n        puStack28 = &stack0xfffffffc;\n        fVar2 = fcn.00413d94(arg_8h, arg_ch, arg_10h);\n        *(in_EAX + 4) = fVar2;\n        in_stack_ffffffd0 = arg_8h;\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        fcn.0041732c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    *in_EAX = in_CX;\n    return;\n}\n",
        "token_count": 505
    },
    "00418658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418658(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_6h;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        puStack28 = 0x418695;\n        fcn.00417ac8();\n    }\n    uStack32 = 0x41876b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (arg_8h < 0x14) {\n    // switch table (6 cases) at 0x4186d1\n        switch(*((arg_8h & 0xff00 | *(arg_8h + 0x4186bd)) * 4 + 0x4186d1)) {\n        case 0x4186e9:\n            if (0xffff < in_EDX + 0x8000) {\n                puStack28 = &stack0xfffffffc;\n                fcn.00421b68();\n            }\n            in_EAX[4] = in_EDX;\n            break;\n        case 0x41870b:\n            if (0xff < in_EDX + 0x80) {\n                puStack28 = &stack0xfffffffc;\n                fcn.00421b68();\n            }\n            *(in_EAX + 4) = in_EDX;\n            break;\n        case 0x418729:\n            if (0xff < in_EDX) {\n                puStack28 = &stack0xfffffffc;\n                fcn.00421b68();\n            }\n            *(in_EAX + 4) = in_EDX;\n            break;\n        case 0x41873e:\n            if (0xffff < in_EDX) {\n                puStack28 = &stack0xfffffffc;\n                fcn.00421b68();\n            }\n            in_EAX[4] = in_EDX;\n            break;\n        case 0x418754:\n            *(in_EAX + 4) = in_EDX;\n            break;\n        default:\n            goto code_r0x0041875c;\n        }\n    }\n    else {\ncode_r0x0041875c:\n        puStack28 = &stack0xfffffffc;\n        fcn.0041732c();\n    }\n    *in_FS_OFFSET = uStack36;\n    *in_EAX = arg_8h;\n    return;\n}\n",
        "token_count": 604
    },
    "00419800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00419800(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack12 = 0;\n    uStack28 = 0x419874;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.0041ad8c();\n    fcn.00422f98(0x400, 0, &uStack12 + 2);\n    sub.OLEAUT32.DLL_VarBoolFromDisp();\n    fcn.0041779c();\n    *in_FS_OFFSET = 0;\n    fcn.00422e4c(0x41987b);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 210
    },
    "00419884": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00419884(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(&puStack24);\n    fcn.0041779c();\n    return 1;\n}\n",
        "token_count": 82
    },
    "00419924": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00419924(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00419970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419970(uint32_t param_1)\n\n{\n    float fVar1;\n    double dVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint16_t *in_EAX;\n    int32_t *piVar6;\n    bool bVar7;\n    uint32_t uStack8;\n    \n    uVar3 = *in_EAX;\n    uVar4 = in_EAX & 0xffff0000;\n    uVar5 = uVar3;\n    piVar6 = uVar4 | uVar5;\n    // switch table (21 cases) at 0x41998a\n    switch(uVar5) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    default:\n        if (uVar3 == 0x100) {\n            piVar6 = fcn.00419800();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if (uVar3 == 0x101) {\n            piVar6 = fcn.004198c0();\n            uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        }\n        else if ((uVar3 & 0x4000) == 0) {\n            piVar6 = fcn.00419924();\n            uStack8 = param_1;\n            if (piVar6 == '\\0') {\n                piVar6 = fcn.00419884();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x419b2d\n            switch(uVar5 & 0xbfff) {\n            default:\n                piVar6 = fcn.00419884();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 2:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 3:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 4:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x419c98;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x419c98) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 5:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x419c98;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x419c98) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 6:\n                fVar1 = **(in_EAX + 4);\n                uVar3 = fVar1 == *0x419c98;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (fVar1 < *0x419c98) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 7:\n                dVar2 = **(in_EAX + 4);\n                uVar3 = dVar2 == *0x419c98;\n                piVar6 = *(in_EAX + 4) & 0xffff0000 | (dVar2 < *0x419c98) << 8 | uVar3 << 0xe;\n                uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n                break;\n            case 8:\n                piVar6 = fcn.00419800();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0xb:\n                piVar6 = NULL;\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0xc:\n                piVar6 = fcn.00419970();\n                uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n                break;\n            case 0x10:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x11:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != '\\0';\n                break;\n            case 0x12:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x13:\n                piVar6 = *(in_EAX + 4);\n                uStack8 = param_1 & 0xffffff00 | *piVar6 != 0;\n                break;\n            case 0x14:\n                piVar6 = *(in_EAX + 4);\n                bVar7 = piVar6[1] == 0;\n                if (bVar7) {\n                    bVar7 = *piVar6 == 0;\n                }\n                piVar6 = piVar6 & 0xffffff00;\n                uStack8 = param_1 & 0xffffff00 | !bVar7;\n            }\n        }\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uVar3 = *(in_EAX + 4) == *0x419c98;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x419c98) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 5:\n        uVar3 = *(in_EAX + 4) == *0x419c98;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x419c98) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 6:\n        uVar3 = *(in_EAX + 4) == *0x419c98;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x419c98) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 7:\n        uVar3 = *(in_EAX + 4) == *0x419c98;\n        piVar6 = uVar4 | ((*(in_EAX + 4) < *0x419c98) << 8 | uVar3 << 0xe);\n        uStack8 = param_1 & 0xffffff00 | uVar3 == 0;\n        break;\n    case 8:\n        piVar6 = fcn.00419800();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 9:\n    case 0xd:\n        piVar6 = fcn.00419884();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 0xb:\n        piVar6 = NULL;\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0xc:\n        piVar6 = fcn.00419970();\n        uStack8 = param_1 & 0xffffff00 | piVar6 & 0xff;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar7 = *(in_EAX + 6) == 0;\n        if (bVar7) {\n            bVar7 = *(in_EAX + 4) == 0;\n        }\n        piVar6 = uVar4 | uVar5 & 0xffffff00;\n        uStack8 = param_1 & 0xffffff00 | !bVar7;\n    }\n    return CONCAT44(uStack8, piVar6 & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 2196
    },
    "0041bac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bac0(char param_1, uint param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    if (*0x4618e4 == '\\0') {\n        *in_EAX = 3;\n        *(in_EAX + 4) = param_2;\n    }\n    else if (param_1 + 3U < 8) {\n    // switch table (8 cases) at 0x41bb07\n        switch(param_1) {\n        case '\\x01':\n            *in_EAX = 0x11;\n            *(in_EAX + 4) = param_2;\n            break;\n        case '\\x02':\n            *in_EAX = 0x12;\n            in_EAX[4] = param_2;\n            break;\n        case '\\x04':\n            *in_EAX = 0x13;\n            *(in_EAX + 4) = param_2;\n            break;\n        default:\n            fcn.0041732c();\n            break;\n        case -2:\n            *in_EAX = 2;\n            in_EAX[4] = param_2;\n            break;\n        case -1:\n            *in_EAX = 0x10;\n            *(in_EAX + 4) = param_2;\n        }\n    }\n    else {\n        *in_EAX = 3;\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "0041bbb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bbb0(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *in_EAX = 0x14;\n    *(in_EAX + 4) = arg_8h;\n    *(in_EAX + 6) = arg_ch;\n    return;\n}\n",
        "token_count": 150
    },
    "0041bbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bbf0(uint param_1, char param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 138
    },
    "0041bc68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bc68(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *(in_EAX + 4) = 0;\n    *in_EAX = 0x100;\n    fcn.004227b0();\n    return;\n}\n",
        "token_count": 134
    },
    "0041bcf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bcf8(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *(in_EAX + 4) = 0;\n    *in_EAX = 8;\n    fcn.004230a8(in_EAX + 4);\n    return;\n}\n",
        "token_count": 139
    },
    "0041bd44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bd44(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *(in_EAX + 4) = 0;\n    *in_EAX = 0xd;\n    fcn.00424460();\n    return;\n}\n",
        "token_count": 132
    },
    "0041bd84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bd84(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    *(in_EAX + 4) = 0;\n    *in_EAX = 9;\n    fcn.00424460();\n    return;\n}\n",
        "token_count": 131
    },
    "0041bee4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bee4(int32_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint32_t uVar3;\n    \n    if (*param_2 == 0x400c) {\n        fcn.0041bee4();\n        return;\n    }\n    uVar1 = *in_EAX;\n    if (((0x14 < uVar1) || (*(uVar1 + 0x4618e8) == '\\0')) && ((uVar1 & 0x4000) == 0)) {\n        fcn.00417ac8();\n    }\n    uVar1 = *param_2;\n    uVar3 = uVar1;\n    if (0x14 < uVar3) {\n        if (uVar3 == 0x100) {\n            fcn.0041bdd8();\n            return;\n        }\n        if (uVar3 == 0x101) {\n            fcn.0041be78();\n            return;\n        }\ncode_r0x0041bff4:\n        if ((uVar1 & 0x2000) == 0) {\n            if ((uVar1 & 0xfff) < 0x10f) {\n                fcn.00417f80();\n            }\n            else {\n                cVar2 = fcn.0041f1f4();\n                if (cVar2 == '\\0') {\n                    fcn.0041732c();\n                }\n                else {\n                    (**(*param_1 + 0x20))();\n                }\n            }\n        }\n        else {\n            fcn.00417cf4();\n        }\n        return;\n    }\n    if (uVar3 != 0x14) {\n        if (uVar3 - 0x10 < 3) {\n            fcn.004189f0();\n            return;\n        }\n        if (uVar3 - 0x10 == 3) {\n            if ((*(param_2 + 0xb) & 0x80) != 0) {\n                fcn.004189f0();\n                return;\n            }\n            fcn.004189f0();\n            return;\n        }\n        goto code_r0x0041bff4;\n    }\n    if (*(param_2 + 6) == 0) {\n        if (0x7fffffff < *(param_2 + 4)) goto code_r0x0041bfcd;\n    }\n    else if (0 < *(param_2 + 6)) goto code_r0x0041bfcd;\n    if (*(param_2 + 6) == -1) {\n        if (0x7fffffff < *(param_2 + 4)) {\ncode_r0x0041bfbd:\n            fcn.004189f0();\n            return;\n        }\n    }\n    else if (-2 < *(param_2 + 6)) goto code_r0x0041bfbd;\ncode_r0x0041bfcd:\n    fcn.004189f0();\n    return;\n}\n",
        "token_count": 671
    },
    "0041c5f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041c5f4(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_9h;\n    uint var_4h;\n    \n    var_9h._0_1_ = false;\n    iVar1 = fcn.00418e24();\n    iVar2 = fcn.00418e24();\n    // switch table (11 cases) at 0x41c62d\n    switch(param_1) {\n    case 0:\n        var_9h._0_1_ = SCARRY4(iVar1, iVar2);\n        break;\n    case 1:\n        var_9h._0_1_ = SBORROW4(iVar1, iVar2);\n        break;\n    case 2:\n        var_9h._0_1_ = iVar1 * iVar2 != iVar1 * iVar2;\n        break;\n    case 3:\n        var_9h._0_1_ = true;\n        break;\n    case 4:\n        break;\n    case 5:\n        break;\n    case 6:\n        break;\n    case 7:\n        break;\n    case 8:\n        break;\n    case 9:\n        break;\n    case 10:\n        break;\n    default:\n        fcn.0041741c();\n    }\n    if (var_9h._0_1_ == false) {\n        fcn.0042361c();\n    }\n    else {\n        fcn.0041c51c();\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "0041ce74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ce74(uint param_1, char param_2)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        if (param_2 != '\\x01') {\n            return 0;\n        }\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "0041ce88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0041ce88(int32_t param_1, char param_2)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (param_1 == 0xe) {\n        if ((in_AL == '\\x02') && (param_2 == '\\x02')) {\n            iVar1 = 1;\n        }\n        else {\n            iVar1 = 0;\n        }\n        return *(iVar1 + 0x461980);\n    }\n    if (param_1 != 0xf) {\n        fcn.0041741c();\n        return 1;\n    }\n    if ((in_AL == '\\x02') && (param_2 == '\\x02')) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = 1;\n    }\n    return *(iVar1 + 0x461982);\n}\n",
        "token_count": 188
    },
    "0041d1cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0041d1cc(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint var_28h;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_eh;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_9h = 1;\n    uVar1 = *in_EAX;\n    var_4h = param_2;\n    if ((uVar1 & 0xfff) < 0x10f) {\n        if (uVar1 == 0) {\n            puStack56 = 0x41d201;\n            uVar4 = fcn.0041ce74();\n            var_9h = uVar4;\n        }\n        else if (uVar1 == 1) {\n            puStack56 = 0x41d21b;\n            uVar4 = fcn.0041ce88();\n            var_9h = uVar4;\n        }\n        else {\n            puStack56 = 0x41d231;\n            cVar3 = fcn.0041f1f4();\n            if (cVar3 == '\\0') {\n                puStack56 = 0x41d23a;\n                uVar4 = fcn.0041741c();\n            }\n            else {\n                puStack56 = &fcn.0041d1cc::var_eh + 2;\n                puStack60 = 0x41d252;\n                cVar3 = (**(*var_18h + 4))();\n                if (cVar3 == '\\0') {\n                    puStack60 = &fcn.0041d1cc::var_28h;\n                    puStack64 = 0x41d311;\n                    sub.OLEAUT32.DLL_VariantClear();\n                    puStack68 = 0x41d365;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x41d32d;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.004189f0();\n                    if ((var_28h & 0xfff) != *in_EAX) {\n                        iStack76 = 0x41d33f;\n                        fcn.0041732c();\n                    }\n                    iStack76 = 0x41d34c;\n                    var_9h = fcn.0041d034();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x41d5e0;\n                    puStack68 = 0x41d364;\n                    uVar4 = fcn.00417b3c();\n                    return uVar4;\n                }\n                if (*in_EAX != var_eh._2_2_) {\n                    puStack60 = &fcn.0041d1cc::var_28h;\n                    puStack64 = 0x41d26c;\n                    sub.OLEAUT32.DLL_VariantClear();\n                    puStack68 = 0x41d2d7;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x41d288;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.004189f0();\n                    if ((var_28h & 0xfff) != var_eh._2_2_) {\n                        iStack76 = 0x41d29b;\n                        fcn.0041732c();\n                    }\n                    iStack76 = var_8h;\n                    uVar4 = (**(*var_18h + 0x34))();\n                    var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x41d5e0;\n                    iStack72 = 0x41d2d6;\n                    uVar4 = fcn.00417b3c();\n                    return uVar4;\n                }\n                puStack60 = var_8h;\n                puStack64 = 0x41d2ef;\n                uVar4 = (**(*var_18h + 0x34))();\n                var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                uVar4 = 0;\n            }\n        }\n    }\n    else if (*param_2 == 0) {\n        puStack56 = 0x41d380;\n        uVar4 = fcn.0041ce74();\n        var_9h = uVar4;\n    }\n    else if (*param_2 == 1) {\n        puStack56 = 0x41d39d;\n        uVar4 = fcn.0041ce88();\n        var_9h = uVar4;\n    }\n    else {\n        puStack56 = 0x41d3af;\n        cVar3 = fcn.0041f1f4();\n        if (cVar3 == '\\0') {\n            puStack56 = 0x41d3b8;\n            uVar4 = fcn.0041741c();\n        }\n        else {\n            puStack56 = &fcn.0041d1cc::var_eh;\n            puStack60 = 0x41d3d1;\n            cVar3 = (**(*var_14h + 8))();\n            if (cVar3 == '\\0') {\n                if ((*var_4h & 0xfff) < 0x10f) {\n                    puStack60 = &fcn.0041d1cc::var_28h;\n                    puStack64 = 0x41d4a1;\n                    sub.OLEAUT32.DLL_VariantClear();\n                    puStack68 = 0x41d4f7;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x41d4bf;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.004189f0();\n                    if (*var_4h != var_28h) {\n                        iStack76 = 0x41d4d0;\n                        fcn.0041732c();\n                    }\n                    iStack76 = 0x41d4de;\n                    var_9h = fcn.0041d034();\n                    *in_FS_OFFSET = iStack72;\n                    puStack64 = 0x41d5e0;\n                    puStack68 = 0x41d4f6;\n                    uVar4 = fcn.00417b3c();\n                    return uVar4;\n                }\n                puStack60 = 0x41d50b;\n                cVar3 = fcn.0041f1f4();\n                if (cVar3 == '\\0') {\n                    puStack60 = 0x41d514;\n                    uVar4 = fcn.0041741c();\n                }\n                else {\n                    puStack60 = &fcn.0041d1cc::var_eh + 2;\n                    puStack64 = 0x41d52c;\n                    cVar3 = (**(*var_18h + 4))();\n                    if (cVar3 == '\\0') {\n                        puStack64 = 0x41d5e0;\n                        uVar4 = fcn.0041741c();\n                    }\n                    else {\n                        if (*in_EAX != var_eh._2_2_) {\n                            puStack64 = &fcn.0041d1cc::var_28h;\n                            puStack68 = 0x41d546;\n                            sub.OLEAUT32.DLL_VariantClear();\n                            iStack72 = 0x41d5ad;\n                            iStack76 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffffb4;\n                            puStack68 = &stack0xfffffffc;\n                            fcn.004189f0();\n                            if (var_28h != var_eh._2_2_) {\n                                fcn.0041732c();\n                            }\n                            iVar2 = var_8h;\n                            uVar4 = (**(*var_18h + 0x34))();\n                            var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                            *in_FS_OFFSET = iVar2;\n                            iStack72 = 0x41d5e0;\n                            iStack76 = 0x41d5ac;\n                            uVar4 = fcn.00417b3c();\n                            return uVar4;\n                        }\n                        puStack64 = var_8h;\n                        puStack68 = 0x41d5c5;\n                        uVar4 = (**(*var_18h + 0x34))();\n                        var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                        uVar4 = 0;\n                    }\n                }\n            }\n            else {\n                if (*var_4h != var_eh) {\n                    puStack60 = &fcn.0041d1cc::var_28h;\n                    puStack64 = 0x41d3ee;\n                    sub.OLEAUT32.DLL_VariantClear();\n                    puStack68 = 0x41d455;\n                    iStack72 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffb8;\n                    iStack76 = 0x41d40b;\n                    puStack64 = &stack0xfffffffc;\n                    fcn.004189f0();\n                    if (var_28h != var_eh) {\n                        iStack76 = 0x41d41a;\n                        fcn.0041732c();\n                    }\n                    iStack76 = var_8h;\n                    uVar4 = (**(*var_14h + 0x34))();\n                    var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                    *in_FS_OFFSET = iStack76;\n                    puStack68 = 0x41d5e0;\n                    iStack72 = 0x41d454;\n                    uVar4 = fcn.00417b3c();\n                    return uVar4;\n                }\n                puStack60 = var_8h;\n                puStack64 = 0x41d46d;\n                uVar4 = (**(*var_14h + 0x34))();\n                var_9h = *(var_8h * 2 + 0x461964 + (uVar4 & 0x7f));\n                uVar4 = 0;\n            }\n        }\n    }\n    return uVar4 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 2480
    },
    "0041db34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041db34(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x41db4d\n    switch(uVar1) {\n    case 0:\n        fcn.0042361c();\n        return;\n    case 1:\n        goto code_r0x0041dd9d;\n    case 2:\n        in_EAX[4] = ~in_EAX[4];\n        return;\n    case 3:\n        *(in_EAX + 4) = ~*(in_EAX + 4);\n        return;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n        fcn.0041da54();\n        return;\n    case 9:\n    case 0xd:\n        fcn.0041dab4();\n        return;\n    default:\n        if (uVar1 == 0x100) {\n            fcn.0041da54();\n        }\n        else if (uVar1 == 0x101) {\n            fcn.0041daf4();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0041db08();\n            if (cVar2 == '\\0') {\n                fcn.0041dab4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41dc60\n            switch(uVar1 & 0xbfff) {\n            default:\n                fcn.0041dab4();\n                break;\n            case 2:\n                fcn.0042361c();\n                break;\n            case 3:\n                fcn.0042361c();\n                break;\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                fcn.0041da54();\n                break;\n            case 0xb:\n                fcn.00423638();\n                break;\n            case 0xc:\n                fcn.0041dac8();\n                break;\n            case 0x10:\n                fcn.0042361c();\n                break;\n            case 0x11:\n                fcn.0042361c();\n                break;\n            case 0x12:\n                fcn.0042361c();\n                break;\n            case 0x13:\n                fcn.0042361c();\n                break;\n            case 0x14:\n                fcn.00423624(~**(in_EAX + 4), ~(*(in_EAX + 4))[1]);\n            }\n        }\ncode_r0x0041dd9d:\n        return;\n    case 0xb:\n        in_EAX[4] = -(in_EAX[4] == 0);\n        return;\n    case 0xc:\n        fcn.0041dac8();\n        return;\n    case 0x10:\n        *(in_EAX + 4) = ~*(in_EAX + 4);\n        return;\n    case 0x11:\n        *(in_EAX + 4) = ~*(in_EAX + 4);\n        return;\n    case 0x12:\n        in_EAX[4] = ~in_EAX[4];\n        return;\n    case 0x13:\n        *(in_EAX + 4) = ~*(in_EAX + 4);\n        return;\n    case 0x14:\n        *(in_EAX + 4) = ~*(in_EAX + 4);\n        *(in_EAX + 6) = ~*(in_EAX + 6);\n        return;\n    }\n}\n",
        "token_count": 813
    },
    "0041e128": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t fcn.0041e128(void)\n\n{\n    int16_t *piVar1;\n    \n    piVar1 = fcn.0041e098();\n    return piVar1 & 0xffffff00 | *piVar1 == 1;\n}\n",
        "token_count": 57
    },
    "0041e17c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0041e17c(void)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint16_t uStack28;\n    \n    puVar1 = fcn.0041e098();\n    uVar3 = *puVar1;\n    puVar2 = fcn.0041e098(uVar3, puVar1[1], puVar1[2], puVar1[3]);\n    uStack28 = *puVar2;\n    if (uVar3 == 0) {\n        uVar3 = puVar2 & 0xffff0000 | uVar3 & 0xff00 | uStack28 == 0;\n    }\n    else if (uVar3 == 1) {\n        uVar3 = puVar2 & 0xffff0000 | uVar3 & 0xff00 | uStack28 == 1;\n    }\n    else {\n        uVar4 = uStack28 == 2;\n        if (uStack28 < 2) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00423678();\n            uVar3 = uVar3 & 0xffffff00 | uVar4;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 292
    },
    "0041e47c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.0041e47c(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xffff0000 | in_EAX - 0x16;\n    if (in_EAX < 0x16) {\n        uVar1 = *0x466450;\n        if (*(*0x466450 + (in_EAX & 0xffff) * 0xc) != '\\0') {\n            return CONCAT44(*0x466450, CONCAT31((in_EAX & 0xffff) * 3 >> 8, 1));\n        }\n    }\n    return uVar1 << 0x20;\n}\n",
        "token_count": 155
    },
    "0041e49c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041e49c(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    \n    if ((0x15 < (in_EAX & 0xbfff)) || (*(*0x466450 + 1 + (in_EAX & 0xbfff) * 0xc) == '\\0')) {\n        cVar1 = fcn.0041e11c();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 116
    },
    "0041e870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0041e870(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    iVar2 = fcn.00423ac8();\n    if (-1 < iVar2) {\n        iVar2 = iVar2 + 1;\n        iVar3 = 0;\n        do {\n            if (*(*in_EAX + iVar3 * 4) != 0) {\n                cVar4 = '\\x01';\n                break;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (cVar4 != '\\0') {\n        iVar2 = fcn.00423ac8();\n        if (-1 < iVar2) {\n            if (*(*in_EAX + iVar2 * 4) == 0) {\n                for (; *(*in_EAX + iVar2 * 4) == 0; iVar2 = iVar2 + -1) {\n                    *(*in_EAX + iVar2 * 4) = *(param_2 + iVar2 * 4);\n                }\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n            else {\n                piVar1 = *in_EAX + iVar2 * 4;\n                *piVar1 = *piVar1 + -1;\n            }\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 360
    },
    "0041ef4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041ef4c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    \n    puStack16 = 0x41ef60;\n    fcn.00416060();\n    uStack20 = 0x41efaf;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    iVar1 = fcn.00423ac0();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x4668f4 + iVar1 * 4) != *0x461918) {\n                fcn.00421c28();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41efb6;\n    uStack20 = 0x41efae;\n    fcn.00416168();\n    return;\n}\n",
        "token_count": 252
    },
    "0041f1f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0041f1f4(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint32_t in_EAX;\n    unkuint3 Var3;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_1h;\n    \n    if (((*0x4668f4 == 0) || (in_EAX < 0x100)) || (0x7ff < in_EAX)) {\n        bVar1 = false;\n        Var3 = 0;\n    }\n    else {\n        Var3 = in_EAX >> 8;\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack24 = 0x41f22f;\n        fcn.0041620c();\n        uStack28 = 0x41f29c;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.0041f1f4::var_1h + 1;\n        iVar2 = fcn.00423ac0();\n        if ((in_EAX & 0xffff) - 0x100 < iVar2) {\n            *param_2 = *(*0x4668f4 + -0x400 + (in_EAX & 0xffff) * 4);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41f2a3;\n        uStack28 = 0x41f29b;\n        iVar2 = fcn.004162b0();\n        return iVar2;\n    }\n    return Var3 << 8;\n}\n",
        "token_count": 402
    },
    "0041fa80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.0041fa80(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    \n    if (*0x466ee8 == NULL) {\n        puVar2 = sub.KERNEL32.DLL_LocalAlloc(0, 0x644);\n        if (puVar2 == NULL) {\n            return NULL;\n        }\n        *puVar2 = *0x466ee4;\n        iVar4 = 0;\n        *0x466ee4 = puVar2;\n        do {\n            ppiVar1 = puVar2 + iVar4 * 4 + 1;\n            *ppiVar1 = *0x466ee8;\n            iVar4 = iVar4 + 1;\n            *0x466ee8 = ppiVar1;\n        } while (iVar4 != 100);\n    }\n    piVar3 = *0x466ee8;\n    *0x466ee8 = **0x466ee8;\n    return piVar3;\n}\n",
        "token_count": 233
    },
    "0041fb90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041fb90(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *in_EAX;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iStack20;\n    \n    piVar6 = in_EAX;\n    while( true ) {\n        uVar1 = *param_2;\n        uVar4 = piVar6[2];\n        if ((uVar4 <= uVar1) && (uVar1 + param_2[1] <= uVar4 + piVar6[3])) break;\n        piVar6 = *piVar6;\n        if (in_EAX == piVar6) {\n            uVar5 = 0;\ncode_r0x0041fc1c:\n            return CONCAT44(iStack20, uVar5);\n        }\n    }\n    if (uVar1 == uVar4) {\n        piVar6[2] = piVar6[2] + param_2[1];\n        uVar4 = param_2[1];\n        piVar6[3] = piVar6[3] - uVar4;\n        if (piVar6[3] == 0) {\n            uVar4 = fcn.0041fb08();\n        }\n    }\n    else if (uVar1 + param_2[1] == uVar4 + piVar6[3]) {\n        piVar6[3] = piVar6[3] - param_2[1];\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = param_2[1];\n        iStack20 = (piVar6[2] + piVar6[3]) - (uVar2 + uVar3);\n        piVar6[3] = uVar1 - uVar4;\n        uVar4 = fcn.0041fad8(uVar2 + uVar3);\n        if (uVar4 == '\\0') {\n            uVar5 = 0;\n            goto code_r0x0041fc1c;\n        }\n    }\n    uVar5 = CONCAT31(uVar4 >> 8, 1);\n    goto code_r0x0041fc1c;\n}\n",
        "token_count": 515
    },
    "0041fc88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc88(int32_t *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    param_1[1] = 0x100000;\n    iVar2 = sub.KERNEL32.DLL_VirtualAlloc();\n    *param_1 = iVar2;\n    if (iVar2 == 0) {\n        param_1[1] = param_2 + 0xffffU & 0xffff0000;\n        iVar2 = sub.KERNEL32.DLL_VirtualAlloc();\n        *param_1 = iVar2;\n    }\n    if (*param_1 != 0) {\n        cVar1 = fcn.0041fad8();\n        if (cVar1 == '\\0') {\n            sub.KERNEL32.DLL_VirtualFree(*param_1, 0, 0x8000);\n            *param_1 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0041fd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fd00(uint32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    \n    uStack28 = 0xffffffff;\n    uStack24 = 0;\n    puVar1 = *0x466eec;\n    while (puVar4 = puVar1,  puVar4 != 0x466eec) {\n        puVar1 = *puVar4;\n        uVar2 = puVar4[2];\n        if ((in_EAX <= uVar2) && (uVar2 + puVar4[3] <= param_2 + in_EAX)) {\n            if (uVar2 < uStack28) {\n                uStack28 = uVar2;\n            }\n            if (uStack24 < uVar2 + puVar4[3]) {\n                uStack24 = uVar2 + puVar4[3];\n            }\n            iVar3 = sub.KERNEL32.DLL_VirtualFree(uVar2, 0, 0x8000);\n            if (iVar3 == 0) {\n                *0x466ec8 = 1;\n            }\n            fcn.0041fb08();\n        }\n    }\n    *param_1 = 0;\n    if (uStack24 != 0) {\n        *param_1 = uStack28;\n        param_1[1] = uStack24 - uStack28;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0041fecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fecc(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iStack24;\n    \n    puVar1 = *0x466efc;\n    do {\n        for (; puVar1 != 0x466efc; puVar1 = *puVar1) {\n            if ((in_EAX + 0x3fffU & 0xffffc000) <= puVar1[3]) {\n                fcn.0041fdb8();\n                if (*param_2 == 0) {\n                    return;\n                }\n                puVar1[2] = puVar1[2] + param_2[1];\n                puVar1[3] = puVar1[3] - param_2[1];\n                if (puVar1[3] != 0) {\n                    return;\n                }\n                fcn.0041fb08();\n                return;\n            }\n        }\n        fcn.0041fc24();\n        if (*param_2 == 0) {\n            return;\n        }\n        fcn.0041fb20();\n        puVar1 = *0x466efc;\n    } while (iStack24 != 0);\n    fcn.0041fd00();\n    *param_2 = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "0041ff5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ff5c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    uVar2 = param_2 + 0x3fffU & 0xffffc000;\n    puVar1 = *0x466efc;\ncode_r0x0041ff82:\n    do {\n        for (; (puVar1 != 0x466efc && (in_EAX != puVar1[2])); puVar1 = *puVar1) {\n        }\n        if (in_EAX == puVar1[2]) {\n            if (uVar2 <= puVar1[3]) goto code_r0x0042002f;\n            fcn.0041fc88();\n            if (iStack32 != 0) {\n                fcn.0041fb20();\n                puVar1 = *0x466efc;\n                if (iStack24 == 0) {\n                    fcn.0041fd00();\n                    *param_1 = 0;\n                    return;\n                }\n                goto code_r0x0041ff82;\n            }\n        }\n        fcn.0041fc88();\n        if (iStack32 == 0) {\ncode_r0x0042002f:\n            if ((in_EAX != puVar1[2]) || (puVar1[3] < uVar2)) {\n                *param_1 = 0;\n                return;\n            }\n            fcn.0041fdb8();\n            if (*param_1 == 0) {\n                return;\n            }\n            puVar1[2] = puVar1[2] + param_1[1];\n            puVar1[3] = puVar1[3] - param_1[1];\n            if (puVar1[3] != 0) {\n                return;\n            }\n            fcn.0041fb08();\n            return;\n        }\n        fcn.0041fb20();\n        puVar1 = *0x466efc;\n        if (iStack24 == 0) {\n            fcn.0041fd00();\n            *param_1 = 0;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 511
    },
    "00420080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420080(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iStack28;\n    int32_t iStack20;\n    \n    if ((in_EAX + 0x3fffU & 0xffffc000) < (param_2 + in_EAX & 0xffffc000U)) {\n        fcn.0041fe4c();\n        fcn.0041fb20();\n        if (iStack28 != 0) {\n            fcn.0041fd00();\n            iStack28 = iStack20;\n        }\n        if (iStack28 != 0) {\n            fcn.0041fb90();\n        }\n    }\n    else {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0042010c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042010c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4201c2;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    sub.KERNEL32.DLL_InitializeCriticalSection(0x466ecc);\n    if (*0x46694d != '\\0') {\n        sub.KERNEL32.DLL_EnterCriticalSection(0x466ecc);\n    }\n    fcn.0041fad0();\n    fcn.0041fad0();\n    fcn.0041fad0();\n    uVar2 = 0;\n    *0x466f24 = sub.KERNEL32.DLL_LocalAlloc(0, 0xff8);\n    if (*0x466f24 != 0) {\n        iVar1 = 3;\n        do {\n            *(*0x466f24 + -0xc + iVar1 * 4) = 0;\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n        *0x466f10 = 0x466f0c;\n        *0x466f0c = 0x466f0c;\n        *0x466f18 = 0x466f0c;\n        *0x466ec4 = 1;\n    }\n    *in_FS_OFFSET = uVar2;\n    if (*0x46694d != '\\0') {\n        sub.KERNEL32.DLL_LeaveCriticalSection(0x466ecc, 0x4201c9);\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "004201d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004201d0(void)\n\n{\n    uchar *puVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint *puVar3;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*0x466ec4 == '\\0') {\n        return;\n    }\n    uStack16 = 0x4202a6;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puVar1 = &stack0xfffffffc;\n    if (*0x46694d != '\\0') {\n        sub.KERNEL32.DLL_EnterCriticalSection(0x466ecc);\n        puVar1 = puStack12;\n    }\n    puStack12 = puVar1;\n    *0x466ec4 = 0;\n    puVar3 = *0x466f24;\n    sub.KERNEL32.DLL_LocalFree();\n    *0x466f24 = NULL;\n    for (puVar2 = *0x466eec; puVar2 != 0x466eec; puVar2 = *puVar2) {\n        puVar3 = puVar2[2];\n        sub.KERNEL32.DLL_VirtualFree();\n    }\n    fcn.0041fad0();\n    fcn.0041fad0();\n    fcn.0041fad0();\n    while (puVar2 = *0x466ee4,  puVar2 != NULL) {\n        *0x466ee4 = *puVar2;\n        sub.KERNEL32.DLL_LocalFree();\n        puVar3 = puVar2;\n    }\n    *0x466ee4 = puVar2;\n    *in_FS_OFFSET = puVar3;\n    uStack20 = 0x4202ad;\n    if (*0x46694d != '\\0') {\n        sub.KERNEL32.DLL_LeaveCriticalSection(0x466ecc);\n    }\n    sub.KERNEL32.DLL_DeleteCriticalSection(0x466ecc);\n    return;\n}\n",
        "token_count": 450
    },
    "004205a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004205a0(void)\n\n{\n    if (0 < *0x466f1c) {\n        if (*0x466f1c < 0xc) {\n            *0x466ec8 = 7;\n        }\n        else {\n            **0x466f20 = *0x466f1c | 2;\n            fcn.00420374();\n            *0x466f20 = NULL;\n            *0x466f1c = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00420678": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00420678(void)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    uint uStack8;\n    \n    fcn.0041fecc();\n    if (iStack12 != 0) {\n        uVar1 = fcn.004205ec();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x0042069f;\n        }\n    }\n    uVar1 = 0;\ncode_r0x0042069f:\n    return CONCAT44(uStack8, uVar1);\n}\n",
        "token_count": 137
    },
    "004206a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.004206a4(void)\n\n{\n    uint uVar1;\n    int32_t iStack16;\n    uint uStack12;\n    \n    fcn.0041ff5c();\n    if (iStack16 != 0) {\n        uVar1 = fcn.004205ec();\n        if (uVar1 != '\\0') {\n            uVar1 = CONCAT31(uVar1 >> 8, 1);\n            goto code_r0x004206d0;\n        }\n    }\n    uVar1 = 0;\ncode_r0x004206d0:\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 139
    },
    "004207f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * fcn.004207f8(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x466ec4 == '\\0') {\n        puStack28 = 0x420811;\n        cVar2 = fcn.0042010c();\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    if (0x7ffffff8 < in_EAX) {\n        return NULL;\n    }\n    uStack32 = 0x420974;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (*0x46694d != '\\0') {\n        uStack40 = 0x466ecc;\n        puStack28 = &stack0xfffffffc;\n        sub.KERNEL32.DLL_EnterCriticalSection();\n    }\n    puVar4 = *0x466f20;\n    uVar5 = in_EAX + 7U & 0xfffffffc;\n    if (uVar5 < 0xc) {\n        uVar5 = 0xc;\n    }\n    if (uVar5 < 0x1001) {\n        uVar3 = uVar5;\n        if (uVar5 < 0) {\n            uVar3 = uVar5 + 3;\n        }\n        puVar1 = *(*0x466f24 + -0xc + (uVar3 >> 2) * 4);\n        if (puVar1 != NULL) {\n            *(puVar1 + uVar5) = *(puVar1 + uVar5) & 0xfffffffe;\n            puVar4 = puVar1[1];\n            if (puVar1 == puVar4) {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x466f24 + -0xc + (uVar3 >> 2) * 4) = 0;\n            }\n            else {\n                uVar3 = uVar5;\n                if (uVar5 < 0) {\n                    uVar3 = uVar5 + 3;\n                }\n                *(*0x466f24 + -0xc + (uVar3 >> 2) * 4) = puVar4;\n                uVar3 = *puVar1;\n                *(uVar3 + 4) = puVar4;\n                *puVar4 = uVar3;\n            }\n            *puVar1 = puVar1[2] | 2;\n            *0x466eb8 = *0x466eb8 + 1;\n            *0x466ebc = *0x466ebc + (uVar5 - 4);\n            fcn.00422468();\n            return puVar1 + 1;\n        }\n    }\n    if (*0x466f1c < uVar5) {\n        fcn.00420704();\n        puVar4 = NULL;\n        *in_FS_OFFSET = uStack40;\n        uStack32 = 0x42097b;\n        if (*0x46694d != '\\0') {\n            uStack36 = 0x466ecc;\n            puVar4 = sub.KERNEL32.DLL_LeaveCriticalSection();\n        }\n        return puVar4;\n    }\n    *0x466f1c = *0x466f1c - uVar5;\n    if (*0x466f1c < 0xc) {\n        uVar5 = uVar5 + *0x466f1c;\n        *0x466f1c = 0;\n    }\n    *0x466f20 = *0x466f20 + uVar5;\n    *puVar4 = uVar5 | 2;\n    *0x466eb8 = *0x466eb8 + 1;\n    *0x466ebc = *0x466ebc + (uVar5 - 4);\n    fcn.00422468();\n    return puVar4 + 1;\n}\n",
        "token_count": 968
    },
    "00420cfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00420cfc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x466ec4 == '\\0') {\n        puStack24 = 0x420d15;\n        cVar1 = fcn.0042010c();\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    uStack28 = 0x420dad;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*0x46694d != '\\0') {\n        uStack36 = 0x466ecc;\n        puStack24 = &stack0xfffffffc;\n        sub.KERNEL32.DLL_EnterCriticalSection();\n    }\n    cVar1 = fcn.00420b2c();\n    if ((cVar1 == '\\0') && (iVar2 = fcn.004207f8(),  iVar2 != 0)) {\n        fcn.00421024();\n        fcn.00420988();\n    }\n    uVar3 = 0;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x420db4;\n    if (*0x46694d != '\\0') {\n        uStack32 = 0x466ecc;\n        uVar3 = sub.KERNEL32.DLL_LeaveCriticalSection();\n    }\n    return uVar3;\n}\n",
        "token_count": 362
    },
    "00420f84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00420f84(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x466904 != NULL) {\n        (**0x466904)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.0040143c();\n    }\n    fcn.00420f2c();\n    return;\n}\n",
        "token_count": 82
    },
    "00420eb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00420eb8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040143c();\n    if (*(iVar1 + 8) != 0) {\n        iVar1 = fcn.0040143c();\n        return *(*(iVar1 + 8) + 8);\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "00420ed8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00420ed8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040143c();\n    if (*(iVar1 + 8) != 0) {\n        iVar1 = fcn.0040143c();\n        return *(*(iVar1 + 8) + 4);\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "00420f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f65)\n// WARNING: Removing unreachable block (ram,0x00420f6a)\n\nvoid __fastcall fcn.00420f90(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040143c(param_1, param_2);\n    if (*(iVar1 + 0xc) != 0) {\n        if (*0x466904 != NULL) {\n            (**0x466904)();\n        }\n        fcn.0040143c();\n        fcn.00420f2c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "004210b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004210b8(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.004213d4();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4211c8;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.00420fb0();\n    }\n    return iVar2;\n}\n",
        "token_count": 242
    },
    "004216c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004216c0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.0042166c();\n        iVar2 = fcn.0040143c();\n        if (*(iVar2 + 0xc) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x4216f0;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00421628(param_2, 0x4216f0),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.00420fb0();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 512
    },
    "00421cdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421cdc(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x421d60;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00421d70();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.00421cac();\n            fcn.00424460();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x421d67;\n    uStack32 = 0x421d5f;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 284
    },
    "00421e24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00421e24(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.00421df4(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00421e31. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x466928 != NULL) {\n        (**0x466928)();\n    }\n    *0x461a5c = param_2;\n    *0x461a58 = 0xd2;\n    fcn.0042266c();\n    return;\n}\n",
        "token_count": 171
    },
    "00421fec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00421fec(void)\n\n{\n    if (1 < *0x461a6c) {\n        (**0x466910)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00422008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422008(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x461a6c != '\\0') {\n        auStack12[0] = param_2;\n        (**0x466910)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00422044": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00422044(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x461a6c) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x466910)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 119
    },
    "00422058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00422058(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x461a6c) {\n        uVar1 = 0;\n        (**0x466910)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 88
    },
    "0042208c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042208c(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x461a6c) {\n        uStack16 = 0x42209d;\n        uStack8 = param_2;\n        fcn.0042206c();\n        (**0x466910)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004220b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004220b4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x461a6c) {\n        uStack4 = param_2;\n        (**0x466910)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004225e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004225e0(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    uchar *puStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x46694c != '\\0') {\n        if ((*0x466b20 == -0x284e) && (*0x466b28 != 0)) {\n            uStack8 = 0x422609;\n            (**0x466b38)();\n        }\n        puStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x42261e;\n        uStack28 = sub.KERNEL32.DLL_GetStdHandle();\n        sub.KERNEL32.DLL_WriteFile();\n        uVar1 = sub.KERNEL32.DLL_GetStdHandle(0xfffffff5, 0x422668, 2, &stack0xffffffe4, 0);\n        sub.KERNEL32.DLL_WriteFile(uVar1);\n        return;\n    }\n    if (*0x461a74 == '\\0') {\n        uStack8 = 0;\n        puStack12 = 0x461acc;\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x42265d;\n        sub.USER32.DLL_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "0042266c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042266c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x466f60 == 0) && (*0x466948 != NULL)) {\n        do {\n            pcVar1 = *0x466948;\n            *0x466948 = NULL;\n            (*pcVar1)();\n        } while (*0x466948 != NULL);\n    }\n    if (*0x461a5c != 0) {\n        fcn.00422554();\n        fcn.004225e0();\n        *0x461a5c = 0;\n    }\n    do {\n        if ((*0x466f60 == 2) && (*0x461a58 == 0)) {\n            *0x466f44 = 0;\n        }\n        fcn.004224a8();\n        if (((*0x466f60 < 2) || (*0x461a58 != 0)) && (*0x466f48 != 0)) {\n            fcn.004243d8();\n            iVar2 = *(*0x466f48 + 0x10);\n            if ((iVar2 != *(*0x466f48 + 4)) && (iVar2 != 0)) {\n                sub.KERNEL32.DLL_FreeLibrary(iVar2);\n            }\n        }\n        fcn.00422480();\n        if (*0x466f60 == 1) {\n            (**0x466f5c)();\n        }\n        if (*0x466f60 != 0) {\n            fcn.004225b0();\n        }\n        if (*0x466f38 == NULL) {\n            if (*0x466924 != NULL) {\n                (**0x466924)();\n            }\n            sub.KERNEL32.DLL_ExitProcess(*0x461a58);\n        }\n        puVar3 = *0x466f38;\n        puVar4 = 0x466f38;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 503
    },
    "00422d98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422d98(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00420e00();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.00422820();\n        if (*in_EAX != 0) {\n            fcn.00421024();\n        }\n    }\n    fcn.0042275c();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 194
    },
    "004230a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004230a8(uint arg_8h)\n\n{\n    fcn.00422fb8();\n    fcn.00422f38();\n    return;\n}\n",
        "token_count": 40
    },
    "00423230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00423230(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0042275c();\n            }\n            else {\n                fcn.00422780();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00422e4c();\n            }\n            else {\n                fcn.00422e64();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00423694();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00423230();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004231fc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00424448();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x466904 != NULL) {\n                    (**0x466904)();\n                }\n                fcn.00420f2c();\n                return;\n            }\n            do {\n                fcn.00423d9c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "0042389c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00423984)\n// WARNING: Removing unreachable block (ram,0x00423a79)\n// WARNING: Removing unreachable block (ram,0x00423a80)\n// WARNING: Removing unreachable block (ram,0x00423a06)\n// WARNING: Removing unreachable block (ram,0x00423a1c)\n// WARNING: Removing unreachable block (ram,0x00423a8a)\n// WARNING: Removing unreachable block (ram,0x00423a8d)\n// WARNING: Removing unreachable block (ram,0x00423a93)\n// WARNING: Removing unreachable block (ram,0x00423a12)\n\nulong __fastcall fcn.0042389c(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x00423aae;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar3 = 1;\n    piStack36 = param_2;\n    if ((*(in_EAX + -1 + iVar7) == '$') || ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.00421064(),  cVar4 == 'X'))))\n    {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x004239b6;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x004239b6;\n            uVar2 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar2) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar3 = 0;\n        } while( true );\n    }\n    for (; uVar1 = *(in_EAX + -1 + iVar7),  uVar1 - 0x30 < 10; iVar7 = iVar7 + 1) {\n        iVar6 = fcn.004236a4();\n        piStack36 = (uVar1 - 0x30) + iVar6;\n        uVar3 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00423a94;\ncode_r0x004239b6:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00423a94:\n    if (uVar3 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x00423aae:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1064
    },
    "00423af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423af0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00420f84();\n        }\n        fcn.00423ae8();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00420f84();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.00423ae0();\n            }\n            fcn.00420e00();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00420dc0();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.00421024();\n            }\n            else {\n                fcn.0042153c();\n                fcn.00423ad0(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.0042153c();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.00423af0(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 637
    },
    "00423ca8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423ca8(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *puVar3;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar3 = NULL;\n    if (in_EAX != 0) {\n        if (in_ECX < 0) {\n            arg_ch = arg_ch + in_ECX;\n            in_ECX = 0;\n        }\n        iVar1 = *(in_EAX + -4);\n        if (iVar1 < in_ECX) {\n            in_ECX = iVar1;\n        }\n        if (iVar1 - in_ECX < arg_ch) {\n            arg_ch = iVar1 - in_ECX;\n        }\n        if (arg_ch < 0) {\n            arg_ch = 0;\n        }\n        if (0 < arg_ch) {\n            piVar2 = *(in_EDX + *(in_EDX + 1) + 6);\n            if (piVar2 == NULL) {\n                var_10h = 0;\n            }\n            else {\n                var_10h = *piVar2;\n            }\n            puVar3 = fcn.00420dc0();\n            *puVar3 = 1;\n            puVar3[1] = arg_ch;\n            puVar3 = puVar3 + 2;\n            if (0 < arg_ch) {\n                if (var_10h == 0) {\n                    fcn.00421024();\n                }\n                else {\n                    fcn.0042153c();\n                    fcn.00423ad0(arg_ch);\n                }\n            }\n        }\n    }\n    fcn.00423ae8();\n    *arg_8h = puVar3;\n    return;\n}\n",
        "token_count": 429
    },
    "00423e30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00423e30(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.KERNEL32.DLL_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.0042406c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 155
    },
    "00423eb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00423eb4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    code *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint var_24fh;\n    uint var_14ah;\n    uint var_11eh;\n    char *var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    var_ch = in_EAX;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    iVar1 = sub.KERNEL32.DLL_GetModuleHandleA(0x424048);\n    if (((iVar1 == 0) || (pcVar2 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x424058),  pcVar2 == NULL)) ||\n       (iVar1 = (*pcVar2)(var_4h, &var_24fh, 0x105),  iVar1 == 0)) {\n        if (*var_4h == '\\\\') {\n            if (var_4h[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00423ea0();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00423ea0();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = var_4h + 2;\n        }\n        iVar1 = pcVar3 - var_4h;\n        puVar6 = &var_24fh;\n        sub.KERNEL32.DLL_lstrcpynA(puVar6, var_4h, iVar1 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00423ea0();\n            if (0x105 < pcVar4 + (iVar1 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.KERNEL32.DLL_lstrcpynA(&var_24fh + iVar1, pcVar3, pcVar4 + (1 - pcVar3));\n            iVar5 = sub.KERNEL32.DLL_FindFirstFileA(&var_24fh, &var_14ah);\n            if (iVar5 == -1) {\n                return var_ch;\n            }\n            sub.KERNEL32.DLL_FindClose(iVar5);\n            iVar5 = sub.KERNEL32.DLL_lstrlenA(&var_11eh);\n            if (0x105 < iVar5 + iVar1 + 2) {\n                return var_ch;\n            }\n            *(&var_24fh + iVar1) = 0x5c;\n            sub.KERNEL32.DLL_lstrcpynA(&var_24fh + iVar1 + 1, &var_11eh, 0x104 - iVar1);\n            puVar6 = &var_11eh;\n            iVar5 = sub.KERNEL32.DLL_lstrlenA();\n            iVar1 = iVar1 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.KERNEL32.DLL_lstrcpynA(var_4h, &var_24fh, var_8h, puVar6);\n    }\n    else {\n        sub.KERNEL32.DLL_lstrcpynA(var_4h, &var_24fh, var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 906
    },
    "0042406c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0042406c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint var_11dh;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.0042406c::var_11dh;\n    noname_18 = 0;\n    sub.KERNEL32.DLL_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.0042406c::var_8h;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x42429c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x4240ab;\n    iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.0042406c::var_8h;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x42429c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x4240c9;\n        iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.0042406c::var_8h;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x4242b8;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.KERNEL32.DLL_lstrcpynA();\n                uVar5 = sub.KERNEL32.DLL_GetThreadLocale(3, &fcn.0042406c::var_eh + 1, 5);\n                sub.KERNEL32.DLL_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((var_11dh != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.KERNEL32.DLL_lstrlenA(&fcn.0042406c::var_11dh);\n                    for (puVar3 = &fcn.0042406c::var_11dh + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.0042406c::var_11dh)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.0042406c::var_11dh) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.KERNEL32.DLL_lstrcpynA\n                                      (pcVar4, &fcn.0042406c::var_12h, 0x105 - (pcVar4 - &fcn.0042406c::var_11dh));\n                            iVar1 = sub.KERNEL32.DLL_LoadLibraryExA(&fcn.0042406c::var_11dh, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.KERNEL32.DLL_lstrcpynA\n                                      (pcVar4, &fcn.0042406c::var_eh + 1, 0x105 - (pcVar4 - &fcn.0042406c::var_11dh));\n                            iVar1 = sub.KERNEL32.DLL_LoadLibraryExA(&fcn.0042406c::var_11dh, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.KERNEL32.DLL_lstrcpynA\n                                          (pcVar4, &fcn.0042406c::var_eh + 1, 0x105 - (pcVar4 - &fcn.0042406c::var_11dh)\n                                          );\n                                iVar1 = sub.KERNEL32.DLL_LoadLibraryExA(&fcn.0042406c::var_11dh, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00423eb4(noname_0, 0x424171, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA\n                      (var_8h, &fcn.0042406c::var_11dh, 0, 0, &fcn.0042406c::var_12h, &fcn.0042406c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = var_8h;\n        iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA\n                          (var_8h, 0x4242d8, 0, 0, &fcn.0042406c::var_12h, &fcn.0042406c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.ADVAPI32.DLL_RegCloseKey(var_8h, 0x424178);\n    return iVar1;\n}\n",
        "token_count": 1655
    },
    "0042436c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042436c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x461a80;\n    if (*0x461a80 != NULL) {\n        do {\n            uStack32 = 0x4243a7;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "004245a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004245a4(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 654
    },
    "00424680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424680(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            do {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) != 0) {\n                    if ((uVar2 & 0xf0) == 0xf0) {\n                        return -1;\n                    }\n                    if ((uVar2 & 0x40) == 0) {\n                        return -1;\n                    }\n                    if (arg_8h < uVar6) {\n                        return -1;\n                    }\n                    if ((*(in_ECX + uVar6) & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    if (arg_8h < uVar5 + 2) {\n                        return -1;\n                    }\n                    if (((uVar2 & 0x20) != 0) && ((*(in_ECX + uVar5 + 2) & 0xc0) != 0x80)) {\n                        return -1;\n                    }\n                    uVar6 = uVar5 + 3;\n                }\n                uVar3 = uVar3 + 1;\n                uVar5 = uVar6;\n            } while (uVar6 <= arg_8h);\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    uVar4 = uVar2 & 0x3f;\n                    if (arg_8h < uVar6) {\n                        return -1;\n                    }\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h < uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 861
    },
    "004252e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004252e8(uint arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4253e4;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    bVar1 = false;\n    arg_8h_00 = 0x425322;\n    cVar2 = fcn.00425578();\n    if (cVar2 != '\\0') {\n        if ((((arg_ch == 0x102) || (arg_ch == 0x105)) || (arg_ch == 0x201)) ||\n           (((arg_ch == 10 || (arg_ch == 8)) || ((arg_ch == 1 || (arg_ch == 0x101)))))) {\n            arg_8h_00 = 0;\n            fcn.00412880();\n            cVar2 = fcn.004254c8(arg_8h_00);\n            if (cVar2 != '\\0') {\n                bVar1 = true;\n            }\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            *(in_EAX + 0x10) = 1;\n            fcn.00412880();\n            fcn.004227b0();\n            fcn.00424c74(arg_ch, arg_8h);\n            uVar3 = fcn.00422c0c();\n            sub.USER32.DLL_WinHelpA(in_EDX, uVar3);\n        }\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x4253eb;\n    uStack52 = 0x4253e3;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 495
    },
    "00425068": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425068(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4250c0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x467010 != NULL) {\n        fcn.00424c74();\n        (**(**0x467010 + 0x10))();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4250c7;\n    uStack28 = 0x4250bf;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 176
    },
    "004250d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004250d0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack296;\n    uint uStack292;\n    uchar *puStack288;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack288 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack292 = 0x4251c6;\n    uStack296 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed8;\n    var_108h._0_1_ = 0xb;\n    var_10ch = param_2;\n    fcn.0041335c(0, &fcn.004250d0::var_10ch);\n    fcn.00424c74();\n    uVar2 = 0x425136;\n    cVar1 = fcn.00425578();\n    if (cVar1 != '\\0') {\n        uVar2 = 0;\n        fcn.004229c4();\n        cVar1 = fcn.004254c8(uVar2);\n        if ((cVar1 != '\\0') && (var_4h != 0)) {\n            *(in_EAX + 0x10) = 1;\n            fcn.004229c4();\n            uVar2 = fcn.00422c0c(0x102, &fcn.004250d0::var_104h);\n            uVar2 = (**(**(in_EAX + 0x1c) + 0xc))(uVar2);\n            sub.USER32.DLL_WinHelpA();\n        }\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.0042275c(0x4251cd);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 453
    },
    "004251e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004251e4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x425246;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x467010 != NULL) {\n        fcn.00424c74();\n        (**(**0x467010 + 0x14))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42524d;\n    uStack32 = 0x425245;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 179
    },
    "00425258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004252a1)\n\nvoid __fastcall fcn.00425258(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4252d8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00424c74();\n    uVar2 = 0x425287;\n    cVar1 = fcn.00425578();\n    if (cVar1 != '\\0') {\n        fcn.004254c8(param_2);\n        uVar2 = param_2;\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack28 = 0x4252df;\n    uStack32 = 0x4252d7;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 244
    },
    "00424d44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00424d44(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x424dab;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*0x467010 != NULL) {\n        fcn.00424c74();\n        (**(**0x467010 + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x424db2;\n    uStack24 = 0x424daa;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 174
    },
    "00424dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424dbc(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x424e44;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*0x467010 == NULL) {\n        piVar1 = fcn.00421bf8();\n        fcn.00424d30();\n        fcn.00422ad4(param_2, 0x424e5c, 0);\n        (**(*piVar1 + 0x38))();\n    }\n    else {\n        puStack28 = &stack0xfffffffc;\n        (**(**0x467010 + 0x18))();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x424e4b;\n    uStack32 = 0x424e43;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 264
    },
    "00424e64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424ea9)\n\nvoid fcn.00424e64(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x424edf;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    cVar1 = fcn.00425578();\n    if (cVar1 != '\\0') {\n        *(in_EAX + 0x10) = 2;\n        (**(**(in_EAX + 0x1c) + 0x10))();\n        fcn.00424c74();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x424ee6;\n    uStack24 = 0x424ede;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 244
    },
    "00424eec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424f73)\n\nvoid fcn.00424eec(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_8h;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x424fca;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h = &fcn.00424eec::var_4h;\n    fcn.00424c74();\n    fcn.0041339c(arg_8h);\n    uVar2 = 0x424f4b;\n    cVar1 = fcn.00425578();\n    if (cVar1 != '\\0') {\n        fcn.00424c74();\n        uVar2 = 0;\n        fcn.004254c8(0);\n    }\n    *in_FS_OFFSET = uVar2;\n    uStack52 = 0x424fd1;\n    fcn.0042275c();\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 324
    },
    "00424c74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424c74(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x424cf4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0042275c();\n    if ((param_2 == 0) && (*(in_EAX + 0x1c) != 0)) {\n        (**(**(in_EAX + 0x1c) + 0x10))();\n    }\n    else {\n        fcn.004227f4();\n    }\n    if (*0x467010 != NULL) {\n        (**(**0x467010 + 0x20))();\n    }\n    fcn.004227b0();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x424cfb;\n    uStack28 = 0x424cf3;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 268
    },
    "00424d04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00424d04(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042501c();\n    if (*(in_EAX + 0x1c) != 0) {\n        (**(**(in_EAX + 0x1c) + 0x14))();\n        if (*(in_EAX + 0x1c) != 0) {\n            fcn.00424448();\n        }\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004254c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004254c8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack40 = 0x4254e0;\n    var_1h._0_1_ = in_DL;\n    fcn.00422bfc();\n    uStack44 = 0x425542;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.004254c8::var_1h + 1;\n    fcn.004254ac();\n    if ((((var_ch != '\\0') && (var_1h == *(in_EAX + 0x10))) && (var_1h != '\\0')) && (var_1h == '\\x01')) {\n        fcn.0041265c();\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x425549;\n    uStack44 = 0x425541;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 315
    },
    "00425558": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00425558(uint param_1, int32_t param_2)\n\n{\n    char cStack11;\n    \n    cStack11 = *(param_2 + 0xc) >> 8;\n    return cStack11 == '\\0';\n}\n",
        "token_count": 58
    },
    "00425578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00425578(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    char cStack12;\n    \n    uVar3 = 0;\n    if (cStack12 != '\\0') {\n        uVar2 = sub.USER32.DLL_GetWindowThreadProcessId();\n        sub.USER32.DLL_EnumThreadWindows(uVar2);\n    }\n    cVar1 = fcn.00425554();\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00425558();\n        if (cVar1 != '\\0') {\n            fcn.004255d0();\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 161
    },
    "004255d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042561c)\n\nvoid fcn.004255d0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x42564d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0042501c();\n    iVar1 = sub.KERNEL32.DLL_GetTickCount();\n    do {\n        uStack28 = 0;\n        sub.KERNEL32.DLL_Sleep();\n        iVar2 = sub.KERNEL32.DLL_GetTickCount();\n    } while (iVar2 - iVar1 < 0x3e9);\n    fcn.00424c74();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x425654;\n    uStack24 = 0x42564c;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 250
    },
    "00425684": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425684(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4256e7;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x467018 = *0x467018 + 1;\n    if (*0x467018 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*(*0x46701c + 0x1c) != 0) {\n            fcn.00424d04();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x467010 != 0) {\n            fcn.00424448();\n        }\n        fcn.0042275c();\n        fcn.00424448();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "00425b08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425b08(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x425bb5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00424964();\n        fcn.00414b70();\n        fcn.004223bc();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.00426604();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.004336e4();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.00425bd4();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x425bbc;\n    uStack20 = 0x425bb4;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 386
    },
    "00425bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00425bc0(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "00425bc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425bc8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.00425d98();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00425d0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425d0c(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.0042658c();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 100))();\n    }\n    else {\n        cVar1 = fcn.00433d18();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 100))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x6c))();\n            (**(*param_1 + 100))();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00425d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425d60(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.00425bc0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.00425cfc();\n        sub.COMCTL32.DLL_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.00421e24();\n    return;\n}\n",
        "token_count": 130
    },
    "00426020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426020(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00425bc0();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.004336e4();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.00434a1c();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.00433cac();\n            fcn.0043095c();\n            fcn.00405e68(&var_28h, *(in_EAX + 0x30));\n            fcn.00433cac(&var_28h);\n            fcn.00430d00();\n            fcn.00433cac(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00430fe8();\n            uVar2 = fcn.00425cfc(var_4h, uVar2);\n            sub.COMCTL32.DLL_ImageList_DrawEx(uVar2);\n            fcn.00405e68(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.00433cac();\n            var_8h = fcn.00430fe8();\n            fcn.0043095c();\n            uVar2 = fcn.00430fe8();\n            sub.GDI32.DLL_SetTextColor(uVar2, 0xffffff);\n            sub.GDI32.DLL_SetBkColor(uVar2, 0);\n            sub.GDI32.DLL_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.0043095c();\n            uVar2 = fcn.00430fe8();\n            sub.GDI32.DLL_SetTextColor(uVar2, 0xffffff);\n            sub.GDI32.DLL_SetBkColor(uVar2, 0);\n            sub.GDI32.DLL_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.00425a10(arg_ch);\n            fcn.00425ff8(uVar2);\n            uVar2 = fcn.00425a10();\n            uVar2 = fcn.00430fe8(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.00425cfc(var_4h, uVar2);\n            sub.COMCTL32.DLL_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 791
    },
    "0042680c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042680c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.00425f04();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.00421db4();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0042671c(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 136
    },
    "004268c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004268c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x4268dd;\n    var_4h = in_EAX;\n    fcn.00409a20();\n    puStack84 = 0x4268ec;\n    fcn.00409a20();\n    puStack84 = 0x4268f8;\n    var_8h = fcn.004336e4();\n    uStack88 = 0x426b44;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.004097f4();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x42692b;\n    fcn.00409814(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x426937;\n    var_10h = fcn.004336e4();\n    uStack108 = 0x426b27;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.004336e4();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.004336e4();\n    fcn.00434a1c();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00405e68(&fcn.004268c0::var_30h, *(var_4h + 0x30));\n    fcn.00426e24();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00405e90(&fcn.004268c0::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004268c0::var_40h;\n                    uVar2 = fcn.00433cac();\n                    fcn.00433cac(uVar2);\n                    fcn.00430bcc(puVar3);\n                    fcn.00405e90(&fcn.004268c0::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004268c0::var_40h;\n                    uVar2 = fcn.00433cac();\n                    fcn.00433cac(uVar2);\n                    fcn.00430bcc(puVar3);\n                    fcn.00425e38();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00421c28();\n    fcn.00421c28();\n    fcn.00426e28();\n    return;\n}\n",
        "token_count": 1037
    },
    "00426e28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426e28(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.00421e24();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00427604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00427604(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040f138();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00421bf8();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x427788;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 269
    },
    "00427880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00427880(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    fcn.00438d4c();\n    iVar3 = fcn.00429140();\n    if ((iVar3 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n        iVar7 = 0;\n        do {\n            piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n            cVar2 = fcn.00421db4();\n            if (cVar2 != '\\0') {\n                if (iVar3 == *(piVar1 + 0x21)) {\ncode_r0x004278f7:\n                    uVar5 = (**(*piVar1 + 0x50))();\n                    goto code_r0x00427906;\n                }\n                if (piVar1[0x24] != 0) {\n                    fcn.00428078();\n                    iVar4 = fcn.004280d8();\n                    if (iVar4 != -1) goto code_r0x004278f7;\n                }\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + -1;\n        } while (iVar6 != 0);\n    }\n    uVar5 = 0;\ncode_r0x00427906:\n    return CONCAT44(in_EAX, uVar5);\n}\n",
        "token_count": 366
    },
    "00427bf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427bf4(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x427cec;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00421dd8();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0042774c(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.00427738();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.00421db4(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.00427bf4();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 533
    },
    "00427cfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427cfc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00421dd8();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00428078": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00428078(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00421bf8();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "004291cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00429347)\n// WARNING: Removing unreachable block (ram,0x00429354)\n// WARNING: Removing unreachable block (ram,0x00429361)\n// WARNING: Removing unreachable block (ram,0x00429367)\n// WARNING: Removing unreachable block (ram,0x00429374)\n// WARNING: Removing unreachable block (ram,0x0042937a)\n// WARNING: Removing unreachable block (ram,0x00429387)\n\nvoid fcn.004291cc(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.004291cc::var_2h + 2;\n    uStack32 = 0x4293b5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (in_AL < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.004227f4();\n            goto code_r0x00429341;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.004227f4();\n            goto code_r0x00429341;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.004227f4();\n            goto code_r0x00429341;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.004227f4();\n            goto code_r0x00429341;\n        }\n    }\n    else if (in_AL < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.004227f4();\n            goto code_r0x00429341;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.0042293c();\n            goto code_r0x00429341;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.0042293c();\n            goto code_r0x00429341;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.0042293c();\n            goto code_r0x00429341;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.004291cc::var_2h + 2;\n            fcn.00412880();\n            fcn.00422a60();\n            goto code_r0x00429341;\n        }\n    }\n    puStack28 = &fcn.004291cc::var_2h + 2;\n    fcn.00429178();\ncode_r0x00429341:\n    fcn.0042275c();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4293bc;\n    uStack32 = 0x4293b4;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 883
    },
    "0042942c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042942c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429445;\n    fcn.00422bfc();\n    uStack32 = 0x429507;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.004293d0();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.004293d0();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.004293d0(),  cVar1 != '\\0')) || (cVar1 = fcn.004293d0(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar3 = 8;\n        do {\n            fcn.004291cc();\n            iVar2 = fcn.0041275c();\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 != 0x256);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42950e;\n    uStack32 = 0x429506;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 364
    },
    "00429544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00429544(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    code *in_ECX;\n    int32_t in_EDX;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar2 = in_EAX;\n    if (in_EDX != 0) {\n        var_9h = 0;\n        while (var_9h == 0) {\n            piVar2 = fcn.0042b9b0();\n            if (piVar2 <= *in_EAX) break;\n            uVar1 = fcn.0042b9c0();\n            piVar2 = uVar1 & 0xffffff00;\n            if (*(arg_8h + -1) <= *(uVar1 + 0x3f) && *(uVar1 + 0x3f) != *(arg_8h + -1)) break;\n            piVar2 = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n            var_9h = piVar2;\n        }\n    }\n    return piVar2 & 0xffffff00 | var_9h;\n}\n",
        "token_count": 291
    },
    "004295a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004295a4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.0042b9b0();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.0042b9b0();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.0042b9c0();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.0042b9c0();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00429544(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00429544(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.0042b9c0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.0042b9c0(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "00429a38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00429a38(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040f138();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00429524();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00421bf8();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x42c314;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 334
    },
    "00429b68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00429b68(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff84;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_39h;\n    uint var_35h;\n    uint32_t var_31h;\n    uint32_t var_2dh;\n    uint32_t var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_15h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack84 = &var_1h + 1;\n    var_8h = 0;\n    uStack88 = 0x429dc3;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack92;\n    puVar1 = &var_1h + 1;\n    var_1h._0_1_ = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x00429da5;\n    fcn.004227f4();\n    iVar4 = fcn.0042b9b0();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.00421db4();\n                if (cVar3 != '\\0') goto code_r0x00429c04;\n            }\n            fcn.004291cc(0x429ddc, var_8h);\n            fcn.00422ad4(0);\n        }\n    }\n    else {\n        var_25h = fcn.0042a078();\n    }\ncode_r0x00429c04:\n    uVar2 = sub.KERNEL32.DLL_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00422b58();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x461b80) |\n                *(*(in_EAX + 0x48) * 4 + 0x461b74) | *(*(in_EAX + 0x38) * 4 + 0x461b64) |\n                *(*(in_EAX + 0x39) * 4 + 0x461b6c);\n        iVar4 = fcn.0042b9b0();\n        if (iVar4 < 1) {\n            uVar5 = fcn.00422c0c();\n            sub.USER32.DLL_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        else {\n            uVar5 = fcn.00422c0c();\n            uVar5 = fcn.0042a078(uVar5);\n            sub.USER32.DLL_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff84 = param_2;\n            puVar1 = puStack84;\n        }\n        goto code_r0x00429da5;\n    }\n    var_39h = 0x2c;\n    var_35h = 0x3f;\n    iVar4 = fcn.0042bf6c();\n    if (iVar4 == 0) {\ncode_r0x00429c44:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x00429c5a;\n        }\n        var_9h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.0042b588();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x00429c44;\n        }\ncode_r0x00429c5a:\n        var_9h = 1;\n    }\n    fcn.00422b58();\n    var_31h = *((uVar2 & 0x7f) * 4 + 0x461bb4) | *(*(in_EAX + 0x3d) * 4 + 0x461bac) | *(*(in_EAX + 0x48) * 4 + 0x461b88)\n              | *(var_1h * 4 + 0x461bbc) | *(var_9h * 4 + 0x461bc4);\n    var_2dh = *(*(in_EAX + 0x38) * 4 + 0x461b94) | *(*(in_EAX + 0x39) * 4 + 0x461ba4) |\n              *(*(in_EAX + 0x3a) * 4 + 0x461b9c);\n    var_29h = *(in_EAX + 0x50);\n    var_25h = 0;\n    var_21h = 0;\n    var_1dh = 0;\n    var_15h = fcn.00422c0c();\n    iVar4 = fcn.0042b9b0();\n    if (0 < iVar4) {\n        var_25h = fcn.0042a078();\n    }\n    sub.USER32.DLL_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &var_39h);\n    in_stack_ffffff84 = param_2;\n    puVar1 = puStack84;\ncode_r0x00429da5:\n    puStack84 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff84;\n    fcn.0042275c(0x429dca);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 1516
    },
    "00429f48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00429f48(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00429f48();\n        return;\n    }\n    uVar2 = fcn.0042a078();\n    iVar3 = sub.USER32.DLL_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.0042a078(iVar3 + -1, 0x400);\n        uVar4 = sub.USER32.DLL_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.0042a078(iVar3 + -1, 0x400);\n            sub.USER32.DLL_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.00421db4(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.0042a078();\n        iVar3 = sub.USER32.DLL_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.USER32.DLL_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x0042a008;\n        }\n    }\n    fcn.00429e08();\ncode_r0x0042a008:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 479
    },
    "0042a078": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042a078(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.USER32.DLL_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.USER32.DLL_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00429120();\n        }\n        fcn.00429e08();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 190
    },
    "0042a108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042a154)\n// WARNING: Removing unreachable block (ram,0x0042a15e)\n\nvoid __cdecl fcn.0042a108(uint32_t arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    char *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = NULL;\n    uStack52 = 0x42a2ec;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.0042bf6c();\n    if ((iVar2 != 0) && (cVar1 = fcn.0042d5a8(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.004227f4();\n    uVar5 = (arg_8h & 0x400) == 0;\n    if ((!uVar5) &&\n       ((uVar5 = var_ch == NULL,  uVar5 || ((uVar5 = *var_ch == '&',  uVar5 && (uVar5 = var_ch[1] == '\\0',  uVar5))))))\n    {\n        fcn.00422a1c();\n    }\n    fcn.00422b58();\n    if (uVar5) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *arg_10h;\n            uStack24 = arg_10h[2];\n            uStack20 = arg_10h[3];\n            var_18h = arg_10h[1] + 4;\n            uVar3 = fcn.00430fe8(&var_1ch, 6, 2);\n            sub.USER32.DLL_DrawEdge(uVar3);\n        }\n        goto code_r0x0042a2d6;\n    }\n    fcn.00430a78();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.00430450();\n        fcn.0043045c();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.USER32.DLL_OffsetRect(arg_10h, 1, 1);\n            fcn.00430190();\n            uVar3 = fcn.00422a14(arg_10h, arg_8h);\n            uVar3 = fcn.00422c0c(uVar3);\n            uVar3 = fcn.00430fe8(uVar3);\n            sub.USER32.DLL_DrawTextA(uVar3);\n            sub.USER32.DLL_OffsetRect(arg_10h, 0xffffffff, 0xffffffff);\n        }\n        else {\n            iVar2 = fcn.0042fcd0();\n            iVar4 = fcn.0042fcd0();\n            if (iVar2 == iVar4) {\n                fcn.00430190();\n                goto code_r0x0042a2b1;\n            }\n        }\n        fcn.00430190();\n    }\ncode_r0x0042a2b1:\n    uVar3 = fcn.00422a14(arg_10h, arg_8h);\n    uVar3 = fcn.00422c0c(uVar3);\n    uStackY120 = fcn.00430fe8(uVar3);\n    sub.USER32.DLL_DrawTextA();\ncode_r0x0042a2d6:\n    *in_FS_OFFSET = uStackY120;\n    fcn.0042275c(0x42a2f3);\n    return;\n}\n",
        "token_count": 932
    },
    "0042a318": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a318(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar auStack256 [212];\n    uint uStack44;\n    uint32_t uStack40;\n    uint *puStack36;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        puStack36 = &fcn.0042a318::var_10h;\n        uStack40 = &stack0xffffff00 | arg_8h & 0xff;\n        uStack44 = 0x42a34e;\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0042b588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042b588(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042bf6c();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "0042b604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b604(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint8_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack60 = 0x42b7e6;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.00421e24();\n    cVar2 = fcn.00421db4();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.0042b5b8(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.0042bf6c();\n    var_ch = fcn.0042b588();\n    fcn.00422b58();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_ch == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if ((*(in_EAX + 0x4c) == 0) || (cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))(),  cVar2 != '\\0')) {\n            *var_4h = -7;\n            bVar1 = false;\n        }\n        else {\n            *var_4h = 0x10;\n            if (!bVar5) {\n                *arg_8h = 0x10;\n            }\n            bVar1 = true;\n        }\n    }\n    else {\n        *var_4h = *(var_ch + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_ch + 0x30);\n        }\n        bVar1 = true;\n    }\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.0042153c();\n    if (iVar3 == 0) {\n        cVar2 = fcn.00421db4();\n        uVar4 = *0x60;\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.004227f4();\n    }\n    else {\n        fcn.004291cc();\n        fcn.00422a60();\n    }\n    arg_8h_00 = *(uVar4 * 2 + 0x461bdc) | 0x560;\n    fcn.0042a108(arg_8h_00, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.0042275c(0x42b7ed);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 944
    },
    "0042b840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042b840(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.0042b9b0(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0042b9c0();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.0042b888();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0042b888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b888(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.0042a078(*(in_EAX + 0x50), *(param_2 * 4 + 0x461b64));\n            sub.USER32.DLL_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0042b840();\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0042b8dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b8dc(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x4663e4 != 2) || (iVar1 = fcn.0042b9b0(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.0042a078(*(in_EAX + 0x14), *(param_2 * 4 + 0x461b6c));\n            sub.USER32.DLL_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 282
    },
    "0042b954": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b954(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.0042bd14();\n            fcn.0042a018();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0042b840();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0042b9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042b9c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00429120();\n    }\n    fcn.00407488();\n    return;\n}\n",
        "token_count": 63
    },
    "0042bb3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bb3c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00429120();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00421bf8();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00407488();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00407488();\n            fcn.0042b954();\n        }\n    }\n    fcn.0042a018();\n    fcn.00407504();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.0042bdb4;\n    if (in_EAX[0xd] != 0) {\n        fcn.00429f48();\n    }\n    fcn.0042b9b0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 350
    },
    "0042bbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042bbf0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.0042b9b0();\n        if (param_2 < iVar1) goto code_r0x0042bc16;\n    }\n    fcn.00429120();\ncode_r0x0042bc16:\n    iVar1 = fcn.00407488();\n    fcn.00407378();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00429f48();\n    }\n    fcn.0042b9b0();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 234
    },
    "0042bdb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bdb4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00429f48();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.00421db4();\n        if (cVar1 != '\\0') {\n            fcn.0042da8c();\n        }\n    }\n    else {\n        fcn.0042bdb4(0);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0042c410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c410(uint param_1, uint param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffbc;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_10h = 0;\n    var_ch = 0;\n    uStack40 = 0x42c532;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    bVar1 = false;\n    var_4h = param_2;\n    iVar2 = fcn.00422a14();\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x466468 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                bVar1 = true;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (bVar1) {\n        iVar2 = fcn.00422a14(&var_ch);\n        uVar5 = iVar2 == 2;\n        fcn.00422c6c();\n        fcn.00422b58();\n        if (uVar5) {\n            fcn.00422a14(&var_10h);\n            fcn.00422c6c();\n            in_stack_ffffffbc = var_4h;\n            fcn.00422ad4(0x42c548, 0x42c56c, var_4h, 0x42c560, 0x42c554, var_10h);\n        }\n        else {\n            in_stack_ffffffbc = 0x42c56c;\n            fcn.00422ad4(0x42c56c, var_4h, 0x42c560, 0x42c554, *in_EAX);\n        }\n    }\n    else if (var_8h != 0) {\n        fcn.00422cf4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00422780(0x42c539);\n    return;\n}\n",
        "token_count": 593
    },
    "0042c570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c570(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uchar uVar8;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_20h;\n    uchar var_1ah;\n    char var_19h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    var_48h = 0;\n    var_44h = 0;\n    var_40h = 0;\n    var_3ch = 0;\n    var_2ch = 0;\n    var_30h = 0;\n    var_34h = 0;\n    var_4h = 0;\n    var_18h = 0;\n    uStack96 = 0x42ca0f;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    var_1ah = 0;\n    puVar1 = &stack0xfffffffc;\n    var_19h = param_2;\n    if (param_2 != '\\0') {\ncode_r0x0042c5cc:\n        puStack92 = puVar1;\n        puStack104 = 0x42c5da;\n        fcn.004227f4();\n        var_ch = NULL;\n        var_14h = NULL;\n        var_20h = NULL;\n        var_8h = NULL;\n        var_10h = 0;\n        uStack108 = 0x42c9d0;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        var_ch = fcn.00421bf8();\n        var_14h = fcn.00421bf8();\n        var_20h = fcn.00421bf8();\n        var_8h = fcn.00421bf8();\n        iVar3 = fcn.0042b9b0();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                iVar3 = fcn.0042b9c0();\n                uVar8 = *(iVar3 + 0x3e) == '\\0';\n                if (!uVar8) {\n                    fcn.0042b9c0();\n                    fcn.00422b58();\n                    if ((!uVar8) && (iVar3 = fcn.0042b9c0(),  *(iVar3 + 0x30) != 0)) {\n                        fcn.0042b9c0();\n                        fcn.0042e46c();\n                        fcn.004125e4();\n                        if (var_2ch == 0) {\n                            uVar4 = fcn.0042b9c0();\n                            fcn.0042b9c0(uVar4);\n                            (**(*var_20h + 100))();\n                        }\n                        else {\n                            iVar3 = fcn.004154e0();\n                            if ((iVar3 != 0) && (cVar2 = fcn.0042c35c(&stack0xfffffffc),  cVar2 == '\\0')) {\n                                iVar3 = fcn.0042b9c0();\n                                fcn.0042b9c0(iVar3 + 0x30);\n                                fcn.0042e3d4();\n                                fcn.004227b0();\n                                uVar4 = fcn.0042b9c0();\n                                fcn.0042b9c0(uVar4);\n                                (**(*var_20h + 100))();\n                            }\n                        }\n                    }\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        fcn.004227f4();\n        iVar3 = (**(*var_20h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                fcn.004227f4();\n                (**(*var_14h + 8))();\n                (**(*var_ch + 0x44))();\n                iVar3 = (**(*var_14h + 0x14))();\n                iVar3 = iVar3 + -1;\n                if (-1 < iVar3) {\n                    do {\n                        (**(*var_14h + 0xc))();\n                        for (iVar7 = 1; iVar6 = fcn.00422a14(),  iVar7 <= iVar6; iVar7 = iVar7 + 1) {\n                            uVar5 = *(var_30h + -1 + iVar7);\n                            if ((*(*0x466468 + (uVar5 >> 3)) >> (uVar5 & 7) & 1) == 0) {\n                                fcn.00422c6c(&fcn.0042c570::var_44h);\n                                fcn.004125e4();\n                                cVar2 = fcn.0042c35c(&stack0xfffffffc);\n                                if (cVar2 != '\\0') {\n                                    if (*(*0x4663b0 + 0xc) == '\\0') {\n                                        fcn.00422cf4();\n                                    }\n                                    else {\n                                        fcn.0042c410();\n                                    }\n                                    (**(*var_14h + 0x18))();\n                                    (**(*var_ch + 0x3c))();\n                                    (**(*var_14h + 0x48))();\n                                    break;\n                                }\n                            }\n                            else {\n                                iVar7 = iVar7 + 1;\n                            }\n                        }\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n                iVar3 = (**(*var_ch + 0x14))();\n                if (var_10h < iVar3) {\n                    fcn.0042c38c(&stack0xfffffffc);\n                }\n                iVar3 = (**(*var_14h + 0x14))();\n                if (iVar3 < 1) break;\n                iVar3 = (**(*var_14h + 0x14))();\n                if (-1 < iVar3 + -1) {\n                    do {\n                        (**(*var_14h + 0x18))();\n                        var_28h = (**(*var_20h + 0x5c))();\n                        (**(*var_20h + 0x14))();\n                        (**(*var_20h + 0x70))();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                }\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        if (var_10h == 0) {\n            fcn.0042c38c(&stack0xfffffffc);\n        }\n        iVar3 = (**(*var_8h + 0x14))();\n        var_1ah = 0 < iVar3;\n        iVar3 = (**(*var_8h + 0x14))();\n        if (-1 < iVar3 + -1) {\n            do {\n                var_38h = iVar3;\n                (**(*var_8h + 0xc))();\n                if ((((*(*0x4663b0 + 0xc) != '\\0') && (iVar3 = fcn.004154e0(),  iVar3 == 0)) && (var_18h != 0)) &&\n                   (iVar3 = fcn.004154e0(),  iVar3 == 0)) {\n                    fcn.00422a14(&fcn.0042c570::var_48h);\n                    fcn.00422c6c();\n                    fcn.0042c410();\n                    fcn.00422a14();\n                    fcn.00422cac();\n                }\n                (**(*var_8h + 0x18))();\n                fcn.004227b0();\n                var_38h = var_38h + -1;\n                iVar3 = var_38h;\n            } while (var_38h != 0);\n        }\n        *in_FS_OFFSET = uStack112;\n        puStack104 = 0x42c9d7;\n        uStack108 = 0x42c9b7;\n        fcn.00421c28();\n        uStack108 = 0x42c9bf;\n        fcn.00421c28();\n        uStack108 = 0x42c9c7;\n        fcn.00421c28();\n        uStack108 = 0x42c9cf;\n        fcn.00421c28();\n        return;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        puStack104 = 0x42c5c4;\n        cVar2 = fcn.0042cbc4();\n        puVar1 = puStack92;\n        if (cVar2 != '\\0') goto code_r0x0042c5cc;\n    }\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x42ca16;\n    uStack96 = 0x42c9f1;\n    fcn.00422780();\n    uStack96 = 0x42c9fe;\n    fcn.00422780();\n    uStack96 = 0x42ca06;\n    fcn.0042275c();\n    uStack96 = 0x42ca0e;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 2299
    },
    "0042ca6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042ca6c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (in_EAX = fcn.0042cbf0(),  in_EAX != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.0042b9b0();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0042b9c0();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.0042b9c0();\n                    cVar1 = fcn.0042ca48();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.0042b9c0();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.0042b9b0();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.0042b9c0();\n                cVar1 = fcn.0042ca48();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.0042b9c0();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.0042b9c0();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        in_EAX = fcn.0042b9b0();\n        iVar4 = iStack20 - (in_EAX - 1);\n        if (iVar4 == 0 || iStack20 < in_EAX - 1) {\n            iVar4 = iVar4 + -1;\n            do {\n                in_EAX = fcn.0042b9c0();\n                if (*(in_EAX + 0x3e) != '\\0') {\n                    fcn.0042b9c0();\n                    in_EAX = fcn.0042ca48();\n                    if (in_EAX == '\\0') break;\n                    in_EAX = fcn.0042b9c0();\n                    *(in_EAX + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 0);\n        }\n    }\n    return CONCAT44(iStack20, in_EAX & 0xffffff00 | uStack24);\n}\n",
        "token_count": 883
    },
    "0042cbc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar fcn.0042cbc4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0042cbc4();\n        uVar1 = *((uVar1 & 0x7f) + 0x461b14);\n    }\n    return *((uVar1 & 0x7f) + 0x461b18);\n}\n",
        "token_count": 138
    },
    "0042cbf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar fcn.0042cbf0(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0042cbf0();\n        uVar1 = *((uVar1 & 0x7f) + 0x461b14);\n    }\n    return *((uVar1 & 0x7f) + 0x461b18);\n}\n",
        "token_count": 140
    },
    "0042cc1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0042cc1c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00429a38();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00421bf8();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x42d534;\n    *(in_EAX + 0x41) = 1;\n    fcn.0040f138();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.0042d948();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 362
    },
    "0042cd6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0042cd6c(uint32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0;\n    if ((((*(arg_8h - 1) == '\\0') && (*(arg_8h - 8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h - 1) == '\\x01' && (*(arg_8h - 8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h - 1) == '\\x02' && (*(arg_8h - 8) == *(in_EAX + 0x60))))) {\n        *(arg_8h - 0xc) = in_EAX;\n        _auStack8 = 0x1000000;\n        uVar1 = arg_8h;\n    }\n    else {\n        uVar1 = fcn.0042b9b0();\n        uVar2 = uVar1;\n        if (-1 < uVar1 - 1) {\n            do {\n                uVar1 = arg_8h;\n                fcn.0042b9c0();\n                uVar1 = fcn.0042cd6c(uVar1);\n                if (uVar1 != '\\0') {\n                    _auStack8 = 0x1000000;\n                    break;\n                }\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n    }\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 404
    },
    "0042ce34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042ce34(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.00421db4(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.0042e158();\n    }\n    else {\n        for (iVar2 = fcn.0042ce04(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 241
    },
    "0042cec0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0042cec0(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.0042ce04();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.00421db4();\n            if (cVar3 != '\\0') {\n                fcn.0042bed8();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.0042bed8();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.0042c570();\n        uVar2 = fcn.0042ca6c();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00429f48();\n        }\n        uVar1 = *(**0x4663ac + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x22f) == '\\x02')) && (piVar4 == *(uVar1 + 600))) {\n            iVar6 = sub.USER32.DLL_SendMessageA(*(uVar1 + 0x254), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.0044f188();\n                sub.USER32.DLL_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 453
    },
    "0042cf88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042cf88(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "0042cfac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042cfac(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    piVar1 = (*in_EAX)[0x19];\n    piVar2 = piVar1;\n    if (piVar1 != NULL) {\n        uStackY32 = 0x42cfda;\n        piVar2 = fcn.0042cfac(arg_8h);\n        var_1h._0_1_ = piVar2;\n    }\n    piVar4 = piVar2 & 0xffffff00;\n    if ((var_1h != 0) && (var_1h != 3)) {\n        if (var_1h == 2) {\n            if ((arg_8h[-1] == 0) || (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))) {\n                iVar3 = fcn.0042ce04();\n                arg_8h[-1] = iVar3;\n                if (arg_8h[-1] == 0) {\n                    var_1h._0_1_ = 3;\n                    piVar4 = arg_8h;\n                    goto code_r0x0042d0f3;\n                }\n            }\n            piVar4 = fcn.0042cf9c();\n            *in_EAX = piVar4;\n            if ((*in_EAX == NULL) || (piVar4 = (*in_EAX)[0x19],  piVar4 != piVar1)) goto code_r0x0042d0f3;\n            if (in_EDX == 0) {\n                var_1h._0_1_ = 1;\n            }\n        }\n        piVar4 = *in_EAX;\n        if (*(piVar4 + 0x39) == '\\0') {\n            var_1h._0_1_ = 0;\n        }\n        else {\n            uStackY32 = 0x42d0d1;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(arg_8h[-3] + 0x1c) & 0x10) == 0) {\n                fcn.0042bed8();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((arg_8h[-1] == 0) || ((*in_EAX != arg_8h[-1] && (*(arg_8h[-1] + 0x60) != *(arg_8h + -6))))) {\n                var_1h._0_1_ = 2;\n            }\n            piVar4 = NULL;\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\ncode_r0x0042d0f3:\n    return piVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 753
    },
    "0042d100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d100(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (*(param_2 + 4) == '\\0') {\n        return 0;\n    }\n    uStack32 = 0x10;\n    uStack36 = 0x42d129;\n    sub.USER32.DLL_GetKeyState();\n    uStack36 = 0x11;\n    puStack40 = 0x42d13b;\n    sub.USER32.DLL_GetKeyState();\n    puStack40 = 0x42d168;\n    fcn.00411468();\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack44 = 0x42d1fe;\n    puStack52 = 0x42d188;\n    puStack40 = &stack0xfffffffc;\n    iVar1 = fcn.0042ce04();\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x42d205;\n        uStack44 = 0x42d1fd;\n        uVar2 = fcn.00411460();\n        return uVar2;\n    }\n    puStack52 = 0x42d19e;\n    fcn.00411468();\n    uStack56 = 0x42d1d3;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0042cfac(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x42d1da;\n    uStack56 = 0x42d1d2;\n    uVar2 = fcn.00411460();\n    return uVar2;\n}\n",
        "token_count": 496
    },
    "0042d224": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042d224(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x42d24b;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.USER32.DLL_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.0042d5a8();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.0042d5a8();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.USER32.DLL_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.USER32.DLL_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "0042d380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042d380(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.0042d2e0(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.00422c0c();\n        iVar1 = fcn.00412d18();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004229c4();\n    return 1;\n}\n",
        "token_count": 179
    },
    "0042d414": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042d414(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x4663b0 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x42d484;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.0042d924();\n        }\n        else {\n            fcn.0042d924();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x42d48b;\n        uStack20 = 0x42d47a;\n        fcn.0042d924();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0042d490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d490(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.0042d380();\n    if ((*(*0x4663b0 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.0042d414();\n        }\n        else {\n            fcn.0042d948();\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0042d5a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042d5a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "0042d61c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __cdecl fcn.0042d61c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack32 = &var_2h + 2;\n    uStack36 = 0x42d6f1;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.0042ce04();\n        if ((iVar1 != 0) && (iVar2 = fcn.0042b9b0(),  in_ECX < iVar2)) {\n            iVar1 = fcn.0042b9c0();\n        }\n    }\n    else {\n        puStack32 = &var_2h + 2;\n        sub.USER32.DLL_GetSubMenu();\n        iVar1 = fcn.0042ce04();\n        uStack48 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.0042293c();\n        fcn.0042293c(0);\n        iVar1 = fcn.0041275c();\n        if (iVar1 == 0) {\n            fcn.0042e46c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x42d6f8;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 426
    },
    "0042d704": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d704(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.USER32.DLL_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.USER32.DLL_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.0042d5c0(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.USER32.DLL_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.0042d61c(uVar4 & 0xffffff00 | *(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 961
    },
    "0042d87c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d87c(uint arg_8h, uint arg_ch, uchar *arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0042cf88();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.USER32.DLL_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.USER32.DLL_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.USER32.DLL_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.0042ce04();\n            }\n        }\n        else {\n            sub.USER32.DLL_GetSubMenu();\n            var_4h = fcn.0042ce04();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *arg_10h = 0;\n            fcn.00412cf8();\n            uVar4 = fcn.00412c3c();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 289
    },
    "0042d948": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042d948(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.00445af4();\n        if (iVar1 != 0) {\n            fcn.0042d924();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0042d970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042d970(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00421dd8();\n        fcn.0042d924();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0042d9fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d9fc(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x38) != 0) {\n        uVar1 = fcn.0042d380();\n        uVar2 = uVar1;\n        if (in_ECX == 0) {\n            uVar2 = sub.USER32.DLL_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (uVar1 != '\\0') {\n            uVar2 = sub.USER32.DLL_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.0042d4f8(uVar2 & 0xffffff00 | arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 225
    },
    "0042db14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042db14(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x42e047;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x42db92;\n                    fcn.00407488();\n                    puStack80 = 0x42db9b;\n                    cVar3 = fcn.0042cea4();\n                    if (cVar3 != '\\0') goto code_r0x0042e031;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            uVar8 = param_2[2];\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x42dda5;\n                    fcn.00407488();\n                    puStack80 = 0x42ddb2;\n                    iVar10 = fcn.0042ce04();\n                    if (iVar10 != 0) {\n                        puStack80 = 0x42ddcb;\n                        fcn.00430aac();\n                        puStack84 = 0x42de7a;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(uVar8 + 0x18);\n                        puStack96 = 0x42dde8;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.GDI32.DLL_SaveDC();\n                        uStack100 = 0x42de5d;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.00431068();\n                        fcn.00430f08();\n                        uVar8 = uVar8 & 0xffff0000 | *(uVar8 + 0x10);\n                        puStack112 = 0x42de35;\n                        fcn.0042e2ec(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x42de64;\n                        uStack104 = 0x42de4c;\n                        fcn.00431068();\n                        puStack112 = 0x42de5c;\n                        uStack104 = uVar6;\n                        sub.GDI32.DLL_RestoreDC();\n                        return;\n                    }\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x42deb0;\n                    fcn.00407488();\n                    puStack80 = 0x42debd;\n                    piVar4 = fcn.0042ce04();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x42ded6;\n                        uVar6 = sub.USER32.DLL_GetWindowDC();\n                        uStack88 = 0x42dfbd;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x42def3;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00430aac();\n                        uStack100 = 0x42df98;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x42df0d;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.GDI32.DLL_SaveDC();\n                        uStack116 = 0x42df7b;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.00431068();\n                        fcn.00430f08();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x42df82;\n                        uStack120 = 0x42df6d;\n                        fcn.00431068();\n                        uStack120 = uVar7;\n                        sub.GDI32.DLL_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x42dca3;\n                    piVar4 = fcn.00407488();\n                    puStack80 = 0x42dca8;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x42dcba;\n                        iVar5 = fcn.00407488();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x42dccc;\n                        fcn.00407488();\n                        puStack80 = 0x42dcd9;\n                        *NULL = fcn.0042ce04();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x42dcf0;\n                        fcn.00407488();\n                        puStack80 = 0x42dcfd;\n                        iVar9 = fcn.0042ce34();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x42dd0b;\n                            fcn.00407488();\n                            puStack80 = 0x42dd18;\n                            fcn.0042ce34();\n                        }\n                        if (*(**0x4663dc + 0x6c) != 0) {\n                            if ((*(*(**0x4663dc + 0x6c) + 0x228) & 8) == 0) {\n                                puStack80 = 0x42dd71;\n                                fcn.00442240();\n                            }\n                            else {\n                                puStack80 = 0x42dd5e;\n                                fcn.004422a8();\n                            }\n                        }\n                        goto code_r0x0042e031;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x42dbc8;\n                fcn.00407488();\n                puStack80 = 0x42dbd0;\n                cVar3 = fcn.0042cec0();\n                if (cVar3 != '\\0') goto code_r0x0042e031;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x42dc15;\n                    uStack76 = param_2[2];\n                    sub.USER32.DLL_GetSubMenu();\n                }\n                puStack80 = 0x42dc34;\n                fcn.00407488();\n                puStack80 = 0x42dc3f;\n                iVar10 = fcn.0042ce04();\n                if (iVar10 != 0) {\n                    puStack80 = 0x42dc56;\n                    fcn.00445d58();\n                    puStack80 = 0x42dc65;\n                    fcn.004425a4();\n                    goto code_r0x0042e031;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x42dc7c;\n        fcn.004425a4();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x42dfe6;\n                piVar4 = fcn.00407488();\n                puStack80 = 0x42dff1;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x0042e007:\n                    puStack80 = 0x42e011;\n                    fcn.0042d704();\n                    goto code_r0x0042e031;\n                }\n                puStack80 = 0x42e003;\n                iVar10 = fcn.0042ce04();\n                if (iVar10 != 0) goto code_r0x0042e007;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x42e02e;\n    iVar9 = sub.USER32.DLL_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x0042e031:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x42e04e;\n    uStack72 = 0x42e046;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 2918
    },
    "0042e058": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042e058(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.00410278(fcn.0042dac8, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.0040732c();\n    return;\n}\n",
        "token_count": 96
    },
    "0042e080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042e080(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00407628();\n    if (*(in_EAX + 8) == 0) {\n        fcn.0041032c();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0042e168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042e168(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.004290e8();\n        if (iVar1 == 0) {\n            fcn.0042d924();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.0042d924();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0042e1b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0042e1b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x4663b0 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.004290e8();\n            if (iVar1 == 0) {\n                uVar2 = fcn.00440e64();\n            }\n            else {\n                uVar2 = fcn.00421e24();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "0042e3d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e3d4(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.004227b0();\n    iVar3 = 1;\n    do {\n        iVar2 = fcn.00422a14();\n        if (iVar2 < iVar3) {\n            return;\n        }\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x466468 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (uVar1 == 0x26) {\n                if ((*(*0x4663b0 + 0xc) != '\\0') && (1 < iVar3)) {\n                    iVar2 = fcn.00422a14();\n                    if ((1 < iVar2 - iVar3) && ((*(*param_2 + -2 + iVar3) == '(' && (*(*param_2 + 1 + iVar3) == ')'))))\n                    {\n                        fcn.00422cac();\n                        goto code_r0x0042e45b;\n                    }\n                }\n                fcn.00422cac();\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\ncode_r0x0042e45b:\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 322
    },
    "0042f500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f500(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x42f51b;\n    iVar2 = fcn.0042f474();\n    puStack24 = 0x42f525;\n    fcn.0042f4e8();\n    uStack28 = 0x42f5d4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.0041268c();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00420dc0();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.00421024();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42f5db;\n    uStack28 = 0x42f5d3;\n    fcn.0042f4f4();\n    return;\n}\n",
        "token_count": 439
    },
    "0042f5e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5e4(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uchar var_9h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack24 = 0x42f608;\n    var_10h = param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0042f4e8();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    var_10h[1] = var_10h[1] + -1;\n    var_9h = var_10h[1] == 0;\n    if (var_9h) {\n        puVar1 = *(var_4h + 4);\n        if (*(var_4h + 4) == var_8h) {\n            *(var_4h + 4) = *var_8h;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != var_8h);\n            *puVar2 = *var_8h;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x42f672;\n    uStack28 = 0x42f66a;\n    fcn.0042f4f4();\n    return;\n}\n",
        "token_count": 397
    },
    "0042f778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042f778(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x42f789;\n    fcn.0042f4e8();\n    uStack24 = 0x42f7d7;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack28 = puVar2[2];\n        if ((iStack28 != 0) && (puVar2[5] < 0)) {\n            sub.GDI32.DLL_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack28;\n        }\n        iStack28 = iVar1;\n        iVar1 = iStack28;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack20 = 0x42f7de;\n    uStack24 = 0x42f7d6;\n    iStack28 = iVar1;\n    fcn.0042f4f4();\n    return;\n}\n",
        "token_count": 315
    },
    "0042fd00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042fd00(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0042ff08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ff08(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x461bf4;\n    piVar3 = param_2;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.GDI32.DLL_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 9) = *(param_2 + 9) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 9) = *(param_2 + 9) | 8;\n            }\n            *(param_2 + 10) = uStack97;\n            fcn.00421748();\n            fcn.0042142c();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 2) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 2) = 1;\n            }\n            else {\n                *(param_2 + 2) = 0;\n            }\n            *param_2 = in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "004306a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004306a4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x4306c3;\n        fcn.0042f4e8();\n        uStack32 = 0x43072a;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x461e64);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.0042fcd0();\n            puStack40 = &fcn.004306a4::var_14h;\n            uVar1 = sub.GDI32.DLL_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x430731;\n        iStack36 = 0x430729;\n        uVar1 = fcn.0042f4f4();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 404
    },
    "0043095c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043095c(void)\n\n{\n    fcn.004308c4();\n    fcn.004308e0();\n    return;\n}\n",
        "token_count": 34
    },
    "00430990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00430990(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x4309b3;\n        fcn.0042f4e8();\n        uStack28 = 0x430a5d;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x6c))();\n                var_8h = (**(**(var_4h + 0x18) + 100))();\n            }\n            var_ch = fcn.0042fcd0();\n            puStack32 = &fcn.00430990::var_10h;\n            uVar2 = sub.GDI32.DLL_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x430a64;\n        uStack28 = 0x430a5c;\n        uVar2 = fcn.0042f4f4();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 563
    },
    "00430a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00430a78(void)\n\n{\n    fcn.004308c4();\n    fcn.004308e0();\n    return;\n}\n",
        "token_count": 34
    },
    "00430e84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00430e84(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x467078;\n    puStack20 = 0x430e95;\n    sub.KERNEL32.DLL_EnterCriticalSection();\n    uStack24 = 0x430ed0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.00430e84::var_1h + 1;\n        fcn.00430d74();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x430ed7;\n    uStack24 = 0x467078;\n    uStack28 = 0x430ecf;\n    sub.KERNEL32.DLL_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 253
    },
    "004313e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004313e4(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x431400;\n    var_4h = in_EAX;\n    var_18h = sub.GDI32.DLL_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x43140a;\n    var_1ch = sub.GDI32.DLL_CreateCompatibleDC();\n    uStack84 = 0x431532;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.004313e4::var_34h;\n    uStack96 = 0x18;\n    uStack100 = var_4h;\n    uStack104 = 0x43142a;\n    puStack80 = &stack0xfffffffc;\n    sub.GDI32.DLL_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = var_8h;\n        var_10h = sub.GDI32.DLL_CreateBitmap(var_ch);\n        if (var_10h != 0) {\n            iVar1 = sub.GDI32.DLL_SelectObject(var_18h, var_4h);\n            iVar2 = sub.GDI32.DLL_SelectObject(var_1ch, var_10h);\n            sub.GDI32.DLL_StretchBlt(var_1ch, 0, 0, var_ch, var_8h, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.GDI32.DLL_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.GDI32.DLL_SelectObject(var_1ch, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.GDI32.DLL_DeleteDC(var_18h, 0x431539);\n        sub.GDI32.DLL_DeleteDC(var_1ch);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x43144d;\n    var_14h = sub.USER32.DLL_GetDC();\n    if (var_14h == 0) {\n        puStack108 = 0x43145b;\n        fcn.0043132c();\n    }\n    uStack112 = 0x4314a1;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = var_14h;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.GDI32.DLL_CreateCompatibleBitmap(var_14h, var_ch, var_8h);\n    if (var_10h == 0) {\n        fcn.0043132c();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.USER32.DLL_ReleaseDC(0, var_14h, 0x4314a8);\n    return;\n}\n",
        "token_count": 937
    },
    "00431578": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00431578(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((**0x4663e4 == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = arg_24h;\n        uStack68 = 0x4315c0;\n        sub.GDI32.DLL_CreateCompatibleBitmap();\n        uStack68 = 0x4315c5;\n        uStack68 = fcn.004313d4();\n        iStack72 = arg_10h;\n        puStack76 = 0x4315d5;\n        uVar1 = sub.GDI32.DLL_SelectObject();\n        uStack80 = 0x43164b;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar2 = fcn.00402778();\n        uVar3 = uVar1;\n        sub.GDI32.DLL_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar3 = sub.GDI32.DLL_SelectObject\n                          (arg_10h, uVar1, 0x4317ff, arg_2ch, arg_28h, arg_24h, arg_20h, arg_1ch, uVar3, arg_ch, arg_8h\n                           , uVar2);\n        sub.GDI32.DLL_DeleteObject(uVar3);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x43165e;\n    sub.GDI32.DLL_CreateCompatibleDC();\n    puStack60 = 0x431663;\n    uVar3 = fcn.004313d4();\n    uStack64 = 0x4317f8;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = arg_24h;\n    uStack84 = 0x43167f;\n    puStack60 = &stack0xfffffffc;\n    sub.GDI32.DLL_CreateCompatibleBitmap();\n    uStack84 = 0x431684;\n    uVar1 = fcn.004313d4();\n    uStack84 = uVar1;\n    iVar4 = sub.GDI32.DLL_SelectObject(uVar3);\n    iVar5 = sub.GDI32.DLL_SelectPalette(arg_24h, *0x467044, 0);\n    sub.GDI32.DLL_SelectPalette(arg_24h, iVar5, 0);\n    if (iVar5 == 0) {\n        var_24h = sub.GDI32.DLL_SelectPalette(uVar3, *0x467044, 0xffffffff);\n    }\n    else {\n        var_24h = sub.GDI32.DLL_SelectPalette(uVar3, iVar5, 0xffffffff);\n    }\n    sub.GDI32.DLL_RealizePalette(uVar3);\n    sub.GDI32.DLL_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.GDI32.DLL_StretchBlt(uVar3, 0, 0, arg_18h, arg_14h, arg_24h, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.GDI32.DLL_SetTextColor();\n    sub.GDI32.DLL_SetBkColor();\n    sub.GDI32.DLL_StretchBlt();\n    sub.GDI32.DLL_StretchBlt();\n    sub.GDI32.DLL_SetTextColor();\n    sub.GDI32.DLL_SetBkColor();\n    if (iVar4 != 0) {\n        sub.GDI32.DLL_SelectObject(uVar3, iVar4);\n    }\n    sub.GDI32.DLL_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (var_24h != 0) {\n        sub.GDI32.DLL_SelectPalette(uVar3, var_24h, 0, 0x4317ff);\n    }\n    sub.GDI32.DLL_DeleteDC(uVar3);\n    return;\n}\n",
        "token_count": 1200
    },
    "004318bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318bc(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_2ch;\n    int16_t iStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    sub.KERNEL32.DLL_GetSystemInfo(&var_2ch);\n    var_8h = var_8h + -1;\n    if (-1 < var_8h) {\n        if (iStack16 == 3) {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n        else {\n            do {\n                uVar1 = *(var_4h + var_8h * 4);\n                *(var_4h + var_8h * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                var_8h = var_8h + -1;\n            } while (-1 < var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00431a2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00431a2c(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x467044 != 0) {\n        uStack20 = 0;\n        puStack24 = 0x431a49;\n        uVar1 = sub.USER32.DLL_GetDC();\n        uStack28 = 0x431ab2;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.00431a2c::var_1h + 1;\n        iVar2 = sub.GDI32.DLL_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.GDI32.DLL_GetPaletteEntries(*0x467044, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x467044;\n            sub.GDI32.DLL_GetPaletteEntries(*0x467044, 8, 8, (in_EAX - 0x1c) + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar3 = sub.USER32.DLL_ReleaseDC(0, uVar1, 0x431ab9);\n        return uVar3;\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 444
    },
    "00431ac4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00431ac4(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x431b26;\n        fcn.00421024();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x431ae2;\n        uVar3 = sub.GDI32.DLL_CreateCompatibleDC();\n        puStack1056 = 0x431aeb;\n        uStack1052 = uVar3;\n        uVar4 = sub.GDI32.DLL_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x431aff;\n        uStack1068 = uVar3;\n        uVar2 = sub.GDI32.DLL_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x431b0b;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.GDI32.DLL_SelectObject();\n        uStack1080 = uVar3;\n        sub.GDI32.DLL_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.00431a2c(),  cVar1 == '\\0')) {\n            fcn.004318bc();\n        }\n        uVar4 = sub.GDI32.DLL_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "00431b68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00431b68(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.GDI32.DLL_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.GDI32.DLL_GetPaletteEntries();\n        fcn.004318bc();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 121
    },
    "00431bbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431bbc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x431bea;\n    iVar1 = fcn.00431564();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x431c02;\n    iVar1 = fcn.00431544();\n    uStack40 = 0;\n    puStack44 = 0x431c0b;\n    iStack76 = sub.USER32.DLL_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x431c19;\n        fcn.004312d8();\n    }\n    uStack48 = 0x431d68;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x431c52;\n    puStack44 = &stack0xfffffffc;\n    sub.GDI32.DLL_CreateDIBitmap();\n    puStack80 = 0x431c57;\n    uVar2 = fcn.004313d4();\n    uStack84 = 0x431c8e;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.004313e4();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x431c95;\n    uStack88 = 0x431c8d;\n    uStack84 = uVar2;\n    sub.GDI32.DLL_DeleteObject();\n    return;\n}\n",
        "token_count": 581
    },
    "00431e14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431e14(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint var_28h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x431e3a;\n    fcn.00412560();\n    uStack136 = 0x43210b;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x431e59;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 8))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x431e67;\n        uVar1 = sub.USER32.DLL_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x431e73;\n        uVar1 = sub.USER32.DLL_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x431e8f;\n    iVar2 = sub.USER32.DLL_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x431e9d;\n        fcn.004312d8();\n    }\n    uStack152 = 0x431efd;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.GDI32.DLL_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.GDI32.DLL_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.USER32.DLL_ReleaseDC(0, iVar2, 0x431f04);\n    return;\n}\n",
        "token_count": 583
    },
    "0043211c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043211c(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.GDI32.DLL_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.004312c0();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.0042153c();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00431564();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 565
    },
    "0043226c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043226c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uStack32 = 0x432287;\n    fcn.0043211c();\n    var_8h = 0;\n    uStack32 = 0;\n    puStack36 = 0x432293;\n    uVar1 = sub.GDI32.DLL_CreateCompatibleDC();\n    uStack40 = 0x432309;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0043226c::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.0043226c::var_1h + 1;\n        var_8h = sub.GDI32.DLL_SelectPalette(uVar1);\n        sub.GDI32.DLL_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.GDI32.DLL_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != 0) {\n        sub.GDI32.DLL_SelectPalette(uVar1, var_8h, 0, 0x432310, uVar4, arg_ch);\n    }\n    sub.GDI32.DLL_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 456
    },
    "00432340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00432340(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x43235f;\n    fcn.0042153c();\n    puStack104 = 0x43236e;\n    fcn.0042153c();\n    puStack104 = &fcn.00432340::var_44h;\n    puStack112 = 0x432378;\n    uStack108 = param_2;\n    sub.USER32.DLL_GetIconInfo();\n    puStack112 = 0x43237d;\n    fcn.00432334();\n    uStack116 = 0x43252e;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00432340::var_1h + 1;\n    fcn.00432200(2);\n    puStack132 = 0x4323ab;\n    fcn.00432200(0x10);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x432507;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00432340::var_1h + 1;\n    var_18h = fcn.00412560();\n    var_1ch = fcn.00412560();\n    var_20h = fcn.00412560();\n    var_24h = fcn.00412560();\n    fcn.0043226c(2, var_1ch);\n    uVar3 = 0x10;\n    fcn.0043226c(0x10, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0xc))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0xc))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0xc))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0xc))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00420de0(0x43250e);\n    fcn.00420de0();\n    fcn.00420de0();\n    fcn.00420de0();\n    return;\n}\n",
        "token_count": 880
    },
    "00432574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432574(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0043258c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043258c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.00421db4();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00432630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00432630(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    ulong uVar6;\n    ulong uVar7;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00432655:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x432648;\n        iVar2 = fcn.00421b70();\n        puStack32 = 0x432651;\n        iVar3 = fcn.00421b70();\n        if (iVar2 != iVar3) goto code_r0x00432655;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x432665;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x432670;\n        uVar4 = (**(*param_2 + 0x1c))();\n        if (uVar4 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x4326ae;\n                fcn.00421bf8();\n                uStack36 = 0x43276a;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x4326c9;\n                puStack32 = &fcn.00432630::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x4326d5;\n                fcn.00421bf8();\n                uStack48 = 0x43274d;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00432630::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar6 = fcn.00409828();\n                uVar7 = fcn.00409828();\n                if (uVar7 >> 0x20 == uVar6 >> 0x20 && uVar7 == uVar6) {\n                    fcn.00409828();\n                    cVar1 = fcn.0041268c();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00432734;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00432734:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x432754;\n                uStack48 = 0x43274c;\n                uVar4 = fcn.00421c28();\n                return uVar4;\n            }\n            goto code_r0x00432771;\n        }\n    }\n    puStack32 = 0x43267b;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\ncode_r0x0043268a:\n        uVar4 = 0;\n    }\n    else {\n        puStack32 = 0x432686;\n        uVar5 = (**(*param_2 + 0x1c))();\n        if (uVar5 == '\\0') goto code_r0x0043268a;\n        uVar4 = CONCAT31(uVar5 >> 8, 1);\n    }\n    var_1h._0_1_ = uVar4;\ncode_r0x00432771:\n    return uVar4 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 947
    },
    "004327d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004327d8(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t in_EAX;\n    uint32_t unaff_EBX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, unaff_EBX & 0xffffff00 | arg_10h & 0xff, \n                            unaff_EBX & 0xffffff00 | arg_14h & 0xff);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00432920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432920(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x432930;\n    var_8h = fcn.00407850();\n    uStack24 = 0x4329be;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x43295b;\n            var_ch = fcn.00407488();\n            puStack32 = 0x432966;\n            cVar1 = fcn.00430e84();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x432996;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00432ab0();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x43299d;\n                uStack36 = 0x432995;\n                fcn.00430ee0();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4329c5;\n    uStack24 = 0x4329bd;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 445
    },
    "004329cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004329cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x4329e5;\n        iVar1 = fcn.00407850();\n        uStack24 = 0x432a3c;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00407488();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00432ab0();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x432a43;\n        uStack24 = 0x432a3b;\n        fcn.004078b4();\n        return;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00432ab0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432ab0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x432acd;\n        fcn.00430d74();\n        uStack20 = 0x432b44;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.GDI32.DLL_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.GDI32.DLL_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.00431068();\n        sub.GDI32.DLL_DeleteDC();\n        fcn.00407864();\n        *in_FS_OFFSET = uVar1;\n        fcn.00430ee0(0x432b4b);\n        return;\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00432b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432b50(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x432b6e;\n        fcn.00430d74();\n        uStack24 = 0x432c2f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00433e6c();\n        fcn.004329cc();\n        fcn.00433f6c();\n        uVar2 = sub.GDI32.DLL_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.GDI32.DLL_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.GDI32.DLL_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.GDI32.DLL_RealizePalette(uVar2);\n        }\n        fcn.00431068();\n        fcn.004077c8();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00430ee0(0x432c36);\n        return;\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "00432c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432c40(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00421c28();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00432dc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432dc4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00432e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432e10(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    uint *puStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint var_98h;\n    uint var_88h;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x432e78;\n        var_8h = in_EDX;\n        var_4h = in_EAX;\n        fcn.004329cc();\n        var_70h = 0;\n        if (var_4h != 0) {\n            puStack172 = &fcn.00432e10::var_88h;\n            uStack176 = 0x54;\n            iStack180 = var_4h;\n            uStack184 = 0x432e95;\n            iVar4 = sub.GDI32.DLL_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x432e9f;\n                fcn.004312c0();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x432ea6;\n        sub.USER32.DLL_GetDC();\n        iStack188 = 0x432eab;\n        iStack188 = fcn.004313d4();\n        puStack192 = 0x432eb7;\n        var_18h = iStack188;\n        sub.GDI32.DLL_CreateCompatibleDC();\n        puStack192 = 0x432ebc;\n        var_1ch = fcn.004313d4();\n        uStack196 = 0x43345e;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x432f03;\n                puStack192 = &stack0xfffffffc;\n                sub.GDI32.DLL_CreateBitmap();\n                puStack224 = 0x432f08;\n                var_10h = fcn.004313d4();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = var_18h;\n                uStack216 = 0x432f27;\n                puStack192 = &stack0xfffffffc;\n                sub.GDI32.DLL_CreateCompatibleBitmap();\n                uStack216 = 0x432f2c;\n                var_10h = fcn.004313d4();\n            }\n            uStack216 = 0x433177;\n            fcn.004313d4();\n            uStack216 = var_10h;\n            iStack220 = var_1ch;\n            puStack224 = 0x433184;\n            sub.GDI32.DLL_SelectObject();\n            puStack224 = 0x433189;\n            var_14h = fcn.004313d4();\n            iStack228 = 0x43340f;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x4333fe;\n            puStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (var_ch != 0) {\n                puStack248 = NULL;\n                iStack252 = var_ch;\n                iStack256 = var_1ch;\n                puStack260 = 0x4331c4;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.GDI32.DLL_SelectPalette();\n                puStack260 = var_1ch;\n                puStack264 = 0x4331d0;\n                sub.GDI32.DLL_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x4333dc;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = var_1ch;\n                iStack300 = 0x4332bd;\n                puStack264 = &stack0xfffffffc;\n                sub.GDI32.DLL_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00430990();\n                puStack288 = 0x433211;\n                fcn.00405e68(&fcn.00432e10::var_98h, *(arg_ch + 8));\n                puStack288 = &fcn.00432e10::var_98h;\n                iStack292 = var_1ch;\n                iStack296 = 0x433221;\n                sub.USER32.DLL_FillRect();\n                iStack296 = 0x43322f;\n                iStack296 = fcn.0042fcd0();\n                iStack300 = var_1ch;\n                puStack304 = 0x433239;\n                sub.GDI32.DLL_SetTextColor();\n                puStack304 = 0x433244;\n                fcn.00430954();\n                puStack304 = 0x433249;\n                puStack304 = fcn.0042fcd0();\n                iStack308 = var_1ch;\n                puStack312 = 0x433253;\n                sub.GDI32.DLL_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x433274;\n                    var_30h = fcn.0042fcd0();\n                    puStack312 = 0x433282;\n                    fcn.00430954();\n                    puStack312 = 0x433287;\n                    var_2ch = fcn.0042fcd0();\n                    puStack312 = &fcn.00432e10::var_30h;\n                    sub.GDI32.DLL_SetDIBColorTable(var_1ch, 0, 2);\n                }\n            }\n            if (var_4h != 0) {\n                iStack300 = var_18h;\n                puStack304 = 0x4332d0;\n                sub.GDI32.DLL_CreateCompatibleDC();\n                puStack304 = 0x4332d5;\n                var_20h = fcn.004313d4();\n                iStack308 = 0x4333b2;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.GDI32.DLL_SelectObject(var_20h, var_4h);\n                uVar5 = fcn.004313d4();\n                if (var_8h != 0) {\n                    uVar8 = sub.GDI32.DLL_SelectPalette(var_20h, var_8h, 0);\n                    sub.GDI32.DLL_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.0042fcd0();\n                    sub.GDI32.DLL_SetTextColor(var_20h, uVar6);\n                    fcn.00430954();\n                    uVar6 = fcn.0042fcd0();\n                    sub.GDI32.DLL_SetBkColor(var_20h, uVar6);\n                }\n                sub.GDI32.DLL_BitBlt(var_1ch, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.GDI32.DLL_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.GDI32.DLL_SelectObject(var_20h, uVar5);\n                fcn.004313d4();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.GDI32.DLL_DeleteDC(var_20h, 0x4333b9);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x4333e3;\n            if (var_ch != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = var_1ch;\n                puStack304 = 0x4333db;\n                uVar8 = sub.GDI32.DLL_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x432f3e;\n        puStack192 = &stack0xfffffffc;\n        var_24h = fcn.00420dc0();\n        uStack208 = 0x433168;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = var_18h;\n            puStack224 = 0x432f77;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.GDI32.DLL_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = var_18h;\n            iStack232 = 0x432f84;\n            iVar3 = sub.GDI32.DLL_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = var_24h;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((var_4h == 0 || (var_74h == 0)))) {\n                var_24h[10] = 0;\n                var_24h[0xb] = 0xffffff;\n            }\n            else if (var_ch == 0) {\n                if (var_4h != 0) {\n                    iStack232 = var_4h;\n                    puStack236 = var_1ch;\n                    puStack240 = 0x43302e;\n                    var_14h = sub.GDI32.DLL_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        puStack244 = var_24h;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = var_4h;\n                        puStack264 = var_1ch;\n                        iStack268 = 0x43307f;\n                        sub.GDI32.DLL_GetDIBits();\n                    }\n                    else {\n                        puStack240 = var_24h + 10;\n                        puStack244 = 0x100;\n                        puStack248 = NULL;\n                        iStack252 = var_1ch;\n                        iStack256 = 0x433054;\n                        uVar8 = sub.GDI32.DLL_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = var_1ch;\n                    iStack232 = 0x43308c;\n                    sub.GDI32.DLL_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x433012;\n                fcn.00431b68();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x4330b5;\n            fcn.00432dc4();\n            iStack232 = 0x4330cb;\n            fcn.00421024();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.00432e10::var_28h;\n        puStack244 = NULL;\n        puStack248 = var_24h;\n        iStack252 = var_18h;\n        iStack256 = 0x4330e2;\n        sub.GDI32.DLL_CreateDIBSection();\n        iStack256 = 0x4330e7;\n        var_10h = fcn.004313d4();\n        if (var_28h == 0) {\n            iStack256 = 0x4330f5;\n            fcn.0043132c();\n        }\n        if ((((var_4h == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            puStack244 = 0x43316f;\n            puStack248 = 0x433167;\n            uVar8 = fcn.00420de0();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = var_24h;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.GDI32.DLL_GetDIBits();\n        fcn.00422468();\n        fcn.00422468();\n    }\n    return var_10h;\n}\n",
        "token_count": 3882
    },
    "00433474": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00433474(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x433492;\n        iStack1052 = in_EAX;\n        iVar1 = sub.GDI32.DLL_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.GDI32.DLL_GetPaletteEntries();\n            uVar2 = sub.GDI32.DLL_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "004334d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004334d8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.004334d8::var_70h;\n        uStack136 = 0x54;\n        puStack144 = 0x433500;\n        iVar1 = sub.GDI32.DLL_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x43350f;\n            fcn.004329cc();\n            var_8h = 0;\n            var_10h = 0;\n            uStack148 = 0x4336d3;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x43352e;\n            puStack144 = &stack0xfffffffc;\n            sub.USER32.DLL_GetDC();\n            iStack160 = 0x433533;\n            iStack160 = fcn.004313d4();\n            uStack164 = 0x43353f;\n            var_8h = iStack160;\n            sub.GDI32.DLL_CreateCompatibleDC();\n            uStack164 = 0x433544;\n            var_10h = fcn.004313d4();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = var_68h;\n            uStack180 = var_6ch;\n            iStack184 = 0x43355a;\n            var_4h = sub.GDI32.DLL_CreateBitmap();\n            if (var_4h != 0) {\n                iStack188 = var_10h;\n                iStack192 = 0x433574;\n                iStack184 = var_4h;\n                var_1ch = sub.GDI32.DLL_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x4335a4;\n                    sub.GDI32.DLL_CreateCompatibleDC();\n                    puStack196 = 0x4335a9;\n                    var_ch = fcn.004313d4();\n                    uStack200 = 0x43368b;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.00432e10(0, &fcn.004334d8::var_70h);\n                    }\n                    var_18h = sub.GDI32.DLL_SelectObject(var_ch, in_EAX);\n                    if (param_2 != 0) {\n                        sub.GDI32.DLL_SelectPalette(var_ch, param_2, 0);\n                        sub.GDI32.DLL_RealizePalette(var_ch);\n                        sub.GDI32.DLL_SelectPalette(var_10h, param_2, 0);\n                        sub.GDI32.DLL_RealizePalette(var_10h);\n                    }\n                    uVar2 = sub.GDI32.DLL_SetBkColor(var_ch, param_1);\n                    sub.GDI32.DLL_BitBlt(var_10h, 0, 0, var_6ch, var_68h, var_ch, 0, 0, 0xcc0020);\n                    sub.GDI32.DLL_SetBkColor(var_ch, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = var_ch;\n                        sub.GDI32.DLL_SelectObject(var_ch, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.GDI32.DLL_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.GDI32.DLL_DeleteDC(var_ch, 0x433692);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = var_68h;\n                uStack200 = var_6ch;\n                iStack204 = 0;\n                sub.GDI32.DLL_PatBlt(var_10h, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = var_10h;\n                    sub.GDI32.DLL_SelectObject(var_10h, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (var_10h != 0) {\n                uVar2 = sub.GDI32.DLL_DeleteDC(var_10h, 0x4336da);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.USER32.DLL_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 1424
    },
    "004336e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004336e4(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0043253c();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00421bf8();\n    in_EAX[10] = iVar1;\n    fcn.00432c3c();\n    if (*0x461c20 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 221
    },
    "004339dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004339dc(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x4339fd;\n    var_4h = param_2;\n    fcn.004310bc();\n    uStack48 = 0x433a04;\n    fcn.00433f6c();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x433a23;\n        iStack52 = iVar3;\n        var_8h = sub.GDI32.DLL_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x433a32;\n        sub.GDI32.DLL_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x433a44;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.GDI32.DLL_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x433a53;\n    iVar3 = sub.GDI32.DLL_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.004339dc::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x433a87;\n        sub.GDI32.DLL_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x433a95;\n        sub.GDI32.DLL_SetStretchBltMode();\n        puStack96 = &fcn.004339dc::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.GDI32.DLL_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x433ab6;\n        cVar2 = fcn.00433d68();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x433ac4;\n            uStack84 = fcn.00430fe8();\n            puStack88 = 0x433aca;\n            sub.GDI32.DLL_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x433c19;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x433adf;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x433aea;\n        fcn.00433f0c();\n    }\n    puStack100 = 0x433af1;\n    fcn.00433cac();\n    puStack100 = 0x433afc;\n    fcn.004310bc();\n    puStack100 = 0x433b03;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x433bae;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.GDI32.DLL_CreateCompatibleDC(0);\n        iVar3 = fcn.004313d4();\n        iVar4 = sub.GDI32.DLL_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.00433cac();\n        uVar7 = 0;\n        fcn.00431578(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.GDI32.DLL_SelectObject(iVar3, iVar4, 0x433bf3);\n        }\n        if (iVar3 != 0) {\n            sub.GDI32.DLL_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.00433cac(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.GDI32.DLL_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.GDI32.DLL_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x433c20);\n    }\n    return;\n}\n",
        "token_count": 1577
    },
    "00433c2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433c2c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00433e6c();\n        fcn.00433878(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.GDI32.DLL_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.0043132c();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00433cac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00433cac(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00433e6c();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.00432a48();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.00433938;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 178
    },
    "00433d18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00433d18(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00433d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00433d68(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 101
    },
    "00433de8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433de8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00433f6c();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.GDI32.DLL_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.00432e10(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "00433e6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433e6c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x433e99;\n        fcn.00409814(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x433eef;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00433f0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433f0c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.004329cc();\n            sub.GDI32.DLL_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00433e5c();\n        fcn.00433e6c();\n        fcn.00433d98();\n        uVar2 = fcn.004334d8();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "00433f6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433f6c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.004329cc();\n    }\n    iVar2 = fcn.00431ac4();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.USER32.DLL_GetDC(0);\n    uVar3 = fcn.004313d4();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.GDI32.DLL_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.GDI32.DLL_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00433ffd;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00433ffd:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.GDI32.DLL_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.USER32.DLL_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 476
    },
    "00434024": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434024(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.004312a8();\n    }\n    fcn.00433e5c();\n    fcn.0042153c();\n    sub.GDI32.DLL_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.00433878(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 237
    },
    "004340cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004340cc(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4340e8;\n    iVar1 = fcn.00421bf8();\n    puStack32 = 0x434153;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x434143;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00421dd8();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x467060;\n    puStack32 = 0x434174;\n    sub.KERNEL32.DLL_EnterCriticalSection();\n    uStack36 = 0x4341b3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00432c40();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.00432c3c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4341ba;\n    uStack36 = 0x467060;\n    uStack40 = 0x4341b2;\n    sub.KERNEL32.DLL_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 575
    },
    "004341f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004341f4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x434227;\n    var_8h = in_EDX;\n    (**(*in_EDX + 8))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x43424c;\n    piVar1 = fcn.00420dc0();\n    uStack196 = 0x434711;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x4346e4;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 8))();\n        fcn.0042153c();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 8))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00421bf8();\n            if (arg_8h == 0) {\n                fcn.0042153c();\n            }\n            (**(*var_8h + 0xc))();\n            (**(*var_8h + 0xc))();\n            (**(*var_8h + 0xc))();\n            uStack224 = 0x43437a;\n            fcn.00409a90(in_ECX - var_20h, 0);\n            uStack224 = 0x43438a;\n            (**(*var_8h + 0x10))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.004312c0();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.00409a20();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00431544();\n        piVar1[8] = iVar2;\n    }\n    fcn.00409a20();\n    if (piVar1[5] == 0) {\n        iVar2 = fcn.00431564();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.0043180c();\n    }\n    sub.USER32.DLL_GetDC();\n    uStack252 = fcn.004313d4();\n    uStack224 = 0x43465f;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    var_ch = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x461c20 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.004341f4::var_14h;\n        uStack244 = 0;\n        puStack256 = 0x4345e5;\n        piStack248 = piVar1;\n        iVar2 = sub.GDI32.DLL_CreateDIBSection();\n        if ((iVar2 == 0) || (var_14h == 0)) {\n            puStack256 = 0x4345f9;\n            iVar2 = sub.KERNEL32.DLL_GetLastError();\n            if (iVar2 == 0) {\n                puStack256 = 0x434602;\n                fcn.004312c0();\n            }\n            else {\n                puStack256 = 0x434609;\n                fcn.00415bf8();\n            }\n        }\n        uStack260 = 0x43462e;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x434624;\n        puStack256 = &stack0xfffffffc;\n        fcn.00409a20();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x434666;\n        piStack248 = var_ch;\n        uStack252 = 0;\n        puStack256 = 0x43465e;\n        sub.USER32.DLL_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x4344a1;\n    var_14h = fcn.00420dc0();\n    uStack236 = 0x4345c7;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x4344bf;\n    puStack232 = &stack0xfffffffc;\n    fcn.00409a20();\n    uStack244 = var_ch;\n    piStack248 = 0x4344c8;\n    sub.GDI32.DLL_CreateCompatibleDC();\n    piStack248 = 0x4344cd;\n    var_10h = fcn.004313d4();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = var_ch;\n    uStack260 = 0x4344dd;\n    uStack260 = sub.GDI32.DLL_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x4344e7;\n    uVar3 = sub.GDI32.DLL_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x434505;\n        uStack272 = fcn.00431ac4();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x434517;\n        var_34h = sub.GDI32.DLL_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x434523;\n        sub.GDI32.DLL_RealizePalette();\n    }\n    uStack288 = 0x43459b;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.GDI32.DLL_CreateDIBitmap(var_10h, piVar1, 4, var_14h, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.KERNEL32.DLL_GetLastError();\n        if (iVar2 == 0) {\n            fcn.004312c0();\n        }\n        else {\n            fcn.00415bf8();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.GDI32.DLL_SelectPalette(var_10h, var_34h, 0xffffffff, 0x4345a2);\n    }\n    uVar3 = sub.GDI32.DLL_SelectObject(var_10h, uVar3);\n    sub.GDI32.DLL_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2158
    },
    "004347cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004347cc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint var_58h;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x4347ec;\n        fcn.00433e5c();\n        puStack108 = 0x4347fb;\n        fcn.0042153c();\n        if (param_2 != 0) {\n            puStack108 = &fcn.004347cc::var_58h;\n            uStack112 = 0x54;\n            puStack120 = 0x43480b;\n            iStack116 = param_2;\n            sub.GDI32.DLL_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x467044) {\n            var_4h = *0x467044;\n        }\n        else {\n            puStack120 = 0x434838;\n            var_4h = fcn.00433474();\n        }\n        uStack124 = 0x434867;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.004340cc(0, 0, &fcn.004347cc::var_58h);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "00434a1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434a1c(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00433e6c();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack60 = uStack80;\n        uStack58 = uStack80;\n        fcn.00433878(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00434a9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434a9c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uchar auStackY256 [116];\n    uint uStackY140;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.0042f400();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00433e5c();\n            fcn.00433e6c();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.00434a9c::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x434b02;\n            var_4h = fcn.00432e10(0, &fcn.00434a9c::var_58h);\n            uStack120 = 0x434b33;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            uStackY140 = 0x434b29;\n            puStack116 = &stack0xfffffffc;\n            fcn.004340cc(0, &stack0xffffff00 | *(iVar1 + 0x70), &fcn.00434a9c::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00432d08();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 521
    },
    "00434bcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434bcc(char param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar4;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.0042153c();\n    if (*(*(in_EAX + 0x28) + 0x6c) == 0) {\n        fcn.00433de8();\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0x14) != 0) {\n            cVar4 = *(iVar1 + 0x50);\n            fcn.00432200(*(iVar1 + 0x50));\n            if (*(iVar1 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar1 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar1 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.0042153c(cVar4 + cStack1080 + '\\x0e');\n            fcn.00433cac();\n            fcn.004310bc();\n            sub.GDI32.DLL_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar1 + 0x14));\n            fcn.004313d4();\n            sub.GDI32.DLL_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.GDI32.DLL_SelectObject();\n            puVar2 = *(iVar1 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar2 != NULL) && (puVar2 < auStack1054)) {\n                puStackY1116 = puVar2;\n            }\n            if ((((*(iVar1 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar1 + 0x10) != 0)) &&\n               ((*(iVar1 + 0x71) == '\\0' && (puStackY1116 = fcn.00431b68(),  8 < *(iVar1 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.00409a58();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00432dc4();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar1 + 0x50) == NULL) || (*(iVar1 + 0x50) != puStackY1116)) {\n                    *(iVar1 + 0x50) = puStackY1116;\n                }\n                if (*(iVar1 + 0x70) != '\\0') {\n                    fcn.00431844();\n                }\n            }\n            if (*(iVar1 + 0x70) == '\\0') {\n                fcn.00409a58();\n                fcn.00409a58();\n                if ((8 < *(iVar1 + 0x3e)) && ((*(iVar1 + 0x40) & 3) != 0)) {\n                    fcn.00409a58();\n                }\n            }\n            else {\n                fcn.00409a58();\n                fcn.00409a58();\n            }\n            fcn.00409a58();\n            fcn.00409a58();\n        }\n    }\n    else {\n        uVar3 = fcn.00409828();\n        if (param_1 != '\\0') {\n            fcn.00409a58(uVar3);\n        }\n        fcn.00409828();\n        (**(*param_2 + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 932
    },
    "004350ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004350ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.00409814(0, 0);\n        uStack32 = 0x43511b;\n        fcn.00409a20();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.00431e14(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x435157;\n                fcn.004312cc();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00435164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00435164(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x435187;\n            fcn.004312cc();\n        }\n        puStack32 = 0x435193;\n        uVar2 = fcn.00421bf8();\n        uStack36 = 0x4351f1;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.004350b0();\n        if (iVar3 == *0x46705c) {\n            fcn.0042153c();\n            fcn.00409a58();\n        }\n        else {\n            fcn.004350b0();\n            fcn.00432340();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00435460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00435460(void)\n\n{\n    char cVar1;\n    \n    *0x461bf8 = sub.KERNEL32.DLL_MulDiv(8, *0x46704c, 0x48);\n    *0x461bf8 = -*0x461bf8;\n    if (*(*0x4663b0 + 0xc) != '\\0') {\n        cVar1 = fcn.0043541c();\n        if (cVar1 == -0x80) {\n            str._rMS_Sans_Serif._0_4_ = *0x4354c0;\n            str._rMS_Sans_Serif._4_4_ = *0x4354c4;\n            str._rMS_Sans_Serif._8_4_ = *0x4354c8;\n            *0x461c0b = *0x4354cc;\n            *0x461bf8 = sub.KERNEL32.DLL_MulDiv(9, *0x46704c, 0x48);\n            *0x461bf8 = -*0x461bf8;\n            *0x461bfe = cVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "004355a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004355a8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4355c0;\n    fcn.00435590();\n    uStack32 = 0x435649;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00420dc0();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0043565c();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x435650;\n    uStack32 = 0x435648;\n    fcn.0043559c();\n    return;\n}\n",
        "token_count": 367
    },
    "004357d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004357d4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x4670a0 != 0) {\n        uVar1 = fcn.0042fcd0();\n        fcn.0042fcd0(uVar1);\n        iVar2 = fcn.004355a8();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00438b6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438b6c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x461f10) && (arg_8h != *(*0x4670a4 + 0x30))) {\n        iVar1 = sub.USER32.DLL_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.USER32.DLL_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.USER32.DLL_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x461f14 == 0) {\n                        *0x461f14 = arg_8h;\n                    }\n                }\n                else if (*0x461f18 == 0) {\n                    *0x461f18 = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 238
    },
    "00438bd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00438bd0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x461f14 = 0;\n    *0x461f18 = 0;\n    *0x461f10 = in_EAX;\n    uVar1 = sub.KERNEL32.DLL_GetCurrentThreadId(fcn.00438b6c, 0);\n    sub.USER32.DLL_EnumThreadWindows(uVar1);\n    if (*0x461f14 != 0) {\n        return *0x461f14;\n    }\n    return *0x461f18;\n}\n",
        "token_count": 135
    },
    "00438fcc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00438fcc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.00439184();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00449238();\n            if (cVar1 == '\\0') {\n                fcn.004396d4();\n            }\n            else {\n                fcn.004396d4();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00439004": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439004(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x43906c == (*0x439068 & *(in_EAX + 0x61)))) {\n                uVar2 = fcn.0041126c();\n                *(arg_8h + -4) = uVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00439070": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439070(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x4390d4 == (*0x4390d0 & *(in_EAX + 0x61)))) {\n                uVar1 = fcn.0041126c();\n                *(arg_8h + -4) = uVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004390d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004390d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x84) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xc4))();\n        if (cVar1 == '\\0') {\n            fcn.0043980c();\n        }\n        else {\n            iVar2 = fcn.0044c07c();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0044c040();\n                        fcn.00439004(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0044c040();\n                        fcn.00439070(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0043980c();\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00439184": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00439184(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.0044f188(0xfffffff0);\n        uVar2 = sub.USER32.DLL_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 169
    },
    "004391bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004391bc(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.0044f188(0xfffffff0);\n    uVar2 = sub.USER32.DLL_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "004391f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004391f0(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.004391bc(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x466430)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.004391bc(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x466430)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 221
    },
    "0043926c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0043926c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.0044f188(0xfffffff0);\n    sub.USER32.DLL_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.004391f0(&stack0xfffffffc);\n        iVar3 = fcn.00448628();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.004391f0(&stack0xfffffffc);\n        iVar3 = fcn.004485e4();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 195
    },
    "00439304": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439304(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.0044f188(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x466440)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 201
    },
    "00439364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00439364(uint param_1, uint32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n        uVar3 = *(param_2 + 4);\n    // switch table (8 cases) at 0x439535\n        switch(*(param_2 + 4)) {\n        case 0:\n            uVar3 = fcn.004396d4();\n            break;\n        case 1:\n            uVar3 = fcn.004396d4();\n            break;\n        case 2:\n            fcn.0043926c();\n            uVar3 = fcn.004396d4();\n            break;\n        case 3:\n            fcn.0043926c();\n            uVar3 = fcn.004396d4();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                uVar3 = fcn.004396d4();\n            }\n            else {\n                fcn.00439304(&stack0xfffffffc);\n                uVar3 = fcn.004396d4();\n            }\n            break;\n        case 5:\n            uVar3 = in_EAX;\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    uVar3 = fcn.004396d4();\n                }\n                else {\n                    fcn.00439304(&stack0xfffffffc);\n                    uVar3 = fcn.004396d4();\n                }\n            }\n            break;\n        case 6:\n            uVar3 = fcn.004396d4();\n            break;\n        case 7:\n            uVar3 = fcn.004396d4();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar5 = *(in_EAX + 0x40);\n            uVar3 = *(in_EAX + 8) / iVar5;\n            var_10h = *(in_EAX + 8) % iVar5;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar5 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar5;\n            uVar3 = *(in_EAX + 10) / iVar5;\n        }\n        else {\n            iVar5 = 0;\n            uVar3 = 0;\n            var_10h = 0;\n        }\n        iVar2 = 0;\n        for (; 0 < iVar5; iVar5 = iVar5 + -1) {\n            iVar4 = fcn.0040272c();\n            if (iVar4 - iVar2 < *(in_EAX + 0x20)) {\n                sub.KERNEL32.DLL_Sleep(*(in_EAX + 0x20) - (iVar4 - iVar2));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.004396d4();\n            }\n            else if (iVar1 == 1) {\n                fcn.004396d4();\n            }\n            else if (iVar1 == 2) {\n                fcn.004396d4();\n            }\n            else if (iVar1 == 3) {\n                fcn.004396d4();\n            }\n            uVar3 = (**(**(in_EAX + 4) + 0x88))();\n            iVar2 = iVar4;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                uVar3 = fcn.004396d4();\n            }\n            else if (iVar1 == 1) {\n                uVar3 = fcn.004396d4();\n            }\n            else if (iVar1 == 2) {\n                uVar3 = fcn.004396d4();\n            }\n            else {\n                uVar3 = param_2 & 0xffff0000 | iVar1 - 3U;\n                if (iVar1 - 3U == 0) {\n                    uVar3 = fcn.004396d4();\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1043
    },
    "004396d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004396d4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.0044ed80();\n            }\n            else {\n                fcn.0044ed80();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.00438e44(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x250) != 0)) {\n                (**(**(iVar1 + 0x250) + 0xc))();\n            }\n        }\n        uVar2 = fcn.0044f188(bVar3);\n        iVar1 = (***0x466444)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.0044f188(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x466448)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "00439850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439850(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x461f58);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461f30);\n    uVar1 = fcn.0044f188();\n    fcn.004031ec(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461f34);\n        uVar1 = fcn.0044f188();\n        fcn.004031ec(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461f38);\n        uVar1 = fcn.0044f188();\n        fcn.004031ec(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x461f3c);\n        uVar1 = fcn.0044f188();\n        fcn.004031ec(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.0042fcd0();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x461f40);\n    uVar1 = fcn.0044f188();\n    fcn.004031ec(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 596
    },
    "00439958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00439958(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0043926c();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0043926c();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.00439850(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.0044f188(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x46644c)(uVar3);\n    fcn.004396d4();\n    iVar2 = fcn.0043926c();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 596
    },
    "00439b24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439b24(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.0044c298();\n    if (*(*0x4663b0 + 0xd) == '\\0') {\n        cVar1 = fcn.00415374();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.0044f188();\n            fcn.00403220(arg_8h);\n        }\n    }\n    fcn.00439d3c();\n    return;\n}\n",
        "token_count": 122
    },
    "00439ba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439ba4(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00421bf8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.004485e4();\n    iVar5 = *(in_EAX + 0x208);\n    cVar2 = fcn.00439184();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.004396d4();\n    }\n    iVar5 = fcn.0044c07c();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.0044c040();\n            fcn.0044c040();\n            fcn.0040732c();\n            fcn.00448350();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00407488();\n            fcn.00449d78(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.00438fcc();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 433
    },
    "00439cbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439cbc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x214) < 1) {\n        fcn.004390d8();\n        fcn.004390d8();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00439d3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439d3c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x218) == '\\0') {\n        puStack12 = 0x439d5b;\n        var_4h = in_EAX;\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x439e27;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x218) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.004392ec();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.004392ec();\n                if (cVar1 == '\\0') {\n                    fcn.00439958();\n                    fcn.00439958();\n                }\n                else {\n                    fcn.00439958();\n                    fcn.00439958();\n                }\n            }\n            else {\n                fcn.00439958();\n                fcn.00439958();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x218) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "0043a530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043a530(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00438e44();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x2e8) == 0) {\n            uVar2 = fcn.00421bf8();\n            *(iVar1 + 0x2e8) = uVar2;\n        }\n        fcn.0040732c();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0043a56c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043a56c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438e44();\n    if ((iVar1 != 0) && (*(iVar1 + 0x2e8) != 0)) {\n        fcn.00407628();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0043a658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043a658(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        fcn.0043a5e8(&stack0xfffffffc);\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            fcn.0044c804();\n        }\n    }\n    fcn.00448aa4();\n    if (*(in_EAX + 0x30) != 0) {\n        fcn.0043a5e8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0043a878": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043a878(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint uVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00439a70();\n    *(in_EAX + 0x50) = *0x43a9e0;\n    fcn.00448350();\n    fcn.00448374();\n    fcn.0044839c();\n    fcn.004483c0();\n    piVar2 = fcn.00434f74();\n    *(in_EAX + 0x240) = piVar2;\n    (***0x466430)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x466430)();\n    (**(**(in_EAX + 0x240) + 0x34))();\n    iVar1 = *(in_EAX + 0x240);\n    *(iVar1 + 0x14) = in_EAX;\n    *(iVar1 + 0x10) = fcn.0043b188;\n    uVar3 = fcn.00430aac();\n    *(in_EAX + 0x238) = uVar3;\n    fcn.004477bc();\n    *(in_EAX + 0x228) = *0x43a9e4;\n    *(in_EAX + 0x229) = 2;\n    *(in_EAX + 0x22b) = 0;\n    *(in_EAX + 0x231) = 3;\n    *(in_EAX + 0x244) = 0;\n    *(in_EAX + 0x25c) = *(*0x4670a8 + 0x40);\n    *(in_EAX + 0x235) = 1;\n    uVar3 = fcn.00421b70();\n    *(in_EAX + 0xb8) = uVar3;\n    *(in_EAX + 0x2e1) = 0xff;\n    *(in_EAX + 0x2e4) = 0;\n    fcn.0043b4ec();\n    fcn.00448d94();\n    fcn.00448cfc();\n    fcn.0044f2c8();\n    fcn.0043f9dc();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 631
    },
    "0043aa50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043aa50(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x43aa5b;\n    *NULL = fcn.00421fdc();\n    var_5h._0_1_ = extraout_DL;\n    if ((*(*NULL + 7) & 8) == 0) {\n        puStack16 = 0x43aa76;\n        fcn.00416060();\n    }\n    uStack20 = 0x43ab1a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x8d) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xd4))();\n    }\n    fcn.0043d2a8();\n    cVar1 = fcn.0044f48c();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xac))();\n    }\n    fcn.0043fa14();\n    fcn.00421c28();\n    fcn.00421c28();\n    fcn.00416340();\n    fcn.00439ad8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43ab21;\n    uStack20 = 0x43ab19;\n    fcn.00416168();\n    return;\n}\n",
        "token_count": 387
    },
    "0043ab34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ab34(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2d2) != 0) {\n        uStack28 = 0x43ab75;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x2d0))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x2ec) & 2) != 0) {\n        puStack24 = 0x43abaa;\n        fcn.0043b4ec();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0043abb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043abb0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x2da) != 0) {\n        uStack28 = 0x43abf1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 0x2d8))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0043ad58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ad58(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43ad6b;\n    fcn.0044bbe4();\n    uStack24 = 0x43afae;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x268) = 0;\n    *(in_EAX + 0x26c) = 0;\n    *(in_EAX + 0x270) = 0;\n    bVar1 = false;\n    *(in_EAX + 0x234) = *0x466522 ^ 1;\n    puStack20 = &stack0xfffffffc;\n    fcn.0044b340();\n    if ((*(in_EAX + 0x25c) != 0) && (0 < *(in_EAX + 0x270))) {\n        if (((*(in_EAX + 0x98) & 0x10) != 0) && (*(in_EAX + 0x25c) != *(*0x4670a8 + 0x40))) {\n            uVar2 = fcn.00430370(*(*0x4670a8 + 0x40), *(in_EAX + 0x25c));\n            sub.KERNEL32.DLL_MulDiv(uVar2);\n            fcn.00430378();\n        }\n        *(in_EAX + 0x25c) = *(*0x4670a8 + 0x40);\n        iVar3 = fcn.0043b0e0();\n        if (iVar3 != *(in_EAX + 0x270)) {\n            bVar1 = true;\n            fcn.00439fa0();\n            fcn.0044ec8c();\n            if ((*(in_EAX + 0x98) & 4) != 0) {\n                uVar2 = sub.KERNEL32.DLL_MulDiv(*(in_EAX + 0x268), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x268) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 8) != 0) {\n                uVar2 = sub.KERNEL32.DLL_MulDiv();\n                *(in_EAX + 0x26c) = uVar2;\n            }\n            if ((*(in_EAX + 0x98) & 0x20) != 0) {\n                uVar2 = sub.KERNEL32.DLL_MulDiv(*(in_EAX + 0x1fa), iVar3, *(in_EAX + 0x270));\n                *(in_EAX + 0x1fa) = uVar2;\n                uVar2 = sub.KERNEL32.DLL_MulDiv();\n                *(in_EAX + 0x1fe) = uVar2;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x268)) {\n        fcn.004485fc();\n    }\n    if (0 < *(in_EAX + 0x26c)) {\n        fcn.00448640();\n    }\n    *(in_EAX + 0x98) = *0x43afbc;\n    if (!bVar1) {\n        fcn.00439fa0();\n        fcn.0044ec8c();\n    }\n    uVar2 = 0;\n    fcn.00449d78(0);\n    *in_FS_OFFSET = uVar2;\n    fcn.0044bbec(0x43afb5);\n    return;\n}\n",
        "token_count": 849
    },
    "0043b188": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043b188(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4663d8 == '\\0') {\n        uVar2 = fcn.0044f188();\n        iVar3 = sub.USER32.DLL_IsIconic(uVar2);\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x7c))();\n        }\n    }\n    else {\n        cVar1 = fcn.0044f48c();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x229) != '\\x03')) {\n            uVar2 = fcn.0043d41c();\n            uVar2 = fcn.0044f188(0x80, 1, uVar2);\n            sub.USER32.DLL_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0043b1f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043b1f4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x210) == '\\0') && (*(*(in_EAX + 0x208) + 0x10) == 0)) && (*(*(in_EAX + 0x20c) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 99
    },
    "0043b530": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043b530(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x43b589;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if ((*(in_EAX + 0x22f) == '\\x01') && (*(in_EAX + 0x57) != '\\0')) {\n        fcn.00424964();\n        fcn.00414b70();\n        fcn.004223bc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x43b590;\n    uStack16 = 0x43b588;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 217
    },
    "0043b5d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b5d0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0040f5a8(arg_8h);\n    if (*(in_EAX + 0x250) != 0) {\n        (**(**(in_EAX + 0x250) + 0x2c))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0043b610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b610(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t *piStack64;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = *param_2;\n    if (iVar5 < 0x47) {\n        if (iVar5 == 0x46) {\n            if (*0x43ba44 == (*(in_EAX + 0x1c) & *0x43ba40)) {\n                if ((*(in_EAX + 0x230) - 1U < 2) && (*(in_EAX + 0x22b) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x230) == '\\x01') || (*(in_EAX + 0x230) == '\\x03')) &&\n                   ((*(in_EAX + 0x229) == '\\x02' || (*(in_EAX + 0x229) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0043ba2c;\n        }\n        if (iVar5 - 6U < 3) {\n            if (*0x461f08 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n                iVar5 = 0;\n                if (*(in_EAX + 0x22f) == '\\x02') {\n                    iVar1 = fcn.0043be74();\n                    if (iVar1 != 0) {\n                        fcn.0043be74();\n                        iVar5 = fcn.0044f188();\n                    }\n                }\n                else if ((*(in_EAX + 0x220) != 0) && (*(in_EAX + 0x220) != in_EAX)) {\n                    iVar5 = fcn.0044f188();\n                }\n                if (iVar5 != 0) {\n                    sub.USER32.DLL_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0043ba2c;\n        }\n        if (iVar5 == 0x2b) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (iVar5 = fcn.0042ce04(),  iVar5 != 0)) {\n                fcn.00430aac();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                iVar5 = sub.GDI32.DLL_SaveDC();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.00431068();\n                fcn.00430f08();\n                piVar2 = piVar2 & 0xffff0000 | *(piVar2 + 4);\n                puStack72 = 0x43b844;\n                fcn.0042e2ec(piVar2);\n                *in_FS_OFFSET = piVar2;\n                piStack64 = 0x43b85b;\n                fcn.00431068();\n                puStack72 = 0x43b86b;\n                piStack64 = iVar5;\n                sub.GDI32.DLL_RestoreDC();\n                return;\n            }\n            goto code_r0x0043ba2c;\n        }\n        if (iVar5 == 0x2c) {\n            piVar2 = param_2[2];\n            if (((*piVar2 == 1) && (*(in_EAX + 0x248) != 0)) && (piVar3 = fcn.0042ce04(),  piVar3 != NULL)) {\n                fcn.0044f188();\n                uVar4 = sub.USER32.DLL_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00430aac();\n                piStack64 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x43b90e;\n                iVar5 = sub.GDI32.DLL_SaveDC();\n                uStack76 = 0x43b973;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.00431068();\n                fcn.00430f08();\n                piVar2 = piVar2 + 4;\n                (**(*piVar3 + 0x38))();\n                *in_FS_OFFSET = piVar2;\n                uStack76 = 0x43b97a;\n                piStack80 = 0x43b965;\n                fcn.00431068();\n                piStack80 = iVar5;\n                sub.GDI32.DLL_RestoreDC(uVar4);\n                return;\n            }\n            goto code_r0x0043ba2c;\n        }\n    }\n    else {\n        if (iVar5 == 0xb01a) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00421e24();\n            }\n            goto code_r0x0043ba2c;\n        }\n        if (iVar5 == 0xb01b) {\n            if (*(in_EAX + 0xa0) != 0) {\n                fcn.00421e24();\n            }\n            goto code_r0x0043ba2c;\n        }\n    }\n    if (iVar5 == *0x4670b0) {\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        piStack64 = 0x43ba2c;\n        fcn.00449d78(0);\n    }\ncode_r0x0043ba2c:\n    piStack64 = 0x43ba36;\n    fcn.0044cc38();\n    return;\n}\n",
        "token_count": 1489
    },
    "0043ba94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ba94(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043bea8();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043bef4();\n            if (*(iVar2 + 0x22b) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0043bad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043bad4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    int32_t iStackY116;\n    uint *puStackY112;\n    uchar *puStackY108;\n    uint *puStackY104;\n    uint var_5ch;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 != 0xf) {\n        if (iVar1 == 0x14) {\n            fcn.00430990();\n            puStackY104 = 0x43bb3e;\n            (**(*var_4h + 0x44))();\n            puStackY104 = &fcn.0043bad4::var_5ch;\n            puStackY108 = var_8h[1];\n            puStackY112 = 0x43bb4e;\n            sub.USER32.DLL_FillRect();\n            var_8h[3] = 1;\n        }\n        else if (iVar1 == 0x3f) {\n            puStackY104 = 0x43bb63;\n            fcn.0043ba48(&stack0xfffffffc);\n            if (*(var_4h + 0x22f) == '\\x02') {\n                iVar1 = fcn.0043bea8();\n                if (iVar1 != 0) {\n                    puStackY104 = 0x43bb86;\n                    fcn.0043ba94(&stack0xfffffffc);\n                }\n                fcn.004389ac();\n            }\n        }\n        else if (iVar1 == 0x84) {\n            puStackY104 = 0x43bb07;\n            fcn.0043ba48(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStackY104 = 0x43bc16;\n            fcn.0043ba48(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStackY104 = in_EAX[0x95];\n        puStackY108 = 0x43bbc3;\n        iVar1 = sub.USER32.DLL_BeginPaint();\n        var_8h[1] = iVar1;\n    }\n    puStackY112 = 0x43bc09;\n    iStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStackY108 = &stack0xfffffffc;\n    fcn.0044ced8();\n    *in_FS_OFFSET = iStackY116;\n    puStackY108 = 0x43bc17;\n    if (var_ch == 0) {\n        puStackY112 = &fcn.0043bad4::var_4ch;\n        iStackY116 = var_4h[0x95];\n        sub.USER32.DLL_EndPaint();\n    }\n    return;\n}\n",
        "token_count": 728
    },
    "0043bcf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043bcf0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    if (*(in_EAX + 0x91) == '\\0') {\n        *(in_EAX + 0x91) = 1;\n        uStack16 = 0x43bd6d;\n        uStack20 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack20;\n        var_4h = in_EAX;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack12 = &stack0xfffffffc;\n                (**(*in_EAX + 0x70))();\n            }\n            else {\n                (**(*in_EAX + 0x70))();\n            }\n            (**(*var_4h + 0x6c))();\n        }\n        *in_FS_OFFSET = uStack20;\n        *(var_4h + 0x91) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0043be74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043be74(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        sub.USER32.DLL_SendMessageA(*(in_EAX + 0x254), 0x229, 0, 0);\n        uVar1 = fcn.00445af4();\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0043bea8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0043bea8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0043f96c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0043f958();\n            if (*(iVar2 + 0x22f) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 184
    },
    "0043bef4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bef4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) && (iVar1 = fcn.0043f96c(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.0043f958();\n            if ((*(iVar2 + 0x22f) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0043c0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c0a0(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x22f)) {\n        if ((param_2 == '\\x01') && (*(in_EAX + 0x230) == '\\0')) {\n            fcn.0043c404();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.0044c804();\n        }\n        cVar1 = *(in_EAX + 0x22f);\n        *(in_EAX + 0x22f) = param_2;\n        if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1a5) == '\\0')) {\n            fcn.0043c480();\n            fcn.00448d70();\n        }\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            fcn.0044c9a0();\n        }\n        if (param_2 == '\\x01') {\n            fcn.0043b4ec();\n        }\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "0043c120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043c120(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x22f) == '\\x02') && (*(in_EAX + 0x254) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x248) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x248) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 600) != 0) {\n            uVar4 = fcn.0042a078();\n        }\n        uVar1 = fcn.0044f188();\n        iVar2 = sub.USER32.DLL_GetMenu(uVar1);\n        sub.USER32.DLL_SendMessageA(*(in_EAX + 0x254), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.0044f188();\n            sub.USER32.DLL_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0043c1e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c1e8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.0043f96c(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.0043f958();\n            if ((param_2 == *(iVar2 + 0x248)) && (iVar2 = fcn.0043f958(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00424964();\n                fcn.00414bac(arg_8h, arg_ch);\n                fcn.004223bc();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x248) != 0) {\n        fcn.0042d490();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x248) = param_2;\n    if ((param_2 == 0) || ((fcn.0040f208(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x229) == '\\x03')))) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.0044f188(0);\n            sub.USER32.DLL_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x248) + 0x5c) == '\\0') && (*(in_EAX + 0x22f) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x248) + 0x34))();\n            arg_8h = fcn.0044f188();\n            iVar3 = sub.USER32.DLL_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x248) + 0x34))();\n                arg_8h = fcn.0044f188();\n                sub.USER32.DLL_SetMenu();\n            }\n            fcn.0044f188();\n            fcn.0042d490();\n        }\n    }\n    else if ((*(in_EAX + 0x22f) != '\\x01') && (cVar1 = fcn.0044f48c(),  cVar1 != '\\0')) {\n        uVar4 = fcn.0044f188(0);\n        sub.USER32.DLL_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x22e) != '\\0') {\n        fcn.0043d2a8();\n    }\n    fcn.0043c120();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 930
    },
    "0043c420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c420(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x25c) != 0;\n}\n",
        "token_count": 50
    },
    "0043c480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\ncode * fcn.0043c480(void)\n\n{\n    int32_t in_EAX;\n    code *pcVar1;\n    \n    pcVar1 = reloc.OLEAUT32.DLL_SysFreeString;\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        pcVar1 = 0x8000000c;\n    }\n    return pcVar1;\n}\n",
        "token_count": 87
    },
    "0043c51c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c51c(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x22b)) && (*(in_EAX + 0x22b) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1a6) != '\\0')) {\n        uVar1 = fcn.0044f188(*(param_2 * 4 + 0x461f6c));\n        sub.USER32.DLL_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0043c55c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043c55c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x231) != '\\0') && (*(*0x4670a4 + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x231) == '\\x02') {\n            iVar10 = fcn.0043bf74();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x231) == '\\x03') && (*(*0x4670a8 + 0x68) != 0)) {\n            iVar10 = fcn.0043bf74();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x231) == '\\x01') {\n            iVar10 = fcn.0043f928();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0043bf74();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.0043f93c();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.0043f928();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.0043f93c(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.0043f928(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x8c) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0043f928(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0043f65c();\n                                fcn.0043f928(iVar4);\n                                iVar5 = fcn.0043f640();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0043f928(iVar4 + iVar3);\n                                fcn.0043f628();\n                                fcn.0043f928();\n                                fcn.0043f674();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else if (*(in_EAX + 0x8c) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.0043f928(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.0043f65c();\n                                fcn.0043f928(iVar4);\n                                iVar5 = fcn.0043f640();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.0043f928(iVar4 + iVar3);\n                                fcn.0043f628();\n                                fcn.0043f928();\n                                fcn.0043f674();\n                                (**(*in_EAX + 0x84))();\n                            }\n                            else {\n                                fcn.0043f928(iVar10, iVar1, iVar11);\n                                iVar4 = fcn.0043f628();\n                                iVar3 = in_EAX[0x10];\n                                fcn.0043f928();\n                                iVar5 = fcn.0043f628();\n                                fcn.0043f928();\n                                iVar7 = fcn.0043f628();\n                                fcn.0043f928();\n                                iVar8 = fcn.0043f674();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar4 + iVar3) - iVar5)) {\n                                    fcn.0043f928();\n                                    fcn.0043f628();\n                                    fcn.0043f928();\n                                    fcn.0043f674();\n                                }\n                                fcn.0043f928();\n                                iVar3 = fcn.0043f65c();\n                                iVar3 = iVar3 + in_EAX[0x11];\n                                fcn.0043f928();\n                                iVar4 = fcn.0043f65c();\n                                fcn.0043f928();\n                                iVar5 = fcn.0043f65c();\n                                fcn.0043f928();\n                                iVar7 = fcn.0043f640();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.0043f928();\n                                    uVar9 = fcn.0043f65c();\n                                    fcn.0043f928(uVar9);\n                                    fcn.0043f640();\n                                }\n                                (**(*in_EAX + 0x84))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1302
    },
    "0043cc0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cc0c(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x43cd35;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x22f) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x4670a4 + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x4670a4 + 0x44) + 0x254) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00424964();\n            fcn.00414b70();\n            fcn.004223bc();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x46652c;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x4670a4 + 0x44) + 0x254);\n        uVar1 = sub.USER32.DLL_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x180) = uVar1;\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.0044c430();\n        *(in_EAX + 0x2ec) = *(in_EAX + 0x2ec) & 0xef;\n    }\n    fcn.0043f0b0();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.0042275c(0x43cd3c);\n    return;\n}\n",
        "token_count": 768
    },
    "0043cf10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043cf10(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x461f0c = *0x461f0c + 1;\n    if (*(in_EAX + 0x250) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x220) = 0;\n        }\n        else {\n            *(in_EAX + 0x220) = param_2;\n        }\n    }\n    *(*0x4670a8 + 100) = param_2;\n    *(*0x4670a8 + 0x68) = in_EAX;\n    fcn.00407628();\n    fcn.00407504();\n    cVar2 = fcn.00421db4();\n    if (cVar2 == '\\0') {\n        *(*0x4670a8 + 0x6c) = 0;\n    }\n    else {\n        *(*0x4670a8 + 0x6c) = in_EAX;\n        fcn.00407628();\n        fcn.00407504();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x43d19c;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (in_EAX != *(*0x4670a8 + 0x78)) {\n        if (*(*0x4670a8 + 0x78) != 0) {\n            fcn.0044f188();\n            *(*0x4670a8 + 0x78) = 0;\n            cVar2 = fcn.00438c0c();\n            if (cVar2 == '\\0') {\n                fcn.00422468();\n                return 0;\n            }\n        }\n        *(*0x4670a8 + 0x78) = in_EAX;\n        fcn.0044f188();\n        cVar2 = fcn.00438c0c();\n        if (cVar2 == '\\0') {\n            fcn.00422468();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x224) == 0) {\n        *(in_EAX + 0x224) = in_EAX;\n    }\n    if (*(in_EAX + 0x224) != param_2) {\n        while ((*(in_EAX + 0x224) != 0 && (cVar2 = fcn.0044be28(),  cVar2 == '\\0'))) {\n            fcn.0044f188();\n            *(in_EAX + 0x224) = *(*(in_EAX + 0x224) + 0x30);\n            cVar2 = fcn.00438c0c();\n            if (cVar2 == '\\0') {\n                fcn.00422468();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x224) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x224));\n            *(in_EAX + 0x224) = iVar3;\n            fcn.0044f188();\n            cVar2 = fcn.00438c0c();\n            if (cVar2 == '\\0') {\n                fcn.00422468();\n                return 0;\n            }\n        }\n        for (piVar1 = *(param_2 + 0x30); piVar1 != NULL; piVar1 = piVar1[0xc]) {\n            cVar2 = fcn.00421db4();\n            if (cVar2 != '\\0') {\n                (**(*piVar1 + 200))();\n            }\n        }\n        fcn.00449d78(param_2);\n        if ((*(in_EAX + 0x27c) != 0) && (*(in_EAX + 0x27c) != param_2)) {\n            iVar4 = 0;\n            fcn.00449d78(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x43d19c & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1068
    },
    "0043d1a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043d1a4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.0044f188();\n    sub.USER32.DLL_SetFocus(uVar1);\n    iVar2 = fcn.0044f188();\n    iVar3 = sub.USER32.DLL_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0043d1f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d1f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x22e) = param_2;\n    if (*(in_EAX + 0x27c) != 0) {\n        fcn.00449d78(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x220) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.0044f5b0(0, 1);\n            fcn.0043cdec();\n        }\n        fcn.0043d2a8();\n        fcn.0043d1a4();\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0043d258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d258(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x22e) != '\\0') && (*(in_EAX + 0x220) != 0)) {\n        fcn.00449d78(param_2);\n    }\n    if (*(in_EAX + 0x22f) == '\\x02') {\n        iVar1 = fcn.0043be74();\n        if (iVar1 != 0) {\n            fcn.0043be74();\n            fcn.0043d258();\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0043d2a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d2a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x2ec) & 8) == 0) && (*(*0x4670a4 + 0x44) != 0)) && (*(*(*0x4670a4 + 0x44) + 0x248) != 0)) &&\n       ((in_EAX != *(*0x4670a4 + 0x44) && ((*(in_EAX + 0x22f) == '\\x01' || (*(*(*0x4670a4 + 0x44) + 0x22f) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.0042da70();\n        }\n        else {\n            fcn.0042da54();\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0043d438": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043d438(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43d451;\n    fcn.00430d74();\n    uStack24 = 0x43d4e6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x43d46f;\n    puStack20 = &stack0xfffffffc;\n    fcn.00431068();\n    uStack36 = 0x43d4c3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (*(in_EAX + 0x250) == 0) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00421e24();\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        (**(**(in_EAX + 0x250) + 0x28))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x43d4ca;\n    uStack36 = 0x43d4c2;\n    fcn.00431068();\n    return;\n}\n",
        "token_count": 324
    },
    "0043d7f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d7f0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x9b) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        uVar1 = fcn.0044f188();\n        iVar2 = sub.USER32.DLL_IsIconic(uVar1);\n        if (iVar2 == 0) {\n            uVar1 = fcn.0044f188(0, 0, 0, 0, 0, 7);\n            sub.USER32.DLL_SetWindowPos(uVar1);\n            uVar1 = fcn.0044f188(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.USER32.DLL_PostMessageA(uVar1);\n            if (*(in_EAX + 0x22e) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.0044926c();\n            return;\n        }\n    }\n    fcn.0044a294();\n    return;\n}\n",
        "token_count": 295
    },
    "0043d964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d964(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x43d9ff;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x248) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.USER32.DLL_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.0042ce04();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.004425a4();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.00445d58();\n            fcn.004425a4();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x43da06;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 445
    },
    "0043dcf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043dcf4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x150) == '\\x01') && (*(in_EAX + 0x158) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x150) == '\\0') && (*(in_EAX + 0x154) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 131
    },
    "0043dd2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043dd2c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x150) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x158);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.004227b0();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0043dd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043dd60(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_10h = 0;\n    uStack56 = 0x43debc;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_4h = param_2;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack52 = &stack0xfffffffc;\n            for (iVar2 = fcn.00445af4(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.0043dcf4();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x0043dea6;\n            fcn.0043dd2c(&fcn.0043dd60::var_10h);\n            fcn.00405e40();\n            fcn.004486f8();\n            fcn.00402798();\n        }\n        else {\n            var_9h._0_1_ = '\\x01';\n            *NULL = fcn.0043dcb4(&stack0xfffffffc);\n            if (*NULL == 0) {\n                *NULL = fcn.0043dcb4(&stack0xfffffffc);\n            }\n            fcn.00405e40();\n            fcn.004486f8();\n            fcn.00402798();\n        }\n        if (((*(in_EAX + 0x8a) & 8) == 0) || (var_9h != '\\x01')) {\n            if (var_9h == '\\x01') {\n                fcn.00442240();\n            }\n            else if (var_9h == '\\0') {\n                fcn.004421d8();\n            }\n        }\n        else {\n            fcn.004422a8();\n            fcn.004422a8();\n        }\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        (**(*in_EAX + -0x10))();\n    }\ncode_r0x0043dea6:\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x43dec3;\n    uStack56 = 0x43debb;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 663
    },
    "0043e0bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e0bc(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x43e626;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xbb) & 4) != 0)) {\n        puStack40 = 0x43e0fd;\n        fcn.00424964();\n        puStack40 = 0x43e10c;\n        fcn.00414b70();\n        puStack40 = 0x43e111;\n        fcn.004223bc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x43e11b;\n    fcn.00442694();\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) | 4;\n    uStack44 = 0x43e609;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1a6) == '\\0') {\n            iStack56 = 0x43e510;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.00421e24();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x4670a8 + 0x6c) == in_EAX) {\n                puStack52 = 0x43e53e;\n                fcn.0043d2a8();\n            }\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                puStack52 = 0x43e552;\n                fcn.0044c804();\n            }\n            else if ((*(in_EAX + 0xbb) & 8) == 0) {\n                iVar6 = 0;\n                puStack52 = 0x43e58c;\n                iVar4 = fcn.0044f188();\n                puStack52 = 0x43e593;\n                iVar5 = sub.USER32.DLL_GetActiveWindow();\n                if (iVar4 == iVar5) {\n                    puStack52 = 0x43e59f;\n                    puStack52 = fcn.0044f188();\n                    iStack56 = 0x43e5a5;\n                    iVar4 = sub.USER32.DLL_IsIconic();\n                    if (iVar4 == 0) {\n                        iStack56 = 0x43e5b1;\n                        fcn.0044f188();\n                        iStack56 = 0x43e5b6;\n                        iVar6 = fcn.00438bd0();\n                    }\n                }\n                if (iVar6 == 0) {\n                    iStack56 = 0;\n                    uStack60 = 0x43e5eb;\n                    uStack60 = fcn.0044f188();\n                    sub.USER32.DLL_ShowWindow();\n                }\n                else {\n                    iStack56 = 0x97;\n                    uStack60 = 0;\n                    uVar3 = fcn.0044f188(0, 0, 0, 0);\n                    sub.USER32.DLL_SetWindowPos(uVar3);\n                    sub.USER32.DLL_SetActiveWindow(iVar6);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar3 = fcn.0044f188(0, 0, 0);\n                sub.USER32.DLL_SetWindowPos(uVar3);\n            }\n        }\n        else {\n            iStack56 = 0x43e174;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.00421e24();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x8c) == '\\x04') || ((*(in_EAX + 0x8c) == '\\x06' && (*(in_EAX + 0x22f) == '\\x01')))) {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x43e1d0;\n                    fcn.004485e4();\n                    puStack52 = 0x43e1ec;\n                    fcn.00448628();\n                }\n                else {\n                    puStack52 = 0x43e205;\n                    fcn.0043f8ec();\n                    puStack52 = 0x43e21e;\n                    fcn.0043f8e0();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x43e254;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x43e269;\n                    fcn.0043c55c();\n                }\n            }\n            else if (*(in_EAX + 0x8c) - 6U < 2) {\n                iVar4 = *(*0x4670a4 + 0x44);\n                if (*(in_EAX + 0x8c) == '\\a') {\n                    puStack52 = 0x43e2aa;\n                    cVar2 = fcn.00421db4();\n                    if (cVar2 != '\\0') {\n                        iVar4 = in_EAX[1];\n                    }\n                }\n                if (iVar4 == 0) {\n                    puStack52 = 0x43e2ea;\n                    fcn.0043f8ec();\n                    puStack52 = 0x43e303;\n                    fcn.0043f8e0();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x43e339;\n                (**(*in_EAX + 0x84))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    iStack56 = 0x43e34e;\n                    fcn.0043c55c();\n                }\n            }\n            else if (*(in_EAX + 0x8c) == '\\x05') {\n                if (*(in_EAX + 0x22f) == '\\x01') {\n                    puStack52 = 0x43e374;\n                    fcn.004485e4();\n                    puStack52 = 0x43e390;\n                    fcn.00448628();\n                }\n                else {\n                    puStack52 = 0x43e3a9;\n                    fcn.0043f91c();\n                    puStack52 = 0x43e3c2;\n                    fcn.0043f910();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x43e3f8;\n                (**(*in_EAX + 0x84))();\n            }\n            *(in_EAX + 0x8c) = 0;\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if (*(in_EAX + 0x22b) == '\\x02') {\n                    iStack56 = 0;\n                    uStack60 = 0x43e428;\n                    uStack60 = fcn.0044f188();\n                    sub.USER32.DLL_SendMessageA(*(*(*0x4670a4 + 0x44) + 0x254), 0x223);\n                    uVar3 = fcn.0044f188(3);\n                    sub.USER32.DLL_ShowWindow(uVar3);\n                }\n                else {\n                    iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461f84);\n                    uStack60 = 0x43e46e;\n                    uStack60 = fcn.0044f188();\n                    sub.USER32.DLL_ShowWindow();\n                    uVar3 = fcn.0044f188(5, 0, in_EAX[0x12] | in_EAX[0x13] << 0x10);\n                    sub.USER32.DLL_CallWindowProcA(0x4603d8, uVar3);\n                    fcn.00448e30();\n                }\n                uStack60 = *(*(*0x4670a4 + 0x44) + 0x254);\n                sub.USER32.DLL_SendMessageA();\n            }\n            else {\n                iStack56 = *(*(in_EAX + 0x22b) * 4 + 0x461f84);\n                uStack60 = 0x43e4e1;\n                uStack60 = fcn.0044f188();\n                sub.USER32.DLL_ShowWindow();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) & 0xfb;\n    return;\n}\n",
        "token_count": 2260
    },
    "0043e6b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e6b4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x43e6e0;\n            fcn.0042ffbc();\n            uStack20 = 0x43e712;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x43e719;\n            uStack20 = 0x43e711;\n            fcn.00421c28();\n            return;\n        }\n        puStack16 = 0x43e6d2;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0043e74c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e74c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xbb) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xe0))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x22f) == '\\x01') {\n                if ((*(in_EAX + 0x8a) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.00421e24();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x4670a4 + 0x44)) {\n                    fcn.00441dc4();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.0043e8ec();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0043c51c();\n                }\n                else {\n                    fcn.0043e988();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0x93] = 2;\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0043e90c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e90c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43e97a;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x22e) != '\\0') goto code_r0x0043e964;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x0043e93c:\n        puStack16 = puVar1;\n        fcn.00424964();\n        fcn.00414b70();\n        fcn.004223bc();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x0043e93c;\n    }\n    fcn.0043d1a4();\ncode_r0x0043e964:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43e981;\n    uStack20 = 0x43e979;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 336
    },
    "0043e9a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e9a4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x43ec34;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x43e9cc;\n    fcn.00447440();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x43e9dd;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xbb) & 8) == 0)) && (*(in_EAX + 0x22f) != '\\x01')) goto code_r0x0043ea1a;\n    }\n    puStack60 = 0x43ea06;\n    fcn.00424964();\n    puStack60 = 0x43ea15;\n    fcn.00414b70();\n    puStack60 = 0x43ea1a;\n    fcn.004223bc();\ncode_r0x0043ea1a:\n    puStack60 = 0x43ea1f;\n    iVar2 = sub.USER32.DLL_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x43ea2e;\n        puStack72 = sub.USER32.DLL_GetCapture();\n        uStack76 = 0x43ea34;\n        sub.USER32.DLL_SendMessageA();\n    }\n    puStack60 = 0x43ea39;\n    sub.USER32.DLL_ReleaseCapture();\n    *(in_EAX + 0xbb) = *(in_EAX + 0xbb) | 8;\n    puStack60 = 0x43ea48;\n    sub.USER32.DLL_GetActiveWindow();\n    puStack60 = 0x43ea6a;\n    fcn.00407504();\n    *(*0x4670a8 + 0x78) = in_EAX;\n    puStack60 = 0x43ea8e;\n    fcn.0043fe0c();\n    puStack60 = 0x43eaa0;\n    fcn.00438a80();\n    uStack64 = 0x43ec14;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x43eab9;\n    puStack60 = &stack0xfffffffc;\n    fcn.0043e8f4();\n    uStack76 = 0x43eb73;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    uVar3 = fcn.0044f188(0xb000, 0, 0);\n    sub.USER32.DLL_SendMessageA(uVar3);\n    in_EAX[0x93] = 0;\n    do {\n        fcn.00441b44();\n        if (*(*0x4670a4 + 0x9c) == '\\0') {\n            if (in_EAX[0x93] != 0) {\n                fcn.0043e854();\n            }\n        }\n        else {\n            in_EAX[0x93] = 2;\n        }\n    } while (in_EAX[0x93] == 0);\n    uVar3 = fcn.0044f188(0xb001, 0, 0);\n    sub.USER32.DLL_SendMessageA();\n    fcn.0044f188();\n    sub.USER32.DLL_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.0043e8ec(0x43eb7a);\n    return;\n}\n",
        "token_count": 1006
    },
    "0043ec44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ec44(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0044c07c(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0044c040();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x78))();\n            }\n            cVar1 = fcn.00421db4();\n            if (cVar1 != '\\0') {\n                fcn.0043ec44(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "0043ecb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043ecb4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        (**(*in_EAX + 0x78))();\n        if ((in_EAX[0x92] != 0) && (iVar1 = fcn.0042b9b0(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.0042b9c0();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.0043ec44(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "0043ed8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ed8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0044c07c(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0044c040();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0043ed5c(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.00421db4(),  cVar1 != '\\0' && (cVar1 = fcn.0043ed8c(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0043ee08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ee08(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0043ed5c(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0043ed5c(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0043ed8c(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0043ee8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ee8c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1a6) != '\\0') && (iVar2 = fcn.0044c07c(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0044c040();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.0043ee5c(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.00421db4(),  cVar1 != '\\0' && (cVar1 = fcn.0043ee8c(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "0043ef08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ef08(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1a6) != '\\0')) {\n        cVar1 = fcn.0043ee5c(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.0043ee5c(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.0043ee8c(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0043efb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043efb0(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    unkbyte3 Var3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x2c2) != 0) {\n        (**(in_EAX + 0x2c0))();\n    }\n    if ((((*(in_EAX + 0x248) == 0) || (*(*(in_EAX + 0x248) + 0x38) == 0)) || (uVar2 = fcn.00421e24(),  uVar2 == '\\0'))\n       && (uVar2 = fcn.0043ef5c(&stack0xfffffffc),  uVar2 == '\\0')) {\n        uVar1 = 0;\n        Var3 = 0;\n    }\n    else {\n        Var3 = uVar2 >> 8;\n        uVar1 = 1;\n    }\n    return CONCAT31(Var3, uVar1);\n}\n",
        "token_count": 236
    },
    "0043f02c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043f02c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x250) != 0) && (iVar1 = (****(arg_8h + 0x250))(*(arg_8h + 0x250), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.0040f8c8(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "0043f0b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043f0b0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461f00 != NULL)) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044f188(0xffffffec);\n            uVar3 = sub.USER32.DLL_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x2e0) == '\\0') && (*(in_EAX + 0x2e2) == '\\0')) {\n                uVar2 = fcn.0044f188(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.USER32.DLL_SetWindowLongA(uVar2);\n                uVar2 = fcn.0044f188(0, 0, 0x485);\n                sub.USER32.DLL_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.0044f188(0xffffffec, uVar3 | 0x80000);\n                    sub.USER32.DLL_SetWindowLongA(uVar2);\n                }\n                uVar3 = *(*(in_EAX + 0x2e0) * 4 + 0x461f90) | *(*(in_EAX + 0x2e2) * 4 + 0x461f98);\n                uVar2 = fcn.0044f188(*(in_EAX + 0x2e4), uVar3 & 0xffffff00 | *(in_EAX + 0x2e1), uVar3);\n                (**0x461f00)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 443
    },
    "0043f1d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f1d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x461f00 != 0)) &&\n       ((*(in_EAX + 0x2e0) != '\\0' || (*(in_EAX + 0x2e2) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0043f204": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043f204(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xdc))();\n    fcn.00439ce0();\n    fcn.0043bda4();\n    fcn.0044ddc8();\n    fcn.0043c0a0();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "0043f6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043f6c0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040f138();\n    puVar2 = *0x4663b8;\n    (*0x4663b8)[1] = in_EAX;\n    *puVar2 = 0x43fa64;\n    puVar2 = *0x4663bc;\n    (*0x4663bc)[1] = in_EAX;\n    *puVar2 = 0x43fa70;\n    fcn.0043fa7c();\n    uVar3 = sub.USER32.DLL_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00421bf8();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.USER32.DLL_GetDC(0);\n    uVar4 = sub.GDI32.DLL_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.USER32.DLL_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x46643c)(0, 0, fcn.0043bf44, *(in_EAX + 0x58));\n    uVar3 = fcn.0042ffbc();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.0042ffbc();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.0042ffbc();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.0043fe9c();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43fd78;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43fd78;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x43fd78;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 790
    },
    "0043f990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043f990(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0043fa14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043fa14(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00407628();\n    fcn.00407628();\n    fcn.00442694();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x4670a4 + 0x84) != 0)) {\n        fcn.004504a8();\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0043fb5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043fb5c(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint var_114h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x43fd07;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00421bf8();\n        *(var_4h + 0x34) = uVar3;\n        fcn.0042275c();\n        uStack636 = 0x40;\n        iVar4 = sub.USER32.DLL_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.0043fb5c::var_114h;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.00453bc4();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x43fc14;\n                    uStack656 = fcn.0041331c(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x43fc1f;\n                    iVar4 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x43fcc3;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = var_ch;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.ADVAPI32.DLL_RegQueryValueExA\n                                          (var_ch, 0x43fd50, 0, 0, &fcn.0043fb5c::var_214h, &fcn.0043fb5c::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004229c4();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004229c4();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.ADVAPI32.DLL_RegCloseKey(var_ch, 0x43fcca);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x1d) = 0;\n        fcn.00409744();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x43fd0e;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 853
    },
    "0043fe9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043fe9c(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint var_3dh;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x4670a4 != 0) {\n        var_1h._0_1_ = *(*0x4670a4 + 0x88);\n    }\n    uStack420 = 0x43ffe1;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x4670a4 != 0) {\n        fcn.004422b0();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.USER32.DLL_SystemParametersInfoA(0x1f, 0x3c, &var_3dh, 0);\n    if (iVar2 == 0) {\n        sub.GDI32.DLL_GetStockObject(0xd);\n        fcn.0043034c();\n    }\n    else {\n        sub.GDI32.DLL_CreateFontIndirectA(&var_3dh);\n        fcn.0043034c();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.USER32.DLL_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.00430430();\n        puStack464 = 0xd;\n        sub.GDI32.DLL_GetStockObject();\n        fcn.0043034c();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.GDI32.DLL_CreateFontIndirectA();\n        fcn.0043034c();\n        sub.GDI32.DLL_CreateFontIndirectA(&var_f1h);\n        fcn.0043034c();\n    }\n    fcn.00430190();\n    fcn.00430190();\n    *in_FS_OFFSET = puStack464;\n    if (*0x4670a4 != 0) {\n        fcn.004422b0(0x43ffe8);\n    }\n    return;\n}\n",
        "token_count": 601
    },
    "0043fff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043fff8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.00440018();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00440080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00440080(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x22b) == '\\x02')) {\n        var_8h = in_EAX[0x10];\n        var_ch = in_EAX[0x11];\n        iVar3 = (***0x466430)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x84))(var_10h, iVar3);\n    if (*(in_EAX + 0x22b) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x4401bc\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 988
    },
    "00440230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00440230(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x22b) != '\\x01')))) {\n        fcn.0040732c();\n    }\n    iVar2 = fcn.0043f988();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043f974();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x22b) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00407488();\n                    cVar1 = fcn.00440020();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00407504();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00407488();\n            fcn.00440080(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "0044037c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044037c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043f988();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0043f974();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x22b) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 201
    },
    "0044045c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044045c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x44048a;\n    var_4h = in_EAX;\n    fcn.0043fff0();\n    uStack36 = 0x4404d5;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.USER32.DLL_SystemParametersInfoA(0x30, 0, &fcn.0044045c::var_14h, 0);\n    fcn.004403d4();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.0043fff8(0x4404dc);\n    return;\n}\n",
        "token_count": 314
    },
    "004404f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004404f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.004227b0();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 107
    },
    "00440528": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00440528(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x99) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00440548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00440548(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x4670a4 != 0) {\n        uStack24 = 0x440579;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.004428c0();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0044059c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044059c(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x4670b4 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    while( true ) {\n        iVar1 = sub.KERNEL32.DLL_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x4670a4 != 0) {\n            if (*(*0x4670a4 + 0x60) != 0) {\n                sub.USER32.DLL_GetCursorPos();\n                iVar1 = fcn.00447458();\n                if (iVar1 == 0) {\n                    fcn.0044293c();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "004405f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004405f8(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.USER32.DLL_CallNextHookEx(*0x4670bc, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x4670a4 != 0)) {\n        fcn.00441a0c();\n    }\n    return uVar1;\n}\n",
        "token_count": 114
    },
    "0044063c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044063c(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x4670a4 + 0xa5) == '\\0') {\n        if (*0x4670bc == 0) {\n            uStack8 = 0x440659;\n            uStack8 = sub.KERNEL32.DLL_GetCurrentThreadId();\n            uStack12 = 0;\n            pcStack16 = fcn.004405f8;\n            uStack20 = 3;\n            *0x4670bc = sub.USER32.DLL_SetWindowsHookExA();\n        }\n        if (*0x4670b8 == 0) {\n            *0x4670b8 = sub.KERNEL32.DLL_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x4670c0 == 0) {\n            *0x4670c0 = sub.KERNEL32.DLL_CreateThread(0, 1000, fcn.0044059c, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "004406b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.004406b0(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4670bc != 0) {\n        sub.USER32.DLL_UnhookWindowsHookEx(*0x4670bc);\n    }\n    *0x4670bc = 0;\n    if (*0x4670c0 != 0) {\n        sub.KERNEL32.DLL_SetEvent(*0x4670b8);\n        iVar1 = sub.KERNEL32.DLL_GetCurrentThreadId();\n        if (iVar1 != *0x4670b4) {\n            sub.KERNEL32.DLL_WaitForSingleObject(*0x4670c0, 0xffffffff);\n        }\n        sub.KERNEL32.DLL_CloseHandle(*0x4670c0);\n        *0x4670c0 = 0;\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0044070c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t fcn.0044070c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.USER32.DLL_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 136
    },
    "0044073c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044073c(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.USER32.DLL_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 82
    },
    "004407a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.004407a4(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    uint var_101h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0040f138();\n    ppcVar1 = *0x4663c0;\n    if (*(*0x4663c0 + 2) == 0) {\n        (*0x4663c0)[1] = in_EAX;\n        *ppcVar1 = fcn.00441dd8;\n    }\n    ppcVar1 = *0x4663c4;\n    if (*(*0x4663c4 + 2) == 0) {\n        (*0x4663c4)[1] = in_EAX;\n        *ppcVar1 = fcn.00441fd0;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00421bf8();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00421bf8();\n    *(in_EAX + 0xa8) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0x80000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0x9d] = 0x1;\n    in_EAX[0xb4] = 0x1;\n    uVar2 = fcn.00434f74();\n    *(in_EAX + 0x98) = uVar2;\n    sub.USER32.DLL_LoadIconA(**0x466390, 0x440984);\n    fcn.00435344();\n    iVar3 = *(in_EAX + 0x98);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x442540;\n    sub.KERNEL32.DLL_GetModuleFileNameA(**0x466390, &var_101h, 0x100);\n    sub.USER32.DLL_OemToCharA(&var_101h, &var_101h);\n    iVar3 = fcn.004155b8();\n    if (iVar3 != 0) {\n        fcn.00412c78();\n    }\n    puVar4 = fcn.004155e0();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    sub.USER32.DLL_CharLowerA();\n    fcn.004229c4();\n    if (**0x466398 == '\\0') {\n        fcn.00440aac();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0x9e] = 0x1;\n    *(in_EAX + 0xa0) = 0;\n    fcn.0044271c();\n    fcn.004430cc();\n    if (var_1h != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = &var_101h + 1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 941
    },
    "00440aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00440aac(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x440c43;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xa4) == '\\0') && (**0x4663a4 == '\\0')) {\n        uVar2 = fcn.004101bc(fcn.00440fc8, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        iVar3 = sub.USER32.DLL_GetClassInfoA(*0x46652c, *0x462018, &fcn.00440aac::var_28h);\n        if (iVar3 == 0) {\n            *0x462004 = *0x46652c;\n            iVar1 = sub.USER32.DLL_RegisterClassA(0x461ff4);\n            if (iVar1 == 0) {\n                fcn.00424964();\n                fcn.00414b70();\n                fcn.004223bc();\n            }\n        }\n        uVar4 = (***0x466430)(0);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x466430)(1, iVar3);\n        uVar2 = *0x46652c;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.00422c0c();\n        uVar2 = fcn.004027b0(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030);\n        *(in_EAX + 0x30) = uVar2;\n        fcn.0042275c();\n        *(in_EAX + 0xa4) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.USER32.DLL_SetWindowLongA();\n        if (**0x4663d8 != '\\0') {\n            fcn.004416a0();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x440bdc;\n            sub.USER32.DLL_SendMessageA();\n            uStack12 = 0x440be3;\n            uStack12 = fcn.004416a0();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x440bef;\n            sub.USER32.DLL_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x440bfa;\n        uVar2 = sub.USER32.DLL_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        var_28h = 0x440c09;\n        uStack40 = uVar2;\n        sub.USER32.DLL_DeleteMenu();\n        var_28h = 0;\n        puStack56 = 0x440c16;\n        uStack64 = uVar2;\n        sub.USER32.DLL_DeleteMenu();\n        if (**0x4663d8 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.USER32.DLL_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x440c4a;\n    uStack60 = 0x440c42;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 1003
    },
    "00440cb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00440cb0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    iVar1 = sub.USER32.DLL_GetWindow(arg_8h, 4);\n    if (iVar1 == *(*0x4670a4 + 0x30)) {\n        uVar2 = sub.USER32.DLL_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x4670a4 + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.0044f188(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.0040732c();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 239
    },
    "00440d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440d20(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uStack16;\n    uchar uStack12;\n    \n    if (*(*0x4670a4 + 0x30) != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            uStack16 = *(in_EAX + 0x30);\n            pcVar4 = fcn.00440cb0;\n            uStack12 = param_2;\n            sub.USER32.DLL_EnumWindows(fcn.00440cb0, &uStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = sub.USER32.DLL_GetWindow(pcVar4, 3);\n                uVar2 = sub.USER32.DLL_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00407488(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.USER32.DLL_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00440de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00440de0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(*0x4670a4 + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00407488(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.USER32.DLL_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00440e4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00440e4c(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00440e64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00440e64(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00440e7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00440e7c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x4670b0) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.KERNEL32.DLL_SetThreadLocale(0x400);\n            fcn.00415880();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.0043fe9c();\n        }\n        if (*param_2 == *0x4670b0) {\n            fcn.004404e4();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "00440ed4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ed4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x440f31;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x122) != 0) {\n        fcn.0042294c();\n        (**(in_EAX + 0x120))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x440f38;\n    uStack24 = 0x440f30;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 210
    },
    "00440fc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440fc8(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x441658;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    param_2[3] = 0;\n    iVar8 = *(*(in_EAX + 0xa8) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar8 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00407488();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = uStack36;\n                return;\n            }\n            iVar8 = iVar8 + -1;\n            puVar1 = puStack28;\n        } while (iVar8 != 0);\n    }\n    fcn.00440e7c();\n    iVar8 = *param_2;\n    if (0x53 < iVar8) {\n        if (iVar8 < 0xb018) {\n            if (iVar8 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar8 = fcn.0044f188(),  iVar8 != 0)) {\n                    uVar6 = fcn.0044f188();\n                    iVar8 = sub.USER32.DLL_IsWindowEnabled(uVar6);\n                    if (iVar8 != 0) {\n                        uVar6 = fcn.0044f188();\n                        iVar8 = sub.USER32.DLL_IsWindowVisible(uVar6);\n                        if (iVar8 != 0) {\n                            *0x461f08 = 0;\n                            uVar6 = sub.USER32.DLL_GetFocus();\n                            uVar7 = fcn.0044f188();\n                            sub.USER32.DLL_SetFocus(uVar7);\n                            fcn.00449d78(param_2[2]);\n                            sub.USER32.DLL_SetFocus(uVar6);\n                            *0x461f08 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x0044164e;\n            }\n            if (iVar8 < 0xb001) {\n                if (iVar8 == 0xb000) {\n                    if (*(in_EAX + 0xfa) != 0) {\n                        (**(in_EAX + 0xf8))();\n                    }\n                    goto code_r0x0044164e;\n                }\n                if (iVar8 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.004416bc();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.0044176c();\n                    }\n                    else {\n                        fcn.00440f40(&stack0xfffffffc);\n                    }\n                    goto code_r0x0044164e;\n                }\n                if (iVar8 - 0x132U < 7) {\n                    iVar8 = sub.USER32.DLL_SendMessageA(param_2[2], iVar8 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar8;\n                    goto code_r0x0044164e;\n                }\n            }\n            else {\n                if (iVar8 == 0xb001) {\n                    if (*(in_EAX + 0xf2) != 0) {\n                        (**(in_EAX + 0xf0))();\n                    }\n                    goto code_r0x0044164e;\n                }\n                if (iVar8 == 0xb016) {\n                    cVar2 = fcn.00441a40();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x0044164e;\n                }\n            }\n        }\n        else if (iVar8 < 0xb021) {\n            if (iVar8 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.00441b68(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00441bc4(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x0044164e;\n            }\n            if (iVar8 == 0xb01a) {\n                iVar8 = sub.USER32.DLL_IsIconic(*(in_EAX + 0x30));\n                if (((iVar8 == 0) && (iVar8 = sub.USER32.DLL_GetFocus(),  iVar8 == *(in_EAX + 0x30))) &&\n                   (iVar8 = fcn.00438bd0(),  iVar8 != 0)) {\n                    sub.USER32.DLL_SetFocus(iVar8);\n                }\n                goto code_r0x0044164e;\n            }\n            if (iVar8 == 0xb01f) goto code_r0x0044158c;\n        }\n        else {\n            if (iVar8 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb0);\n                }\n                else {\n                    *(in_EAX + 0xb0) = param_2[2];\n                }\n                goto code_r0x0044164e;\n            }\n            if (iVar8 - 0xb03fU < 2) {\n                uVar5 = fcn.00442f90();\n                param_2[3] = uVar5 & 0x7f;\n                goto code_r0x0044164e;\n            }\n        }\n        goto code_r0x00441647;\n    }\n    if (iVar8 == 0x53) {\ncode_r0x0044158c:\n        fcn.004420a8();\n        goto code_r0x0044164e;\n    }\n    if (iVar8 < 0x17) {\n    // switch table (21 cases) at 0x44106c\n        switch(iVar8) {\n        case 0:\n            fcn.0040f00c();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n            goto code_r0x00441647;\n        case 7:\n            sub.USER32.DLL_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.00440f40(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.00440f40(&stack0xfffffffc);\n                if (*(in_EAX + 0xac) == 0) {\n                    uVar6 = fcn.00438a80();\n                    *(in_EAX + 0xac) = uVar6;\n                }\n                fcn.00440dd8();\n            }\n            else {\n                fcn.00440de0();\n                if (*(in_EAX + 0xac) != 0) {\n                    fcn.00438b34();\n                    *(in_EAX + 0xac) = 0;\n                }\n                fcn.00440f40(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar8 = sub.USER32.DLL_IsIconic(*(in_EAX + 0x30));\n            if (iVar8 == 0) {\n                fcn.00440f40(&stack0xfffffffc);\n            }\n            else {\n                fcn.00440f7c(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0043e74c();\n            }\n            break;\n        case 0x14:\n            *param_2 = 0x27;\n            fcn.00440f40(&stack0xfffffffc);\n            break;\n        default:\n            if (param_2[1] != 0) {\n                *(in_EAX + 0x9c) = 1;\n            }\n        }\n    }\n    else {\n        if (iVar8 < 0x1e) {\n            if (iVar8 == 0x1d) {\n                fcn.004404e4();\n                fcn.00440f40(&stack0xfffffffc);\n                goto code_r0x0044164e;\n            }\n            if (iVar8 == 0x1a) {\n                fcn.00453800();\n                fcn.00440ed4();\n                fcn.00440f40(&stack0xfffffffc);\n                goto code_r0x0044164e;\n            }\n            if (iVar8 == 0x1c) {\n                fcn.00440f40(&stack0xfffffffc);\n                *(in_EAX + 0x9d) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.00440dd0();\n                    sub.USER32.DLL_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00440de0();\n                    sub.USER32.DLL_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x0044164e;\n            }\n        }\n        else {\n            if (iVar8 == 0x37) {\n                iVar8 = fcn.004416a0();\n                param_2[3] = iVar8;\n                goto code_r0x0044164e;\n            }\n            if (iVar8 == 0x4a) {\n                if ((*param_2[2] == -0x21acbbac) && (*(in_EAX + 0x9e) != '\\0')) {\n                    if (*(in_EAX + 0xa0) == 0) {\n                        iVar8 = fcn.0041640c();\n                        *(in_EAX + 0xa0) = iVar8;\n                        if (iVar8 == 0) {\n                            iVar8 = sub.KERNEL32.DLL_GetLastError();\n                            param_2[3] = iVar8;\n                            *(in_EAX + 0xa0) = 0;\n                        }\n                        else {\n                            param_2[3] = 0;\n                            pcVar4 = sub.KERNEL32.DLL_GetProcAddress(*(in_EAX + 0xa0), 0x44168c);\n                            if (pcVar4 != NULL) {\n                                (*pcVar4)(*(param_2[2] + 4), *(param_2[2] + 8));\n                            }\n                        }\n                    }\n                    else {\n                        param_2[3] = 0;\n                    }\n                }\n                goto code_r0x0044164e;\n            }\n        }\ncode_r0x00441647:\n        fcn.00440f40(&stack0xfffffffc);\n    }\ncode_r0x0044164e:\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 2649
    },
    "004416bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004416bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = sub.USER32.DLL_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00440dd0();\n    sub.USER32.DLL_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044f188();\n        iVar1 = sub.USER32.DLL_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            iVar1 = *(in_EAX + 0x44);\n            uVar2 = fcn.0044f188(*(iVar1 + 0x40), *(iVar1 + 0x44), *(iVar1 + 0x48), 0, 0x40);\n            sub.USER32.DLL_SetWindowPos(*(in_EAX + 0x30), uVar2);\n            sub.USER32.DLL_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            goto code_r0x00441751;\n        }\n    }\n    fcn.00440764();\ncode_r0x00441751:\n    if (*(in_EAX + 0x102) != 0) {\n        (**(in_EAX + 0x100))();\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0044176c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044176c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    iVar1 = sub.USER32.DLL_IsIconic(*(in_EAX + 0x30));\n    if (iVar1 == 0) {\n        return;\n    }\n    sub.USER32.DLL_SetActiveWindow(*(in_EAX + 0x30));\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar2 = fcn.0044f188();\n        iVar1 = sub.USER32.DLL_IsWindowEnabled(uVar2);\n        if (iVar1 != 0) {\n            sub.USER32.DLL_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n            goto code_r0x004417d5;\n        }\n    }\n    fcn.00440764();\ncode_r0x004417d5:\n    uVar3 = (***0x466430)(1, 0, 0, 0x40);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    uVar3 = (***0x466430)(0, iVar1);\n    iVar1 = uVar3 >> 1;\n    if (iVar1 < 0) {\n        iVar1 = iVar1 + ((uVar3 & 1) != 0);\n    }\n    sub.USER32.DLL_SetWindowPos(*(in_EAX + 0x30), 0, iVar1);\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22b) == '\\x01')) && (*(iVar1 + 0x57) == '\\0')) {\n        fcn.0043c51c();\n        fcn.0043e8f4();\n    }\n    fcn.00440de0();\n    if (*(*0x4670a8 + 100) != 0) {\n        uVar2 = fcn.0044f188();\n        sub.USER32.DLL_SetFocus(uVar2);\n    }\n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004418a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004418a8(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack264 [256];\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        fcn.004227b0();\n    }\n    else {\n        sub.USER32.DLL_GetWindowTextA(*(in_EAX + 0x30), auStack264, 0x100);\n        fcn.0042284c();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004418f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004418f4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb0) != 0) {\n        iVar1 = sub.USER32.DLL_IsDialogMessageA(*(in_EAX + 0xb0), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 115
    },
    "00441918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00441918(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if (((iVar1 != 0) && (*(iVar1 + 0x22f) == '\\x02')) && (*(*0x4670a8 + 0x6c) != 0)) {\n        iVar1 = sub.USER32.DLL_TranslateMDISysAccel(*(iVar1 + 0x254), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 159
    },
    "00441a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t fcn.00441a40(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    unkbyte3 Var4;\n    \n    if (*(in_EAX + 0x112) != 0) {\n        (**(in_EAX + 0x110))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar2 = fcn.0044f188();\n        iVar3 = sub.USER32.DLL_IsWindowEnabled(uVar2);\n        if ((iVar3 != 0) && (uVar2 = fcn.00421e24(),  uVar2 != '\\0')) {\n            Var4 = uVar2 >> 8;\n            uVar1 = 1;\n            goto code_r0x00441a9d;\n        }\n    }\n    uVar1 = 0;\n    Var4 = 0;\ncode_r0x00441a9d:\n    return CONCAT14(uVar1, CONCAT31(Var4, uVar1));\n}\n",
        "token_count": 238
    },
    "00441aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00441aac(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = 0;\n    uVar4 = param_2;\n    iVar2 = sub.USER32.DLL_PeekMessageA(param_2, 0, 0, 0, 1, param_1);\n    if (iVar2 != 0) {\n        uVar3 = 1;\n        if (*(param_2 + 4) == 0x12) {\n            *(in_EAX + 0x9c) = 1;\n        }\n        else {\n            uVar4 = uVar4 & 0xffffff00;\n            if (*(in_EAX + 0xd2) != 0) {\n                (**(in_EAX + 0xd0))();\n            }\n            cVar1 = fcn.00441a0c();\n            if ((cVar1 == '\\0') && (uVar4 == '\\0')) {\n                cVar1 = fcn.00441918();\n                if (cVar1 == '\\0') {\n                    cVar1 = fcn.00441954();\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.004418f4();\n                        if (cVar1 == '\\0') {\n                            sub.USER32.DLL_TranslateMessage(param_2);\n                            sub.USER32.DLL_DispatchMessageA();\n                            uVar4 = param_2;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 374
    },
    "00441b68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441b68(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.USER32.DLL_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00407468();\n        puVar1 = fcn.00420dc0();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.0040732c();\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00441bc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441bc4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xa4) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.USER32.DLL_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &arg_8h);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xa8) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00407488();\n                if ((*piVar1 == arg_8h) && (arg_ch == piVar1[1])) {\n                    fcn.00420de0();\n                    fcn.00407378();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00441c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00441c40(void)\n\n{\n    if (**0x4663c8 != NULL) {\n        (***0x4663c8)();\n    }\n    return;\n}\n",
        "token_count": 41
    },
    "00441c58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441c58(int32_t **param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x441c6b;\n    piVar2 = (**(param_2 + -0xc))();\n    *param_1 = piVar2;\n    uStack28 = 0x441c96;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    (**(*piVar2 + 0x2c))();\n    *in_FS_OFFSET = uStack32;\n    if (*(in_EAX + 0x44) == 0) {\n        puStack24 = 0x441cbf;\n        cVar1 = fcn.00421db4();\n        if (cVar1 != '\\0') {\n            puStack24 = 0x441ccc;\n            fcn.0044f164();\n            *(in_EAX + 0x44) = piVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "00441cd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00441cd8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    *(in_EAX + 0xa5) = 1;\n    uStack28 = 0x441db6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x441d04;\n    fcn.004125ac();\n    if (*(in_EAX + 0x44) != 0) {\n        if (**0x4663cc == 3) {\n            puStack36 = 0x441d34;\n            fcn.0043c51c();\n        }\n        else if (**0x4663cc == 7) {\n            *(*(in_EAX + 0x44) + 0x22b) = 1;\n        }\n        if (*(in_EAX + 0x5b) != '\\0') {\n            if (*(*(in_EAX + 0x44) + 0x22b) == '\\x01') {\n                puStack36 = 0x441d54;\n                fcn.004416bc();\n            }\n            else {\n                puStack36 = 0x441d5d;\n                fcn.0043b4ec();\n            }\n        }\n        do {\n            uStack40 = 0x441d7d;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            puStack36 = &stack0xfffffffc;\n            fcn.00441b44();\n            *in_FS_OFFSET = uStack44;\n        } while (*(in_EAX + 0x9c) == '\\0');\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0xa5) = 0;\n    return;\n}\n",
        "token_count": 461
    },
    "00441dd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00441dd8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.USER32.DLL_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.USER32.DLL_GetCapture(0x1f, 0, 0);\n        sub.USER32.DLL_SendMessageA(uVar3);\n    }\n    fcn.00420eb8();\n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00420ed8();\n        fcn.00420eb8(uVar3);\n        fcn.00414ab8();\n    }\n    else {\n        fcn.00420eb8();\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xca) == 0) {\n                fcn.00420eb8();\n                fcn.00441fd0();\n                return;\n            }\n            fcn.00420eb8();\n            (**(in_EAX + 200))();\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00441fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00442009)\n// WARNING: Removing unreachable block (ram,0x00442030)\n\nvoid fcn.00441fd0(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x44208b;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004227f4();\n    arg_8h = 0x10;\n    fcn.004418a8();\n    uVar1 = fcn.00422c0c();\n    fcn.00422c0c(uVar1);\n    fcn.00441e68(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x442092;\n    uStack288 = 0x442082;\n    fcn.0042275c();\n    uStack288 = 0x44208a;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 285
    },
    "004420a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004420a8(uint param_1, uint16_t param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    char acStack20 [4];\n    \n    uVar4 = 0;\n    acStack20[0] = '\\x01';\n    iVar1 = *(*0x4670a8 + 0x68);\n    if ((iVar1 == 0) || (*(iVar1 + 0x2aa) == 0)) {\n        if (*(in_EAX + 0xda) != 0) {\n            uVar4 = (**(in_EAX + 0xd8))(acStack20);\n        }\n    }\n    else {\n        uVar4 = (**(iVar1 + 0x2a8))(acStack20);\n    }\n    if (acStack20[0] != '\\0') {\n        if (((iVar1 != 0) && (cVar2 = fcn.0044f48c(),  cVar2 != '\\0')) && (*(iVar1 + 0x23c) != 0)) {\n            fcn.0044f188();\n            uVar3 = fcn.0044271c();\n            if (uVar3 == '\\0') {\n                return uVar4;\n            }\n            uVar4 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar3 & 0xffff0000 | param_2);\n            return uVar4;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xa4) == '\\0') {\n                sub.USER32.DLL_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2, param_1);\n            }\n        }\n        else {\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.0044f188();\n            }\n            uVar3 = fcn.0044271c();\n            if (uVar3 != '\\0') {\n                uVar4 = (**(**(in_EAX + 0x4c) + 0x20))(param_1, uVar3 & 0xffff0000 | param_2);\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 530
    },
    "00442364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00442364(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    \n    sub.USER32.DLL_GetCursorPos();\n    iVar1 = fcn.0044748c();\n    if ((iVar1 != 0) && ((*(iVar1 + 0x1c) & 0x10) != 0)) {\n        iVar1 = 0;\n    }\n    iVar2 = fcn.00445d9c();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00449d78(0);\n        }\n        *(in_EAX + 0x48) = iVar1;\n        if (((*(in_EAX + 0x48) != 0) && (iVar2 == 0)) || ((iVar2 != 0 && (iVar2 == *(in_EAX + 0x48))))) {\n            fcn.00449d78(0);\n        }\n    }\n    return CONCAT44(auStack20, iVar1);\n}\n",
        "token_count": 289
    },
    "004423e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004423e8(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4424f6;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x442412;\n    fcn.00442364();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x442431;\n        fcn.0044293c();\n    }\n    puStack48 = 0x44243b;\n    fcn.004404f0();\n    puStack48 = 0x442446;\n    fcn.00445d58();\n    puStack48 = 0x442453;\n    fcn.004425a4();\n    bVar1 = true;\n    uStack52 = 0x44249f;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0xea) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0xe8))();\n    }\n    fcn.00442300();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x4424b9;\n    iVar3 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    if (iVar3 == **0x466394) {\n        puStack48 = 0x4424c8;\n        cVar2 = fcn.0040f00c();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x4424db;\n        sub.USER32.DLL_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4424fd;\n    uStack40 = 0x4424f5;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 567
    },
    "004425a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004425a4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4425b8;\n    fcn.00422b58();\n    if (!in_ZF) {\n        puStack20 = 0x4425c4;\n        fcn.004227b0();\n        if (*(in_EAX + 0xe2) == 0) {\n            puStack20 = 0x4425ec;\n            fcn.00425850();\n            puStack20 = 0x4425f9;\n            fcn.00427e34();\n            uStack24 = 0x442629;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.00421e24();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x442630;\n            uStack24 = 0x442628;\n            fcn.00421c28();\n            return;\n        }\n        puStack20 = 0x4425dc;\n        (**(in_EAX + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00442638": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442638(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.USER32.DLL_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x46201c) && (in_AL != *0x46201c)) {\n        sub.USER32.DLL_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x462020));\n        *0x46201c = in_AL;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00442694": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00442694(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.0043f96c();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.0043f958();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 400) == 0) || (cVar1 = fcn.0044f48c(),  cVar1 != '\\0')) {\ncode_r0x004426fb:\n                        fcn.00442638(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.0044f188(*(iVar3 + 400));\n                    iVar3 = sub.USER32.DLL_IsChild();\n                    if (iVar3 == 0) goto code_r0x004426fb;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00442638(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "0044271c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0044271c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.00424448();\n        fcn.00403a54();\n    }\n    return *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 76
    },
    "00442744": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442744(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00442788();\n    uVar1 = sub.USER32.DLL_SetTimer(0, 0, param_2, fcn.00440548);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.0044293c();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004427b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004427b0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint32_t uStack32;\n    uint uStack28;\n    \n    uStack52 = 0x4427c9;\n    fcn.00402784();\n    uStack52 = 0x4427d8;\n    fcn.004486f8();\n    uStack52 = 0x4427e3;\n    fcn.0044748c();\n    uStack52 = 0x4427e8;\n    iVar1 = fcn.00440528();\n    if ((iVar1 == 0) || (*(iVar1 + 0x99) == '\\0')) {\n        uStack52 = 0x4427fe;\n        fcn.0044293c();\n    }\n    else {\n        if (iVar1 == *(in_EAX + 0x60)) {\n            uStack52 = 0x442814;\n            fcn.00402784();\n            uStack52 = 0x442823;\n            fcn.004486f8();\n            uStack52 = uStack28;\n            uStack56 = uStack32;\n            uStack60 = in_EAX + 100;\n            iVar2 = sub.USER32.DLL_PtInRect();\n            if (iVar2 != 0) {\n                return;\n            }\n        }\n        puVar3 = &stack0xffffffc4;\n        uStack56 = uStack56 & 0xffffff00 | *(in_EAX + 0x58);\n        if (*(in_EAX + 0x58) == 0) {\n            uStack60 = *(in_EAX + 0x78);\n        }\n        else {\n            uStack60 = *(in_EAX + 0x80);\n        }\n        fcn.00449d78(&stack0xffffffc4);\n        if ((uStack60 == '\\0') || (puVar3 != NULL)) {\n            fcn.0044293c();\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            fcn.00442744();\n        }\n        else {\n            *(in_EAX + 0x58) = uStack60;\n            *(in_EAX + 0x60) = iVar1;\n            sub.USER32.DLL_GetCursorPos(&stack0xffffffc5);\n            fcn.00442bc0();\n        }\n    }\n    return;\n}\n",
        "token_count": 573
    },
    "0044293c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044293c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.004428f8();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.004406b0();\n        fcn.00442788();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00442974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00442974(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x442988;\n    var_4h = (***0x466430)();\n    puStack64 = &fcn.00442974::var_28h;\n    uStack68 = 0x442994;\n    uStack68 = sub.USER32.DLL_GetCursor();\n    puStack72 = 0x44299a;\n    iVar2 = sub.USER32.DLL_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x442ab6;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x4429be;\n        puStack72 = &stack0xfffffffc;\n        fcn.00432264();\n        puStack84 = 0x4429c9;\n        iVar2 = fcn.00412560();\n        uStack88 = 0x442a87;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.0043231c(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.00442964();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.00442964();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x442a8e;\n        iStack92 = 0x442a86;\n        iVar2 = fcn.00420de0();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 725
    },
    "00442b28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442b28(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x442bb0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar3 = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            for (; ((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); in_EAX = in_EAX + 1) {\n            }\n            fcn.0042284c();\n            iVar2 = fcn.00430e48();\n            if (iVar3 < iVar2) {\n                iVar3 = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x442bb7;\n    uStack24 = 0x442baf;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 347
    },
    "00442bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442bc0(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    char var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = *param_2;\n    var_8h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00423138();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        cVar2 = fcn.00438c4c();\n        if (cVar2 != '\\0') {\n            fcn.0044748c();\n            iVar4 = fcn.00440528();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_60h = *(var_4h + 0x60);\n                var_58h = var_ch;\n                var_54h = var_8h;\n                iVar4 = fcn.00442974();\n                var_54h = var_54h + iVar4;\n                var_50h = fcn.0043f8ec();\n                var_4ch = *(var_4h + 0x5c);\n                fcn.00448580();\n                (**(**(var_4h + 0x60) + 0x40))();\n                var_1ch = 0;\n                var_18h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.00421db4();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 400) != 0)) {\n                        sub.USER32.DLL_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.USER32.DLL_OffsetRect();\n                fcn.00448724();\n                fcn.004404f0();\n                fcn.00445d14();\n                fcn.004227f4();\n                var_30h = 0;\n                var_2ch = *(var_4h + 0x74);\n                var_5ch = *0x461f04;\n                var_24h = 0;\n                arg_8h = &var_60h;\n                iVar4 = fcn.00449d78(arg_8h);\n                var_1dh = iVar4 == 0;\n                if ((var_1dh) && (*(var_4h + 0x11a) != 0)) {\n                    (**(var_4h + 0x118))(&var_60h);\n                }\n                if ((var_1dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_28h != 0)) {\n                    fcn.00442ac8(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x70))();\n                    (**(**(var_4h + 0x84) + 0xd4))(&var_70h, var_24h);\n                    sub.USER32.DLL_OffsetRect(&var_70h, var_58h, var_54h);\n                    cVar2 = fcn.00421e24();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00442b28(&stack0xfffffffc);\n                        var_70h = var_70h - (iVar4 + 5);\n                        var_68h = var_68h - (iVar4 + 5);\n                    }\n                    fcn.004486f8();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.004486f8();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.00448d70();\n                    (**(**(var_4h + 0x84) + 0xd0))(var_24h);\n                    fcn.0044063c();\n                    if (var_30h < 1) {\n                        fcn.00442744();\n                    }\n                    else {\n                        fcn.00442744();\n                    }\n                    goto code_r0x00442f1a;\n                }\n            }\n        }\n    }\n    if (var_30h < 1) {\n        fcn.0044293c();\n    }\n    else {\n        fcn.00442744();\n    }\ncode_r0x00442f1a:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00422780();\n    fcn.004231fc();\n    return;\n}\n",
        "token_count": 1435
    },
    "00442f54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00442f54(void)\n\n{\n    if ((*(*0x4670a8 + 0x68) == 0) || (*(*(*0x4670a8 + 0x68) + 0x23c) == 0)) {\n        fcn.004227b0();\n    }\n    else {\n        fcn.004227b0();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00442f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00442f90(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uStack24;\n    \n    iVar1 = *(*0x4670a8 + 0x6c);\n    if (iVar1 == 0) {\ncode_r0x00442fbb:\n        if ((iVar1 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar3 = fcn.00449d78(param_1);\n            iVar3 = iVar3 + -1;\n            if (iVar3 == 0) goto code_r0x00442fdb;\n        }\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = fcn.00449d78(param_1);\n        iVar3 = iVar3 + -1;\n        if (iVar3 != 0) goto code_r0x00442fbb;\ncode_r0x00442fdb:\n        uVar4 = CONCAT31(iVar3 >> 8, 1);\n    }\n    uVar2 = uVar4 & 0xff;\n    uStack24 = param_2 & 0xffffff00 | uVar2;\n    uStack24._0_1_ = uVar2;\n    if (uStack24 == '\\0') {\n        uVar4 = fcn.00421db4();\n        if (((uVar4 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) {\n            uVar4 = fcn.00427cfc();\n        }\n    }\n    return CONCAT44(uStack24, uVar4 & 0xffffff00 | uVar2);\n}\n",
        "token_count": 431
    },
    "00443020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00443020(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        in_EAX = (**(in_EAX + 0xb8))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 83
    },
    "00443048": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00443048(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))();\n    }\n    return CONCAT44(param_1, in_EAX) & 0xffffff00ffffff00;\n}\n",
        "token_count": 84
    },
    "004430fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004430fc(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x44314f;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x4670ac = *0x4670ac + 1;\n    if (*0x4670ac == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4670a4 != 0) {\n            iStack20 = 0x443123;\n            fcn.004389f8();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4670b8 != 0) {\n            iStack20 = *0x4670b8;\n            sub.KERNEL32.DLL_CloseHandle();\n        }\n        fcn.00406e2c();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 264
    },
    "004433ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004433ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44342b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.USER32.DLL_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.USER32.DLL_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00424964();\n            fcn.00414b70();\n            fcn.004223bc();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.0042275c(0x443432);\n    return;\n}\n",
        "token_count": 302
    },
    "00443aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00443aac(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x443afe;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4670c8 = *0x4670c8 + 1;\n    if (*0x4670c8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x462028 != 0) {\n            uStack20 = *0x462028;\n            sub.KERNEL32.DLL_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00423230();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 223
    },
    "004514d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004514d4(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.00452d54();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00445d9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00445d9c(void)\n\n{\n    int32_t iVar1;\n    \n    sub.USER32.DLL_GetCapture();\n    iVar1 = fcn.00445af4();\n    if (((iVar1 != 0) && (*0x46215c != 0)) && (iVar1 == *(*0x46215c + 0x30))) {\n        iVar1 = *0x46215c;\n    }\n    return iVar1;\n}\n",
        "token_count": 101
    },
    "00445dc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00445dc4(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.USER32.DLL_ReleaseCapture();\n    *0x46215c = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.00421db4(),  iVar1 = *0x46215c,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x46215c = iVar1;\n        uVar3 = fcn.0044f188();\n        sub.USER32.DLL_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00446270": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446270(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.00421e24();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 73
    },
    "0044630c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044630c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.004461f4();\n    uVar1 = fcn.004307b4();\n    *(in_EAX + 0x40) = uVar1;\n    fcn.004357d4();\n    fcn.00430930();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 209
    },
    "00446500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446500(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.USER32.DLL_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.USER32.DLL_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 256
    },
    "0044656c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0044656c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    var_14h = fcn.004469a4();\n    uVar2 = sub.USER32.DLL_GetWindow(var_14h, 4);\n    if (uVar2 != *(**0x4663ac + 0x30)) {\n        uVar2 = fcn.00445af4();\n        if (uVar2 == 0) goto code_r0x004466fa;\n        do {\n            uVar2 = *(uVar2 + 0x30);\n        } while (uVar2 != 0);\n        uVar2 = fcn.0044f188();\n        var_14h = uVar2;\n    }\n    if (var_14h != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        uVar2 = fcn.0044f188();\n        if (uVar2 != var_14h) {\n            iVar4 = *(*(arg_8h + -0x10) + 0x30);\n            var_18h = uVar2;\n            if (iVar4 == 0) {\n                cVar1 = fcn.00421db4();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.0044f188();\n                }\n            }\n            else {\n                do {\n                    iVar4 = *(iVar4 + 0x30);\n                } while (iVar4 != 0);\n                var_1ch = fcn.0044f188();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.KERNEL32.DLL_GetCurrentThreadId(fcn.00446500, &var_1ch);\n            uVar2 = sub.USER32.DLL_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.USER32.DLL_GetWindowRect(var_14h, &var_2ch);\n                fcn.00421e24(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.00421db4();\n                if ((((cVar1 == '\\0') || (*(*(*0x467124 + 0x38) + 0xa0) == 0)) ||\n                    (uVar2 = fcn.0044f188(),  uVar2 != var_14h)) &&\n                   (uVar2 = sub.USER32.DLL_IntersectRect(&var_2ch, &var_2ch, &var_3ch),  uVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\ncode_r0x004466fa:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 818
    },
    "00446704": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00446704(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0044f188();\n        uVar2 = fcn.0044f188(uVar2);\n        iVar3 = sub.USER32.DLL_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 120
    },
    "00446748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00446748(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_9h;\n    uint var_5h;\n    uint var_1h;\n    \n    var_9h = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x467148 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.USER32.DLL_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x4663ac + 0xb4)) {\n            (**(**0x46714c + 8))();\n            iVar4 = *(*0x467148 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00407488();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1a6) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.0044f188();\n                        iVar3 = sub.USER32.DLL_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.00446704(&var_1h + 1),  cVar1 == '\\0')) &&\n                           ((var_10h[0x28] != var_14h || (iVar3 = fcn.0044dd1c(),  1 < iVar3)))) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.00421e24();\n                            if (var_1h != '\\0') {\n                                puVar5 = &var_28h;\n                                iVar3 = sub.USER32.DLL_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.00445ecc();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x46714c)[2]) {\n                var_18h = fcn.00445f5c(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0044656c(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 704
    },
    "004468a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004468a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x467148 == 0) {\n            *0x467148 = fcn.00421bf8();\n        }\n        iVar1 = fcn.004074e4();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.00407378();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.0040732c();\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00446904": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446904(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.USER32.DLL_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "00446a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00446a20(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x467124 + 4) != 0) {\n        iVar1 = fcn.00446904(*0x467124 + 0xc, *(*0x467124 + 4));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 99
    },
    "00446a5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00446a5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    iVar1 = *(*0x467124 + 4);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1a7) != '\\0')) && (*(iVar1 + 0x178) != 0)) &&\n       (iVar2 = fcn.0044dc88(),  iVar2 != 0)) {\n        iVar2 = fcn.0044dc88();\n        if ((iVar2 == 1) && (iVar2 = fcn.00407488(),  iVar2 == *(*0x467124 + 0x38))) {\n            return 0;\n        }\n        iVar2 = fcn.0044748c();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.004074e4();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        uVar4 = fcn.0044dc9c();\n    }\n    return uVar4;\n}\n",
        "token_count": 292
    },
    "00446af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00446af0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x467140 == '\\0') &&\n        (uVar9 = *0x467130 - *in_EAX >> 0x1f,  (*0x467130 - *in_EAX ^ uVar9) - uVar9 < *0x46713c)) &&\n       (uVar9 = *0x467134 - in_EAX[1] >> 0x1f,  (*0x467134 - in_EAX[1] ^ uVar9) - uVar9 < *0x46713c)) {\n        return;\n    }\n    iVar10 = 0x446b4a;\n    iVar7 = fcn.004469d0(*0x467120);\n    if ((*0x467140 == '\\0') && (*0x467144 != 0)) {\n        iVar10 = *0x467134;\n        sub.USER32.DLL_GetDesktopWindow();\n        fcn.00450968(iVar10);\n    }\n    if (*(*0x467120 + 0x9b) == '\\0') {\n        *0x467140 = '\\x01';\n    }\n    else {\n        *0x467140 = '\\x02';\n    }\n    if (iVar7 != (*0x467124)[1]) {\n        fcn.00446a20();\n        if (*0x467124 == NULL) {\n            return;\n        }\n        (*0x467124)[1] = iVar7;\n        (*0x467124)[2] = iVar10;\n        piVar1 = *0x467124;\n        (*0x467124)[3] = *in_EAX;\n        piVar1[4] = in_EAX[1];\n        fcn.00446a20();\n        if (*0x467124 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x467124;\n    (*0x467124)[3] = *in_EAX;\n    piVar1[4] = in_EAX[1];\n    if ((*0x467124)[1] != 0) {\n        fcn.00448724();\n        piVar1 = *0x467124;\n        (*0x467124)[5] = iStack28;\n        piVar1[6] = iStack24;\n    }\n    fcn.00446a20(in_EAX[1]);\n    (**(**0x467124 + 4))();\n    if (*0x467144 != 0) {\n        if ((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) {\n            fcn.00450950();\n            if (*(*0x467144 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.USER32.DLL_GetDesktopWindow();\n                fcn.00450968(iVar10);\n            }\n            else {\n                fcn.00450a50();\n            }\n        }\n        else {\n            fcn.00450ac4();\n            uVar8 = fcn.0043fde4();\n            sub.USER32.DLL_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.0043fde4();\n    sub.USER32.DLL_SetCursor();\n    if (*0x467140 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.00421e24(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.00446a5c();\n            (*0x467124)[0x16] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.00421e24();\n                *(*0x467124 + 0x15) = uVar5;\n            }\n            else {\n                fcn.00448724();\n                uVar5 = fcn.00421e24();\n                *(*0x467124 + 0x15) = uVar5;\n            }\n        }\n        if ((*0x467124 != NULL) && (cVar6 = fcn.0041268c(),  cVar6 == '\\0')) {\n            if (cVar4 != '\\0') {\n                (**(**0x467124 + 0x34))();\n            }\n            (**(**0x467124 + 0x30))();\n            piVar3 = *0x467124;\n            piVar2 = *0x467124 + 0x18;\n            piVar1 = *0x467124 + 0x12;\n            (*0x467124)[0x17] = (*0x467124)[0x11];\n            *piVar2 = *piVar1;\n            piVar3[0x19] = piVar3[0x13];\n            piVar3[0x1a] = piVar3[0x14];\n        }\n    }\n    return;\n}\n",
        "token_count": 1168
    },
    "00446dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446dc0(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x467124 = in_EAX;\n    in_EAX[1] = 0;\n    sub.USER32.DLL_GetCursorPos(0x467130);\n    piVar1 = *0x467124;\n    (*0x467124)[3] = *0x467130;\n    piVar1[4] = *0x467134;\n    *0x467138 = sub.USER32.DLL_GetCursor();\n    *0x46712c = fcn.00446000();\n    *0x46713c = param_1;\n    cVar2 = fcn.00421db4();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x467140 = '\\0';\n        }\n        else {\n            *0x467140 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x11];\n        if (in_EAX[0x13] == iVar3 || in_EAX[0x13] - iVar3 < 0) {\n            in_EAX[8] = 0;\n            in_EAX[9] = 0;\n        }\n        else {\n            *(in_EAX + 8) = (in_EAX[3] - iVar3) / (in_EAX[0x13] - in_EAX[0x11]);\n        }\n        iVar3 = in_EAX[0x12];\n        if (in_EAX[0x14] == iVar3 || in_EAX[0x14] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x14] - in_EAX[0x12]);\n        }\n        if (param_2 == '\\0') {\n            *0x467140 = '\\0';\n        }\n        else {\n            *0x467140 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x467144 = (**(**0x467124 + 8))();\n    if (*0x467144 != 0) {\n        iVar3 = *0x467134;\n        sub.USER32.DLL_GetDesktopWindow();\n        fcn.00450968(iVar3);\n    }\n    *0x46714c = fcn.00421bf8();\n    if (*0x467140 != '\\0') {\n        fcn.00446af0();\n    }\n    return;\n}\n",
        "token_count": 627
    },
    "00446f30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00446f30(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x4470d5;\n    iStack60 = *in_FS_OFFSET;\n    *0x467120 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x467128 = 0;\n    if (*(in_EAX + 0x9b) == '\\0') {\n        puStack64 = 0x446f77;\n        puStack52 = &stack0xfffffffc;\n        fcn.00421e24();\n        if (*0x467120 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x446fa5;\n            var_8h = fcn.004461f4();\n            *0x467128 = 1;\n        }\n    }\n    else {\n        fcn.00421e24();\n        if (*0x467120 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0044630c();\n            *0x467128 = 1;\n        }\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x38) + 0x30) == 0) && (cVar1 = fcn.00421db4(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.00446f30::var_10h;\n                sub.USER32.DLL_GetCursorPos();\n                *(var_8h + 0x44) = var_10h;\n                *(var_8h + 0x48) = var_ch;\n            }\n            else {\n                fcn.00405e40();\n                puStack64 = 0x447076;\n                fcn.004486f8();\n                *(var_8h + 0x44) = var_18h;\n                *(var_8h + 0x48) = var_14h;\n            }\n            fcn.00405e40();\n            *(var_8h + 0x4c) = var_18h;\n            *(var_8h + 0x50) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x44;\n            uVar2 = fcn.0044f188();\n            sub.USER32.DLL_GetWindowRect(uVar2);\n        }\n        *(var_8h + 0x5c) = *(var_8h + 0x44);\n        *(var_8h + 0x60) = *(var_8h + 0x48);\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n    }\n    fcn.00446dc0();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 822
    },
    "004470f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004470f4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x467124 + 4) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x467140 == '\\x02')) {\n        cVar1 = (**(**0x467120 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x467120)[0x28] != 0)) {\n            if ((*0x467120)[0x28] != 0) {\n                uVar2 = fcn.00421e24();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "00447168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00447168(void)\n\n{\n    char in_AL;\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ah;\n    uint32_t var_6h;\n    uint var_1h;\n    \n    puStack24 = &fcn.00447168::var_1h + 1;\n    puStack36 = &fcn.00447168::var_1h + 1;\n    piVar4 = NULL;\n    if ((*0x467124 == NULL) || (*(*0x467124 + 0xc) != '\\0')) {\n        return;\n    }\n    uStack28 = 0x447434;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *0x467150 = *0x467124;\n    uStack40 = 0x4473c2;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    *(*0x467124 + 0xc) = 1;\n    *(*0x467124 + 7) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.00446048();\n    if (*0x467140 == '\\x02') {\n        piVar4 = fcn.00421dd8();\n        (**(*piVar4 + 0x34))();\n        *(piVar4 + 0x1b) = piVar4[1] == 0;\n    }\n    if ((*0x467124)[1] == 0) {\ncode_r0x0044723f:\n        var_6h = (*0x467124)[4];\n    }\n    else {\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') goto code_r0x0044723f;\n        var_6h = (*0x467124)[6];\n    }\n    cVar1 = fcn.004470f4(&fcn.00447168::var_1h + 1);\n    if (cVar1 != '\\0') {\n        if ((*0x467140 == '\\x02') && (*(piVar4 + 0x1b) != '\\0')) {\ncode_r0x0044727e:\n            if (var_1h != '\\0') {\n                uVar2 = 1;\n                goto code_r0x0044728a;\n            }\n        }\n        else if (*0x467140 != '\\0') {\n            cVar1 = fcn.00446a20();\n            if (cVar1 != '\\0') goto code_r0x0044727e;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0044728a:\n    if (*0x467140 == '\\x02') {\n        if ((uVar2 != 0) && (*(piVar4 + 0x1b) != '\\0')) {\n            iVar3 = fcn.00438e44();\n            if ((iVar3 != 0) && (*(iVar3 + 0x220) == piVar4[0xe])) {\n                fcn.0043cdec();\n            }\n            fcn.00449d78(*0x467124);\n        }\n    }\n    else if (*0x467144 == 0) {\n        sub.USER32.DLL_SetCursor(*0x467138);\n    }\n    else {\n        fcn.00450ac4();\n    }\n    *0x467120 = 0;\n    *0x467124 = NULL;\n    if ((*0x467150 != NULL) && ((*0x467150)[1] != 0)) {\n        if (uVar2 == 0) {\n            (*0x467150)[3] = 0;\n            (*0x467150)[4] = 0;\n            var_6h = 0;\n        }\n        fcn.00446904(*0x467150 + 3, (*0x467150)[1]);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4473c9;\n    uStack40 = 0x447385;\n    fcn.00421c28();\n    *0x46714c = 0;\n    if (*0x467150 != NULL) {\n        *(*0x467150 + 0xc) = 0;\n        uStack40 = var_6h;\n        uStack44 = var_6h & 0xffffff00 | uVar2;\n        (****0x467150)();\n    }\n    *0x467124 = NULL;\n    return;\n}\n",
        "token_count": 1092
    },
    "00447440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00447440(void)\n\n{\n    if (*0x467124 != 0) {\n        fcn.00447168();\n    }\n    *0x467120 = 0;\n    return;\n}\n",
        "token_count": 47
    },
    "004474d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004474d4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00421bf8();\n        *in_EAX = iVar1;\n    }\n    fcn.0040732c();\n    return;\n}\n",
        "token_count": 76
    },
    "004474fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004474fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00407628();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00421c28();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00447608": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00447608(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x447618;\n    var_8h = fcn.00407850();\n    uStack24 = 0x4476a6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x447643;\n            var_ch = fcn.00407488();\n            puStack32 = 0x44764e;\n            cVar1 = fcn.00430e84();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x44767e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00447788();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x447685;\n                uStack36 = 0x44767d;\n                fcn.00430ee0();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4476ad;\n    uStack24 = 0x4476a5;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 446
    },
    "004476e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004476e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x4476f9;\n        fcn.00431064();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x447711;\n            iVar1 = fcn.00407850();\n            uStack20 = 0x447765;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0044754c();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.0040732c();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44776c;\n            uStack20 = 0x447764;\n            fcn.004078b4();\n            return;\n        }\n        puStack16 = 0x44777a;\n        fcn.00431068();\n        puStack16 = 0x447782;\n        fcn.004477d4();\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "00447788": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00447788(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.00431068();\n        fcn.00407864();\n        sub.USER32.DLL_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00447940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00447940(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.00447940::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x447a0d;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x447975;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x447987;\n        cVar1 = fcn.00421e24();\n        if ((((cVar1 != '\\0') && (*(**0x4663ac + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.00447940::var_8h;\n            fcn.004291cc();\n            fcn.0041339c(arg_8h);\n            fcn.004227b0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x447a14;\n    iStack56 = 0x447a04;\n    fcn.0042275c();\n    iStack56 = 0x447a0c;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 474
    },
    "00447ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.00447ce0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040f138();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x74);\n    in_EAX[0x14] = *0x447db0;\n    iVar1 = fcn.0042ffbc();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x448c80;\n    *(in_EAX + 0x61) = *0x447db4;\n    iVar1 = fcn.00447800();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x449b38;\n    in_EAX[0x1c] = reloc.OLEAUT32.DLL_SysFreeString;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x9a) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7a) = 0xfff4;\n    in_EAX[0x2e] = *0x4385d0;\n    *(in_EAX + 0x54) = 1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 532
    },
    "00447eac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447eac(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.00421e24(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.GDI32.DLL_SelectPalette();\n            iVar1 = sub.GDI32.DLL_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x7c))();\n            }\n            sub.GDI32.DLL_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.USER32.DLL_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 258
    },
    "0044801c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044801c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x68))();\n    }\n    fcn.0040f598();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004480b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004480b0(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.0040f454();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x1f]) {\n            fcn.00448b88();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.00447f54();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004483e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004483e4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0xa0)) {\n        if ((*(in_EAX + 0xa0) != 0) && (*(*(in_EAX + 0xa0) + 0x178) != 0)) {\n            puStack40 = 0x44842a;\n            fcn.00407628();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x178) != 0)) {\n            puStack40 = 0x44844a;\n            fcn.0040732c();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x4484df;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.00421e24();\n    }\n    iVar1 = *(in_EAX + 0xa0);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0xa0) = 0;\n        }\n        else {\n            *(in_EAX + 0xa0) = param_2;\n            if (param_2 != 0) {\n                fcn.00421e24();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.00421e24();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 488
    },
    "00448668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00448668(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4486e9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00424964();\n        fcn.00414bac(in_stack_ffffffd4, arg_ch);\n        fcn.004223bc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x4486f0;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 391
    },
    "00448780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448780(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0xa0) != 0) && (*0x467124 == 0)) && (*0x4487e8 == (*0x4487e4 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00449d78(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00448cfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448cfc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00448d94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448d94(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00448db8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448db8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00448ee4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00448ee4(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x448f7a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00424964();\n        fcn.00414bac(uVar2, arg_ch);\n        fcn.004223bc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.GDI32.DLL_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.GDI32.DLL_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.0042275c(0x448f81);\n    return;\n}\n",
        "token_count": 398
    },
    "00448f8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00448f8c(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_24h;\n    uint var_11h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    uVar1 = fcn.004074e4();\n    uVar2 = uVar1;\n    do {\n        do {\n            if (uVar1 < 1) {\n                var_1h._0_1_ = 0;\n                goto code_r0x0044900d;\n            }\n            uVar1 = uVar1 - 1;\n            uVar2 = fcn.00407488();\n        } while ((*(uVar2 + 0x57) == '\\0') || ((*(uVar2 + 0x50) & 0x40) == 0));\n        fcn.00448580();\n        sub.USER32.DLL_IntersectRect(&var_11h, arg_8h + -0x14, &var_24h);\n        uVar2 = sub.USER32.DLL_EqualRect(&var_11h, arg_8h + -0x14);\n    } while (uVar2 == 0);\ncode_r0x0044900d:\n    return uVar2 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 336
    },
    "00449018": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449018(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.0044f48c();\n    if (cVar2 != '\\0') {\n        fcn.00448580();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00448f8c(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.0044f188(&var_15h + 1, -uVar1);\n        sub.USER32.DLL_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0044910c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044910c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x449151;\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x449171;\n                uStack20 = fcn.0044f188();\n                puStack24 = 0x449177;\n                uVar2 = sub.USER32.DLL_GetDC();\n                uStack28 = 0x4491e5;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.GDI32.DLL_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.0044d034();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.0044f188(uVar2, 0x4491ff);\n                sub.USER32.DLL_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x4491f4;\n            (**(*in_EAX + 0x7c))();\n            uStack20 = 0x4491ff;\n            (**(*in_EAX + 0x88))();\n        }\n    }\n    return;\n}\n",
        "token_count": 508
    },
    "00449208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00449208(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "00449238": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00449238(void)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (iVar1 = (in_EAX & 0xffffff00 | *(in_EAX + 0x5f)) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "00449340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449340(uchar *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xf2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xf0))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0044937c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044937c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xea) != 0) {\n        (**(in_EAX + 0xe8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004493c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004493c8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x11a) != 0) {\n        (**(in_EAX + 0x118))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004494d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004494d8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00449524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00449524(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint8_t var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = 0;\n    uVar2 = in_EAX;\n    if (*(in_EAX + 0x13a) != 0) {\n        uVar2 = (**(in_EAX + 0x138))(&var_ah, &var_9h);\n    }\n    if (var_ah == 0) {\n        *(in_EAX + 0xa4) = *(in_EAX + 0xa4) + in_ECX;\n        while( true ) {\n            uVar1 = *(in_EAX + 0xa4);\n            uVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f);\n            if (uVar2 < 0x78) break;\n            uVar2 = *(in_EAX + 0xa4) >> 0x1f;\n            iVar3 = ((*(in_EAX + 0xa4) ^ uVar2) - uVar2) + -0x78;\n            *(in_EAX + 0xa4) = iVar3;\n            if (uVar1 < 0) {\n                if (iVar3 != 0) {\n                    *(in_EAX + 0xa4) = -iVar3;\n                }\n                var_ah = fcn.00421e24();\n            }\n            else {\n                var_ah = fcn.00421e24();\n            }\n        }\n    }\n    return uVar2 & 0xffffff00 | var_ah;\n}\n",
        "token_count": 457
    },
    "00449680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449680(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x449695;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x11];\n        var_1ch = param_2[0x12];\n        var_18h = param_2[0x13];\n        var_14h = param_2[0x14];\n    }\n    else {\n        var_20h = param_2[0x17];\n        var_1ch = param_2[0x18];\n        var_18h = param_2[0x19];\n        var_14h = param_2[0x1a];\n    }\n    uStack52 = 0x4496bc;\n    uVar2 = sub.USER32.DLL_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x4496cf;\n    uStack60 = uVar2;\n    uVar3 = sub.USER32.DLL_GetDCEx();\n    uStack68 = 0x44979b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.00449680::var_1h + 1;\n    uVar4 = fcn.00430990();\n    uVar5 = sub.GDI32.DLL_SelectObject(uVar3, uVar4);\n    sub.GDI32.DLL_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.GDI32.DLL_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.GDI32.DLL_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.GDI32.DLL_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.GDI32.DLL_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.USER32.DLL_ReleaseDC(uVar2, uVar3, 0x4497a2);\n    return;\n}\n",
        "token_count": 794
    },
    "004497d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004497d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint32_t uStack23;\n    \n    cVar1 = fcn.00421db4();\n    if ((*0x467128 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00421dd8();\n    }\n    fcn.00448724();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00421e24(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = uStack23 & 0xffffff00 | *(param_2 + 4);\n            fcn.00421e24(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.00421e24(uStack23);\n        }\n        else {\n            fcn.00421e24(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "004498c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004498c4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0xa0);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1a7) == '\\0')) || (*(iVar3 + 0x17c) == 0)) {\n            fcn.00405e40();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.004486f8();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x17c) + 0x14))();\n            var_34h = 2;\n            fcn.0044f188();\n            sub.USER32.DLL_MapWindowPoints();\n        }\n        uVar1 = fcn.00448b60();\n        arg_8h_00 = &fcn.004498c4::var_34h;\n        uStack80 = 0x449975;\n        fcn.00448b74();\n        uStack80 = 0x449982;\n        fcn.00405e90(arg_8h_00, uVar1);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x449996;\n        uVar2 = fcn.00449aa4();\n        var_5h = uVar2;\n        goto code_r0x00449a96;\n    }\n    uVar1 = fcn.00449dac();\n    if (*(in_EAX + 0xa0) == 0) {\ncode_r0x004499c9:\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = fcn.00421e24();\n        if (uVar1 != '\\0') goto code_r0x004499c9;\n        uVar2 = 0;\n    }\n    var_5h = uVar2;\n    if (var_5h != 0) {\n        var_ch = fcn.0044630c();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0xa0) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0044f188();\n        }\n        fcn.00448580();\n        if (iVar3 != 0) {\n            sub.USER32.DLL_MapWindowPoints(iVar3, 0, &fcn.004498c4::var_1ch, 2);\n        }\n        *(var_ch + 4) = in_EDX;\n        *(var_ch + 0x54) = arg_8h;\n        *(var_ch + 0x58) = var_4h;\n        *(var_ch + 0x44) = var_1ch;\n        *(var_ch + 0x48) = var_18h;\n        *(var_ch + 0x4c) = uStack24;\n        *(var_ch + 0x50) = uStack20;\n        uVar1 = fcn.0044f188(&fcn.004498c4::var_1ch, 1);\n        sub.USER32.DLL_MapWindowPoints(0, uVar1);\n        fcn.00421e24();\n        *in_FS_OFFSET = var_18h;\n        uVar2 = fcn.00421c28(0x449a96);\n        return uVar2;\n    }\ncode_r0x00449a96:\n    return uVar2 & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1030
    },
    "00449b48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00449b48(uint param_1)\n\n{\n    uint32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xc2) != 0) {\n        in_EAX = (**(in_EAX + 0xc0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, in_EAX & 0xffffff00 | uStack8 & 0xff);\n}\n",
        "token_count": 119
    },
    "00449c14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449c14(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00449ca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449ca4(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00449dac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00449dac(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = (**(*in_EAX + 0x54))();\n    if (uVar2 != '\\0') {\n        in_EAX[0x2b] = in_EAX[0x13];\n        in_EAX[0x2a] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x28] != 0) {\n        if ((*(in_EAX + 0x27) == '\\x02') || (*(in_EAX[0x28] + 0x5b) - 1U < 2)) {\n            uVar2 = in_EAX[0x13];\n            in_EAX[0x2d] = uVar2;\n        }\n        else if ((*(in_EAX + 0x27) == '\\x01') ||\n                (cVar1 = *(in_EAX[0x28] + 0x5b),  uVar2 = in_EAX[0x28] & 0xffffff00U | cVar1 - 5,  cVar1 - 3U < 2)) {\n            uVar2 = in_EAX[0x12];\n            in_EAX[0x2c] = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "00449e44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00449e44(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_114h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) != 0) && (var_14h = fcn.00438e44(),  var_14h != NULL)) && (var_14h[0x94] != 0)) &&\n       (cVar2 = (**(*var_14h[0x94] + 0x24))(),  cVar2 != '\\0')) {\n        return;\n    }\n    if ((*param_2 < 0x100) || (0x108 < *param_2)) {\n        uVar1 = *param_2;\n        if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n            if (uVar1 == 0xb00b) {\n                fcn.00448780(param_2[2]);\n            }\n        }\n        else {\n            if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                *param_2 = *param_2 - 2;\n            }\n            uVar1 = *param_2;\n            if (uVar1 == 0x200) {\n                fcn.004427b0();\n            }\n            else {\n                if (uVar1 != 0x201) {\n                    if (uVar1 == 0x202) {\n                        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                        goto code_r0x00449fc6;\n                    }\n                    if (uVar1 != 0x203) {\n                        if (((*(*0x467104 + 0x20) != '\\0') && (*(*0x467104 + 0x1c) != 0)) &&\n                           (*param_2 == *(*0x467104 + 0x1c))) {\n                            sub.USER32.DLL_GetKeyboardState(&var_114h);\n                            var_10h = *param_2;\n                            var_ch._0_1_ = fcn.00438d88();\n                            var_ch._2_2_ = *(param_2 + 1);\n                            var_8h = param_2[2];\n                            fcn.00421e24();\n                            return;\n                        }\n                        goto code_r0x00449fc6;\n                    }\n                }\n                if (*(in_EAX + 0x5d) == '\\x01') {\n                    fcn.00421e24();\n                    return;\n                }\n                *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n            }\n        }\n    }\n    else {\n        var_14h = fcn.00438e44();\n        if ((var_14h != NULL) && (cVar2 = (**(*var_14h + 0xec))(),  cVar2 != '\\0')) {\n            return;\n        }\n    }\ncode_r0x00449fc6:\n    (**(*in_EAX + -0x14))();\n    return;\n}\n",
        "token_count": 789
    },
    "0044a18c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044a18c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044a308": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar __fastcall fcn.0044a308(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00449be4();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.00449b78(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00449be4(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 239
    },
    "0044a444": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044a444(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0044a4ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044a4ec(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, in_ECX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0044a84c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a84c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0044a8c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044a8c4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.00448cc4();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0044aa38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aa38(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.0044a928();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 4) = iVar2;\n            uVar3 = fcn.0044f188();\n            *(*(param_2 + 8) + 8) = uVar3;\n        }\n    }\n    else {\n        fcn.0044a9ac(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "0044aa98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044aadf)\n\nvoid __fastcall fcn.0044aa98(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x44ab86;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.00448bd0();\n        }\n        fcn.00448c00();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 100))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x20] == 0)) {\n            fcn.004227b0();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.00448af0();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x122) == 0)) {\n            in_EAX[0x48] = *(param_2 + 0x40);\n            in_EAX[0x49] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44ab8d;\n    uStack32 = 0x44ab85;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 438
    },
    "0044aedc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aedc(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00402784();\n            cVar1 = fcn.00405eb8();\n            if (cVar1 == '\\0') {\n                fcn.00448724();\n                (**(*in_EAX + 0x44))(uStack52, uStack48);\n                iVar2 = sub.USER32.DLL_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.00421e24();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.00421e24();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.00448750();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00405eb8();\n                if (cVar1 != '\\0') {\n                    fcn.00405e40();\n                    fcn.004486f8();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "0044b19c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044b19c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00421fdc();\n    fcn.0040f3d8();\n    if (*(piVar1 + 0x6a) != '\\0') {\n        *(piVar1 + 0x6a) = 0;\n        fcn.004468a4();\n    }\n    fcn.00424448();\n    fcn.00421c28();\n    if (piVar1[0xc] != 0) {\n        fcn.0044be3c();\n    }\n    if (piVar1[0x60] != 0) {\n        (**(*piVar1 + 0xac))();\n    }\n    iVar2 = fcn.0044c07c();\n    while (iVar2 != 0) {\n        piVar3 = fcn.0044c040();\n        fcn.0044bea8();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.0044c07c();\n    }\n    fcn.00421c28();\n    if (piVar1[99] != 0) {\n        fcn.00410254();\n    }\n    fcn.00447db8();\n    if ('\\0' < extraout_DL) {\n        fcn.00421fc4();\n    }\n    return;\n}\n",
        "token_count": 327
    },
    "0044b26c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044b26c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x19c) == 0) {\n        return;\n    }\n    puStack28 = 0x44b293;\n    fcn.00421bf8();\n    uStack32 = 0x44b330;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x19c) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00407684();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00407488();\n            if ((-1 < *(iVar1 + 0x1a0)) && (*(iVar1 + 0x1a0) < iVar3)) {\n                fcn.004075d4();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00407488();\n            if (iVar2 != 0) {\n                fcn.0044f348();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x44b337;\n    uStack32 = 0x44b32f;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 422
    },
    "0044b888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b888(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.0040732c();\n    }\n    var_8h = fcn.0044c07c();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.0044c040();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                ((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x44b9f4 == (*0x44b9f4 & *(iVar2 + 0x50)))) ||\n                 (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) && (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00407488();\n                    cVar1 = fcn.0044b3bc(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00407504();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00407488();\n            fcn.0044b448(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 650
    },
    "0044b9f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044b9f8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044c07c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0044c040();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.0044c040();\n            if (*0x44ba48 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 172
    },
    "0044ba4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044ba4c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x6a) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (in_EAX[0x5f] != 0)) {\n        (**(*in_EAX[0x5f] + 0x2c))();\n    }\n    uStack32 = 0x44ba96;\n    cVar1 = fcn.0044b9f8(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x8c))();\n        fcn.00421bf8();\n        uStack32 = 0x44bb2b;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.0044b888(&stack0xfffffffc);\n        fcn.00421e24();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x44bb2a;\n        fcn.00421c28();\n        return;\n    }\n    if (*(in_EAX + 0x1a6) != '\\0') {\n        fcn.00421e24();\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "0044bb50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044bb50(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x44bb64;\n    cVar1 = fcn.0044f48c();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 0x58) == 0) {\n            puStack32 = 0x44bb90;\n            fcn.0044bbe4();\n            uStack36 = 0x44bbd7;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x90))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x44bbde;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x44bbd6;\n            fcn.0044bbec();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "0044bbec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044bbec(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x160) = *(in_EAX + 0x160) + -1;\n    if ((*(in_EAX + 0x160) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0044bc0c();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0044bce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0044bce8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x44bcff;\n    iVar1 = fcn.0044c07c();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x44bd13;\n    iVar1 = fcn.00421bf8();\n    puStack32 = 0x44bd1e;\n    fcn.0044bbe4();\n    uStack36 = 0x44bdcf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.0044c07c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044c040();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.0044c040();\n                fcn.0040732c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00421e24();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x44bdd6;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x44bd8f;\n        iVar2 = fcn.00407488();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x44bd9c;\n            fcn.004480f4();\n        }\n        else {\n            uStack36 = 0x44bda5;\n            fcn.004480f4();\n        }\n        uStack36 = 0x44bdb4;\n        fcn.00407378();\n    }\n    uStack36 = 0x44bdc6;\n    fcn.00421c28();\n    uStack36 = 0x44bdce;\n    fcn.0044bbec();\n    return;\n}\n",
        "token_count": 515
    },
    "0044c09c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c09c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0044c07c();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044c040();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0044c104": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c104(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00449208();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00449238();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.00421e24();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00421e24();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.00421e24();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0044c298": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044c298(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint var_58h;\n    uint *var_44h;\n    uint var_40h;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x44c423;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x98))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.00421db4();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.0044f188();\n                goto code_r0x0044c344;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar4 = 0;\n        fcn.00424964();\n        fcn.00414bac(uVar4, arg_ch);\n        fcn.004223bc();\n    }\ncode_r0x0044c344:\n    in_EAX[0x5d] = var_64h;\n    iVar3 = sub.USER32.DLL_GetClassInfoA(var_58h, &var_40h, &var_b4h);\n    if ((iVar3 == 0) || (var_b0h != fcn.00445a0c)) {\n        if (iVar3 != 0) {\n            sub.USER32.DLL_UnregisterClassA(&var_40h, var_58h);\n        }\n        var_64h = fcn.00445a0c;\n        var_44h = &var_40h;\n        iVar2 = sub.USER32.DLL_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.00415bf8();\n        }\n    }\n    *0x46209c = in_EAX;\n    (**(*in_EAX + 0x9c))();\n    if (in_EAX[0x60] == 0) {\n        fcn.00415bf8();\n    }\n    fcn.00412e80();\n    in_EAX[0x19] = 0;\n    fcn.0044f498();\n    uVar4 = 1;\n    fcn.004301a4();\n    fcn.00449d78(uVar4);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.00421e24();\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.0042275c(0x44c42a);\n    return;\n}\n",
        "token_count": 791
    },
    "0044c514": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0044c514(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = 0x1000000;\n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (uVar1 = fcn.0044c500(),  uVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x198);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00407488();\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x44c5e8 != *(uVar2 + 0x61)))\n                goto code_r0x0044c5df;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        uVar1 = *(*(arg_8h + -8) + 0x19c);\n        if ((uVar1 != 0) && (iVar3 = *(uVar1 + 8),  -1 < iVar3 + -1)) {\n            do {\n                uVar2 = fcn.00407488();\n                uVar1 = uVar2;\n                if ((*(uVar2 + 0x5b) == '\\0') && (uVar1 = uVar2 & 0xffffff00,  *0x44c5e8 != *(uVar2 + 0x61)))\n                goto code_r0x0044c5df;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    _auStack8 = 0;\ncode_r0x0044c5df:\n    return uVar1 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 499
    },
    "0044c804": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044c804(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x60] != 0) {\n        if ((in_EAX[0x67] != 0) && (iVar1 = *(in_EAX[0x67] + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00407488();\n                fcn.0044c804();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        (**(*in_EAX + 0xb0))();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0044c84c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044c84c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x180) != 0) {\n        fcn.00449d78(0);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0044c8a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044c8a4(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) == '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || ((*(in_EAX + 0x51) & 4) != 0)))) ||\n       ((*(in_EAX + 0x15) & 8) != 0)) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x60] == 0) {\n            puStack28 = 0x44c8fa;\n            (**(*in_EAX + 0x94))();\n        }\n        if ((in_EAX[0x67] != 0) && (iVar2 = *(in_EAX[0x67] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x44c922;\n                fcn.00407488();\n                puStack28 = 0x44c927;\n                fcn.0044c8a4();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x60] != 0) && (*(in_EAX + 0x1a6) != cVar1)) {\n        *(in_EAX + 0x1a6) = cVar1;\n        uStack32 = 0x44c97a;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00449d78(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0044c9a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044c9a0(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    \n    while (iVar1 = *(in_EAX + 0x30),  iVar1 != 0) {\n        in_EAX = iVar1;\n        if (*(iVar1 + 0x1a6) == '\\0') {\n            return;\n        }\n    }\n    cVar2 = fcn.00421db4();\n    if ((cVar2 == '\\0') && (*(in_EAX + 400) == 0)) {\n        return;\n    }\n    fcn.0044c8a4();\n    return;\n}\n",
        "token_count": 150
    },
    "0044ca58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ca58(int32_t arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405e40();\n    *(arg_8h + -0xc) = var_8h;\n    *(arg_8h + -8) = var_4h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar3 = sub.USER32.DLL_PtInRect(&var_18h);\n    if (iVar3 != 0) {\n        if (((*(in_EAX + 7) & 0x10) != 0) && ((*(in_EAX + 0x57) != '\\0' || ((*(in_EAX + 0x51) & 4) == 0)))) {\ncode_r0x0044cafd:\n            bVar1 = true;\n            goto code_r0x0044caff;\n        }\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar2 = (**(*in_EAX + 0x50))();\n            if ((cVar2 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                arg_8h_00 = fcn.00402798();\n                iVar3 = fcn.00449d78(arg_8h_00);\n                if (iVar3 != 0) goto code_r0x0044cafd;\n            }\n        }\n    }\n    bVar1 = false;\ncode_r0x0044caff:\n    if (bVar1) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "0044cb10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044cb10(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    if (((arg_8h != '\\0') && (*(in_EAX + 0x19c) != 0)) && (iVar2 = *(*(in_EAX + 0x19c) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00407488();\n            cVar1 = fcn.0044ca58(puVar3);\n            if (cVar1 != '\\0') break;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 0x198) != 0) && (iVar2 = *(*(in_EAX + 0x198) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00407488();\n            cVar1 = fcn.0044ca58(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 334
    },
    "0044cba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044cba4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0044f188();\n    iVar2 = sub.USER32.DLL_GetCapture();\n    if (iVar1 == iVar2) {\n        iVar1 = 0;\n        if ((*0x46215c != 0) && (in_EAX == *(*0x46215c + 0x30))) {\n            iVar1 = *0x46215c;\n        }\n    }\n    else {\n        uVar3 = 0;\n        fcn.00402784();\n        iVar1 = fcn.0044cb10(uVar3);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00402798(*(param_2 + 8) - *(iVar1 + 0x40), *(param_2 + 10) - *(iVar1 + 0x44));\n        uVar3 = fcn.00449d78(uVar3);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 275
    },
    "0044cc38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cc38(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x85) {\n        if (iVar4 == 0x84) {\n            fcn.00449e44();\n            if (param_2[3] != -1) {\n                return;\n            }\n            uVar6 = 0;\n            fcn.00402784();\n            fcn.00448724();\n            iVar4 = fcn.0044cb10(uVar6);\n            if (iVar4 == 0) {\n                return;\n            }\n            param_2[3] = 1;\n            return;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.00438e44();\n            if ((piVar3 != NULL) && (cVar1 = (**(*piVar3 + 0xe4))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x0044cd8b;\n        }\n        if (iVar4 != 8) {\n            if (iVar4 == 0x1f) {\n                iVar4 = fcn.0044f188();\n                iVar5 = sub.USER32.DLL_GetCapture();\n                if (((iVar4 == iVar5) && (*0x46215c != 0)) && (in_EAX == *(*0x46215c + 0x30))) {\n                    fcn.00449d78(0);\n                }\n            }\n            goto code_r0x0044cd8b;\n        }\n        uVar2 = *(in_EAX + 0x54) & 0x20;\n    }\n    else {\n        if (8 < iVar4 - 0x100U) {\n            if ((iVar4 - 0x200U < 0xb) && (cVar1 = fcn.0044cba4(),  cVar1 != '\\0')) {\n                if (param_2[3] != 0) {\n                    return;\n                }\n                cVar1 = fcn.0044f48c();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                uVar6 = fcn.0044f188(*param_2, param_2[1], param_2[2]);\n                sub.USER32.DLL_DefWindowProcA(uVar6);\n                return;\n            }\n            goto code_r0x0044cd8b;\n        }\n        uVar2 = fcn.00449334();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x0044cd8b:\n    fcn.00449e44();\n    return;\n}\n",
        "token_count": 645
    },
    "0044cd9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cd9c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x180) == 0) {\n        fcn.00449fd8();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00449d78(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.USER32.DLL_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.0042fcd0();\n            sub.GDI32.DLL_SetTextColor(param_2[1], uVar2);\n            fcn.00430954();\n            uVar2 = fcn.0042fcd0();\n            sub.GDI32.DLL_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00430990();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x46711c) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.USER32.DLL_CallWindowProcA(*(in_EAX + 0x174), *(in_EAX + 0x180), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.00448780(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "0044ced8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ced8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff80;\n    int32_t iVar5;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar1 == 0) {\n        puStack100 = &fcn.0044ced8::var_50h;\n        uStack104 = 0x44cefd;\n        uStack104 = fcn.0044f188();\n        puStack108 = 0x44cf03;\n        iVar1 = sub.USER32.DLL_BeginPaint();\n    }\n    uStack112 = 0x44cff8;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x66] == 0) {\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xb8))();\n        iVar1 = in_stack_ffffff80;\n    }\n    else {\n        iVar5 = iVar1;\n        puStack108 = &stack0xfffffffc;\n        var_10h = sub.GDI32.DLL_SaveDC(iVar1);\n        var_ch = 2;\n        iVar4 = *(var_4h[0x66] + 8);\n        if (-1 < iVar4 + -1) {\n            do {\n                iVar2 = fcn.00407488();\n                if ((((*(iVar2 + 0x57) != '\\0') || (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                    ((*(iVar2 + 0x50) & 0x40) != 0)) &&\n                   (iVar5 = iVar1,  var_ch = sub.GDI32.DLL_ExcludeClipRect(),  var_ch == 1)) break;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        if (var_ch != 1) {\n            (**(*var_4h + 0xb8))(iVar5);\n        }\n        sub.GDI32.DLL_RestoreDC(iVar1, var_10h);\n    }\n    fcn.0044d034();\n    *in_FS_OFFSET = iVar1;\n    if (*(var_8h + 4) == 0) {\n        uVar3 = fcn.0044f188(&fcn.0044ced8::var_50h, 0x44cfff);\n        sub.USER32.DLL_EndPaint(uVar3);\n    }\n    return;\n}\n",
        "token_count": 718
    },
    "0044d034": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d034(int32_t param_1, uchar *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puStack72;\n    uchar *puStack68;\n    uchar *puStack48;\n    uint uStack44;\n    int32_t iStack36;\n    uchar auStack32 [16];\n    \n    if (((*(in_EAX + 0x1a8) != '\\0') && (*(in_EAX + 0x1a7) != '\\0')) && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x20))();\n    }\n    if (*(in_EAX + 0x198) != 0) {\n        iVar4 = 0;\n        if ((param_1 != 0) && (iVar4 = fcn.004074e4(),  iVar4 < 0)) {\n            iVar4 = 0;\n        }\n        puStack48 = *(*(in_EAX + 0x198) + 8);\n        if (iVar4 < puStack48) {\n            do {\n                iVar1 = fcn.00407488();\n                if ((*(iVar1 + 0x57) != '\\0') || (((*(iVar1 + 0x1c) & 0x10) != 0 && ((*(iVar1 + 0x51) & 4) == 0)))) {\n                    fcn.00405e68(&stack0xffffffe0, *(iVar1 + 0x44) + *(iVar1 + 0x4c));\n                    puStack68 = 0x44d0f2;\n                    iVar2 = sub.GDI32.DLL_RectVisible();\n                    puStack48 = param_2;\n                    if (iVar2 != 0) {\n                        if ((*(in_EAX + 0x54) & 0x80) != 0) {\n                            *(iVar1 + 0x54) = *(iVar1 + 0x54) | 0x80;\n                        }\n                        puStack72 = 0x44d108;\n                        puStack68 = param_2;\n                        sub.GDI32.DLL_SaveDC();\n                        puStack72 = 0x44d119;\n                        fcn.0044751c();\n                        puStack72 = *(iVar1 + 0x4c);\n                        sub.GDI32.DLL_IntersectClipRect(param_2, 0, 0, *(iVar1 + 0x48));\n                        fcn.00449d78(0);\n                        sub.GDI32.DLL_RestoreDC();\n                        *(iVar1 + 0x54) = *(iVar1 + 0x54) & 0xff7f;\n                    }\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puStack48);\n        }\n    }\n    if ((*(in_EAX + 0x19c) != 0) && (iStack36 = *(*(in_EAX + 0x19c) + 8),  -1 < iStack36 + -1)) {\n        do {\n            iVar4 = fcn.00407488();\n            if (((*(iVar4 + 0x1a5) != '\\0') && ((*(iVar4 + 0x50) & 0x10) != 0)) &&\n               ((*(iVar4 + 0x57) != '\\0' || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0)))))) {\n                fcn.0042fcd0();\n                uStack44 = sub.GDI32.DLL_CreateSolidBrush();\n                puVar5 = &stack0xffffffdc;\n                puStack68 = 0x44d1ef;\n                fcn.00405e68(puVar5, *(iVar4 + 0x44) + *(iVar4 + 0x4c));\n                puStack68 = &stack0xffffffd4;\n                puStack72 = param_2;\n                sub.USER32.DLL_FrameRect();\n                sub.GDI32.DLL_DeleteObject(puVar5);\n                uVar3 = fcn.0042fcd0();\n                uVar3 = sub.GDI32.DLL_CreateSolidBrush(uVar3);\n                iVar4 = *(iVar4 + 0x44) + *(iVar4 + 0x4c) + 1;\n                puVar5 = &stack0xffffffc0;\n                puStack72 = uVar3;\n                fcn.00405e68(puVar5, iVar4);\n                sub.USER32.DLL_FrameRect(param_2, &stack0xffffffb8, puVar5, iVar4, uVar3);\n                sub.GDI32.DLL_DeleteObject(puVar5);\n            }\n            iStack36 = iStack36 + -1;\n        } while (iStack36 != 0);\n    }\n    return;\n}\n",
        "token_count": 1123
    },
    "0044d264": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d264(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    var_ch = sub.GDI32.DLL_SaveDC();\n    fcn.0044751c();\n    sub.GDI32.DLL_IntersectClipRect();\n    iVar3 = 0;\n    var_8h = 0;\n    uVar1 = fcn.0044f188(0xffffffec);\n    uVar2 = sub.USER32.DLL_GetWindowLongA(uVar1);\n    if ((uVar2 & 0x200) == 0) {\n        uVar1 = fcn.0044f188(0xfffffff0);\n        uVar2 = sub.USER32.DLL_GetWindowLongA(uVar1);\n        if ((uVar2 & 0x800000) != 0) {\n            var_8h = 3;\n            iVar3 = 0xa00f;\n        }\n    }\n    else {\n        var_8h = 10;\n        iVar3 = 0x200f;\n    }\n    if (iVar3 != 0) {\n        sub.USER32.DLL_SetRect(&var_20h, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n        sub.USER32.DLL_DrawEdge();\n        fcn.0044751c();\n        sub.GDI32.DLL_IntersectClipRect();\n    }\n    fcn.00449d78(0);\n    fcn.00449d78(0);\n    if ((*(in_EAX + 0x19c) != 0) && (iVar3 = *(*(in_EAX + 0x19c) + 8),  -1 < iVar3 + -1)) {\n        var_4h = 0;\n        var_10h = iVar3;\n        do {\n            iVar3 = fcn.00407488();\n            if (*(iVar3 + 0x57) != '\\0') {\n                fcn.0044d264(*(iVar3 + 0x44));\n            }\n            var_4h = var_4h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    sub.GDI32.DLL_RestoreDC();\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xff7f;\n    return;\n}\n",
        "token_count": 646
    },
    "0044d67c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d67c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uchar auStack24 [16];\n    \n    if ((*(in_EAX + 0x7e) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n        uVar1 = fcn.00430990();\n        (**(*in_EAX + 0x44))(uVar1);\n        sub.USER32.DLL_FillRect(*(param_2 + 4), auStack24);\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 155
    },
    "0044d970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044d970(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44da4f;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(*0x4663b0 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0043fd5c();\n            iVar2 = fcn.0041275c();\n            puVar1 = puStack24;\n            if (iVar2 != 0) {\n                piVar3 = fcn.0043fb5c();\n                iVar2 = (**(*piVar3 + 0x14))();\n                puVar1 = puStack24;\n                if (iVar2 != 0) {\n                    uVar4 = *(**0x4663dc + 0x3c);\n                    if (*(in_EAX + 0x184) != '\\0') {\n                        piVar3 = fcn.0043fb5c();\n                        iVar2 = (**(*piVar3 + 0x54))();\n                        if (-1 < iVar2) {\n                            uStack28 = 0x44da16;\n                            piVar3 = fcn.0043fb5c();\n                            uStack28 = 0x44da1d;\n                            uVar4 = (**(*piVar3 + 0x18))();\n                        }\n                    }\n                    uStack28 = 1;\n                    uStack32 = uVar4;\n                    sub.USER32.DLL_ActivateKeyboardLayout();\n                    puVar1 = puStack24;\n                }\n            }\n        }\n        puStack24 = puVar1;\n        fcn.0044f188();\n        fcn.00453ae8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44da56;\n    uStack28 = 0x44da4e;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 523
    },
    "0044da5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044da5c(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe0;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x44dae6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack24;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x4663b0 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x188) != 0) {\n            fcn.0043fd5c();\n            iVar2 = fcn.0041275c();\n            puVar1 = puStack16;\n            if (iVar2 != 0) {\n                in_stack_ffffffe0 = *(**0x4663dc + 0x3c);\n                sub.USER32.DLL_ActivateKeyboardLayout(in_stack_ffffffe0, 1);\n                puVar1 = puStack16;\n            }\n        }\n        puStack16 = puVar1;\n        puVar1 = puStack16;\n        if (*(in_EAX + 0x184) == '\\0') {\n            fcn.0044f188();\n            fcn.00453acc();\n            puVar1 = puStack16;\n        }\n    }\n    puStack16 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffe0;\n    uStack24 = 0x44daed;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 389
    },
    "0044db48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db48(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00405e58();\n    iVar1 = fcn.00449d78(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1b2) != 0)) {\n        (**(in_EAX + 0x1b0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0044db98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db98(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ba) != 0) {\n        (**(in_EAX + 0x1b8))(arg_8h, arg_10h & 0xffffff00 | arg_ch & 0xff, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0044dcc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dcc0(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.0044f188();\n    sub.USER32.DLL_GetWindowRect(uVar1);\n    sub.USER32.DLL_InflateRect();\n    if (*(in_EAX + 0x1d2) != 0) {\n        (**(in_EAX + 0x1d0))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0044dd1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0044dd1c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0044dc88();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00407488();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "0044ddc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ddc8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44de70;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1a8)) && (*(in_EAX + 0x1a8) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.004468a4();\n        if (param_2 == '\\0') {\n            fcn.00421c28();\n            *(in_EAX + 0x178) = 0;\n            fcn.00424448();\n        }\n        else {\n            if (*(in_EAX + 0x178) == 0) {\n                uVar1 = fcn.00421bf8();\n                *(in_EAX + 0x178) = uVar1;\n            }\n            fcn.00421e24();\n            fcn.00424460();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44de77;\n    uStack28 = 0x44de6f;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 350
    },
    "0044de80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044de80(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x44);\n        uStack24 = *(iVar1 + 0x48);\n        uStack20 = *(iVar1 + 0x4c);\n        uStack16 = *(iVar1 + 0x50);\n        uStack44 = 2;\n        puStack48 = &fcn.0044de80::var_18h;\n        uStack52 = 0x44deba;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.0044f188();\n        uStack56 = 0;\n        puStack60 = 0x44dec2;\n        sub.USER32.DLL_MapWindowPoints();\n        puStack60 = 0x44deca;\n        fcn.0044bbe4();\n        uStack64 = 0x44df42;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.00421e24();\n        if ((*(var_4h + 0x1a7) != '\\0') && (*(var_4h + 0x17c) != 0)) {\n            (**(**(var_4h + 0x17c) + 0x18))(*(*(var_8h + 4) + 0x58));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x44df49;\n        uStack64 = 0x44df41;\n        fcn.0044bbec();\n        return;\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "0044df6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044df6c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1a7) != '\\0') && (*(in_EAX + 0x17c) != 0)) {\n        (**(**(in_EAX + 0x17c) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0044df94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044df94(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x44dfa9;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x44dfb3;\n    iVar3 = fcn.00421b70();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x44dffe;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00421e24();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x44e00f;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x44dffd;\n            fcn.00448e30();\n        }\n        return;\n    }\n    puStack24 = 0x44e00f;\n    fcn.0044aa38();\n    return;\n}\n",
        "token_count": 296
    },
    "0044e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044e040(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00438e44();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0044e040();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0044e09d;\n    }\n    uVar2 = fcn.00438d4c();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00421e24();\n        if (*(param_2 + 4) == 0) goto code_r0x0044e09d;\n    }\n    uVar4 = 0;\ncode_r0x0044e09d:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 309
    },
    "0044e110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044e110(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00438e44();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar1 = fcn.0044e110();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0044e16d;\n    }\n    uVar2 = fcn.00438d4c();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.00421e24();\n        if (*(param_2 + 4) == 0) goto code_r0x0044e16d;\n    }\n    uVar4 = 0;\ncode_r0x0044e16d:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 309
    },
    "0044e1d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044e1d8(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.00438e44();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x22d) != '\\0')) {\n        cVar2 = fcn.0044e1d8();\n        if (cVar2 != '\\0') goto code_r0x0044e234;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.00421e24();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x0044e234;\n    }\n    uVar4 = 0;\ncode_r0x0044e234:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 323
    },
    "0044e478": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e478(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 105
    },
    "0044e49c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0044e49c(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.00447eac();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.0044c07c();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.0044c040();\n                uVar1 = fcn.00421e24();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 222
    },
    "0044e550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e550(uint param_1, int32_t param_2)\n\n{\n    fcn.0044a84c();\n    if ((*(*0x4663b0 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.0044c84c();\n    }\n    fcn.0044c0dc();\n    return;\n}\n",
        "token_count": 93
    },
    "0044e668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044e668(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.0044be3c();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.0044c9a0();\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0044e7ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044e7ec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.USER32.DLL_IsWindowVisible(*(in_EAX + 0x180));\n            if (iVar2 != 0) {\n                fcn.0044f090();\n            }\n        }\n    }\n    fcn.0044c0dc();\n    return;\n}\n",
        "token_count": 160
    },
    "0044e918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0044e918(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar2 = fcn.00421e24();\n                if ((iVar2 != 0) && (*(iVar2 + 0x38) != 0)) {\n                    uVar3 = fcn.00421e24();\n                    if (uVar3 != '\\0') goto code_r0x0044e9a1;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar2 = fcn.00438e44();\n        if (iVar2 != 0) {\n            uVar3 = fcn.00421e24();\n            if (uVar3 != '\\0') goto code_r0x0044e9a1;\n        }\n    }\n    uVar3 = fcn.00445b30();\n    if (uVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x0044e9a1:\n    return CONCAT44(uStack20, uVar3 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 365
    },
    "0044ed80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ed80(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x180);\n    if ((iVar4 == 0) || (iVar3 = sub.USER32.DLL_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.USER32.DLL_ScrollWindow(*(in_EAX + 0x180), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.0044c07c();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.0044c040();\n            cVar2 = fcn.00421db4();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x180) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x180);\n                sub.USER32.DLL_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0044bc0c();\n    return;\n}\n",
        "token_count": 385
    },
    "0044ee70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ee70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x198);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.004074e4();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x19c) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.00407378();\n                fcn.00407504();\n            }\n        }\n        if (*(in_EAX + 0x180) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x19c) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00407488();\n                uVar3 = fcn.0044f188();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00407488();\n                uVar3 = fcn.0044f188();\n            }\n            sub.USER32.DLL_SetWindowPos(*(in_EAX + 0x180), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "0044f164": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044f164(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x60] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.0044f164();\n        }\n        (**(*in_EAX + 0x94))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0044f48c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0044f48c(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x180) != 0;\n}\n",
        "token_count": 50
    },
    "0044f5b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f5b0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x44f5d2;\n    iVar2 = fcn.00421bf8();\n    uStack44 = 0x44f6a6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00421e24();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.004074e4();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00407488();\n            cVar1 = fcn.00421e24();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1a4) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x44f6ad;\n    uStack44 = 0x44f6a5;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 575
    },
    "0044f778": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f778(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_ECX;\n    uint *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 302
    },
    "0044f7fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f7fc(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t var_5dh;\n    int32_t var_59h;\n    int32_t var_55h;\n    int32_t var_51h;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.0044f48c();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.0044c07c(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x8c))();\n        iVar3 = sub.USER32.DLL_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_14h = in_EAX[0x12] - (var_55h - var_5dh);\n            var_18h = in_EAX[0x13] - (var_51h - var_59h);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_14h;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_18h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            var_10h = var_18h;\n            var_ch = var_14h;\n            iVar3 = fcn.0044c07c();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.0044c040();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.0044f778(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x44fbd0 == (*(iVar4 + 0x61) & *0x44fbd0)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    var_40h = ((var_55h - var_5dh) - *(iVar4 + 0x48)) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    var_44h = ((var_55h - var_5dh) + var_44h) - *(iVar4 + 0x48);\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x44fbd4 == (*(iVar4 + 0x61) & *0x44fbd4)) {\n                                cVar1 = '\\x01';\n                                if (0 < var_48h) {\n                                    var_48h = ((var_51h - var_59h) - *(iVar4 + 0x4c)) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    var_4ch = ((var_51h - var_59h) + var_4ch) - *(iVar4 + 0x4c);\n                                }\n                            }\n                            else {\n                                cVar1 = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                cVar1 = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                cVar1 = '\\x02';\n                            }\n                            else {\n                                cVar1 = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            var_30h = var_30h + *(iVar4 + 0x48);\n                            var_34h = var_34h + *(iVar4 + 0x48);\n                        }\n                        if (cVar1 - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (cVar1 - 1U == 2) {\n                            var_38h = var_38h + *(iVar4 + 0x4c);\n                            var_3ch = var_3ch + *(iVar4 + 0x4c);\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2111
    },
    "0044fc8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0044fc8c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_38h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack76 = 0x44fcaa;\n    piVar1 = fcn.0044f48c();\n    if ((piVar1 != '\\0') && (piVar1 = in_EAX,  *(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack76 = 0x44fcd0;\n            piVar1 = fcn.0044c07c();\n            if (piVar1 < 1) goto code_r0x0044fe4e;\n        }\n        puStack76 = 0x44fce6;\n        (**(*in_EAX + 0xb4))();\n        puStack76 = 0x44fcf1;\n        (**(*in_EAX + 0x44))();\n        puStack76 = 0x44fcff;\n        (**(*in_EAX + 0x8c))();\n        puStack76 = 0x44fd07;\n        fcn.0044bbe4();\n        uStack80 = 0x44fdbb;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        iVar2 = fcn.0044c07c();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.0044c040();\n                if ((*(piVar1 + 0x57) != '\\0') || (((*(piVar1 + 7) & 0x10) != 0 && ((*(piVar1 + 0x51) & 4) == 0)))) {\n                    (**(*piVar1 + 0x84))(piVar1[0x13], piVar1[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x44fdc2;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack80 = 0x44fdba;\n        uVar3 = fcn.0044bbec();\n        return uVar3;\n    }\ncode_r0x0044fe4e:\n    return piVar1 & 0xffffff00 | 1;\n}\n",
        "token_count": 673
    },
    "004504b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004504b0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x45053b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (*(in_EAX + 0x84) == '\\0') {\n        fcn.00448bd0();\n        fcn.00430e48();\n        fcn.0044839c();\n        fcn.00448bd0();\n        fcn.00430e64();\n        fcn.004483c0();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x450542;\n    uStack24 = 0x45053a;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 239
    },
    "00450548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450548(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar3 = param_2[3];\n    *(in_EAX + 0x84) = 1;\n    uStack56 = 0x45070f;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.00448c00();\n    fcn.00449e1c();\n    iVar1 = fcn.0043f910();\n    if (iVar1 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.0043f910();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar1 = fcn.0043f91c();\n    if (iVar1 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.0043f91c();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar1 = fcn.0043f904();\n    if (var_18h < iVar1) {\n        var_18h = fcn.0043f904();\n    }\n    iVar1 = fcn.0043f8f8();\n    if (iVar3 + 4 < iVar1) {\n        fcn.0043f8f8();\n    }\n    uVar2 = fcn.0044f188(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.USER32.DLL_SetWindowPos(uVar2);\n    iVar3 = sub.KERNEL32.DLL_GetTickCount();\n    if (0xfa < iVar3 - var_4h[0x85]) {\n        iVar3 = fcn.00422a14();\n        if ((iVar3 < 100) && (*0x462098 != NULL)) {\n            sub.USER32.DLL_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n            if (var_8h != 0) {\n                sub.USER32.DLL_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n                if (var_8h == 0) {\n                    fcn.00453754();\n                    if (var_14h < var_1ch) {\n                        uVar4 = 0;\n                    }\n                    else {\n                        uVar4 = 1;\n                    }\n                }\n                else {\n                    uVar4 = 2;\n                }\n                uVar2 = fcn.0044f188(100, *(uVar4 * 4 + 0x4621a0) | 0x40000);\n                (**0x462098)(uVar2);\n            }\n        }\n    }\n    uVar2 = fcn.0044f188(4);\n    sub.USER32.DLL_ShowWindow();\n    (**(*var_4h + 0x7c))();\n    *in_FS_OFFSET = uVar2;\n    iVar3 = sub.KERNEL32.DLL_GetTickCount(0x450716);\n    var_4h[0x85] = iVar3;\n    *(var_4h + 0x84) = 0;\n    return;\n}\n",
        "token_count": 910
    },
    "00450950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450950(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.0045083c();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00450968": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00450968(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00425bc0();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.00450908(*(in_EAX + 0x74));\n        }\n        fcn.0045083c();\n        uVar2 = fcn.004509c8(arg_8h);\n        if (uVar2 != '\\0') {\n            sub.USER32.DLL_ShowCursor(0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 173
    },
    "004509c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004509c8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.00425bc0();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.00450a2c();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.004507fc(&var_ch);\n        iVar2 = sub.COMCTL32.DLL_ImageList_DragEnter(*(in_EAX + 0x6c), var_ch, var_8h);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 213
    },
    "00450a2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00450a2c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.00425bc0();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.COMCTL32.DLL_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00450a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00450a50(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.00425bc0();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.004507fc(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.COMCTL32.DLL_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 170
    },
    "00450ac4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.00450ac4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.00425bc0();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.00450a2c();\n        iVar2 = sub.COMCTL32.DLL_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.00450950();\n        sub.USER32.DLL_ShowCursor(0xffffffff);\n    }\n    return bVar3;\n}\n",
        "token_count": 173
    },
    "00450b0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00450b0c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0044b078();\n    uVar1 = fcn.00430aac();\n    *(in_EAX + 0x208) = uVar1;\n    fcn.004477bc();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 200
    },
    "00450c84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00450c84(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "00450d30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00450d30(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00450dc0();\n        }\n        else {\n            fcn.00414b70();\n            fcn.004223bc();\n        }\n        return;\n    }\n    fcn.00450dc0();\n    return;\n}\n",
        "token_count": 149
    },
    "00450d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00450d78(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.00450e2c();\n        }\n        else {\n            fcn.00414b70();\n            fcn.004223bc();\n        }\n        return;\n    }\n    fcn.00450e2c();\n    return;\n}\n",
        "token_count": 151
    },
    "00450dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450dc0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.004511f4();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n    if (param_2 == '\\x01') {\n        return uStack20;\n    }\n    if (param_2 == '\\x02') {\n        return uStack24;\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "00450e2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00450e2c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.00450ce0(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x8c))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack16 - iStack24;\n        }\n        else {\n            iVar2 = iStack20 - iStack28;\n        }\n    }\n    else {\n        do {\n            if (iVar2 == *(*(in_EAX + 0x1c) + 100)) {\n                if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n                    return *(*(in_EAX + 0x1c) + 0x68);\n                }\n                iVar2 = fcn.004511f4();\n                return iVar2;\n            }\n            iVar2 = *(iVar2 + 0x14);\n        } while (param_2 != *(iVar2 + 0x10));\n        iVar2 = fcn.004511f4();\n        iVar1 = fcn.00450d30();\n        iVar2 = iVar2 - iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 448
    },
    "00450edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00450edc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00450ce0();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.004512f4();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.00450e2c();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.00450e2c();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.00450ce0();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0045121c();\n            }\n            else {\n                fcn.00450d30();\n                fcn.0045121c();\n            }\n            fcn.0045107c();\n            iVar1 = fcn.004512cc();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 290
    },
    "00450f84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00450f84(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0042275c();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.00414c2c();\n            fcn.004223bc();\n        }\n        fcn.004227b0();\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00450fc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00450ffd)\n\nuint32_t fcn.00450fc8(void)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = fcn.00421e24();\n    return uVar1 & 0xffffff00;\n}\n",
        "token_count": 98
    },
    "0045107c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045107c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x9c) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.00450e2c();\n    iVar2 = fcn.00450e2c();\n    cVar1 = fcn.0045104c(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.004512cc();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.004511f4(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x004511a2;\n        iVar3 = fcn.004511f4();\n        iVar4 = fcn.004511f4();\n        if (iVar4 <= iVar3) goto code_r0x004511a2;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x004511a2:\n    arg_8h = &var_14h;\n    uVar5 = fcn.00450dc0();\n    fcn.00450dc0(uVar5);\n    fcn.00405e90(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.004485a0();\n    return;\n}\n",
        "token_count": 677
    },
    "00451300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451300(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x451315;\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x451328;\n    fcn.00421bf8();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x40000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x451378;\n    iVar2 = fcn.00450ca8();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x45138a;\n    iVar2 = fcn.004307b4();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x45139e;\n    fcn.004357d4();\n    puStack48 = 0x4513a7;\n    fcn.00430930();\n    puStack48 = 0x4513af;\n    fcn.004514d0();\n    uStack52 = 0x45140c;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.0044c07c();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0044c040(0);\n            (**(*in_EAX + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00450edc();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x451413;\n    uStack52 = 0x45140b;\n    fcn.004514d4();\n    return;\n}\n",
        "token_count": 593
    },
    "004514e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004514e8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.004514e8(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.004514e8(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00451540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451540(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.004514e8(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00451644": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00451644(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x8c))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.00448b74();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00448b60();\n                    }\n                }\n                fcn.00405e90(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.004485a0();\n                iVar1 = fcn.00450ca8();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.00451540();\n                if (iVar2 != 0) {\n                    fcn.0045256c();\n                }\n                var_8h = fcn.00451540();\n                var_9h = *(var_1h + 0x4621ac);\n                iVar2 = fcn.00450ccc();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.00450e2c();\n                        fcn.0045121c();\n                        uVar3 = fcn.00450e2c();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.00450e2c();\n                        fcn.0045121c();\n                        uVar3 = fcn.00450e2c();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.00450ca8();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = in_EAX[0x19] & 0xffffff00 | *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(var_8h + 0x14) & 0xffffff00 | *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.004519fc(*(var_1h + 0x4621b4));\n                }\n                else {\n                    fcn.00451854(*(var_1h + 0x4621b4), uVar4 & 0xffffff00 | var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0045107c();\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 1077
    },
    "00451854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451854(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.00450ca8();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0045121c();\n        uVar3 = fcn.004511f4();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004515a8(0x4528c4);\n            uVar4 = fcn.004511f4();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.004515a8(0x452c48);\n            fcn.004511f4();\n            fcn.0045121c();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.004515a8(0x4528c4);\n        }\n        fcn.004515a8(0x452d7c);\n    }\n    else {\n        fcn.004511f4();\n        fcn.0045121c();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.00450edc();\n    fcn.0045126c();\n    fcn.004515a8(0x452d7c);\n    return;\n}\n",
        "token_count": 971
    },
    "00451a74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451a74(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar1 = fcn.004511f4();\n        if (*(*(arg_8h + -4) + 4) <= iVar1) {\n            iVar1 = fcn.004511f4();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00451c51;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar1 = fcn.004511f4();\n        if (**(arg_8h + -4) <= iVar1) {\n            iVar1 = fcn.004511f4();\n            if (iVar1 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x00451c51;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        iVar1 = fcn.00450dc0();\n        iVar2 = fcn.00450dc0();\n        if (*(*(arg_8h + -8) + 0x1c) == '\\0') {\n            if (((iVar2 <= **(arg_8h + -4)) && (**(arg_8h + -4) <= iVar2 + *(*(arg_8h + -8) + 0x18))) &&\n               (iVar1 <= *(*(arg_8h + -4) + 4))) {\n                iVar2 = fcn.00450e2c();\n                if (*(*(arg_8h + -4) + 4) <= iVar1 + iVar2) {\n                    *(arg_8h + -0x10) = in_EAX;\n                    if (*(*(arg_8h + -4) + 4) < *(*(in_EAX + 4) + 0x44) + 0xf) {\n                        **(arg_8h + -0xc) = 0x14;\n                    }\n                    else {\n                        **(arg_8h + -0xc) = 2;\n                    }\n                }\n            }\n        }\n        else if (((iVar1 <= *(*(arg_8h + -4) + 4)) && (*(*(arg_8h + -4) + 4) <= iVar1 + *(*(arg_8h + -8) + 0x18))) &&\n                (iVar2 <= **(arg_8h + -4))) {\n            iVar1 = fcn.00450e2c();\n            if (**(arg_8h + -4) <= iVar2 + iVar1) {\n                *(arg_8h + -0x10) = in_EAX;\n                if (*(*(in_EAX + 4) + 0x40) + *(*(in_EAX + 4) + 0x48) + -0xf < **(arg_8h + -4)) {\n                    **(arg_8h + -0xc) = 0x14;\n                }\n                else {\n                    **(arg_8h + -0xc) = 2;\n                }\n            }\n        }\n    }\ncode_r0x00451c51:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004512cc();\n        if (iVar1 != 0) {\n            iVar1 = arg_8h;\n            fcn.004512cc();\n            fcn.00451a74(iVar1);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar1 = fcn.004512f4();\n        if (iVar1 != 0) {\n            fcn.004512f4();\n            fcn.00451a74(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 993
    },
    "00451ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00451ca0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0044c07c();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.0044c040();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.00421db4(),  cVar1 == '\\0' || (*(piVar3 + 0x1a6) != '\\0'))))\n            {\n                fcn.00405e40();\n                (**(*piVar3 + 0x44))(var_8h, var_4h);\n                iVar4 = sub.USER32.DLL_PtInRect(&var_18h);\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 276
    },
    "00451d34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451d34(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.00451ca0(&stack0xfffffffc);\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0xa0))) {\n        iVar2 = fcn.004512f4();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.004512f4();\n            fcn.00451a74(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.00451540();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 262
    },
    "00451dbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451dbc(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.0042275c();\n    (**(**(arg_8h + -4) + 8))();\n    if (0 < in_ECX) {\n        fcn.00422d98();\n        (**(**(arg_8h + -4) + 8))();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "00451e04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00451e8a)\n// WARNING: Removing unreachable block (ram,0x00451ea5)\n// WARNING: Removing unreachable block (ram,0x00451f41)\n// WARNING: Removing unreachable block (ram,0x00451f4f)\n\nvoid __fastcall fcn.00451e04(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x451ffc;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    fcn.004524d4();\n    fcn.004514d0();\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    (**(*param_2 + 8))();\n    (**(*param_2 + 8))();\n    if (-1 < var_20h + -1) {\n        do {\n            fcn.00451dbc(&stack0xfffffffc);\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    (**(*param_2 + 8))();\n    var_18h = 0;\n    iVar2 = 0;\n    while ((**(*param_2 + 8))(),  var_14h != *0x4621bc) {\n        iVar1 = fcn.00450ca8();\n        (**(*param_2 + 8))();\n        (**(*param_2 + 8))();\n        fcn.00451dbc(&stack0xfffffffc);\n        if (var_14h == 0) {\n            *(in_EAX + 100) = iVar1;\n        }\n        else if (var_14h == var_18h) {\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar1;\n            *(iVar1 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            var_18h = var_18h - var_14h;\n            if (0 < var_18h) {\n                do {\n                    iVar2 = *(iVar2 + 0x14);\n                    var_18h = var_18h + -1;\n                } while (var_18h != 0);\n            }\n            *(iVar2 + 0xc) = iVar1;\n            *(iVar1 + 0x18) = iVar2;\n            *(iVar1 + 0x14) = *(iVar2 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar1;\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.004514d4();\n    return;\n}\n",
        "token_count": 783
    },
    "004521c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004521c8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x4521e1;\n    var_4h = fcn.00430aac();\n    uStack52 = 0x45231e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x4521fd;\n    puStack48 = &stack0xfffffffc;\n    fcn.004477bc();\n    puStack60 = 0x452205;\n    fcn.00430d74();\n    uStack64 = 0x452301;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x45221d;\n    puStack60 = &stack0xfffffffc;\n    fcn.00431068();\n    uStack76 = 0x4522e4;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.0044c07c();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.0044c040();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0xa0) == in_EAX[5])) {\n                fcn.00448580();\n                (***in_EAX)();\n                var_1ch = *(iVar1 + 0x40) * 2 - var_1ch;\n                var_18h = *(iVar1 + 0x44) * 2 - var_18h;\n                var_14h = *(iVar1 + 0x48) * -2 + var_14h * 3 + var_1ch * -2;\n                var_10h = *(iVar1 + 0x4c) * -2 + var_10h * 3 + var_18h * -2;\n                (**(*in_EAX + 0x10))(&fcn.004521c8::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x4522eb;\n    uStack76 = 0x4522e3;\n    fcn.00431068();\n    return;\n}\n",
        "token_count": 709
    },
    "0045232c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045232c(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.0044dd1c();\n    if (((in_ECX == 0) || (*(in_ECX + 0x9c) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.00448628();\n        arg_8h_00 = &var_1ch;\n        fcn.004485e4();\n        fcn.00405e68(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[3] = iVar2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                arg_8h[2] = iVar2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00405e90(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.0044f188(0, arg_8h, 2);\n    sub.USER32.DLL_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 978
    },
    "0045256c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045256c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x4527d9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00424964();\n        uStackY52 = 0x4525ac;\n        fcn.00424964(&fcn.0045256c::var_4h);\n        fcn.00422a1c();\n        fcn.00414b70();\n        fcn.004223bc();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00424964();\n        uStackY52 = 0x4525ed;\n        fcn.00424964(&fcn.0045256c::var_ch);\n        fcn.00422a1c();\n        fcn.00414b70();\n        fcn.004223bc();\n    }\n    iVar3 = fcn.00450ccc();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.00451230();\n                uVar4 = fcn.004511f4();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00421c28();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.00452d54();\n            }\n            else {\n                iVar1 = *(*(param_2 + 0x14) + 0x18);\n                *(*(iVar3 + 8) + 0x18) = iVar1;\n                if (iVar1 == 0) {\n                    *(*(*(param_2 + 0x14) + 0x14) + 8) = *(iVar3 + 8);\n                }\n                else {\n                    *(iVar1 + 0xc) = *(iVar3 + 8);\n                }\n                iVar3 = *(iVar3 + 8);\n                *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                do {\n                    iVar3 = *(iVar3 + 0xc);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                } while (*(iVar3 + 0xc) != 0);\n                *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                if (*(iVar3 + 0xc) != 0) {\n                    *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                }\n                uStackY52 = 0x452d7c;\n                fcn.004515a8();\n                fcn.00421c28();\n                fcn.00421c28();\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.00450d78();\n                fcn.0045121c();\n                fcn.0045107c();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00421c28();\n            }\n            uStackY52 = 0x452d7c;\n            fcn.004515a8();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0045107c();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.004511f4();\n            fcn.00451230();\n            fcn.0045107c();\n        }\n        uStackY52 = 0x452d7c;\n        fcn.004515a8();\n    }\n    fcn.00421c28();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x4527e0;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 1387
    },
    "00452900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452900(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x452912;\n    fcn.00422bfc();\n    uStack24 = 0x45296b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.00422a14();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < iVar1) {\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x452972;\n    uStack24 = 0x45296a;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 238
    },
    "00452a34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452a34(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x452b6d;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x452a69;\n    (**(*param_2 + 0xc))();\n    puStack52 = 0x452a75;\n    piVar1 = fcn.00421bf8();\n    uStack56 = 0x452b1c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.0044dc88();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044dc9c();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0xc))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.00452900(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x452b23;\n    uStack56 = 0x452b1b;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 533
    },
    "00452cd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00452cd8(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004537d8();\n    fcn.00452d8c();\n    sub.USER32.DLL_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0045121c();\n    }\n    else {\n        fcn.0045121c();\n    }\n    fcn.00452c04();\n    fcn.004515a8(0x452d7c);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00452d54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00452d54(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.0044dc88();\n        if (0 < iVar1) {\n            fcn.004515a8(0x452d7c);\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00452d8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00452d8c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.00450dc0();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.00450e2c(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.00450dc0(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.00450e2c(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00430990(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.GDI32.DLL_SelectObject(iVar3, iVar4);\n        sub.GDI32.DLL_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.GDI32.DLL_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 509
    },
    "00452e78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452e78(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.004511f4();\n        iVar2 = fcn.004511f4();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            fcn.004511f4();\n            uVar3 = fcn.00411264();\n            *(arg_8h + -8) = uVar3;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00452e78(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.00452e78(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00453054": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453054(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.00450ce0();\n        if (iVar2 == 1) {\n            fcn.00453054(arg_8h);\n        }\n    }\n    iVar2 = fcn.00450ce0();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.004512d8();\n        if (iVar3 == 0) {\n            iVar3 = fcn.004512cc();\n            if (iVar3 != 0) {\n                fcn.004512cc();\n                iVar3 = fcn.004511f4();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.00450d30();\n                    fcn.0045121c();\n                    fcn.004512cc();\n                    fcn.0045126c();\n                }\n            }\n        }\n        else {\n            fcn.004512d8();\n            iVar3 = fcn.004511f4();\n            iVar4 = fcn.00450d30();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.004511f4();\n                fcn.0045121c();\n                fcn.004511f4();\n                fcn.0045121c();\n                fcn.004512d8();\n                fcn.0045126c();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.00450edc();\n    }\n    fcn.004515a8(0x452d7c, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 559
    },
    "00453214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453214(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.00450dc0();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00452f08();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00450dc0();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.00452f08();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "004532a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004532a4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff94;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x45367c;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    iVar2 = *param_2;\n    var_4h = in_EAX;\n    if (iVar2 < 0x203) {\n        if (iVar2 == 0x202) {\n            if (in_EAX[0x18] == 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00402784();\n                iVar2 = fcn.00451d34();\n                if ((iVar2 != 0) && (var_10h == 0x14)) {\n                    cVar1 = fcn.00421db4();\n                    if (cVar1 == '\\0') {\n                        fcn.00448af0();\n                    }\n                    else {\n                        fcn.0043e74c();\n                    }\n                }\n            }\n            else {\n                puStack92 = &stack0xfffffffc;\n                fcn.00452cd8();\n            }\n        }\n        else if (iVar2 == 0x20) {\n            puStack92 = &stack0xfffffffc;\n            sub.USER32.DLL_GetCursorPos(&fcn.004532a4::var_ch);\n            in_stack_ffffff94 = 0x4534fa;\n            fcn.00448724();\n            if (*(param_2 + 2) == 1) {\n                in_stack_ffffff94 = 0x45351c;\n                iVar2 = fcn.0044f188();\n                if (iVar2 == param_2[1]) {\n                    in_stack_ffffff94 = 0x453530;\n                    iVar2 = fcn.0044dd1c();\n                    if (0 < iVar2) {\n                        in_stack_ffffff94 = 0x453546;\n                        iVar2 = fcn.00451d34();\n                        if ((iVar2 != 0) && (var_10h == 0x12)) {\n                            in_stack_ffffff94 = fcn.0043fde4();\n                            sub.USER32.DLL_SetCursor();\n                            param_2[3] = 1;\n                            goto code_r0x00453666;\n                        }\n                    }\n                }\n            }\n        }\n        else if (iVar2 == 0x200) {\n            puStack92 = &stack0xfffffffc;\n            if (in_EAX[0x18] != 0) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00452d8c();\n                fcn.00402784();\n                var_4h[0x14] = var_44h;\n                var_4h[0x15] = var_40h;\n                in_stack_ffffff94 = 0x453362;\n                fcn.00453214(&stack0xfffffffc);\n                fcn.00452d8c();\n            }\n        }\n        else {\n            puStack92 = &stack0xfffffffc;\n            if (iVar2 == 0x201) {\n                puStack92 = &stack0xfffffffc;\n                fcn.00402784();\n                iVar2 = fcn.00451d34();\n                if (iVar2 != 0) {\n                    if (var_10h == 0x12) {\n                        fcn.00452c78();\n                    }\n                    else if (var_10h == 2) {\n                        in_stack_ffffff94 = 0x203;\n                        uVar3 = fcn.0044f188(0x203, 0x203, 0);\n                        iVar4 = sub.USER32.DLL_PeekMessageA(&fcn.004532a4::var_3ch, uVar3);\n                        if ((iVar4 == 0) && (cVar1 = fcn.00421db4(),  cVar1 != '\\0')) {\n                            (**(**(iVar2 + 4) + 0xc0))();\n                        }\n                        if ((*(*(iVar2 + 4) + 0x9b) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                            fcn.0044926c();\n                        }\n                        goto code_r0x00453666;\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar2 == 0x203) {\n        fcn.00402784();\n        iVar2 = fcn.00451d34();\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_10h == 2)) {\n            fcn.00447440();\n            in_stack_ffffff94 = 0x4533ba;\n            fcn.004498c4(1);\n        }\n    }\n    else {\n        if (iVar2 == 0xb030) {\n            puStack92 = &stack0xfffffffc;\n            (*in_EAX[0xc])();\n            if (param_2[3] == 0) {\n                iVar2 = (**(*var_4h + 4))();\n                if (var_10h == 0x12) {\n                    fcn.0042275c();\n                }\n                else if ((iVar2 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n                    fcn.00448580();\n                    (***var_4h)();\n                    var_20h = *(iVar2 + 0x40) * 2 - var_20h;\n                    var_1ch = *(iVar2 + 0x44) * 2 - var_1ch;\n                    var_18h = *(iVar2 + 0x48) * -2 + var_18h * 3 + var_20h * -2;\n                    var_14h = *(iVar2 + 0x4c) * -2 + var_14h * 3 + var_1ch * -2;\n                    fcn.00448bd0();\n                    fcn.004227b0();\n                    iVar2 = param_2[2];\n                    *(iVar2 + 0x18) = var_20h;\n                    *(iVar2 + 0x1c) = var_1ch;\n                    *(iVar2 + 0x20) = var_18h;\n                    *(iVar2 + 0x24) = var_14h;\n                }\n            }\n            goto code_r0x00453666;\n        }\n        puStack92 = &stack0xfffffffc;\n        if ((iVar2 == 0xb042) && (puStack92 = &stack0xfffffffc,  *param_2[2] == 0xb00b)) {\n            puStack92 = &stack0xfffffffc;\n            fcn.0045318c();\n        }\n    }\n    if (*(var_4h + 0x32) != 0) {\n        (*var_4h[0xc])();\n    }\ncode_r0x00453666:\n    *in_FS_OFFSET = in_stack_ffffff94;\n    uStack100 = 0x453683;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 1748
    },
    "0045368c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045368c(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x4663e4 == 2) && (3 < **0x4663e0)) ||\n       ((**0x4663e4 == 1 && ((4 < **0x4663e0 || ((**0x4663e0 == 4 && (9 < **0x4663e8)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.00453800();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 288
    },
    "00453764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00453764(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x466430)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 69
    },
    "00453780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00453780(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x466430)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.USER32.DLL_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004537b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004537b0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004027e4(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "00453800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453800(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.00453764();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.00453780();\n            return;\n        }\n        fcn.004537b0();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.USER32.DLL_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.USER32.DLL_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00453864": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00453864(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    if (*(*0x4663b0 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x453882;\n        uVar1 = sub.KERNEL32.DLL_SetErrorMode();\n        uStack24 = 0x4539ca;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x467158 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.KERNEL32.DLL_GetModuleHandleA(0x4539d8);\n            *0x467158 = sub.KERNEL32.DLL_GetProcAddress(in_stack_ffffffd8, 0x4539e0);\n        }\n        if (*0x4621c8 == 0) {\n            *0x4621c8 = sub.KERNEL32.DLL_LoadLibraryA(0x4539f0);\n            if (*0x4621c8 != 0) {\n                *0x46715c = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x4539fc);\n                *0x467160 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a0c);\n                *0x467164 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a20);\n                *0x467168 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a38);\n                *0x46716c = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a50);\n                *0x467170 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a64);\n                *0x467174 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a7c);\n                *0x467178 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453a94);\n                *0x46717c = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453ab0);\n                *0x467180 = sub.KERNEL32.DLL_GetProcAddress(*0x4621c8, 0x453abc);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.KERNEL32.DLL_SetErrorMode(uVar1, 0x4539d1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 656
    },
    "00453acc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00453acc(void)\n\n{\n    uint uVar1;\n    \n    if (*0x467158 != NULL) {\n        uVar1 = (**0x467158)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 54
    },
    "00453ae8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453ae8(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x4663b0 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x453b17;\n            fcn.00453acc();\n        }\n        else {\n            uStack24 = 0x453b25;\n            fcn.00453acc();\n            if (*0x4621c8 != 0) {\n                puStack28 = 0x453b39;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x46715c)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x453b50;\n                    uStack36 = uVar1;\n                    (**0x467164)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x46716c)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x46716c)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x46716c)();\n                        (**0x467164)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x4621c8);\n                    }\n                    (**0x467168)(uVar1, uStack44, uStack40);\n                    (**0x467160)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 448
    },
    "00453bc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00453bc4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4621c8 != 0) {\n        uVar1 = (**0x46717c)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "00453bd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00453bd8(void)\n\n{\n    ushort extraout_var;\n    ushort extraout_var_00;\n    \n    fcn.00421c28();\n    **0x4663ac = 0;\n    fcn.00421c28();\n    **0x4663dc = 0;\n    fcn.00421c28();\n    *0x467104 = 0;\n    fcn.00421c28();\n    sub.KERNEL32.DLL_GlobalDeleteAtom(CONCAT22(extraout_var, *0x467112));\n    fcn.0042275c();\n    sub.KERNEL32.DLL_GlobalDeleteAtom(CONCAT22(extraout_var_00, *0x467110));\n    fcn.0042275c();\n    if (*0x4621c8 != 0) {\n        sub.KERNEL32.DLL_FreeLibrary(*0x4621c8);\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00454258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00454258(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.00455058();\n    if (arg_8h == 0) {\n        arg_8h = 1;\n    }\n    while( true ) {\n        iVar1 = fcn.00454720(arg_8h);\n        if (iVar1 != 0) break;\n        if (*0x467194 == NULL) {\n            var_18h._0_2_ = 8;\n            var_4h = 0x46223c;\n            var_ch = var_ch + 2;\n            fcn.0045be65(0x4542e8, &var_4h, 0, fcn.00454340, 1, 0, 0, 0, &var_28h);\n        }\n        else {\n            (**0x467194)();\n        }\n    }\n    *in_FS_OFFSET = var_28h;\n    return iVar1;\n}\n",
        "token_count": 268
    },
    "00454500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454500(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (((arg_8h == NULL) || (arg_ch == NULL)) || (arg_10h == NULL)) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = sub.KERNEL32.DLL_GetModuleHandleA(0x4622f1);\n        if (iVar2 == 0) {\n            uVar1 = 0;\n        }\n        else {\n            iVar3 = sub.KERNEL32.DLL_GetProcAddress(iVar2, \"@Borlndmm@SysGetMem$qqri\");\n            *arg_8h = iVar3;\n            iVar3 = sub.KERNEL32.DLL_GetProcAddress(iVar2, \"@Borlndmm@SysFreeMem$qqrpv\");\n            *arg_ch = iVar3;\n            iVar2 = sub.KERNEL32.DLL_GetProcAddress(iVar2, \"@Borlndmm@SysReallocMem$qqrpvi\");\n            *arg_10h = iVar2;\n            if (((*arg_8h == 0) || (*arg_ch == 0)) || (*arg_10h == 0)) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 328
    },
    "0045457c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0045457c(void)\n\n{\n    *0x4671b0 = sub.KERNEL32.DLL_GetModuleHandleA(\"borlndmm\");\n    if (*0x4671b0 == 0) {\n        return 0;\n    }\n    fcn.004544e0();\n    fcn.00454500(0x4671a0, 0x46719c, 0x4671a4);\n    *0x4671a8 = sub.KERNEL32.DLL_GetProcAddress(*0x4671b0, \"@Borlndmm@HeapAddRef$qqrv\");\n    *0x4671ac = sub.KERNEL32.DLL_GetProcAddress(*0x4671b0, \"@Borlndmm@HeapRelease$qqrv\");\n    if ((*0x4671a8 == NULL) || (*0x4671ac == 0)) {\n        *0x462424 = 3;\n        *0x462428 = fcn.00454834;\n        *0x46242c = fcn.00454818;\n        *0x462430 = fcn.00454858;\n        *0x462434 = 0x4548a8;\n        return 1;\n    }\n    if ((*0x4671a0 == 0) || ((*0x46719c == 0 || (*0x4671a4 == 0)))) {\n        fcn.00459fb0(\"hrdir_b.c: GetMem or FreeMem or ReallocMem from borlndmm failed\");\n    }\n    if (*0x462420 == 0) {\n        if (*0x462424 == 0) goto code_r0x00454660;\n    }\n    fcn.00459fb0(\"hrdir_b.c: FATAL!!! memory has been allocated prior to heap redirector hook!\");\ncode_r0x00454660:\n    *0x462428 = fcn.004546b0;\n    *0x46242c = fcn.004546c4;\n    *0x462430 = fcn.004546dc;\n    *0x462434 = 0x454718;\n    *0x462424 = 2;\n    fcn.004548f0(*0x4671a0, *0x46719c, *0x4671a4);\n    (**0x4671a8)();\n    return 1;\n}\n",
        "token_count": 524
    },
    "004548ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004548ac(uint param_1, int32_t param_2)\n\n{\n    if ((*0x46107c == '\\0') && ((*0x46107d == '\\0' || ((*0x46107d != '\\0' && (**0x466390 == 0)))))) {\n        **0x466390 = param_2;\n    }\n    **0x466428 = 1;\n    fcn.00424a10();\n    return;\n}\n",
        "token_count": 105
    },
    "004549c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004549c4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    fcn.00454c50(0x4671d4, 0);\n    fcn.00454c50(0x4671d0, 0);\n    if (*0x4671cc != 0) {\n        *0x4671cc = 0;\n        sub.KERNEL32.DLL_DeleteCriticalSection(0x4671b4);\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 138
    },
    "00454c14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00454c14(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    if (*0x4671f0 != 0) {\n        *0x4671f0 = 0;\n        sub.KERNEL32.DLL_DeleteCriticalSection(0x4671d8);\n    }\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 102
    },
    "00455000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00455000(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 81
    },
    "004554d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004554d9(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **var_4h;\n    \n    if (*arg_14h == NULL) {\n        fcn.00459cf4(\"addr\", 0x462826, 0x515);\n    }\n    while( true ) {\n        iVar2 = *arg_8h;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_4h = *arg_14h + arg_8h[1];\n        if (arg_ch != 0) {\n            var_4h = *var_4h;\n        }\n        iVar1 = fcn.00455600(iVar2, arg_10h);\n        if (iVar1 != 0) break;\n        if ((((*(iVar2 + 4) & 2) != 0) && (iVar2 = *(iVar2 + 0x10) + iVar2,  iVar2 != 0)) &&\n           (iVar2 = fcn.004554d9(iVar2, 0, arg_10h, &var_4h),  iVar2 != 0)) {\n            *arg_14h = var_4h;\n            return 1;\n        }\n        arg_8h = arg_8h + 3;\n    }\n    *arg_14h = var_4h;\n    return 1;\n}\n",
        "token_count": 343
    },
    "004555c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004555c8(int32_t arg_8h)\n\n{\n    if (arg_8h == 0) {\n        return 0x462598;\n    }\n    if (*(arg_8h + 6) == 0) {\n        fcn.00459cf4(\"id->tpName\", 0x4625ac, 0x22);\n    }\n    return *(arg_8h + 6) + arg_8h;\n}\n",
        "token_count": 106
    },
    "00455600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455600(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    if (arg_8h == NULL) {\n        fcn.00459cf4(0x4625b7, 0x4625bb, 0x105);\n    }\n    if (arg_ch == NULL) {\n        fcn.00459cf4(0x4625c6, 0x4625ca, 0x106);\n    }\n    if (arg_ch == arg_8h) {\n        uVar3 = 1;\n    }\n    else if ((*(arg_8h + 1) == *(arg_ch + 1)) && (*arg_8h == *arg_ch)) {\n        if (((*(arg_8h + 1) | *(arg_ch + 1)) & 0x80) == 0) {\n            pcVar5 = *(arg_8h + 6) + arg_8h;\n            if (*(arg_8h + 6) == 0) {\n                fcn.00459cf4(\"tp1->tpName\", 0x4625e1, 0x11e);\n            }\n            pcVar4 = *(arg_ch + 6) + arg_ch;\n            if (*(arg_ch + 6) == 0) {\n                fcn.00459cf4(\"tp2->tpName\", 0x4625f8, 0x11f);\n            }\n            do {\n                cVar1 = *pcVar5;\n                cVar2 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n                pcVar5 = pcVar5 + 1;\n                if (cVar2 != cVar1) {\n                    return 0;\n                }\n            } while (cVar1 != '\\0');\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 476
    },
    "00455880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00455880(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    \n    fcn.00455058();\n    if (arg_8h == 0) {\n        var_2ch = 0x4624a4;\n        fcn.0045be65(0x454a84, &var_2ch, 0, fcn.004559b8, 1, 0, 0, 0, &var_24h);\n    }\n    if (arg_ch != 0) {\n        if ((*(arg_10h + 0xc) & 0x80) == 0) {\n            arg_ch = arg_ch - *(arg_ch + -4);\n            if (*(arg_ch + -4) != 0) {\n                fcn.00459cf4(0x462678, 0x46269f, 0x29e);\n            }\n            arg_10h = *(arg_ch + -0xc);\n        }\n        else {\n            arg_10h = 0;\n        }\n    }\n    var_28h = arg_ch + arg_10h >> 4 & 0xff;\n    for (puVar2 = *(var_28h * 4 + 0x4671f8); (puVar2 != NULL && ((arg_10h != puVar2[1] || (arg_ch != puVar2[2]))));\n        puVar2 = puVar2[3]) {\n    }\n    if (puVar2 == NULL) {\n        puVar2 = fcn.00454258(0x14);\n        if (puVar2 != NULL) {\n            uVar1 = *(var_28h * 4 + 0x4671f8);\n            *puVar2 = 0x4628d4;\n            puVar2[1] = arg_10h;\n            *puVar2 = 0x4628c4;\n            puVar2[2] = arg_ch;\n            puVar2[3] = uVar1;\n            puVar2[4] = 0;\n        }\n        *(var_28h * 4 + 0x4671f8) = puVar2;\n    }\n    *in_FS_OFFSET = var_24h;\n    return puVar2;\n}\n",
        "token_count": 583
    },
    "004559d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004559d0(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    uint uVar3;\n    uint32_t arg_10h;\n    \n    if (*(arg_8h + 4) == 0) {\n        if (*(arg_8h + 0x10) == 0) {\n            if (*(arg_8h + 8) == 0) {\n                pcVar2 = \"<notype>\";\n            }\n            else {\n                puVar1 = *(*(arg_8h + 8) + -0x2c);\n                arg_10h = *puVar1;\n                uVar3 = fcn.004543fc(arg_10h + 1);\n                *(arg_8h + 0x10) = uVar3;\n                fcn.00454ccc(*(arg_8h + 0x10), puVar1 + 1, arg_10h);\n                *(*(arg_8h + 0x10) + arg_10h) = 0;\n                pcVar2 = *(arg_8h + 0x10);\n            }\n        }\n        else {\n            pcVar2 = *(arg_8h + 0x10);\n        }\n    }\n    else {\n        pcVar2 = fcn.004555c8(*(arg_8h + 4));\n    }\n    return pcVar2;\n}\n",
        "token_count": 315
    },
    "00455a38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00455a38(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    arg_10h_00 = arg_10h;\n    iVar2 = arg_ch;\n    if (((arg_8h != 0) && (iVar1 = fcn.004554d9(*(arg_ch + 0x10) + arg_ch, 0, arg_10h, &arg_8h),  iVar1 == 0)) &&\n       (iVar2 = fcn.004554d9(*(iVar2 + 0x12) + iVar2, 1, arg_10h_00, &arg_8h),  iVar2 == 0)) {\n        fcn.00459cf4(\"!\\\"Can\\'t adjust class address (no base class entry found)\\\"\", \"xxtype.cpp\", 0x57e);\n        arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 239
    },
    "00455b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00455b80(void)\n\n{\n    if (*0x4628d8 == NULL) {\n        *0x4628d8 = fcn.00455ba8;\n    }\n    if (*0x4628dc == 0) {\n        *0x4628dc = 0x455bf8;\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "00455c4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00455c4c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00455058();\n    iVar1 = fcn.0040143c();\n    *(iVar1 + 0x14) = *(iVar1 + 0x14) & 0xfffffffd;\n    if (**0x467600 == 2) {\n        fcn.0045ba29(4, 1);\n    }\n    fcn.00456174();\n    (**0x4628d8)();\n    fcn.00459fdc();\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 156
    },
    "00455cc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00455cc0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040143c();\n    *(iVar1 + 0x14) = *(iVar1 + 0x14) & 0xfffffffd;\n    if (**0x467600 == 2) {\n        fcn.0045ba29(5, 1);\n    }\n    (**0x4628dc)();\n    fcn.00459fdc();\n    return;\n}\n",
        "token_count": 106
    },
    "00455d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455d78(uint32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *var_8h;\n    uint var_4h;\n    \n    if (*arg_8h == 0xeedfae6) {\n        uVar1 = 0;\n    }\n    else {\n        if ((*arg_8h == 0xeefface) || (*arg_8h == 0xeedface)) {\n            fcn.00455f42();\n            fcn.00455c4c();\n        }\n        if ((*arg_8h == 0xc00000fd) && (*0x4629f8 != 0)) {\n            fcn.00459fb0(\"Stack Overflow!\");\n        }\n        if ((*0x467608 != NULL) && (iVar2 = (**0x467608)(arg_8h, arg_ch, arg_10h, arg_14h),  iVar2 == 0)) {\n            return 0;\n        }\n        if ((*0x467604 != NULL) && (iVar2 = (**0x467604)(arg_8h, arg_ch, arg_10h, arg_14h),  iVar2 == 0)) {\n            return 0;\n        }\n        if (((*0x46aa48 != NULL) && ((**0x46aa48 == 1 || (**0x46aa48 == 2)))) &&\n           ((*arg_8h < 0xeedface || (0xeefface < *arg_8h)))) {\n            fcn.0045ba29(2, 3);\n        }\n        var_8h = arg_8h;\n        var_4h = arg_10h;\n        uVar1 = sub.KERNEL32.DLL_UnhandledExceptionFilter(&var_8h);\n    }\n    return uVar1;\n}\n",
        "token_count": 426
    },
    "0045602c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045602c(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint var_208h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < *0x462ec4) {\n        if (arg_10h + 1 < 2) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.004563f8(arg_8h);\n            if ((*(arg_8h * 4 + 0x462ec9) & 8) != 0) {\n                fcn.00455fa8(arg_8h, 0, 2);\n            }\n            if ((*(arg_8h * 4 + 0x462ec9) & 0x40) == 0) {\n                iVar2 = fcn.004561b8(arg_8h, arg_ch, arg_10h);\n            }\n            else {\n                var_4h = 0;\n                var_8h = 0;\n                pcVar4 = arg_ch;\n                while (pcVar4 - arg_ch < arg_10h) {\n                    puVar3 = &var_208h;\n                    while ((puVar3 - &var_208h < 0x1ff && (pcVar4 - arg_ch < arg_10h))) {\n                        cVar1 = *pcVar4;\n                        pcVar4 = pcVar4 + 1;\n                        if (cVar1 == '\\n') {\n                            var_4h = var_4h + 1;\n                            *puVar3 = '\\r';\n                            *(puVar3 + 1) = '\\n';\n                            puVar3 = puVar3 + 2;\n                        }\n                        else {\n                            *puVar3 = cVar1;\n                            puVar3 = puVar3 + 1;\n                        }\n                    }\n                    iVar2 = fcn.004561b8(arg_8h, &var_208h, puVar3 - &var_208h);\n                    if (iVar2 != puVar3 - &var_208h) {\n                        if (iVar2 == -1) {\n                            iVar2 = -1;\n                        }\n                        else {\n                            iVar2 = (var_8h - var_4h) + iVar2;\n                        }\n                        goto code_r0x0045614b;\n                    }\n                    var_8h = var_8h + iVar2;\n                }\n                iVar2 = var_8h - var_4h;\n            }\ncode_r0x0045614b:\n            fcn.0045648c(arg_8h);\n        }\n    }\n    else {\n        iVar2 = fcn.004567ac(0xfffffffa);\n    }\n    return iVar2;\n}\n",
        "token_count": 639
    },
    "00456174": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00456174(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    fcn.00456a60();\n    iVar2 = 0;\n    arg_8h = 0x462a14;\n    iVar1 = *0x462ec4;\n    while (iVar1 != 0) {\n        if (((*(arg_8h + 0x12) & 3) != 0) && (*(arg_8h + 8) != 0)) {\n            fcn.0045629c(arg_8h);\n            iVar2 = iVar2 + 1;\n        }\n        arg_8h = arg_8h + 0x18;\n        iVar1 = iVar1 + -1;\n    }\n    fcn.00456a70();\n    return iVar2;\n}\n",
        "token_count": 192
    },
    "0045621c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045621c(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    if ((*(arg_8h + 0x12) & 4) != 0) {\n        fcn.00454730(arg_8h[1]);\n    }\n    *(arg_8h + 0x12) = *(arg_8h + 0x12) & 0xfff3;\n    arg_8h[3] = 0;\n    arg_8h[1] = arg_8h + 5;\n    *arg_8h = arg_8h + 5;\n    if ((arg_10h != 2) && (arg_14h != 0)) {\n        *0x463e58 = 0x457588;\n        if (arg_ch == 0) {\n            arg_ch = fcn.00454720(arg_14h);\n            if (arg_ch == 0) {\n                return 0xffffffff;\n            }\n            *(arg_8h + 0x12) = *(arg_8h + 0x12) | 4;\n        }\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch;\n        arg_8h[3] = arg_14h;\n        if (arg_10h == 1) {\n            *(arg_8h + 0x12) = *(arg_8h + 0x12) | 8;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 351
    },
    "0045629c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045629c(int32_t **arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    \n    if (arg_8h == NULL) {\n        fcn.0045632c();\n        uVar1 = 0;\n    }\n    else if (arg_8h == *(arg_8h + 0x17)) {\n        fcn.00456a80(arg_8h);\n        if (arg_8h[2] < 0) {\n            arg_10h = arg_8h[3] + arg_8h[2] + 1;\n            arg_8h[2] = arg_8h[2] - arg_10h;\n            *arg_8h = arg_8h[1];\n            iVar2 = fcn.0045602c(*(arg_8h + 0x16), arg_8h[1], arg_10h);\n            if ((arg_10h == iVar2) || ((*(arg_8h + 0x13) & 2) != 0)) {\n                uVar1 = 0;\n            }\n            else {\n                *(arg_8h + 0x12) = *(arg_8h + 0x12) | 0x10;\n                uVar1 = 0xffffffff;\n            }\n        }\n        else {\n            if ((((*(arg_8h + 0x12) & 8) != 0) || (arg_8h + 5 == *arg_8h)) && (arg_8h[2] = NULL,  arg_8h + 5 == *arg_8h)\n               ) {\n                *arg_8h = arg_8h[1];\n            }\n            uVar1 = 0;\n        }\n        fcn.00456b48(arg_8h);\n    }\n    else {\n        uVar1 = 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 440
    },
    "004563f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004563f8(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    \n    if ((*0x4677a0 == 0) || (*(*0x4677a0 + arg_8h * 4) == 0)) {\n        fcn.004563b4();\n        if (*0x4677a0 == 0) {\n            arg_8h_00 = *0x462ec4 << 2;\n            *0x4677a0 = fcn.00454720(arg_8h_00);\n            if (*0x4677a0 == 0) {\n                fcn.0045b26c(\"allocating handle lock table\");\n            }\n            fcn.00454d3c(*0x4677a0, 0, arg_8h_00);\n        }\n        if (*(*0x4677a0 + arg_8h * 4) == 0) {\n            fcn.0045b1e8(arg_8h * 4 + *0x4677a0, \"creating handle lock\");\n        }\n        fcn.004563e8();\n    }\n    fcn.0045b24c(*(*0x4677a0 + arg_8h * 4));\n    return;\n}\n",
        "token_count": 290
    },
    "0045648c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045648c(int32_t arg_8h)\n\n{\n    if (*0x4677a0 == 0) {\n        fcn.00459cf4(\"hlocks\", \"handles.c\", 0xdc);\n    }\n    fcn.0045b25c(*(*0x4677a0 + arg_8h * 4));\n    if (*0x462f98 != 0) {\n        fcn.004563c4();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004564d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004564d4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    for (piVar2 = 0x462ec8; (iVar1 < *0x462ec4 && (*piVar2 != 0)); piVar2 = piVar2 + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    if (iVar1 == *0x462ec4) {\n        return -1;\n    }\n    *(iVar1 * 4 + 0x462ec8) = arg_ch;\n    *(iVar1 * 4 + 0x4676d4) = arg_8h;\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "00456514": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00456514(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (arg_ch == 0xffffffff) {\n        arg_ch = 0;\n        for (piVar2 = 0x462ec8; (arg_ch < *0x462ec4 && (*piVar2 != 0)); piVar2 = piVar2 + 1) {\n            arg_ch = arg_ch + 1;\n        }\n    }\n    if ((arg_8h < *0x462ec4) && (arg_ch < *0x462ec4)) {\n        iVar1 = *(arg_8h * 4 + 0x462ec8);\n        if ((iVar1 != 0) && (*(arg_ch * 4 + 0x462ec8) == 0)) {\n            *(arg_ch * 4 + 0x462ec8) = iVar1;\n            *(arg_ch * 4 + 0x4676d4) = arg_10h;\n            return arg_ch;\n        }\n        return 0xffffffff;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 267
    },
    "00456598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00456598(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t *piVar4;\n    uint32_t *var_8h;\n    int32_t var_4h;\n    \n    piVar4 = *0x462ec4 * 4 + 0x462ec4;\n    iVar2 = *0x462ec4;\n    if (*0x462ec4 != 0) {\n        do {\n            if (*piVar4 != 0) break;\n            iVar2 = iVar2 + -1;\n            piVar4 = piVar4 + -1;\n        } while (iVar2 != 0);\n    }\n    if (arg_8h == NULL) {\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = iVar2 * 5 + 4;\n        }\n    }\n    else {\n        *arg_8h = iVar2;\n        var_4h = 0;\n        arg_8h = arg_8h + 1;\n        var_8h = 0x462ec8;\n        if (0 < iVar2) {\n            do {\n                uVar3 = 1;\n                uVar1 = *var_8h;\n                if ((uVar1 & 0x800) != 0) {\n                    uVar3 = 0x21;\n                }\n                if ((uVar1 & 0x8000) == 0) {\n                    uVar3 = uVar3 | 0x80;\n                }\n                if ((uVar1 & 0x2000) != 0) {\n                    uVar3 = uVar3 | 0x40;\n                }\n                *arg_8h = uVar3;\n                arg_8h = arg_8h + 1;\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 1;\n            } while (var_4h < iVar2);\n        }\n        fcn.00454ccc(arg_8h, 0x4676d4, iVar2 << 2);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 504
    },
    "0045682c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045682c(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    fcn.00454ccc(*arg_10h, arg_8h, arg_ch);\n    if (arg_14h != 0) {\n        *arg_10h = *arg_10h + arg_ch;\n        **arg_10h = 0;\n    }\n    return arg_ch;\n}\n",
        "token_count": 110
    },
    "0045685c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045685c(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch != 0) {\n        *arg_8h = 0;\n    }\n    fcn.00456c4c(fcn.0045682c, &arg_8h, arg_10h, 1, arg_ch, &arg_14h);\n    return;\n}\n",
        "token_count": 104
    },
    "0045688c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045688c(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch != 0) {\n        *arg_8h = 0;\n    }\n    fcn.00456c4c(fcn.0045682c, &arg_8h, arg_10h, 1, arg_ch, arg_14h);\n    return;\n}\n",
        "token_count": 103
    },
    "004568bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004568bc(uchar *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = arg_ch;\n    if (arg_ch != 0) {\n        *arg_8h = 0;\n    }\n    uVar2 = fcn.00456c4c(fcn.0045682c, &arg_8h, arg_10h, 1, arg_ch, &arg_14h);\n    if (uVar1 < uVar2) {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 160
    },
    "004568f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004568f4(uchar *arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = arg_ch;\n    if (arg_ch != 0) {\n        *arg_8h = 0;\n    }\n    uVar2 = fcn.00456c4c(fcn.0045682c, &arg_8h, arg_10h, 1, arg_ch, arg_14h);\n    if (uVar1 < uVar2) {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 160
    },
    "00456a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456a80(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    iVar1 = (arg_8h + -0x462a14) / 0x18;\n    if ((*0x4677a8 == 0) || (*(*0x4677a8 + iVar1 * 4) == 0)) {\n        fcn.00456a60();\n        if (*0x4677a8 == 0) {\n            arg_8h_00 = *0x462ec4 << 2;\n            *0x4677a8 = fcn.00454720(arg_8h_00);\n            if (*0x4677a8 == 0) {\n                fcn.0045b26c(\"allocating stream lock table\");\n            }\n            fcn.00454d3c(*0x4677a8, 0, arg_8h_00);\n        }\n        if (*(*0x4677a8 + iVar1 * 4) == 0) {\n            fcn.0045b1e8(iVar1 * 4 + *0x4677a8, \"creating stream lock\");\n        }\n        fcn.00456a70();\n    }\n    fcn.0045b24c(*(*0x4677a8 + iVar1 * 4));\n    return;\n}\n",
        "token_count": 313
    },
    "00456b48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456b48(int32_t arg_8h)\n\n{\n    if (*0x4677a8 == 0) {\n        fcn.00459cf4(\"strm_locks\", \"streams.c\", 0x122);\n    }\n    fcn.0045b25c(*(*0x4677a8 + ((arg_8h + -0x462a14) / 0x18) * 4));\n    if (*0x4635a4 != 0) {\n        fcn.00456b24();\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00456b9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456b9c(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 1;\n    if (*(arg_8h + 0x50) != 0) {\n        if ((*(arg_8h + 100) != NULL) &&\n           (uVar1 = **(arg_8h + 100),  uVar1 < *(arg_8h + 0x5c) || uVar1 == *(arg_8h + 0x5c))) {\n            uVar2 = 0;\n        }\n        iVar3 = (**(arg_8h + 0x54))(arg_8h, *(arg_8h + 0x50), *(arg_8h + 0x58), uVar2);\n        if (iVar3 == 0) {\n            *(arg_8h + 0x60) = 1;\n        }\n        *(arg_8h + 0x50) = 0;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "00457818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.00457818(uint32_t arg_8h, uint arg_ch)\n\n{\n    if (0xff < arg_8h) {\n        return 0;\n    }\n    if ((*(*0x4639c4 + 8) == 0) && (*(*0x4639c4 + 0x10) != 0)) {\n        return arg_ch & *(*(*0x4639c4 + 0x10) + 2 + arg_8h * 2);\n    }\n    return L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10 \"\n           [arg_8h] & arg_ch;\n}\n",
        "token_count": 305
    },
    "0045785c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuint32_t __cdecl fcn.0045785c(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t in_ECX;\n    uint var_2h;\n    \n    uVar1 = arg_ch;\n    if (arg_8h == 0xffff) {\n        arg_ch = 0;\n    }\n    else if ((*(*0x4639c4 + 8) == 0) || (0xff < arg_8h)) {\n        sub.KERNEL32.DLL_GetStringTypeW(1, &arg_8h, 1, &var_2h);\n        arg_ch = in_ECX >> 0x10 & uVar1;\n    }\n    else {\n        arg_ch = L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10 \"\n                 [arg_8h] & arg_ch;\n    }\n    return arg_ch;\n}\n",
        "token_count": 378
    },
    "004578b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004578b4(uint8_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (((arg_8h != NULL) && (*arg_8h != 0)) && (arg_ch != 0)) {\n        if ((*(*arg_8h + 0x4677ad) & 4) == 0) {\n            iVar1 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_8h, 1, 0, 0);\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n            return 1;\n        }\n        if (1 < arg_ch) {\n            iVar1 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_8h, 2, 0, 0);\n            if (iVar1 != 0) {\n                return 2;\n            }\n        }\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 238
    },
    "00457930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00457930(uint16_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((arg_ch == NULL) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else if (*arg_ch == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 0;\n        }\n        uVar1 = 0;\n    }\n    else if ((*0x4639c4)[2] == 0) {\n        if ((*(*arg_ch + 0x4677ad) & 4) == 0) {\n            iVar2 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_ch, 1, arg_8h, arg_8h != NULL);\n            if (iVar2 == 0) {\n                uVar1 = 0xffffffff;\n            }\n            else {\n                uVar1 = 1;\n            }\n        }\n        else if (((arg_10h < 2) ||\n                 (iVar2 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_ch, 2, arg_8h, arg_8h != NULL), \n                 iVar2 == 0)) && ((arg_10h < 2 || (arg_ch[1] == 0)))) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            uVar1 = 2;\n        }\n    }\n    else {\n        if (arg_8h != NULL) {\n            *arg_8h = *arg_ch;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 402
    },
    "00457a04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457a04(uchar *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        return 0;\n    }\n    if ((*0x4639c4)[2] != 0) {\n        if (0xff < arg_ch) {\n            return -1;\n        }\n        *arg_8h = arg_ch;\n        return 1;\n    }\n    var_4h = 0;\n    iVar1 = sub.KERNEL32.DLL_WideCharToMultiByte(**0x4639c4, 0x220, &arg_ch, 1, arg_8h, 2, 0, &var_4h);\n    if ((iVar1 != 0) && (var_4h == 0)) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 207
    },
    "00457a78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00457a78(uint16_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    if ((arg_8h == NULL) || (arg_10h != 0)) {\n        if (arg_8h == NULL) {\n            if ((*0x4639c4)[2] == 0) {\n                iVar1 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_ch, 0xffffffff, 0, 0);\n                if (iVar1 == 0) {\n                    uVar3 = 0xffffffff;\n                }\n                else {\n                    uVar3 = iVar1 - 1;\n                }\n            }\n            else {\n                uVar3 = fcn.00454e1c(arg_ch);\n            }\n        }\n        else if ((*0x4639c4)[2] == 0) {\n            iVar1 = sub.KERNEL32.DLL_MultiByteToWideChar(**0x4639c4, 9, arg_ch, 0xffffffff, arg_8h, arg_10h);\n            if (iVar1 == 0) {\n                iVar1 = sub.KERNEL32.DLL_GetLastError();\n                puVar2 = arg_ch;\n                uVar3 = arg_10h;\n                if (iVar1 == 0x7a) {\n                    for (; (uVar3 != 0 && (*puVar2 != 0)); puVar2 = puVar2 + 1) {\n                        if ((*(*puVar2 + 0x4677ad) & 4) != 0) {\n                            puVar2 = puVar2 + 1;\n                        }\n                        uVar3 = uVar3 - 1;\n                    }\n                    uVar3 = sub.KERNEL32.DLL_MultiByteToWideChar\n                                      (**0x4639c4, 1, arg_ch, puVar2 - arg_ch, arg_8h, arg_10h);\n                    if (uVar3 == 0) {\n                        uVar3 = 0xffffffff;\n                    }\n                }\n                else {\n                    uVar3 = 0xffffffff;\n                }\n            }\n            else {\n                uVar3 = iVar1 - 1;\n            }\n        }\n        else if (arg_10h != 0) {\n            do {\n                *arg_8h = arg_ch[uVar3];\n                if (arg_ch[uVar3] == 0) {\n                    return uVar3;\n                }\n                uVar3 = uVar3 + 1;\n                arg_8h = arg_8h + 1;\n            } while (uVar3 < arg_10h);\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 650
    },
    "00457ba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457ba4(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_ch + 1;\n    for (piVar1 = arg_8h; (iVar2 = iVar2 + -1,  iVar2 != 0 && (*piVar1 != 0)); piVar1 = piVar1 + 1) {\n    }\n    if ((iVar2 != 0) && (*piVar1 == 0)) {\n        iVar2 = piVar1 - arg_8h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((piVar1 - arg_8h & 1U) != 0);\n        }\n        return iVar2 + 1;\n    }\n    return arg_ch;\n}\n",
        "token_count": 195
    },
    "00457be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00457be0(int32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t var_ch;\n    int32_t var_6h;\n    \n    var_ch = 0;\n    uVar5 = 0;\n    if ((arg_8h == 0) || (arg_10h != 0)) {\n        if (arg_8h == 0) {\n            if ((*0x4639c4)[2] == 0) {\n                iVar2 = sub.KERNEL32.DLL_WideCharToMultiByte(**0x4639c4, 0x220, arg_ch, 0xffffffff, 0, 0, 0, &var_ch);\n                if ((iVar2 == 0) || (var_ch != 0)) {\n                    uVar5 = 0xffffffff;\n                }\n                else {\n                    uVar5 = iVar2 - 1;\n                }\n            }\n            else {\n                uVar5 = fcn.00455000(arg_ch);\n            }\n        }\n        else if ((*0x4639c4)[2] == 0) {\n            uVar5 = sub.KERNEL32.DLL_WideCharToMultiByte\n                              (**0x4639c4, 0x220, arg_ch, 0xffffffff, arg_8h, arg_10h, 0, &var_ch);\n            if ((uVar5 == 0) || (var_ch != 0)) {\n                if ((var_ch == 0) && (iVar2 = sub.KERNEL32.DLL_GetLastError(),  iVar2 == 0x7a)) {\n                    while (uVar5 < arg_10h) {\n                        *NULL = sub.KERNEL32.DLL_WideCharToMultiByte();\n                        if ((*NULL == 0) || (var_ch != 0)) {\n                            return 0xffffffff;\n                        }\n                        if (arg_10h < *NULL + uVar5) {\n                            return uVar5;\n                        }\n                        iVar2 = 0;\n                        pcVar4 = arg_8h + uVar5;\n                        puVar3 = &var_6h;\n                        if (0 < *NULL) {\n                            do {\n                                cVar1 = *puVar3;\n                                *pcVar4 = cVar1;\n                                if (cVar1 == '\\0') {\n                                    return uVar5;\n                                }\n                                puVar3 = puVar3 + 1;\n                                iVar2 = iVar2 + 1;\n                                pcVar4 = pcVar4 + 1;\n                                uVar5 = uVar5 + 1;\n                            } while (iVar2 < *NULL);\n                        }\n                    }\n                }\n                else {\n                    uVar5 = 0xffffffff;\n                }\n            }\n            else {\n                uVar5 = uVar5 - 1;\n            }\n        }\n        else if (arg_10h != 0) {\n            while (*arg_ch < 0x100) {\n                *(arg_8h + uVar5) = *arg_ch;\n                if (*arg_ch == 0) {\n                    return uVar5;\n                }\n                uVar5 = uVar5 + 1;\n                arg_ch = arg_ch + 1;\n                if (arg_10h <= uVar5) {\n                    return uVar5;\n                }\n            }\n            uVar5 = 0xffffffff;\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 795
    },
    "00458218": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00458245)\n\nchar * __cdecl fcn.00458218(uint arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    uint var_44h;\n    \n    pcVar3 = arg_10h;\n    if ((1 < arg_14h) && (arg_14h < 0x25)) {\n        if ((arg_ch != 0) && ((arg_ch < 0 && (arg_18h != '\\0')))) {\n            *arg_10h = '-';\n            pcVar3 = arg_10h + 1;\n        }\n        puVar2 = &var_44h;\n        do {\n            cVar1 = fcn.00457ee2(arg_14h, arg_14h >> 0x1f);\n            *puVar2 = cVar1;\n            puVar2 = puVar2 + 1;\n            iVar4 = fcn.00457e1f();\n        } while (iVar4 != 0);\n        while (puVar2 != &var_44h) {\n            puVar2 = puVar2 + -1;\n            cVar1 = *puVar2;\n            if (cVar1 < '\\n') {\n                *pcVar3 = cVar1 + '0';\n                pcVar3 = pcVar3 + 1;\n            }\n            else {\n                *pcVar3 = cVar1 + arg_1ch + -10;\n                pcVar3 = pcVar3 + 1;\n            }\n        }\n    }\n    *pcVar3 = '\\0';\n    return arg_10h;\n}\n",
        "token_count": 402
    },
    "004582cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004582cc(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    float10 fVar5;\n    uint16_t uVar6;\n    uint16_t uVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_6h;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0x407e;\n        uVar4 = 0x3f6a;\n    }\n    else {\n        uVar2 = 0x43fe;\n        uVar4 = 0x3bcd;\n    }\n    uVar3 = noname_3 & 0x7fff;\n    if (uVar3 == 0x7fff) {\n        return CONCAT28(noname_3, CONCAT26(uVar7, CONCAT24(uVar6, arg_ch)));\n    }\n    if (uVar2 < uVar3) {\n        _var_10h = CONCAT44(arg_1ch, arg_18h);\n    }\n    else {\n        if (uVar2 == uVar3) {\n            arg_8h_00 = fcn.00458120(0, 0);\n            fcn.00458120(0xc00, 0xc00);\n            fcn.00458120(arg_8h_00, 0xc00);\n            return CONCAT28(noname_3, CONCAT26(uVar7, CONCAT24(uVar6, arg_ch)));\n        }\n        if ((arg_ch | uVar3 | arg_ch._2_2_ | uVar6 | uVar7) == 0) {\n            return CONCAT28(noname_3, CONCAT26(uVar7, CONCAT24(uVar6, arg_ch)));\n        }\n        if (uVar4 <= uVar3) {\n            return CONCAT28(noname_3, CONCAT26(uVar7, CONCAT24(uVar6, arg_ch)));\n        }\n        _var_10h = 0.0;\n    }\n    puVar1 = fcn.00459e0c();\n    *puVar1 = 0x22;\n    if ((noname_3 & 0x8000) == 0) {\n        fVar5 = _var_10h;\n    }\n    else {\n        fVar5 = -_var_10h;\n    }\n    return fVar5;\n}\n",
        "token_count": 582
    },
    "004583e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.004583e4(uint32_t arg_8h, char *arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint var_24h;\n    \n    pcVar3 = arg_ch;\n    if ((1 < arg_10h) && (arg_10h < 0x25)) {\n        if ((arg_8h < 0) && (arg_14h != '\\0')) {\n            *arg_ch = '-';\n            pcVar3 = arg_ch + 1;\n            arg_8h = -arg_8h;\n        }\n        puVar2 = &var_24h;\n        do {\n            *puVar2 = arg_8h % arg_10h;\n            puVar2 = puVar2 + 1;\n            arg_8h = arg_8h / arg_10h;\n        } while (arg_8h != 0);\n        while (puVar2 != &var_24h) {\n            puVar2 = puVar2 + -1;\n            cVar1 = *puVar2;\n            if (cVar1 < '\\n') {\n                *pcVar3 = cVar1 + '0';\n                pcVar3 = pcVar3 + 1;\n            }\n            else {\n                *pcVar3 = cVar1 + arg_18h + -10;\n                pcVar3 = pcVar3 + 1;\n            }\n        }\n    }\n    *pcVar3 = '\\0';\n    return arg_ch;\n}\n",
        "token_count": 356
    },
    "00458584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00458584(uint arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint32_t extraout_ECX;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint var_38h;\n    int32_t var_ah;\n    int32_t var_4h;\n    \n    puVar4 = fcn.004575bc(0xe);\n    var_ah._0_1_ = *puVar4;\n    if (0x28 < arg_ch) {\n        arg_ch = 0x28;\n    }\n    stack0xfffffff4 = arg_ch;\n    var_ah._1_1_ = arg_14h & 0xdf;\n    if (var_ah._1_1_ == 0x46) {\n        iVar12 = -arg_ch;\n        if (-arg_ch != 0 && arg_ch < 1) {\n            arg_ch = 0;\n            iVar12 = 0;\n        }\n    }\n    else if (arg_ch < 1) {\n        iVar12 = 1;\n    }\n    else {\n        iVar12 = arg_ch;\n        if (var_ah._1_1_ == 0x45) {\n            iVar12 = arg_ch + 1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    uVar13 = fcn.00459534(arg_8h, iVar12, &var_4h, &var_38h, arg_1ch);\n    uVar7 = uVar13;\n    if (uVar7 == 0x7fff) {\n        if (var_4h == 0) {\n            pcVar5 = 0x463d0d;\n        }\n        else {\n            pcVar5 = 0x463d08;\n        }\n        uVar7 = 0xffffffff;\n        do {\n            pcVar11 = pcVar5;\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            pcVar11 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar11;\n        } while (cVar1 != '\\0');\n        uVar7 = ~uVar7;\n        puVar9 = pcVar11 + -uVar7;\n        puVar6 = arg_10h;\n        for (uVar8 = uVar7 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar6 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar7 = uVar7 & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar6 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        return arg_10h;\n    }\n    if (uVar7 == 0x7ffe) {\n        if (var_4h == 0) {\n            pcVar5 = 0x463d17;\n        }\n        else {\n            pcVar5 = 0x463d12;\n        }\n        uVar7 = 0xffffffff;\n        do {\n            pcVar11 = pcVar5;\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            pcVar11 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar11;\n        } while (cVar1 != '\\0');\n        uVar7 = ~uVar7;\n        puVar9 = pcVar11 + -uVar7;\n        puVar6 = arg_10h;\n        for (uVar8 = uVar7 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n            *puVar6 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar7 = uVar7 & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar6 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        return arg_10h;\n    }\n    puVar9 = arg_10h;\n    if (var_4h != 0) {\n        *arg_10h = 0x2d;\n        puVar9 = arg_10h + 1;\n    }\n    if (var_ah._1_1_ != 0x46) {\n        if ((var_ah._1_1_ != 0x47) || (uVar7 < -3)) goto code_r0x0045874e;\n        iVar12 = arg_ch;\n        if (arg_ch == 0) {\n            iVar12 = 1;\n        }\n        if (iVar12 < uVar7) goto code_r0x0045874e;\n    }\n    if (uVar7 < 0x29) {\n        uVar3 = uVar13;\n        if (uVar7 < 1) {\n            *puVar9 = 0x30;\n            *(puVar9 + 1) = var_ah;\n            puVar9 = puVar9 + 2;\n            for (; uVar3 = uVar13 & 0xffffff0000000000 | uVar7,  uVar7 != 0; uVar7 = uVar7 + 1) {\n                *puVar9 = 0x30;\n                puVar9 = puVar9 + 1;\n            }\n        }\n        iVar12 = 0;\n        puVar6 = &var_38h;\n        while( true ) {\n            if (*puVar6 == '\\0') break;\n            *puVar9 = *puVar6;\n            puVar10 = puVar9 + 1;\n            uVar7 = uVar3 - 1;\n            if (uVar7 == 0) {\n                *puVar10 = var_ah;\n                puVar10 = puVar9 + 2;\n                iVar12 = iVar12 + 1;\n            }\n            uVar3 = uVar3 & 0xffffff0000000000 | uVar7;\n            puVar6 = puVar6 + 1;\n            puVar9 = puVar10;\n        }\n        if (iVar12 + stack0xfffffff4 < arg_ch) {\n            arg_ch = arg_ch - (iVar12 + stack0xfffffff4);\n            puVar6 = fcn.00454d3c(puVar9, 0x30, arg_ch);\n            puVar9 = puVar9 + arg_ch;\n        }\n        else if ((uVar3 != 1) && (arg_18h == '\\0')) {\n            puVar6 = fcn.00458540(uVar3 >> 0x20 & 0xffffff00 | arg_14h, arg_10h, puVar9);\n            puVar9 = puVar6;\n        }\n        if (puVar9 == arg_10h) {\n            *puVar9 = 0x30;\n            puVar9 = puVar9 + 1;\n        }\n        *puVar9 = 0;\n        return puVar6;\n    }\ncode_r0x0045874e:\n    *puVar9 = var_38h;\n    puVar4 = puVar9 + 1;\n    if (var_38h._1_1_ == 0) {\n        if (arg_18h != '\\0') {\n            *puVar4 = var_ah;\n            puVar4 = puVar9 + 2;\n        }\n    }\n    else {\n        *puVar4 = var_ah;\n        puVar4 = puVar9 + 2;\n        puVar2 = &var_38h + 2;\n        while (var_38h._1_1_ != 0) {\n            *puVar4 = var_38h._1_1_;\n            puVar4 = puVar4 + 1;\n            var_38h._1_1_ = *puVar2;\n            puVar2 = puVar2 + 1;\n        }\n        if (arg_18h == '\\0') {\n            puVar4 = fcn.00458540(extraout_ECX & 0xffffff00 | arg_14h, arg_10h, puVar4);\n        }\n    }\n    *puVar4 = arg_14h & 0x20 | 0x45;\n    puVar9 = uVar7 - 1;\n    if (puVar9 < 0) {\n        puVar9 = -puVar9;\n        puVar4[1] = 0x2d;\n    }\n    else {\n        puVar4[1] = 0x2b;\n    }\n    if (puVar9 < 1000) {\n        if (puVar9 < 100) {\n            iVar12 = 2;\n        }\n        else {\n            iVar12 = 3;\n        }\n    }\n    else {\n        iVar12 = 4;\n    }\n    puVar4[iVar12 + 2] = 0;\n    puVar6 = puVar4 + iVar12 + 2;\n    puVar10 = puVar6;\n    for (; iVar12 != 0; iVar12 = iVar12 + -1) {\n        puVar6 = puVar6 + -1;\n        *puVar6 = puVar9 % 10 + 0x30;\n        puVar10 = puVar9 / 10;\n        puVar9 = puVar10;\n    }\n    return puVar10;\n}\n",
        "token_count": 2271
    },
    "0045880c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045880c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        arg_8h = arg_8h + 8;\n    }\n    else {\n        arg_8h = arg_8h + 0xc;\n    }\n    return arg_8h;\n}\n",
        "token_count": 82
    },
    "00458888": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00458888(uint arg_8h, int32_t arg_ch, uint16_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint64_t uVar1;\n    uint16_t *puVar2;\n    char16_t *pcVar3;\n    uint *puVar4;\n    uint16_t *puVar5;\n    ushort extraout_var;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint64_t uVar9;\n    uint var_64h;\n    uint16_t auStack100 [42];\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puVar2 = fcn.004575bc(0xe);\n    var_ch._0_2_ = *puVar2;\n    if (0x28 < arg_ch) {\n        arg_ch = 0x28;\n    }\n    var_8h = arg_ch;\n    var_ch._2_2_ = arg_14h & 0xdf;\n    if (var_ch._2_2_ == 0x46) {\n        iVar7 = -arg_ch;\n        if (-arg_ch != 0 && arg_ch < 1) {\n            arg_ch = 0;\n            iVar7 = 0;\n        }\n    }\n    else if (arg_ch < 1) {\n        iVar7 = 1;\n    }\n    else {\n        iVar7 = arg_ch;\n        if (var_ch._2_2_ == 0x45) {\n            iVar7 = arg_ch + 1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    uVar9 = fcn.00459808(arg_8h, iVar7, &var_4h, &var_64h, arg_1ch);\n    uVar6 = uVar9;\n    if (uVar6 == 0x7fff) {\n        if (var_4h == 0) {\n            pcVar3 = L\"+INF\";\n        }\n        else {\n            pcVar3 = L\"-INF\";\n        }\n        fcn.00455018(arg_10h, pcVar3);\n        return;\n    }\n    if (uVar6 == 0x7ffe) {\n        if (var_4h == 0) {\n            pcVar3 = L\"+NAN\";\n        }\n        else {\n            pcVar3 = L\"-NAN\";\n        }\n        fcn.00455018(arg_10h, pcVar3);\n        return;\n    }\n    puVar2 = arg_10h;\n    if (var_4h != 0) {\n        *arg_10h = 0x2d;\n        puVar2 = arg_10h + 1;\n    }\n    if (var_ch._2_2_ != 0x46) {\n        if ((var_ch._2_2_ != 0x47) || (uVar6 < -3)) goto code_r0x00458a53;\n        iVar7 = arg_ch;\n        if (arg_ch == 0) {\n            iVar7 = 1;\n        }\n        if (iVar7 < uVar6) goto code_r0x00458a53;\n    }\n    if (uVar6 < 0x29) {\n        uVar1 = uVar9;\n        if (uVar6 < 1) {\n            *puVar2 = 0x30;\n            puVar2[1] = var_ch;\n            puVar2 = puVar2 + 2;\n            for (; uVar1 = uVar9 & 0xffff000000000000 | uVar6,  uVar6 != 0; uVar6 = uVar6 + 1) {\n                *puVar2 = 0x30;\n                puVar2 = puVar2 + 1;\n            }\n        }\n        iVar7 = 0;\n        puVar4 = &var_64h;\n        while( true ) {\n            if (*puVar4 == 0) break;\n            *puVar2 = *puVar4;\n            puVar5 = puVar2 + 1;\n            uVar6 = uVar1 - 1;\n            if (uVar6 == 0) {\n                *puVar5 = var_ch;\n                puVar5 = puVar2 + 2;\n                iVar7 = iVar7 + 1;\n            }\n            uVar1 = uVar1 & 0xffff000000000000 | uVar6;\n            puVar4 = puVar4 + 2;\n            puVar2 = puVar5;\n        }\n        if (iVar7 + var_8h < arg_ch) {\n            arg_ch = arg_ch - (iVar7 + var_8h);\n            fcn.00454d3c(puVar2, 0x30, arg_ch);\n            puVar2 = puVar2 + arg_ch;\n        }\n        else if ((uVar1 != 1) && (arg_18h == 0)) {\n            puVar2 = fcn.0045883c(uVar1 >> 0x20 & 0xffff0000 | arg_14h, arg_10h, puVar2);\n        }\n        if (puVar2 == arg_10h) {\n            *puVar2 = 0x30;\n            puVar2 = puVar2 + 1;\n        }\n        *puVar2 = 0;\n        return;\n    }\ncode_r0x00458a53:\n    *puVar2 = var_64h;\n    puVar5 = puVar2 + 1;\n    if (var_64h._2_2_ == 0) {\n        if (arg_18h != 0) {\n            *puVar5 = var_ch;\n            puVar5 = puVar2 + 2;\n        }\n    }\n    else {\n        *puVar5 = var_ch;\n        puVar5 = puVar2 + 2;\n        puVar2 = auStack100;\n        while (var_64h._2_2_ != 0) {\n            *puVar5 = var_64h._2_2_;\n            puVar5 = puVar5 + 1;\n            var_64h._2_2_ = *puVar2;\n            puVar2 = puVar2 + 1;\n        }\n        if (arg_18h == 0) {\n            puVar5 = fcn.0045883c(CONCAT22(extraout_var, arg_14h), arg_10h, puVar5);\n        }\n    }\n    *puVar5 = arg_14h & 0x20 | 0x45;\n    iVar7 = uVar6 - 1;\n    if (iVar7 < 0) {\n        iVar7 = -iVar7;\n        puVar5[1] = 0x2d;\n    }\n    else {\n        puVar5[1] = 0x2b;\n    }\n    if (iVar7 < 1000) {\n        if (iVar7 < 100) {\n            iVar8 = 2;\n        }\n        else {\n            iVar8 = 3;\n        }\n    }\n    else {\n        iVar8 = 4;\n    }\n    puVar5[iVar8 + 2] = 0;\n    puVar5 = puVar5 + iVar8 + 2;\n    for (; iVar8 != 0; iVar8 = iVar8 + -1) {\n        puVar5 = puVar5 + -1;\n        *puVar5 = iVar7 % 10 + 0x30;\n        iVar7 = iVar7 / 10;\n    }\n    return;\n}\n",
        "token_count": 1684
    },
    "00458b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00458b40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if (arg_ch == 0) {\n        arg_8h = arg_8h + 8;\n    }\n    else {\n        arg_8h = arg_8h + 0xc;\n    }\n    return arg_8h;\n}\n",
        "token_count": 82
    },
    "00459afc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00459afc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uchar *puVar5;\n    uint8_t *puVar6;\n    uint32_t var_14h;\n    uint var_eh;\n    \n    if (arg_8h == -2) {\n        arg_8h = sub.KERNEL32.DLL_GetOEMCP();\n    }\n    else if (arg_8h == -3) {\n        arg_8h = sub.KERNEL32.DLL_GetACP();\n    }\n    else if (arg_8h == -4) {\n        arg_8h = **0x4639c4;\n    }\n    if ((arg_8h == 0) || (iVar1 = sub.KERNEL32.DLL_GetCPInfo(arg_8h, &var_14h),  iVar1 != 0)) {\n        iVar1 = 0;\n        puVar5 = 0x4677ac;\n        do {\n            *puVar5 = 0;\n            iVar1 = iVar1 + 1;\n            puVar5 = puVar5 + 1;\n        } while (iVar1 < 0x101);\n        if ((arg_8h == 0) || (var_14h < 2)) {\n            *0x4678b0 = 0;\n        }\n        else {\n            for (puVar4 = &var_eh; (uVar3 = *puVar4,  *puVar4 != 0 && (*(puVar4 + 1) != 0)); puVar4 = puVar4 + 2) {\n                puVar5 = uVar3 + 0x4677ad;\n                for (; uVar3 <= *(puVar4 + 1); uVar3 = uVar3 + 1) {\n                    *puVar5 = 4;\n                    puVar5 = puVar5 + 1;\n                }\n            }\n            iVar1 = 1;\n            puVar6 = 0x4677ae;\n            do {\n                *puVar6 = *puVar6 | 8;\n                iVar1 = iVar1 + 1;\n                puVar6 = puVar6 + 1;\n            } while (iVar1 < 0xff);\n            *0x4678b0 = arg_8h;\n            if (arg_8h == 0x3a4) {\n                uVar3 = *0x463d94;\n                puVar6 = uVar3 + 0x4677ad;\n                for (; uVar3 <= *0x463d95; uVar3 = uVar3 + 1) {\n                    *puVar6 = *puVar6 | 1;\n                    puVar6 = puVar6 + 1;\n                }\n                uVar3 = *0x463d96;\n                puVar6 = uVar3 + 0x4677ad;\n                for (; uVar3 <= *0x463d97; uVar3 = uVar3 + 1) {\n                    *puVar6 = *puVar6 | 2;\n                    puVar6 = puVar6 + 1;\n                }\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\n        fcn.00459e84(\"Error: system code page access failure; MBCS table not initialized\");\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 762
    },
    "00459c54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00459c54(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    \n    puVar2 = NULL;\n    do {\n        if ((*(*arg_8h + 0x4677ad) & 4) == 0) {\n            if (arg_ch == *arg_8h) {\n                puVar2 = arg_8h;\n            }\n        }\n        else {\n            if (arg_8h[1] == 0) {\n                if (arg_ch != 0) {\n                    return puVar2;\n                }\n                return arg_8h + 1;\n            }\n            if (arg_ch == CONCAT11(*arg_8h, arg_8h[1])) {\n                puVar2 = arg_8h;\n            }\n            arg_8h = arg_8h + 1;\n        }\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (uVar1 != 0);\n    return puVar2;\n}\n",
        "token_count": 251
    },
    "00459e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong fcn.00459e40(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack4;\n    \n    uStack4 = 0;\n    uVar1 = sub.KERNEL32.DLL_GetVersion();\n    if ((uVar1 >> 0x10 & 0x8000) == 0) {\n        return CONCAT44(uStack4, 0x2000);\n    }\n    iVar2 = sub.KERNEL32.DLL_GetCurrentThreadId(fcn.00459e2c, &uStack4);\n    sub.USER32.DLL_EnumThreadWindows();\n    if (iVar2 == 0) {\n        uVar3 = 0x1000;\n    }\n    else {\n        uVar3 = 0x2000;\n    }\n    return CONCAT44(iVar2, uVar3);\n}\n",
        "token_count": 191
    },
    "00459e84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459e84(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint var_84h;\n    uint var_4h;\n    \n    if ((*0x463e28 == NULL) && (*0x463e24 == NULL)) {\n        if (*0x464008 != 0) {\n            sub.KERNEL32.DLL_GetModuleFileNameA(0, &var_84h, 0x80);\n            iVar1 = fcn.00459c54(&var_84h, 0x5c);\n            if ((iVar1 == 0) && (iVar1 = fcn.00459c54(&var_84h, 0x3a),  iVar1 == 0)) {\n                puVar5 = &var_84h;\n            }\n            else {\n                puVar5 = iVar1 + 1;\n            }\n            uVar2 = fcn.00459e40();\n            sub.USER32.DLL_MessageBoxA(0, arg_8h, puVar5, uVar2 | 0x10010);\n            return;\n        }\n        uVar3 = sub.KERNEL32.DLL_GetStdHandle(0xfffffff4);\n        sub.KERNEL32.DLL_WriteFile(uVar3, 0x463e2c, 2, &var_4h, 0);\n        uVar4 = fcn.00454e1c(arg_8h, &var_4h, 0);\n        sub.KERNEL32.DLL_WriteFile(uVar3, arg_8h, uVar4);\n        sub.KERNEL32.DLL_WriteFile(uVar3, 0x463e2f, 2, &var_4h, 0);\n        return;\n    }\n    if (*0x463e24 != NULL) {\n        if (*0x463e24 == 0xffffffff) {\n            return;\n        }\n        (**0x463e24)(arg_8h);\n    }\n    if (*0x463e28 == NULL) {\n        return;\n    }\n    if (*0x463e28 == 0xffffffff) {\n        return;\n    }\n    if (**0x463e28 == '\\0') {\n        return;\n    }\n    fcn.00459da4(*0x463e28, arg_8h);\n    return;\n}\n",
        "token_count": 532
    },
    "00459ff0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459ff0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.0045ad90();\n    if (arg_8h == 0) {\n        if (*0x463e54 != NULL) {\n            (**0x463e54)();\n        }\n        fcn.0045ad24();\n        (**0x463e58)();\n    }\n    else {\n        *0x463e54 = NULL;\n    }\n    if (arg_ch == 0) {\n        if (arg_8h == 0) {\n            (**0x463e5c)();\n            (**0x463e60)();\n        }\n        fcn.0045ada0();\n        fcn.004563c4();\n        fcn.00456b24();\n        fcn.0045ac38(arg_10h);\n    }\n    fcn.0045ada0();\n    return;\n}\n",
        "token_count": 205
    },
    "0045a1d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a1d4(uint *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    \n    if (*0x467a08 == *0x4679d4) {\n        *0x4679d4 = *0x4679d4 + 0x10;\n        *0x4679d0 = fcn.00454740(*0x4679d0, *0x4679d4 * 4);\n        if (*0x4679d0 == 0) {\n            fcn.00459fb0(\"No space for command line argument vector\");\n        }\n    }\n    puVar3 = arg_8h;\n    if (arg_ch != 0) {\n        iVar2 = fcn.00454e1c(arg_8h);\n        puVar3 = fcn.00454720(iVar2 + 1);\n        if (puVar3 == NULL) {\n            fcn.00459fb0(\"No space for command line argument\");\n        }\n        uVar4 = 0xffffffff;\n        do {\n            puVar6 = arg_8h;\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            puVar6 = arg_8h + 1;\n            cVar1 = *arg_8h;\n            arg_8h = puVar6;\n        } while (cVar1 != '\\0');\n        uVar4 = ~uVar4;\n        puVar6 = puVar6 - uVar4;\n        puVar7 = puVar3;\n        for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    *(*0x4679d0 + *0x467a08 * 4) = puVar3;\n    *0x467a08 = *0x467a08 + 1;\n    return;\n}\n",
        "token_count": 581
    },
    "0045a3f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a3f8(uint8_t **arg_8h, uint8_t **arg_ch)\n\n{\n    uint8_t uVar1;\n    \n    if ((**arg_ch == 0x5c) && ((*arg_ch)[1] == 0x22)) {\n        **arg_8h = 0x22;\n        *arg_ch = *arg_ch + 2;\n    }\n    else if ((*0x463ec8 == 0) || ((**arg_ch != 0x5c || ((*arg_ch)[1] != 0x5c)))) {\n        uVar1 = **arg_ch;\n        if (((*(uVar1 + 0x4677ad) & 4) != 0) && ((*arg_ch)[1] != 0)) {\n            **arg_8h = uVar1;\n            *arg_ch = *arg_ch + 1;\n            *arg_8h = *arg_8h + 1;\n        }\n        **arg_8h = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n    }\n    else {\n        **arg_8h = 0x5c;\n        *arg_ch = *arg_ch + 2;\n    }\n    *arg_8h = *arg_8h + 1;\n    return;\n}\n",
        "token_count": 291
    },
    "0045a61c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a61c(int16_t **arg_8h, int16_t **arg_ch)\n\n{\n    if ((**arg_ch == 0x5c) && ((*arg_ch)[1] == 0x22)) {\n        **arg_8h = 0x22;\n        *arg_ch = *arg_ch + 2;\n    }\n    else if ((*0x463ec8 == 0) || ((**arg_ch != 0x5c || ((*arg_ch)[1] != 0x5c)))) {\n        **arg_8h = **arg_ch;\n        *arg_ch = *arg_ch + 1;\n    }\n    else {\n        **arg_8h = 0x5c;\n        *arg_ch = *arg_ch + 2;\n    }\n    *arg_8h = *arg_8h + 1;\n    return;\n}\n",
        "token_count": 196
    },
    "0045a730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045a730(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piStack20;\n    \n    if (*0x4679e4 == NULL) {\n        if ((*0x467a04 == 0) && (*0x467a04 = sub.KERNEL32.DLL_GetEnvironmentStrings(),  *0x467a04 == 0)) {\n            fcn.00459fb0(\"GetEnvironmentStrings failed\");\n        }\n        iVar5 = 0;\n        iVar7 = 0;\n        iVar3 = *0x467a04;\n        while (iVar1 = fcn.00454e1c(iVar3),  iVar1 != 0) {\n            iVar7 = iVar7 + 1;\n            iVar5 = iVar5 + iVar1 + 1;\n            iVar3 = iVar3 + iVar1 + 1;\n        }\n        *0x4679e8 = fcn.00454720(iVar5 + 1);\n        if (*0x4679e8 == 0) {\n            uVar2 = 0;\n            piStack20 = param_1;\n            goto code_r0x0045a874;\n        }\n        fcn.00454ccc(*0x4679e8, *0x467a04, iVar5 + 1);\n    }\n    else {\n        iVar7 = 0;\n        for (piVar4 = *0x4679e4; *piVar4 != 0; piVar4 = piVar4 + 1) {\n            iVar3 = fcn.00454e1c(*piVar4);\n            if (iVar3 == 0) {\n                iVar7 = iVar7 + -1;\n            }\n            iVar7 = iVar7 + 1;\n        }\n    }\n    *0x4679ec = iVar7 + 4;\n    piStack20 = fcn.004541f8(iVar7 + 5, 4);\n    if (piStack20 == NULL) {\n        uVar2 = 0;\n    }\n    else {\n        piVar4 = *0x4679e4;\n        iVar7 = *0x4679e8;\n        piVar6 = piStack20;\n        if (*0x4679e4 == NULL) {\n            while (iVar3 = fcn.00454e1c(iVar7),  iVar3 != 0) {\n                *piVar6 = iVar7;\n                iVar7 = iVar7 + iVar3 + 1;\n                piVar6 = piVar6 + 1;\n            }\n        }\n        else {\n            for (; *piVar4 != 0; piVar4 = piVar4 + 1) {\n                iVar7 = fcn.00454e1c(*piVar4);\n                if (iVar7 == 0) {\n                    piVar6 = piVar6 + -1;\n                }\n                else {\n                    *piVar6 = *piVar4;\n                }\n                piVar6 = piVar6 + 1;\n            }\n        }\n        if (*0x4679e4 != NULL) {\n            fcn.00454730(*0x4679e4);\n        }\n        uVar2 = 1;\n        *0x4679e4 = piStack20;\n    }\ncode_r0x0045a874:\n    return CONCAT44(piStack20, uVar2);\n}\n",
        "token_count": 780
    },
    "0045a8d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a8d0(code **arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    code **var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = arg_8h;\n    var_ch = arg_10h;\n    var_8h = 0;\n    iVar2 = fcn.0045b020();\n    if ((iVar2 == 0) || (iVar2 = *(iVar2 + 0x28),  iVar2 == 0)) {\n        return 1;\n    }\n    uVar4 = 0;\n    pcVar1 = *arg_8h;\n    if (pcVar1 < -0x3fffff6f) {\n        if (pcVar1 == 0xc0000090) {\n            iVar3 = 2;\n            var_4h = 0x81;\n            uVar4 = 1;\n        }\n        else if (pcVar1 < -0x3ffffffa) {\n            if (pcVar1 == 0xc0000005) {\n                var_4h = 0xc;\n                iVar3 = 3;\n            }\n            else if (pcVar1 == 0x80000003) {\n                var_4h = 0x17;\n                iVar3 = 1;\n            }\n            else {\n                if (pcVar1 != reloc.OLEAUT32.DLL_SysReAllocStringLen) goto code_r0x0045aa3e;\n                var_4h = 0x18;\n                iVar3 = 1;\n            }\n        }\n        else if (pcVar1 == 0xc000001d) {\n            var_4h = 0x14;\n            iVar3 = 1;\n        }\n        else {\n            if (pcVar1 != 0xc000008e) goto code_r0x0045aa3e;\n            iVar3 = 2;\n            var_4h = 0x83;\n            uVar4 = 4;\n        }\n        goto code_r0x0045aa45;\n    }\n    if (pcVar1 + 0x3fffff6f < 0x6) {\n    // switch table (6 cases) at 0x45a96a\n        switch(*((pcVar1 + 0x3fffff6f) * 4 + 0x45a96a)) {\n        case 0x45a998:\n            iVar3 = 2;\n            var_4h = 0x84;\n            uVar4 = 8;\n            break;\n        case 0x45a9ae:\n            iVar3 = 2;\n            var_4h = 0x85;\n            uVar4 = 0x10;\n            break;\n        case 0x45a9d7:\n            iVar3 = 2;\n            var_4h = 0x87;\n            uVar4 = 0x49;\n            break;\n        case 0x45a9ea:\n            var_4h = 0x7f;\n            iVar3 = 2;\n            break;\n        case 0x45aa14:\n            var_4h = 0x16;\n            iVar3 = 1;\n            break;\n        case 0x45aa3e:\n            goto code_r0x0045aa3e;\n        }\ncode_r0x0045aa45:\n        pcVar1 = *(iVar2 + iVar3 * 4);\n        if (pcVar1 == 0x1) {\n            var_8h = 0;\n        }\n        else if (pcVar1 == NULL) {\n            var_8h = 1;\n        }\n        else {\n            *(iVar2 + iVar3 * 4) = 0;\n            if (((iVar3 == 1) || (iVar3 == 3)) || (iVar3 == 2)) {\n                fcn.0045810c();\n                fcn.00458120(*0x463c78, 7999);\n                (*pcVar1)(*(iVar3 * 4 + 0x463fd4), var_4h, &var_10h);\n                *(arg_10h + 0x20) = *(arg_10h + 0x20) & ~uVar4;\n            }\n            else {\n                (*pcVar1)(*(iVar3 * 4 + 0x463fd4), 0, &var_10h);\n            }\n        }\n    }\n    else {\ncode_r0x0045aa3e:\n        var_8h = 1;\n    }\n    return var_8h;\n}\n",
        "token_count": 1050
    },
    "0045aac8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aac8(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_8h == 0) {\n        arg_8h_00 = 2;\n    }\n    else {\n        arg_8h_00 = 0x15;\n    }\n    fcn.0045aba4(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 94
    },
    "0045aaf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aaf0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    \n    if (*0x463fa8 == '\\0') {\n        *0x467604 = fcn.0045a8d0;\n        sub.KERNEL32.DLL_SetConsoleCtrlHandler(fcn.0045aac8, 1);\n        *0x463fa8 = '\\x01';\n    }\n    iVar1 = fcn.0045a8b0(arg_8h);\n    if (iVar1 == -1) {\n        puVar2 = fcn.00459e0c();\n        *puVar2 = 0x13;\n        uVar3 = 0xffffffff;\n    }\n    else {\n        if ((arg_8h == 2) || (arg_8h == 0x15)) {\n            puVar2 = 0x463fac;\n        }\n        else {\n            iVar4 = fcn.0045b020();\n            if (iVar4 == 0) {\n                return 0xffffffff;\n            }\n            puVar2 = *(iVar4 + 0x28);\n            if (puVar2 == NULL) {\n                puVar2 = fcn.00454720(0x28);\n                if (puVar2 == NULL) {\n                    puVar2 = fcn.00459e0c();\n                    *puVar2 = 8;\n                    return 0xffffffff;\n                }\n                iVar6 = 0;\n                puVar5 = puVar2;\n                do {\n                    iVar6 = iVar6 + 1;\n                    *puVar5 = 0;\n                    puVar5 = puVar5 + 1;\n                } while (iVar6 < 10);\n                *(iVar4 + 0x28) = puVar2;\n            }\n        }\n        uVar3 = puVar2[iVar1];\n        puVar2[iVar1] = arg_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 461
    },
    "0045aba4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045aba4(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((arg_8h == 2) || (arg_8h == 0x15)) {\n        iVar4 = 0x463fac;\n    }\n    else {\n        iVar4 = fcn.0045b020();\n        if ((iVar4 == 0) || (iVar4 = *(iVar4 + 0x28),  iVar4 == 0)) {\n            return 1;\n        }\n    }\n    iVar2 = fcn.0045a8b0(arg_8h);\n    if (iVar2 == -1) {\n        uVar3 = 1;\n    }\n    else {\n        pcVar1 = *(iVar4 + iVar2 * 4);\n        if (pcVar1 != 0x1) {\n            if (pcVar1 == NULL) {\n                if ((1 < arg_8h - 0x10U) && (arg_8h != 0x14)) {\n                    if (arg_8h == 0x16) {\n                        fcn.00459fc8();\n                    }\n                    else {\n                        fcn.0045a074(3);\n                    }\n                }\n            }\n            else {\n                *(iVar4 + iVar2 * 4) = 0;\n                (*pcVar1)(arg_8h, *(iVar2 + 0x463ffc), 0);\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 355
    },
    "0045ac50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ac50(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t **var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        var_ch = 0x100;\n        var_10h = 1;\n        iVar3 = 0;\n    }\n    else {\n        var_ch = -1;\n        var_10h = -1;\n        iVar3 = 0xff;\n    }\n    for (; iVar3 != var_ch; iVar3 = iVar3 + var_10h) {\n        var_14h = arg_8h + 1;\n        for (var_8h = 0; var_8h < *arg_8h; var_8h = var_8h + 1) {\n            puVar1 = *var_14h;\n            if (arg_ch == 0) {\n                uVar5 = *puVar1;\n                uVar4 = puVar1[1];\n            }\n            else {\n                uVar5 = puVar1[2];\n                uVar4 = puVar1[3];\n            }\n            if (arg_ch == 0) {\n                for (; uVar5 < uVar4; uVar5 = uVar5 + 6) {\n                    if (iVar3 == *(uVar5 + 1)) {\n                        (**(uVar5 + 2))();\n                    }\n                }\n            }\n            else {\n                while (uVar2 = uVar4,  uVar4 = uVar2 - 6,  uVar5 <= uVar4) {\n                    if (iVar3 == *(uVar2 - 5)) {\n                        (**(uVar2 - 4))();\n                    }\n                }\n            }\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "0045ad24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045ad24(void)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x46400c == 0) {\n        *0x46400c = 1;\n        fcn.0045ac50(0x467a2c, 1);\n        fcn.0045ac50(0x467a0c, 1);\n        arg_8h = fcn.0045ac4c();\n        if (arg_8h != NULL) {\n            fcn.0045ac50(arg_8h, 1);\n            piVar1 = arg_8h;\n            for (iVar2 = 0; piVar1 = piVar1 + 1,  iVar2 < *arg_8h; iVar2 = iVar2 + 1) {\n                (**(*piVar1 + 0x18))(1, *(*piVar1 + 0x14));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0045b048": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * fcn.0045b048(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    \n    fcn.0045b24c(*0x467a3c);\n    if (*0x467a38 == NULL) {\n        arg_8h = fcn.00454720(0x5c);\n        if (arg_8h != NULL) {\n            fcn.00454d3c(arg_8h, 0, 0x5c);\n        }\n    }\n    else {\n        arg_8h = *0x467a38;\n        *0x467a38 = **0x467a38;\n    }\n    if (arg_8h != NULL) {\n        arg_8h[0x11] = 1;\n        arg_8h[0x12] = 0;\n        arg_8h[0x15] = 0;\n        arg_8h[0xb] = 0;\n        arg_8h[0x16] = 0;\n        if (arg_8h[0x13] == 0) {\n            iVar1 = fcn.00454720(*0x4629b0);\n            arg_8h[0x13] = iVar1;\n            if (iVar1 == 0) {\n                fcn.00454730(arg_8h);\n                arg_8h = NULL;\n                goto code_r0x0045b0dc;\n            }\n        }\n        fcn.00454d3c(arg_8h[0x13], 0, *0x4629b0);\n    }\ncode_r0x0045b0dc:\n    fcn.0045b25c(*0x467a3c);\n    return arg_8h;\n}\n",
        "token_count": 388
    },
    "0045b38b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0045b38b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ushort in_FS;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    int32_t var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00455058();\n    uVar4 = fcn.0045b2f2(arg_8h);\n    uVar4 = uVar4 & 0xff;\n    if ((uVar4 < 3) || (0xf < uVar4)) {\n        puVar5 = NULL;\n        puVar1 = segment(in_FS, 0);\n        *puVar1 = var_50h;\n    }\n    else {\n        iVar3 = *(uVar4 * 8 + 0x46405c);\n    // switch table (12 cases) at 0x45b3e0\n        switch(uVar4) {\n        case 3:\n            var_40h._0_2_ = 8;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045d958();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 4:\n            var_40h._0_2_ = 0x14;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045da04();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 5:\n            var_40h._0_2_ = 0x20;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045dab0();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 6:\n            var_40h._0_2_ = 0x2c;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045db5c();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 7:\n            var_40h._0_2_ = 0x38;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045dc08();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 8:\n            var_40h._0_2_ = 0x44;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045dcb4();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 9:\n            var_40h._0_2_ = 0x50;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045dd60();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        default:\n            fcn.00459cf4(\"!\\\"Bad exception number\\\"\", 0x464b96, 0x118);\n            break;\n        case 0xb:\n            var_40h._0_2_ = 0x5c;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045de0c();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 0xc:\n            var_40h._0_2_ = 0x68;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045deb8();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 0xd:\n            var_40h._0_2_ = 0x74;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045df64();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n            break;\n        case 0xe:\n            var_40h._0_2_ = 0x80;\n            fcn.0045ef74();\n            var_34h = var_34h + 1;\n            var_58h = fcn.0045e010();\n            var_34h = var_34h + -1;\n            fcn.0045efe8();\n        }\n        uVar2 = *(iVar3 + 4);\n        if ((uVar2 & 0x20) == 0) {\n            fcn.00459cf4(\"mask & TM_IS_REF\", 0x464bae, 0x11d);\n        }\n        var_54h = *(iVar3 + 8);\n        puVar5 = fcn.0045b77d(0x56);\n        *puVar5 = 0;\n        puVar5[1] = iVar3;\n        puVar5[3] = 2;\n        puVar5[4] = 4;\n        *(puVar5 + 6) = uVar2;\n        *(puVar5 + 0x1a) = 0;\n        puVar5[5] = var_54h;\n        puVar5[2] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[7] = fcn.0045b7c7;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        *(puVar5 + 0x45) = 0;\n        *(puVar5 + 0x11) = 1;\n        *(puVar5 + 0x46) = arg_ch;\n        *(puVar5 + 0x4a) = arg_10h;\n        *(puVar5 + 0x4e) = arg_14h;\n        fcn.00454ccc(puVar5 + 0x52, &var_58h, 4);\n        puVar1 = segment(in_FS, 0);\n        *puVar1 = var_50h;\n    }\n    return puVar5;\n}\n",
        "token_count": 1715
    },
    "0045ba46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ba46(uint arg_8h, uint arg_ch, uint32_t arg_10h, code *arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    \n    if (arg_1ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 2;\n    }\n    if ((arg_10h & 2) != 0) {\n        uVar1 = uVar1 | 0x80;\n    }\n    if (**0x46aa48 == 2) {\n        arg_8h_00 = fcn.004555c8(arg_ch);\n        fcn.0045ba11(arg_8h_00);\n        fcn.0045ba29(0, 3);\n    }\n    if ((arg_18h & 0x80) != 0) {\n        fcn.00459cf4(\"(dtorMask & 0x0080) == 0\", 0x464c71, 0x2cc);\n    }\n    arg_18h = arg_18h & 7;\n    if (arg_18h == 1) {\n        (*arg_14h)(arg_8h, uVar1);\n    }\n    else if (arg_18h == 2) {\n        (*arg_14h)(arg_8h, uVar1);\n    }\n    else if (arg_18h == 3) {\n        (*arg_14h)();\n    }\n    else if (arg_18h == 5) {\n        (*arg_14h)(arg_8h, uVar1);\n    }\n    else {\n        fcn.00459cf4(0x464c7e, 0x464c87, 0x2f3);\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0045be9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045be9a(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t arg_ch;\n    uint unaff_retaddr;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uint var_4h_2;\n    \n    iVar1 = fcn.0040143c();\n    iVar1 = *(iVar1 + 0x10);\n    if (iVar1 == 0) {\n        fcn.00455c4c();\n    }\n    if ((*(iVar1 + 0xc) & 4) == 0) {\n        if (*(iVar1 + 0x44) == '\\0') {\n            arg_ch = *(iVar1 + 0x40);\n        }\n        else {\n            arg_ch = iVar1 + 0x52;\n        }\n    }\n    else {\n        if (*(iVar1 + 0x44) == '\\0') {\n            fcn.00459cf4(\"xdp->xdArgBuff\", 0x464d20, 0x550);\n        }\n        arg_ch = *(iVar1 + 0x52);\n    }\n    *(iVar1 + 0xc) = *(iVar1 + 0xc) | 8;\n    fcn.0045bb94(*(iVar1 + 4), arg_ch, *(iVar1 + 8), *(iVar1 + 0x20), *(iVar1 + 0x24), *(iVar1 + 0xc), var_8h, var_ch, \n                 unaff_retaddr, 1, 0, &stack0xffffffd0, in_EAX);\n    return;\n}\n",
        "token_count": 367
    },
    "0045bfeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bfeb(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *arg_8h_00;\n    \n    uVar2 = *0x46aa44;\n    if (*(arg_8h + 0x44) != '\\0') {\n        if ((*(arg_8h + 0x1a) & 2) != 0) {\n            iVar1 = *(arg_8h + 0x14);\n            arg_8h_00 = arg_8h + 0x52;\n            if ((*(iVar1 + 0xc) & 0x80) != 0) {\n                arg_8h_00 = *arg_8h_00;\n            }\n            if ((*(arg_8h + 0xc) & 0xc) != 0xc) {\n                fcn.0045bf76(arg_8h_00, iVar1, *(iVar1 + 0x28), *(iVar1 + 0x2c));\n            }\n        }\n        *0x46aa44 = uVar2;\n        *(arg_8h + 0x44) = 0;\n    }\n    if (*(arg_8h + 0x45) != '\\0') {\n        iVar1 = *(arg_8h + 0x3c);\n        if (iVar1 == 0) {\n            fcn.00459cf4(\"argType\", 0x464d3f, 0x5fd);\n        }\n        if (((*(iVar1 + 4) & 2) != 0) && ((*(iVar1 + 0xc) & 2) != 0)) {\n            fcn.0045bf76(*(arg_8h + 0x40), iVar1, *(iVar1 + 0x28), *(iVar1 + 0x2c));\n        }\n        *(arg_8h + 0x45) = 0;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "0045c086": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0045c086(void)\n\n{\n    int32_t *piVar1;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ushort in_FS;\n    uint unaff_retaddr;\n    \n    iVar4 = fcn.0040143c();\n    if (*(iVar4 + 0x10) == 0) {\n        fcn.00459cf4(\"__CPPexceptionList\", 0x464d59, 0x628);\n    }\n    iVar4 = fcn.0040143c();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.0040143c();\n    *(iVar4 + 0x10) = *arg_8h;\n    iVar4 = arg_8h[10];\n    piVar1 = segment(in_FS, 0);\n    iVar2 = *piVar1;\n    if (iVar2 == 0) {\n        fcn.00459cf4(0x464d60, 0x464d63, 0x636);\n    }\n    if (iVar2 != arg_8h[10]) {\n        fcn.00459cf4(\"xdrPtr->xdERRaddr == xl\", 0x464d82, 0x637);\n    }\n    *(iVar4 + 0x10) = *(*(iVar4 + 8) + *(iVar4 + 0x10));\n    fcn.0045bfeb(arg_8h);\n    uVar3 = arg_8h[3];\n    (*arg_8h[7])(arg_8h);\n    if ((uVar3 & 2) != 0) {\n        if (**0x46aa48 == 2) {\n            fcn.0045ba29(6, 1);\n        }\n        *(*(iVar4 + 0xc) + -4) = unaff_retaddr;\n        return;\n    }\n    if (**0x46aa48 == 2) {\n        fcn.0045ba29(6, 1);\n    }\n    *(*(iVar4 + 0xc) + -4) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 495
    },
    "0045c757": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0045c757(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *arg_ch_00;\n    int32_t iVar1;\n    char *arg_8h_00;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint8_t var_100h;\n    uint var_ffh;\n    \n    piVar3 = arg_8h + 8;\n    while( true ) {\n        if (*piVar3 == 0) {\n            return NULL;\n        }\n        iVar1 = piVar3[1];\n        if (iVar1 == 0) break;\n        if ((*(iVar1 + 4) & 0x30) != 0) {\n            arg_ch_00 = fcn.004555c8(iVar1);\n            do {\n                arg_8h_00 = arg_ch_00;\n                iVar1 = fcn.00454ee8(arg_8h_00, \"const \", 6);\n                if (iVar1 == 0) {\n                    arg_ch_00 = arg_8h_00 + 6;\n                }\n                else {\n                    iVar1 = fcn.00454ee8(arg_8h_00, \"volatile \", 9);\n                    arg_ch_00 = arg_8h_00;\n                    if (iVar1 == 0) {\n                        arg_ch_00 = arg_8h_00 + 9;\n                    }\n                }\n            } while (arg_ch_00 != arg_8h_00);\n            for (; *arg_8h_00 != '\\0'; arg_8h_00 = arg_8h_00 + 1) {\n                if (*arg_8h_00 == ':') {\n                    arg_ch_00 = arg_8h_00;\n                }\n            }\n            if (*arg_ch_00 == ':') {\n                arg_ch_00 = arg_ch_00 + 1;\n            }\n            iVar1 = fcn.00454e1c(arg_ch_00);\n            iVar1 = iVar1 + -2;\n            if (iVar1 < 0x100) {\n                fcn.00454ccc(&var_ffh, arg_ch_00, iVar1);\n                var_100h = iVar1;\n                for (puVar2 = **(arg_ch + 0x18);\n                    (iVar1 = fcn.00454f10(&var_100h, puVar2[-0xb], var_100h + 1),  iVar1 != 0 &&\n                    (puVar2 = puVar2[-9],  puVar2 != NULL)); puVar2 = *puVar2) {\n                }\n                if (puVar2 != NULL) {\n                    return piVar3;\n                }\n            }\n        }\n        piVar3 = piVar3 + 5;\n    }\n    return piVar3;\n}\n",
        "token_count": 623
    },
    "0045c85b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0045c85b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = arg_8h + 8;\n    while( true ) {\n        if (*piVar2 == 0) {\n            return NULL;\n        }\n        if (piVar2[1] == 0) break;\n        iVar1 = fcn.0045b7f4(*(arg_ch + 4), *(arg_ch + 8), piVar2[1], *(arg_ch + 0xc));\n        if (iVar1 != 0) {\n            return piVar2;\n        }\n        piVar2 = piVar2 + 5;\n    }\n    return piVar2;\n}\n",
        "token_count": 178
    },
    "0045cd59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cd59(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    ushort in_FS;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00455058();\n    if ((*(arg_ch + 0xc) & 2) == 0) {\n        fcn.00459cf4(0x464fbb, 0x464fe3, 0xc1b);\n    }\n    if (*(arg_ch + 0x28) == 0) {\n        fcn.00459cf4(\"varType->tpClass.tpcDtorAddr\", 0x465007, 0xc1c);\n    }\n    if ((*(arg_18h + 0x1c) < *(arg_ch + 0x20)) && (arg_10h == 0)) {\n        fcn.00459cf4(\"(errPtr->ERRcInitDtc >= varType->tpClass.tpcDtorCount) || flags\", 0x46504e, 0xc27);\n    }\n    if ((arg_10h & 2) == 0) {\n        if (arg_14h == 0) {\n            iVar2 = *(arg_ch + 0x24);\n        }\n        else {\n            iVar2 = *(arg_ch + 0x20);\n        }\n        *(arg_18h + 0x1c) = *(arg_18h + 0x1c) - iVar2;\n    }\n    fcn.0045ba46(arg_8h, arg_ch, arg_10h, *(arg_ch + 0x28), *(arg_ch + 0x2c), arg_14h);\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_24h;\n    return;\n}\n",
        "token_count": 437
    },
    "0045ce50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0045ce50(int32_t arg_8h, uint arg_ch, int32_t *arg_10h, int32_t *arg_14h, uint arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h)\n\n{\n    uint *arg_8h_00;\n    int32_t *piVar1;\n    \n    while (piVar1 = arg_10h + -3,  arg_14h <= piVar1) {\n        arg_8h_00 = arg_10h[-2] + arg_8h;\n        if (arg_1ch != 0) {\n            arg_8h_00 = *arg_8h_00;\n        }\n        arg_10h = piVar1;\n        if ((*(*piVar1 + 0xc) & 2) != 0) {\n            fcn.0045ce9b(arg_8h_00, *piVar1, arg_ch, arg_18h, 0, arg_20h, arg_24h);\n            arg_18h = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0045d1ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d1ce(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t *arg_ch_00;\n    uint32_t arg_14h_00;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    if ((*(arg_ch + 5) & 4) == 0) {\n        fcn.00459cf4(0x46513d, 0x46515b, 0xdcb);\n    }\n    if ((*(*(arg_ch + 8) + 0xc) & 2) == 0) {\n        fcn.00459cf4(\"varType->tpArr.tpaElemType->tpClass.tpcFlags & CF_HAS_DTOR\", 0x46519d, 0xdcc);\n    }\n    uVar1 = *(arg_ch + 0xc);\n    arg_ch_00 = *(arg_ch + 8);\n    arg_14h_00 = arg_ch_00[8];\n    if (arg_14h_00 == 0) {\n        fcn.00459cf4(\"vdtCount\", 0x4651ad, 0xdd5);\n    }\n    if (arg_10h == 0) {\n        arg_10h = arg_14h_00 * uVar1;\n    }\n    var_8h = arg_10h / arg_14h_00;\n    if ((uVar1 < var_8h) && (uVar1 != 0)) {\n        fcn.00459cf4(\"etdCount <= elemCount || elemCount == 0\", 0x4651dc, 0xdde);\n    }\n    arg_10h = arg_10h - var_8h * arg_14h_00;\n    if (arg_14h_00 < arg_10h) {\n        fcn.00459cf4(\"dtrCount <= vdtCount\", 0x4651f8, 0xddf);\n    }\n    arg_8h = arg_8h + var_8h * *arg_ch_00;\n    if (arg_10h != 0) {\n        fcn.0045ce9b(arg_8h, arg_ch_00, 0, arg_10h, 1, arg_14h, arg_18h);\n    }\n    while (var_8h != 0) {\n        arg_8h = arg_8h - *arg_ch_00;\n        fcn.0045ce9b(arg_8h, arg_ch_00, 0, arg_14h_00, 1, arg_14h, arg_18h);\n        var_8h = var_8h - 1;\n    }\n    return;\n}\n",
        "token_count": 636
    },
    "0045d2f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045d2f2(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *arg_ch;\n    if ((*(iVar1 + 4) & 2) == 0) {\n        fcn.00459cf4(\"IS_CLASS(varType->tpMask)\", 0x465219, 0xe12);\n    }\n    if (((*(iVar1 + 0xc) & 0x50) == 0x50) && (*(iVar1 + 8) != -1)) {\n        if (arg_10h == 0) {\n            arg_10h = *(*(iVar1 + 8) + arg_8h);\n        }\n        arg_8h = arg_8h - *(arg_10h + -8);\n        arg_10h = arg_10h - *(arg_10h + -4);\n        if (*(arg_10h + -4) != 0) {\n            fcn.00459cf4(\"((unsigned __far *)vftAddr)[-1] == 0\", 0x465245, 0xe38);\n        }\n        *arg_ch = *(arg_10h + -0xc);\n    }\n    return arg_8h;\n}\n",
        "token_count": 292
    },
    "0045f444": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f444(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = sub.KERNEL32.DLL_InterlockedExchange(arg_8h, 1);\n    uVar2 = *0x465ef8;\n    uVar1 = *0x465ef4;\n    if (iVar3 != 0) {\n        uVar5 = 0;\n        if (*0x465ef4 != 0) {\n            do {\n                if (((uVar2 >> 1 <= uVar5) && (*arg_8h == 0)) &&\n                   (iVar3 = sub.KERNEL32.DLL_InterlockedExchange(),  iVar3 == 0)) {\n                    *0x465ef4 = 1000;\n                    *0x465ef8 = uVar5;\n                    return;\n                }\n                uVar5 = uVar5 + 1;\n            } while (uVar5 < uVar1);\n        }\n        *0x465ef4 = 0x1e;\n        iVar3 = 0;\n        while( true ) {\n            iVar6 = iVar3 + 6;\n            if (0x1b < iVar6) {\n                iVar6 = 0x1b;\n            }\n            iVar4 = sub.KERNEL32.DLL_InterlockedExchange();\n            if (iVar4 == 0) break;\n            fcn.0045f51c(iVar6);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "0045f524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045f524(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x14;\n    arg_8h_00 = arg_8h + 7U & 0xfffffff8;\n    iVar1 = fcn.0045f594(arg_8h_00, &var_4h);\n    if (var_4h != 1) {\n        *((arg_8h_00 - 1 >> 3) * 4 + 0x465eb0) = arg_8h_00 + iVar1;\n        puVar2 = arg_8h_00 + iVar1;\n        for (iVar3 = 1; iVar3 != var_4h + -1; iVar3 = iVar3 + 1) {\n            *puVar2 = puVar2 + arg_8h_00;\n            puVar2 = puVar2 + arg_8h_00;\n        }\n        *puVar2 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 275
    },
    "0040a3d4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a3d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40a44b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00424448();\n    if (param_2 != 0) {\n        iVar2 = fcn.0041048c();\n        fcn.00424448(iVar2 + 5);\n        cVar1 = fcn.00416374();\n        if (cVar1 == '\\0') {\n            fcn.00424448();\n        }\n    }\n    fcn.00411160();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40a452;\n    uStack24 = 0x40a44a;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 255
    },
    "004101b4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004101b4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 50
    },
    "0042206c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042206c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00422468": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00422468(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 53
    },
    "004520ec": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004520ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0045200c(&stack0xfffffffc);\n        fcn.00452064(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n        fcn.00452064(*(arg_8h + 0xc) + -2, &stack0xfffffffc);\n    }\n    else {\n        fcn.0045200c(&stack0xfffffffc);\n        fcn.00452064(*(arg_8h + 4) + 5, &stack0xfffffffc);\n        fcn.00452064(*(arg_8h + 4) + 8, &stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0045d958": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045d958(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e0bc();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045da04": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045da04(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e0bc();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045dab0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045dab0(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e0bc();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 241
    },
    "0045db5c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045db5c(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e168();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045dc08": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045dc08(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e168();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045dcb4": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045dcb4(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e168();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045dd60": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045dd60(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e168();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "00401c50": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid fcn.00401c50(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    code *arg_8h;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    code *arg_ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_8h;\n    \n    fcn.00455058();\n    uVar1 = sub.KERNEL32.DLL_FindResourceA(0, 0x7b, 10);\n    uVar2 = sub.KERNEL32.DLL_LoadResource(0, uVar1);\n    uVar1 = sub.KERNEL32.DLL_SizeofResource(0, uVar1);\n    uVar2 = sub.KERNEL32.DLL_LockResource(uVar2);\n    arg_8h = sub.KERNEL32.DLL_VirtualAlloc(0, uVar1, 0x1000, 0x40);\n    fcn.00454ccc(arg_8h, uVar2, uVar1);\n    arg_ch = arg_8h;\n    fcn.00401988(&var_18h, 0x14e, 0);\n    fcn.00401c18(var_18h, arg_ch, uVar1);\n    iVar3 = var_8h - var_18h >> 1;\n    if (iVar3 < 0) {\n        iVar3 = iVar3 + ((var_8h - var_18h & 1U) != 0);\n    }\n    if (var_18h != 0) {\n        if (iVar3 * 2 < 0x81) {\n            fcn.0045f73c(var_18h, iVar3 * 2);\n        }\n        else {\n            fcn.00454224(var_18h);\n        }\n    }\n    (*arg_8h)();\n    *in_FS_OFFSET = var_3ch;\n    return;\n}\n",
        "token_count": 441
    },
    "0040d8d4": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d8d4(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0040eff8();\n        fcn.0040d03c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0040eff8();\n        fcn.0040d03c();\n    }\n    else {\n        fcn.0040eff8();\n        fcn.0040d03c();\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0045f328": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f328(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (arg_ch == 0) {\n        fcn.0045f6c8(arg_8h);\n    }\n    else {\n        if (arg_ch == 0) {\n            iVar1 = 0;\n        }\n        else if (arg_ch < 0x81) {\n            iVar1 = fcn.0045f37c(arg_ch);\n        }\n        else {\n            iVar1 = fcn.00454258(arg_ch);\n        }\n        *arg_8h = iVar1;\n        arg_8h[1] = *arg_8h;\n        arg_8h[4] = *arg_8h + arg_ch;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0045f594": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0045f594(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t arg_8h_00;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint var_4h;\n    \n    puVar4 = *0x465f00;\n    uVar2 = *arg_ch * arg_8h;\n    uVar5 = *0x465efc - *0x465f00;\n    if (uVar2 < uVar5 || uVar2 - uVar5 == 0) {\n        *0x465f00 = *0x465f00 + uVar2;\n    }\n    else if (uVar5 < arg_8h) {\n        arg_8h_00 = uVar2 * 2 + ((*0x465f04 >> 4) + 7 & 0xfffffff8);\n        if (uVar5 != 0) {\n            puVar3 = (uVar5 - 1 >> 3) * 4 + 0x465eb0;\n            **0x465f00 = *puVar3;\n            *puVar3 = puVar4;\n        }\n        *0x465f00 = fcn.00454258(arg_8h_00);\n        if (*0x465f00 == NULL) {\n            uVar2 = arg_8h;\n            if (arg_8h < 0x81) {\n                do {\n                    piVar6 = (uVar2 - 1 >> 3) * 4 + 0x465eb0;\n                    piVar1 = *piVar6;\n                    if (piVar1 != NULL) {\n                        *piVar6 = *piVar1;\n                        *0x465efc = piVar1 + uVar2;\n                        *0x465f00 = piVar1;\n                        puVar4 = fcn.0045f594(arg_8h, arg_ch);\n                        return puVar4;\n                    }\n                    uVar2 = uVar2 + 8;\n                } while (uVar2 < 0x81);\n            }\n            *0x465efc = 0;\n            *0x465f00 = fcn.00454258(arg_8h_00);\n        }\n        *0x465f04 = *0x465f04 + arg_8h_00;\n        *0x465efc = *0x465f00 + arg_8h_00;\n        puVar4 = fcn.0045f594(arg_8h, arg_ch);\n    }\n    else {\n        *arg_ch = uVar5 / arg_8h;\n        puVar4 = *0x465f00;\n        *0x465f00 = *0x465f00 + (uVar5 / arg_8h) * arg_8h;\n    }\n    return puVar4;\n}\n",
        "token_count": 666
    },
    "00402720": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402720(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffff | param_2 << 0x10;\n}\n",
        "token_count": 54
    },
    "0042153c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042153c(uchar param_1, uint32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_2 >> 2;\n    if (-1 < iVar1) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *in_EAX = CONCAT22(CONCAT11(param_1, param_1), CONCAT11(param_1, param_1));\n            in_EAX = in_EAX + 1;\n        }\n        for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n            *in_EAX = param_1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00429178": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00429178(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint var_102h;\n    uint var_2h;\n    \n    var_2h._0_1_ = in_AL;\n    fcn.0042275c();\n    iVar1 = sub.USER32.DLL_MapVirtualKeyA(var_2h, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.USER32.DLL_GetKeyNameTextA(iVar1 << 0x10, &var_102h, 0x100);\n        fcn.004229c4();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00402778": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402778(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX | (param_2 & 0xff0000) << 8;\n}\n",
        "token_count": 56
    },
    "00405eb8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405eb8(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0040a558": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a558(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004074e4();\n    if (iVar1 != -1) {\n        fcn.00407378();\n    }\n    iVar1 = fcn.004074e4();\n    if (iVar1 < 0) {\n        fcn.0040732c();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004145d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004145d4(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x414639;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x466734) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x00414623;\n    }\n    fcn.0042294c();\n    uVar1 = fcn.0041295c();\n    *(iVar2 * 4 + 0x466734) = uVar1;\ncode_r0x00414623:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x414640;\n    uStack24 = 0x414638;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 260
    },
    "00422480": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00422480(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x466f3c != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x466f3c == ppiVar1) {\n            *in_FS_OFFSET = **0x466f3c;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x466f3c) {\n                *ppiVar1 = **0x466f3c;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0042bd48": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042bd48(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042bd14();\n    if (iVar1 == -1) {\n        fcn.00429120();\n    }\n    fcn.0042bbf0();\n    return;\n}\n",
        "token_count": 66
    },
    "0042d5c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d5c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.USER32.DLL_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.0042ce04();\n        }\n    }\n    else {\n        sub.USER32.DLL_GetSubMenu();\n        iVar3 = fcn.0042ce04();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00438dd4();\n    }\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "0043fa7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043fa7c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.USER32.DLL_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.USER32.DLL_LoadCursorA();\n        fcn.0043fb34();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 129
    },
    "0043fde4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043fde4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 166
    },
    "004484f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004484f0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        fcn.00449018();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.004485a0();\n    }\n    else {\n        fcn.00449e1c();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x68))();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00455f09": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455f09(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    ushort in_FS;\n    \n    piVar1 = segment(in_FS, 0);\n    puVar2 = *piVar1;\n    if (arg_8h == puVar2) {\n        puVar2 = segment(in_FS, 0);\n        *puVar2 = *arg_8h;\n    }\n    else {\n        for (; puVar2 != 0xffffffff; puVar2 = *puVar2) {\n            if (*puVar2 == arg_8h) {\n                *puVar2 = *arg_8h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0045d7fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045d7fd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == -1) {\n        return 0xffffffff;\n    }\n    if (**(arg_8h + 4) == 0x25ff) {\n        iVar1 = **(*(arg_8h + 4) + 2);\n    }\n    else {\n        iVar1 = *(arg_8h + 4);\n    }\n    iVar1 = fcn.00454f10(iVar1 + -8, \"**BCCxh1\", 8);\n    if (iVar1 != 0) {\n        return 0xffffffff;\n    }\n    return *(arg_8h + 0x10);\n}\n",
        "token_count": 169
    },
    "004079fc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004079fc(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x407a70 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00407a68;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00407a68:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 433
    },
    "00409c9c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00409c9c(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00412ad0(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0040b638": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b638(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0040c628(param_1);\n    // switch table (6 cases) at 0x40b66d\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.004227b0();\n        break;\n    default:\n        fcn.0040a890();\n        break;\n    case 7:\n        fcn.0040ada0();\n        fcn.0042284c();\n        fcn.00422c64();\n        fcn.0040ada0();\n        break;\n    case 8:\n        fcn.004227b0();\n        break;\n    case 9:\n        fcn.004227b0();\n        break;\n    case 0xd:\n        fcn.004227b0();\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0040c738": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0040c738(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x40c8c7;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0040c628();\n    // switch table (21 cases) at 0x40c76f\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0040c684(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0040cb30();\n        break;\n    case 3:\n        fcn.0040cb30();\n        break;\n    case 4:\n        fcn.0040cb30();\n        break;\n    case 5:\n        fcn.0040cb30();\n        break;\n    case 6:\n    case 7:\n        fcn.0040c44c();\n        break;\n    case 10:\n        fcn.0040c6ac(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0040c63c();\n        break;\n    case 0xc:\n        fcn.0040c6ac(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0040c6dc(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0040cb30();\n        break;\n    case 0x10:\n        fcn.0040cb30();\n        break;\n    case 0x11:\n        fcn.0040cb30();\n        break;\n    case 0x12:\n        fcn.0040c6ac(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0040cb30();\n        break;\n    case 0x14:\n        fcn.0040c6ac(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40c8ce;\n    uStack20 = 0x40c8c6;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 538
    },
    "00410d78": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d78(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.0041048c();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x410dc0\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410f6c);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x410e5c\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410f6c));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x410eef\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x410f6c));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 818
    },
    "0040e9b4": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0040e9b4(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    float10 fVar5;\n    ulong uVar6;\n    uint uStackY384;\n    uint uStackY380;\n    uchar *puStackY376;\n    uint uStack368;\n    uint uStack364;\n    uchar *puStack360;\n    uint uStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uint var_13ch;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack336 = &stack0xfffffffc;\n    uStack340 = 0x40ed8d;\n    uStack344 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea8;\n    cVar1 = fcn.0041e44c();\n    if (cVar1 != '\\0') {\n        fcn.00414c2c();\n        fcn.004223bc();\n    }\n    uVar2 = fcn.0041e094();\n    uVar3 = uVar2 & 0xfff;\n    if (uVar3 < 8) {\n    // switch table (7 cases) at 0x40ea32\n        switch(uVar3) {\n        case 0:\n            fcn.0040eff8();\n            break;\n        case 1:\n            fcn.0040eff8();\n            break;\n        case 2:\n        case 3:\ncode_r0x0040ead5:\n            fcn.004235d4();\n            fcn.0040d8d4();\n            break;\n        case 4:\n            fVar5 = fcn.004235ec();\n            fcn.0040d7a4(fVar5);\n            break;\n        case 5:\n            uVar4 = fcn.004235ec();\n            puStack360 = 0x40eb1c;\n            fcn.0040d780(uVar4);\n            break;\n        case 6:\n            fVar5 = fcn.004235f4();\n            fcn.0040d7c8(ROUND(fVar5));\n            break;\n        default:\n            fVar5 = fcn.004235ec();\n            fcn.0040d7ec(SUB84(fVar5, 0));\n            break;\n        case 0xbad1abe1:\n            goto code_r0x0040eba0;\n        }\n    }\n    else {\n        if (uVar3 < 0x10) {\n            if (uVar3 == 8) {\n                fcn.00423604();\n                fcn.0040ef44();\n                goto code_r0x0040ed52;\n            }\n            if (uVar3 == 0xb) {\n                cVar1 = fcn.004235e4();\n                if (cVar1 == '\\0') {\n                    fcn.0040eff8();\n                }\n                else {\n                    fcn.0040eff8();\n                }\n                goto code_r0x0040ed52;\n            }\n        }\n        else {\n            if (uVar3 - 0x10 < 3) goto code_r0x0040ead5;\n            if (uVar3 - 0x13 < 2) {\n                uVar6 = fcn.004235dc();\n                fcn.0040d948(uVar6, uVar6 >> 0x20);\n                goto code_r0x0040ed52;\n            }\n            if (uVar3 == 0x100) {\n                fcn.004235fc();\n                fcn.0040eef0();\n                goto code_r0x0040ed52;\n            }\n        }\ncode_r0x0040eba0:\n        uVar4 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffe9c;\n        puStack360 = 0x40ebb9;\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 != '\\0') {\n            puStack360 = 0x40ebc5;\n            puStack360 = fcn.00424448();\n            uStack364 = 0x40ebd0;\n            fcn.0042360c();\n            puStack360 = 0x40ebde;\n            cVar1 = fcn.00416350();\n            if (cVar1 != '\\0') {\n                puStack360 = 0x40ec08;\n                fcn.00421bf8();\n                puStack360 = 0x40ec17;\n                fcn.00421bf8();\n                uStack364 = 0x40ed20;\n                uStack368 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe90;\n                puStackY376 = 0x40ec3c;\n                puStack360 = &stack0xfffffffc;\n                fcn.0040a1d8(0x400);\n                uStackY380 = 0x40ecc5;\n                uStackY384 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe80;\n                puStackY376 = &stack0xfffffffc;\n                (**(_pe_dos_header + 0x10))();\n                fcn.00409828();\n                fcn.00421b78();\n                fcn.004229b8();\n                fcn.0040eef0();\n                fcn.0040d03c();\n                fcn.0040d03c();\n                *in_FS_OFFSET = uStackY384;\n                puStackY376 = 0x40eccc;\n                uStackY380 = 0x40ecc4;\n                fcn.00421c28();\n                return;\n            }\n        }\n        puStack360 = 0x40ebec;\n        fcn.004235fc();\n        puStack360 = 0x40ebf7;\n        fcn.0040eef0();\n        *in_FS_OFFSET = uVar4;\n    }\ncode_r0x0040ed52:\n    *in_FS_OFFSET = uStack344;\n    puStack336 = 0x40ed94;\n    uStack340 = 0x40ed6c;\n    fcn.00422780();\n    uStack340 = 0x40ed74;\n    fcn.00424448();\n    uStack340 = 0x40ed7c;\n    fcn.0042275c();\n    uStack340 = 0x40ed84;\n    fcn.00422e4c();\n    uStack340 = 0x40ed8c;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 1539
    },
    "00421a68": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00421a68(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.USER32.DLL_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.USER32.DLL_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 138
    },
    "00421f24": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00421f24(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00421f70;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00421f70:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 429
    },
    "0041c700": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c700(int32_t param_1)\n\n{\n    bool bVar1;\n    uint *in_FS_OFFSET;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint in_stack_ffffffbc;\n    uint uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar1 = false;\n    uVar2 = fcn.004193f0();\n    uVar3 = fcn.004193f0();\n    uVar4 = uVar3;\n    // switch table (11 cases) at 0x41c743\n    switch(param_1) {\n    case 0:\n    case 1:\n    case 2:\n        *in_FS_OFFSET = &stack0xffffffc4;\n        if (param_1 == 0) {\n            uVar2 = uVar2 + uVar3;\n        }\n        else if (param_1 == 1) {\n            uVar2 = uVar2 - uVar3;\n        }\n        else if (param_1 == 2) {\n            uVar2 = fcn.004236a4(uVar3);\n            in_stack_ffffffbc = uVar4;\n        }\n        *in_FS_OFFSET = in_stack_ffffffbc;\n        break;\n    case 3:\n        bVar1 = true;\n        break;\n    case 4:\n        uVar2 = fcn.004236c8();\n        break;\n    case 5:\n        uVar2 = fcn.00423790();\n        break;\n    case 6:\n        uVar2 = fcn.0042385c();\n        break;\n    case 7:\n        uVar2 = fcn.0042387c();\n        break;\n    case 8:\n        uVar2 = uVar3 & uVar2;\n        break;\n    case 9:\n        uVar2 = uVar3 | uVar2;\n        break;\n    case 10:\n        uVar2 = uVar2 ^ uVar3;\n        break;\n    default:\n        fcn.0041741c();\n    }\n    var_14h = uVar2 >> 0x20;\n    var_18h = uVar2;\n    if (bVar1) {\n        fcn.0041c51c();\n    }\n    else {\n        fcn.00423624(var_18h, var_14h);\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "00423168": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00423168(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00423168();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00423138();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x466904 != NULL) {\n                (**0x466904)();\n            }\n            fcn.00420f2c();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 510
    },
    "00423328": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00423328(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.00421024();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.004227b0();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00422e88();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004235cc();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00423444(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00423328();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00424460();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x466904 != NULL) {\n                    (**0x466904)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00420f2c();\n                return;\n            }\n            fcn.00423dd8();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.00421024();\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00423444": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __thiscall fcn.00423444(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.004227b0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00422e88();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004235cc();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00423444();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00423328();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00424460();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x466904 != NULL) {\n                (**0x466904)();\n            }\n            fcn.00420f2c();\n            return;\n        }\n        do {\n            fcn.00423dd8();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "00456c18": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456c18(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char cVar3;\n    \n    iVar2 = 7;\n    pcVar1 = arg_ch + 7;\n    do {\n        cVar3 = arg_8h & 0xf;\n        if ((arg_8h & 0xf) < 10) {\n            *pcVar1 = cVar3 + '0';\n        }\n        else {\n            *pcVar1 = cVar3 + '7';\n        }\n        arg_8h = arg_8h >> 4;\n        iVar2 = iVar2 + -1;\n        pcVar1 = pcVar1 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 181
    },
    "0045a8b0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045a8b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = 0;\n    piVar2 = 0x463fd4;\n    do {\n        if (arg_8h == *piVar2) {\n            return iVar1;\n        }\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 < 10);\n    return -1;\n}\n",
        "token_count": 122
    },
    "00409694": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409694(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.004093ac();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.00409694(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 394
    },
    "0041268c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041268c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    \n    uVar1 = 0;\n    uVar2 = param_1 & 3;\n    param_1 = param_1 >> 2;\n    bVar5 = param_1 == 0;\n    do {\n        piVar3 = in_EAX;\n        piVar4 = param_2;\n        if (param_1 == 0) break;\n        param_1 = param_1 - 1;\n        piVar4 = param_2 + 1;\n        piVar3 = in_EAX + 1;\n        bVar5 = *in_EAX == *param_2;\n        in_EAX = piVar3;\n        param_2 = piVar4;\n    } while (bVar5);\n    if (bVar5) {\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            bVar5 = *piVar3 == *piVar4;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        } while (bVar5);\n        if (bVar5) {\n            uVar1 = 1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 338
    },
    "0042297c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042297c(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x004229a5:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x004229a2:\n                piVar2 = piVar2 + 1;\n                goto code_r0x004229a5;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x004229a2;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0042275c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0042287c(arg_8h),  -1 < iVar1)) {\n        fcn.0042284c();\n    }\n    else {\n        fcn.00422d98();\n        fcn.0042287c(arg_8h);\n        fcn.00422d98();\n    }\n    return;\n}\n",
        "token_count": 370
    },
    "004229dc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004229dc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.0042275c(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.0042287c(arg_8h),  -1 < iVar1)) {\n        fcn.0042284c();\n    }\n    else {\n        fcn.00422d98();\n        fcn.0042287c(arg_8h);\n        fcn.00422d98();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00422e88": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00422e88(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (*(param_2 + -4) >> 1 != 0)) {\n        iVar1 = sub.OLEAUT32.DLL_SysFreeString();\n        if (iVar1 != 0) {\n            return;\n        }\n        if (*0x466904 != NULL) {\n            (**0x466904)();\n        }\n        fcn.00420f2c();\n        return;\n    }\n    iVar1 = *in_EAX;\n    if (iVar1 != 0) {\n        *in_EAX = 0;\n        sub.OLEAUT32.DLL_SysStringLen(iVar1);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00422f5c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00422f5c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00422f85:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00422f82:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00422f85;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00422f82;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.OLEAUT32.DLL_SysStringLen(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.OLEAUT32.DLL_SysReAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.OLEAUT32.DLL_SysStringLen(iVar1);\n        return;\n    }\n    if (*0x466904 != NULL) {\n        (**0x466904)();\n    }\n    fcn.00420f2c();\n    return;\n}\n",
        "token_count": 453
    },
    "00422fb8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00422fb8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00454ccc": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00454ccc(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    puVar2 = arg_8h;\n    for (uVar1 = arg_10h >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar2 = puVar2 + 1;\n    }\n    for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n        *puVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar2 = puVar2 + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 206
    },
    "00454cf0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00454cf0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    \n    if (arg_8h < arg_ch) {\n        puVar3 = arg_8h;\n        for (uVar1 = arg_10h >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar3 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar3 = puVar3 + 1;\n        }\n        for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *puVar3 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else if (arg_8h != arg_ch) {\n        puVar2 = arg_ch + (arg_10h - 1);\n        puVar4 = arg_8h + (arg_10h - 1);\n        for (uVar1 = arg_10h & 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar4 = *puVar2;\n            puVar2 = puVar2 + -1;\n            puVar4 = puVar4 + -1;\n        }\n        puVar3 = puVar2 + -3;\n        puVar5 = puVar4 + -3;\n        for (arg_10h = arg_10h >> 2; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *puVar5 = *puVar3;\n            puVar3 = puVar3 + -1;\n            puVar5 = puVar5 + -1;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 463
    },
    "00454de0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00454de0(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    \n    iVar2 = -1;\n    pcVar7 = arg_8h;\n    do {\n        pcVar6 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = 0xffffffff;\n    do {\n        pcVar7 = arg_ch;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = arg_ch + 1;\n        cVar1 = *arg_ch;\n        arg_ch = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = pcVar6 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 442
    },
    "0040ada0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ada0(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0040adec();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0040d03c": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d03c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0040d110();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00412c78": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412c78(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    uVar2 = 0xffffffff;\n    puVar4 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    for (uVar3 = ~uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = ~uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "00412ca0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412ca0(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 336
    },
    "00421448": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00421448(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x0042148b:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x004214c6:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x004214c6;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x0042148b;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x004214c6;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "004214cc": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004214cc(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x004214fc:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x004214fc;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 322
    },
    "00421c34": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00421c69)\n// WARNING: Removing unreachable block (ram,0x00421c6f)\n// WARNING: Removing unreachable block (ram,0x00421c76)\n// WARNING: Removing unreachable block (ram,0x00421c7c)\n// WARNING: Removing unreachable block (ram,0x00421c82)\n\nvoid __fastcall fcn.00421c34(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "00422b58": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422b58(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00423024": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423024(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00454e78": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00454e78(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    \n    iVar2 = -1;\n    pcVar5 = arg_8h;\n    do {\n        pcVar4 = pcVar5;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar4 = pcVar5 + 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar4;\n    } while (cVar1 != '\\0');\n    pcVar4 = pcVar4 + -1;\n    for (uVar3 = arg_10h & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        cVar1 = *arg_ch;\n        *pcVar4 = cVar1;\n        if (cVar1 == '\\0') {\n            return arg_8h;\n        }\n        arg_ch = arg_ch + 1;\n        pcVar4 = pcVar4 + 1;\n    }\n    arg_10h = arg_10h >> 2;\n    while( true ) {\n        if (arg_10h == 0) {\n            *pcVar4 = '\\0';\n            return arg_8h;\n        }\n        cVar1 = *arg_ch;\n        *pcVar4 = cVar1;\n        if (cVar1 == '\\0') {\n            return arg_8h;\n        }\n        cVar1 = arg_ch[1];\n        pcVar4[1] = cVar1;\n        if (cVar1 == '\\0') {\n            return arg_8h;\n        }\n        cVar1 = arg_ch[2];\n        pcVar4[2] = cVar1;\n        if (cVar1 == '\\0') break;\n        cVar1 = arg_ch[3];\n        arg_ch = arg_ch + 4;\n        pcVar4[3] = cVar1;\n        pcVar4 = pcVar4 + 4;\n        if (cVar1 == '\\0') {\n            return arg_8h;\n        }\n        arg_10h = arg_10h - 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 523
    },
    "0040b52c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.0040b52c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    float10 fStack20;\n    \n    cVar1 = fcn.0040c628();\n    if (cVar1 == '\\x05') {\n        fcn.0040ada0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.0040b738();\n        fStack20 = iVar2;\n    }\n    return fStack20;\n}\n",
        "token_count": 137
    },
    "00449b78": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00449b78(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    ulong uVar5;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar5 = (**(*in_EAX + 0x34))();\n        uVar4 = uVar5;\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar5 >> 0x20 & 0xffffff00 | uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 277
    },
    "00458474": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00458474(int32_t *arg_8h)\n\n{\n    if (*arg_8h == 4) {\n        arg_8h[6] = 0;\n        arg_8h[7] = 0;\n        return 1;\n    }\n    if (*arg_8h == 5) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 88
    },
    "004584a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004584a0(int32_t *arg_8h)\n\n{\n    if (*arg_8h == 4) {\n        arg_8h[7] = 0;\n        arg_8h[8] = 0;\n        *(arg_8h + 9) = 0;\n        return 1;\n    }\n    if (*arg_8h == 5) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 103
    },
    "0040c684": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c684(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0040aa38();\n        if (cVar1 != '\\0') break;\n        fcn.0040c738();\n    }\n    fcn.0040b7f0();\n    return;\n}\n",
        "token_count": 82
    },
    "0040c6dc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6dc(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0040aa38();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0040ad7c();\n        if (cVar1 - 2U < 3) {\n            fcn.0040c738();\n        }\n        fcn.0040cb30();\n        while( true ) {\n            cVar1 = fcn.0040aa38();\n            if (cVar1 != '\\0') break;\n            fcn.0040c8d4();\n        }\n        fcn.0040b7f0();\n    }\n    fcn.0040b7f0();\n    return;\n}\n",
        "token_count": 178
    },
    "00420b2c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420b2c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint32_t *puVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    uVar7 = param_2 + 7U & 0xfffffffc;\n    if (uVar7 < 0xc) {\n        uVar7 = 0xc;\n    }\n    puVar6 = in_EAX + -4;\n    uVar9 = *puVar6 & 0x7ffffffc;\n    puVar3 = puVar6 + uVar9;\n    uVar8 = uVar7;\n    if (uVar9 < uVar7) {\n        do {\n            iStack20 = uVar7 - uVar9;\n            if (puVar6 + uVar9 == *0x466f20) {\n                if (iStack20 <= *0x466f1c) {\n                    *0x466f1c = *0x466f1c - iStack20;\n                    *0x466f20 = *0x466f20 + iStack20;\n                    if (*0x466f1c < 0xc) {\n                        *0x466f20 = *0x466f20 + *0x466f1c;\n                        uVar7 = uVar7 + *0x466f1c;\n                        *0x466f1c = 0;\n                    }\n                    *0x466ebc = *0x466ebc + (uVar7 - uVar9);\n                    uVar8 = *puVar6;\n                    *puVar6 = uVar7 | uVar8 & 0x80000003;\n                    uVar4 = CONCAT31((uVar8 & 0x80000003) >> 8, 1);\n                    goto code_r0x00420cf4;\n                }\n                fcn.004205a0();\n            }\n            puVar5 = puVar6 + uVar9;\n            if ((*puVar5 & 2) == 0) {\n                uVar1 = puVar5[2];\n                if (iStack20 <= uVar1) {\n                    fcn.004202b0();\n                    if (uVar1 - iStack20 < 0xc) {\n                        uVar8 = uVar7 + (uVar1 - iStack20);\n                        puVar5 = puVar6 + uVar8;\n                        *puVar5 = *puVar5 & 0xfffffffe;\n                    }\n                    else {\n                        fcn.00420518();\n                    }\n                    goto code_r0x00420cdb;\n                }\n                puVar5 = puVar5 + uVar1;\n                iStack20 = iStack20 - uVar1;\n            }\n        } while (((*puVar5 & 0x80000000) != 0) && (cVar2 = fcn.004206a4(),  cVar2 != '\\0'));\n        uVar4 = 0;\n    }\n    else {\n        uStack24 = uVar9 - uVar7;\n        if (puVar3 == *0x466f20) {\n            *0x466f20 = *0x466f20 + -uStack24;\n            *0x466f1c = *0x466f1c + uStack24;\n            if (*0x466f1c < 0xc) {\n                *0x466f20 = *0x466f20 + uStack24;\n                *0x466f1c = *0x466f1c - uStack24;\n                uVar8 = uVar9;\n            }\n        }\n        else {\n            if ((*puVar3 & 2) == 0) {\n                uStack24 = uStack24 + *(puVar3 + 8);\n                fcn.004202b0();\n            }\n            uVar8 = uVar9;\n            if (0xb < uStack24) {\n                *(puVar6 + uVar7) = uStack24 | 2;\n                fcn.00420374();\n                uVar8 = uVar7;\n            }\n        }\ncode_r0x00420cdb:\n        *0x466ebc = *0x466ebc + (uVar8 - uVar9);\n        uVar7 = *puVar6;\n        *puVar6 = uVar8 | uVar7 & 0x80000003;\n        uVar4 = CONCAT31((uVar7 & 0x80000003) >> 8, 1);\n    }\ncode_r0x00420cf4:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 1078
    },
    "0042c35c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042c35c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.004154e0();\n    if (iVar1 != 0) {\n        fcn.00422cac();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 89
    },
    "00439b14": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439b14(uint param_1, int32_t param_2)\n\n{\n    fcn.0044c16c();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 66
    },
    "0044a9ac": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a9ac(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405e40();\n    fcn.004486f8();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00405e90(&var_20h, \n                 ((*(iVar1 + 0x50) - *(iVar1 + 0x48)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.004485a0();\n    return;\n}\n",
        "token_count": 184
    },
    "00413f10": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413f10(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    while( true ) {\n        uVar2 = fcn.00422a14();\n        if ((uVar2 < *param_2) ||\n           (cVar1 = *(in_EAX + -1 + *param_2),  uVar2 = *param_2 & 0xffffff00 | cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar2 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar2 >> 3) + 0x4615e8) >> (uVar2 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            uVar2 = fcn.004154a4();\n            *param_2 = uVar2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 252
    },
    "004146fc": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004146fc(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x4148c6;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.0042275c();\n    arg_8h = &fcn.004146fc::var_8h;\n    sub.KERNEL32.DLL_GetThreadLocale();\n    fcn.004143c4(arg_8h);\n    iVar3 = fcn.0041295c();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.00422a14(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x4615e8) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.00412d7c();\n                if (iVar3 == 0) {\n                    fcn.00422a1c();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.00412d7c();\n                    if (iVar3 == 0) {\n                        fcn.00422a1c();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.00412d7c();\n                        if (iVar3 == 0) {\n                            fcn.00422a1c();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00422a1c();\n                            }\n                            else {\n                                fcn.0042293c();\n                                fcn.00422a1c();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.00415468();\n                arg_8h = &fcn.004146fc::var_10h;\n                fcn.00422c6c();\n                fcn.00422a1c();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x466710 == 4) || (*0x466710 - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.00422a14(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.0042293c();\n                    fcn.00422a1c();\n                }\n            }\n        }\n        else {\n            fcn.004227b0();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x4148cd;\n    iStack48 = 0x4148c5;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 890
    },
    "00415150": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415150(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41520b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.00414eec();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x4151a9;\n            iVar3 = fcn.00414f84(&stack0xfffffffc);\n            goto code_r0x004151de;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.00415150::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00424964();\n            iVar3 = fcn.00414bac(in_stack_ffffffd4, arg_ch);\n            goto code_r0x004151de;\n        }\n    }\n    iVar3 = fcn.00414b70();\ncode_r0x004151de:\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x415212;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 471
    },
    "00415694": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415694(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint var_1h;\n    \n    uVar3 = fcn.00415620(arg_8h + -0x14);\n    sub.KERNEL32.DLL_GetCPInfo(uVar3);\n    for (iVar5 = 0; (iVar5 < 0xc && ((*(arg_8h + -0xe + iVar5) | *(arg_8h + -0xd + iVar5)) != 0)); iVar5 = iVar5 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar5);\n        uVar1 = *(arg_8h + -0xd + iVar5);\n        if (var_1h <= uVar1) {\n            cVar4 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x4615e8;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar4 = cVar4 + -1;\n            } while (cVar4 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "00415f20": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint * fcn.00415f20(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.00415e78();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.00415d54();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 183
    },
    "0041d710": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d710(uint param_1, ushort *param_2)\n\n{\n    uint16_t in_AX;\n    \n    param_2[4] = -(in_AX & 0xff);\n    *param_2 = 2;\n    return;\n}\n",
        "token_count": 60
    },
    "0042142c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042142c(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    \n    if (*param_2 < param_1) {\n        param_1 = *param_2;\n    }\n    *in_EAX = param_1;\n    fcn.00421024();\n    return;\n}\n",
        "token_count": 83
    },
    "0042176c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042176c(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    \n    param_1 = param_1 & 0xff;\n    do {\n        if (param_1 == 0) {\n            return;\n        }\n        param_1 = param_1 - 1;\n        cVar1 = *in_EAX;\n        cVar2 = *param_2;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + 1;\n    } while (cVar1 == cVar2);\n    return;\n}\n",
        "token_count": 149
    },
    "0042e46c": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042e46c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.0042275c();\n    iVar3 = 1;\n    iVar1 = fcn.00422a14();\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x466468 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.0042293c();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "0042fcd0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0042fcd0(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.USER32.DLL_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00453e94": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00453e94(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x453f1a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x46710c == 0;\n    *0x46710c = *0x46710c + -1;\n    if (bVar2) {\n        uVar1 = sub.KERNEL32.DLL_GetVersion();\n        *0x467108 = 3 < uVar1;\n        fcn.00453c60();\n        fcn.00406ab8();\n        fcn.00406b58();\n        fcn.00406b04();\n        fcn.00406b04();\n        fcn.00406b04();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 237
    },
    "00414d28": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.00414d28(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.00421004();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x4616ec))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.00414b70();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.00414c68(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 179
    },
    "0044b3bc": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.0044b3bc(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint var_1h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x44b3d7\n    switch(in_CL) {\n    case 1:\n        uVar1 = *(in_EAX + 0x44) < *(in_EDX + 0x44);\n        break;\n    case 2:\n        uVar1 = *(in_EDX + 0x44) + *(in_EDX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n        break;\n    case 3:\n        uVar1 = *(in_EAX + 0x40) < *(in_EDX + 0x40);\n        break;\n    case 4:\n        uVar1 = *(in_EDX + 0x40) + *(in_EDX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 <= *(in_EAX + 0x40) + *(in_EAX + 0x48);\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa4))();\n    }\n    return uVar1;\n}\n",
        "token_count": 361
    },
    "0041281c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0041281c(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar2 = fcn.00422a14();\n    if ((iVar2 != 0) && (((cVar1 = *in_EAX,  cVar1 + 0xbfU < 0x1a || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)))) {\n        iVar2 = fcn.00422a14();\n        if (1 < iVar2) {\n            iVar2 = iVar2 + -1;\n            iVar4 = 2;\n            do {\n                cVar1 = in_EAX[iVar4 + -1];\n                if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                    return 0;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 295
    },
    "00412e48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00412e48(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "00412e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00412e80(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00420de0();\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00420344": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420344(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *in_EAX;\n    \n    puVar1 = (param_2 - 4) + in_EAX;\n    if (0xf < param_2) {\n        *puVar1 = 0x80000007;\n        fcn.00420518();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n        *puVar1 = param_2 | 0x80000002;\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00420374": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00420374(void)\n\n{\n    int32_t in_EAX;\n    \n    *0x466eb8 = *0x466eb8 + 1;\n    *0x466ebc = *0x466ebc + ((*(in_EAX + -4) & 0x7ffffffc) - 4);\n    fcn.00420988();\n    return;\n}\n",
        "token_count": 86
    },
    "00420468": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t fcn.00420468(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uStack28;\n    int32_t iStack27;\n    int32_t iStack23;\n    \n    uStack28 = 0;\n    uVar1 = fcn.00420314();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (in_EAX - *(uVar1 + 8) < 0xc) {\n            uVar2 = fcn.00420080();\n        }\n        else {\n            uVar2 = fcn.00420080();\n        }\n        if (iStack27 != 0) {\n            fcn.00420344();\n            if (iStack27 + iStack23 < *(uVar1 + 8) + *(uVar1 + 0xc)) {\n                fcn.00420398();\n            }\n            uVar2 = fcn.0041fb90();\n            uStack28 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uStack28;\n}\n",
        "token_count": 254
    },
    "004205ec": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004205ec(void)\n\n{\n    uint32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    \n    uStack28 = *in_EAX;\n    uStack24 = in_EAX[1];\n    fcn.004205a0();\n    fcn.0041fb20();\n    if (uStack20 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (uStack20 < uStack28) {\n            iVar2 = fcn.004203c0();\n            uStack28 = uStack28 - iVar2;\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack28 + uStack24 < uStack20 + iStack16) {\n            iVar2 = fcn.00420430();\n            uStack24 = uStack24 + iVar2;\n        }\n        if (uStack20 + iStack16 == uStack28 + uStack24) {\n            fcn.00420344();\n            uStack24 = uStack24 - 4;\n        }\n        *0x466f20 = uStack28;\n        *0x466f1c = uStack24;\n        uVar1 = CONCAT31(uStack24 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 317
    },
    "00420704": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t * fcn.00420704(void)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    \n    while ((puVar1 = *0x466f18,  puVar3 = *0x466f10,  (*0x466f10)[2] < in_EAX &&\n           (uVar4 = (*0x466f18)[2],  puVar3 = *0x466f18,  uVar4 < in_EAX))) {\n        (*0x466f18)[2] = in_EAX;\n        puVar3 = puVar1;\n        do {\n            puVar3 = puVar3[1];\n        } while (puVar3[2] < in_EAX);\n        (*0x466f18)[2] = uVar4;\n        puVar1 = puVar3;\n        if ((puVar3 != *0x466f18) ||\n           ((in_EAX < 0x1001 && (puVar3 = fcn.004206d8(),  puVar1 = *0x466f18,  puVar3 != NULL)))) break;\n        cVar2 = fcn.00420678();\n        puVar3 = *0x466f20;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        if (in_EAX <= *0x466f1c) {\n            *0x466f1c = *0x466f1c - in_EAX;\n            if (*0x466f1c < 0xc) {\n                in_EAX = in_EAX + *0x466f1c;\n                *0x466f1c = 0;\n            }\n            *0x466f20 = *0x466f20 + in_EAX;\n            *puVar3 = in_EAX | 2;\n            *0x466eb8 = *0x466eb8 + 1;\n            *0x466ebc = *0x466ebc + (in_EAX - 4);\n            return puVar3 + 1;\n        }\n    }\n    *0x466f18 = puVar1;\n    fcn.004202b0();\n    uVar4 = puVar3[2];\n    if (uVar4 - in_EAX < 0xc) {\n        if (puVar3 == *0x466f18) {\n            *0x466f18 = puVar3[1];\n        }\n        *(puVar3 + uVar4) = *(puVar3 + uVar4) & 0xfffffffe;\n    }\n    else {\n        fcn.00420518();\n        uVar4 = in_EAX;\n    }\n    *puVar3 = uVar4 | 2;\n    *0x466eb8 = *0x466eb8 + 1;\n    *0x466ebc = *0x466ebc + (uVar4 - 4);\n    return puVar3 + 1;\n}\n",
        "token_count": 674
    },
    "00421070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00421070(void)\n\n{\n    float10 in_ST0;\n    \n    return ROUND(in_ST0);\n}\n",
        "token_count": 28
    },
    "00423c88": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423c88(uint param_1)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00423ca8(param_1, *(in_EAX + -4));\n        return;\n    }\n    fcn.00423d9c();\n    return;\n}\n",
        "token_count": 76
    },
    "00431544": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00431544(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 70
    },
    "00454f10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454f10(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    \n    do {\n        if ((((arg_10h < 4) || (*arg_ch != *arg_8h)) || (arg_ch[1] != arg_8h[1])) ||\n           ((arg_ch[2] != arg_8h[2] || (arg_ch[3] != arg_8h[3])))) break;\n        arg_10h = arg_10h + -4;\n        arg_8h = arg_8h + 4;\n        arg_ch = arg_ch + 4;\n    } while (3 < arg_10h);\n    if (arg_10h == 0) {\n        iVar3 = 0;\n    }\n    else {\n        do {\n            uVar1 = *arg_8h;\n            uVar2 = *arg_ch;\n            if (uVar2 != uVar1) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        iVar3 = uVar1 - uVar2;\n    }\n    return iVar3;\n}\n",
        "token_count": 315
    },
    "0045ed18": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045ed18(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ed6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045ed6c(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0045edc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045edc0(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0045ee14": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045ee14(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ee68": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045ee68(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045eebc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045eebc(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ef10();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00413df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413df8(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.00413dd4();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.00422a14();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n        in_EDX = in_ECX;\n    }\n    return in_EDX & 0xffffff00 | iVar2 < iVar3;\n}\n",
        "token_count": 302
    },
    "00413032": {
        "rules": [
            "search for credit card data/546f8dc683b8415fa126b38355d21de5",
            "parse credit card information/2fba96855ce44cd2afbbefaf4df20b4d"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004130e9: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004130ee)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413032(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t *piVar3;\n    char extraout_CL;\n    uint uVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    uint var_71h;\n    uint var_61h;\n    uint var_51h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    int32_t *piVar10;\n    uint var_ch;\n    uint uVar11;\n    uint var_4h;\n    \n    uVar1 = *(unaff_EBP + -0xc);\n    if (uVar1 < *(unaff_EBP + 8) || uVar1 == *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x00413052. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x413059\n        (**(*(*(unaff_EBP + 0xc) + uVar1 * 8 + 4) * 4 + 0x413059))();\n        return;\n    }\n    do {\n        fcn.004132fc();\n        piVar3 = fcn.00412e90();\n        piVar10 = unaff_EBP + -0x30;\n        *piVar10 = *piVar3;\n        *(unaff_EBP + -0x2c) = piVar3[1];\n        if (extraout_CL == 'D') {\n            if ((*(unaff_EBP + -0x2c) & 0x80000000) != 0) {\n                iVar7 = *piVar10;\n                *piVar10 = -*piVar10;\n                *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + (iVar7 != 0);\n                *(unaff_EBP + -0x2c) = -*(unaff_EBP + -0x2c);\n            }\ncode_r0x004130f5:\n            uVar4 = 10;\n            goto code_r0x004130fa;\n        }\n        if (extraout_CL == 'U') goto code_r0x004130f5;\n    } while (extraout_CL != 'X');\n    uVar4 = 0x10;\ncode_r0x004130fa:\n    puVar8 = unaff_EBP + -0x51;\n    do {\n        uVar11 = 0;\n        cVar2 = fcn.0042380c(uVar4, 0, uVar4, piVar10);\n        uVar6 = cVar2 + 0x30;\n        if (0x39 < uVar6) {\n            uVar6 = cVar2 + 0x37;\n        }\n        puVar8 = puVar8 + -1;\n        *puVar8 = uVar6;\n        piVar10 = NULL;\n        iVar9 = fcn.00423744(uVar4, 0, uVar4, uVar11);\n        *piVar10 = iVar9;\n        piVar10[1] = iVar9 >> 0x20;\n    } while (iVar9 != 0);\n    uVar5 = (unaff_EBP + -0x51) - puVar8;\n    uVar1 = *(unaff_EBP + -0x24);\n    if (uVar1 < 0x11) {\n        iVar7 = uVar1 - uVar5;\n        if (uVar5 <= uVar1 && iVar7 != 0) {\n            do {\n                puVar8 = puVar8 + -1;\n                *puVar8 = 0x30;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 997
    },
    "00413470": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413470(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x00413486:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0041348d;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x00413486;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0041348d:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x46164c;\n            *puVar3 = param_2 % *0x46164c + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 418
    },
    "004138db": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004138db(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x4138c7 + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x00413972;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0041397b;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x00413982;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x004139a8:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x00413982:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x00413972:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0041397b:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x004139a8;\n}\n",
        "token_count": 1145
    },
    "00422554": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00422554(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x461a58;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x461a5c;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = \"0123456789ABCDEF\\x02\"[uVar2 & 0xf];\n        uVar2 = uVar2 >> 4;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 224
    },
    "004404e4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004404e4(void)\n\n{\n    fcn.00416340();\n    return;\n}\n",
        "token_count": 24
    },
    "00421780": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00421780(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00421a98": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421a98(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *0x461a64;\n    puStack20 = &fcn.00421a98::var_4h;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x421b30;\n    uStack36 = 0x80000002;\n    puStack40 = 0x421abf;\n    iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x421b09;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = var_4h;\n        puStack40 = &stack0xfffffffc;\n        sub.ADVAPI32.DLL_RegQueryValueExA(var_4h, 0x421b4c, 0, 0, &fcn.00421a98::var_8h, &fcn.00421a98::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.ADVAPI32.DLL_RegCloseKey(var_4h, 0x421b10);\n        return;\n    }\n    *0x461a64 = *0x461a64 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 417
    },
    "00423744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00423744(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 391
    },
    "0042380c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042380c(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 392
    },
    "00457e1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457e1f(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        in_EAX = CONCAT44(param_2, in_EAX) / param_3;\n        param_2 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 393
    },
    "00457ee2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457ee2(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    if ((param_4 == 0) && ((param_2 == 0 || (param_3 == 0)))) {\n        uVar2 = CONCAT44(param_2, in_EAX) % param_3;\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = 0x40;\n        uVar3 = 0;\n        uVar2 = 0;\n        do {\n            bVar4 = in_EAX < 0;\n            in_EAX = in_EAX * 2;\n            bVar5 = param_2 < 0;\n            param_2 = param_2 << 1 | bVar4;\n            bVar4 = uVar2 < 0;\n            uVar2 = uVar2 << 1 | bVar5;\n            uVar3 = uVar3 << 1 | bVar4;\n            if ((param_4 <= uVar3) && ((param_4 < uVar3 || (param_3 <= uVar2)))) {\n                bVar4 = uVar2 < param_3;\n                uVar2 = uVar2 - param_3;\n                uVar3 = (uVar3 - param_4) - bVar4;\n                in_EAX = in_EAX + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 392
    },
    "00454d3c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00454d3c(uint *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    ushort uVar3;\n    uint8_t uVar4;\n    uint *puVar5;\n    \n    uVar3 = CONCAT11(arg_ch, arg_ch);\n    if ((arg_10h & 0xfffffffc) == 0) {\n        if ((arg_10h & 3) != 0) {\n            *arg_8h = arg_ch;\n            uVar4 = (arg_10h & 3) - 1;\n            if (uVar4 != 0) {\n                *(arg_8h + (uVar4 - 1)) = uVar3;\n            }\n        }\n        return arg_8h;\n    }\n    *arg_8h = uVar3;\n    puVar1 = arg_8h + (arg_10h - 4);\n    *(arg_8h + 2) = uVar3;\n    uVar2 = *arg_8h;\n    arg_10h = arg_10h >> 3;\n    puVar5 = arg_8h;\n    if (arg_10h == 0) {\n        *puVar1 = uVar2;\n        return arg_8h;\n    }\n    do {\n        *puVar5 = uVar2;\n        puVar5[1] = uVar2;\n        if (arg_10h == 1) break;\n        puVar5[2] = uVar2;\n        puVar5[3] = uVar2;\n        if (arg_10h == 2) break;\n        puVar5[4] = uVar2;\n        puVar5[5] = uVar2;\n        if (arg_10h == 3) break;\n        puVar5[6] = uVar2;\n        puVar5[7] = uVar2;\n        if (arg_10h == 4) break;\n        puVar5[8] = uVar2;\n        puVar5[9] = uVar2;\n        if (arg_10h == 5) break;\n        puVar5[10] = uVar2;\n        puVar5[0xb] = uVar2;\n        puVar5 = puVar5 + 0xc;\n        arg_10h = arg_10h - 6;\n    } while (arg_10h != 0);\n    *puVar1 = uVar2;\n    puVar1[-1] = uVar2;\n    return arg_8h;\n}\n",
        "token_count": 578
    },
    "0045f37c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f37c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_10h;\n    \n    fcn.00455058();\n    piVar2 = (arg_8h - 1U >> 3) * 4 + 0x465eb0;\n    fcn.0045f444(0x465ef0);\n    piVar1 = *piVar2;\n    if (piVar1 == NULL) {\n        fcn.0045f524(arg_8h);\n    }\n    else {\n        *piVar2 = *piVar1;\n    }\n    *0x465ef0 = 0;\n    *in_FS_OFFSET = var_2ch;\n    return;\n}\n",
        "token_count": 197
    },
    "0045f73c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f73c(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_10h;\n    \n    fcn.00455058();\n    puVar1 = (arg_ch - 1U >> 3) * 4 + 0x465eb0;\n    fcn.0045f444(0x465ef0);\n    *arg_8h = *puVar1;\n    *puVar1 = arg_8h;\n    *0x465ef0 = 0;\n    *in_FS_OFFSET = var_2ch;\n    return;\n}\n",
        "token_count": 161
    },
    "00455d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455d44(uint *arg_8h)\n\n{\n    *0x462928 = fcn.0040143c();\n    *0x462928 = *0x462928 + 0x2c;\n    *arg_8h = 0x82727349;\n    arg_8h[1] = 0x462914;\n    return;\n}\n",
        "token_count": 86
    },
    "00401580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401580(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.00455058();\n    fcn.00441c40();\n    fcn.00441c58();\n    fcn.00441cd8();\n    *in_FS_OFFSET = var_30h;\n    return 0;\n}\n",
        "token_count": 85
    },
    "004017f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004017f4(void)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045efe8();\n        fcn.00421c18();\n    }\n    *in_FS_OFFSET = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "004018c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004018c0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.00401918();\n    *in_FS_OFFSET = var_28h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 171
    },
    "00401918": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401918(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0043a6b4();\n    *in_FS_OFFSET = var_28h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 173
    },
    "00401988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401988(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_10h;\n    uint var_8h;\n    \n    fcn.00455058();\n    var_30h = 0;\n    iVar1 = sub.USER32.DLL_LoadStringW(arg_10h, arg_ch, &var_30h, 0);\n    arg_ch_00 = var_30h;\n    if (iVar1 == 0) {\n        var_1ch._0_2_ = 0x2c;\n        fcn.00401b88(arg_8h);\n        *in_FS_OFFSET = var_2ch;\n    }\n    else {\n        var_1ch._0_2_ = 8;\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[4] = 0;\n        var_10h = var_10h + 4;\n        iVar2 = iVar1 * 2 + var_30h;\n        iVar1 = iVar2 - var_30h >> 1;\n        if (iVar1 < 0) {\n            iVar1 = iVar1 + ((iVar2 - var_30h & 1U) != 0);\n        }\n        fcn.00401b18(arg_8h, iVar1 + 1);\n        iVar1 = *arg_8h;\n        if (arg_ch_00 != iVar2) {\n            iVar1 = fcn.00454cf0(iVar1, arg_ch_00, iVar2 - arg_ch_00);\n            iVar1 = iVar1 + (iVar2 - arg_ch_00);\n        }\n        arg_8h[1] = iVar1;\n        *arg_8h[1] = 0;\n        *in_FS_OFFSET = var_2ch;\n    }\n    return arg_8h;\n}\n",
        "token_count": 522
    },
    "00401b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401b88(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_10h;\n    \n    fcn.00455058();\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[4] = 0;\n    iVar1 = fcn.0045f37c(0x10);\n    *arg_8h = iVar1;\n    arg_8h[1] = *arg_8h;\n    arg_8h[4] = *arg_8h + 0x10;\n    *arg_8h[1] = 0;\n    *in_FS_OFFSET = var_2ch;\n    return arg_8h;\n}\n",
        "token_count": 196
    },
    "00401fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401fc4(void)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.00402180();\n    }\n    *in_FS_OFFSET = var_24h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0040200c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040200c(uint arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < in_DL) {\n        in_EAX = fcn.0045f150();\n        in_DL = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0043a878(arg_8h);\n    *in_FS_OFFSET = var_28h;\n    if (in_DL != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00402180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402180(void)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0043aa50();\n    }\n    *in_FS_OFFSET = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "00424518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424518(int32_t arg_8h)\n\n{\n    sub.KERNEL32.DLL_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 41
    },
    "00403ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ab8(int32_t *param_1, char param_2)\n\n{\n    int32_t *extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x403aca;\n        fcn.00421f74();\n        param_1 = extraout_ECX;\n    }\n    puStack36 = 0x403ad9;\n    fcn.004244b8();\n    uStack40 = 0x403b11;\n    piStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00424460();\n    (**(*param_1 + 4))();\n    *in_FS_OFFSET = param_1;\n    uStack40 = 0x403b18;\n    piStack44 = 0x403b10;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 249
    },
    "00403b34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403b34(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    uVar1 = fcn.004113dc();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.004113dc();\n    *(in_EAX + 0x14) = uVar1;\n    uVar1 = fcn.004113dc();\n    *(in_EAX + 0x18) = uVar1;\n    fcn.0042275c();\n    *(in_EAX + 0x1c) = 1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 249
    },
    "00403ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ba8(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x403bc8;\n    fcn.004244b8();\n    uStack36 = 0x403cc2;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00403ab8();\n    *(iVar2 + 8) = *(in_EAX + 0x1c);\n    fcn.0041142c();\n    (**(*param_2 + 0x24))();\n    fcn.00424448();\n    cVar1 = fcn.00416350();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00403ab8();\n        *(iVar2 + 8) = *(in_EAX + 0x1c);\n        fcn.0041142c();\n    }\n    fcn.00424448();\n    cVar1 = fcn.00416350();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00403ab8();\n        *(iVar2 + 8) = *(in_EAX + 0x1c);\n        fcn.0041142c();\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    fcn.0042448c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x403cc9;\n    uStack36 = 0x403cb1;\n    fcn.00424448();\n    uStack36 = 0x403cb9;\n    fcn.00424448();\n    uStack36 = 0x403cc1;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 491
    },
    "00404330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404330(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x40440b;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.004227b0();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.00414c2c();\n        fcn.004223bc();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00411418();\n            fcn.00424460();\n            fcn.0042448c();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                fcn.0042448c();\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x404412;\n    uStack40 = 0x404402;\n    fcn.00423230();\n    uStack40 = 0x40440a;\n    fcn.00424448();\n    return;\n}\n",
        "token_count": 429
    },
    "00405f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00405f88(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00407488();\n            cVar1 = fcn.00421e3c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.00421e3c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 208
    },
    "004061b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004061b8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x406253;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00421b78();\n    fcn.004229b8();\n    iVar1 = fcn.00406114();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.00414c68(0, &var_10ch);\n        fcn.004223bc();\n    }\n    fcn.0040732c();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x40625a;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 295
    },
    "00406388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406388(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 4) = uVar1;\n    sub.KERNEL32.DLL_InitializeCriticalSection();\n    iVar2 = fcn.00406058();\n    fcn.0040732c();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "004064e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004064e0(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x406563;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00421b78();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00424964();\n    fcn.00414bac(arg_8h_00, arg_ch);\n    fcn.004223bc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x40656a;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 278
    },
    "00406638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406638(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "004066f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004066f0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0040691c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040691c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40697c;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00424964();\n    fcn.00414bac(arg_8h, arg_ch);\n    fcn.004223bc();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x406983;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 225
    },
    "00406c0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c0c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00406d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406d68(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00412700();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 182
    },
    "00406da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406da8(int32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                var_5h = 1;\n                in_EAX = fcn.004227b0();\n                goto code_r0x00406ddf;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    var_5h = 0;\ncode_r0x00406ddf:\n    return in_EAX & 0xffffff00 | var_5h;\n}\n",
        "token_count": 205
    },
    "00407010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407010(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4070a6;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x405bb4) && (in_EAX != *(arg_8h + -8))) {\n        fcn.00421bb4();\n        fcn.00407010(arg_8h);\n        fcn.00421b78();\n        fcn.004229b8();\n        fcn.00423e28(0);\n        fcn.00423e78();\n        fcn.00406ea8();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x4070ad;\n    uStack280 = 0x4070a5;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 263
    },
    "004071e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004071e8(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    ulong uVar4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puStack32 = 0x407202;\n    puStack32 = fcn.00421b70();\n    uStack36 = 0x40720a;\n    uVar2 = fcn.00421b70();\n    if (puStack32 != uVar2) {\ncode_r0x004072ff:\n        return uVar2 & 0xffffff00 | var_1h;\n    }\n    puStack32 = 0x40721a;\n    puStack32 = fcn.00408198();\n    uStack36 = 0x407222;\n    uVar2 = fcn.00408198();\n    if (puStack32 != uVar2) goto code_r0x004072ff;\n    puStack32 = 0x407237;\n    fcn.00421bf8();\n    uStack36 = 0x4072f8;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x407254;\n    puStack32 = &fcn.004071e8::var_1h + 1;\n    fcn.0040717c();\n    puStack44 = 0x407260;\n    fcn.00421bf8();\n    uStack48 = 0x4072db;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &fcn.004071e8::var_1h + 1;\n    fcn.0040717c();\n    uVar3 = fcn.00409828();\n    uVar4 = fcn.00409828();\n    if (uVar4 >> 0x20 == uVar3 >> 0x20 && uVar4 == uVar3) {\n        fcn.00409828();\n        cVar1 = fcn.0041268c();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x004072c2;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x004072c2:\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x4072e2;\n    uStack48 = 0x4072da;\n    uVar2 = fcn.00421c28();\n    return uVar2;\n}\n",
        "token_count": 679
    },
    "004073dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004073dc(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.004073d8();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.00414bac(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00422750();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004223dd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x466910)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 193
    },
    "004076f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004076f8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    sub.KERNEL32.DLL_InitializeCriticalSection();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 192
    },
    "0040774c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040774c(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x407757;\n    *NULL = fcn.00421fdc();\n    puStack16 = 0x407765;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00407850();\n    iStack20 = 0x4077ae;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00421c28();\n    fcn.00421c18();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4077b5;\n    iStack20 = 0x4077a1;\n    fcn.004078b4();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x4077ad;\n    sub.KERNEL32.DLL_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 271
    },
    "004078b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004078b4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "00407ab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00407ab4(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x407b6a;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.004227f4();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00421b78();\n        fcn.004229b8();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00421b78();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.00414c68(1, &var_114h);\n    fcn.004223bc();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x407b71;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 349
    },
    "00408500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408500(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x4085a7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x40852a;\n    fcn.00408648();\n    uStack48 = 0x40858a;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x408591;\n    uStack48 = 0x408589;\n    fcn.00408704();\n    return;\n}\n",
        "token_count": 354
    },
    "004086b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004086b8(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.00409110;\n    fcn.00408660(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00408718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408718(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x4087ad;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00422b58();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4087b4;\n    uStack44 = 0x4087ac;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 337
    },
    "004087c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004087c4(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.004087c0();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.00414bac(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00422750();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x004223dd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x466910)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 194
    },
    "00408854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408854(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x40892c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x408882;\n    fcn.00408648();\n    uStack52 = 0x40890a;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x408911;\n    uStack52 = 0x408909;\n    fcn.00408704();\n    return;\n}\n",
        "token_count": 349
    },
    "0040899c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040899c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x408aa7;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.004227f4();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.00422a14();\n            fcn.00422a14();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0042284c();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = fcn.00422a14();\n            if (iVar2 != 0) {\n                fcn.00421024();\n            }\n            iVar2 = fcn.00422a14();\n            if (iVar2 != 0) {\n                fcn.00421024();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x408aae;\n    uStack56 = 0x408aa6;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 429
    },
    "00408ac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408ac4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x408b3c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x408b43;\n    uStack36 = 0x408b3b;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 268
    },
    "00408b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b50(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_14h = 0;\n    var_ch = 0;\n    uStack40 = 0x408bfc;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_4h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = fcn.004154e0();\n            if (iVar1 != 0) {\n                fcn.00422c6c(&fcn.00408b50::var_14h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x00408bde;\n            }\n            var_8h = var_8h + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_8h = -1;\ncode_r0x00408bde:\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x408c03;\n    uStack40 = 0x408bf3;\n    fcn.0042275c();\n    uStack40 = 0x408bfb;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 444
    },
    "00408cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408cd0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x408d6e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x408cf8;\n    fcn.00408648();\n    uStack40 = 0x408d51;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00409828();\n    fcn.004097f4();\n    fcn.0042284c();\n    (**(*param_2 + 8))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x408d58;\n    uStack40 = 0x408d50;\n    fcn.00408704();\n    return;\n}\n",
        "token_count": 304
    },
    "00408d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408d7c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x408e1d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x408dab;\n        fcn.00408648();\n        uStack44 = 0x408e00;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x408e07;\n        uStack48 = 0x408dff;\n        fcn.00408704();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x408e24;\n    uStack32 = 0x408e1c;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 373
    },
    "00408e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408e60(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x408f04;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x408e87;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0040b7e8();\n    puStack32 = 0x408e8f;\n    fcn.00408648();\n    uStack36 = 0x408edf;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0040aa38();\n        if (cVar1 != '\\0') break;\n        fcn.0040c488();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x408ee6;\n    uStack36 = 0x408ede;\n    fcn.00408704();\n    return;\n}\n",
        "token_count": 383
    },
    "00409110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00409110(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x409186;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.0040d9a0();\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0040eef0();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    fcn.0040d9a8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40918d;\n    uStack36 = 0x409185;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 261
    },
    "004094ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004094ac(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 38
    },
    "004097f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004097f4(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x14))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "00409828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409828(void)\n\n{\n    int32_t *in_EAX;\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    uVar2 = 0;\n    uVar1 = (**(*in_EAX + 0x14))();\n    uVar1 = (**(*in_EAX + 0x14))(0, 0, uVar2, uVar3, uVar1);\n    (**(*in_EAX + 0x14))(uVar2, uVar3, uVar1);\n    return CONCAT44(uVar3, uVar2);\n}\n",
        "token_count": 142
    },
    "004098e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004098e0(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00421b78();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.00414c68(0, &var_8h);\n    fcn.004223bc();\n    return;\n}\n",
        "token_count": 115
    },
    "00409b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409b84(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x409ba0;\n    fcn.0040a1d8(0x1000);\n    uStackY28 = 0x409bd4;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0040c040();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x409bdb;\n    uStackY28 = 0x409bd3;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 192
    },
    "00409c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409c40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00409d04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409d04(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.00409d48(0, in_EAX & 0xffff0000 | arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "0040a054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a054(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_DL = extraout_DL;\n    }\n    fcn.00421bf8();\n    fcn.00422c0c();\n    fcn.0040a11c(arg_8h);\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = arg_8h;\n    }\n    return in_EAX;\n}\n",
        "token_count": 151
    },
    "0040a0ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a0ac(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x40a10f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00424964();\n    fcn.00414bac(arg_8h_00, arg_ch);\n    fcn.004223bc();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack28 = 0x40a116;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 265
    },
    "0040a1d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a1d8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00420dc0();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 211
    },
    "0040a324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a324(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.004227b0();\n    fcn.004227b0();\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0040a89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a89c(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.00414c68(0, auStack12);\n    fcn.004223bc();\n    return;\n}\n",
        "token_count": 64
    },
    "0040ab50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ab50(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    uStack36 = 0x40ac5f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar4 = in_EAX[0xc];\n    if (iVar4 != 0) {\n        uStack48 = 0x40ac42;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        var_ch = *(iVar4 + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < var_ch + -1) {\n            do {\n                puStack32 = puVar1;\n                puVar3 = fcn.00407488();\n                fcn.004227f4();\n                (**(*in_EAX + 0x20))();\n                iVar4 = fcn.0040a458();\n                fcn.00407488();\n                fcn.0040aad4();\n                if ((iVar4 == 0) && (cVar2 = fcn.0040a37c(),  cVar2 != '\\0')) {\n                    fcn.00407488();\n                    fcn.004077c8();\n                    fcn.004075d4();\n                }\n                else {\n                    (***puVar3)();\n                }\n                var_ch = var_ch + -1;\n                puVar1 = puStack32;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x40ac49;\n        uStack48 = 0x40ac41;\n        fcn.0040ac94();\n        return;\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40ac66;\n    uStack36 = 0x40ac5e;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 537
    },
    "0040acd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040acd0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00421b70();\n    do {\n        if (iVar2 == *0x404f04) {\n            if (*(in_EAX + 0x74) == 0) {\n                uVar4 = fcn.00406988();\n            }\n            else {\n                uVar4 = fcn.00406888();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00406910();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00421b8c();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.00421bb4();\n    } while( true );\n}\n",
        "token_count": 302
    },
    "0040ae94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ae94(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x40aea7;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x40af34;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040aa38();\n    if (cVar1 == '\\0') {\n        fcn.004080f4();\n    }\n    while( true ) {\n        cVar1 = fcn.0040aa38();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0040ad7c();\n        if (cVar1 - 2U < 3) {\n            fcn.0040b738();\n        }\n        fcn.00408028();\n        fcn.0040b7e8();\n        while( true ) {\n            cVar1 = fcn.0040aa38();\n            if (cVar1 != '\\0') break;\n            fcn.0040b954();\n        }\n        fcn.0040b7f0();\n    }\n    fcn.0040b7f0();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40af3b;\n    uStack24 = 0x40af33;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 379
    },
    "0040b45c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b45c(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x40b47e;\n        cVar3 = fcn.0040aa38();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x40b476;\n        fcn.0040b954();\n    }\n    puStack32 = 0x40b48a;\n    fcn.0040b7f0();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x40b4a7;\n    uVar4 = fcn.00421e24();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x40b51e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.00421e24();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0040aa38();\n        if (cVar3 != '\\0') break;\n        fcn.0040b214();\n    }\n    fcn.0040b7f0();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 472
    },
    "0040b56c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040b56c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    float fStack12;\n    \n    cVar1 = fcn.0040c628();\n    if (cVar1 == '\\x0f') {\n        fcn.0040ada0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.0040b738();\n        fStack12 = iVar2;\n    }\n    return fStack12;\n}\n",
        "token_count": 137
    },
    "0040b5ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040b5ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int64_t iStack16;\n    \n    cVar1 = fcn.0040c628();\n    if (cVar1 == '\\x10') {\n        fcn.0040ada0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.0040b738();\n        iStack16 = ROUND(iVar2 * *0x40b5f4);\n    }\n    return iStack16;\n}\n",
        "token_count": 149
    },
    "0040b5f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040b5f8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    double dStack16;\n    \n    cVar1 = fcn.0040c628();\n    if (cVar1 == '\\x11') {\n        fcn.0040ada0();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar2 = fcn.0040b738();\n        dStack16 = iVar2;\n    }\n    return dStack16;\n}\n",
        "token_count": 137
    },
    "0040b738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b738(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0040c628();\n    if (cVar1 == '\\x02') {\n        fcn.0040ada0();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0040ada0();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0040ada0();\n    }\n    else {\n        fcn.0040a890();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 188
    },
    "0040b7a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b7a4(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0040ad7c();\n    if (cVar1 == '\\x13') {\n        fcn.0040c628();\n        fcn.0040ada0();\n    }\n    else {\n        iStack12 = fcn.0040b738();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 129
    },
    "0040bb34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bb34(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.00406cec();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.004107a4();\n        return;\n    }\n    fcn.0040a890();\n    return;\n}\n",
        "token_count": 109
    },
    "0040bfe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bfe0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004227b0();\n    while( true ) {\n        cVar1 = fcn.00406e84();\n        if (cVar1 != '\\0') break;\n        fcn.0041339c(param_2);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0040c488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c488(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40c535;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0040ad7c();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0040c544();\n        fcn.004229dc();\n    }\n    else {\n        cVar1 = fcn.0040c628();\n        if (cVar1 == '\\x06') {\n            fcn.0040ada0();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0040ada0();\n        }\n        else {\n            fcn.0040a890();\n        }\n        fcn.00422d98();\n        fcn.0040ada0();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40c53c;\n    uStack28 = 0x40c534;\n    fcn.00422e4c();\n    return;\n}\n",
        "token_count": 305
    },
    "0040c544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c544(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40c61b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0040ad7c();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0040c488();\n        fcn.00422f98();\n    }\n    else {\n        cVar1 = fcn.0040c628();\n        if (cVar1 == '\\x12') {\n            fcn.0040ada0();\n            fcn.004230f4();\n            fcn.0040ada0();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0040ada0();\n            fcn.00422d98();\n            fcn.0040ada0();\n            fcn.00424870();\n        }\n        else {\n            fcn.0040a890();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40c622;\n    uStack32 = 0x40c612;\n    fcn.0042275c();\n    uStack32 = 0x40c61a;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 357
    },
    "0040c91c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0040c91c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0040c91c::var_1h + 1;\n    uStack36 = 0x40c9b4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0040c91c::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x24))();\n        fcn.0040c44c();\n        fcn.0040c44c();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0040aa38();\n        if (cVar2 != '\\0') break;\n        fcn.0040c8d4();\n        puVar1 = puStack32;\n    }\n    fcn.0040b7f0();\n    while( true ) {\n        cVar2 = fcn.0040aa38();\n        if (cVar2 != '\\0') break;\n        fcn.0040c91c();\n    }\n    fcn.0040b7f0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40c9bb;\n    uStack36 = 0x40c9b3;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 426
    },
    "0040cb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cb30(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0040ada0();\n                param_2 = 0;\n            }\n            else {\n                fcn.0040ada0();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040cb78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb78(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x40cd1c;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x40cba4;\n    fcn.0040a904();\n    puStack52 = 0x40cbb0;\n    fcn.00421bf8();\n    puStack52 = 0x40cbbf;\n    fcn.00421bf8();\n    uStack56 = 0x40ccf7;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.0040ada0();\n    fcn.00409878(var_10h, var_10h >> 0x1f);\n    fcn.0040ada0();\n    puStack76 = 0x40cc19;\n    fcn.0040a1d8(0x400);\n    uStack80 = 0x40ccd2;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0040c488();\n    fcn.0040ada0();\n    fcn.00409878(var_10h, var_10h >> 0x1f);\n    fcn.0040ada0();\n    cVar1 = fcn.0041f2ac();\n    if (cVar1 != '\\0') {\n        fcn.00424448();\n        cVar1 = fcn.00416374();\n        if (cVar1 != '\\0') goto code_r0x0040cca5;\n    }\n    fcn.00414c2c();\n    fcn.004223bc();\ncode_r0x0040cca5:\n    *in_EAX = *(var_14h + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_10h;\n    iStack84 = 0x40ccd9;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 635
    },
    "0040cfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040cfd0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.004097f4();\n    return iVar1 + *(in_EAX + 0x10);\n}\n",
        "token_count": 59
    },
    "0040cfe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cfe8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = fcn.004097f4();\n    if ((iVar1 <= param_2) && (param_2 <= *(in_EAX + 0x10) + iVar1)) {\n        *(in_EAX + 0x10) = param_2 - iVar1;\n        return;\n    }\n    fcn.0040d110();\n    fcn.00409814(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 142
    },
    "0040d088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d088(code *arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x40d09d;\n    fcn.00421bf8();\n    uStack24 = 0x40d100;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (*arg_8h)();\n    fcn.0040eff8();\n    fcn.00409828();\n    fcn.0040d03c();\n    fcn.0040d03c();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d107;\n    uStack24 = 0x40d0ff;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 224
    },
    "0040d18c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d18c(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x20);\n    *(in_EAX + 0x20) = 0;\n    uStack32 = 0x40d21e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    fcn.0040eff8();\n    if ((param_2 != 0) && (iVar2 = fcn.00408198(),  -1 < iVar2 + -1)) {\n        do {\n            fcn.0040d9a0();\n            fcn.004081a0();\n            fcn.0040d9f4();\n            fcn.0040d9a8();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040d9a8();\n    *in_FS_OFFSET = uStack36;\n    *(in_EAX + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 312
    },
    "0040db04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db04(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x40db4c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.004229b8();\n    fcn.0040edac();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x40db53;\n    uStack16 = 0x40db4b;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 173
    },
    "0040dc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dc58(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x40dcee;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStackY32 = 0x40dc77;\n    fcn.0040db04(arg_8h);\n    fcn.004227f4();\n    uStackY32 = 0x40dcd1;\n    uStackY36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.0042275c();\n    fcn.0040d18c();\n    *in_FS_OFFSET = uStackY36;\n    uStackY32 = 0x40dcd0;\n    fcn.004227b0();\n    return;\n}\n",
        "token_count": 241
    },
    "0040dd58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dd58(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x40de21;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    var_4h = fcn.00410730();\n    cVar1 = fcn.0040dcfc(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0040db04(arg_8h);\n        cVar1 = **(arg_8h + -0xc);\n        if (cVar1 == '\\x01') {\n            fcn.0040dbec(arg_8h);\n        }\n        else if (cVar1 == '\\x02') {\n            fcn.0040d13c();\n        }\n        else if (cVar1 == '\\x03') {\n            fcn.00410498();\n            fcn.0040d810();\n        }\n        else if (cVar1 == '\\x06') {\n            fcn.0040db58(arg_8h);\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x40de28;\n    uStack20 = 0x40de20;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 354
    },
    "0040de84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de84(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.00410c60();\n    cVar1 = fcn.0040de2c(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0040db04(arg_8h);\n        fcn.0040d780(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0040df20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df20(uint arg_8h)\n\n{\n    char cVar1;\n    ulong uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.0041107c();\n    cVar1 = fcn.0040ded0(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0040db04(arg_8h);\n        fcn.0040d948(uVar2, uVar2 >> 0x20);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0040e6ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e6ec(uint arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_10ch;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x40e792;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.00411004();\n    cVar1 = fcn.0040e668(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        fcn.0040db04(arg_8h);\n        if (var_8h == 0) {\n            fcn.0040eff8();\n        }\n        else {\n            fcn.00421ee4();\n            fcn.004229b8();\n            fcn.0040d810();\n        }\n    }\n    *in_FS_OFFSET = uStack288;\n    puStack280 = 0x40e799;\n    uStack284 = 0x40e791;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 273
    },
    "0040e7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e7a0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e81b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0040dabc(*(arg_8h + 8));\n    if (cVar1 == '\\0') {\n        fcn.0041e0a8();\n    }\n    else {\n        fcn.00410f84();\n        fcn.0041e17c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40e822;\n    uStack32 = 0x40e81a;\n    fcn.00423694();\n    return;\n}\n",
        "token_count": 224
    },
    "0040ef44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ef44(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40efea;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004247c4();\n    iVar1 = fcn.00422a14();\n    iVar2 = fcn.00422fb8();\n    if (SBORROW4(iVar1, iVar2 * 2) == iVar1 + iVar2 * -2 < 0) {\n        fcn.0040eff8();\n        fcn.00422fb8();\n        fcn.0040d03c();\n        fcn.0040d03c();\n    }\n    else {\n        fcn.004229dc();\n        fcn.0040ee58();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x40eff1;\n    uStack36 = 0x40efe1;\n    fcn.0042275c();\n    uStack36 = 0x40efe9;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 312
    },
    "0040f138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f138(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x40f180;\n    if (param_1 != 0) {\n        fcn.0040f2f0();\n    }\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 189
    },
    "0040f690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f690(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00422b58();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.0041281c();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.00414c68(0, &iStack20);\n                fcn.004223bc();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.0040f810();\n        fcn.0040f71c();\n        fcn.0040f810();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040f810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f810(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.004229f0();\n        piVar1 = fcn.00421f24();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0040fa60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040fa60(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040f138();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0040fc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040fc24(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00410194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410194(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 66
    },
    "00410700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00410700(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    code *pcVar2;\n    \n    pcVar2 = *(param_2 + 0xc);\n    if ((pcVar2 & 0xffffff00) != 0) {\n        if (*(param_2 + 0xf) < 0xfe) {\n            uVar1 = (*pcVar2)();\n            return uVar1;\n        }\n        if (*(param_2 + 0xf) != 0xff) {\n            uVar1 = (**(pcVar2 + *in_EAX))();\n            return uVar1;\n        }\n        pcVar2 = *((pcVar2 & 0xffffff) + in_EAX);\n    }\n    return in_EAX & 0xffffff00 | pcVar2 & 0xff;\n}\n",
        "token_count": 199
    },
    "00410800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410800(uint8_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = (pcVar1 & 0xffffff) + in_EAX;\n        iVar2 = *puVar3 + 1;\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *param_1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + 1;\n        }\n    }\n    else if (*(param_2 + 7) < 0xfe) {\n        (*pcVar1)();\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "00410844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410844(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 330
    },
    "00410898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410898(void)\n\n{\n    fcn.00410800(0xff);\n    fcn.004229b8();\n    return;\n}\n",
        "token_count": 35
    },
    "004108c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004108c0(void)\n\n{\n    fcn.004229f0();\n    fcn.00410844();\n    return;\n}\n",
        "token_count": 33
    },
    "00410908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410908(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.004108f4();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 115
    },
    "00410948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410948(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.004108f4();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "00410aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410aa4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    code *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x410b7c;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.00410a38();\n        fcn.00422f98();\n    }\n    else if (cVar1 == '\\v') {\n        var_ch = param_2[1];\n        if ((var_ch & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00422e88();\n        }\n        else {\n            if ((var_ch & 0xff000000) == 0xfe000000) {\n                var_ch = *(*in_EAX + var_ch);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_ch)();\n            }\n        }\n    }\n    else {\n        puStack32 = &stack0xfffffffc;\n        fcn.00422e4c();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x410b83;\n    uStack36 = 0x410b7b;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 426
    },
    "00410b8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410b8c(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x410c52;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004229dc();\n        fcn.00410a78();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00422e88();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x410c59;\n    uStack36 = 0x410c51;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 405
    },
    "00410c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00410c60(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    char *pcVar2;\n    float10 *pfVar3;\n    float10 fStack28;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 4);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        pfVar3 = (pcStack16 & 0xffffff) + in_EAX;\n        puVar1 = fcn.0041048c();\n    // switch table (5 cases) at 0x410ca0\n        switch(*puVar1) {\n        case 0:\n            fStack28 = *pfVar3;\n            break;\n        case 1:\n            fStack28 = *pfVar3;\n            break;\n        case 2:\n            fStack28 = *pfVar3;\n            break;\n        case 3:\n            fStack28 = *pfVar3;\n            break;\n        case 4:\n            fStack28 = *pfVar3 / *0x410d74;\n            break;\n        default:\n            fStack28 = fStack28 & 0;\n        }\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            fStack28 = (*pcStack16)();\n        }\n        else {\n            fStack28 = (*pcStack16)();\n        }\n        pcVar2 = fcn.0041048c();\n        if (*pcVar2 == '\\x04') {\n            fStack28 = fStack28 / *0x410d74;\n        }\n    }\n    return fStack28;\n}\n",
        "token_count": 417
    },
    "00410f84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410f84(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 7) == 0xff) {\n        fcn.00410f70();\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(*(param_2 + 4) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 4))();\n    return;\n}\n",
        "token_count": 116
    },
    "00410fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410fc4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00410f70();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 118
    },
    "00411004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411004(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = puVar3[1];\n        *param_1 = *puVar3;\n        param_1[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 7)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 183
    },
    "00411044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411044(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 195
    },
    "0041107c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041107c(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(param_2 + 4);\n    if (*(param_2 + 7) == 0xff) {\n        return *(in_EAX + (pcVar1 & 0xffffff));\n    }\n    if (0xfd < *(param_2 + 7)) {\n        uVar2 = (**(pcVar1 + *in_EAX))();\n        return uVar2;\n    }\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "004110a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004110a4(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004110e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004110e0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 4);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00424460();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00411160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411160(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00424460();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004113dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004113dc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "00411478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00411478(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "004116b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004116b0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 113
    },
    "00412620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412620(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00422a14();\n    fcn.00422d98();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00412880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412880(void)\n\n{\n    fcn.004133b0(0);\n    return;\n}\n",
        "token_count": 26
    },
    "004128b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004128b0(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004133b0(0);\n    return;\n}\n",
        "token_count": 48
    },
    "004128e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004128e4(void)\n\n{\n    fcn.004133b0(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00412ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00412ad0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = sub.KERNEL32.DLL_SetFilePointer();\n    return CONCAT44(arg_ch, uVar1);\n}\n",
        "token_count": 70
    },
    "00412bc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412bc8(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.KERNEL32.DLL_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.004236a4(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.004236a4(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 250
    },
    "00412e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00412e34(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00420dc0();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "004133b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004133b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint var_1008h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00422a14();\n    if (iVar1 < 0xc00) {\n        uVar2 = fcn.00422a14();\n        iVar3 = fcn.00412f08(arg_8h, in_ECX, uVar2);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar3 = fcn.00422a14();\n        iVar1 = iVar3;\n    }\n    if (iVar3 < iVar1 + -1) {\n        fcn.0042284c();\n    }\n    else {\n        for (; iVar1 + -1 <= iVar3; iVar1 = iVar1 * 2) {\n            fcn.0042275c();\n            fcn.00422d98();\n            uVar2 = fcn.00422a14();\n            iVar3 = fcn.00412f08(arg_8h, in_ECX, uVar2);\n        }\n        fcn.00422d98();\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "00413a7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413a7a(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00413a96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413a96(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 169
    },
    "00413acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413acc(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.004134b4(0, 0xf, 0);\n    fcn.0042284c();\n    return;\n}\n",
        "token_count": 56
    },
    "00413b4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413b4c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack32 = 0x413bbe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = fcn.00413afc(arg_8h, arg_ch, arg_10h);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffff0000 | arg_10h;\n        fcn.00413acc(arg_8h);\n        var_10h = var_14h;\n        var_ch._0_1_ = 0xb;\n        fcn.0041253c(arg_8h, arg_ch, uVar1);\n        in_stack_ffffffc4 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0042275c(0x413bc5);\n    return;\n}\n",
        "token_count": 319
    },
    "00413bec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413bec(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.00422c0c();\n    cVar1 = fcn.004139b8();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00413d38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t fcn.00413d38(void)\n\n{\n    int16_t iStack20;\n    \n    iStack20 = *0x10 + -0x10;\n    sub.KERNEL32.DLL_GetLocalTime();\n    return iStack20;\n}\n",
        "token_count": 56
    },
    "00413d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413d94(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    cVar1 = fcn.00413d4c(arg_8h, arg_ch, in_EAX & 0xffff0000 | arg_10h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.0041253c();\n    }\n    return _var_8h;\n}\n",
        "token_count": 146
    },
    "00414378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00414378(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3000;\n    uStack292 = 0x41439c;\n    for (iVar1 = sub.KERNEL32.DLL_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x4143bb;\n    fcn.0042284c();\n    return;\n}\n",
        "token_count": 236
    },
    "004143c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004143c4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    iVar1 = sub.KERNEL32.DLL_GetLocaleInfoA();\n    if (iVar1 < 1) {\n        fcn.004227b0();\n    }\n    else {\n        fcn.0042284c();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00414474": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414474(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x414587;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.KERNEL32.DLL_GetThreadLocale();\n    iVar1 = 1;\n    do {\n        fcn.00414438(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.004227b0();\n        fcn.00414438(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.004227b0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.00414438(&var_14h, 6, &stack0xfffffffc);\n        fcn.004227b0();\n        fcn.00414438(&var_18h, 6, &stack0xfffffffc);\n        fcn.004227b0();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00422780(0x41458e);\n    return;\n}\n",
        "token_count": 428
    },
    "0041464c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041464c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x4146e3;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.KERNEL32.DLL_GetThreadLocale();\n    fcn.004143c4(puVar3);\n    iVar1 = fcn.0041295c();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.KERNEL32.DLL_GetThreadLocale(iVar1, 4);\n        sub.KERNEL32.DLL_EnumCalendarInfoA(fcn.00414598, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x466738;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.KERNEL32.DLL_GetThreadLocale(iVar1, 3);\n        in_stack_ffffffc4 = fcn.004145d4;\n        sub.KERNEL32.DLL_EnumCalendarInfoA(fcn.004145d4, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.0042275c(0x4146ea);\n    return;\n}\n",
        "token_count": 401
    },
    "00414930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00414930(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.KERNEL32.DLL_VirtualQuery();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.KERNEL32.DLL_GetModuleFileNameA(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x004149a6;\n        }\n    }\n    iVar3 = *0x46652c;\n    sub.KERNEL32.DLL_GetModuleFileNameA();\n    var_8h = fcn.00414924();\ncode_r0x004149a6:\n    fcn.004155b8(iVar3);\n    fcn.00412ca0();\n    var_340h = 0x414ab0;\n    var_338h = 0x414ab0;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.00422c0c();\n        iVar3 = fcn.00412c3c();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x414ab4;\n        }\n    }\n    uVar4 = fcn.00423e78(*(*0x466260 + 4), &var_312h, 0x100);\n    sub.USER32.DLL_LoadStringA(uVar4);\n    fcn.00421b78();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0041335c(4, &var_358h);\n    fcn.00412c3c();\n    return;\n}\n",
        "token_count": 690
    },
    "00414b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414b70(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.004227b0();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00414bac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414bac(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x414bc0;\n        fcn.00421f74();\n    }\n    uStack44 = 0x414c06;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.00414bac::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0041339c(arg_8h_00);\n    fcn.004227b0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x414c0d;\n    iStack48 = 0x414c05;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 257
    },
    "00414c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414c2c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00424964();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "00414c68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c68(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x414c7e;\n        fcn.00421f74();\n    }\n    uStack48 = 0x414cd4;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.00414c68::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00424964();\n    fcn.0041339c(arg_8h_00);\n    fcn.004227b0();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x414cdb;\n    iStack52 = 0x414cd3;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 271
    },
    "00414dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414dfc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x414e98;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00424964();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.004227f4();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00424964();\n    fcn.00414bac(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x414e9f;\n    fcn.0042275c();\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 386
    },
    "00414eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414eb8(uint arg_8h)\n\n{\n    fcn.00414dfc();\n    fcn.00414ea8();\n    return;\n}\n",
        "token_count": 40
    },
    "00414eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00414eec(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x00414f50:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x00414f59;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x00414f50;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x00414f59:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 549
    },
    "0041531c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\nvoid fcn.0041531c(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.KERNEL32.DLL_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x461580 = uStack136;\n        *0x461584 = uStack148;\n        *0x461588 = uStack144;\n        *0x46158c = uStack140;\n        fcn.004229c4();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00415620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid fcn.00415620(void)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_7h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x415684;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    uVar1 = 7;\n    sub.KERNEL32.DLL_GetLocaleInfoA();\n    fcn.004229c4();\n    sub.KERNEL32.DLL_GetACP(0);\n    fcn.0041295c();\n    *in_FS_OFFSET = in_EAX;\n    fcn.0042275c(0x41568b, uVar1);\n    return;\n}\n",
        "token_count": 188
    },
    "00415bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00415bf8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x415c88;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = sub.KERNEL32.DLL_GetLastError();\n    if (iVar1 == 0) {\n        iVar2 = fcn.00414c2c();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        var_10h = iVar1;\n        fcn.00414378();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar2 = fcn.00414c68(1, &var_10h);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    fcn.004223bc();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x415c8f;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 338
    },
    "00415f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415f60(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.KERNEL32.DLL_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.KERNEL32.DLL_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 294
    },
    "0041640c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041640c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x41641b;\n    uStack24 = param_2;\n    sub.KERNEL32.DLL_SetErrorMode();\n    uStack32 = 0x41647e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x416460;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.00422c0c();\n    sub.KERNEL32.DLL_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 253
    },
    "0041732c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0041732c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x417376;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    fcn.00424964();\n    fcn.00414b70();\n    fcn.004223bc();\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x41737d;\n    uStack16 = 0x417375;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 170
    },
    "00417380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00417380(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x41740f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041df24();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.0041df24();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00424964();\n    fcn.00414bac(arg_8h, arg_ch);\n    fcn.004223bc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x417416;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 300
    },
    "00417470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00417470(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4174ff;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.0041df24();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.0041df24();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00424964();\n    fcn.00414bac(arg_8h, arg_ch);\n    fcn.004223bc();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x417506;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 300
    },
    "004178c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004178c0(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "004178f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004178f0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.004178f0(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "0041794c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041794c(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint var_318h;\n    uint var_314h;\n    uint var_310h;\n    int32_t var_30ch;\n    uint16_t *var_308h;\n    uint var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_100h;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.00417560();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            var_308h = *(in_EAX + 4);\n        }\n        else {\n            var_308h = **(in_EAX + 4);\n        }\n        uVar2 = *var_308h;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.OLEAUT32.DLL_SafeArrayLock(var_308h, iVar7 + 1, piVar6 + 1);\n                fcn.00417560();\n                sub.OLEAUT32.DLL_SafeArrayGetLBound();\n                fcn.00417560();\n                *piVar6 = (var_30ch - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &var_100h;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004178c0(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.OLEAUT32.DLL_SysStringByteLen();\n                fcn.00417560();\n                fcn.00417b3c();\n            }\n            cVar1 = fcn.004178f0(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.OLEAUT32.DLL_VariantCopy(in_EAX);\n    fcn.00417560();\n    return;\n}\n",
        "token_count": 653
    },
    "00417c68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00417c68(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "00417c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417c98(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.00417c98(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00417cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417cf4(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint16_t *var_314h;\n    uint32_t var_310h;\n    int32_t var_30ch;\n    code *var_308h;\n    ushort *var_304h;\n    uint var_300h;\n    uint var_2fch;\n    uint var_100h;\n    \n    var_308h = param_1;\n    var_304h = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.00417560();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            var_314h = *(param_2 + 4);\n        }\n        else {\n            var_314h = **(param_2 + 4);\n        }\n        uVar2 = *var_314h;\n        var_310h = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &var_300h;\n            do {\n                sub.OLEAUT32.DLL_SafeArrayLock(var_314h, iVar6 + 1, piVar5 + 1);\n                fcn.00417560();\n                sub.OLEAUT32.DLL_SafeArrayGetLBound();\n                fcn.00417560();\n                *piVar5 = (var_30ch - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.OLEAUT32.DLL_SafeArrayDestroy(0xc, var_310h, &var_300h);\n        if (iVar6 == 0) {\n            fcn.0041750c();\n        }\n        fcn.00417b3c();\n        *var_304h = 0x200c;\n        *(var_304h + 4) = iVar6;\n        if (-1 < var_310h - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &var_100h;\n            uVar2 = var_310h;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.00417c68(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.OLEAUT32.DLL_SysStringByteLen(var_314h, &var_100h, &var_318h);\n                fcn.00417560();\n                sub.OLEAUT32.DLL_SysStringByteLen(iVar6, &var_100h, &var_31ch);\n                fcn.00417560();\n                (*var_308h)();\n            }\n            cVar1 = fcn.00417c98(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.OLEAUT32.DLL_VariantCopyInd(var_304h, param_2);\n        fcn.00417560();\n    }\n    return;\n}\n",
        "token_count": 856
    },
    "0041825c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041825c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint var_10h;\n    \n    puStack36 = &fcn.0041825c::var_10h;\n    puStack40 = 0x418274;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack44 = 0x4182b8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fcn.004189f0();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4182bf;\n    uStack44 = 0x4182b7;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 215
    },
    "004189f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004189f0(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    unkbyte10 Var2;\n    ulong uVar3;\n    uchar uVar4;\n    uchar uVar5;\n    ushort uVar6;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.004189f0();\n        }\n        else {\n    // switch table (21 cases) at 0x418a35\n            switch(param_1) {\n            case 0:\n                fcn.00417b3c();\n                break;\n            case 1:\n                fcn.004178ac();\n                break;\n            case 2:\n                uVar4 = 2;\n                uVar5 = 0;\n                uVar6 = 0;\n                fcn.00418e24();\n                fcn.00418658(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                break;\n            case 3:\n                fcn.00418e24();\n                fcn.0041bac0();\n                break;\n            case 4:\n                uVar6 = 0x41;\n                Var2 = fcn.00419e28();\n                fcn.0041856c(Var2, Var2 >> 0x20, CONCAT22(uVar6, Var2 >> 0x40));\n                break;\n            case 5:\n                uVar6 = 0x41;\n                Var2 = fcn.00419e28();\n                fcn.0041856c(Var2, Var2 >> 0x20, CONCAT22(uVar6, Var2 >> 0x40));\n                break;\n            case 6:\n                uVar6 = 0x41;\n                fVar1 = fcn.0041a854();\n                fVar1 = fVar1 / *0x418c40;\n                fcn.0041856c(SUB104(fVar1, 0), fVar1 >> 0x20, CONCAT22(uVar6, fVar1 >> 0x40));\n                break;\n            case 7:\n                uVar6 = 0x41;\n                Var2 = fcn.0041a330();\n                fcn.0041856c(Var2, Var2 >> 0x20, CONCAT22(uVar6, Var2 >> 0x40));\n                break;\n            case 8:\n                fcn.00418798();\n                break;\n            case 9:\n                fcn.00418838();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.004187e8();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00417380();\n                }\n                else {\n                    fcn.00418950();\n                }\n                break;\n            case 0xb:\n                fcn.00419970();\n                fcn.0041bbf0();\n                break;\n            case 0xd:\n                fcn.00418888();\n                break;\n            case 0x10:\n                uVar4 = 0x10;\n                uVar5 = 0;\n                uVar6 = 0;\n                fcn.00418e24();\n                fcn.00418658(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                break;\n            case 0x11:\n                uVar4 = 0x11;\n                uVar5 = 0;\n                uVar6 = 0;\n                fcn.00418e24();\n                fcn.00418658(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                break;\n            case 0x12:\n                uVar4 = 0x12;\n                uVar5 = 0;\n                uVar6 = 0;\n                fcn.00418e24();\n                fcn.00418658(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                break;\n            case 0x13:\n                uVar4 = 0x13;\n                uVar5 = 0;\n                uVar6 = 0;\n                fcn.00418e24();\n                fcn.00418658(CONCAT22(uVar6, CONCAT11(uVar5, uVar4)));\n                break;\n            case 0x14:\n                uVar3 = fcn.004193f0();\n                fcn.0041bbb0(uVar3, uVar3 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.00417f80();\n    return;\n}\n",
        "token_count": 1018
    },
    "00418d44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00418d44(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(&puStack24);\n    fcn.0041779c();\n    return 0x400;\n}\n",
        "token_count": 85
    },
    "00418d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418d7c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = &fcn.00418d7c::var_14h;\n    puStack36 = 0x418d8e;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack40 = 0x418dd0;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    var_4h = fcn.00418e24();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x418dd7;\n    uStack40 = 0x418dcf;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 229
    },
    "00418de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00418de0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 127
    },
    "00418e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00418e24(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x419225;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x418e57\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00418cb0();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00418d7c();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.00418de0();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00418d44();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41905b\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00418d44();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00421b68();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00421b68();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00421b68();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00421b68();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00418cb0();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00418e24();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00421b68();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00421b68();\n                }\n            }\n        }\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00421b68();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00421b68();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00421b68();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00421b68();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00418cb0();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00418d44();\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00418e24();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00421b68();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00421b68();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1785
    },
    "0041924c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041924c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x419293;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0041ad8c();\n    _var_8h = fcn.00412994();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41929a;\n    uStack24 = 0x419292;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 190
    },
    "004192a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004192a4(void)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &fcn.004192a4::var_20h;\n    uStack56 = 0x4192b9;\n    var_4h = in_EAX;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack56 = 5;\n    uStack60 = 4;\n    uStack64 = 0x400;\n    uStack68 = var_4h;\n    puStack72 = &fcn.004192a4::var_20h;\n    puStack76 = 0x4192cf;\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex();\n    puStack76 = 0x4192de;\n    fcn.0041779c();\n    uStack80 = 0x419304;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    uVar1 = fcn.00421090();\n    *in_FS_OFFSET = uStack84;\n    return uVar1;\n}\n",
        "token_count": 343
    },
    "00419338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419338(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00419338::var_18h;\n    puStack40 = 0x41934a;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack44 = 0x41938f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    _var_8h = fcn.004193f0();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x419396;\n    uStack44 = 0x41938e;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 241
    },
    "004193a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004193a4(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "004193f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004193f0(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4197d3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x419423\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.0041924c();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00419338();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.004193a4();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.004192a4();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41961e\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.004192a4();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00421090();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.0041924c();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.004193f0();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00421090();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.0041924c();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.004192a4();\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.004193f0();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1197
    },
    "004198c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004198c0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_11h;\n    uint var_1h;\n    \n    puStack32 = &fcn.004198c0::var_11h;\n    puStack36 = 0x4198d2;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack40 = 0x419914;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.004198c0::var_1h + 1;\n    fcn.00417f80();\n    (**0x466790)();\n    var_1h._0_1_ = fcn.00419970();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41991b;\n    uStack40 = 0x419913;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 265
    },
    "00419c9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419c9c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack52 = 0x419d2d;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.0041ad8c();\n    fcn.00422f98(0x400, 0, &var_20h);\n    iVar2 = sub.OLEAUT32.DLL_VarR8FromDisp();\n    if (iVar2 == 0) {\n        _var_10h = _var_20h;\n    }\n    else {\n        cVar1 = fcn.00413bd0();\n        if (cVar1 == '\\0') {\n            fcn.0041779c();\n        }\n    }\n    *in_FS_OFFSET = 0;\n    fcn.00422e4c(0x419d34);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 297
    },
    "00419d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419d3c(void)\n\n{\n    ushort uStack32;\n    uchar auStack26 [4];\n    uchar auStack22 [18];\n    \n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(auStack26);\n    fcn.0041779c();\n    return CONCAT24(uStack32, auStack22) << 0x10;\n}\n",
        "token_count": 96
    },
    "00419d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419d7c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint *puStack44;\n    uint var_20h;\n    unkbyte10 Stack20;\n    \n    puStack44 = &fcn.00419d7c::var_20h;\n    puStack48 = 0x419d8e;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack52 = 0x419dd1;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    Stack20 = fcn.00419e28();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x419dd8;\n    uStack52 = 0x419dd0;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 227
    },
    "00419de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00419de0(uint param_1, float10 *param_2)\n\n{\n    uint uVar1;\n    double dStack28;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(dStack28._0_4_ + 0x1c))(5);\n        *param_2 = dStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "00419e28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.00419e28(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fStack28;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x419e44\n    switch(uVar1) {\n    case 0:\n        fStack28 = fStack28 & 0;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fStack28 = fcn.00419c9c();\n        }\n        else if (uVar1 == 0x101) {\n            fStack28 = fcn.00419d7c();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00419de0();\n            if (cVar2 == '\\0') {\n                fStack28 = fcn.00419d3c();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x419ff6\n            switch(uVar1 & 0xbfff) {\n            default:\n                fStack28 = fcn.00419d3c();\n                break;\n            case 2:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 3:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 4:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 5:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 6:\n                fStack28 = **(in_EAX + 4) / *0x41a168;\n                break;\n            case 7:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 8:\n                fStack28 = fcn.00419c9c();\n                break;\n            case 0xb:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fStack28 = fcn.00419e28();\n                break;\n            case 0x10:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                fStack28 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                fStack28 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 2:\n        fStack28 = in_EAX[4];\n        break;\n    case 3:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 4:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 5:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 6:\n        fStack28 = *(in_EAX + 4) / *0x41a168;\n        break;\n    case 7:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 8:\n        fStack28 = fcn.00419c9c();\n        break;\n    case 9:\n    case 0xd:\n        fStack28 = fcn.00419d3c();\n        break;\n    case 0xb:\n        fStack28 = in_EAX[4];\n        break;\n    case 0xc:\n        fStack28 = fcn.00419e28();\n        break;\n    case 0x10:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        fStack28 = in_EAX[4];\n        break;\n    case 0x13:\n        fStack28 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        fStack28 = *(in_EAX + 4);\n    }\n    return fStack28;\n}\n",
        "token_count": 945
    },
    "0041a16c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a16c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x41a226;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.0041b3d0();\n    uVar3 = 0;\n    iVar2 = sub.OLEAUT32.DLL_VarDateFromDisp(0, 0x400, 0, &var_8h);\n    if (iVar2 != 0) {\n        fcn.004229dc();\n        cVar1 = fcn.00414344();\n        if (cVar1 == '\\0') {\n            fcn.004229dc();\n            cVar1 = fcn.00413bec();\n            if (cVar1 == '\\0') {\n                fcn.0041779c();\n            }\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00422780(0x41a22d);\n    fcn.00422e4c();\n    return;\n}\n",
        "token_count": 327
    },
    "0041a238": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0041a238(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(auStack24);\n    fcn.0041779c();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 83
    },
    "0041a280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a280(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint var_18h;\n    double dStack12;\n    \n    puStack36 = &fcn.0041a280::var_18h;\n    puStack40 = 0x41a292;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack44 = 0x41a2d5;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fVar1 = fcn.0041a330();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a2dc;\n    uStack44 = 0x41a2d4;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 245
    },
    "0041a2e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041a2e4(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "0041a330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0041a330(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    double *pdVar3;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 extraout_ST0_02;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uchar auStack28 [8];\n    uint16_t uStack20;\n    \n    uVar1 = *in_EAX;\n    pdVar3 = in_EAX & 0xffff0000;\n    // switch table (21 cases) at 0x41a34c\n    switch(uVar1) {\n    case 0:\n        pdVar3 = NULL;\n        _auStack28 = _auStack28 & 0;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            pdVar3 = fcn.0041a16c();\n            _auStack28 = extraout_ST0_00;\n            break;\n        }\n        if (uVar1 == 0x101) {\n            pdVar3 = fcn.0041a280();\n            _auStack28 = extraout_ST0_01;\n            break;\n        }\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0041a2e4();\n            if (cVar2 == '\\0') {\n                fcn.0041a238();\n            }\n            goto code_r0x0041a6b4;\n        }\n    // switch table (21 cases) at 0x41a50e\n        switch(uVar1 & 0xbfff) {\n        default:\n            fcn.0041a238();\n            goto code_r0x0041a6b4;\n        case 2:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 3:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 4:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 5:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 6:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3 / *0x41a6bc;\n            break;\n        case 7:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 8:\n            pdVar3 = fcn.0041a16c();\n            _auStack28 = extraout_ST0_02;\n            break;\n        case 0xb:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0xc:\n            fcn.0041a330();\n            goto code_r0x0041a6b4;\n        case 0x10:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x11:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x12:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x13:\n            pdVar3 = NULL;\n            _auStack28 = **(in_EAX + 4);\n            break;\n        case 0x14:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n        }\n        break;\n    case 2:\n        _auStack28 = in_EAX[4];\n        break;\n    case 3:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 4:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 5:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 6:\n        _auStack28 = *(in_EAX + 4) / *0x41a6bc;\n        break;\n    case 7:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 8:\n        pdVar3 = fcn.0041a16c();\n        _auStack28 = extraout_ST0;\n        break;\n    case 9:\n    case 0xd:\n        fcn.0041a238();\n        goto code_r0x0041a6b4;\n    case 0xb:\n        pdVar3 = in_EAX[4];\n        _auStack28 = pdVar3;\n        break;\n    case 0xc:\n        fcn.0041a330();\n        goto code_r0x0041a6b4;\n    case 0x10:\n        pdVar3 = *(in_EAX + 4);\n        _auStack28 = pdVar3;\n        break;\n    case 0x11:\n        pdVar3 = *(in_EAX + 4);\n        _auStack28 = pdVar3;\n        break;\n    case 0x12:\n        pdVar3 = in_EAX[4];\n        _auStack28 = pdVar3;\n        break;\n    case 0x13:\n        pdVar3 = NULL;\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        _auStack28 = *(in_EAX + 4);\n    }\n    cVar2 = fcn.00413d4c(auStack28._0_4_, auStack28._4_4_, pdVar3 & 0xffff0000 | uStack20);\n    in_stack_ffffffd0 = auStack28._0_4_;\n    in_stack_ffffffd4 = auStack28._4_4_;\n    if (cVar2 == '\\0') {\n        fcn.0041779c();\n        in_stack_ffffffd0 = auStack28._0_4_;\n        in_stack_ffffffd4 = auStack28._4_4_;\n    }\ncode_r0x0041a6b4:\n    return CONCAT44(in_stack_ffffffd4, in_stack_ffffffd0);\n}\n",
        "token_count": 1460
    },
    "0041a6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a6c0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a74a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.0041b3d0();\n    uVar3 = 0;\n    iVar2 = sub.OLEAUT32.DLL_VarCyFromDisp(0, 0x400, 0, &var_8h);\n    if (iVar2 != 0) {\n        fcn.004229dc();\n        cVar1 = fcn.00413c18();\n        if (cVar1 == '\\0') {\n            fcn.0041779c();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0042275c(0x41a751);\n    fcn.00422e4c();\n    return;\n}\n",
        "token_count": 269
    },
    "0041a75c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.0041a75c(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(auStack24);\n    fcn.0041779c();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 84
    },
    "0041a7a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a7a4(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint var_18h;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.0041a7a4::var_18h;\n    puStack40 = 0x41a7b6;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack44 = 0x41a7f9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fVar1 = fcn.0041a854();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a800;\n    uStack44 = 0x41a7f8;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 253
    },
    "0041a808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.0041a808(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "0041a854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0041a854(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    double *pdVar3;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 extraout_ST0_02;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uchar auStack28 [8];\n    uint16_t uStack20;\n    \n    uVar1 = *in_EAX;\n    pdVar3 = in_EAX & 0xffff0000;\n    // switch table (21 cases) at 0x41a870\n    switch(uVar1) {\n    case 0:\n        pdVar3 = NULL;\n        _auStack28 = _auStack28 & 0;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            pdVar3 = fcn.0041a6c0();\n            _auStack28 = extraout_ST0_00 / *0x41abf8;\n            break;\n        }\n        if (uVar1 == 0x101) {\n            pdVar3 = fcn.0041a7a4();\n            _auStack28 = extraout_ST0_01 / *0x41abf8;\n            break;\n        }\n        if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.0041a808();\n            if (cVar2 == '\\0') {\n                fcn.0041a75c();\n            }\n            goto code_r0x0041abf0;\n        }\n    // switch table (21 cases) at 0x41aa44\n        switch(uVar1 & 0xbfff) {\n        default:\n            fcn.0041a75c();\n            goto code_r0x0041abf0;\n        case 2:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 3:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 4:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 5:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 6:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3 / *0x41abf8;\n            break;\n        case 7:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n            break;\n        case 8:\n            pdVar3 = fcn.0041a6c0();\n            _auStack28 = extraout_ST0_02 / *0x41abf8;\n            break;\n        case 0xb:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0xc:\n            fcn.0041a854();\n            goto code_r0x0041abf0;\n        case 0x10:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x11:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x12:\n            pdVar3 = **(in_EAX + 4);\n            _auStack28 = pdVar3;\n            break;\n        case 0x13:\n            pdVar3 = NULL;\n            _auStack28 = **(in_EAX + 4);\n            break;\n        case 0x14:\n            pdVar3 = *(in_EAX + 4);\n            _auStack28 = *pdVar3;\n        }\n        break;\n    case 2:\n        _auStack28 = in_EAX[4];\n        break;\n    case 3:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 4:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 5:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 6:\n        _auStack28 = *(in_EAX + 4) / *0x41abf8;\n        break;\n    case 7:\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 8:\n        pdVar3 = fcn.0041a6c0();\n        _auStack28 = extraout_ST0 / *0x41abf8;\n        break;\n    case 9:\n    case 0xd:\n        fcn.0041a75c();\n        goto code_r0x0041abf0;\n    case 0xb:\n        pdVar3 = in_EAX[4];\n        _auStack28 = pdVar3;\n        break;\n    case 0xc:\n        fcn.0041a854();\n        goto code_r0x0041abf0;\n    case 0x10:\n        pdVar3 = *(in_EAX + 4);\n        _auStack28 = pdVar3;\n        break;\n    case 0x11:\n        pdVar3 = *(in_EAX + 4);\n        _auStack28 = pdVar3;\n        break;\n    case 0x12:\n        pdVar3 = in_EAX[4];\n        _auStack28 = pdVar3;\n        break;\n    case 0x13:\n        pdVar3 = NULL;\n        _auStack28 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        _auStack28 = *(in_EAX + 4);\n    }\n    cVar2 = fcn.00413afc(auStack28._0_4_, auStack28._4_4_, pdVar3 & 0xffff0000 | uStack20);\n    in_stack_ffffffd0 = auStack28._0_4_;\n    in_stack_ffffffd4 = auStack28._4_4_;\n    if (cVar2 == '\\0') {\n        fcn.0041779c();\n        in_stack_ffffffd0 = auStack28._0_4_;\n        in_stack_ffffffd4 = auStack28._4_4_;\n    }\ncode_r0x0041abf0:\n    return CONCAT44(in_stack_ffffffd4, in_stack_ffffffd0);\n}\n",
        "token_count": 1488
    },
    "0041ac90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ac90(void)\n\n{\n    uchar *puStack28;\n    uchar auStack24 [16];\n    \n    puStack28 = auStack24;\n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(&puStack28);\n    fcn.0041779c();\n    fcn.004229dc();\n    return;\n}\n",
        "token_count": 89
    },
    "0041acd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041acd0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_10h;\n    \n    puStack32 = &fcn.0041acd0::var_10h;\n    puStack36 = 0x41ace5;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack40 = 0x41ad26;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fcn.0041ad8c();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41ad2d;\n    uStack40 = 0x41ad25;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 216
    },
    "0041ad34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ad34(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_8h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    var_4h = param_2;\n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear(&var_18h);\n        (**(*var_8h + 0x1c))(0x100);\n        fcn.004227b0();\n    }\n    return uVar1;\n}\n",
        "token_count": 172
    },
    "0041ad8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041ad8c(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41b27a;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x41adc5\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.0042275c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.004227b0();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.0041acd0();\n            fcn.004227b0();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.0042275c();\n            cVar2 = fcn.0041ad34();\n            if (cVar2 == '\\0') {\n                fcn.0041ac90();\n                fcn.004227b0();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41b010\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.0041ac90();\n                fcn.004227b0();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.004227b0();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.004227b0();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00413acc(var_28h);\n                fcn.004227b0(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00413acc(var_28h);\n                fcn.004227b0(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041abfc(var_24h, (*(param_2 + 4))[1]);\n                fcn.004229dc();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041ac30(var_24h, (*(param_2 + 4))[1]);\n                fcn.004229dc();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.0042297c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.0041ac64();\n                fcn.004229dc();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0041ad8c();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.004227b0();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.004227b0();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.004227b0();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004128b0(var_24h);\n                fcn.004227b0(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004128b0(var_24h);\n                fcn.004227b0(var_24h, var_20h);\n            }\n        }\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.004227b0();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.004227b0();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00413acc(var_28h);\n        fcn.004227b0(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00413acc(var_28h);\n        fcn.004227b0(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041abfc(var_24h, *(param_2 + 6));\n        fcn.004229dc();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041ac30(var_24h, *(param_2 + 6));\n        fcn.004229dc();\n        break;\n    case 8:\n        var_14h = &stack0xfffffffc;\n        fcn.004229dc();\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.0041ac90();\n        fcn.004227b0();\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.0041ac64();\n        fcn.004229dc();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0041ad8c();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.004227b0();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.004227b0();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.004227b0();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.004128b0(var_24h);\n        fcn.004227b0(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.004128b0(var_24h);\n        fcn.004227b0(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41b281;\n    fcn.00422780();\n    fcn.00422e64();\n    fcn.00422780();\n    fcn.00422e64();\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 2454
    },
    "0041b2d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b2d8(void)\n\n{\n    uchar *puStack28;\n    uchar auStack24 [16];\n    \n    puStack28 = auStack24;\n    sub.OLEAUT32.DLL_VariantClear();\n    sub.OLEAUT32.DLL_SafeArrayPtrOfIndex(&puStack28);\n    fcn.0041779c();\n    fcn.00422e88();\n    return;\n}\n",
        "token_count": 92
    },
    "0041b318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b318(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_10h;\n    \n    puStack32 = &fcn.0041b318::var_10h;\n    puStack36 = 0x41b32d;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack40 = 0x41b36e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fcn.0041b3d0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41b375;\n    uStack40 = 0x41b36d;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 219
    },
    "0041b37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b37c(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_8h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    var_4h = param_2;\n    uVar1 = fcn.0041f1f4();\n    if (uVar1 != '\\0') {\n        sub.OLEAUT32.DLL_VariantClear(&var_18h);\n        (**(*var_8h + 0x1c))(8);\n        fcn.00422e88();\n    }\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "0041b3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041b3d0(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41b8e5;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x41b409\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00422e4c();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00422f98();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.0041b318();\n            fcn.00422e88();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00422e4c();\n            cVar2 = fcn.0041b37c();\n            if (cVar2 == '\\0') {\n                fcn.0041b2d8();\n                fcn.00422e88();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41b654\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.0041b2d8();\n                fcn.00422e88();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.00422f98();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.00422f98();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00413acc(var_28h);\n                fcn.00422f98(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.00413acc(var_28h);\n                fcn.00422f98(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041abfc(var_24h, (*(param_2 + 4))[1]);\n                fcn.00422e88();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041ac30(var_24h, (*(param_2 + 4))[1]);\n                fcn.00422e88();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00422f5c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.0041ac64();\n                fcn.00422e88();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.0041b3d0();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.00422f98();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.00422f98();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00412880();\n                fcn.00422f98();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004128b0(var_24h);\n                fcn.00422f98(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.004128b0(var_24h);\n                fcn.00422f98(var_24h, var_20h);\n            }\n        }\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.00422f98();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.00422f98();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00413acc(var_28h);\n        fcn.00422f98(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.00413acc(var_28h);\n        fcn.00422f98(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041abfc(var_24h, *(param_2 + 6));\n        fcn.00422e88();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041ac30(var_24h, *(param_2 + 6));\n        fcn.00422e88();\n        break;\n    case 8:\n        var_14h = &stack0xfffffffc;\n        fcn.00422e88();\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.0041b2d8();\n        fcn.00422e88();\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.0041ac64();\n        fcn.00422e88();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.0041b3d0();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.00422f98();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.00422f98();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00412880();\n        fcn.00422f98();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.004128b0(var_24h);\n        fcn.00422f98(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.004128b0(var_24h);\n        fcn.00422f98(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41b8ec;\n    fcn.00422e64();\n    fcn.00422780();\n    fcn.00422e64();\n    fcn.00422780();\n    fcn.00422e64();\n    fcn.00422780();\n    fcn.00422e64();\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 2502
    },
    "0041b8f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041b8f4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint *puStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_10h;\n    uint var_8h;\n    \n    puStack32 = &fcn.0041b8f4::var_10h;\n    puStack36 = 0x41b909;\n    sub.OLEAUT32.DLL_VariantClear();\n    puStack40 = 0x41b96c;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    if (var_10h != 0xd) {\n        fcn.00417380();\n    }\n    fcn.00424460();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41b973;\n    puStack40 = &fcn.0041b8f4::var_10h;\n    uStack44 = 0x41b95e;\n    sub.OLEAUT32.DLL_VariantCopy();\n    uStack44 = 0x41b96b;\n    fcn.0041779c();\n    return;\n}\n",
        "token_count": 304
    },
    "0041be78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041be78(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint var_10h;\n    \n    puStack32 = &fcn.0041be78::var_10h;\n    puStack36 = 0x41be8d;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack40 = 0x41bece;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00417f80();\n    (**0x466790)();\n    fcn.00417f80();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41bed5;\n    uStack40 = 0x41becd;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 215
    },
    "0041c0fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041c0fc(uint param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint var_28h;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*in_EAX & 0xfff) < 0x10f) {\n        puStack52 = 0x41c130;\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 == '\\0') {\n            puStack52 = 0x41c139;\n            fcn.0041741c();\n        }\n        else {\n            puStack52 = &fcn.0041c0fc::var_10h + 2;\n            puStack56 = 0x41c150;\n            cVar1 = (**(*var_18h + 4))();\n            if (cVar1 == '\\0') {\n                puStack56 = &fcn.0041c0fc::var_28h;\n                puStack60 = 0x41c1e3;\n                sub.OLEAUT32.DLL_VariantClear();\n                puStack64 = 0x41c237;\n                uStack68 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffbc;\n                uStack72 = 0x41c202;\n                puStack60 = &stack0xfffffffc;\n                fcn.004189f0();\n                if (*var_4h != var_28h) {\n                    uStack72 = 0x41c213;\n                    fcn.0041732c();\n                }\n                uStack72 = 0x41c221;\n                fcn.0041cd10();\n                *in_FS_OFFSET = uStack68;\n                puStack60 = 0x41c441;\n                puStack64 = 0x41c236;\n                fcn.00417b3c();\n                return;\n            }\n            if (*var_4h != var_10h._2_2_) {\n                puStack56 = &fcn.0041c0fc::var_28h;\n                puStack60 = 0x41c16d;\n                sub.OLEAUT32.DLL_VariantClear();\n                puStack64 = 0x41c1bc;\n                uStack68 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffbc;\n                uStack72 = 0x41c18a;\n                puStack60 = &stack0xfffffffc;\n                fcn.004189f0();\n                uStack72 = 0x41c195;\n                fcn.00417f80();\n                if (*var_4h != var_10h._2_2_) {\n                    uStack72 = 0x41c1a6;\n                    fcn.0041732c();\n                }\n                *in_FS_OFFSET = uStack68;\n                puStack60 = 0x41c1c3;\n                puStack64 = 0x41c1bb;\n                fcn.00417b3c();\n                return;\n            }\n            puStack56 = var_ch;\n            puStack60 = 0x41c1d5;\n            (**(*var_18h + 0x2c))();\n        }\n    }\n    else {\n        puStack52 = 0x41c24b;\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 == '\\0') {\n            puStack52 = 0x41c254;\n            fcn.0041741c();\n        }\n        puStack52 = &fcn.0041c0fc::var_10h;\n        puStack56 = 0x41c266;\n        cVar1 = (**(*var_14h + 8))();\n        if (cVar1 == '\\0') {\n            if ((*var_8h & 0xfff) < 0x10f) {\n                if (*var_8h != *var_4h) {\n                    puStack56 = &fcn.0041c0fc::var_28h;\n                    puStack60 = 0x41c31f;\n                    sub.OLEAUT32.DLL_VariantClear();\n                    puStack64 = 0x41c372;\n                    uStack68 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffbc;\n                    uStack72 = 0x41c33e;\n                    puStack60 = &stack0xfffffffc;\n                    fcn.004189f0();\n                    uStack72 = 0x41c349;\n                    fcn.00417f80();\n                    if (*var_4h != *var_8h) {\n                        uStack72 = 0x41c35c;\n                        fcn.0041732c();\n                    }\n                    *in_FS_OFFSET = uStack68;\n                    puStack60 = 0x41c379;\n                    puStack64 = 0x41c371;\n                    fcn.00417b3c();\n                    return;\n                }\n                puStack56 = 0x41c387;\n                fcn.0041cd10();\n            }\n            else {\n                puStack56 = 0x41c399;\n                cVar1 = fcn.0041f1f4();\n                if (cVar1 == '\\0') {\n                    puStack56 = 0x41c3a2;\n                    fcn.0041741c();\n                }\n                else {\n                    puStack56 = &fcn.0041c0fc::var_10h + 2;\n                    puStack60 = 0x41c3b9;\n                    cVar1 = (**(*var_18h + 4))();\n                    if (cVar1 == '\\0') {\n                        puStack60 = 0x41c441;\n                        fcn.0041741c();\n                    }\n                    else {\n                        if (*var_4h != var_10h._2_2_) {\n                            puStack60 = &fcn.0041c0fc::var_28h;\n                            puStack64 = 0x41c3d2;\n                            sub.OLEAUT32.DLL_VariantClear();\n                            uStack68 = 0x41c421;\n                            uStack72 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffffb8;\n                            puStack64 = &stack0xfffffffc;\n                            fcn.004189f0();\n                            fcn.00417f80();\n                            if (*var_4h != var_10h._2_2_) {\n                                fcn.0041732c();\n                            }\n                            *in_FS_OFFSET = uStack72;\n                            puStack64 = 0x41c428;\n                            uStack68 = 0x41c420;\n                            fcn.00417b3c();\n                            return;\n                        }\n                        puStack60 = var_ch;\n                        puStack64 = 0x41c43a;\n                        (**(*var_18h + 0x2c))();\n                    }\n                }\n            }\n        }\n        else {\n            if (*var_8h != var_10h) {\n                puStack56 = &fcn.0041c0fc::var_28h;\n                puStack60 = 0x41c283;\n                sub.OLEAUT32.DLL_VariantClear();\n                puStack64 = 0x41c2d7;\n                uStack68 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffbc;\n                uStack72 = 0x41c2a0;\n                puStack60 = &stack0xfffffffc;\n                fcn.004189f0();\n                if (var_28h != var_10h) {\n                    uStack72 = 0x41c2af;\n                    fcn.0041732c();\n                }\n                uStack72 = var_ch;\n                (**(*var_14h + 0x2c))();\n                *in_FS_OFFSET = uStack72;\n                puStack64 = 0x41c441;\n                uStack68 = 0x41c2d6;\n                fcn.00417b3c();\n                return;\n            }\n            puStack56 = var_ch;\n            puStack60 = 0x41c2f0;\n            (**(*var_14h + 0x2c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 1922
    },
    "0041c448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c448(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint var_10h;\n    \n    if (*in_EAX == 0x101) {\n        puStack36 = 0x41c466;\n        (**0x466790)();\n    }\n    if (*param_2 == 0x101) {\n        puStack36 = &fcn.0041c448::var_10h;\n        puStack40 = 0x41c476;\n        sub.OLEAUT32.DLL_VariantClear();\n        uStack44 = 0x41c4b9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        fcn.00417f80();\n        (**0x466790)();\n        fcn.0041cd10();\n        *in_FS_OFFSET = uStack48;\n        puStack40 = 0x41c4cb;\n        uStack44 = 0x41c4b8;\n        fcn.00417b3c();\n        return;\n    }\n    puStack36 = 0x41c4cb;\n    fcn.0041cd10();\n    return;\n}\n",
        "token_count": 315
    },
    "0041c51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c51c(int32_t param_1)\n\n{\n    uint var_10h;\n    \n    fcn.00419e28();\n    fcn.00419e28();\n    if ((((param_1 != 0) && (param_1 != 1)) && (param_1 != 2)) && (param_1 != 3)) {\n        fcn.0041741c();\n    }\n    fcn.00423640();\n    return;\n}\n",
        "token_count": 107
    },
    "0041c598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c598(int32_t param_1)\n\n{\n    uint var_10h;\n    \n    fcn.0041a330();\n    fcn.0041a330();\n    if ((param_1 != 0) && (param_1 != 1)) {\n        fcn.0041741c();\n    }\n    fcn.00423648();\n    return;\n}\n",
        "token_count": 88
    },
    "0041cda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041cda0(uint param_1, int16_t *param_2)\n\n{\n    int16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint var_21h;\n    uint var_11h;\n    uint var_1h;\n    \n    puStack56 = &fcn.0041cda0::var_11h;\n    puStack60 = 0x41cdb8;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack64 = 0x41ce63;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41cdd0;\n    puStack60 = &fcn.0041cda0::var_1h + 1;\n    fcn.00417f80();\n    if (*in_EAX == 0x101) {\n        puStack72 = 0x41cde0;\n        (**0x466790)();\n    }\n    if (*param_2 == 0x101) {\n        puStack72 = &fcn.0041cda0::var_21h;\n        puStack76 = 0x41cdf0;\n        sub.OLEAUT32.DLL_VariantClear();\n        uStack80 = 0x41ce37;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &fcn.0041cda0::var_1h + 1;\n        fcn.00417f80();\n        (**0x466790)();\n        var_1h._0_1_ = fcn.0041d5ec();\n        *in_FS_OFFSET = uStack84;\n        puStack76 = 0x41ce4d;\n        uStack80 = 0x41ce36;\n        fcn.00417b3c();\n        return;\n    }\n    puStack72 = 0x41ce4a;\n    var_1h._0_1_ = fcn.0041d5ec();\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x41ce6a;\n    uStack64 = 0x41ce62;\n    fcn.00417b3c();\n    return;\n}\n",
        "token_count": 578
    },
    "0041d6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d6e4(void)\n\n{\n    fcn.004235cc(0, 0, 0, 0);\n    fcn.00423684();\n    fcn.004235cc();\n    return;\n}\n",
        "token_count": 53
    },
    "0041dac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041dac8(void)\n\n{\n    fcn.004235cc(0, 0, 0, 0);\n    fcn.0042368c();\n    fcn.004235cc();\n    return;\n}\n",
        "token_count": 52
    },
    "0041df24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.0041df24(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x41e04a;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x41df68;\n        puStack540 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x41df80;\n        puStack540 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x41df98;\n        puStack540 = &stack0xfffffffc;\n        fcn.004227b0();\n    }\n    else {\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 == '\\0') {\n            fcn.004128e4();\n            puStack552 = 0x41e00b;\n            fcn.00422a60();\n        }\n        else {\n            puStack552 = &fcn.0041df24::var_104h;\n            fcn.00421b78();\n            fcn.00420fc0();\n            fcn.004229b8();\n        }\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00422a60();\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00422a60();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x41e051;\n    iStack548 = 0x41e049;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 501
    },
    "0041e3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041e3b4(void)\n\n{\n    char cVar1;\n    ulong uStack12;\n    \n    cVar1 = fcn.0041e270();\n    if (cVar1 == '\\0') {\n        fcn.00417560();\n    }\n    return uStack12;\n}\n",
        "token_count": 68
    },
    "0041e3dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041e3dc(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t *puStack8;\n    \n    cVar1 = fcn.0041e270();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *puStack8;\n    }\n    return CONCAT44(puStack8, uVar2);\n}\n",
        "token_count": 100
    },
    "0041e454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0041e454(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    uint uVar1;\n    uint uStack4;\n    \n    if (param_2 != '\\0') {\n        uVar1 = fcn.0041e270();\n        return CONCAT44(uStack4, uVar1);\n    }\n    return CONCAT44(uStack4, in_EAX & 0xffff0000 | *in_EAX & 0xffff2000 | (*in_EAX & 0xffff2000) == 0x2000);\n}\n",
        "token_count": 130
    },
    "0041e4d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e4d8(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint var_1ch;\n    uint16_t *var_18h;\n    uint var_12h;\n    uint var_8h;\n    \n    iStack40 = 0x41e4ed;\n    cVar1 = fcn.0041e270();\n    if (cVar1 == '\\0') {\n        iStack40 = 0x41e4fb;\n        fcn.00417560();\n    }\n    if (*var_18h != arg_10h) {\n        iStack40 = 0x41e510;\n        fcn.00417560();\n    }\n    iStack40 = &fcn.0041e4d8::var_12h + 2;\n    puStack44 = 0x41e519;\n    sub.OLEAUT32.DLL_VariantClear();\n    uStack48 = 0x41e598;\n    puStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if ((var_12h & 0xfff) == 0xc) {\n        puStack44 = &stack0xfffffffc;\n        sub.OLEAUT32.DLL_SysStringByteLen(var_18h, &fcn.0041e4d8::arg_14h, &fcn.0041e4d8::var_1ch);\n        fcn.00417560();\n        fcn.00417f80();\n    }\n    else {\n        puStack44 = &stack0xfffffffc;\n        sub.OLEAUT32.DLL_SafeArrayPutElement(var_18h, &fcn.0041e4d8::arg_14h, &fcn.0041e4d8::var_8h);\n        fcn.00417560();\n        var_12h._2_2_ = var_12h & 0xfff;\n    }\n    fcn.00417f80();\n    *in_FS_OFFSET = var_18h;\n    fcn.00417b3c(0x41e59f);\n    return;\n}\n",
        "token_count": 531
    },
    "0041e5c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e5c8(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint16_t **in_FS_OFFSET;\n    uint16_t *puStack64;\n    uint16_t *puStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint *var_24h;\n    uint var_20h;\n    int16_t var_1ah;\n    uint16_t *var_18h;\n    uint var_12h;\n    uint *var_8h;\n    \n    puStack52 = 0x41e5e1;\n    cVar1 = fcn.0041e270();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x41e5ef;\n        fcn.00417560();\n    }\n    puStack52 = 0x41e5fc;\n    cVar1 = fcn.0041e270();\n    if (cVar1 == '\\0') {\n        puStack52 = 0x41e609;\n        cVar1 = fcn.0041e49c();\n        if ((cVar1 == '\\0') && (var_1ah != 0x100)) {\n            puStack52 = 0x41e61f;\n            fcn.00417560();\n        }\n    }\n    if (*var_18h != arg_10h) {\n        puStack52 = 0x41e634;\n        fcn.00417560();\n    }\n    uVar2 = var_12h & 0xfff;\n    if (uVar2 == 0xc) {\n        if (var_1ah == 0x100) {\n            puStack52 = 0x41e656;\n            cVar1 = fcn.0041e11c();\n            if (cVar1 == '\\0') goto code_r0x0041e67f;\n        }\n        puStack52 = &fcn.0041e5c8::var_24h;\n        puStack56 = &fcn.0041e5c8::arg_14h;\n        puStack60 = var_18h;\n        puStack64 = 0x41e66b;\n        sub.OLEAUT32.DLL_SysStringByteLen();\n        puStack64 = 0x41e670;\n        fcn.00417560();\n        puStack64 = 0x41e67a;\n        fcn.004235cc();\n        return;\n    }\ncode_r0x0041e67f:\n    puStack52 = &fcn.0041e5c8::var_12h + 2;\n    puStack56 = 0x41e688;\n    sub.OLEAUT32.DLL_VariantClear();\n    puStack60 = 0x41e700;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if (uVar2 == 0xc) {\n        puStack56 = &stack0xfffffffc;\n        fcn.00418254();\n        var_24h = &fcn.0041e5c8::var_12h + 2;\n    }\n    else {\n        puStack56 = &stack0xfffffffc;\n        fcn.004189f0();\n        if ((uVar2 - 8 < 2) || (uVar2 - 8 == 5)) {\n            var_24h = var_8h;\n        }\n        else {\n            var_24h = &fcn.0041e5c8::var_8h;\n        }\n    }\n    sub.OLEAUT32.DLL_SafeArrayCopy(var_18h, &fcn.0041e5c8::arg_14h, var_24h);\n    fcn.00417560();\n    *in_FS_OFFSET = var_18h;\n    fcn.00417b3c(0x41e707);\n    return;\n}\n",
        "token_count": 888
    },
    "0041e738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0041e738(int32_t param_1, int32_t param_2, int32_t *param_3)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    if (-1 < param_1) goto code_r0x0041e74f;\n    do {\n        in_EAX = *in_EAX;\ncode_r0x0041e74f:\n        iVar3 = param_3 + *(param_3 + 1);\n        uVar1 = *(param_2 + iVar2 * 4) * *(iVar3 + 2);\n        param_3 = *(iVar3 + 6);\n        if (param_3 != NULL) {\n            param_3 = *param_3;\n        }\n        in_EAX = in_EAX + uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 <= param_1);\n    return uVar1 & 0xffffffff00000000 | ZEXT48(in_EAX);\n}\n",
        "token_count": 245
    },
    "0041e778": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e778(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if ((in_EAX != 0) && (puVar1 = *(in_EAX + *(in_EAX + 1) + 6),  puVar1 != NULL)) {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 102
    },
    "0041e7b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0041e7b4(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uStack24;\n    uint32_t uStack20;\n    \n    uStack24 = 1;\n    iVar1 = fcn.0041e794();\n    uVar2 = iVar1 - 1;\n    uVar3 = uVar2;\n    if (0 < uVar2) {\n        do {\n            uStack20 = uVar3;\n            if (in_EAX != NULL) {\n                iVar1 = fcn.0041e7ac();\n                uVar3 = fcn.0041e7ac();\n                iVar1 = iVar1 + -1;\n                uVar2 = uVar3;\n                if (0 < iVar1) {\n                    do {\n                        uVar2 = fcn.0041e7ac();\n                        if (uVar3 != uVar2) {\n                            uStack24 = 0;\n                            goto code_r0x0041e80f;\n                        }\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n                in_EAX = *in_EAX;\n            }\n            uStack20 = uStack20 - 1;\n            uVar3 = uStack20;\n        } while (uStack20 != 0);\n    }\ncode_r0x0041e80f:\n    return CONCAT44(uStack20, uVar2 & 0xffffff00 | uStack24);\n}\n",
        "token_count": 339
    },
    "0041e81c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e81c(int32_t *param_1, uint param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041e794(param_2);\n    fcn.00423c7c(iVar1);\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_EAX != NULL) {\n                iVar2 = fcn.0041e7ac();\n                *(*param_1 + iVar3 * 4) = iVar2 + -1;\n                in_EAX = *in_EAX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0041e8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e8dc(int32_t *param_1)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041e794();\n    fcn.00423c7c(iVar1 * 2);\n    for (iVar3 = 0; SBORROW4(iVar3, iVar1 * 2) != iVar3 + iVar1 * -2 < 0; iVar3 = iVar3 + 2) {\n        *(*param_1 + iVar3 * 4) = 0;\n        if (in_EAX != NULL) {\n            iVar2 = fcn.0041e7ac();\n            *(*param_1 + (iVar3 + 1) * 4) = iVar2 + -1;\n            in_EAX = *in_EAX;\n        }\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0041e934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041e934(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    if ((in_EAX != NULL) && (*in_EAX == '\\x11')) {\n        iVar1 = *(in_EAX + in_EAX[1] + 10);\n    }\n    if (iVar1 == 0x48) {\n        iVar1 = 0x100;\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0041f000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f000(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.0041f1f4(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.0041f174();\n    return;\n}\n",
        "token_count": 128
    },
    "0041f054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0041f054(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x461a1a + (in_ECX >> 0x18));\n}\n",
        "token_count": 109
    },
    "0041f0c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f0c8(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x41f0d3;\n    *NULL = fcn.00421fdc();\n    uStack16 = 0x41f0e3;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00416060();\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x4668f4 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x461918;\n    }\n    *in_FS_OFFSET = uStack24;\n    uStack16 = 0x41f132;\n    uStack20 = 0x41f12a;\n    fcn.00416168();\n    return;\n}\n",
        "token_count": 251
    },
    "0041f2ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f2ac(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x41f382;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    puStack304 = 0x41f2df;\n    fcn.0041620c();\n    uStack308 = 0x41f365;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack304 = &stack0xfffffffc;\n    iVar3 = fcn.00423ac8();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x4668f4 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x461918)) {\n                fcn.00421b78();\n                fcn.004229b8();\n                cVar2 = fcn.00412700();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack312;\n    puStack304 = 0x41f36c;\n    uStack308 = 0x41f364;\n    fcn.004162b0();\n    return;\n}\n",
        "token_count": 458
    },
    "0041fb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fb20(int32_t *param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *in_EAX;\n    uint *puVar3;\n    \n    puVar3 = *in_EAX;\n    *param_1 = *param_2;\n    param_1[1] = param_2[1];\n    do {\n        puVar1 = *puVar3;\n        if (*param_1 == puVar3[2] + puVar3[3]) {\n            fcn.0041fb08();\n            *param_1 = puVar3[2];\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        else if (*param_1 + param_1[1] == puVar3[2]) {\n            fcn.0041fb08();\n            param_1[1] = param_1[1] + puVar3[3];\n        }\n        puVar3 = puVar1;\n    } while (in_EAX != puVar1);\n    cVar2 = fcn.0041fad8();\n    if (cVar2 == '\\0') {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0041fc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fc24(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (in_EAX < 0x100000) {\n        uVar3 = 0x100000;\n    }\n    else {\n        uVar3 = in_EAX + 0xffffU & 0xffff0000;\n    }\n    param_2[1] = uVar3;\n    iVar2 = sub.KERNEL32.DLL_VirtualAlloc(0, uVar3, 0x2000, 1);\n    *param_2 = iVar2;\n    if (iVar2 != 0) {\n        cVar1 = fcn.0041fad8();\n        if (cVar1 == '\\0') {\n            sub.KERNEL32.DLL_VirtualFree(*param_2, 0, 0x8000);\n            *param_2 = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0041fdb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fdb8(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    \n    uVar5 = in_EAX & 0xfffff000;\n    uVar3 = in_EAX + param_2 + 0xfff & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar3 - uVar5;\n    puVar6 = *0x466eec;\n    do {\n        if (puVar6 == 0x466eec) {\n            return;\n        }\n        uVar1 = puVar6[2];\n        uVar4 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar4 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar3 < puVar6[3] + uVar1) {\n            uVar7 = uVar3;\n        }\n        if (uVar4 < uVar7) {\n            puVar8 = uVar7 - uVar4;\n            iVar2 = sub.KERNEL32.DLL_VirtualAlloc(uVar4, puVar8, 0x1000, 4);\n            if (iVar2 == 0) {\n                *puVar8 = 0;\n                return;\n            }\n        }\n        puVar6 = *puVar6;\n    } while( true );\n}\n",
        "token_count": 381
    },
    "0041fe4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fe4c(uint32_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    \n    uVar5 = in_EAX + 0xfffU & 0xfffff000;\n    uVar4 = in_EAX + param_2 & 0xfffff000;\n    *param_1 = uVar5;\n    param_1[1] = uVar4 - uVar5;\n    for (puVar6 = *0x466eec; puVar6 != 0x466eec; puVar6 = *puVar6) {\n        uVar1 = puVar6[2];\n        uVar3 = uVar1;\n        if (uVar1 < uVar5) {\n            uVar3 = uVar5;\n        }\n        uVar7 = puVar6[3] + uVar1;\n        if (uVar4 < puVar6[3] + uVar1) {\n            uVar7 = uVar4;\n        }\n        if (uVar3 < uVar7) {\n            iVar2 = sub.KERNEL32.DLL_VirtualFree(uVar3, uVar7 - uVar3, 0x4000);\n            if (iVar2 == 0) {\n                *0x466ec8 = 2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "004202b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004202b0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX == *0x466f18) {\n        *0x466f18 = in_EAX[1];\n    }\n    piVar1 = in_EAX[1];\n    iVar2 = in_EAX[2];\n    if (iVar2 < 0x1001) {\n        if (in_EAX != piVar1) {\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + 3;\n            }\n            *(*0x466f24 + -0xc + (iVar2 >> 2) * 4) = piVar1;\n            iVar2 = *in_EAX;\n            *piVar1 = iVar2;\n            *(iVar2 + 4) = piVar1;\n            return;\n        }\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + 3;\n        }\n        *(*0x466f24 + -0xc + (iVar2 >> 2) * 4) = 0;\n    }\n    else {\n        iVar2 = *in_EAX;\n        *piVar1 = iVar2;\n        *(iVar2 + 4) = piVar1;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00420314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00420314(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = *0x466f28;\n    while( true ) {\n        if (puVar1 == 0x466f28) {\n            *0x466ec8 = 3;\n            return NULL;\n        }\n        if ((puVar1[2] <= in_EAX) && (in_EAX < puVar1[2] + puVar1[3])) break;\n        puVar1 = *puVar1;\n    }\n    return puVar1;\n}\n",
        "token_count": 132
    },
    "00420398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420398(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *in_EAX;\n    \n    if (0xb < param_2) {\n        *in_EAX = param_2 | 2;\n        fcn.00420374();\n        return;\n    }\n    if (3 < param_2) {\n        *in_EAX = param_2 | 0x80000002;\n    }\n    *(in_EAX + param_2) = *(in_EAX + param_2) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 129
    },
    "00420430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00420430(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    uVar1 = *in_EAX;\n    if ((uVar1 & 0x80000000) != 0) {\n        uVar3 = uVar1 & 0x7ffffffc;\n        in_EAX = in_EAX + uVar3;\n        uVar1 = *in_EAX;\n    }\n    if ((uVar1 & 2) == 0) {\n        fcn.004202b0();\n        uVar3 = uVar3 + in_EAX[2];\n        puVar2 = in_EAX + in_EAX[2];\n        *puVar2 = *puVar2 & 0xfffffffe;\n    }\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "00420518": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420518(uint param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t **in_EAX;\n    \n    in_EAX[2] = param_2;\n    *(in_EAX + param_2 + -4) = param_2;\n    if (param_2 < 0x1001) {\n        if (param_2 < 0) {\n            param_2 = param_2 + 3;\n        }\n        ppiVar1 = *(*0x466f24 + -0xc + (param_2 >> 2) * 4);\n        if (ppiVar1 == NULL) {\n            *(*0x466f24 + -0xc + (param_2 >> 2) * 4) = in_EAX;\n            in_EAX[1] = in_EAX;\n            *in_EAX = in_EAX;\n        }\n        else {\n            piVar2 = *ppiVar1;\n            in_EAX[1] = ppiVar1;\n            *in_EAX = piVar2;\n            *ppiVar1 = in_EAX;\n            piVar2[1] = in_EAX;\n        }\n    }\n    else {\n        if ((0x3bff < param_2) && (cVar4 = fcn.00420468(),  cVar4 != '\\0')) {\n            return;\n        }\n        ppiVar1 = *0x466f18;\n        piVar2 = **0x466f18;\n        ppiVar3 = in_EAX;\n        in_EAX[1] = *0x466f18;\n        *0x466f18 = ppiVar3;\n        *in_EAX = piVar2;\n        *ppiVar1 = in_EAX;\n        piVar2[1] = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 433
    },
    "004206d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004206d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (in_EAX < 0) {\n        in_EAX = in_EAX + 3;\n    }\n    iVar1 = in_EAX >> 2;\n    if (iVar1 < 0x401) {\n        do {\n            iVar2 = *(*0x466f24 + -0xc + iVar1 * 4);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 0x401);\n    }\n    return iVar2;\n}\n",
        "token_count": 163
    },
    "00420fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420fc0(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x00420fd6:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x00420fe1;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x00420fd6;\n    param_1 = 0;\ncode_r0x00420fe1:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00421024": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421024(uint32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    iVar1 = param_1 >> 2;\n    if (in_EAX < param_2) {\n        puVar2 = (param_1 - 4) + in_EAX;\n        param_2 = (param_1 - 4) + param_2;\n        if (-1 < iVar1) {\n            for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *param_2 = *puVar2;\n                puVar2 = puVar2 + -1;\n                param_2 = param_2 + -1;\n            }\n            puVar3 = puVar2 + 3;\n            puVar4 = param_2 + 3;\n            for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + -1;\n                puVar4 = puVar4 + -1;\n            }\n        }\n    }\n    else if ((param_2 != in_EAX) && (-1 < iVar1)) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        for (param_1 = param_1 & 3; param_1 != 0; param_1 = param_1 - 1) {\n            *param_2 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "0042166c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042166c(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00421628(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.00420fb0();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00421bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00421bf0(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 34
    },
    "00421bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421bf8(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00421cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421cac(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x00421cc3. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00421cc5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 360
    },
    "00421d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00421d70(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 252
    },
    "00421df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421df4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00421e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00421e50(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 35
    },
    "00421e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00421e94(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00421ee4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421ee4(uint8_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        puVar3 = *(in_EAX + -0x34);\n        if (puVar3 != NULL) {\n            uVar1 = uVar1 & 0xffff0000 | *puVar3;\n            puVar3 = puVar3 + 1;\n            do {\n                if (param_2 == *(puVar3 + 1)) {\n                    iVar2 = *(puVar3 + 3) + 1;\n                    puVar3 = puVar3 + 3;\n                    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                        *param_1 = *puVar3;\n                        puVar3 = puVar3 + 1;\n                        param_1 = param_1 + 1;\n                    }\n                    return;\n                }\n                puVar3 = puVar3 + *puVar3;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 326
    },
    "004223e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004223e4(void)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x42242f;\n    iVar4 = fcn.0040143c();\n    puVar2 = *(iVar4 + 8);\n    *(iVar4 + 8) = *puVar2;\n    piVar3 = puVar2[3];\n    puVar1 = piVar3 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar3 != 0xeedfade) {\n        fcn.00421c28();\n        fcn.00421fec();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 223
    },
    "00422508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422508(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00424964();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 72
    },
    "00422530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422530(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00422780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422780(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00420de0();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 182
    },
    "00422820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.00422820(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00420dc0();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "0042294c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042294c(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.00422820();\n    if (param_2 != NULL) {\n        fcn.00421024();\n    }\n    fcn.0042275c();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 183
    },
    "004229c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004229c4(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.00422820();\n    if (param_2 != NULL) {\n        fcn.00421024();\n    }\n    fcn.0042275c();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 176
    },
    "00422a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422a1c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    if (*in_EAX != 0) {\n        if (param_2 == *in_EAX) {\n            fcn.00422d98();\n        }\n        else {\n            fcn.00422d98();\n        }\n        fcn.00421024();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.00422820(param_2);\n            fcn.00421024();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00420de0();\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "00422a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422a60(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    \n    iVar3 = param_1;\n    if ((param_2 != 0) && (iVar3 = param_2,  param_1 != 0)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                iVar3 = fcn.00422820();\n                fcn.00421024();\n                fcn.00421024();\n                if (iVar3 != 0) {\n                    *(iVar3 + -8) = *(iVar3 + -8) + -1;\n                }\n                fcn.004227b0();\n                return;\n            }\n            fcn.004227b0();\n        }\n        if (param_1 == 0) {\n            return;\n        }\n        iVar3 = param_1;\n        if (*in_EAX != 0) {\n            if (param_1 == *in_EAX) {\n                fcn.00422d98();\n            }\n            else {\n                fcn.00422d98();\n            }\n            fcn.00421024();\n            return;\n        }\n    }\n    if (iVar3 != 0) {\n        iVar2 = *(iVar3 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            iVar3 = fcn.00422820(iVar3);\n            fcn.00421024();\n        }\n        else {\n            LOCK();\n            *(iVar3 + -8) = *(iVar3 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = iVar3;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00420de0();\n        }\n    }\n    return;\n}\n",
        "token_count": 493
    },
    "00422ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422ad4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    iVar1 = *(&stack0x00000000 + param_2 * 4);\n    iVar2 = param_2;\n    iVar3 = 0;\n    if ((iVar1 != 0) && (*in_EAX == iVar1)) {\n        iVar3 = iVar1;\n    }\n    do {\n        if ((*(&stack0x00000000 + iVar2 * 4) != 0) && (iVar3 == *(&stack0x00000000 + iVar2 * 4))) {\n            iVar3 = 0;\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (iVar3 == 0) {\n        iStack24 = fcn.00422820();\n    }\n    else {\n        fcn.00422d98();\n        param_2 = param_2 + -1;\n        iStack24 = iVar3;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.00421024();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (iVar3 == 0) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.004227b0();\n    }\n    // WARNING: Could not recover jumptable at 0x00422b52. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 434
    },
    "00422c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422c6c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.0042275c();\n    }\n    else {\n        fcn.0042284c();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00422cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422cac(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00422c5c();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.00421024();\n            fcn.00422d98();\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00422cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422cf4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00422d98();\n        fcn.00421024();\n        fcn.00421024();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00422e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422e64(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.OLEAUT32.DLL_SysStringLen(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 129
    },
    "00422eac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422eac(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00422e4c(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00422898(param_1),  0 < iVar1)) {\n        fcn.00422f38();\n    }\n    else {\n        fcn.004230f4();\n        fcn.00422898(param_1);\n        fcn.004230f4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00422fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422fc4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00422fb8();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00422fb8();\n        fcn.00422e24();\n        if (0 < iVar1) {\n            fcn.00421024();\n        }\n        fcn.00421024();\n        fcn.00422e3c();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004230f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004230f4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00422e24();\n        iVar1 = fcn.00422fb8();\n        if (0 < iVar1) {\n            fcn.00421024();\n        }\n    }\n    fcn.00422e3c();\n    return;\n}\n",
        "token_count": 98
    },
    "00423138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423138(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00423168();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "004231fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004231fc(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00423230();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "004236a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004236a4(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00423c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423c7c(void)\n\n{\n    fcn.00423af0(&stack0x00000004);\n    return;\n}\n",
        "token_count": 33
    },
    "00423e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00423e00(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.KERNEL32.DLL_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 87
    },
    "00424964": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424964(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack1032 [1024];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00423e78(*(in_EAX + 4), auStack1032, 0x400);\n            sub.USER32.DLL_LoadStringA(uVar1);\n            fcn.0042284c();\n        }\n        else {\n            fcn.0042294c();\n        }\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "00424c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00424c3c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 131
    },
    "004253f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004253f8(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.USER32.DLL_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00412d3c();\n    if (iVar1 == 0) {\n        *(arg_ch + 4) = arg_8h;\n        *(arg_ch + 0xc) = 1;\n    }\n    return -(*(arg_ch + 0xc) != '\\x01');\n}\n",
        "token_count": 135
    },
    "00425454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425454(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_100h;\n    \n    sub.USER32.DLL_GetClassNameA(arg_8h, &var_100h, 0x100);\n    iVar1 = fcn.00412d18();\n    if (iVar1 == 0) {\n        *(arg_ch + 0xd) = 1;\n        *(arg_ch + 8) = arg_8h;\n    }\n    return -(*(arg_ch + 0xd) != '\\x01');\n}\n",
        "token_count": 133
    },
    "004256f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004256f0(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x425753;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x467018 == 0;\n    *0x467018 = *0x467018 + -1;\n    if (bVar1) {\n        *0x46701c = fcn.00424c3c();\n        fcn.00424448();\n        fcn.004039bc();\n        fcn.00424448();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 183
    },
    "00425850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425850(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00427a44();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "00425bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00425bd4(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x425be5;\n    var_4h = in_EAX;\n    var_8h = sub.USER32.DLL_GetDC();\n    uStack44 = 0x425c75;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.GDI32.DLL_CreateCompatibleBitmap(var_8h, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.004347cc();\n    fcn.00433cac();\n    fcn.0043095c();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.00425bd4::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00405e68(arg_8h, arg_ch);\n    fcn.00433cac(&fcn.00425bd4::var_18h);\n    fcn.00430d00();\n    *in_FS_OFFSET = arg_8h;\n    sub.USER32.DLL_ReleaseDC(0, var_8h, 0x425c7c);\n    return;\n}\n",
        "token_count": 403
    },
    "00425c98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425c98(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.COMCTL32.DLL_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.00425bd4();\n    return;\n}\n",
        "token_count": 160
    },
    "00425e38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425e38(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x425e53;\n    fcn.004336e4();\n    uStack36 = 0x425ee7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x425e70;\n    puStack32 = &stack0xfffffffc;\n    fcn.004336e4();\n    uStack48 = 0x425eca;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00425bc8();\n    uVar1 = fcn.00425d0c();\n    uVar2 = fcn.00425d0c(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.COMCTL32.DLL_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00421c28(0x425ed1);\n    return;\n}\n",
        "token_count": 339
    },
    "00426264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426264(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_20h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = 0x42628d;\n    var_8h = param_2;\n    fcn.00405e68(&fcn.00426264::var_20h, *(in_EAX + 0x30));\n    puStack60 = 0x426295;\n    fcn.00426e24();\n    uStack64 = 0x4263ec;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x4262af;\n    puStack60 = &stack0xfffffffc;\n    var_ch = fcn.004336e4();\n    uStack76 = 0x4263cf;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x4262ce;\n    puStack72 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack84 = 0x4262dc;\n    (**(*var_ch + 0x40))();\n    puStack84 = 0x4262e8;\n    var_10h = fcn.004336e4();\n    uStack88 = 0x4263b2;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    fcn.00434a1c();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack96 = var_8h;\n    iVar1 = sub.COMCTL32.DLL_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            fcn.00433cac();\n            fcn.00430d00();\n            uVar2 = fcn.00430fe8(0, 0, 0);\n            sub.COMCTL32.DLL_ImageList_Draw(var_8h, iVar3, uVar2);\n            fcn.00433cac();\n            fcn.00430d00();\n            fcn.00430fe8(0, 0, 0x10);\n            uStack96 = var_8h;\n            sub.COMCTL32.DLL_ImageList_Draw();\n            fcn.00425e38();\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack96;\n    uStack88 = 0x4263b9;\n    uStack92 = 0x4263b1;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 761
    },
    "0042671c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0042671c(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != 0) {\n        puStack32 = 0x426734;\n        uVar1 = fcn.00425f04();\n        puStack32 = 0x42673d;\n        in_EAX = fcn.00425f04();\n        if (uVar1 == in_EAX) {\n            puStack32 = 0x426751;\n            iVar2 = fcn.00425f04();\n            if (iVar2 != 0) {\ncode_r0x00426769:\n                puStack32 = 0x426775;\n                fcn.00421bf8();\n                uStack36 = 0x4267f8;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x426790;\n                puStack32 = &fcn.0042671c::var_1h + 1;\n                fcn.00426da8();\n                puStack44 = 0x42679c;\n                fcn.00421bf8();\n                uStack48 = 0x4267db;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.0042671c::var_1h + 1;\n                fcn.00426da8();\n                var_1h._0_1_ = fcn.004266d4();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x4267e2;\n                uStack48 = 0x4267da;\n                uVar1 = fcn.00421c28();\n                return uVar1;\n            }\n            puStack32 = 0x42675c;\n            in_EAX = fcn.00425f04();\n            if (in_EAX != 0) goto code_r0x00426769;\n            var_1h._0_1_ = 1;\n            goto code_r0x004267ff;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x004267ff:\n    return in_EAX & 0xffffff00 | var_1h;\n}\n",
        "token_count": 621
    },
    "00426868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426868(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040f4b0();\n    uVar2 = 0x426d1c;\n    pcVar1 = fcn.00426da8;\n    uVar3 = in_EAX;\n    fcn.0042680c(&stack0xfffffffc);\n    (**(*param_2 + 8))(pcVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 154
    },
    "00426b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426b54(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x426b73;\n    iVar1 = fcn.0040fc24(0);\n    uStackY44 = 0x426bb4;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.COMCTL32.DLL_ImageList_Read();\n    fcn.00425cd0();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x426bbb;\n    iStackY48 = 0x426bb3;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 239
    },
    "004276c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004276c0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00427a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427a44(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0040fa60();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "00429e08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429e08(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.00421db4(),  cVar1 != '\\0')) {\n        fcn.0042c570();\n        fcn.0042ca6c();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.0042d5a8();\n    }\n    fcn.004295a4();\n    return;\n}\n",
        "token_count": 138
    },
    "0042b5b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b5b8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.USER32.DLL_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042c38c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c38c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004227f4();\n    return;\n}\n",
        "token_count": 236
    },
    "0042ce04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.0042ce04(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.004295a4();\n    return 0;\n}\n",
        "token_count": 63
    },
    "0042f488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042f488(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.KERNEL32.DLL_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 169
    },
    "0042f4e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f4e8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 43
    },
    "0042f4f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f4f4(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 44
    },
    "0042f694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f694(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42f6ad;\n    fcn.0042f4e8();\n    uStack32 = 0x42f6fd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.0042f500();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.00421e24();\n    }\n    fcn.0042f5e4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42f704;\n    uStack32 = 0x42f6fc;\n    fcn.0042f4f4();\n    return;\n}\n",
        "token_count": 272
    },
    "0042f7e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042f7e4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x42f7fb;\n    iVar1 = fcn.00407850();\n    uStack28 = 0x42f881;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00407488();\n        fcn.00430d74();\n        var_4h = var_4h + 1;\n        fcn.00431008();\n    }\n    fcn.0042f778();\n    fcn.0042f778();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x42f888;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x42f86d;\n            fcn.00407488();\n            uStack28 = 0x42f872;\n            fcn.00430ee0();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x42f880;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 352
    },
    "0042ffbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ffbc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    *0x461bf4 = 0;\n    uVar1 = fcn.0042f500();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = reloc.OLEAUT32.DLL_VariantClear;\n    *(in_EAX + 0x1c) = *0x46704c;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 214
    },
    "00430054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430054(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x43006f;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x43007f;\n        fcn.0042fd14();\n        uStack24 = 0x43010f;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x430097;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042fd14();\n        uStack36 = 0x4300f2;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0042f70c();\n        fcn.00430190();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.00430414();\n            fcn.00430430();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4300f9;\n        uStack36 = 0x4300f1;\n        fcn.0042fd24();\n        return;\n    }\n    puStack20 = 0x430121;\n    fcn.00407aa0();\n    return;\n}\n",
        "token_count": 403
    },
    "0043034c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043034c(void)\n\n{\n    fcn.0042ff08();\n    fcn.00430140();\n    return;\n}\n",
        "token_count": 33
    },
    "00430378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430378(void)\n\n{\n    fcn.00430128();\n    fcn.00430140();\n    return;\n}\n",
        "token_count": 31
    },
    "0043045c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043045c(uint param_1, uchar param_2)\n\n{\n    fcn.00430128(param_2);\n    fcn.00430140();\n    return;\n}\n",
        "token_count": 45
    },
    "004304e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004304e8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0042f500();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 175
    },
    "00430554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430554(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x43056f;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x43057f;\n        fcn.0042fd14();\n        uStack24 = 0x4305f3;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x430597;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042fd14();\n        uStack36 = 0x4305d6;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0042f70c();\n        fcn.0043073c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4305dd;\n        uStack36 = 0x4305d5;\n        fcn.0042fd24();\n        return;\n    }\n    puStack20 = 0x430605;\n    fcn.00407aa0();\n    return;\n}\n",
        "token_count": 340
    },
    "0043067c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043067c(void)\n\n{\n    fcn.0043060c();\n    fcn.00430624();\n    return;\n}\n",
        "token_count": 33
    },
    "004307b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004307b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.0042f500();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 160
    },
    "0043081c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043081c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x430837;\n    cVar1 = fcn.00421db4();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x430843;\n        fcn.0042fd14();\n        uStack24 = 0x4308ac;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x43085b;\n        puStack20 = &stack0xfffffffc;\n        fcn.0042fd14();\n        uStack36 = 0x43088f;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.0042f70c();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x430896;\n        uStack36 = 0x43088e;\n        fcn.0042fd24();\n        return;\n    }\n    puStack20 = 0x4308be;\n    fcn.00407aa0();\n    return;\n}\n",
        "token_count": 328
    },
    "00430930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430930(uint param_1, uint param_2)\n\n{\n    fcn.004308e0(*0x461e74, *0x461e78, param_2, *0x461e80);\n    return;\n}\n",
        "token_count": 58
    },
    "00430aac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00430aac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    sub.KERNEL32.DLL_InitializeCriticalSection();\n    iVar1 = fcn.0042ffbc();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x431230;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.004304e8();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x431250;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.004307b4();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x431270;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x430b6c;\n    fcn.004077c8();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 424
    },
    "00430c54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430c54(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.004310bc();\n            fcn.00430954();\n            uVar2 = fcn.0042fcd0();\n            sub.GDI32.DLL_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.0042fcd0();\n            sub.GDI32.DLL_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00405e68(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00430e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00430e48(void)\n\n{\n    ulong uStack16;\n    \n    fcn.00430e04();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00430e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00430e64(void)\n\n{\n    uint uStack12;\n    \n    fcn.00430e04();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "00430f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430f54(uint param_1, uint *param_2)\n\n{\n    fcn.00430d9c(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 47
    },
    "00431068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431068(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.00431008();\n            fcn.00430f30();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00430f54();\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0043132c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043132c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x4313c8;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.KERNEL32.DLL_GetLastError();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.KERNEL32.DLL_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004229c4();\n            fcn.00414b70();\n            fcn.004223bc();\n            goto code_r0x004313af;\n        }\n    }\n    fcn.004312d8();\ncode_r0x004313af:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.0042275c(0x4313cf);\n    return;\n}\n",
        "token_count": 294
    },
    "00431564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00431564(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U);\n    if (uVar1 < 0) {\n        uVar1 = uVar1 + 7;\n    }\n    return in_EAX * param_2 & 0xffffffff00000000U | uVar1 >> 3;\n}\n",
        "token_count": 127
    },
    "00431844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431844(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.0042153c();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00431914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431914(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t var_3e8h;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint var_4h;\n    \n    uStack1044 = 0x431940;\n    fcn.00421024();\n    uStack1044 = 0;\n    puStack1048 = 0x431947;\n    var_4h = sub.USER32.DLL_GetDC();\n    uStack1052 = 0x431a11;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.GDI32.DLL_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.GDI32.DLL_GetSystemPaletteEntries(var_4h, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = var_4h;\n        if (var_3e8h == 0xc0c0c0) {\n            sub.GDI32.DLL_GetSystemPaletteEntries(var_4h, iVar1 + -8, 1, &fcn.00431914::var_3e8h);\n            sub.GDI32.DLL_GetSystemPaletteEntries(var_4h, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.GDI32.DLL_GetSystemPaletteEntries(var_4h, 7, 1, &fcn.00431914::var_3e4h);\n        }\n        else {\n            sub.GDI32.DLL_GetSystemPaletteEntries(var_4h, iVar1 + -8, 8, &fcn.00431914::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.USER32.DLL_ReleaseDC(0, var_4h, 0x431a18);\n    return;\n}\n",
        "token_count": 519
    },
    "00431d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431d84(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "00432200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00432200(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.0043211c();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 234
    },
    "0043253c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043253c(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 130
    },
    "004325e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004325e4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.0043258c(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 102
    },
    "00432a48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432a48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00430aac();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00432d08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432d08(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x432d3e;\n        var_4h = param_2;\n        iVar1 = fcn.00431b68();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x432d4b;\n            uStack1060 = sub.USER32.DLL_GetDC();\n            uStack1064 = 0x432d57;\n            var_8h = uStack1060;\n            uStack1068 = sub.GDI32.DLL_CreateCompatibleDC();\n            puStack1072 = 0x432d64;\n            var_ch = uStack1068;\n            var_10h = sub.GDI32.DLL_SelectObject();\n            uStack1076 = 0x432db7;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = var_ch;\n            puStack1072 = &stack0xfffffffc;\n            sub.GDI32.DLL_SetDIBColorTable(var_ch, 0, iVar1, &fcn.00432d08::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.GDI32.DLL_SelectObject(var_ch, var_10h, 0x432dbe);\n            sub.GDI32.DLL_DeleteDC(var_ch);\n            sub.USER32.DLL_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 486
    },
    "00433788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433788(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x4337a6;\n        cVar1 = fcn.00421db4();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x433871;\n            fcn.00407aa0();\n            return;\n        }\n    }\n    uStack104 = 0x467060;\n    puStack108 = 0x4337b8;\n    sub.KERNEL32.DLL_EnterCriticalSection();\n    uStack112 = 0x433840;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0042153c();\n        in_stack_ffffff80 = 0;\n        fcn.004340cc(0, 0, &fcn.00433788::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.00432c3c();\n        fcn.00432c40();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.KERNEL32.DLL_LeaveCriticalSection(0x467060, 0x433847);\n    return;\n}\n",
        "token_count": 480
    },
    "00433878": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433878(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.00433878::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x43389d;\n    fcn.00433e5c();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x433907;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x467044) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.00433474();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.00432e10(*(in_EAX + 0x2c), &fcn.00433878::var_5ch);\n    uVar3 = 0;\n    fcn.004340cc(0, *(in_EAX + 0x28) & 0xffffff00 | *(*(in_EAX + 0x28) + 0x70), &fcn.00433878::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 440
    },
    "00433938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433938(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.00433c2c();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.00416340();\n    return;\n}\n",
        "token_count": 91
    },
    "00433968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.00433968(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00421bf8();\n    (**(*in_EAX + 0x58))();\n    uVar4 = fcn.00409828();\n    fcn.00409878(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00433e5c();\n    fcn.00416340();\n    fcn.004340cc(arg_8h, in_EAX[10] & 0xffffff00U | *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 272
    },
    "0043475c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043475c(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00433e5c();\n    if (param_1 == 0) {\n        fcn.0042153c();\n        fcn.004340cc(0, 0, auStack98);\n    }\n    else {\n        fcn.00409a20();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.004312c0();\n        }\n        fcn.004341f4(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00434e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434e8c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00433e6c();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.00434e8c::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x434ed9;\n    uVar1 = fcn.00432e10(*(in_EAX + 0x2c), &fcn.00434e8c::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x434f06;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.00433474();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 409
    },
    "00434f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434f74(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0043253c();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00421bf8();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.00432c3c();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "00435218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00435218(void)\n\n{\n    int32_t *in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x435231;\n    puVar1 = fcn.00421bf8();\n    uStack36 = 0x4352a7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = fcn.00409828();\n    fcn.004097f4(uVar2);\n    (***puVar1)();\n    fcn.00409828();\n    fcn.00409a20();\n    fcn.00409a20();\n    if (1 < var_ah._2_2_) {\n        fcn.004312cc();\n    }\n    fcn.004352d0();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4352c7;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 284
    },
    "0043541c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0043541c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x43542a;\n    iVar1 = sub.USER32.DLL_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x467058;\n        iStack76 = iVar1;\n        iVar2 = sub.GDI32.DLL_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.GDI32.DLL_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.USER32.DLL_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 222
    },
    "0043552c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043552c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    sub.KERNEL32.DLL_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 135
    },
    "00435590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00435590(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0043559c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043559c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 42
    },
    "0043575c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043575c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint *var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_ch = *(in_EAX + 4);\n    if (var_ch == NULL) {\n        return;\n    }\n    uStack20 = 0x435778;\n    var_8h = var_ch;\n    var_4h = in_EAX;\n    fcn.00435590();\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(var_4h + 4) = *var_ch;\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x4357ae;\n    uStack24 = 0x4357a6;\n    fcn.0043559c();\n    return;\n}\n",
        "token_count": 219
    },
    "004389ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004389ac(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != 0) {\n        uVar1 = sub.USER32.DLL_GetWindowLongA();\n        if (param_2 == '\\0') {\n            if ((uVar1 & 0x200) == 0) {\n                return;\n            }\n        }\n        else if ((uVar1 & 0x200) != 0) {\n            return;\n        }\n        sub.USER32.DLL_SetWindowLongA();\n        sub.USER32.DLL_SetWindowPos();\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "00438a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438a80(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x461f1c;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x461f1c = 0;\n    uStack36 = 0x438b23;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    uStack48 = 0x438aec;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.KERNEL32.DLL_GetCurrentThreadId(fcn.00438a30, 0);\n    sub.USER32.DLL_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x461f1c = uVar1;\n    return;\n}\n",
        "token_count": 274
    },
    "00438c4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00438c4c(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint uStack8;\n    uchar uStack4;\n    \n    uStack8 = sub.USER32.DLL_GetActiveWindow();\n    uStack4 = 0;\n    pcVar3 = fcn.00438c2c;\n    uVar1 = sub.KERNEL32.DLL_GetCurrentThreadId(fcn.00438c2c, &uStack8);\n    uVar2 = sub.USER32.DLL_EnumThreadWindows(uVar1);\n    return CONCAT44(pcVar3, uVar2 & 0xffffff00 | pcVar3 & 0xff);\n}\n",
        "token_count": 155
    },
    "00438e6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00438e6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x438edd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.00438e44();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00424964();\n        fcn.00414bac(in_stack_ffffffd4, arg_ch);\n        fcn.004223bc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x438ee4;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 287
    },
    "00438eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438eec(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00421f74();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = reloc.OLEAUT32.DLL_SafeArrayLock;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 331
    },
    "00439a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00439a70(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    fcn.0044b078();\n    uVar1 = fcn.00438eec(0);\n    *(in_EAX + 0x208) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.00438eec(1);\n    *(in_EAX + 0x20c) = uVar1;\n    *(in_EAX + 0x210) = 1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 224
    },
    "00439e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439e4c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x208) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x20c) + 0x1a);\n        fcn.004486f8(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00448724();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.004486f8();\n        fcn.00448724();\n        if (iVar5 < 0) {\n            fcn.004396d4();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.004485e4();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.004485e4();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.004485e4();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.004485e4(iVar6, iVar7, iVar3);\n                fcn.004396d4();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.004396d4();\n        }\n        else {\n            iVar5 = fcn.00448628();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.00448628();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.00448628();\n                }\n                fcn.00448628();\n                fcn.004396d4();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "0043a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a200(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x43a261;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.0044e550();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "0043a394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043a394(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffec4;\n    uint *arg_ch;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack300 = 0x43a3b3;\n        in_EAX = fcn.00421f74();\n    }\n    uStack304 = 0x43a476;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    puStack300 = &stack0xfffffffc;\n    fcn.00439a70();\n    *(in_EAX + 0x50) = *0x43a49c;\n    iVar2 = fcn.00421b70();\n    if ((iVar2 == *0x43764c) || ((*(in_EAX + 0x1d) & 4) != 0)) {\n        fcn.0044839c();\n        fcn.004483c0();\n    }\n    else {\n        cVar1 = fcn.004070b8();\n        if (cVar1 == '\\0') {\n            fcn.00421b78();\n            var_8h = &fcn.0043a394::var_108h;\n            var_4h._0_1_ = 4;\n            arg_ch = &fcn.0043a394::var_8h;\n            in_stack_fffffec4 = 0;\n            fcn.00424964();\n            fcn.00414bac(in_stack_fffffec4, arg_ch);\n            fcn.004223bc();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffec4;\n    uStack308 = 0x43a47d;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 479
    },
    "0043a4c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a4c4(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0044f6e8(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0040f75c(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0040f730();\n            cVar1 = fcn.00421e24();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0043a6b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043a6b4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x43a6d2;\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x43a818;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x43a6f4;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    fcn.00416060();\n    uStack320 = 0x43a7f8;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x43a713;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xdc))();\n    puStack332 = 0x43a71b;\n    iVar2 = fcn.00421b70();\n    if ((iVar2 != *0x43848c) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xbb) = *(stack0xfffffff8 + 0xbb) | 1;\n        uStack336 = 0x43a7c0;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.004070b8();\n        if (cVar1 == '\\0') {\n            fcn.00421b78();\n            var_10h = &fcn.0043a6b4::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0043a6b4::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00424964();\n            fcn.00414bac(in_stack_fffffea4, arg_ch);\n            fcn.004223bc();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xbb) = *(stack0xfffffff8 + 0xbb) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x43a7ff;\n    uStack324 = 0x43a7f7;\n    fcn.00416168();\n    return;\n}\n",
        "token_count": 775
    },
    "0043b338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b338(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.0044f6e8(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.0040f75c(),  -1 < var_8h + -1)) {\n        do {\n            fcn.0040f730();\n            cVar1 = fcn.00421e24();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0043e854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e854(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43e8c0;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xe0))();\n    if (cVar1 != '\\0') {\n        fcn.00421e24();\n        if ((cVar1 != '\\0') == true) {\n            fcn.0043e988();\n        }\n    }\n    else {\n        in_EAX[0x93] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 203
    },
    "0043f3bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f3bc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.0044dc88();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0043f628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043f628(void)\n\n{\n    uint uStack20;\n    \n    fcn.0043f690();\n    return uStack20;\n}\n",
        "token_count": 35
    },
    "0043f640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043f640(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.0043f690();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "0043f65c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043f65c(void)\n\n{\n    uint uStack16;\n    \n    fcn.0043f690();\n    return uStack16;\n}\n",
        "token_count": 36
    },
    "0043f674": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043f674(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.0043f690();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "0043f690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f690(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x466438)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 135
    },
    "0043fe0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fe0c(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    uint auStack24 [2];\n    \n    puVar5 = auStack24;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.USER32.DLL_GetCursorPos(auStack24);\n            iVar1 = sub.USER32.DLL_WindowFromPoint(puVar5, auStack24[0]);\n            if (iVar1 != 0) {\n                iVar2 = sub.USER32.DLL_GetWindowThreadProcessId(iVar1, 0);\n                iVar3 = sub.KERNEL32.DLL_GetCurrentThreadId();\n                if (iVar2 == iVar3) {\n                    uVar4 = fcn.00402798();\n                    sub.USER32.DLL_SendMessageA(iVar1, 0x84, 0, uVar4);\n                    uVar4 = fcn.00402720();\n                    sub.USER32.DLL_SendMessageA(iVar1, 0x20, iVar1, uVar4);\n                    return;\n                }\n            }\n        }\n        uVar4 = fcn.0043fde4();\n        sub.USER32.DLL_SetCursor(uVar4);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 363
    },
    "00440020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __fastcall fcn.00440020(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint var_1h;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        uVar1 = *(in_EAX + 0x44) < *(param_2 + 0x44);\n    }\n    else if (param_1 == '\\x02') {\n        uVar1 = *(param_2 + 0x44) + *(param_2 + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    }\n    else if (param_1 == '\\x03') {\n        uVar1 = *(in_EAX + 0x40) < *(param_2 + 0x40);\n    }\n    else if (param_1 == '\\x04') {\n        uVar1 = *(param_2 + 0x40) + *(param_2 + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 < *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    }\n    return uVar1;\n}\n",
        "token_count": 323
    },
    "004403d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004403d4(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x4403e9;\n    cVar1 = fcn.0044037c(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00421bf8();\n        uStack28 = 0x44044e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.00440230(&stack0xfffffffc);\n        fcn.00440230(&stack0xfffffffc);\n        fcn.00440230(&stack0xfffffffc);\n        fcn.00440230(&stack0xfffffffc);\n        fcn.00440230(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x44044d;\n        fcn.00421c28();\n        return;\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00440f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440f7c(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint var_40h;\n    \n    uVar1 = sub.USER32.DLL_BeginPaint(*(*(arg_8h + -4) + 0x30), &var_40h);\n    uVar2 = fcn.004416a0();\n    sub.USER32.DLL_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.USER32.DLL_EndPaint(*(*(arg_8h + -4) + 0x30), &var_40h);\n    return;\n}\n",
        "token_count": 144
    },
    "00441954": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00441954(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x109)) {\n        iVar1 = sub.USER32.DLL_GetCapture();\n        if (iVar1 == 0) {\n            iVar1 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar1 != *(*(in_EAX + 0x44) + 0x254))) {\n                while( true ) {\n                    iVar2 = fcn.00445af4();\n                    if ((iVar2 != 0) || (iVar1 == 0)) break;\n                    iVar1 = sub.USER32.DLL_GetParent();\n                }\n                if (iVar1 == 0) {\n                    iVar1 = *param_2;\n                }\n            }\n            else {\n                iVar1 = fcn.0044f188();\n            }\n            iVar1 = sub.USER32.DLL_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        else {\n            iVar2 = sub.USER32.DLL_GetWindowLongA(iVar1, 0xfffffffa);\n            if (iVar2 == *0x46652c) {\n                iVar1 = sub.USER32.DLL_SendMessageA(iVar1, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar1 != 0) {\n                    uVar3 = 1;\n                }\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 424
    },
    "00441b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441b44(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00441aac();\n    if (cVar1 == '\\0') {\n        fcn.004423e8();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00441e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441e68(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t var_54h;\n    uint *var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iStack104 = 0x441e80;\n    var_4h = in_EAX;\n    iStack108 = sub.USER32.DLL_GetActiveWindow();\n    iStack104 = 2;\n    uStack112 = 0x441e92;\n    var_ch = iStack108;\n    var_14h = (***0x466434)();\n    uStack112 = 2;\n    uStack116 = *(var_4h + 0x30);\n    puStack120 = 0x441ea7;\n    var_18h = (***0x466434)();\n    if (var_14h != var_18h) {\n        var_44h = 0x28;\n        puStack120 = &fcn.00441e68::var_44h;\n        iStack124 = var_14h;\n        uStack128 = 0x441eca;\n        (***0x466438)();\n        var_50h = &fcn.00441e68::var_54h;\n        var_54h = *(var_4h + 0x30);\n        sub.USER32.DLL_GetWindowRect();\n        iStack104 = var_34h - var_3ch >> 1;\n        if (iStack104 < 0) {\n            iStack104 = iStack104 + ((var_34h - var_3ch & 1U) != 0);\n        }\n        iStack104 = iStack104 + var_3ch;\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        uStack112 = 0;\n        uStack116 = *(var_4h + 0x30);\n        puStack120 = 0x441f12;\n        sub.USER32.DLL_SetWindowPos();\n    }\n    puStack120 = 0x441f19;\n    var_10h = fcn.00438a80();\n    puStack120 = 0x441f21;\n    var_1ch = fcn.0043899c();\n    puStack120 = 0x441f2c;\n    cVar1 = fcn.00440e4c();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack124 = 0x441fbd;\n    uStack128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    uVar4 = *(var_4h + 0x30);\n    puStack120 = &stack0xfffffffc;\n    var_8h = sub.USER32.DLL_MessageBoxA();\n    *in_FS_OFFSET = uVar4;\n    if (var_14h != var_18h) {\n        iVar2 = var_48h - var_50h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_48h - var_50h & 1U) != 0);\n        }\n        iVar3 = var_4ch - var_54h >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        sub.USER32.DLL_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + var_54h, iVar2 + var_50h, 0, 0, 0x1d, 0x441fc4, arg_8h)\n        ;\n    }\n    fcn.00438b34();\n    sub.USER32.DLL_SetActiveWindow(var_ch);\n    fcn.004389a4();\n    return;\n}\n",
        "token_count": 1102
    },
    "004428c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004428c0(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00442788();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.USER32.DLL_GetCursorPos(auStack12);\n        fcn.00442bc0();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.004428f8();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004437b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004437b8(uint param_1, code *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint extraout_var;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = 0x4437cc;\n    sub.USER32.DLL_GetActiveWindow();\n    puStack40 = 0x4437d6;\n    fcn.00438a80();\n    puStack40 = 0x4437de;\n    fcn.0043899c();\n    uStack44 = 0x44387b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00441b68(*(*in_EAX + 0x34), in_EAX);\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *0x462024 = in_EAX;\n    (*param_2)();\n    *in_FS_OFFSET = extraout_var;\n    fcn.00441bc4(*(*in_EAX + 0x34), in_EAX);\n    return;\n}\n",
        "token_count": 298
    },
    "00443958": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00443958(void)\n\n{\n    uint uVar1;\n    \n    *0x4670cc = sub.USER32.DLL_RegisterWindowMessageA(0x4439bc);\n    *0x4670d0 = sub.USER32.DLL_RegisterWindowMessageA(0x4439cc);\n    uVar1 = 1;\n    sub.KERNEL32.DLL_GetCurrentThreadId();\n    uVar1 = fcn.0041331c(uVar1);\n    *0x462028 = sub.KERNEL32.DLL_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 127
    },
    "00445a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445a0c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x46209c + 0x180) = arg_8h;\n    sub.USER32.DLL_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x46209c + 0x18c));\n    uVar1 = sub.USER32.DLL_GetWindowLongA(arg_8h, 0xfffffff0);\n    if ((uVar1 & 0x40000000) != 0) {\n        iVar2 = sub.USER32.DLL_GetWindowLongA(arg_8h, 0xfffffff4);\n        if (iVar2 == 0) {\n            sub.USER32.DLL_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n        }\n    }\n    sub.USER32.DLL_SetPropA(arg_8h, *0x467112, *0x46209c);\n    sub.USER32.DLL_SetPropA(arg_8h, *0x467110, *0x46209c);\n    iVar2 = *0x46209c;\n    *0x46209c = 0;\n    uVar3 = (**(iVar2 + 0x18c))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 341
    },
    "00445ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445ecc(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00420dc0();\n    *puVar2 = param_2;\n    uVar3 = fcn.00445ea4(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.00445e70();\n    if (cVar1 == '\\0') {\n        fcn.0040732c();\n    }\n    else {\n        fcn.00407504();\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0044605c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044605c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x446126;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00447168();\n        }\n        else if (iVar1 == 0x200) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00402784();\n            in_stack_ffffffd0 = *0x46712c;\n            sub.USER32.DLL_ClientToScreen(*0x46712c, &var_ch);\n            fcn.00446af0();\n        }\n        else if ((iVar1 == 0x202) || (iVar1 == 0x205)) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00447168();\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.00446af0();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack32 = &stack0xfffffffc;\n            fcn.00447168();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack32 = &stack0xfffffffc;\n        fcn.00446af0();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    return;\n}\n",
        "token_count": 459
    },
    "004461f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004461f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x38) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "0044748c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044748c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint uStack24;\n    \n    iVar1 = fcn.00447458();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        fcn.00448724();\n        iVar2 = fcn.0044cb10(arg_8h);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(uStack24, iVar3);\n}\n",
        "token_count": 148
    },
    "0044751c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044751c(void)\n\n{\n    sub.GDI32.DLL_GetWindowOrgEx();\n    sub.GDI32.DLL_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 40
    },
    "0044754c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044754c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x44755c;\n    var_8h = fcn.00407850();\n    uStack28 = 0x4475fc;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x44758e;\n            var_10h = fcn.00407488();\n            puStack36 = 0x447599;\n            cVar1 = fcn.00430e84();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x4475d5;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.00447788();\n                fcn.00422468();\n                fcn.00422468();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x447603;\n    uStack28 = 0x4475fb;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 429
    },
    "00447800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447800(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421bf8();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00447a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447a30(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x447a97;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    cVar1 = fcn.0042794c();\n    if (cVar1 != '\\0') {\n        fcn.00448bd0();\n        fcn.00421dd8(0);\n        fcn.00422b58();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x447a9e;\n    uStack20 = 0x447a96;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 201
    },
    "00447db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447db8(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00421fdc();\n    fcn.00440c50();\n    if ((arg_8h[0x28] == 0) || ((*(arg_8h[0x28] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x68))();\n    }\n    else {\n        fcn.00449d78(arg_8h);\n        (**(*arg_8h + 0x68))();\n        fcn.00448580();\n        fcn.00421e24();\n        arg_8h[0x28] = 0;\n    }\n    fcn.00421c28();\n    arg_8h[0x1b] = 0;\n    fcn.00421c28();\n    fcn.00421c28();\n    fcn.00412e80();\n    fcn.0040f184();\n    if ('\\0' < extraout_DL) {\n        fcn.00421fc4();\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00448580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448580(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 128
    },
    "004485e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004485e4(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 48
    },
    "004485fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004485fc(void)\n\n{\n    fcn.00448628();\n    fcn.00405e40();\n    fcn.00448a5c();\n    return;\n}\n",
        "token_count": 42
    },
    "00448628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448628(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 47
    },
    "00448640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448640(void)\n\n{\n    fcn.004485e4();\n    fcn.00405e40();\n    fcn.00448a5c();\n    return;\n}\n",
        "token_count": 43
    },
    "004486f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004486f8(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 105
    },
    "00448724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448724(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00448a5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448a5c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x84))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 155
    },
    "00449aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00449aa4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0xa0) != 0) {\n        cVar1 = fcn.00421e24(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00449ad8;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00449ad8:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0044a928();\n        if (iVar2 == 0) {\n            fcn.00421e24(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.00448628();\n            arg_8h = auStack28;\n            fcn.004485e4();\n            fcn.00405e68(arg_8h, uVar3);\n            fcn.00421e24();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 355
    },
    "00449c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449c44(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.USER32.DLL_GetCursorPos();\n    fcn.00448724();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 77
    },
    "00449d78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449d78(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 85
    },
    "0044a0b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a0b0(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x44a074;\n    fcn.0044a080(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1);\n    return;\n}\n",
        "token_count": 92
    },
    "0044a1c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a1c4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.00438cf8(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.00421e24();\n        }\n        else {\n            fcn.00449c44();\n            fcn.00438cf8(var_4h, var_8h);\n            fcn.00421e24();\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0044a928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a928(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00421b70();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.00448374();\n            fcn.00448350();\n            fcn.004485fc();\n            fcn.00448640();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "0044ad44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044ad44(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "0044b078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044b078(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar2;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x44b091;\n        in_EAX = fcn.00421f74();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x44b170;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.0044b078::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00447ce0();\n    pcVar2 = fcn.0044c9e0;\n    uVar1 = fcn.004101bc(fcn.0044c9e0, in_EAX);\n    *(in_EAX + 0x18c) = uVar1;\n    uVar1 = fcn.004307b4();\n    *(in_EAX + 0x170) = uVar1;\n    fcn.0043095c();\n    *(in_EAX + 0x1a9) = 1;\n    *(in_EAX + 0x1a0) = 0xffffffff;\n    *(in_EAX + 0x184) = 3;\n    if (*(*0x4663b0 + 4) == 0x11) {\n        fcn.0042275c();\n    }\n    else {\n        fcn.0043fd5c();\n        fcn.004227b0();\n    }\n    *(in_EAX + 0x1a7) = 0;\n    *(in_EAX + 0x162) = *0x44b198;\n    *(in_EAX + 0x163) = 2;\n    *(in_EAX + 0x164) = 1;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x150) = 1;\n    *in_FS_OFFSET = pcVar2;\n    pcStack48 = 0x44b177;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 576
    },
    "0044bc14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044bc14(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00421bf8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.004485e4();\n    iVar2 = fcn.0044c07c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0044c040();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.0044c040();\n                fcn.0040732c();\n                fcn.00448350();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00407488();\n            fcn.00449d78(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 331
    },
    "0044c07c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0044c07c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x198) != 0) {\n        iVar1 = *(*(in_EAX + 0x198) + 8);\n    }\n    if (*(in_EAX + 0x19c) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x19c) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 125
    },
    "0044c0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c0dc(uint param_1, ushort param_2)\n\n{\n    fcn.0044c09c(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 49
    },
    "0044c5ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c5ec(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0044a0b0();\n    uVar2 = 0x44c474;\n    uVar1 = 0x44c4ac;\n    uVar3 = in_EAX;\n    fcn.0044c514(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 154
    },
    "0044c7e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c7e8(uint arg_8h)\n\n{\n    uint var_10h;\n    \n    return;\n}\n",
        "token_count": 32
    },
    "0044cea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044cea4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00445af4();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00449d78(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "0044ebb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ebb4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == *(in_EAX + 0x40)) && (in_ECX == *(in_EAX + 0x44))) && (arg_ch == *(in_EAX + 0x48))) &&\n       (arg_8h == *(in_EAX + 0x4c))) {\n        return;\n    }\n    cVar1 = fcn.0044f48c();\n    if ((cVar1 == '\\0') || (iVar2 = sub.USER32.DLL_IsIconic(*(in_EAX + 0x180)),  iVar2 != 0)) {\n        *(in_EAX + 0x40) = in_EDX;\n        *(in_EAX + 0x44) = in_ECX;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x4c) = arg_8h;\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.USER32.DLL_GetWindowPlacement(*(in_EAX + 0x180), &var_2ch);\n            fcn.00448580();\n            sub.USER32.DLL_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.USER32.DLL_SetWindowPos(*(in_EAX + 0x180), 0);\n    }\n    fcn.00448234();\n    fcn.00421e24();\n    return;\n}\n",
        "token_count": 410
    },
    "0044ec8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ec8c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044c07c(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0044c040();\n            fcn.00421e24();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0044f090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f090(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x44f09f;\n    fcn.00448580();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.USER32.DLL_InflateRect();\n    sub.USER32.DLL_InvalidateRect(*(*(in_EAX + 0x30) + 0x180), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 147
    },
    "0044f498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f498(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x180);\n    puStack80 = 0x44f4ac;\n    iVar1 = sub.USER32.DLL_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x44f4e2;\n        puStack80 = &stack0xffffffb4;\n        sub.USER32.DLL_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x180);\n        uStack88 = 0x44f4c9;\n        sub.USER32.DLL_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x180);\n    uStack96 = 0x44f4f0;\n    uVar2 = sub.USER32.DLL_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x180);\n        puStack104 = 0x44f505;\n        iVar1 = sub.USER32.DLL_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.USER32.DLL_ScreenToClient();\n            sub.USER32.DLL_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.00448234();\n    return;\n}\n",
        "token_count": 640
    },
    "0044f6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f6e8(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0044c07c();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0044c040();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00450338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450338(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x450349;\n    var_4h = in_EAX;\n    uStack16 = fcn.0044f188();\n    puStack20 = 0x45034f;\n    var_8h = sub.USER32.DLL_GetWindowDC();\n    uStack24 = 0x45038e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 200))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x450395;\n    uStack24 = var_8h;\n    uStack28 = 0x450387;\n    uStack28 = fcn.0044f188();\n    sub.USER32.DLL_ReleaseDC();\n    return;\n}\n",
        "token_count": 257
    },
    "0045039c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045039c(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x450435;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.00430190();\n    uVar1 = fcn.0044ae84();\n    fcn.00448bd0(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.00422c0c();\n    uVar2 = fcn.00430fe8(uVar2);\n    sub.USER32.DLL_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.0042275c(0x45043c);\n    return;\n}\n",
        "token_count": 282
    },
    "00450720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450720(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xcc))();\n    return;\n}\n",
        "token_count": 44
    },
    "00450748": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450748(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00405e68(arg_8h, 0);\n    uVar1 = fcn.0044ae84();\n    uVar2 = fcn.00422c0c(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00430fe8(uVar2);\n    sub.USER32.DLL_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 184
    },
    "004507fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004507fc(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.USER32.DLL_ClientToScreen();\n    sub.USER32.DLL_GetWindowRect();\n    *arg_8h = in_EDX - var_18h;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 127
    },
    "0045083c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045083c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x68) != -1) {\n        uStack24 = 1;\n        uStack28 = 1;\n        uStack32 = 1;\n        uStack36 = 0xe;\n        uStack40 = 0x450861;\n        uStack40 = (***0x466430)();\n        uStack44 = 0xd;\n        uStack48 = 0x45086d;\n        uStack48 = (***0x466430)();\n        puStack52 = 0x450873;\n        var_4h = sub.COMCTL32.DLL_ImageList_Create();\n        uStack56 = 0x4508fc;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        fcn.0043fde4();\n        fcn.0040357c();\n        fcn.0043fde4();\n        fcn.0040357c();\n        sub.COMCTL32.DLL_ImageList_SetDragCursorImage(var_4h, 0, 0, 0);\n        sub.COMCTL32.DLL_ImageList_GetDragImage(0, &fcn.0045083c::var_ch);\n        uVar1 = var_4h;\n        sub.COMCTL32.DLL_ImageList_SetDragCursorImage(var_4h, 1, var_ch, var_8h);\n        *in_FS_OFFSET = uVar1;\n        sub.COMCTL32.DLL_ImageList_Destroy(var_4h, 0x450903);\n        return;\n    }\n    return;\n}\n",
        "token_count": 463
    },
    "00450ca8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450ca8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00421f74();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.00421fcc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0045200c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045200c(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t in_EDX;\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = 0;\n    uVar1 = 1;\n    arg_ch = *(*(arg_8h + -8) + 0x18) + in_EDX + -2;\n    arg_8h_00 = &var_10h;\n    fcn.00405e68(arg_8h_00, arg_ch);\n    uVar1 = fcn.00430fe8(&var_10h, arg_8h_00, arg_ch, uVar1, uVar2);\n    sub.USER32.DLL_DrawFrameControl(uVar1);\n    return;\n}\n",
        "token_count": 194
    },
    "00452978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452978(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x452a27;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(**(arg_8h + -4) + 0xc))();\n    (**(**(arg_8h + -4) + 0xc))();\n    (**(**(arg_8h + -4) + 0xc))();\n    arg_8h_00 = arg_8h;\n    fcn.00450f84();\n    fcn.00452900(arg_8h_00);\n    if (*(in_EAX + 8) != 0) {\n        fcn.00452978(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.00452978(arg_8h);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x452a2e;\n    uStack28 = 0x452a26;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 322
    },
    "00452c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c78(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.0044f188(uVar1, uVar2);\n    fcn.004537d8();\n    uVar1 = fcn.0044f188();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.USER32.DLL_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.00452d8c();\n    return;\n}\n",
        "token_count": 237
    },
    "00452f08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00452f08(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.004511f4();\n        iVar1 = fcn.00450d78();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.004511f4();\n    }\n    fcn.00452e78(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 149
    },
    "00452f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452f58(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00448580();\n        fcn.00448580();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 331
    },
    "0045318c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045318c(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00451540();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00405e40();\n            iVar1 = fcn.00451d34();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.00452f58(uVar2);\n            (**(*in_EAX + 8))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.00452fd4(&stack0xfffffffc);\n        }\n        else {\n            fcn.00453054(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x7c))();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00453c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00453c60(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x453dd8;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.KERNEL32.DLL_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0041339c(puVar3);\n    fcn.004227b0();\n    uVar1 = fcn.00422c0c();\n    *0x467110 = sub.KERNEL32.DLL_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.KERNEL32.DLL_GetCurrentThreadId();\n    fcn.0041339c(puVar3);\n    fcn.004227b0();\n    uVar1 = fcn.00422c0c();\n    *0x467112 = sub.KERNEL32.DLL_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.00422c0c();\n    *0x46711c = sub.USER32.DLL_RegisterWindowMessageA(uVar1);\n    *0x467154 = fcn.004076f8();\n    fcn.00453864();\n    *0x467104 = fcn.0045368c();\n    uVar1 = fcn.0043f6c0();\n    **0x4663dc = uVar1;\n    uVar1 = fcn.004407a4();\n    **0x4663ac = uVar1;\n    fcn.004422b0();\n    fcn.00406c44();\n    iVar2 = sub.KERNEL32.DLL_GetModuleHandleA(0x453e14);\n    if (iVar2 != 0) {\n        *0x462098 = sub.KERNEL32.DLL_GetProcAddress(iVar2, 0x453e1c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.0042275c(0x453ddf);\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 627
    },
    "004541f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004541f8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.00454720(arg_8h * arg_ch);\n    if (arg_8h_00 != 0) {\n        fcn.00454d3c(arg_8h_00, 0, arg_8h * arg_ch);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 115
    },
    "00454340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00454340(uint *arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    *arg_8h = 0x462228;\n    *arg_8h = 0x46223c;\n    *in_FS_OFFSET = var_24h;\n    return arg_8h;\n}\n",
        "token_count": 102
    },
    "0045440c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045440c(void)\n\n{\n    uint var_28h;\n    uint var_18h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.00455058();\n    var_18h._0_2_ = 8;\n    var_4h = 0x46223c;\n    var_ch = var_ch + 2;\n    fcn.0045be65(0x4542e8, &var_4h, 0, fcn.00454340, 1, 0, 0, 0, &var_28h);\n    return;\n}\n",
        "token_count": 150
    },
    "0045446c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045446c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    *0x467198 = 0x46223c;\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 78
    },
    "004544ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004544ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    fcn.00454c70(0x467198, 2);\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 73
    },
    "00454740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454740(uint arg_8h, uint arg_ch)\n\n{\n    (**0x462430)(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 40
    },
    "004547d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004547d0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00454758(1);\n    (**0x462430)(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "00454818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454818(uint arg_8h)\n\n{\n    code *var_ch;\n    \n    fcn.00420e50();\n    (*var_ch)();\n    return;\n}\n",
        "token_count": 42
    },
    "00454834": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454834(int32_t arg_8h)\n\n{\n    uint var_ch;\n    code *var_8h;\n    \n    if (arg_8h != 0) {\n        fcn.00420e50();\n        (*var_8h)();\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00454858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454858(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    code *var_10h;\n    code *var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    fcn.00420e50();\n    if (arg_8h == 0) {\n        if (arg_ch == 0) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*var_10h)();\n        }\n    }\n    else if (arg_ch == 0) {\n        (*var_ch)();\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*var_8h)();\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "004548f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004548f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = fcn.00420e88();\n    if (cVar1 == '\\0') {\n        fcn.00420e6c(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00454950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454950(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    sub.KERNEL32.DLL_InitializeCriticalSection(0x4671b4);\n    *0x4671cc = 1;\n    *0x4671d0 = 0x4624b8;\n    *0x4671d4 = 0x4624a4;\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 126
    },
    "00454bd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454bd8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    sub.KERNEL32.DLL_InitializeCriticalSection(0x4671d8);\n    *0x4671f0 = 1;\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 94
    },
    "00454e1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * fcn.00454e1c(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    puVar2 = param_1;\n    if ((param_1 & 3) == 0) {\ncode_r0x00454e24:\n        do {\n            do {\n                uVar1 = *puVar2;\n                puVar2 = puVar2 + 1;\n                uVar3 = uVar1 + 0xfefefeff & 0x80808080;\n            } while (uVar3 == 0);\n            uVar3 = uVar3 & ~uVar1;\n        } while (uVar3 == 0);\n        if (uVar3 == '\\0') {\n            if (uVar3 >> 8 == '\\0') {\n                if ((uVar3 & 0xff0000) == 0) goto code_r0x00454e6e;\n                goto code_r0x00454e6d;\n            }\n        }\n        else {\ncode_r0x00454e6b:\n            puVar2 = puVar2 + -1;\n        }\ncode_r0x00454e6c:\n        puVar2 = puVar2 + -1;\n    }\n    else {\n        puVar2 = param_1 + 1;\n        if (*param_1 == '\\0') goto code_r0x00454e6b;\n        if (*(param_1 + 1) == '\\0') goto code_r0x00454e6c;\n        if (*(param_1 + 2) != '\\0') {\n            puVar2 = param_1 + 3 & 0xfffffffc;\n            goto code_r0x00454e24;\n        }\n    }\ncode_r0x00454e6d:\n    puVar2 = puVar2 + -1;\ncode_r0x00454e6e:\n    return puVar2 + (-1 - param_1);\n}\n",
        "token_count": 440
    },
    "00454f7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454f7c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    \n    iVar1 = fcn.00454e1c(arg_8h);\n    arg_8h_00 = fcn.00454720(iVar1 + 1);\n    if (arg_8h_00 != 0) {\n        fcn.00454ccc(arg_8h_00, arg_8h, iVar1 + 1);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 129
    },
    "00454fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00454fb0(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t arg_10h_00;\n    \n    arg_10h_00 = fcn.00454e1c(arg_ch);\n    if (arg_10h < arg_10h_00) {\n        fcn.00454ccc(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        fcn.00454ccc(arg_8h, arg_ch, arg_10h_00);\n        fcn.00454d3c(arg_10h_00 + arg_8h, 0, arg_10h - arg_10h_00);\n    }\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "00455018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.00455018(ushort *arg_8h, ushort *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    uVar1 = fcn.00455000(arg_ch);\n    uVar2 = 0;\n    puVar3 = arg_8h;\n    if (uVar1 != 0) {\n        do {\n            *puVar3 = *arg_ch;\n            uVar2 = uVar2 + 1;\n            puVar3 = puVar3 + 1;\n            arg_ch = arg_ch + 1;\n        } while (uVar2 < uVar1);\n    }\n    arg_8h[uVar1] = 0;\n    return arg_8h;\n}\n",
        "token_count": 174
    },
    "00455058": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455058(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    ushort in_FS;\n    \n    puVar2 = unaff_EBP + *(in_EAX + 4);\n    puVar2[2] = in_EAX;\n    puVar2[3] = &stack0x00000004;\n    puVar2[1] = 0x45509f;\n    *(puVar2 + 4) = 0;\n    *(puVar2 + 0x12) = 0;\n    puVar2[7] = 0;\n    puVar1 = segment(in_FS, 0);\n    *puVar2 = *puVar1;\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = puVar2;\n    return;\n}\n",
        "token_count": 197
    },
    "0045521f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045521f(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    \n    fcn.00455058();\n    iVar3 = 0;\n    do {\n        puVar1 = *(iVar3 * 4 + 0x4671f8);\n        if (puVar1 != NULL) {\n            while (puVar2 = puVar1,  puVar2 != NULL) {\n                puVar1 = puVar2[3];\n                if (puVar2 != NULL) {\n                    (***puVar2)(puVar2, 3);\n                }\n            }\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x100);\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 193
    },
    "00455ba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455ba8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00455058();\n    if (*0x4628d8 != fcn.00455ba8) {\n        (**0x4628d8)();\n    }\n    fcn.00459fdc();\n    *in_FS_OFFSET = var_24h;\n    return;\n}\n",
        "token_count": 95
    },
    "00456200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456200(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0045602c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 52
    },
    "0045632c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.0045632c(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    int32_t iVar4;\n    \n    fcn.00456a60();\n    iVar3 = 0;\n    puVar2 = 0x462a14;\n    iVar4 = *0x462ec4;\n    while (iVar4 != 0) {\n        if (puVar2[2] < 0) {\n            arg_10h = puVar2[3] + puVar2[2] + 1;\n            puVar2[2] = puVar2[2] - arg_10h;\n            *puVar2 = puVar2[1];\n            iVar1 = fcn.0045602c(*(puVar2 + 0x16), puVar2[1], arg_10h);\n            if ((arg_10h != iVar1) && ((*(puVar2 + 0x13) & 2) == 0)) {\n                *(puVar2 + 0x12) = *(puVar2 + 0x12) | 0x10;\n            }\n            iVar3 = iVar3 + 1;\n        }\n        puVar2 = puVar2 + 6;\n        iVar4 = iVar4 + -1;\n    }\n    fcn.00456a70();\n    return iVar3;\n}\n",
        "token_count": 315
    },
    "004567a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004567a0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045b020();\n    return iVar1 + 0x10;\n}\n",
        "token_count": 45
    },
    "00457610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457610(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x104);\n    return;\n}\n",
        "token_count": 38
    },
    "0045763c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045763c(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x100);\n    return;\n}\n",
        "token_count": 39
    },
    "00457654": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457654(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x20);\n    return;\n}\n",
        "token_count": 38
    },
    "00457668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457668(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 4);\n    return;\n}\n",
        "token_count": 36
    },
    "0045767c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045767c(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x194);\n    return;\n}\n",
        "token_count": 39
    },
    "004576a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004576a8(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x1d4);\n    return;\n}\n",
        "token_count": 41
    },
    "004576d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004576d4(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 8);\n    return;\n}\n",
        "token_count": 37
    },
    "004576e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004576e8(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 1);\n    return;\n}\n",
        "token_count": 37
    },
    "004576fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004576fc(uint arg_8h)\n\n{\n    fcn.00457818(arg_8h, 0x80);\n    return;\n}\n",
        "token_count": 38
    },
    "00457714": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457714(uint32_t arg_8h)\n\n{\n    fcn.0045785c(arg_8h & 0xffff, 0x104);\n    return;\n}\n",
        "token_count": 45
    },
    "00457740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457740(uint32_t arg_8h)\n\n{\n    fcn.0045785c(arg_8h & 0xffff, 0x100);\n    return;\n}\n",
        "token_count": 45
    },
    "00457780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457780(uint32_t arg_8h)\n\n{\n    fcn.0045785c(arg_8h & 0xffff, 0x194);\n    return;\n}\n",
        "token_count": 45
    },
    "004577ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004577ac(uint32_t arg_8h)\n\n{\n    fcn.0045785c(arg_8h & 0xffff, 0x1d4);\n    return;\n}\n",
        "token_count": 47
    },
    "00458198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458198(void)\n\n{\n    fcn.00458120(*0x463c78, 0x1fff);\n    return;\n}\n",
        "token_count": 35
    },
    "00458458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458458(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004583e4(arg_8h, arg_ch, 10, 0, 0x61);\n    return;\n}\n",
        "token_count": 52
    },
    "00458510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00458510(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *arg_8h * 10;\n    uVar3 = (*arg_8h * 10 >> 0x20) + CARRY4(uVar1, arg_ch);\n    *arg_8h = uVar1 + arg_ch;\n    uVar1 = arg_8h[1];\n    uVar2 = uVar1 * 10;\n    arg_8h[1] = uVar2 + uVar3;\n    return (uVar1 * 10 >> 0x20) + CARRY4(uVar2, uVar3);\n}\n",
        "token_count": 180
    },
    "00458fbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458fbc(float *arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t in_EDX;\n    float10 fVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_10h & 4) == 0) {\n        if ((arg_10h & 8) == 0) {\n            var_4h = *0x463d44 >> 0x20;\n            var_8h = SUB84(*0x463d44, 0);\n            fVar1 = fcn.004582cc(0, *arg_8h, arg_8h[1], *(arg_8h + 2), var_8h, var_4h);\n            *arg_ch = fVar1;\n        }\n        else {\n            *arg_ch = *arg_8h;\n            *(arg_ch + 4) = arg_8h[1];\n            *(arg_ch + 1) = *(arg_8h + 2);\n        }\n    }\n    else {\n        fVar1 = fcn.004582cc(1, *arg_8h, arg_8h[1], in_EDX & 0xffff0000 | *(arg_8h + 2), *0x463c80, *0x463c84);\n        *arg_ch = fVar1;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0045949c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045949c(float *arg_8h, double *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t in_EDX;\n    float10 fVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_10h & 4) == 0) {\n        if ((arg_10h & 8) == 0) {\n            var_4h = *0x463d6c >> 0x20;\n            var_8h = SUB84(*0x463d6c, 0);\n            fVar1 = fcn.004582cc(0, *arg_8h, arg_8h[1], *(arg_8h + 2), var_8h, var_4h);\n            *arg_ch = fVar1;\n        }\n        else {\n            *arg_ch = *arg_8h;\n            *(arg_ch + 4) = arg_8h[1];\n            *(arg_ch + 1) = *(arg_8h + 2);\n        }\n    }\n    else {\n        fVar1 = fcn.004582cc(1, *arg_8h, arg_8h[1], in_EDX & 0xffff0000 | *(arg_8h + 2), *0x463c80, *0x463c84);\n        *arg_ch = fVar1;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "00459cac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459cac(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    *arg_8h = 0;\n    var_4h = &arg_10h;\n    while( true ) {\n        arg_ch_00 = *var_4h;\n        if (arg_ch_00 == 0) {\n            return;\n        }\n        iVar1 = fcn.00454e1c(arg_8h);\n        iVar1 = (arg_ch - iVar1) + -1;\n        if (iVar1 < 1) break;\n        fcn.00454e78(arg_8h, arg_ch_00, iVar1);\n        var_4h = var_4h + 1;\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "00459cf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459cf4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    fcn.00459cac(0x4678b4, 0xf6, \"Assertion failed: \");\n    iVar1 = fcn.00454e1c(0x4678b4);\n    fcn.00458458(arg_10h, iVar1 + 0x4678b4);\n    fcn.00459e84(0x4678b4);\n    fcn.00459fdc();\n    return;\n}\n",
        "token_count": 132
    },
    "00459d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00459d54(void)\n\n{\n    uchar *puVar1;\n    uchar auStack16 [2];\n    ushort uStack14;\n    ushort uStack12;\n    ushort uStack10;\n    ushort uStack8;\n    ushort uStack6;\n    \n    puVar1 = auStack16;\n    sub.KERNEL32.DLL_GetLocalTime(auStack16);\n    sub.USER32.DLL_wsprintfA\n              (0x4679b4, \"%02d/%02d/%04d %02d:%02d:%02d.%03d \", puVar1 >> 0x10, uStack14, puVar1 & 0xffff, uStack12, \n               uStack10, uStack8, uStack6);\n    return 0x4679b4;\n}\n",
        "token_count": 173
    },
    "00459e0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00459e0c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.KERNEL32.DLL_GetLastError();\n    iVar2 = fcn.0045b020();\n    sub.KERNEL32.DLL_SetLastError(uVar1);\n    return iVar2 + 0xc;\n}\n",
        "token_count": 78
    },
    "0045a05c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a05c(uint arg_8h)\n\n{\n    fcn.00459ff0(0, 0, arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "0045a074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a074(uint arg_8h)\n\n{\n    fcn.00459ff0(1, 0, arg_8h);\n    return;\n}\n",
        "token_count": 41
    },
    "0045a0c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a0c8(uint arg_8h, code *arg_ch)\n\n{\n    (*arg_ch)(arg_8h, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0045a0dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a0dc(uint arg_8h, code *arg_ch)\n\n{\n    (*arg_ch)(arg_8h, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0045b1e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b1e8(int32_t *arg_8h, uint arg_ch)\n\n{\n    sub.KERNEL32.DLL_EnterCriticalSection(0x467a40);\n    if (0x1ff < *0x46aa40) {\n        fcn.0045b26c(arg_ch);\n    }\n    sub.KERNEL32.DLL_InitializeCriticalSection(*0x46aa40 * 0x18 + 0x467a40);\n    *arg_8h = *0x46aa40 * 0x18 + 0x467a40;\n    *0x46aa40 = *0x46aa40 + 1;\n    sub.KERNEL32.DLL_LeaveCriticalSection(0x467a40);\n    return;\n}\n",
        "token_count": 167
    },
    "0045b26c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b26c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_50h;\n    \n    puVar2 = \"Semaphore error \";\n    puVar3 = &var_50h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *puVar2;\n    fcn.00454de0(&var_50h, arg_8h);\n    fcn.00459fb0(&var_50h);\n    return;\n}\n",
        "token_count": 178
    },
    "0045b2f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b2f2(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *arg_8h;\n    if (iVar1 < -0x3fffff6d) {\n        if (iVar1 == -0x3fffff6e) {\n            return 6;\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return 7;\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            if (iVar1 == -0x3fffff73) {\n                return 9;\n            }\n        }\n        else {\n            if (iVar1 + 0x3fffff71U < 2) {\n                return 6;\n            }\n            if (iVar1 + 0x3fffff71U == 2) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return 0xc;\n        }\n        if (iVar1 == -0x3fffff6d) {\n            return 9;\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        if (iVar1 == -0x3fffff6b) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        if (iVar1 == -0x3ffffec6) {\n            return 0xd;\n        }\n    }\n    return 0x15;\n}\n",
        "token_count": 414
    },
    "0045bb16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bb16(uint arg_8h, code *arg_ch, uint32_t arg_10h)\n\n{\n    if ((arg_10h & 0x80) != 0) {\n        fcn.00459cf4(\"(mfnMask & 0x0080) == 0\", 0x464ca6, 0x2fb);\n    }\n    arg_10h = arg_10h & 7;\n    if (arg_10h == 1) {\n        (*arg_ch)(arg_8h);\n        return;\n    }\n    if (arg_10h == 2) {\n        (*arg_ch)(arg_8h);\n        return;\n    }\n    if (arg_10h == 3) {\n        (*arg_ch)();\n        return;\n    }\n    if (arg_10h == 5) {\n        (*arg_ch)(arg_8h);\n        return;\n    }\n    fcn.00459cf4(\"!\\\"what?\\\"\", 0x464cbc, 0x322);\n    return;\n}\n",
        "token_count": 232
    },
    "0045be65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0045be65(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9)\n\n{\n    uint in_EAX;\n    uint unaff_retaddr;\n    \n    fcn.0045bb94(param_1, param_2, param_3, param_4, param_5, param_6, param_7, param_8, unaff_retaddr, 0, param_9, \n                 &stack0xffffffe4, in_EAX);\n    return;\n}\n",
        "token_count": 140
    },
    "0045bf31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bf31(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_40h;\n    \n    if (arg_ch == NULL) {\n        var_50h = 0x26;\n        var_4ch = 2;\n        arg_ch = &var_50h;\n        var_40h = 0;\n    }\n    arg_ch[1] = arg_ch[1] | 2;\n    fcn.00455f42();\n    arg_ch[1] = arg_ch[1] ^ 2;\n    return;\n}\n",
        "token_count": 140
    },
    "0045bf76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bf76(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    ushort in_FS;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.00455058();\n    if (arg_10h == 0) {\n        fcn.00459cf4(\"dtorAddr\", 0x464d30, 0x5b8);\n    }\n    fcn.0045ba46(arg_8h, arg_ch, 0, arg_10h, arg_14h, 1);\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_24h;\n    return;\n}\n",
        "token_count": 171
    },
    "0045c1b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c1b9(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    ushort uVar5;\n    \n    iVar1 = *(arg_8h + 4);\n    if ((iVar1 != 0) && ((*(iVar1 + 4) & 0x30) == 0)) {\n        fcn.00459cf4(\"!tpid || tpid->tpMask & (TM_IS_PTR | TM_IS_REF)\", 0x464db9, 0x6b1);\n    }\n    puVar2 = fcn.0045b77d(0x56);\n    iVar3 = fcn.0040143c();\n    *puVar2 = *(iVar3 + 0x10);\n    iVar3 = fcn.0040143c();\n    *(iVar3 + 0x10) = puVar2;\n    if (*(arg_10h + 0x10) == 8) {\n        iVar3 = *(arg_10h + 0x30);\n        puVar2[5] = iVar3;\n        if (iVar3 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(iVar3 + 0xc);\n        }\n        *(puVar2 + 0x1a) = uVar5;\n    }\n    else {\n        if (iVar1 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *(iVar1 + 8);\n        }\n        puVar2[5] = uVar4;\n        if (iVar1 == 0) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(*(iVar1 + 8) + 0xc);\n        }\n        *(puVar2 + 0x1a) = uVar5;\n        iVar3 = iVar1;\n    }\n    puVar2[1] = iVar3;\n    puVar2[3] = 4;\n    puVar2[4] = 4;\n    if (iVar3 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = *(iVar3 + 4);\n    }\n    *(puVar2 + 6) = uVar5;\n    puVar2[2] = 0;\n    puVar2[10] = arg_ch;\n    puVar2[0xb] = arg_8h;\n    puVar2[7] = fcn.0045b7c7;\n    puVar2[0xd] = 0;\n    puVar2[0xe] = 0;\n    puVar2[8] = 0;\n    puVar2[9] = 0;\n    *(puVar2 + 0x45) = 0;\n    *(puVar2 + 0x11) = 1;\n    puVar2[0xf] = iVar1;\n    puVar2[0xc] = arg_1ch;\n    *(puVar2 + 0x52) = *(arg_10h + 0x18);\n    if ((iVar1 != 0) && ((*(arg_8h + 8) & 0x80) == 0)) {\n        *(puVar2 + 0x45) = 1;\n        puVar2[0x10] = *arg_14h + arg_18h;\n        *puVar2[0x10] = *(puVar2 + 0x52);\n    }\n    return;\n}\n",
        "token_count": 827
    },
    "0045c5bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c5bd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    uint *unaff_ESI;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar6 = *(arg_8h + 0x10);\n    while ((uVar4 = uVar6,  uVar4 != 0 && (uVar4 != *(puVar5 + 0xc)))) {\n        uVar6 = *(*(puVar5 + -4) + uVar4);\n        uVar3 = *(*(puVar5 + -4) + uVar4 + 2);\n        *(*(puVar5 + 8) + 0x10) = *(*(puVar5 + -4) + uVar4);\n        if (uVar3 == 0) {\n            *0x46aa4c = *(*(puVar5 + -4) + 4 + uVar4 + 4);\n            *(*(puVar5 + 8) + 0x12) = 1;\n            fcn.00455f57(uVar6, unaff_ESI, puVar5, uVar4);\n            *(*(puVar5 + 8) + 0x12) = 0;\n        }\n        else if (2 < uVar3 - 1) {\n            if (uVar3 == 4) {\n                iVar1 = fcn.0040143c();\n                *(puVar5 + -0x10) = iVar1 + 0x10;\n                while ((unaff_ESI = **(puVar5 + -0x10),  unaff_ESI != NULL &&\n                       ((unaff_ESI[10] != *(puVar5 + 8) || (uVar4 != unaff_ESI[0xc]))))) {\n                    *(puVar5 + -0x10) = unaff_ESI;\n                }\n                if ((unaff_ESI == NULL) || (unaff_ESI != **(puVar5 + -0x10))) {\n                    fcn.00459cf4(\"xdrPtr && xdrPtr == *xdrLPP\", 0x464f05, 0x8b9);\n                }\n                **(puVar5 + -0x10) = *unaff_ESI;\n                fcn.0045bfeb(unaff_ESI);\n                (*unaff_ESI[7])(unaff_ESI);\n            }\n            else if (uVar3 - 1 == 4) {\n                uVar2 = fcn.0045d379(*(*(puVar5 + -4) + uVar4 + 8), *(*(puVar5 + -4) + uVar4 + 4) + *(puVar5 + -0xc), \n                                     *(puVar5 + 8), *(puVar5 + -8));\n                *(puVar5 + -0xc) = uVar2;\n            }\n            else {\n                fcn.00459cf4(\"!\\\"bogus context in Local_unwind()\\\"\", 0x464f4f, 0x8e8);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "0045c728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c728(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0045c5bd(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 43
    },
    "0045c73b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c73b(uint *arg_8h)\n\n{\n    uint *puVar1;\n    ushort in_FS;\n    \n    fcn.0045c5bd(arg_8h, 0);\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = *arg_8h;\n    return;\n}\n",
        "token_count": 78
    },
    "0045de0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045de0c(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045deb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045deb8(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045df64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045df64(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045e010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045e010(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045e0bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045e0bc(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 240
    },
    "0045e168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045e168(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.0045e214();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045e214": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045e214(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ('\\0' < param_2) {\n        in_EAX = fcn.0045f150();\n        param_2 = extraout_DL;\n    }\n    fcn.00455058();\n    fcn.0045efac();\n    fcn.0045efac();\n    fcn.00414b70();\n    fcn.0045efe8();\n    fcn.0045efe8();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_30h;\n    if (param_2 != '\\0') {\n        in_EAX = fcn.0045f15d();\n    }\n    return in_EAX;\n}\n",
        "token_count": 239
    },
    "0045eacc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045eacc(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ee68();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045eb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045eb20(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ee68();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045eb74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045eb74(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045ee68();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ebc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ebc8(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045eebc();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0045ec1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ec1c(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045eebc();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0045ec70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ec70(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045eebc();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ecc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ecc4(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.0045eebc();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ef10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ef10(void)\n\n{\n    uint *puVar1;\n    char extraout_DL;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0045f165();\n    fcn.00455058();\n    if (-1 < extraout_DL) {\n        fcn.004017f4();\n    }\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    if ('\\0' < extraout_DL) {\n        fcn.0045f158();\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "0045ef74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0045ef74(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00455058();\n    *in_EAX = 0;\n    fcn.0042294c();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    return in_EAX;\n}\n",
        "token_count": 110
    },
    "0045efac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0045efac(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ushort in_FS;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00455058();\n    *in_EAX = 0;\n    fcn.004227b0();\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = var_28h;\n    return in_EAX;\n}\n",
        "token_count": 110
    },
    "0045f094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f094(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00455058();\n    fcn.0045ef74();\n    fcn.0045f018();\n    fcn.0045efe8();\n    fcn.0045ef74();\n    fcn.0045f018();\n    fcn.0045efe8();\n    fcn.0045ef74();\n    fcn.0045f018();\n    fcn.0045efe8();\n    *in_FS_OFFSET = var_30h;\n    return;\n}\n",
        "token_count": 164
    },
    "0045f268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0045f268(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[4] = 0;\n    iVar1 = fcn.00454e1c(arg_ch);\n    iVar1 = iVar1 + arg_ch;\n    fcn.0045f328(arg_8h, (iVar1 - arg_ch) + 1);\n    iVar2 = *arg_8h;\n    if (arg_ch != iVar1) {\n        iVar2 = fcn.00454cf0(iVar2, arg_ch, iVar1 - arg_ch);\n        iVar2 = iVar2 + (iVar1 - arg_ch);\n    }\n    arg_8h[1] = iVar2;\n    *arg_8h[1] = 0;\n    *in_FS_OFFSET = var_24h;\n    return arg_8h;\n}\n",
        "token_count": 268
    },
    "0045f6d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f6d8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0045f6fc(*0x465f0c, arg_ch);\n    fcn.0045f734();\n    return;\n}\n",
        "token_count": 63
    },
    "0045f6fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f6fc(uint arg_8h, uint arg_ch)\n\n{\n    uint var_1000h;\n    \n    fcn.0045688c(&var_1000h, 0x1000, arg_8h, &arg_ch);\n    sub.KERNEL32.DLL_OutputDebugStringA(&var_1000h);\n    return;\n}\n",
        "token_count": 84
    },
    "0045f934": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0045f934(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_8h;\n    \n    fcn.00455058();\n    *arg_8h = 0x462228;\n    iVar1 = 0x40;\n    puVar2 = arg_8h;\n    while( true ) {\n        puVar2 = puVar2 + 1;\n        arg_ch = arg_ch + 1;\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        *puVar2 = *arg_ch;\n    }\n    *arg_8h = 0x4660ec;\n    *arg_8h = 0x466114;\n    *arg_8h = 0x466100;\n    *in_FS_OFFSET = var_24h;\n    return arg_8h;\n}\n",
        "token_count": 221
    },
    "0045f9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0045f9a0(uint *arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *in_FS_OFFSET;\n    uint arg_10h;\n    uint var_24h;\n    uint var_14h;\n    uint var_8h;\n    \n    fcn.00455058();\n    *arg_8h = 0x462228;\n    *arg_8h = 0x4660ec;\n    arg_10h = 0x100;\n    arg_ch_00 = fcn.0045f994(arg_ch);\n    fcn.00454fb0(arg_8h + 1, arg_ch_00, arg_10h);\n    *(arg_8h + 0x103) = 0;\n    *in_FS_OFFSET = var_24h;\n    return arg_8h;\n}\n",
        "token_count": 192
    },
    "0045fa30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fa30(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    \n    fcn.00455058();\n    *in_FS_OFFSET = var_24h;\n    return arg_8h + 4;\n}\n",
        "token_count": 67
    },
    "00403ce0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00403ce0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00411418();\n            (**(**(iVar1 + 4) + 0x2c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(in_EAX + 0x10) + 8))();\n    (**(**(in_EAX + 0x14) + 8))();\n    (**(**(in_EAX + 0x18) + 8))();\n    return;\n}\n",
        "token_count": 178
    },
    "00408398": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408398(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        fcn.00407414();\n    }\n    fcn.0040732c();\n    *(param_2 + 4) = in_EAX;\n    *(param_2 + 8) = in_EAX[4];\n    in_EAX[4] = in_EAX[4] + 1;\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x14))();\n    fcn.004080e4();\n    fcn.00407d94();\n    return;\n}\n",
        "token_count": 178
    },
    "00409580": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409580(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[5] == in_EAX[6]) {\n        fcn.004094ac();\n    }\n    if (in_EDX < in_EAX[5]) {\n        fcn.00421024();\n    }\n    puVar1 = in_EAX[4] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.004227b0();\n    in_EAX[5] = in_EAX[5] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 191
    },
    "0041008c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041008c(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4100f0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = fcn.00409828();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 286
    },
    "00416050": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00416050(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "0041f414": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid fcn.0041f414(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x41f60e;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    bVar1 = *0x466798 == 0;\n    *0x466798 = *0x466798 + -1;\n    if (bVar1) {\n        fcn.0041e1f4();\n        *0x466788 = fcn.00417858;\n        *0x46678c = fcn.0041741c;\n        *0x466790 = fcn.0041732c;\n        *0x466794 = fcn.0041741c;\n        *0x46679c = fcn.00417b3c;\n        *0x4667a0 = fcn.00417f80;\n        *0x4667a4 = fcn.00418048;\n        *0x4667a8 = fcn.004189f0;\n        *0x4667ac = fcn.00418c44;\n        *0x4667b0 = fcn.00418e24;\n        *0x4667b4 = fcn.004193f0;\n        *0x4667b8 = fcn.00419970;\n        *0x4667bc = fcn.00419e28;\n        *0x4667c0 = fcn.0041a854;\n        *0x4667c4 = fcn.0041b288;\n        *0x4667c8 = fcn.0041ad8c;\n        *0x4667cc = fcn.0041b3d0;\n        *0x4667d0 = 0x41b97c;\n        *0x4667d4 = 0x41ba24;\n        *0x4667d8 = 0x41bab0;\n        *0x4667dc = fcn.0041bac0;\n        *0x4667e0 = fcn.0041bbb0;\n        *0x4667e4 = fcn.0041bbf0;\n        *0x4667e8 = 0x41bc2c;\n        *0x4667ec = 0x41bc40;\n        *0x4667f0 = 0x41bc54;\n        *0x4667f4 = fcn.0041bca8;\n        *0x4667f8 = fcn.0041bc68;\n        *0x4667fc = fcn.0041bcf8;\n        *0x466800 = fcn.0041bd44;\n        *0x466804 = fcn.0041bd84;\n        *0x466808 = 0x41bdc4;\n        *0x46680c = fcn.0041be28;\n        *0x466810 = fcn.0041bdd8;\n        *0x466814 = fcn.0041bee4;\n        *0x466818 = 0x41bb7c;\n        *0x46681c = fcn.0041cd10;\n        *0x466820 = 0x41d66c;\n        *0x466824 = fcn.0041d7a8;\n        *0x466828 = fcn.0041db34;\n        *0x46682c = fcn.00417b64;\n        *0x466830 = 0x41dda0;\n        *0x466834 = 0x41e35c;\n        *0x466838 = fcn.0041e4d8;\n        *0x46683c = fcn.0041e5c8;\n        *0x466840 = fcn.0041e204;\n        *0x466844 = 0x41e268;\n        fcn.0042359c();\n        fcn.004235b0();\n        *0x4668f8 = fcn.00415f60();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 947
    },
    "004225b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004225b0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x461a58;\n    *0x461a58 = 0;\n    puVar3 = *0x466f38;\n    puVar4 = 0x466f38;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 171
    },
    "00445fc0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445fc0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 4) = *(param_2 + 4);\n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x20) = *(param_2 + 0x20);\n    *(in_EAX + 0x24) = *(param_2 + 0x24);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    return;\n}\n",
        "token_count": 249
    },
    "0044c430": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c430(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = sub.USER32.DLL_CreateWindowExA\n                      (param_2[2], param_2 + 0x13, *param_2, param_2[1], param_2[3], param_2[4], param_2[5], param_2[6]\n                       , param_2[7], 0, param_2[0xd], param_2[8]);\n    *(in_EAX + 0x180) = uVar1;\n    return;\n}\n",
        "token_count": 149
    },
    "004519fc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004519fc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.00450edc();\n    fcn.0045126c();\n    return;\n}\n",
        "token_count": 431
    },
    "00401c18": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c18(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = fcn.00455000(arg_8h);\n            *(arg_ch + uVar2) = *(arg_ch + uVar2) ^ *(arg_8h + (uVar2 % uVar1) * 2);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0042f474": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0042f474(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00430b70": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00430b70(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00421fdc();\n    fcn.00407864();\n    fcn.00431068();\n    fcn.00421c28();\n    fcn.00421c28();\n    fcn.00421c28();\n    sub.KERNEL32.DLL_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00407a74();\n    if ('\\0' < extraout_DL) {\n        fcn.00421fc4();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00430d00": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430d00(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.004310bc();\n    uVar1 = fcn.00430990();\n    sub.USER32.DLL_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 110
    },
    "00430dc8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430dc8(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.004310bc();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00446420": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00446420(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 107
    },
    "0045883c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045883c(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    \n    piVar2 = fcn.004575bc(0xe);\n    if ((arg_8h == 0x47) || (uVar1 = arg_10h,  arg_8h == 0x67)) {\n        do {\n            uVar1 = arg_10h;\n            if (*(arg_10h - 2) != 0x30) goto code_r0x00458873;\n            arg_10h = arg_10h - 2;\n        } while (arg_ch < arg_10h);\n    }\n    else {\ncode_r0x00458873:\n        arg_ch = uVar1;\n        if (*piVar2 == *(arg_ch - 2)) {\n            arg_ch = arg_ch - 2;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 224
    },
    "00425d98": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00425d98(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x425e2b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.COMCTL32.DLL_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x461afc) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.00425bc0();\n    if (cVar1 == '\\0') {\n        fcn.00424964();\n        fcn.00414b70();\n        fcn.004223bc();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.00425fc0();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0042275c(0x425e32);\n    return;\n}\n",
        "token_count": 339
    },
    "00443720": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00443720(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44374a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 125
    },
    "00427e34": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427e34(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00422b58(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00421dd8();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004227b0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "0044ac98": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ac98(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x44ad34;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        fcn.00407b84();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.00427cfc();\n        fcn.00427e34();\n        fcn.00448bd0();\n        fcn.00427b94();\n        fcn.00427f54();\n        (**(*param_2 + 0x34))(in_EAX[0x48], in_EAX[0x49]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44ad3b;\n    uStack28 = 0x44ad33;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 294
    },
    "0044daf4": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044daf4(uint param_1, int32_t *param_2)\n\n{\n    (**(*param_2 + 0x68))();\n    return;\n}\n",
        "token_count": 42
    },
    "00418018": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418018(int32_t *param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0041f1f4();\n    if (cVar1 == '\\0') {\n        fcn.0041741c();\n    }\n    else {\n        (**(*param_1 + 0x28))(1);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004188d8": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004188d8(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            sub.OLEAUT32.DLL_SafeArrayPtrOfIndex();\n            fcn.0041779c();\n        }\n        else {\n            fcn.00417380();\n        }\n    }\n    else {\n        fcn.004189f0();\n        sub.OLEAUT32.DLL_SafeArrayPtrOfIndex();\n        fcn.0041779c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041c4d4": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041c4d4(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint16_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = in_EAX & 0xffff0fff;\n    uVar1 = uVar2;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar2 = CONCAT22(uVar2 >> 0x10, 8);\n        }\n        else if (uVar1 == 0x101) {\n            fcn.0041c448();\n        }\n        else {\n            fcn.0041741c();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 165
    },
    "0041cd10": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd10(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX < 0x10f) && (*param_2 < 0x10f)) {\n        fcn.0041c8dc();\n    }\n    else if (*in_EAX == 0x400c) {\n        fcn.00418048();\n        fcn.0041cd10();\n    }\n    else if (*param_2 == 0x400c) {\n        fcn.0041cd10();\n    }\n    else if (((*in_EAX & 0xfff) < 0x10f) && ((*param_2 & 0xfff) < 0x10f)) {\n        fcn.0041c8dc();\n    }\n    else {\n        fcn.0041c0fc();\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041cecc": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nuint32_t fcn.0041cecc(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xffff0fff;\n    if (0x14 < uVar1) {\n        if (uVar1 == 0x100) {\n            uVar1 = CONCAT22(uVar1 >> 0x10, 8);\n        }\n        else {\n            fcn.0041741c();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "0041d5ec": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d5ec(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX != 0x101) && (*param_2 != 0x101)) {\n        if ((*in_EAX < 0x10f) && (*param_2 < 0x10f)) {\n            fcn.0041d034();\n        }\n        else if (*in_EAX == 0x400c) {\n            fcn.0041d5ec();\n        }\n        else if (*param_2 == 0x400c) {\n            fcn.0041d5ec();\n        }\n        else if (((*in_EAX & 0xfff) < 0x10f) && ((*param_2 & 0xfff) < 0x10f)) {\n            fcn.0041d034();\n        }\n        else {\n            fcn.0041d1cc();\n        }\n        return;\n    }\n    fcn.0041cda0();\n    return;\n}\n",
        "token_count": 234
    },
    "00416040": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00416040(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.KERNEL32.DLL_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 56
    },
    "0041265c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041265c(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    pcVar3 = param_2;\n    if (param_2 != NULL) {\n        pcVar3 = *(param_2 + -4);\n    }\n    pcVar2 = pcVar1;\n    if (pcVar3 < pcVar1) {\n        pcVar2 = pcVar3;\n    }\n    bVar6 = true;\n    do {\n        pcVar4 = in_EAX;\n        pcVar5 = param_2;\n        if (pcVar2 == NULL) break;\n        pcVar2 = pcVar2 + -1;\n        pcVar5 = param_2 + 1;\n        pcVar4 = in_EAX + 1;\n        bVar6 = *in_EAX == *param_2;\n        in_EAX = pcVar4;\n        param_2 = pcVar5;\n    } while (bVar6);\n    if (!bVar6) {\n        pcVar1 = pcVar4[-1];\n        pcVar3 = pcVar5[-1];\n    }\n    return pcVar1 - pcVar3;\n}\n",
        "token_count": 333
    },
    "004126ac": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004126ac(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *in_EAX;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint8_t uVar8;\n    bool bVar9;\n    \n    pcVar3 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar3 = *(in_EAX + -4);\n    }\n    pcVar5 = param_2;\n    if (param_2 != NULL) {\n        pcVar5 = *(param_2 + -4);\n    }\n    pcVar4 = pcVar3;\n    if (pcVar5 < pcVar3) {\n        pcVar4 = pcVar5;\n    }\n    bVar9 = true;\ncode_r0x004126cb:\n    do {\n        if (pcVar4 != NULL) {\n            pcVar4 = pcVar4 + -1;\n            pcVar2 = param_2 + 1;\n            pcVar1 = in_EAX + 1;\n            bVar9 = *in_EAX == *param_2;\n            in_EAX = pcVar1;\n            param_2 = pcVar2;\n            if (bVar9) goto code_r0x004126cb;\n        }\n        if (bVar9) goto code_r0x004126f9;\n        uVar6 = in_EAX[-1];\n        if ((0x60 < uVar6) && (uVar6 < 0x7b)) {\n            uVar6 = uVar6 - 0x20;\n        }\n        uVar7 = CONCAT11(param_2[-1], uVar6);\n        uVar8 = uVar7 >> 8;\n        if ((0x60 < uVar8) && (uVar8 < 0x7b)) {\n            uVar7 = CONCAT11(uVar8 - 0x20, uVar6);\n        }\n        uVar6 = uVar7 >> 8;\n        bVar9 = uVar7 == uVar6;\n        if (!bVar9) {\n            pcVar3 = uVar7;\n            pcVar5 = uVar6;\ncode_r0x004126f9:\n            return pcVar3 - pcVar5;\n        }\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00431184": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00431184(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.004306a4();\n    sub.GDI32.DLL_SelectObject(*(in_EAX + 4), uVar1);\n    sub.GDI32.DLL_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x461e84));\n    return;\n}\n",
        "token_count": 110
    },
    "0044e428": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0044e428(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    sub.USER32.DLL_RemovePropA(in_EAX[0x60], *0x467112);\n    sub.USER32.DLL_RemovePropA(in_EAX[0x60], *0x467110);\n    return;\n}\n",
        "token_count": 85
    },
    "00412a4c": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00412a4c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00422c0c(0xc0000000, 0, 0, 2, 0x80, 0);\n    sub.KERNEL32.DLL_CreateFileA(uVar1);\n    return;\n}\n",
        "token_count": 75
    },
    "00459da4": {
        "rules": [
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459da4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    iVar1 = sub.KERNEL32.DLL_CreateFileA(arg_8h, 0xc0000000, 0, 0, 2, 0x80, 0);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00459d54();\n        uVar3 = fcn.00454e1c(uVar2, &var_4h, 0);\n        sub.KERNEL32.DLL_WriteFile(iVar1, uVar2, uVar3);\n        uVar2 = fcn.00454e1c(arg_ch, &var_4h, 0);\n        sub.KERNEL32.DLL_WriteFile(iVar1, arg_ch, uVar2);\n        sub.KERNEL32.DLL_CloseHandle(iVar1);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "004428f8": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004428f8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.0044f48c();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.0044f188();\n            iVar3 = sub.USER32.DLL_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                uVar2 = fcn.0044f188(0);\n                sub.USER32.DLL_ShowWindow(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00424a10": {
        "rules": [
            "accept command line arguments"
        ],
        "decompiled_code": "\nvoid fcn.00424a10(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    \n    bVar2 = *0x466ec0 == 0;\n    *0x466ec0 = *0x466ec0 + -1;\n    if (bVar2) {\n        *0x461a60 = 2;\n        *0x466910 = sub.KERNEL32.DLL_RaiseException;\n        *0x466914 = sub.KERNEL32.DLL_RtlUnwind;\n        *0x46694e = 2;\n        *0x4668fc = 0x42369c;\n        cVar1 = fcn.00421a68();\n        if (cVar1 != '\\0') {\n            fcn.00421a98();\n        }\n        fcn.00421b5c();\n        *0x466954 = 0xd7b0;\n        *0x466b20 = 0xd7b0;\n        *0x466cec = 0xd7b0;\n        fcn.0042357c();\n        *0x466940 = sub.KERNEL32.DLL_GetCommandLineA();\n        *0x46693c = fcn.0041fa5c();\n        *0x466934 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00403d28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403d28(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00411418();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00406114": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406114(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.00407488();\n            cVar1 = fcn.00421b8c();\n            if (cVar1 != '\\0') goto code_r0x0040616b;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = (**(**(in_EAX + 8) + 0x54))();\n    if (iVar3 < 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x0040616b:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 239
    },
    "00406174": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.00406174(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 0xc);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00407488();\n            uVar1 = fcn.00421e3c();\n            if (uVar1 != '\\0') goto code_r0x004061ae;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x004061ae:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 246
    },
    "0040633c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040633c(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00407488();\n                uVar1 = fcn.00406174();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00406458": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00406458(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00407488();\n            uVar2 = fcn.00405fe8(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 142
    },
    "0040665c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.0040665c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uVar1 = *(in_EAX + 4);\n    iVar2 = *(uVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00407488();\n            uVar1 = fcn.00406260();\n            if (uVar1 != '\\0') goto code_r0x00406694;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00406694:\n    return CONCAT44(uStack20, uVar1 & 0xffffff00 | uStack20 & 0xff);\n}\n",
        "token_count": 244
    },
    "004066a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004066a0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00407488();\n            iVar1 = fcn.004074e4();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00406058();\n    fcn.0040732c();\n    return;\n}\n",
        "token_count": 144
    },
    "004069fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004069fc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x406a0c;\n    fcn.00406638();\n    uStack16 = 0x406a61;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.0040665c();\n        if (cVar1 != '\\0') break;\n        fcn.00406644();\n        if (in_EAX == *0x404f04) break;\n        in_EAX = fcn.00421bb4();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x406a68;\n    uStack16 = 0x406a60;\n    fcn.004066f0();\n    return;\n}\n",
        "token_count": 235
    },
    "00406f84": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406f84(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0040143c();\n    iVar2 = *(*piVar1 + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar1 = fcn.00407488();\n            (**(*piVar1 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004074e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004074e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00407684": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407684(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00407414();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00407648();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.0042153c();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00407378();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 242
    },
    "00407cfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407cfc(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    fcn.00424448();\n    if (in_EAX != NULL) {\n        iVar2 = fcn.00421e24();\n        if (iVar2 == 0) {\n            cVar1 = fcn.00421db4();\n            if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00424448();\n                (**(*in_EAX + 0x28))();\n            }\n        }\n        else {\n            cVar1 = fcn.00421db4();\n            if ((cVar1 == '\\0') || ((*(in_EAX + 7) & 0x10) != 0)) {\n                fcn.00424448();\n                fcn.00407cfc();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "00408048": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408048(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x408061;\n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        puStack24 = 0x4080d7;\n        fcn.00407aa0();\n        return;\n    }\n    puStack24 = 0x40806d;\n    (**(*in_EAX + 0x20))();\n    uStack28 = 0x4080c6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.004080f4();\n    iVar2 = fcn.00408198();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar3 = fcn.004081a0();\n            piVar4 = fcn.00408028(uVar3);\n            (**(*piVar4 + 8))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4080d7;\n    uStack28 = 0x4080c5;\n    (**(*in_EAX + 0x24))();\n    return;\n}\n",
        "token_count": 365
    },
    "0040ac94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040ac94(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00407488();\n                fcn.00421c28();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00421c28();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0040d22c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d22c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = *(*(*(arg_8h + -4) + 0x30) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            uVar2 = fcn.00407488();\n            cVar1 = fcn.00412700();\n            if (cVar1 != '\\0') {\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0040db58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db58(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x40dbde;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.0041048c();\n    fcn.0040eff8();\n    uVar1 = 0;\n    do {\n        bVar2 = uVar1 < 0x1f;\n        if (uVar1 < 0x20) {\n            bVar2 = (in_EAX >> (uVar1 & 0x1f) & 1) != 0;\n        }\n        if (bVar2) {\n            fcn.00410498();\n            fcn.0040ee10();\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 != 0x20);\n    fcn.0040ee10();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x40dbe5;\n    uStack28 = 0x40dbdd;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 316
    },
    "0040e05c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e05c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (param_2 == in_EAX) {\n                return 1;\n            }\n            in_EAX = *(in_EAX + 4);\n        } while (in_EAX != 0);\n    }\n    return 0;\n}\n",
        "token_count": 99
    },
    "0040f3d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040f3d8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00407488();\n                fcn.0040f3d8();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0040fb68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb68(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00407488(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0040fbe4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fbe4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00407488();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.00407378();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00410120": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00410120(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x410130;\n    iVar1 = fcn.00407850();\n    uStack24 = 0x410175;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00407488();\n            fcn.00421c28();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41017c;\n    uStack24 = 0x410174;\n    fcn.004078b4();\n    return;\n}\n",
        "token_count": 223
    },
    "0041058c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041058c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "0041063c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041063c(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "004125e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004125e4(uint param_1, uint8_t **param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    iVar2 = fcn.00422a14();\n    fcn.00422d98();\n    puVar3 = *param_2;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        uVar1 = *in_EAX;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            uVar1 = uVar1 - 0x20;\n        }\n        *puVar3 = uVar1;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "004127cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004127cc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00422a14();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.0042275c();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00422c6c(param_2);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00412d3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412d3c(uint param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar6 = 0xffffffff;\n    uVar4 = 0;\n    pcVar7 = param_2;\n    do {\n        if (uVar6 == 0) break;\n        uVar6 = uVar6 - 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    uVar6 = ~uVar6;\n    bVar8 = true;\ncode_r0x00412d51:\n    do {\n        if (uVar6 != 0) {\n            uVar6 = uVar6 - 1;\n            pcVar1 = param_2 + 1;\n            pcVar7 = in_EAX + 1;\n            bVar8 = *in_EAX == *param_2;\n            in_EAX = pcVar7;\n            param_2 = pcVar1;\n            if (bVar8) goto code_r0x00412d51;\n        }\n        if (bVar8) {\n            return;\n        }\n        uVar3 = in_EAX[-1];\n        uVar5 = uVar4 & 0xffffff00 | uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n        }\n        uVar3 = param_2[-1];\n        uVar4 = uVar3;\n        if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n            uVar4 = uVar3 - 0x20;\n        }\n        uVar4 = uVar5 - uVar4;\n        bVar8 = uVar4 == 0;\n        if (!bVar8) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 500
    },
    "00412d7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412d7c(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x00412d95:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x00412d95;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "00412de0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00412de0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "00413a6f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00413a6f(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 86
    },
    "00413dd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413dd4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.00422a14();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 127
    },
    "00413ec4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00413ec4(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.00422a14();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "004155b8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004155b8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.004155e0();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.004155e0();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 122
    },
    "004155e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004155e0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00412dc0();\n    while ((iVar2 != 0 && (cVar1 = fcn.00415430(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.00412dc0();\n    }\n    return iVar2;\n}\n",
        "token_count": 90
    },
    "00415ca4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415ca4(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x4617d8; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00415e90": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415e90(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.00415e78();\n    iVar2 = sub.KERNEL32.DLL_GetCurrentThreadId();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00415f20();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00412560();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.00415d54();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 265
    },
    "00417560": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00417560(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_18h = 0x417790;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00417560::var_1ch;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_20h = 0x41764b;\n            var_14h = &stack0xfffffffc;\n            fcn.00424964();\n            var_20h = 0x41765a;\n            fcn.00414b70();\n            var_20h = 0x41765f;\n            fcn.004223bc();\n            goto code_r0x0041776d;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_20h = 0x417609;\n                var_14h = &stack0xfffffffc;\n                fcn.0041732c();\n                goto code_r0x0041776d;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_20h = 0x4176bd;\n                var_14h = &stack0xfffffffc;\n                fcn.00424964();\n                var_20h = 0x4176cc;\n                fcn.00414b70();\n                var_20h = 0x4176d1;\n                fcn.004223bc();\n                goto code_r0x0041776d;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_20h = 0x417729;\n                var_14h = &stack0xfffffffc;\n                fcn.00424964();\n                var_20h = 0x417738;\n                fcn.00414b70();\n                var_20h = 0x41773d;\n                fcn.004223bc();\n                goto code_r0x0041776d;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_20h = 0x41761b;\n                var_14h = &stack0xfffffffc;\n                fcn.00424964();\n                var_20h = 0x41762a;\n                fcn.00414b70();\n                var_20h = 0x41762f;\n                fcn.004223bc();\n                goto code_r0x0041776d;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_20h = 0x417639;\n                var_14h = &stack0xfffffffc;\n                fcn.0041741c();\n                goto code_r0x0041776d;\n            }\n        }\n    }\n    else if (in_EAX < -0x7ff8fff1) {\n        if (in_EAX == -0x7ff8fff2) {\n            var_20h = 0x4176e3;\n            var_14h = &stack0xfffffffc;\n            fcn.00424964();\n            var_20h = 0x4176f2;\n            fcn.00414b70();\n            var_20h = 0x4176f7;\n            fcn.004223bc();\n            goto code_r0x0041776d;\n        }\n        if (in_EAX == -0x7ffdfff5) {\n            var_20h = 0x417671;\n            var_14h = &stack0xfffffffc;\n            fcn.00424964();\n            var_20h = 0x417680;\n            fcn.00414b70();\n            var_20h = 0x417685;\n            fcn.004223bc();\n            goto code_r0x0041776d;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_20h = 0x417697;\n            var_14h = &stack0xfffffffc;\n            fcn.00424964();\n            var_20h = 0x4176a6;\n            fcn.00414b70();\n            var_20h = 0x4176ab;\n            fcn.004223bc();\n            goto code_r0x0041776d;\n        }\n    }\n    else {\n        if (in_EAX == -0x7ff8ffa9) {\n            var_20h = 0x417706;\n            fcn.00424964();\n            var_20h = 0x417715;\n            fcn.00414b70();\n            var_20h = 0x41771a;\n            fcn.004223bc();\n            goto code_r0x0041776d;\n        }\n        var_14h = &stack0xfffffffc;\n        if (in_EAX == 0) goto code_r0x0041776d;\n    }\n    var_20h = &fcn.00417560::var_28h;\n    var_24h = 0;\n    var_28h = 0x417759;\n    var_14h = &stack0xfffffffc;\n    fcn.00424964();\n    var_28h = 0x417768;\n    fcn.00414bac(var_24h, var_20h);\n    var_28h = 0x41776d;\n    fcn.004223bc();\ncode_r0x0041776d:\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x417797;\n    var_20h = 0x417782;\n    fcn.0042275c();\n    var_20h = 0x41778f;\n    fcn.00422780();\n    return;\n}\n",
        "token_count": 1482
    },
    "00418048": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418048(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffdc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x418228;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar1 = *param_2;\n    if ((uVar1 & 0x4000) == 0) {\n        fcn.00417f80();\n    }\n    else {\n    // switch table (21 cases) at 0x418086\n        switch(uVar1 & 0xbfff) {\n        default:\n            if ((uVar1 & 0x2000) == 0) {\n                puStack20 = &stack0xfffffffc;\n                fcn.00418018();\n            }\n            else {\n                puStack20 = &stack0xfffffffc;\n                fcn.00417cf4();\n            }\n            break;\n        case 2:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 3:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 4:\n            puStack20 = &stack0xfffffffc;\n            fcn.00423640();\n            break;\n        case 5:\n            puStack20 = &stack0xfffffffc;\n            fcn.00423640();\n            break;\n        case 6:\n            puStack20 = &stack0xfffffffc;\n            fcn.00423650();\n            break;\n        case 7:\n            puStack20 = &stack0xfffffffc;\n            fcn.00423640();\n            break;\n        case 8:\n            puStack20 = &stack0xfffffffc;\n            fcn.00418008();\n            fcn.00423660();\n            break;\n        case 9:\n        case 0xd:\n            puStack20 = &stack0xfffffffc;\n            fcn.00417fe8();\n            break;\n        case 0xb:\n            puStack20 = &stack0xfffffffc;\n            fcn.00423638();\n            break;\n        case 0xc:\n            puStack20 = &stack0xfffffffc;\n            fcn.00418048();\n            break;\n        case 0x10:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 0x11:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 0x12:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 0x13:\n            puStack20 = &stack0xfffffffc;\n            fcn.0042361c();\n            break;\n        case 0x14:\n            in_stack_ffffffdc = **(param_2 + 4);\n            puStack20 = &stack0xfffffffc;\n            fcn.00423624(in_stack_ffffffdc, (*(param_2 + 4))[1]);\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffdc;\n    uStack28 = 0x41822f;\n    fcn.00422e4c();\n    return;\n}\n",
        "token_count": 764
    },
    "00418c44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418c44(int32_t *param_1, int16_t *param_2)\n\n{\n    char cVar1;\n    \n    if (*param_2 == 0x400c) {\n        fcn.00418c44();\n    }\n    else if ((param_1 == 0x100) || (param_1 == 0x101)) {\n        fcn.00417380();\n    }\n    else {\n        cVar1 = fcn.0041f1f4();\n        if (cVar1 == '\\0') {\n            fcn.004189f0();\n        }\n        else {\n            (**(*param_1 + 0x1c))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0041e098": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041e098(void)\n\n{\n    int16_t *in_EAX;\n    \n    for (; *in_EAX == 0x400c; in_EAX = *(in_EAX + 4)) {\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "0041e270": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041e270(uint *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    bool bVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0x400c) {\n        uVar2 = fcn.0041e270();\n    }\n    else {\n        *param_2 = uVar1;\n        bVar3 = (*(param_2 + 1) & 0x20) != 0;\n        uVar2 = unaff_EBX & 0xffff0000 | uVar1 & 0xffffff00 | bVar3;\n        if (bVar3) {\n            if ((*(param_2 + 1) & 0x40) == 0) {\n                *param_1 = *(in_EAX + 4);\n            }\n            else {\n                *param_1 = **(in_EAX + 4);\n            }\n        }\n        else {\n            *param_1 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "0041e5a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e5a4(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    \n    arg_10h = in_ECX + 1;\n    if (arg_10h != 0 && SCARRY4(in_ECX, 1) == arg_10h < 0) {\n        do {\n            unaff_EBX = *(in_EDX + in_ECX * 4);\n            in_ECX = in_ECX + -1;\n        } while (-1 < in_ECX);\n    }\n    fcn.0041e4d8(arg_8h, in_EAX, arg_10h, unaff_EBX);\n    return;\n}\n",
        "token_count": 181
    },
    "0041e710": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e710(int32_t arg_8h)\n\n{\n    uint in_EAX;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (-1 < arg_8h) {\n        do {\n            unaff_EBX = *(in_ECX + iVar1 * 4);\n            iVar1 = iVar1 + -1;\n        } while (-1 < iVar1);\n    }\n    fcn.0041e5c8(in_EAX, in_EDX, arg_8h + 1, unaff_EBX);\n    return;\n}\n",
        "token_count": 151
    },
    "0041e794": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041e794(void)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    while ((in_EAX != NULL && (*in_EAX == '\\x11'))) {\n        iVar1 = iVar1 + 1;\n        in_EAX = fcn.0041e778();\n    }\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "00421748": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421748(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "00421b8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00421b8c(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = 0;\n    if (param_2 != 0) {\n        in_EAX = *(in_EAX + -0x2c);\n        uVar1 = *in_EAX;\n        if (uVar1 == *(param_2 + -4)) {\n            do {\n                uVar2 = 0;\n                if (((in_EAX[uVar1] ^ *(uVar1 + param_2 + -1)) & 0xdf) != 0) goto code_r0x00421baf;\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            uVar2 = 1;\n        }\n    }\ncode_r0x00421baf:\n    return in_EAX & 0xffffff00 | uVar2;\n}\n",
        "token_count": 227
    },
    "00421c8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00421c8c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004231fc();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 96
    },
    "00421dd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00421dd8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x466904 != NULL) {\n                    (**0x466904)();\n                }\n                fcn.00420f2c();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00421e3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00421e3c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 118
    },
    "004224a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004224a8(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x466f44;\n    puStack20 = &stack0xfffffffc;\n    if (*0x466f40 != 0) {\n        iVar1 = *(*0x466f40 + 4);\n        uStack24 = 0x4224ee;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x466f44 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00422d50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00422d50(uint param_1, char *param_2)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    bool bVar7;\n    \n    if (in_EAX != NULL) {\n        if (param_2 == NULL) {\n            return 0;\n        }\n        iVar3 = *(in_EAX + -4) + -1;\n        if (-1 < iVar3) {\n            iVar1 = *(param_2 + -4) - iVar3;\n            bVar7 = iVar1 == 0;\n            pcVar5 = param_2;\n            if (!bVar7 && iVar3 <= *(param_2 + -4)) {\ncode_r0x00422d70:\n                do {\n                    if (iVar1 != 0) {\n                        iVar1 = iVar1 + -1;\n                        pcVar4 = pcVar5 + 1;\n                        bVar7 = *in_EAX == *pcVar5;\n                        pcVar5 = pcVar4;\n                        if (!bVar7) goto code_r0x00422d70;\n                    }\n                    iVar2 = iVar3;\n                    pcVar4 = in_EAX + 1;\n                    pcVar6 = pcVar5;\n                    if (!bVar7) goto code_r0x00422d84;\n                    do {\n                        if (iVar2 == 0) break;\n                        bVar7 = *pcVar4 == *pcVar6;\n                        iVar2 = iVar2 + -1;\n                        pcVar4 = pcVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                } while (!bVar7);\n                in_EAX = pcVar5 + -param_2;\n                goto code_r0x00422d94;\n            }\n        }\ncode_r0x00422d84:\n        in_EAX = NULL;\n    }\ncode_r0x00422d94:\n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 466
    },
    "00422dfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00422dfc(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.004216c0();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00421628(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.00420fb0();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "0042331c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n// WARNING: Removing unreachable block (ram,0x0042329e)\n// WARNING: Removing unreachable block (ram,0x00423284)\n\nvoid __fastcall fcn.0042331c(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.0042275c();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00422e4c();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.00423694();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00423230();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004231fc();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00424448();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x466904 != NULL) {\n                (**0x466904)();\n            }\n            fcn.00420f2c();\n            return;\n        }\n        do {\n            fcn.00423d9c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "0042357c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042357c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        *(iVar1 * 4 + 0x466f64) = fcn.0042355c;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x2b);\n    *0x466f64 = 0x423564;\n    return;\n}\n",
        "token_count": 95
    },
    "00423ae0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00420f58)\n\nvoid __fastcall fcn.00423ae0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.0042275c();\n            }\n            else {\n                fcn.00422780();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00422e4c();\n            }\n            else {\n                fcn.00422e64();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.00423694();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.00423230();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004231fc();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.00424448();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x466904 != NULL) {\n                    (**0x466904)();\n                }\n                fcn.00420f2c();\n                return;\n            }\n            do {\n                fcn.00423d9c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00423e78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423e78(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = *0x461a7c;\n    if (*0x461a7c != NULL) {\n        do {\n            if (((in_EAX == piVar1[1]) || (in_EAX == piVar1[2])) || (in_EAX == piVar1[3])) {\n                fcn.00423e30();\n                return;\n            }\n            piVar1 = *piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00423ea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423ea0(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.USER32.DLL_CharNextA();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0042430c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042430c(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x461a80 != NULL) && ((*0x461a80)[1] == in_EAX)) {\n        *0x461a80 = **0x461a80;\n        fcn.00420de0();\n        return;\n    }\n    ppiVar2 = *0x461a80;\n    if (*0x461a80 != NULL) {\n        do {\n            ppiVar1 = *ppiVar2;\n            if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                *ppiVar2 = *ppiVar1;\n                fcn.00420de0();\n                return;\n            }\n            ppiVar2 = *ppiVar2;\n        } while (ppiVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "004243d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004243d8(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x42443c;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.0042436c();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x461a7c;\n    if (var_4h == *0x461a7c) {\n        *0x461a7c = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0042667c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042667c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00407488();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.00407378();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "00427b94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427b94(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00422b58(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00421dd8();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004227b0();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00427e94": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427e94(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00421dd8();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "00427ef0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427ef0(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00421dd8();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00427f54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427f54(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar1 = fcn.00421dd8();\n                if (iVar1 != 0) {\n                    piVar2 = fcn.00407488();\n                    (**(*piVar2 + 0x74))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "004280d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004280d8(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "0042a018": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a018(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0042b9b0();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.0042b9c0();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00429120();\n                }\n            }\n            else {\n                iVar2 = fcn.0042b9c0();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.0042b9c0();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0042ba78": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ba78(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0042b9b0();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0042b9c0();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0042bed8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042bed8(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0042b9b0();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.0042b9c0();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0042bf6c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042bf6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 75
    },
    "0042cf9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cf9c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0042e2b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e2b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00407488();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00407488();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0043180c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043180c(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "00438b34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00438b34(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.USER32.DLL_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.USER32.DLL_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00420de0();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00438e44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00438e44(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = in_EAX;\n        in_EAX = *(iVar2 + 0x30);\n    } while (in_EAX != 0);\n    cVar1 = fcn.00421db4();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0043a5e8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0043a5e8(uint arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    uint var_1h;\n    \n    iVar2 = fcn.0040f75c();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0040f730();\n            cVar1 = fcn.00421db4();\n            if (cVar1 != '\\0') {\n                if (in_AL == '\\0') {\n                    fcn.0043a530();\n                }\n                else if (in_AL == '\\x01') {\n                    fcn.0043a56c();\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0043bf74": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0043bf74(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uStack28;\n    \n    uStack28 = fcn.0044f188(2, 0);\n    iVar1 = (***0x466434)();\n    iVar2 = fcn.0043f93c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043f928();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0043f928();\n                goto code_r0x0043c052;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = fcn.0043f93c();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00407488();\n            fcn.00421c28();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    (**(**(*0x4670a8 + 0x58) + 8))();\n    (***0x46643c)(0, 0, fcn.0043bf44, *(*0x4670a8 + 0x58));\n    iVar2 = fcn.0043f93c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0043f928();\n            if (iVar1 == *(iVar3 + 4)) {\n                uStack28 = fcn.0043f928();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\ncode_r0x0043c052:\n    return CONCAT44(uStack28, uStack28);\n}\n",
        "token_count": 410
    },
    "0043d350": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d350(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.00421db4();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.0044f188();\n            sub.USER32.DLL_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0043ef5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ef5c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(arg_8h + -4) + 0x2e8);\n    if ((iVar2 != 0) && (iVar2 = *(iVar2 + 8),  -1 < iVar2 + -1)) {\n        do {\n            fcn.00407488();\n            cVar1 = fcn.00427880();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0043f500": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f500(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x43f5c6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.00448b44();\n        fcn.0042284c();\n        uVar1 = fcn.00422a14();\n        fcn.00422c0c(uVar1);\n        fcn.00448b54();\n        iVar2 = fcn.00422a14();\n        if (0 < iVar2) {\n            iVar3 = 1;\n            do {\n                if ((*(iVar3 + -1) == '\\n') || (*(iVar3 + -1) == '\\r')) {\n                    fcn.00422d98();\n                    break;\n                }\n                iVar3 = iVar3 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00448c00();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0043b4ec();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x43f5cd;\n    uStack24 = 0x43f5c5;\n    fcn.0042275c();\n    return;\n}\n",
        "token_count": 415
    },
    "0043fad8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043fad8(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.USER32.DLL_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00420de0();\n    }\n    iVar2 = sub.USER32.DLL_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.USER32.DLL_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00442300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00442300(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.0043f988();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.0043f974();\n            cVar1 = fcn.0044f48c();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.0044f188();\n                iVar5 = sub.USER32.DLL_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.0044f188();\n                    iVar5 = sub.USER32.DLL_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xd8))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00442504": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00442504(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.0043f96c();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.0043f958();\n            fcn.00449d78(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00445e70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00445e70(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    uVar1 = 0;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return uVar1;\n        }\n        uVar1 = fcn.00407488();\n        bVar2 = param_2 == *(uVar1 + 4);\n        uVar1 = uVar1 & 0xffffff00 | bVar2;\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "00445ea4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00445ea4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.0044f188();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.USER32.DLL_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 105
    },
    "00445f5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00445f5c(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iStackY20;\n    \n    iVar5 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStackY20 = 0x445f77;\n            piVar2 = fcn.00407488();\n            iVar5 = *piVar2;\n        }\n        else {\n            iStackY20 = sub.USER32.DLL_GetDesktopWindow(param_1);\n            iVar3 = sub.USER32.DLL_GetTopWindow();\n            while ((iVar4 = iVar3,  iVar5 == 0 && (iVar4 != 0))) {\n                cVar1 = fcn.00445e70();\n                if (cVar1 == '\\0') {\n                    iVar3 = sub.USER32.DLL_GetWindow();\n                    iStackY20 = iVar4;\n                }\n                else {\n                    iVar5 = **(*(in_EAX + 4) + iStackY20 * 4);\n                    iVar3 = iVar4;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStackY20, iVar5);\n}\n",
        "token_count": 303
    },
    "004469a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004469a4(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.USER32.DLL_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0044695c(),  cVar1 == '\\0'))) {\n        iVar2 = sub.USER32.DLL_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "00447458": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00447458(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.USER32.DLL_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.00445af4(),  iVar2 == 0))) {\n        iVar1 = sub.USER32.DLL_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 114
    },
    "00448750": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00448750(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.00421db4();\n            if (cVar1 != '\\0') {\n                fcn.0043d258();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0044be28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044be28(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "0044c704": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044c704(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004074e4();\n    iVar2 = *(*(in_EAX + 0x19c) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00407488();\n            if (*(iVar2 + 0x180) != 0) {\n                return *(iVar2 + 0x180);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00450c68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00450c68(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00450cfc();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 101
    },
    "00450ccc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00450ccc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 93
    },
    "00450ce0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00450ce0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.004512f4();\n    while (iVar1 != 0) {\n        iVar1 = fcn.004512cc();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 87
    },
    "00450cfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.00450cfc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.004512f4(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.00450cfc();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 162
    },
    "0045104c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045104c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.004512cc();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 121
    },
    "00451220": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00451220(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 68
    },
    "00451230": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00451230(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0045121c();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.00450ccc();\n        if (0 < iVar2) {\n            fcn.00451220();\n            fcn.00451230();\n        }\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0045126c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045126c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.004511f4();\n        iVar3 = fcn.00450d30();\n        if (iVar2 < iVar3) {\ncode_r0x004512a0:\n            fcn.00450edc();\n            fcn.004515a8(0x452d7c, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.004511f4();\n            iVar3 = fcn.00450d78();\n            if (iVar3 < iVar2) goto code_r0x004512a0;\n        }\n        fcn.0045126c();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 229
    },
    "004512d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004512d8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.00450cfc();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 119
    },
    "0045156c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045156c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045156c(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045156c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004524a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004524a0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.004524a0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.004524a0(arg_8h);\n    }\n    fcn.00421c28();\n    return;\n}\n",
        "token_count": 101
    },
    "00452b7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452b7c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.004512cc();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.00450cfc();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0045121c();\n                }\n                else {\n                    fcn.004511f4();\n                    fcn.0045121c();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.004512f4();\n        fcn.00452b7c(iVar2);\n        fcn.004512cc();\n        fcn.00452b7c(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00452fd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452fd4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00450c84();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.00450d30();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.00450cfc();\n        if (cVar1 == '\\0') {\n            fcn.00452fd4(arg_8h);\n        }\n    }\n    iVar2 = fcn.004512d8();\n    if (iVar2 != 0) {\n        fcn.004512d8();\n        fcn.00451230();\n    }\n    fcn.004515a8(0x452d7c, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 254
    },
    "00454ee8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00454ee8(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    \n    while( true ) {\n        arg_10h = arg_10h + -1;\n        if (arg_10h < 0) {\n            return 0;\n        }\n        uVar1 = *arg_8h;\n        if (uVar1 != *arg_ch) break;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    return -(uVar1 < *arg_ch) | 1;\n}\n",
        "token_count": 170
    },
    "00455ef4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455ef4(uint *arg_8h)\n\n{\n    uint *puVar1;\n    ushort in_FS;\n    \n    puVar1 = segment(in_FS, 0);\n    *arg_8h = *puVar1;\n    puVar1 = segment(in_FS, 0);\n    *puVar1 = arg_8h;\n    return;\n}\n",
        "token_count": 83
    },
    "00458540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00458540(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    pcVar2 = fcn.004575bc(0xe);\n    if ((arg_8h == 'G') || (uVar1 = arg_10h,  arg_8h == 'g')) {\n        do {\n            uVar1 = arg_10h;\n            if (*(arg_10h - 1) != '0') goto code_r0x00458572;\n            arg_10h = arg_10h - 1;\n        } while (arg_ch < arg_10h);\n    }\n    else {\ncode_r0x00458572:\n        arg_ch = uVar1;\n        if (*pcVar2 == *(arg_ch - 1)) {\n            arg_ch = arg_ch - 1;\n        }\n    }\n    return arg_ch;\n}\n",
        "token_count": 215
    },
    "0045ba11": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ba11(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (arg_8h != NULL) {\n        while (cVar1 = *arg_8h,  arg_8h = arg_8h + 1,  cVar1 != '\\0') {\n            iVar2 = iVar2 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0040a11c": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a11c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    iVar1 = sub.KERNEL32.DLL_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0040a0ac(&stack0xfffffffc);\n    }\n    iVar1 = sub.KERNEL32.DLL_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0040a0ac(&stack0xfffffffc);\n    }\n    uVar2 = sub.KERNEL32.DLL_SizeofResource();\n    sub.KERNEL32.DLL_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.00409e44();\n    return;\n}\n",
        "token_count": 211
    },
    "00403248": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00403248(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.KERNEL32.DLL_GetModuleHandleA(0x4033ac);\n    if (iVar1 != 0) {\n        *0x4665c8 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4033bc);\n        *0x4665cc = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4033d0);\n        *0x4665c0 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4033e4);\n        *0x4665c4 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4033fc);\n        *0x46659c = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x403414);\n        if (*0x46659c == 0) {\n            *0x46659c = 0x460432;\n        }\n        *0x4665a0 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x40342c);\n        if (*0x4665a0 == 0) {\n            *0x4665a0 = 0x4606cc;\n        }\n        *0x4665a4 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x403444);\n        if (*0x4665a4 == 0) {\n            *0x4665a4 = 0x46051c;\n        }\n        *0x4665a8 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x40345c);\n        if (*0x4665a8 == 0) {\n            *0x4665a8 = 0x460510;\n        }\n        *0x4665ac = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x403474);\n        if (*0x4665ac == 0) {\n            *0x4665ac = 0x460516;\n        }\n        *0x4665b0 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x403488);\n        if (*0x4665b0 == 0) {\n            *0x4665b0 = 0x460696;\n        }\n        *0x4665b4 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x40349c);\n        if (*0x4665b4 == 0) {\n            *0x4665b4 = 0x460690;\n        }\n        *0x4665b8 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4034b4);\n        if (*0x4665b8 == 0) {\n            *0x4665b8 = 0x46069c;\n        }\n    }\n    return;\n}\n",
        "token_count": 635
    },
    "00443070": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00443070(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.KERNEL32.DLL_GetModuleHandleA(0x443094);\n    if (iVar1 != 0) {\n        *0x461f00 = sub.KERNEL32.DLL_GetProcAddress(iVar1, 0x4430a0);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00412a78": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00412a78(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.KERNEL32.DLL_ReadFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "00412aa4": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.00412aa4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.KERNEL32.DLL_WriteFile();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 88
    },
    "004561b8": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004561b8(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (*0x462ec4 <= arg_8h) {\n        uVar1 = fcn.004567ac(6);\n        return uVar1;\n    }\n    iVar2 = sub.KERNEL32.DLL_WriteFile(*(arg_8h * 4 + 0x4676d4), arg_ch, arg_10h, &var_4h, 0);\n    if (iVar2 != 1) {\n        uVar1 = fcn.00456818();\n        return uVar1;\n    }\n    return var_4h;\n}\n",
        "token_count": 172
    },
    "00414410": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00414410(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.KERNEL32.DLL_GetLocaleInfoA();\n    if (0 < uVar1) {\n        param_1 = uVar1 & 0xffffff00 | in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 98
    },
    "004254ac": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.004254ac(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0xd) = 0;\n    *(in_EAX + 4) = 0;\n    sub.USER32.DLL_EnumWindows(fcn.004253f8);\n    return;\n}\n",
        "token_count": 82
    },
    "00438d4c": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint32_t fcn.00438d4c(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint32_t unaff_EBX;\n    uint32_t uVar2;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *0x438d84;\n    iVar1 = sub.USER32.DLL_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.USER32.DLL_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "0045aff8": {
        "rules": [
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045aff8(uint arg_8h, uint arg_ch)\n\n{\n    sub.KERNEL32.DLL_TlsSetValue(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 44
    }
}