{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00422ac8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422ac8(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00422a9e();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00402500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402500(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t nWidth;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t *in_ECX;\n    int32_t *in_FS_OFFSET;\n    float10 fVar10;\n    double dVar11;\n    ulong uVar12;\n    ulong uVar13;\n    int32_t iVar14;\n    uchar *puVar15;\n    double dVar16;\n    int32_t iVar17;\n    double dVar18;\n    uchar *puStack216;\n    uchar *puVar19;\n    ulong uStack200;\n    ulong uStack176;\n    ulong uStack168;\n    int32_t iStack160;\n    uint32_t uStack156;\n    ulong uStack152;\n    int32_t iStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uint uStack132;\n    code *pcStack124;\n    uint64_t uStack120;\n    ulong uStack112;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    code *pcStack88;\n    uint uStack84;\n    uchar auStack80 [8];\n    uint uStack72;\n    code *pcStack68;\n    double dStack64;\n    int32_t iStack56;\n    uint uStack48;\n    uchar uStack32;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x439050;\n    iStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uStack200 = 0.0;\n    puVar19 = &stack0xffffff90;\n    puStack216 = 0x402537;\n    (*_sym.imp.USER32.dll_SetRect)();\n    puStack216 = arg_10h;\n    iVar14 = arg_ch;\n    (**(*in_ECX + 4))(&stack0xffffff7c);\n    iVar1 = (**(*arg_8h + 0x58))(&stack0xffffff70);\n    if (iVar1 != 0) {\n        uStack84 = 0;\n        pcStack88 = vtable.CRgn.0;\n        uStack48 = 0;\n        iVar1 = iStack144;\n        iVar17 = iStack140;\n        uVar2 = (*_sym.imp.GDI32.dll_CreateEllipticRgn)();\n        fcn.00422a71(uVar2, uStack152._4_4_, iVar1);\n        iVar1 = in_ECX[1];\n        fcn.00422c37(iVar1);\n        uStack72 = CONCAT31(uStack72._1_3_, 1);\n        (*_sym.imp.GDI32.dll_FillRgn)(arg_8h[1], uStack112._4_4_, pcStack88, iVar1);\n        iVar1 = in_ECX[0xd] * 5;\n        iVar1 = iVar1 + (iVar1 >> 0x1f & 7U) >> 3;\n        uStack112 = *0x43b8f8;\n        if (*(in_ECX + 4) != '\\0') {\n            uStack112 = *(in_ECX + 0x10);\n        }\n        nWidth = (((in_ECX[0xd] * arg_ch * 100) / 0xc) / 0x48) / arg_10h;\n        if (nWidth < 2) {\n            nWidth = 1;\n        }\n        uVar2 = 0;\n        puStack216 = iVar1;\n        fcn.00422be7(0, nWidth, in_ECX[0xe]);\n        uStack96 = CONCAT31(uStack96._1_3_, 2);\n        uStack132 = fcn.00422b4d(&stack0xffffff54, uVar2);\n        uVar13 = CONCAT44(in_ECX[3] - iVar1, in_ECX[2] + iVar1);\n        uVar12 = CONCAT44(in_ECX[3] + iVar1, in_ECX[2] - iVar1);\n        puVar15 = &stack0xffffff38;\n        (*_sym.imp.USER32.dll_SetRect)();\n        iVar3 = (puVar19 * arg_ch) / arg_10h;\n        iVar4 = (puStack216 * arg_ch) / arg_10h;\n        dVar11 = CONCAT44(puVar15, 0 / arg_10h);\n        (*_sym.imp.USER32.dll_SetRect)\n                  (&stack0xffffff24, (iVar14 * arg_ch) / arg_10h, iVar4, iVar3, 0 / arg_10h, puVar15, uVar12, uVar13);\n        dVar16 = nWidth;\n        fcn.0040af14(dVar11);\n        fcn.0040ae64(dVar11);\n        dVar18 = arg_ch / arg_10h;\n        dVar11 = dVar11 + *0x43ba30;\n        fcn.0040af14(dVar11);\n        fVar10 = fcn.0040ae64(dVar11);\n        uStack200 = (in_ECX[3] + fVar10 * dVar16) * dVar18;\n        uVar2 = fcn.0040afb0();\n        uVar5 = fcn.0040afb0();\n        uVar6 = fcn.0040afb0();\n        uVar7 = fcn.0040afb0();\n        (*_sym.imp.GDI32.dll_Arc)(arg_8h[1], iVar3, iVar17, uStack136, iVar4, uVar7, uVar6, uVar5, uVar2);\n        iVar17 = iStack56;\n        fcn.00422b4d();\n        iVar14 = in_ECX[0xe];\n        puStack216 = 0x4028ad;\n        fcn.00422c37(iVar14);\n        puStack216 = &stack0xffffffb0;\n        uStack32 = 3;\n        iStack160 = fcn.00422b4d();\n        uStack200 = dStack64 + *0x43ba30;\n        iVar1 = iVar1 * 3 + (iVar1 * 3 >> 0x1f & 3U) >> 2;\n        uStack168 = CONCAT44(uStack168._4_4_, iVar1);\n        uStack152 = iVar1;\n        fcn.0040af14(uStack200);\n        fcn.0040ae64(uStack200);\n        uStack156 = 0;\n        uStack176 = in_ECX[3];\n        uStack200 = uStack120;\n        iVar1 = ((in_ECX[0xd] * arg_ch) / arg_10h) / 0xc;\n        do {\n            uVar8 = fcn.0040afb0();\n            uStack168 = uStack168 & 0xffffffff00000000 | uVar8;\n            iStack144 = fcn.0040afb0();\n            iStack140 = uStack168;\n            iStack100 = uStack168;\n            uStack176 = CONCAT44(uStack168, iStack144);\n            iStack104 = iStack144;\n            (*_sym.imp.USER32.dll_SetRect)(&stack0xffffff78, iStack144 - iVar1, uStack168 + iVar1, iStack144 + iVar1);\n            (*_sym.imp.GDI32.dll_Ellipse)(arg_8h[1], uStack156, uStack152, uStack152 >> 0x20, iStack144);\n            if (uStack156 == 0) {\n                uStack168 = dStack64 + *0x43ba28;\n                fcn.0040af14(uStack168);\n                fcn.0040ae64(uStack168);\n                uStack200 = *(in_ECX + 2);\n                uStack168 = uStack120;\n            }\n            uStack156 = uStack156 + 1;\n        } while (uStack156 < 2);\n        iVar1 = iStack160;\n        fcn.00422b4d();\n        fcn.00422ac8();\n        if (*(in_ECX + 4) != '\\0') {\n            uStack156 = (in_ECX[0xc] < 1) - 1 & in_ECX[0xc];\n            (*_sym.imp.USER32.dll_SetRect)(&stack0xffffff3c, 0, 0, 0, 0);\n            puVar19 = &stack0xffffff28;\n            (**(*in_ECX + 0x24))();\n            uVar8 = (iVar17 * arg_ch) / arg_10h;\n            uStack176 = uStack176 & 0xffffffff | uVar8 << 0x20;\n            uVar9 = (puStack216 * arg_ch) / arg_10h;\n            uStack200 = uStack200 & 0xffffffff | uVar9 << 0x20;\n            iVar1 = (iVar1 * arg_ch) / arg_10h;\n            puVar15 = &stack0xffffff24;\n            (*_sym.imp.USER32.dll_SetRect)(puVar15, iVar1, uVar9, (iVar14 * arg_ch) / arg_10h, uVar8, puVar19);\n            iVar14 = in_ECX[uStack200 + 5];\n            uVar2 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(iVar14);\n            fcn.00422a71(uVar2);\n            puVar19 = &stack0xffffff74;\n            fcn.00422b4d();\n            fcn.00422ac8();\n            uVar5 = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, in_ECX[0xe], puVar19);\n            fcn.00422a71();\n            fcn.00422b4d(&stack0xffffff44, uVar5);\n            (*_sym.imp.GDI32.dll_Ellipse)(arg_8h[1], uVar2, iVar14, puVar15, iVar1);\n        }\n        fcn.00422b4d(uStack72);\n        fcn.00422b4d(uStack168);\n        uStack48._0_1_ = 2;\n        uStack96 = vtable.CGdiObject.0;\n        fcn.00422ac8();\n        uStack48._0_1_ = 1;\n        pcStack124 = vtable.CGdiObject.0;\n        fcn.00422ac8();\n        uStack48 = uStack48._1_3_ << 8;\n        pcStack68 = vtable.CGdiObject.0;\n        fcn.00422ac8();\n        uStack48 = 0xffffffff;\n        pcStack88 = vtable.CGdiObject.0;\n        fcn.00422ac8();\n    }\n    *in_FS_OFFSET = iStack56;\n    return;\n}\n",
        "token_count": 2468
    },
    "0041df65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041df65(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0041b6f0();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bcfc();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 199
    },
    "00404420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall\nfcn.00404420(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t *param_4, uint param_5, uint param_6, \n            uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int32_t **ppiVar6;\n    uint uVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t unaff_EBX;\n    int32_t iVar10;\n    int32_t *in_FS_OFFSET;\n    bool bVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    int32_t *piStack116;\n    int32_t *piStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    int32_t iStack88;\n    int32_t iStack76;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    int32_t iStack64;\n    int32_t *piStack60;\n    int32_t iStack36;\n    int32_t *piStack16;\n    int32_t iStack12;\n    int32_t *piStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    piStack8 = 0x43914a;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    if (param_1[5] != 0) {\n        bVar11 = *(param_2 + 0xc) != 0;\n        uStack92 = 0xffffffff;\n        uStack96 = 0;\n        piStack116._0_3_ = CONCAT12(bVar11, piStack116._0_2_);\n        piStack116 = piStack116 & 0xff000000 | piStack116;\n        if (!bVar11) {\n            iStack76 = *param_1;\n            uStack72 = param_1[1];\n            piStack68 = param_1[2];\n            iStack64 = param_1[3];\n            iStack88 = (iStack64 * param_3) / param_4;\n            (*_sym.imp.USER32.dll_SetRect)\n                      (&iStack76, (iStack76 * param_3) / param_4, (uStack72 * param_3) / param_4, \n                       (piStack68 * param_3) / param_4, iStack88);\n            cVar5 = fcn.00403a30(param_7);\n            if (cVar5 == '\\0') goto code_r0x004048d4;\n        }\n        iVar12 = param_1[5];\n        iStack88 = fcn.00419ae3(8);\n        uStack4 = 0;\n        if (iStack88 == 0) {\n            piStack112 = NULL;\n        }\n        else {\n            fcn.00422be7(0, *(*0x44d038 + 0xa0), *(*0x44d038 + 0x9c));\n        }\n        uStack4 = 0xffffffff;\n        uStack92 = fcn.00422b4d();\n        iVar10 = param_1[5];\n        piVar14 = unaff_EBX & 0xffffff | (iVar12 == param_1[8] + -1) << 0x18;\n        ppiVar6 = fcn.00419b0e(iVar10 * 8);\n        if (ppiVar6 == NULL) {\n            ppiVar6 = NULL;\n        }\n        else {\n            fcn.00403af0(ppiVar6, 8, iVar10, 0x403990);\n        }\n        piStack104 = 0xffffec78;\n        piStack100 = 0xffffec78;\n        iVar10 = 0;\n        iVar12 = 0;\n        if (-1 < param_1[5]) {\n            iVar13 = 0;\n            piVar8 = param_4;\n            do {\n                piVar4 = piStack16;\n                param_4 = piVar8;\n                if ((iVar13 < 0) || (param_1[8] <= iVar12)) goto code_r0x004048e7;\n                iVar15 = param_1[7];\n                piStack68 = *(iVar15 + 0xc + iVar13);\n                piVar1 = *(iVar15 + 0x10 + iVar13);\n                piVar8 = *(iVar15 + 0x14 + iVar13);\n                uStack72 = *(iVar15 + iVar13 + 8);\n                param_1 = piVar14;\n                if (uStack72 < 4) {\n                    cVar5 = piStack112 >> 0x10;\n    // switch table (4 cases) at 0x4048ec\n                    switch(uStack72) {\n                    default:\n                        piVar8 = piStack112;\n                        if (iVar10 != 0) {\n                            (*_sym.imp.GDI32.dll_Polyline)(piStack16[1], ppiVar6, iVar10);\n                            iVar10 = 0;\n                            piVar8 = piStack112;\n                        }\n                        piVar1 = piStack68;\n                        if (uStack72 == 0) {\n                            piVar1 = piStack116;\n                        }\n                        piStack116 = piVar1;\n                        fcn.00422b4d(uStack108);\n                        piStack112 = piVar8;\n                        fcn.00422ac8();\n                        uVar7 = (*_sym.imp.GDI32.dll_CreatePen)(0, piStack116, piVar14);\n                        fcn.00422a71(uVar7);\n                        fcn.00422b4d(piVar8);\n                        piVar8 = piVar4;\n                        param_1 = piVar14;\n                        break;\n                    case 2:\n                        if (cVar5 == '\\0') {\n                            if (iVar10 != 0) {\n                                (*_sym.imp.GDI32.dll_Polyline)(piStack16[1], ppiVar6, iVar10);\n                                iVar10 = 0;\n                            }\n                            piStack104 = (piVar1 * iStack12) / piStack8;\n                            param_1 = piVar14;\n                            piStack100 = (piVar8 * iStack12) / piStack8;\n                        }\n                        else {\n                            fcn.0042263c(&uStack96, piVar1, piVar8);\n                            param_1 = piVar14;\n                        }\n                        break;\n                    case 3:\n                        if (cVar5 == '\\0') {\n                            piStack104 = (piVar1 * iStack12) / piStack8;\n                            piVar8 = (piVar8 * iStack12) / piStack8;\n                            cVar5 = fcn.004039e0();\n                            param_1 = piVar14;\n                            piStack100 = piVar8;\n                            if (cVar5 == '\\0') {\n                                if (iVar10 != 0) {\n                                    fcn.004039c0();\n                                    iVar10 = 0;\n                                    param_1 = piVar14;\n                                }\n                            }\n                            else {\n                                if (iVar10 == 0) {\n                                    *ppiVar6 = piVar14;\n                                    ppiVar6[1] = piStack116;\n                                    iVar10 = 1;\n                                }\n                                ppiVar6[iVar10 * 2] = piStack104;\n                                ppiVar6[iVar10 * 2 + 1] = piVar8;\n                                iVar10 = iVar10 + 1;\n                            }\n                        }\n                        else {\n                            ppiVar6[iVar10 * 2] = piVar1;\n                            ppiVar6[iVar10 * 2 + 1] = piVar8;\n                            iVar10 = iVar10 + 1;\n                        }\n                    }\n                }\n                iVar13 = iVar13 + 0x30;\n                iVar12 = iVar12 + 1;\n                param_4 = piStack8;\n                piVar14 = param_1;\n            } while (iVar12 <= param_1[5]);\n        }\n        if (piStack112 >> 0x18 != '\\0') {\n            iVar12 = param_1[8];\n            piStack8 = NULL;\n            iVar13 = 0;\n            if (-1 < iVar12 + -1) {\n                iVar15 = 0;\n                do {\n                    if (1 < piStack8) break;\n                    if ((iVar15 < 0) || (param_1[8] <= iVar13)) {\ncode_r0x004048e7:\n                        iVar12 = fcn.00417be7();\n                        *(param_4 + 0x12) =\n                             *(param_4 + 0x12) + ((iVar12 + 1U & 0xffffff00 | iVar12 + 1U + (ppiVar6 >> 8)) + 1 >> 8);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    iVar2 = *(param_1[7] + 8 + iVar15);\n                    iVar9 = param_1[7] + iVar15;\n                    piVar14 = *(iVar9 + 0x10);\n                    piStack60 = *(iVar9 + 0x14);\n                    if ((iVar2 == 2) || (iVar2 == 3)) {\n                        if (piStack112 >> 0x10 == '\\0') {\n                            if (iVar10 == 0) {\n                                *ppiVar6 = piStack104;\n                                ppiVar6[1] = piStack100;\n                                iVar10 = 1;\n                            }\n                            ppiVar6[iVar10 * 2] = (piVar14 * iStack12) / param_4;\n                            ppiVar6[iVar10 * 2 + 1] = (piStack60 * iStack12) / param_4;\n                        }\n                        else {\n                            ppiVar6[iVar10 * 2] = piVar14;\n                            ppiVar6[iVar10 * 2 + 1] = piStack60;\n                        }\n                        iVar10 = iVar10 + 1;\n                        piStack8 = piStack8 + 1;\n                    }\n                    iVar13 = iVar13 + 1;\n                    iVar15 = iVar15 + 0x30;\n                } while (iVar13 <= iVar12 + -1);\n            }\n            if (param_1 == *(*(*0x44d038 + 0x50) + 0x58)) {\n                *(*0x44d038 + 0x8e) = 1;\n            }\n        }\n        if (iVar10 != 0) {\n            (*_sym.imp.GDI32.dll_Polyline)(piStack16[1], ppiVar6, iVar10);\n        }\n        fcn.00422b4d(uStack108);\n        if (piStack112 != NULL) {\n            (**(*piStack112 + 4))(1);\n        }\n        fcn.00419b13(ppiVar6);\n    }\ncode_r0x004048d4:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2479
    },
    "00404b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00404b30(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    ulong uStack96;\n    ulong uStack32;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x4391db;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    iVar3 = *(param_1 + 0x58);\n    if (*(iVar3 + 0x14) == 0) {\n        uStack96 = CONCAT44(0x404b62, uStack96);\n        fcn.004043b0();\n        *in_FS_OFFSET = uStack20;\n        return;\n    }\n    if ((*(*0x44d038 + 0xd8) != 0) && (iVar5 = *(iVar3 + 0x14) + -1,  -1 < iVar5)) {\n        iVar6 = iVar5 * 0x30;\n        if (iVar5 < 0) {\ncode_r0x00417be7:\n            uStack96 = CONCAT44(param_1, 0x44d178);\n            fcn.0040be8b(&uStack96, 0x446a74);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        do {\n            if (*(iVar3 + 0x20) <= iVar5) goto code_r0x00417be7;\n            iVar1 = *(*(iVar3 + 0x1c) + 8 + iVar6);\n            uStack32 = *(*(iVar3 + 0x1c) + 0x28 + iVar6);\n            if ((iVar1 == 2) || (iVar1 == 3)) {\n                uStack96 = uStack32;\n                (**(**(*0x44d038 + 0xd8) + 0x48))();\n                break;\n            }\n            iVar5 = iVar5 + -1;\n            iVar6 = iVar6 + -0x30;\n        } while (-1 < iVar5);\n    }\n    uStack96 = CONCAT44(*(param_1 + 0x58), *(param_1 + 100));\n    fcn.00418fa5();\n    iVar3 = fcn.00419ae3(0x34);\n    uStack20 = 0;\n    if (iVar3 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = fcn.00404030();\n    }\n    *(param_1 + 0x58) = uVar4;\n    *(*0x44d038 + 0x8e) = 0;\n    *in_FS_OFFSET = uStack32._4_4_;\n    return;\n}\n",
        "token_count": 667
    },
    "004054f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054f0(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t *piVar5;\n    int32_t iStack76;\n    uint auStack60 [2];\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    ulong uStack28;\n    ulong uStack20;\n    \n    (**(*arg_10h + 0x5c))(1);\n    piVar5 = NULL;\n    if ((arg_10h[0x14] < arg_8h) || (arg_ch < 0)) {\ncode_r0x0040564b:\n        if (in_ECX != piVar5) {\n            fcn.00404230();\n            fcn.00419b13();\n        }\n        return 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = in_ECX[1];\n    (*_sym.imp.USER32.dll_OffsetRect)();\n    iVar3 = in_ECX[8];\n    auStack60[0] = 0x43bd68;\n    iStack44 = 0;\n    iStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    iStack52 = -1;\n    if (-1 < iVar3 + -1) {\n        iStack76 = 0;\n        do {\n            if ((iStack76 < 0) || (in_ECX[8] <= piVar5)) {\n                fcn.00417be7();\n                goto code_r0x0040564b;\n            }\n            iVar4 = in_ECX[7];\n            uStack48 = *(iVar4 + 0xc + iStack76);\n            uStack28 = *(iVar4 + 0x20 + iStack76);\n            iVar4 = iVar4 + iStack76;\n            iStack52 = *(iVar4 + 8);\n            uStack20 = *(iVar4 + 0x28);\n            iStack44 = *(iVar4 + 0x10);\n            iStack40 = *(iVar4 + 0x14);\n            uStack36 = *(iVar4 + 0x18);\n            uStack32 = *(iVar4 + 0x1c);\n            if ((iStack52 == 3) || (iStack52 == 2)) {\n                iStack44 = iStack44 + (arg_8h - iVar1) + 2;\n                iStack40 = iStack40 + (arg_ch - iVar2) + 2;\n                fcn.00403e90(piVar5, auStack60);\n            }\n            piVar5 = piVar5 + 1;\n            iStack76 = iStack76 + 0x30;\n        } while (piVar5 <= iVar3 + -1);\n    }\n    fcn.00418fa5(arg_10h[0x19]);\n    return 1;\n}\n",
        "token_count": 697
    },
    "004069f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004069f0(int32_t param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    double *pdVar8;\n    int32_t iVar9;\n    float10 fVar10;\n    double dStack4064;\n    double dStack4048;\n    double dStack4032;\n    int32_t iStack4008;\n    uchar auStack4004 [796];\n    double adStack3208 [200];\n    double adStack1608 [200];\n    \n    fVar10 = (**(**(param_1 + 0xdc) + 0x30))();\n    dVar1 = fVar10;\n    fVar10 = (**(**(param_1 + 0xd8) + 0x30))();\n    dVar2 = fVar10;\n    dStack4064 = dVar2;\n    dStack4048 = dVar1;\n    if (dVar2 < dVar1) {\n        dStack4064 = dVar1;\n        dStack4048 = dVar2;\n    }\n    dStack4032 = *0x43b8f8;\n    iVar4 = (**(**(param_1 + 0xd8) + 0x3c))();\n    iVar9 = 0;\n    pdVar8 = adStack1608;\n    do {\n        iVar5 = fcn.0040afb0();\n        pdVar8[-200] = dStack4032 + dStack4048;\n        if (*0x43b8f8 <= (dStack4032 + dStack4048) - dStack4064) {\n            dVar3 = pdVar8[-200];\n            do {\n                dVar3 = dVar3 - dStack4064;\n            } while (*0x43b8f8 <= dVar3 - dStack4064);\n            pdVar8[-200] = dVar3;\n        }\n        dStack4032 = iVar5 * dStack4048 + dStack4032;\n        *pdVar8 = dStack4032;\n        if (*0x43b8f8 <= dStack4032 - dStack4064) {\n            dVar3 = *pdVar8;\n            do {\n                dVar3 = dVar3 - dStack4064;\n            } while (*0x43b8f8 <= dVar3 - dStack4064);\n            *pdVar8 = dVar3;\n        }\n        iVar5 = 0;\n        *(auStack4004 + iVar9 * 4 + -4) = iVar9;\n        if (0 < iVar9) {\n            do {\n                if (((adStack3208[*(auStack4004 + iVar5 * 4 + -4)] < pdVar8[-200]) << 8 |\n                    (adStack3208[*(auStack4004 + iVar5 * 4 + -4)] == pdVar8[-200]) << 0xe) == 0) {\n                    fcn.0040b6d0(auStack4004 + iVar5 * 4, auStack4004 + iVar5 * 4 + -4, (iVar9 - iVar5) * 4);\n                    *(auStack4004 + iVar5 * 4 + -4) = iVar9;\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar9);\n        }\n        if (((pdVar8[-200] < iVar4) || (dStack4064 - *pdVar8 < iVar4)) || (*pdVar8 < *0x43c628)) {\n            iVar5 = 1;\n            if (1 < iVar9) {\n                iVar5 = 1;\n                do {\n                    if (1 < iVar5) {\n                        uVar6 = fcn.0040afb0();\n                        iVar7 = fcn.0040b6bd(uVar6);\n                        if (iVar4 + (iVar4 >> 0x1f & 3U) >> 2 < iVar7) break;\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < iVar9);\n            }\n            if (iVar5 == iVar9) break;\n        }\n        dStack4032 = *pdVar8;\n        iVar9 = iVar9 + 1;\n        pdVar8 = pdVar8 + 1;\n    } while (iVar9 < 200);\n    if (dVar2 < dVar1) {\n        fcn.0040afb0();\n    }\n    fcn.0040afb0();\n    return;\n}\n",
        "token_count": 1012
    },
    "00407550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407550(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    code **ppcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_ECX;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    bool bVar8;\n    float10 fVar9;\n    float10 fVar10;\n    int32_t *piVar11;\n    int32_t iStack288;\n    int32_t *piStack284;\n    int32_t *piStack248;\n    int32_t **ppiVar12;\n    int32_t iStack216;\n    int32_t iStack212;\n    int32_t iStack208;\n    uint uStack188;\n    int32_t *piStack184;\n    int32_t iStack180;\n    uint uStack176;\n    int32_t iStack172;\n    uchar uStack156;\n    uint uStack148;\n    code *pcStack144;\n    uchar uStack120;\n    uint uStack76;\n    uint uStack60;\n    uint uStack40;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x439320;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    if (*(in_ECX + 0x23) == '\\0') {\n        if ((*(in_ECX + 0x8f) == '\\0') && (*(in_ECX + 0x24) == '\\0')) {\n            iVar7 = in_ECX[7];\n            (*_sym.imp.USER32.dll_GetDC)();\n            piVar2 = fcn.0042277c();\n            (**(*in_ECX + 0x154))();\n            (*_sym.imp.GDI32.dll_DPtoLP)();\n            piStack248 = piVar2;\n            if (in_ECX[0x37] != NULL) {\n                piStack284 = 0x407608;\n                iVar3 = (**(*in_ECX[0x37] + 0x2c))();\n                if (iVar3 == 1) {\n                    piStack284 = 0x40762f;\n                    iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)();\n                    if (iVar3 == 0) {\n                        (*_sym.imp.USER32.dll_ClientToScreen)();\n                        (*_sym.imp.USER32.dll_GetWindowRect)();\n                        fcn.00432908();\n                        piStack284 = 0x40767e;\n                        (*_sym.imp.USER32.dll_ShowCursor)();\n                        piStack248 = NULL;\n                        fcn.00405b20();\n                        fcn.00405b40();\n                        *(in_ECX + 0x26) = 1;\n                        fcn.00405ac0();\n                    }\n                }\n            }\n            uStack40 = 3;\n            piStack284 = 0x4076e4;\n            iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)();\n            if (iVar3 == 0) {\n                if (in_ECX[0x37] != NULL) {\n                    piStack284 = in_ECX[0x22];\n                    iStack288 = in_ECX[0x21];\n                    (**(*in_ECX[0x37] + 0x1c))();\n                    piStack284 = 0x407721;\n                    iVar3 = fcn.00401820();\n                    if (iVar3 != 0) goto code_r0x00407abe;\n                    piStack284 = 0x407732;\n                    fcn.00422ac8();\n                }\n                if (in_ECX[0x36] != NULL) {\n                    piStack284 = in_ECX[0x22];\n                    iStack288 = in_ECX[0x21];\n                    (**(*in_ECX[0x36] + 0x1c))();\n                    piStack284 = 0x407767;\n                    iVar3 = fcn.00401820();\n                    if (iVar3 != 0) goto code_r0x00407abe;\n                    piStack284 = 0x407778;\n                    fcn.00422ac8();\n                }\n                iVar3 = in_ECX[0x14];\n                piStack284 = NULL;\n                iStack288 = 0;\n                (*_sym.imp.USER32.dll_SetRect)();\n                iVar3 = *(iVar3 + 100);\n                do {\n                    iVar3 = iVar3 + -1;\n                    if (iVar3 < 0) goto code_r0x00407abe;\n                    arg_8h_00 = fcn.004039a0();\n                    fcn.00403b20();\n                    piStack284 = 0x4077df;\n                    fcn.00401860();\n                } while ((((iVar7 < iStack216) || (iStack208 <= iVar7)) || (iStack212 < unaff_EDI)) ||\n                        (unaff_EDI <= arg_ch));\n                bVar8 = (arg_8h & 8) == 8;\n                if (bVar8) {\n                    piStack284 = 0x34;\n                    iStack288 = 0x407823;\n                    iVar4 = fcn.00419ae3();\n                    uStack60._0_1_ = 4;\n                    if (iVar4 == 0) {\n                        arg_8h_00 = 0;\n                    }\n                    else {\n                        iStack288 = 0x40783e;\n                        arg_8h_00 = fcn.004040c0(arg_8h_00);\n                    }\n                    uStack60 = CONCAT31(uStack60._1_3_, 3);\n                }\n                in_ECX[0x39] = arg_8h_00;\n                if (!bVar8) {\n                    piStack284 = 0x1;\n                    iStack288 = iVar3;\n                    fcn.00419067();\n                }\n                piStack284 = 0x407873;\n                fcn.004223bc();\n                uStack60 = CONCAT31(uStack60._1_3_, 5);\n                iStack288 = 0x407885;\n                piStack284 = piVar2;\n                fcn.004059a0();\n                iStack288 = 4;\n                fcn.0042219e();\n                fcn.004223d0(&stack0xffffff50, 0, 0);\n                fcn.0042250c(&stack0xffffff44, iVar7, unaff_EDI);\n                uStack176 = 0;\n                piStack184 = piStack248;\n                iStack180 = iVar3;\n                iStack172 = iVar7;\n                (*_sym.imp.GDI32.dll_LPtoDP)();\n                piVar11 = piStack184;\n                ppcVar5 = fcn.00419ae3();\n                if (ppcVar5 == NULL) {\n                    ppcVar5 = NULL;\n                }\n                else {\n                    ppcVar5[1] = NULL;\n                    *ppcVar5 = vtable.CBitmap.0;\n                }\n                in_ECX[0x3c] = ppcVar5;\n                fcn.00405970();\n                iVar7 = in_ECX[0x3c];\n                fcn.004059e0();\n                uStack120 = 6;\n                fcn.00405950();\n                fcn.00405a40();\n                fcn.00404420();\n                fcn.004059e0();\n                iVar3 = fcn.00419ae3();\n                uStack156 = 7;\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = fcn.0041857f();\n                }\n                uStack156 = 6;\n                in_ECX[0x38] = iVar3;\n                fcn.0041868e(uStack188, &stack0xfffffef8, 1, 1, 1);\n                fcn.00405ae0(in_ECX[0x3c], 0xffffff);\n                in_ECX[0x3a] = -iVar7;\n                in_ECX[0x3b] = &stack0xfffffee0 + -piVar11;\n                *(in_ECX + 0x8d) = 1;\n                fcn.0042250c(&stack0xfffffedc, 0, piVar2 - piVar11);\n                (**(*piVar2 + 0x38))(&stack0xfffffe84, 0, 0);\n                (*_sym.imp.GDI32.dll_LPtoDP)(piVar2[2], in_ECX + 0x3a, 1);\n                piStack284 = 0x407a89;\n                fcn.00405b20();\n                piStack284 = 0x407a90;\n                fcn.00405ac0();\n                uStack60._0_1_ = 5;\n                piStack284 = 0x407aa9;\n                fcn.00422ac8();\n                uStack60 = CONCAT31(uStack60._1_3_, 3);\n                piStack284 = 0x407aba;\n                fcn.004227f2();\n            }\ncode_r0x00407abe:\n            uStack60 = 0xffffffff;\n            piStack284 = 0x407ad6;\n            fcn.00422ac8();\n            piStack284 = piVar2[1];\n            iStack288 = in_ECX[7];\n            (*_sym.imp.USER32.dll_ReleaseDC)();\n            fcn.0041b3f7();\n            *in_FS_OFFSET = uStack76;\n            return;\n        }\n        (*_sym.imp.USER32.dll_GetDC)();\n        uVar6 = fcn.0042277c();\n        uStack188 = uVar6;\n        (**(*in_ECX + 0x154))();\n        uStack188 = arg_10h;\n        (*_sym.imp.GDI32.dll_DPtoLP)();\n        piVar2 = fcn.0041eb77();\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 0x74))();\n        }\n        if (*(in_ECX + 0x8f) == '\\0') {\n            if (*(in_ECX + 0x24) != '\\0') {\n                ppiVar1 = in_ECX + 0x36;\n                ppiVar12 = ppiVar1;\n                if (in_ECX[0x36] != 0) {\n                    ppiVar12 = in_ECX + 0x37;\n                }\n                iVar7 = fcn.00419ae3();\n                uStack40 = 1;\n                if (iVar7 == 0) {\n                    piVar2 = NULL;\n                }\n                else {\n                    piVar2 = fcn.004019b0();\n                }\n                *ppiVar12 = piVar2;\n                *(in_ECX + 0x24) = 0;\n                uStack40 = 0xffffffff;\n                (**(**ppiVar12 + 0x10))();\n                if (in_ECX[0x37] != NULL) {\n                    (**(*in_ECX[0x37] + 0x50))();\n                    uStack148 = 0;\n                    piStack284 = uVar6;\n                    (**(*in_ECX[0x37] + 0x28))();\n                    (**(**ppiVar1 + 0x14))();\n                    piVar2 = *ppiVar1;\n                    fVar9 = (**(*in_ECX[0x37] + 0x30))();\n                    fVar10 = (**(*piVar2 + 0x30))();\n                    if (fVar10 < fVar9 != (fVar10 == fVar9)) {\n                        (**(**ppiVar1 + 0x14))();\n                    }\n                    (**(*in_ECX[0x37] + 0xc))();\n                    fVar9 = (**(*in_ECX[0x37] + 0x44))();\n                    *(in_ECX + 0x32) = fVar9;\n                    in_ECX[0x34] = *(in_ECX[0x37] + 8);\n                    in_ECX[0x35] = *(in_ECX[0x37] + 0xc);\n                    fcn.00407010();\n                    fcn.00406d10();\n                }\n                in_ECX[0x25] = in_ECX[0x25] + 5;\n            }\n        }\n        else {\n            iVar7 = fcn.00419ae3();\n            uStack40 = 0;\n            if (iVar7 == 0) {\n                piVar2 = NULL;\n            }\n            else {\n                piVar2 = fcn.00402000();\n            }\n            *(in_ECX + 0x8f) = 0;\n            in_ECX[0x36] = piVar2;\n            uStack40 = 0xffffffff;\n            (**(*piVar2 + 0x10))();\n            fVar9 = (**(*in_ECX[0x36] + 0x44))();\n            *(in_ECX + 0x30) = fVar9;\n        }\n        fcn.00427253(in_ECX[0x25]);\n        piStack284 = 0x407dec;\n        (*_sym.imp.USER32.dll_SendMessageA)();\n        uStack188 = 0;\n        piVar2 = in_ECX[0x37];\n        uStack60 = 2;\n        if (piVar2 == NULL) {\n            piVar2 = in_ECX[0x36];\n        }\n        iStack288 = in_ECX[0x22];\n        piStack284 = NULL;\n        (**(*piVar2 + 0x18))();\n        (*_sym.imp.USER32.dll_InvalidateRgn)();\n        in_ECX[0x25] = -1;\n        (*_sym.imp.USER32.dll_ReleaseDC)();\n        uStack12 = 0xffffffff;\n        pcStack144 = vtable.CGdiObject.0;\n        fcn.00422ac8();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 3137
    },
    "00408470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00408470(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uchar *puVar13;\n    int32_t iStack168;\n    int32_t iStack164;\n    int32_t *piStack160;\n    int32_t iStack156;\n    uint uStack152;\n    ulong uStack148;\n    uchar *puStack140;\n    int32_t iStack136;\n    uchar *puStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack96;\n    uchar *puStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uchar auStack76 [4];\n    uchar auStack72 [4];\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint64_t uStack44;\n    uint64_t uStack36;\n    ulong uStack24;\n    ulong uStack16;\n    \n    if (*(*0x44d038 + 0x23) != '\\0') {\n        iVar9 = (*0x44d038)[0x14];\n        iVar2 = *(iVar9 + 0x58);\n        iVar8 = *(iVar2 + 0x14);\n        iVar12 = *(iVar2 + 0x20) + -1;\n        iStack96 = (*0x44d038)[0x29] + iVar8;\n        if (iVar12 <= (*0x44d038)[0x29] + iVar8) {\n            iStack96 = iVar12;\n        }\n        if (iStack96 != -1) {\n            iStack116 = 0x708;\n            uStack152 = 0;\n            uStack24 = *0x43b8f8;\n            iStack120 = 0;\n            iStack124 = 0;\n            uStack16 = *0x43b8f8;\n            iStack128 = 0x4b0;\n            puStack132 = &stack0xffffffb8;\n            puVar1 = iVar8 + 1;\n            iStack56 = 0x43bd68;\n            uStack44 = uStack44;\n            uStack36 = uStack36 & 0xffffffff00000000;\n            iStack156 = 0;\n            uStack48 = 0xffffffff;\n            iStack136 = 0x40850f;\n            (*_sym.imp.USER32.dll_SetRect)();\n            puVar13 = puVar1;\n            puVar5 = puStack92;\n            iVar12 = iStack88;\n            puStack84 = puVar1;\n            iStack80 = iVar9;\n            if (-1 < iVar8) {\n                unaff_EDI = 0x30;\n                do {\n                    iVar11 = puVar1 * 0x30 - unaff_EDI;\n                    if ((iVar8 < 0) || (*(iVar2 + 0x20) <= iVar8)) goto code_r0x00408851;\n                    iVar3 = *(iVar2 + 0x1c);\n                    uStack44 = *(iVar3 + 0x20 + iVar11);\n                    uStack64 = *(iVar3 + 0xc + iVar11);\n                    iVar12 = *(iVar3 + 0x14 + iVar11);\n                    iStack156 = *(iVar3 + 0x18 + iVar11);\n                    uStack152 = *(iVar3 + 0x1c + iVar11);\n                    iVar4 = *(iVar3 + iVar11 + 8);\n                    puVar5 = *(iVar3 + iVar11 + 0x10);\n                    puVar13 = &stack0xfffffffc;\n                    unaff_ESI = iVar8;\n                    puStack84 = puVar5;\n                    iStack80 = iVar12;\n                    if ((iVar4 == 2) || (puVar13 = &stack0xfffffffc,  iVar4 == 3)) break;\n                    unaff_EDI = unaff_EDI + 0x30;\n                    iVar8 = iVar8 + -1;\n                    puVar13 = &stack0xfffffffc;\n                    unaff_ESI = iVar8;\n                    puVar5 = puStack92;\n                    iVar12 = iStack88;\n                    puStack84 = puVar1;\n                    iStack80 = iVar9;\n                } while (-1 < iVar8);\n            }\n            iStack88 = iVar12;\n            puStack92 = puVar5;\n            if (puVar13 <= iStack116) {\n                unaff_EDI = puVar13 * 0x30;\n                do {\n                    if ((unaff_EDI < 0) || (*(*(unaff_EBX + 0x58) + 0x20) <= puVar13)) {\ncode_r0x00408851:\n                        iStack136 = 0x408856;\n                        fcn.00417be7();\n                        pcVar7 = swi(3);\n                        (*pcVar7)();\n                        return;\n                    }\n                    iVar9 = *(*(unaff_EBX + 0x58) + 0x1c);\n                    uStack64 = *(iVar9 + 0xc + unaff_EDI);\n                    uStack44 = *(iVar9 + 0x20 + unaff_EDI);\n                    iVar8 = *(iVar9 + 8 + unaff_EDI);\n                    iStack156 = *(iVar9 + 0x18 + unaff_EDI);\n                    uStack36 = *(iVar9 + 0x28 + unaff_EDI);\n                    iVar9 = iVar9 + unaff_EDI;\n                    puStack60 = *(iVar9 + 0x10);\n                    iStack56 = *(iVar9 + 0x14);\n                    uStack152 = *(iVar9 + 0x1c);\n                    iStack52 = iStack156;\n                    uStack48 = uStack152;\n                    if ((iVar8 != 0) && (iVar8 != 1)) {\n                        iVar8 = *(iVar2 + 0x30);\n                        iVar9 = iVar8 + -1;\n                        *(iVar2 + 0x30) = iVar9;\n                        if ((iVar8 == 0) && (iVar8 = (*0x44d038)[0x37],  *(iVar8 + 0x30) != *(iVar8 + 0x2c) + -1)) {\n                            *(iVar8 + 0x30) = *(iVar8 + 0x30) + 1;\n                            uStack64 = *((*0x44d038)[0x37] + 0x14 + *((*0x44d038)[0x37] + 0x30) * 4);\n                            iStack136 = 1;\n                            puStack140 = &stack0xffffffb4;\n                            uStack68 = 1;\n                            uStack148 = CONCAT44(uStack148._4_4_, 0x408692);\n                            puStack132 = puVar13;\n                            fcn.00408230();\n                            iStack128 = iStack128 + 1;\n                            *(iVar2 + 0x30) = *(iVar2 + 0x2c);\n                            unaff_EDI = iStack124;\n                        }\n                        else {\n                            if (iVar9 == -1) {\n                                *(iVar2 + 0x30) = *(iVar2 + 0x2c);\n                            }\n                            if (puStack60 < puStack92) {\n                                puStack92 = puStack60;\n                            }\n                            if (puStack84 < puStack60 + 2) {\n                                puStack84 = puStack60 + 2;\n                            }\n                            if (iStack88 < iStack56) {\n                                iStack88 = iStack56;\n                            }\n                            if (iStack56 + -2 < iStack80) {\n                                iStack80 = iStack56 + -2;\n                            }\n                        }\n                    }\n                    puVar13 = puVar13 + 1;\n                    unaff_EDI = unaff_EDI + 0x30;\n                } while (puVar13 <= iStack116);\n            }\n            *(iVar2 + 0x14) = iStack116;\n            iStack136 = (*0x44d038)[0x22];\n            puStack140 = (*0x44d038)[0x21];\n            uStack148 = uStack44;\n            piStack160 = *0x44d038;\n            iStack164 = 0x40873a;\n            (**(*(*0x44d038)[0x37] + 0x4c))();\n            iVar9 = (*0x44d038)[0x21];\n            iVar2 = (*0x44d038)[0x22];\n            iStack164 = (iVar9 * unaff_ESI) / iVar2;\n            iStack168 = (iVar9 * unaff_EDI) / iVar2;\n            (*_sym.imp.USER32.dll_SetRect)(&stack0xffffff88, (iVar9 * iStack120) / iVar2, (iVar9 * iStack116) / iVar2);\n            piVar6 = (*0x44d038)[7];\n            uVar10 = (*_sym.imp.USER32.dll_GetDC)();\n            iVar9 = fcn.0042277c(uVar10);\n            (**(**0x44d038 + 0x154))(iVar9, 0);\n            (*_sym.imp.GDI32.dll_LPtoDP)(*(iVar9 + 8), &stack0xffffff64);\n            if ((iStack168 < piStack160) && (iStack164 < iStack156)) {\n                (*_sym.imp.USER32.dll_InvalidateRect)((*0x44d038)[7], &stack0xffffff58, 1);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)((*0x44d038)[7], *(iVar9 + 4));\n            if ((*(piVar6[0x16] + 0x20) == 3) && ((*0x44d038)[0x2a] != 0)) {\n                (*_sym.imp.USER32.dll_PostMessageA)((*0x44d038)[7], 0x111, 0x802c, 0);\n                *(*0x44d038 + 0x23) = 0;\n            }\n            (**(*piVar6 + 0x5c))(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 2369
    },
    "0041f30f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f30f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041f2e5();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "00408a4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408a4e(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n        *(param_1[1] + 0xec) = *param_1;\n        *(param_1[1] + 0xf0) = param_1[2];\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00408b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.00408b30(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar3 = param_1 + 3;\n    if ((*ppiVar3 < 0) || (piVar2 != *param_1)) {\n        ppiVar3 = (***piVar2)(param_1[1], 1);\n        if (ppiVar3 == NULL) {\n            fcn.004010c0(0x8007000e);\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        ppiVar3[1] = param_1[1];\n        fcn.0040b380(ppiVar3 + 4, param_1 + 4, param_1[1] + 1);\n    }\n    else {\n        LOCK();\n        *ppiVar3 = *ppiVar3 + 1;\n        ppiVar3 = param_1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 265
    },
    "00408cdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408cdc(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00408b8a(iVar1);\n        }\n    }\n    else {\n        fcn.00408c75(param_2);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00408dba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dba(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.00408bce();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.004010c0(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar2 = arg_8h - *in_ECX;\n        arg_8h_00 = fcn.00408d37(arg_ch);\n        if (uVar1 < uVar2) {\n            fcn.0040b380(arg_8h_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0040b6d0(arg_8h_00, arg_8h_00 + uVar2, arg_ch);\n        }\n        fcn.00408abf(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "004090cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004090cc(int32_t *param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    \n    if ((param_2 == 0) && (param_3 != NULL)) {\n        uStack12 = 0x80070057;\n        fcn.004010c0();\n    }\n    iVar1 = (***param_3)(param_3, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00408b25();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00408abf(param_3);\n    fcn.0040b380(*param_1, uStack12, param_3);\n    return param_1;\n}\n",
        "token_count": 187
    },
    "00409120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00409120(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.00408dba(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.00408b30(piVar1);\n            fcn.004089b7();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 206
    },
    "0040917a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040917a(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    puVar2 = &var_94h;\n    for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 170
    },
    "0040940d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040940d(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, int32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puVar7 = arg_1ch;\n    piVar6 = arg_8h;\n    iVar10 = 0;\n    var_30h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar7 + iVar10;\n            iVar10 = iVar10 + 0x10;\n        } while (arg_8h < puVar7[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar10 = arg_8h * 0x10 + *puVar7;\n        iVar9 = uVar2 - arg_8h;\n        piVar11 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar11 = iVar10;\n            iVar10 = iVar10 + 0x10;\n            piVar11 = piVar11 + -1;\n            iVar9 = iVar9 + -1;\n        } while (iVar9 != 0);\n    }\n    iVar10 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_30h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&var_10h);\n    pcVar5 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00409995;\n    // switch table (19 cases) at 0x4099a8\n    switch(*((arg_ch + 0x139aU) * 4 + 0x4099a8)) {\n    case 0x4094f2:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 100))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x40951b:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00409541;\n                var_44h = &var_10h;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar10 = (*pcVar5)(&var_10h, var_40h, 0, 3);\n                if (iVar10 < 0) {\ncode_r0x0040956f:\n                    *arg_28h = 1;\n                    goto code_r0x00409995;\n                }\n                var_40h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x60))(piVar6, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x409592:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00409541;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x5c))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x4095db:\n        if (puVar7[2] == 5) {\n            iVar10 = 0;\n            do {\n                puVar4 = (&var_44h)[iVar10];\n                uVar1 = *puVar4;\n                if (((uVar1 & 0x4000) == 0) || ((uVar1 & 0xf) == 0)) {\n                    *arg_28h = iVar10;\n                    break;\n                }\n                if ((uVar1 & 0xc) == 0) {\n                    iVar9 = *(puVar4 + 4);\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(puVar4 + 4));\n                    puVar4 = (&var_44h)[iVar10];\n                    **(puVar4 + 4) = 3;\n                    iVar9 = *(puVar4 + 4) + 8;\n                }\n                (&var_20h)[iVar10] = iVar9;\n                iVar10 = iVar10 + 1;\n            } while (iVar10 < 4);\n            iVar10 = (**(*piVar6 + 0x58))\n                               (piVar6, var_20h, var_1ch, var_18h, var_14h, *var_34h, var_34h[1], var_34h[2], var_34h[3]\n                               );\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x409651:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00409541;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x54))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x40969b:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x50))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x004096be:\n            if (-1 < iVar10) {\n                *arg_20h = 8;\n            }\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x4096d5:\n        iVar10 = (**(*piVar6 + 0x4c))(piVar6, arg_20h);\n        goto code_r0x00409995;\n    case 0x4096e3:\n        iVar10 = (**(*piVar6 + 0x48))(piVar6, arg_20h);\n        goto code_r0x00409995;\n    case 0x4096f1:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x44))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004096be;\n        }\n        break;\n    case 0x409716:\n        if (puVar7[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar10 = -0x7ffdfffb;\ncode_r0x00409541:\n                *arg_28h = 0;\n                goto code_r0x00409995;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar8 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar8 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar8 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar10 = (**(*piVar6 + 0x40))(piVar6, puVar8, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0040978c;\n        }\n        break;\n    case 0x4097a3:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x3c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004096be;\n        }\n        break;\n    case 0x4097cb:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x38))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x4097ef:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x34))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00409995;\n        }\n        break;\n    case 0x409813:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x30))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004096be;\n        }\n        break;\n    case 0x40983b:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x004098bf;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x0040956f;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x6c))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x00409995;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x2c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004096be;\n        }\n        break;\n    case 0x4098bf:\ncode_r0x004098bf:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00409943;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x0040956f;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x68))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x00409995;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x28))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004096be;\n        }\n        break;\n    case 0x409943:\ncode_r0x00409943:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x24))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409987;\n        }\n        break;\n    case 0x409968:\n        iVar10 = (**(*piVar6 + 0x20))(piVar6, arg_20h + 2);\ncode_r0x0040978c:\n        if (-1 < iVar10) {\n            *arg_20h = 3;\n        }\n        goto code_r0x00409995;\n    case 0x40997a:\n        iVar10 = (**(*piVar6 + 0x1c))(piVar6, arg_20h + 2);\ncode_r0x00409987:\n        if (-1 < iVar10) {\n            *arg_20h = 9;\n        }\n        goto code_r0x00409995;\n    }\n    iVar10 = -0x7ffdfff2;\ncode_r0x00409995:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_10h);\n    return iVar10;\n}\n",
        "token_count": 3832
    },
    "004099f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.004099f4(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x44b468));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x44b418);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "00409a88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409a88(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "00409a9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409a9d(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar3 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar3 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        if ((((*arg_10h == 0) && (arg_10h[1] == 0)) && (arg_10h[2] == 0xc0)) && (arg_10h[3] == 0x46000000)) {\ncode_r0x00409b4d:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar3 = 0;\n        }\n        else {\n            piVar4 = arg_ch[2];\n            while (piVar4 != NULL) {\n                piVar2 = *arg_ch;\n                if ((piVar2 == NULL) ||\n                   (((*piVar2 == *arg_10h && (piVar2[1] == arg_10h[1])) &&\n                    ((piVar2[2] == arg_10h[2] && (piVar2[3] == arg_10h[3])))))) {\n                    if (piVar4 == 0x1) goto code_r0x00409b4d;\n                    iVar3 = (*piVar4)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((piVar2 != NULL) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n                ppiVar1 = arg_ch + 5;\n                arg_ch = arg_ch + 3;\n                piVar4 = *ppiVar1;\n            }\n            iVar3 = -0x7fffbffe;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 530
    },
    "00409ebc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409ebc(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.00408c75(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 64
    },
    "0040a159": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040a159(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    uVar2 = 0x8000ffff;\n    if ((*(param_1 + 0xf0) != 0) && (*(param_1 + 0xe8) != 0)) {\n        puVar1 = *(param_1 + 0xe8);\n        uVar2 = (***puVar1)(puVar1, 0x44464c, param_2);\n    }\n    return uVar2;\n}\n",
        "token_count": 134
    },
    "0040a185": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040a185(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    uVar2 = 0x8000ffff;\n    if ((*(param_1 + 0xf4) != 0) && (*(param_1 + 0xec) != 0)) {\n        puVar1 = *(param_1 + 0xec);\n        uVar2 = (***puVar1)(puVar1, 0x44464c, param_2);\n    }\n    return uVar2;\n}\n",
        "token_count": 132
    },
    "0040a536": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040a536(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 127
    },
    "0040a57a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a57a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00419283(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1];\n        piVar2 = iVar1 + 4 + *param_1 * (iVar3 + -1);\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = param_1[3];\n                param_1[3] = piVar2;\n                piVar2 = piVar2 - *param_1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 216
    },
    "0040a5d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a5d3(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441828, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((*0x450688 == 3) && (arg_8h_00 <= *0x450674)) {\n        fcn.0040d784(4);\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.0040e047(arg_8h_00);\n        *(unaff_EBP + -0x1c) = uVar1;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040a645();\n        if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040a63c;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = 1;\n    }\n    if (*0x450688 != 1) {\n        arg_8h_00 = arg_8h_00 + 0xf & 0xfffffff0;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450684, 0, arg_8h_00);\ncode_r0x0040a63c:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 374
    },
    "0040a68c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a68c(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441838, 0xc);\n    arg_ch = *(unaff_EBP + 8);\n    if (arg_ch != 0) {\n        if (*0x450688 == 3) {\n            fcn.0040d784(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040d868(arg_ch);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040d893(arg_8h_00, arg_ch);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040a6df();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0040a6f7;\n            arg_ch = *(unaff_EBP + 8);\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450684, 0, arg_ch);\n    }\ncode_r0x0040a6f7:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 349
    },
    "0040a6fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040a6fd(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_58h;\n    uint lpSystemInfo;\n    int32_t var_48h;\n    uint32_t lpBuffer;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_13h;\n    uint lpflOldProtect;\n    int32_t dwSize;\n    uint32_t lpAddress;\n    \n    fcn.0040a9e0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(&var_58h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        uVar4 = (~(var_48h - 1U) & &var_58h) - var_48h;\n        uVar3 = ((-(*0x44f00c != 1) & 0xfffffff1) + 0x11) * var_48h + var_24h;\n        dwSize = var_48h;\n        if (uVar3 <= uVar4) {\n            lpAddress = uVar4;\n            if (*0x44f00c != 1) {\n                lpAddress = var_24h;\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(lpAddress, &lpBuffer, 0x1c);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    lpAddress = lpAddress + var_1ch;\n                } while ((var_18h & 0x1000) == 0);\n                lpAddress = lpBuffer;\n                if ((var_13h & 1) != 0) {\n                    return 1;\n                }\n                if (uVar4 < lpBuffer) {\n                    return 0;\n                }\n                if (lpBuffer < uVar3) {\n                    lpAddress = uVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualAlloc)(lpAddress, dwSize, 0x1000, 4);\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)\n                              (lpAddress, dwSize, (-(*0x44f00c != 1) & 0x103) + 1, &lpflOldProtect);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 594
    },
    "0040ab17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ab17(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h, uint arg_ch, uint noname_16, uint noname_17, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc4;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40abb2;\n        var_34h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040abde;\n        uStack36 = *0x44bf78;\n        uStack32 = var_20h;\n        puStack28 = var_ch_2;\n        uStack24 = var_1ch;\n        uStack20 = var_18h;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040ab17::var_28h_2;\n        var_30h = var_8h_3;\n        var_2ch = var_28h;\n        iVar1 = fcn.0040ee57(*var_8h_3, &fcn.0040ab17::var_30h);\n        (**(iVar1 + 0x74))();\n        var_34h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_34h;\n}\n",
        "token_count": 669
    },
    "0040abde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040abde(int32_t param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7\n                 , uint param_8)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    int32_t arg_20h;\n    int32_t noname_8;\n    code *extraout_var;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    if (*(param_2 + 8) == *0x44bf78) {\n        if ((*(param_1 + 4) & 0x66) == 0) {\n            noname_8 = 1;\n            arg_20h = *(param_2 + 0x18);\n            fcn.0040ed8f(param_1, *(param_2 + 0x10), param_3, 0, *(param_2 + 0xc), *(param_2 + 0x14), arg_20h, 1);\n            UNRECOVERED_JUMPTABLE = extraout_var;\n            if (*(param_2 + 0x24) == 0) {\n                arg_20h = param_2;\n                noname_8 = param_1;\n                fcn.0040aa54(param_2, param_1);\n            }\n            fcn.0040ab17(0x123, &stack0xfffffff8, 0, 0, 0, 0, 0, arg_20h, noname_8, unaff_EBX, UNRECOVERED_JUMPTABLE, \n                         unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, param_7, \n                         param_8);\n    // WARNING: Could not recover jumptable at 0x0040ac88. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return uVar1;\n        }\n        *(param_2 + 0x24) = 1;\n    }\n    else {\n        *(param_1 + 4) = *(param_1 + 4) | 8;\n    }\n    return 1;\n}\n",
        "token_count": 525
    },
    "0040ac90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040ac90(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    var_4h = *(arg_8h + 0xc);\n    iVar2 = *(arg_8h + 0x10);\n    uVar4 = var_4h;\n    arg_8h = var_4h;\n    if (-1 < arg_ch) {\n        do {\n            if (uVar4 == 0xffffffff) {\n                fcn.0040f133();\n            }\n            uVar4 = uVar4 - 1;\n            iVar1 = iVar2 + uVar4 * 0x14;\n            if (((*(iVar1 + 4) < arg_10h) && (arg_10h <= *(iVar1 + 8))) || (uVar4 == 0xffffffff)) {\n                arg_ch = arg_ch + -1;\n                var_4h = arg_8h;\n                arg_8h = uVar4;\n            }\n        } while (-1 < arg_ch);\n    }\n    uVar4 = uVar4 + 1;\n    *arg_14h = uVar4;\n    *arg_18h = var_4h;\n    if ((*(iVar3 + 0xc) <= var_4h && var_4h != *(iVar3 + 0xc)) || (var_4h < uVar4)) {\n        fcn.0040f133();\n    }\n    return iVar2 + uVar4 * 0x14;\n}\n",
        "token_count": 405
    },
    "0040ad53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ad53(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    \n    iVar2 = fcn.0040ee57();\n    if (param_1 == *(iVar2 + 0x88)) {\n        iVar2 = fcn.0040ee57();\n        *(iVar2 + 0x88) = *(param_1 + 4);\n        return;\n    }\n    iVar2 = fcn.0040ee57();\n    iVar2 = *(iVar2 + 0x88);\n    do {\n        iVar3 = iVar2;\n        if (*(iVar3 + 4) == 0) {\n            fcn.0040c534(0x441a20, 8);\n            pcVar1 = *0x44c33c;\n            if (*0x44c33c != NULL) {\n                *(unaff_EBP + -4) = 0;\n                (*pcVar1)();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0040c534(0x441a10, 8);\n            iVar2 = fcn.0040ee57();\n            if (*(iVar2 + 0x6c) != 0) {\n                *(unaff_EBP + -4) = 0;\n                iVar2 = fcn.0040ee57();\n                (**(iVar2 + 0x6c))();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0040fddc(10);\n            fcn.0041535c(0x16);\n            fcn.0040c2be(3);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar2 = *(iVar3 + 4);\n    } while (param_1 != *(iVar3 + 4));\n    *(iVar3 + 4) = *(param_1 + 4);\n    return;\n}\n",
        "token_count": 451
    },
    "0040f0fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040f0fe(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040c534(0x441a10, 8);\n    iVar2 = fcn.0040ee57();\n    if (*(iVar2 + 0x6c) != 0) {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040ee57();\n        (**(iVar2 + 0x6c))();\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fddc(10);\n    fcn.0041535c(0x16);\n    fcn.0040c2be(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 220
    },
    "0040ae6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040ae6d(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0040f82c();\n        }\n        if (*0x44eff0 == 0) {\n            uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fsin(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x441a7a) * *0x441a7a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar4);\n        }\n        if (*0x44eff0 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 613
    },
    "0040af1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040af1d(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0040f82c();\n        }\n        if (*0x44eff0 == 0) {\n            uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x441a7a) * *0x441a7a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x44eff0 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 613
    },
    "0040bc2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0040bc2b(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    iVar3 = fcn.0040ee57();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x450690) {\n        iVar3 = fcn.0040cc0b();\n    }\n    if (*(iVar3 + 8) == 0) {\n        uVar7 = arg_8h & 3;\n        while (uVar7 != 0) {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            if (*arg_8h == 0) {\n                return NULL;\n            }\n            uVar7 = arg_8h + 1 & 3;\n            arg_8h = arg_8h + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar7 = *arg_8h;\n                uVar6 = uVar7 ^ CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                uVar4 = uVar7 ^ 0xffffffff ^ uVar7 + 0x7efefeff;\n                puVar5 = arg_8h + 1;\n                if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n                arg_8h = puVar5;\n                if ((uVar4 & 0x81010100) != 0) {\n                    if ((uVar4 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar7 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar7 = *arg_8h;\n            if (uVar7 == arg_ch) {\n                return arg_8h;\n            }\n            if (uVar7 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 8;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 1;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = uVar7 >> 0x10;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 2;\n            }\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 0x18;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 3;\n            }\n            arg_8h = puVar5;\n            if (uVar2 == 0) {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar7 = uVar2;\n        if (uVar2 == 0) break;\n        if ((*(uVar7 + 0x1d + iVar3) & 4) == 0) {\n            puVar5 = arg_8h;\n            if (arg_ch == uVar7) break;\n        }\n        else {\n            uVar1 = *(arg_8h + 1);\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            puVar5 = arg_8h + 1;\n            if (arg_ch == CONCAT11(uVar2, uVar1)) {\n                return arg_8h;\n            }\n        }\n        arg_8h = puVar5 + 1;\n    }\n    return ~-(arg_ch != uVar7) & arg_8h;\n}\n",
        "token_count": 884
    },
    "0040bce5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bce5(uint *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    iVar6 = fcn.0040ee57();\n    iVar6 = *(iVar6 + 0x60);\n    if (iVar6 != *0x450690) {\n        iVar6 = fcn.0040cc0b();\n    }\n    if (*(iVar6 + 8) != 0) {\n        while( true ) {\n            uVar4 = *arg_8h;\n            uVar5 = uVar4;\n            puVar3 = arg_8h + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                if (*puVar3 == 0) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = CONCAT11(uVar4, *puVar3);\n                    puVar3 = arg_8h + 2;\n                }\n            }\n            arg_8h = puVar3;\n            uVar4 = *arg_ch;\n            uVar7 = uVar4;\n            puVar8 = arg_ch + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                uVar1 = *puVar8;\n                if (uVar1 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    puVar8 = arg_ch + 2;\n                    uVar7 = CONCAT11(uVar4, uVar1);\n                }\n            }\n            if (uVar7 != uVar5) break;\n            arg_ch = puVar8;\n            if (uVar5 == 0) {\n                return 0;\n            }\n        }\n        return (-(uVar7 < uVar5) & 2) - 1;\n    }\n    if ((arg_8h & 3) != 0) {\n        if ((arg_8h & 1) != 0) {\n            uVar4 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            bVar9 = uVar4 < *arg_ch;\n            if (uVar4 != *arg_ch) goto code_r0x00410a94;\n            arg_ch = arg_ch + 1;\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if ((arg_8h & 2) == 0) goto code_r0x00410a60;\n        }\n        uVar5 = *arg_8h;\n        arg_8h = arg_8h + 2;\n        uVar4 = uVar5;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) goto code_r0x00410a94;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar5 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) goto code_r0x00410a94;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        arg_ch = arg_ch + 2;\n    }\ncode_r0x00410a60:\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar4 = uVar2;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x10;\n        bVar9 = uVar4 < arg_ch[2];\n        if (uVar4 != arg_ch[2]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x18;\n        bVar9 = uVar4 < arg_ch[3];\n        if (uVar4 != arg_ch[3]) break;\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 1;\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\ncode_r0x00410a94:\n    return bVar9 * -2 + 1;\n}\n",
        "token_count": 1093
    },
    "0040bfe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bfe0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x4418b0, 0x10);\n    uVar2 = *(unaff_EBP + 8) * *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    do {\n        iVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        if (uVar2 < 0xffffffe1) {\n            if (*0x450688 == 3) {\n                uVar2 = uVar2 + 0xf & 0xfffffff0;\n                *(unaff_EBP + 0xc) = uVar2;\n                arg_8h_00 = *(unaff_EBP + -0x20);\n                if (*0x450674 < arg_8h_00) goto code_r0x0040c055;\n                fcn.0040d784(4);\n                *(unaff_EBP + -4) = 0;\n                uVar1 = fcn.0040e047(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar1;\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0040c08a();\n                iVar3 = *(unaff_EBP + -0x1c);\n                if (iVar3 != 0) {\n                    fcn.0040b220(iVar3, 0, *(unaff_EBP + -0x20));\n                    goto code_r0x0040c055;\n                }\n            }\n            else {\ncode_r0x0040c055:\n                if (iVar3 != 0) {\ncode_r0x0040c095:\n                    fcn.0040c56f();\n                    return;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450684, 8, uVar2);\n        }\n        if (((iVar3 != 0) || (*0x44f1ac == 0)) || (iVar3 = fcn.0040e343(uVar2),  iVar3 == 0)) goto code_r0x0040c095;\n    } while( true );\n}\n",
        "token_count": 611
    },
    "0040c626": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c626(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0040c580(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0040c63e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c63e(uint lpMem, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441908, 0x10);\n    arg_10h = *(unaff_EBP + 0xc);\n    if (arg_10h < 0xffffffe1) {\n        if (*0x450688 == 3) {\n            fcn.0040d784(4);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = *(unaff_EBP + 8);\n            iVar1 = fcn.0040d868(uVar2);\n            *(unaff_EBP + -0x20) = iVar1;\n            if (((iVar1 != 0) && (*(unaff_EBP + -0x1c) = 0,  arg_10h <= *0x450674)) &&\n               (iVar1 = fcn.0040dd68(iVar1, uVar2, arg_10h),  iVar1 != 0)) {\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040c6bc();\n            if (*(unaff_EBP + -0x20) != 0) goto code_r0x0040c6e2;\n            if (arg_10h == 0) {\n                arg_10h = 1;\n            }\n            arg_10h = arg_10h + 0xf & 0xfffffff0;\n        }\n        else if (arg_10h == 0) {\n            arg_10h = 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450684, 0x10, *(unaff_EBP + 8), arg_10h);\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\ncode_r0x0040c6e2:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 525
    },
    "0040c6e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c6e8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441918, 0x10);\n    if (*0x450688 == 3) {\n        fcn.0040d784(4);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = *(unaff_EBP + 8);\n        iVar2 = fcn.0040d868(iVar1);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x1c) = *(iVar1 + -4) + -9;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040c755();\n        if (*(unaff_EBP + -0x20) != 0) goto code_r0x0040c74a;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapSize)(*0x450684, 0, *(unaff_EBP + 8));\ncode_r0x0040c74a:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 326
    },
    "0040c75e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040c75e(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.00412456(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 441
    },
    "0040c7e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040c7e6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441928, 0x14);\n    arg_ch_00 = *(unaff_EBP + 8);\n    if (arg_ch_00 == 0) {\n        fcn.0040a67a(*(unaff_EBP + 0xc));\n    }\n    else {\n        arg_10h = *(unaff_EBP + 0xc);\n        if (arg_10h == 0) {\n            fcn.0040a68c(arg_ch_00);\n        }\n        else if (*0x450688 == 3) {\n            do {\n                *(unaff_EBP + -0x1c) = 0;\n                if (arg_10h < 0xffffffe1) {\n                    fcn.0040d784(4);\n                    *(unaff_EBP + -4) = 0;\n                    iVar1 = fcn.0040d868(arg_ch_00);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 != 0) {\n                        if (arg_10h <= *0x450674) {\n                            iVar1 = fcn.0040dd68(iVar1, arg_ch_00, arg_10h);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0040e047(arg_10h);\n                                *(unaff_EBP + -0x1c) = iVar1;\n                                if (iVar1 != 0) {\n                                    uVar2 = *(arg_ch_00 + -4) - 1;\n                                    *(unaff_EBP + -0x24) = uVar2;\n                                    if (arg_10h <= uVar2) {\n                                        uVar2 = arg_10h;\n                                    }\n                                    fcn.0040b380(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                    uVar3 = fcn.0040d868(arg_ch_00);\n                                    *(unaff_EBP + -0x20) = uVar3;\n                                    fcn.0040d893(uVar3, arg_ch_00);\n                                }\n                            }\n                            else {\n                                *(unaff_EBP + -0x1c) = arg_ch_00;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x1c) == 0) {\n                            if (arg_10h == 0) {\n                                arg_10h = 1;\n                                *(unaff_EBP + 0xc) = 1;\n                            }\n                            arg_10h = arg_10h + 0xf & 0xfffffff0;\n                            *(unaff_EBP + 0xc) = arg_10h;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450684, 0, arg_10h);\n                            *(unaff_EBP + -0x1c) = iVar1;\n                            if (iVar1 != 0) {\n                                uVar2 = *(arg_ch_00 + -4) - 1;\n                                *(unaff_EBP + -0x24) = uVar2;\n                                if (arg_10h <= uVar2) {\n                                    uVar2 = arg_10h;\n                                }\n                                fcn.0040b380(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                fcn.0040d893(*(unaff_EBP + -0x20), arg_ch_00);\n                            }\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.0040c94e();\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = 1;\n                        }\n                        arg_10h = arg_10h + 0xf & 0xfffffff0;\n                        *(unaff_EBP + 0xc) = arg_10h;\n                        uVar3 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450684, 0, arg_ch_00, arg_10h);\n                        *(unaff_EBP + -0x1c) = uVar3;\n                    }\n                }\n            } while (((*(unaff_EBP + -0x1c) == 0) && (*0x44f1ac != 0)) && (iVar1 = fcn.0040e343(arg_10h),  iVar1 != 0));\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_10h < 0xffffffe1) {\n                    if (arg_10h == 0) {\n                        arg_10h = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450684, 0, arg_ch_00, arg_10h);\n                }\n            } while (((iVar1 == 0) && (*0x44f1ac != 0)) && (iVar1 = fcn.0040e343(arg_10h),  iVar1 != 0));\n        }\n    }\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1267
    },
    "0040c9a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * fcn.0040c9a9(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = param_1 + 1;\n    if (((*(*param_1 + 0x4506a1) & 4) != 0) && (*puVar1 != 0)) {\n        puVar1 = param_1 + 2;\n    }\n    return puVar1;\n}\n",
        "token_count": 101
    },
    "0040ca0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ca0f(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0040c580(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0040ca7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_518h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040ca7f(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    uint noname_8;\n    uint noname_9;\n    uint *noname_2;\n    uint noname_11;\n    uint *noname_4;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_8_00;\n    uint *noname_1;\n    uint noname_10;\n    uint noname_12;\n    uint noname_13_00;\n    uint noname_14_00;\n    uint noname_7;\n    uint *arg_8h;\n    uint var_518h;\n    uint in_stack_fffffae8;\n    uint in_stack_fffffaec;\n    uint in_stack_fffffaf0;\n    uint in_stack_fffffaf4;\n    uint in_stack_fffffaf8;\n    uint in_stack_fffffafc;\n    uint in_stack_fffffb00;\n    uint in_stack_fffffb04;\n    uint var_318h;\n    uint var_218h;\n    uint var_118h;\n    uint lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    arg_8h = &lpCPInfo;\n    noname_7 = *0x4507a4;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    if (iVar2 == 1) {\n        uVar3 = 0;\n        do {\n            *(&var_118h + uVar3) = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n        var_118h._0_1_ = 0x20;\n        if (var_12h != 0) {\n            puVar8 = &var_12h + 1;\n            do {\n                uVar3 = var_12h;\n                if (uVar3 <= *puVar8) {\n                    uVar6 = (*puVar8 - uVar3) + 1;\n                    puVar9 = &var_118h + uVar3;\n                    for (uVar7 = uVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar9 = 0x20202020;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar9 = 0x20;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                var_12h._0_1_ = puVar8[1];\n                puVar8 = puVar8 + 2;\n            } while (var_12h != 0);\n        }\n        noname_14_00 = 0;\n        puVar9 = &var_518h;\n        noname_10 = 0x100;\n        noname_1 = &var_118h;\n        noname_8_00 = 1;\n        noname_12 = *0x4507a4;\n        noname_13_00 = *0x45068c;\n        fcn.00412a55(1, noname_1, 0x100, puVar9, *0x4507a4, *0x45068c, 0, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4);\n        noname_15 = 0;\n        noname_4 = &var_218h;\n        noname_13 = 0x100;\n        noname_11 = 0x100;\n        noname_2 = &var_118h;\n        noname_9 = 0x100;\n        noname_8 = *0x45068c;\n        noname_14 = *0x4507a4;\n        fcn.00412699(*0x45068c, 0x100, noname_2, 0x100, noname_4, 0x100, *0x4507a4, 0, noname_8_00, noname_1, noname_10\n                     , puVar9, noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4, in_stack_fffffaf8, \n                     in_stack_fffffafc, in_stack_fffffb00, in_stack_fffffb04);\n        fcn.00412699(*0x45068c, 0x200, &var_118h, 0x100, &var_318h, 0x100, *0x4507a4, 0, noname_8, noname_9, noname_2, \n                     noname_11, noname_4, noname_13, noname_14, noname_15, noname_8_00, noname_1, noname_10, puVar9, \n                     noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h);\n        uVar3 = 0;\n        do {\n            uVar1 = *(&var_518h + uVar3 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) != 0) {\n                    *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 0x20;\n                    uVar4 = *(&var_318h + uVar3);\n                    goto code_r0x0040cb91;\n                }\n                *(uVar3 + 0x4507c0) = 0;\n            }\n            else {\n                *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 0x10;\n                uVar4 = *(&var_218h + uVar3);\ncode_r0x0040cb91:\n                *(uVar3 + 0x4507c0) = uVar4;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    else {\n        uVar3 = 0;\n        do {\n            if ((uVar3 < 0x41) || (0x5a < uVar3)) {\n                if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                    *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 0x20;\n                    cVar5 = uVar3 + -0x20;\n                    goto code_r0x0040cbd4;\n                }\n                *(uVar3 + 0x4507c0) = 0;\n            }\n            else {\n                *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 0x10;\n                cVar5 = uVar3 + ' ';\ncode_r0x0040cbd4:\n                *(uVar3 + 0x4507c0) = cVar5;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1853
    },
    "0040cc7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc7a(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    uint32_t var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if (arg_8h != 0) {\n        iVar5 = 0;\n        uVar3 = 0;\ncode_r0x0040cc9c:\n        if (*(uVar3 + 0x44bfb8) != arg_8h) goto code_r0x0040cca4;\n        puVar8 = 0x4506a0;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        var_1ch = 0;\n        *puVar8 = 0;\n        puVar6 = iVar5 * 0x30 + 0x44bfc8;\n        do {\n            uVar2 = *puVar6;\n            puVar7 = puVar6;\n            while ((uVar2 != 0 && (uVar1 = puVar7[1],  uVar1 != 0))) {\n                uVar3 = uVar2;\n                if (uVar3 <= uVar1) {\n                    uVar2 = *(var_1ch + 0x44bfb0);\n                    do {\n                        *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | uVar2;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 <= uVar1);\n                }\n                puVar7 = puVar7 + 2;\n                uVar2 = *puVar7;\n            }\n            var_1ch = var_1ch + 1;\n            puVar6 = puVar6 + 8;\n        } while (var_1ch < 4);\n        *0x4507a4 = arg_8h;\n        *0x450694 = 1;\n        *0x45068c = fcn.0040ca27();\n        *0x4507b0 = *(extraout_ECX + 0x44bfbc);\n        *0x4507b4 = *(extraout_ECX + 0x44bfc0);\n        *0x4507b8 = *(extraout_ECX + 0x44bfc4);\n        goto code_r0x0040cdf1;\n    }\ncode_r0x0040cdec:\n    fcn.0040ca56();\ncode_r0x0040cdf1:\n    fcn.0040ca7f();\ncode_r0x0040cdfd:\n    fcn.0040bcd7();\n    return;\ncode_r0x0040cca4:\n    uVar3 = uVar3 + 0x30;\n    iVar5 = iVar5 + 1;\n    if (0xef < uVar3) goto code_r0x0040ccaf;\n    goto code_r0x0040cc9c;\ncode_r0x0040ccaf:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h, &lpCPInfo);\n    if (iVar5 != 1) {\n        if (*0x44f050 == 0) goto code_r0x0040cdfd;\n        goto code_r0x0040cdec;\n    }\n    puVar8 = 0x4506a0;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x4507a4 = arg_8h;\n    *0x45068c = 0;\n    if (lpCPInfo < 2) {\n        *0x450694 = 0;\n    }\n    else {\n        if (var_12h != '\\0') {\n            puVar6 = &var_12h + 1;\n            do {\n                uVar2 = *puVar6;\n                if (uVar2 == 0) break;\n                for (uVar3 = puVar6[-1]; uVar3 <= uVar2; uVar3 = uVar3 + 1) {\n                    *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 4;\n                }\n                puVar7 = puVar6 + 1;\n                puVar6 = puVar6 + 2;\n            } while (*puVar7 != 0);\n        }\n        uVar3 = 1;\n        do {\n            *(uVar3 + 0x4506a1) = *(uVar3 + 0x4506a1) | 8;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0xff);\n        *0x45068c = fcn.0040ca27();\n        *0x450694 = extraout_ECX_00;\n    }\n    *0x4507b0 = 0;\n    *0x4507b4 = 0;\n    *0x4507b8 = 0;\n    goto code_r0x0040cdf1;\n}\n",
        "token_count": 1282
    },
    "0040d06a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0040d06a(int32_t arg_8h)\n\n{\n    uint64_t uVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = in_EAX[5];\n    var_8h = var_ch >> 0x1f;\n    if ((var_8h < 0) ||\n       ((((-1 < var_ch || var_8h < 0 && (var_ch < 0x45)) || (0 < var_8h)) || ((-1 < var_8h && (0x44c < var_ch)))))) {\ncode_r0x0040d2b0:\n        _var_ch = -1;\n    }\n    else {\n        iVar4 = in_EAX[4];\n        if ((iVar4 < 0) || (0xb < iVar4)) {\n            uVar2 = iVar4 / 0xc;\n            iVar4 = iVar4 % 0xc;\n            bVar6 = CARRY4(var_ch, uVar2);\n            var_ch = var_ch + uVar2;\n            in_EAX[4] = iVar4;\n            var_8h = var_8h + (uVar2 >> 0x1f) + bVar6;\n            if (iVar4 < 0) {\n                bVar6 = var_ch != 0;\n                var_ch = var_ch - 1;\n                in_EAX[4] = iVar4 + 0xc;\n                var_8h = var_8h + -1 + bVar6;\n            }\n            if ((((var_8h < 0) || ((var_8h < 1 && (var_ch < 0x45)))) || (0 < var_8h)) ||\n               ((-1 < var_8h && (0x44c < var_ch)))) goto code_r0x0040d2b0;\n        }\n        iVar4 = in_EAX[4];\n        var_14h = *(iVar4 * 4 + 0x44c774);\n        var_10h = var_14h >> 0x1f;\n        iVar7 = fcn.004134e0(var_ch, var_8h, 4, 0);\n        if ((iVar7 == 0) && (uVar2 = var_ch,  iVar7 = fcn.004134e0(var_ch, var_8h, 100, 0),  iVar7 != 0)) {\ncode_r0x0040d15f:\n            if (1 < iVar4) {\n                bVar6 = 0xfffffffe < var_14h;\n                var_14h = var_14h + 1;\n                var_10h = var_10h + bVar6;\n            }\n        }\n        else {\n            uVar2 = var_ch + 0x76c;\n            iVar7 = fcn.004134e0();\n            if (iVar7 == 0) goto code_r0x0040d15f;\n        }\n        iVar5 = var_ch - 1;\n        iVar4 = var_8h - (var_ch == 0);\n        iVar7 = fcn.0040d560(var_ch + 299, var_8h + (0xfffffed4 < var_ch), 400, 0, uVar2);\n        uVar2 = iVar7 + in_EAX[3];\n        var_4h = iVar7 + in_EAX[3] >> 0x20;\n        uVar8 = fcn.0040d560(iVar5, iVar4, 100, 0);\n        var_4h = (var_4h - (uVar8 >> 0x20)) - (uVar2 < uVar8);\n        iVar7 = fcn.0040d560(iVar5, iVar4, 4, 0);\n        uVar1 = iVar7 + CONCAT44(var_4h, uVar2 - uVar8);\n        var_4h = uVar1 >> 0x20;\n        iVar7 = fcn.0040c500(var_ch, var_8h, 0x16d, 0);\n        iVar7 = iVar7 + (uVar1 & 0xffffffff | var_4h << 0x20) + CONCAT44(var_10h, var_14h);\n        uVar2 = iVar7;\n        var_4h = uVar2 - 0x63df;\n        iVar7 = fcn.0040c500(var_4h, (iVar7 >> 0x20) - (uVar2 < 0x63df), 0x18, 0);\n        iVar7 = fcn.0040c500(iVar7 + in_EAX[2], 0x3c, 0);\n        _var_ch = fcn.0040c500(iVar7 + in_EAX[1], 0x3c, 0);\n        _var_ch = _var_ch + *in_EAX;\n        if (arg_8h == 0) {\n            piVar3 = fcn.00412c3d(&var_ch);\ncode_r0x0040d29c:\n            if (piVar3 == NULL) goto code_r0x0040d2b0;\n        }\n        else {\n            fcn.00413449();\n            _var_ch = _var_ch + *0x44c690;\n            piVar3 = fcn.0040d2c7(&var_ch);\n            if (piVar3 == NULL) goto code_r0x0040d2b0;\n            if ((0 < in_EAX[8]) || ((in_EAX[8] < 0 && (0 < piVar3[8])))) {\n                _var_ch = _var_ch + *0x44c698;\n                piVar3 = fcn.0040d2c7(&var_ch);\n                goto code_r0x0040d29c;\n            }\n        }\n        for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *in_EAX = *piVar3;\n            piVar3 = piVar3 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return _var_ch;\n}\n",
        "token_count": 1474
    },
    "0040d7b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040d7b5(void)\n\n{\n    if ((*0x44f00c == 2) && (4 < *0x44f018)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 52
    },
    "0040d7cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040d7cf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x450684 = (*_sym.imp.KERNEL32.dll_HeapCreate)(param_1 == 0, 0x1000, 0);\n    if (*0x450684 == 0) {\n        return 0;\n    }\n    *0x450688 = fcn.0040d7b5();\n    if ((*0x450688 == 3) && (iVar1 = fcn.0040d820(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapDestroy)(*0x450684);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 166
    },
    "0040d893": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d893(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = arg_8h[4];\n    puVar13 = arg_ch + -4;\n    uVar15 = arg_ch - arg_8h[3] >> 0xf;\n    piVar4 = uVar15 * 0x204 + 0x144 + uVar6;\n    var_4h = *puVar13 - 1;\n    if ((var_4h & 1) == 0) {\n        puVar11 = var_4h + puVar13;\n        uVar14 = *puVar11;\n        uVar7 = *(arg_ch + -8);\n        if ((uVar14 & 1) == 0) {\n            uVar10 = (uVar14 >> 4) - 1;\n            if (0x3f < uVar10) {\n                uVar10 = 0x3f;\n            }\n            if (puVar11[1] == puVar11[2]) {\n                if (uVar10 < 0x20) {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 & 0x1f));\n                    puVar12 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        *arg_8h = *arg_8h & uVar10;\n                    }\n                }\n                else {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 - 0x20 & 0x1f));\n                    puVar12 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar10;\n                    }\n                }\n            }\n            var_4h = var_4h + uVar14;\n            *(puVar11[2] + 4) = puVar11[1];\n            *(puVar11[1] + 8) = puVar11[2];\n        }\n        puVar11 = (var_4h >> 4) + -1;\n        if (0x3f < puVar11) {\n            puVar11 = 0x3f;\n        }\n        puVar12 = arg_8h;\n        if ((uVar7 & 1) == 0) {\n            puVar13 = puVar13 - uVar7;\n            puVar12 = (uVar7 >> 4) + -1;\n            if (0x3f < puVar12) {\n                puVar12 = 0x3f;\n            }\n            var_4h = var_4h + uVar7;\n            puVar11 = (var_4h >> 4) + -1;\n            if (0x3f < puVar11) {\n                puVar11 = 0x3f;\n            }\n            if (puVar12 != puVar11) {\n                if (puVar13[1] == puVar13[2]) {\n                    if (puVar12 < 0x20) {\n                        uVar14 = ~(0x80000000U >> (puVar12 & 0x1f));\n                        puVar3 = uVar6 + 0x44 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            *arg_8h = *arg_8h & uVar14;\n                        }\n                    }\n                    else {\n                        uVar14 = ~(0x80000000U >> (puVar12 - 0x20 & 0x1f));\n                        puVar3 = uVar6 + 0xc4 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            arg_8h[1] = arg_8h[1] & uVar14;\n                        }\n                    }\n                }\n                *(puVar13[2] + 4) = puVar13[1];\n                *(puVar13[1] + 8) = puVar13[2];\n            }\n        }\n        if (((uVar7 & 1) != 0) || (puVar12 != puVar11)) {\n            piVar1 = piVar4 + puVar11 * 2;\n            uVar14 = piVar1[1];\n            puVar13[2] = piVar1;\n            puVar13[1] = uVar14;\n            piVar1[1] = puVar13;\n            *(puVar13[1] + 8) = puVar13;\n            if (puVar13[1] == puVar13[2]) {\n                cVar5 = *(puVar11 + uVar6 + 4);\n                *(puVar11 + uVar6 + 4) = cVar5 + '\\x01';\n                uVar9 = puVar11;\n                if (puVar11 < 0x20) {\n                    if (cVar5 == '\\0') {\n                        *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                else {\n                    if (cVar5 == '\\0') {\n                        arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n            }\n        }\n        *puVar13 = var_4h;\n        *((var_4h - 4) + puVar13) = var_4h;\n        *piVar4 = *piVar4 + -1;\n        pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n        if (*piVar4 == 0) {\n            if (*0x450668 != NULL) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x450680 * 0x8000 + (*0x450668)[3], 0x8000, 0x4000);\n                (*0x450668)[2] = (*0x450668)[2] | 0x80000000U >> (*0x450680 & 0x1f);\n                *((*0x450668)[4] + 0xc4 + *0x450680 * 4) = 0;\n                *((*0x450668)[4] + 0x43) = *((*0x450668)[4] + 0x43) + -1;\n                if (*((*0x450668)[4] + 0x43) == '\\0') {\n                    (*0x450668)[1] = (*0x450668)[1] & 0xfffffffe;\n                }\n                if ((*0x450668)[2] == 0xffffffff) {\n                    (*pcVar8)((*0x450668)[3], 0, 0x8000);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450684, 0, (*0x450668)[4]);\n                    fcn.0040b6d0(*0x450668, *0x450668 + 5, (*0x45066c * 0x14 - *0x450668) + -0x14 + *0x450670);\n                    *0x45066c = *0x45066c + -1;\n                    if (*0x450668 < arg_8h) {\n                        arg_8h = arg_8h + -5;\n                    }\n                    *0x450678 = *0x450670;\n                }\n            }\n            *0x450668 = arg_8h;\n            *0x450680 = uVar15;\n        }\n    }\n    return;\n}\n",
        "token_count": 2136
    },
    "0040e047": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040e047(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar8 = arg_8h + 0x17U & 0xfffffff0;\n    iVar9 = (arg_8h + 0x17U >> 4) + -1;\n    puVar10 = *0x450670 + *0x45066c * 5;\n    uVar7 = iVar9;\n    if (iVar9 < 0x20) {\n        uVar16 = 0xffffffff >> (uVar7 & 0x1f);\n        var_8h = 0xffffffff;\n    }\n    else {\n        uVar16 = 0;\n        var_8h = 0xffffffff >> (uVar7 - 0x20 & 0x1f);\n    }\n    bVar18 = *0x450678 < puVar10;\n    arg_8h = *0x450678;\n    while ((bVar18 && ((arg_8h[1] & var_8h | *arg_8h & uVar16) == 0))) {\n        arg_8h = arg_8h + 5;\n        bVar18 = arg_8h < puVar10;\n    }\n    puVar14 = *0x450670;\n    if (arg_8h == puVar10) {\n        for (; (puVar14 < *0x450678 && ((puVar14[1] & var_8h | *puVar14 & uVar16) == 0)); puVar14 = puVar14 + 5) {\n        }\n        arg_8h = puVar14;\n        if (puVar14 == *0x450678) {\n            for (; (puVar14 < puVar10 && (puVar14[2] == 0)); puVar14 = puVar14 + 5) {\n            }\n            puVar15 = *0x450670;\n            arg_8h = puVar14;\n            if (puVar14 == puVar10) {\n                for (; (puVar15 < *0x450678 && (puVar15[2] == 0)); puVar15 = puVar15 + 5) {\n                }\n                arg_8h = puVar15;\n                if ((puVar15 == *0x450678) && (arg_8h = fcn.0040dbab(),  arg_8h == NULL)) {\n                    return NULL;\n                }\n            }\n            uVar6 = fcn.0040dc62(arg_8h);\n            *arg_8h[4] = uVar6;\n            if (*arg_8h[4] == -1) {\n                return NULL;\n            }\n        }\n    }\n    piVar5 = arg_8h[4];\n    var_4h = *piVar5;\n    if ((var_4h == -1) || ((piVar5[var_4h + 0x31] & var_8h | piVar5[var_4h + 0x11] & uVar16) == 0)) {\n        var_4h = 0;\n        puVar10 = piVar5 + 0x11;\n        uVar12 = piVar5[0x31] & var_8h | *puVar10 & uVar16;\n        while (uVar12 == 0) {\n            puVar14 = puVar10 + 0x21;\n            var_4h = var_4h + 1;\n            puVar10 = puVar10 + 1;\n            uVar12 = *puVar14 & var_8h | *puVar10 & uVar16;\n        }\n    }\n    piVar3 = piVar5 + var_4h * 0x81 + 0x51;\n    iVar9 = 0;\n    uVar16 = piVar5[var_4h + 0x11] & uVar16;\n    if (uVar16 == 0) {\n        uVar16 = piVar5[var_4h + 0x31] & var_8h;\n        iVar9 = 0x20;\n    }\n    for (; -1 < uVar16; uVar16 = uVar16 << 1) {\n        iVar9 = iVar9 + 1;\n    }\n    piVar13 = piVar3[iVar9 * 2 + 1];\n    iVar11 = *piVar13 - uVar8;\n    iVar17 = (iVar11 >> 4) + -1;\n    if (0x3f < iVar17) {\n        iVar17 = 0x3f;\n    }\n    *0x450678 = arg_8h;\n    if (iVar17 != iVar9) {\n        if (piVar13[1] == piVar13[2]) {\n            if (iVar9 < 0x20) {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 & 0x1f));\n                piVar5[var_4h + 0x11] = uVar16 & piVar5[var_4h + 0x11];\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    *arg_8h = *arg_8h & uVar16;\n                }\n            }\n            else {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 - 0x20 & 0x1f));\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] & uVar16;\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar16;\n                }\n            }\n        }\n        *(piVar13[2] + 4) = piVar13[1];\n        *(piVar13[1] + 8) = piVar13[2];\n        if (iVar11 == 0) goto code_r0x0040e300;\n        piVar1 = piVar3 + iVar17 * 2;\n        iVar9 = piVar1[1];\n        piVar13[2] = piVar1;\n        piVar13[1] = iVar9;\n        piVar1[1] = piVar13;\n        *(piVar13[1] + 8) = piVar13;\n        if (piVar13[1] == piVar13[2]) {\n            cVar4 = *(iVar17 + 4 + piVar5);\n            *(iVar17 + 4 + piVar5) = cVar4 + '\\x01';\n            uVar7 = iVar17;\n            if (iVar17 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar7 & 0x1f);\n                }\n                piVar5[var_4h + 0x11] = piVar5[var_4h + 0x11] | 0x80000000U >> (uVar7 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n                }\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n            }\n        }\n    }\n    if (iVar11 != 0) {\n        *piVar13 = iVar11;\n        *(iVar11 + -4 + piVar13) = iVar11;\n    }\ncode_r0x0040e300:\n    piVar13 = piVar13 + iVar11;\n    *piVar13 = uVar8 + 1;\n    *(piVar13 + (uVar8 - 4)) = uVar8 + 1;\n    iVar9 = *piVar3;\n    *piVar3 = iVar9 + 1;\n    if (((iVar9 == 0) && (arg_8h == *0x450668)) && (var_4h == *0x450680)) {\n        *0x450668 = NULL;\n    }\n    *piVar5 = var_4h;\n    return piVar13 + 1;\n}\n",
        "token_count": 2085
    },
    "0040e35e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040e35e(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedExchange;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(*(in_FS_OFFSET + 0x18) + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(*(in_FS_OFFSET + 0x18) + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 != 0xffffffff) && (uVar10 <= *puVar5)) {\n            return 0;\n        }\n        if (puVar5[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar5 = puVar5 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar4[-2],  puVar1 < var_4h || (puVar4 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar12 = 0;\n    if (0 < *0x44f1b0) {\n        do {\n            if (*(iVar12 * 4 + 0x44f1b8) == uVar10) {\n                if (iVar12 < 1) {\n                    return 1;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x44f1f8, 1);\n                if (iVar7 != 0) {\n                    return 1;\n                }\n                if (*(iVar12 * 4 + 0x44f1b8) == uVar10) goto code_r0x0040e559;\n                iVar12 = *0x44f1b0 + -1;\n                if (iVar12 < 0) goto code_r0x0040e547;\n                goto code_r0x0040e537;\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < *0x44f1b0);\n    }\n    iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(puVar8, &lpBuffer, 0x1c);\n    if (iVar12 == 0) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar6 = *(var_1ch + 0x1e) + var_1ch,  *piVar6 != 0x4550)) ||\n           (*(piVar6 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar6 + 5);\n        if (*(piVar6 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar6 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar6 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar6 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x44f1f8, 1);\n    iVar12 = *0x44f1b0;\n    if (iVar7 != 0) {\n        return 1;\n    }\n    iVar7 = *0x44f1b0;\n    if (0 < *0x44f1b0) {\n        puVar8 = *0x44f1b0 * 4 + 0x44f1b4;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar7 = iVar7 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar7);\n    }\n    if (iVar7 == 0) {\n        iVar7 = 0xf;\n        if (*0x44f1b0 < 0x10) {\n            iVar7 = *0x44f1b0;\n        }\n        iVar11 = 0;\n        if (-1 < iVar7) {\n            do {\n                puVar8 = iVar11 * 4 + 0x44f1b8;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar7);\n        }\n        if (iVar12 < 0x10) {\n            *0x44f1b0 = iVar12 + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x44f1f8, 0);\n    return 1;\n    while (iVar12 = iVar12 + -1,  -1 < iVar12) {\ncode_r0x0040e537:\n        if (*(iVar12 * 4 + 0x44f1b8) == uVar10) break;\n    }\n    if (iVar12 < 0) {\ncode_r0x0040e547:\n        if (*0x44f1b0 < 0x10) {\n            *0x44f1b0 = *0x44f1b0 + 1;\n        }\n        iVar12 = *0x44f1b0 + -1;\n    }\n    else if (iVar12 == 0) goto code_r0x0040e571;\ncode_r0x0040e559:\n    iVar7 = 0;\n    if (-1 < iVar12) {\n        do {\n            puVar8 = iVar7 * 4 + 0x44f1b8;\n            uVar9 = *puVar8;\n            iVar7 = iVar7 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar7 <= iVar12);\n    }\ncode_r0x0040e571:\n    (*pcVar3)(0x44f1f8, 0);\n    return 1;\n}\n",
        "token_count": 1690
    },
    "0040e587": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040e587(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    iVar1 = *(unaff_ESI + 4);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != '\\0')) {\n        if ((iVar1 != *(unaff_EDI + 4)) && (iVar1 = fcn.00410a50(iVar1 + 8, *(unaff_EDI + 4) + 8),  iVar1 != 0)) {\n            return 0;\n        }\n        if (((((*unaff_EDI & 2) != 0) && ((*unaff_ESI & 8) == 0)) || (((*param_1 & 1) != 0 && ((*unaff_ESI & 1) == 0))))\n           || (((*param_1 & 2) != 0 && ((*unaff_ESI & 2) == 0)))) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 244
    },
    "0040e5f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e5f4(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441978, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    iVar5 = *(iVar1 + 8);\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar2 = fcn.0040ee57();\n    *(iVar2 + 0x84) = *(iVar2 + 0x84) + 1;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 0x10);\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar2 + 4) <= iVar5)) {\n            fcn.0040f133();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar2 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar1 + 8) = iVar5;\n            fcn.0040f160(*(*(iVar2 + 8) + 4 + iVar3), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040e6a7();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040f133();\n    }\n    *(iVar1 + 8) = iVar5;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 536
    },
    "0040e6a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e6a7(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    if (0 < *(iVar1 + 0x84)) {\n        iVar1 = fcn.0040ee57();\n        *(iVar1 + 0x84) = *(iVar1 + 0x84) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040e707": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e707(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *param_1 + in_EAX;\n    if (-1 < param_1[1]) {\n        iVar1 = iVar1 + *(*(param_1[1] + in_EAX) + param_1[2]) + param_1[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "0040e87b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040e87b(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x38);\n    fcn.0040ad53(*(unaff_EBP + -0x3c));\n    iVar1 = fcn.0040ee57();\n    *(iVar1 + 0x7c) = *(unaff_EBP + -0x40);\n    iVar1 = fcn.0040ee57();\n    *(iVar1 + 0x80) = *(unaff_EBP + -0x44);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || (unaff_ESI[5] == 0x19930521)))) &&\n       ((*(unaff_EBP + -0x48) == 0 && (*(unaff_EBP + -0x20) != 0)))) {\n        iVar1 = fcn.0040ad32(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040a88a();\n            fcn.0040e6c2(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0040e8ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e8ea(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint uVar5;\n    uint8_t *extraout_ECX;\n    int32_t *extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    fcn.0040c534(0x4419b8, 8);\n    puVar1 = *(unaff_EBP + 0xc);\n    iVar4 = *(unaff_EBP + 8);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && ((*(puVar1 + 3) & 0x80) == 0))))\n    goto code_r0x0040ea54;\n    uVar2 = *puVar1;\n    arg_8h_00 = extraout_EDX;\n    if (-1 < uVar2) {\n        arg_8h_00 = puVar1[2] + 0xc + extraout_EDX;\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = *(iVar4 + 0x18);\n    if ((uVar2 & 8) == 0) {\n        if ((*extraout_ECX & 1) == 0) {\n            if (*(extraout_ECX + 0x18) == 0) {\n                iVar4 = fcn.00413724(uVar5, 1);\n                if ((iVar4 == 0) || (iVar4 = fcn.00413740(arg_8h_00, 1),  iVar4 == 0)) {\ncode_r0x0040ea4b:\n                    fcn.0040f133();\n                }\n                else {\n                    uVar5 = *(extraout_ECX + 0x14);\n                    arg_ch_00 = fcn.0040e707();\n                    fcn.0040b6d0(arg_8h_00, arg_ch_00, uVar5);\n                }\n            }\n            else {\n                iVar4 = fcn.00413724(uVar5, 1);\n                if (((iVar4 == 0) || (iVar4 = fcn.00413740(arg_8h_00, 1),  iVar4 == 0)) ||\n                   (iVar4 = fcn.0041375c(*(extraout_ECX + 0x18)),  iVar4 == 0)) goto code_r0x0040ea4b;\n                if ((*extraout_ECX & 4) == 0) {\n                    uVar5 = fcn.0040e707();\n                    fcn.0040aa4d(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n                else {\n                    uVar5 = fcn.0040e707(1);\n                    fcn.0040aa4d(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n            }\n        }\n        else {\n            iVar3 = fcn.00413724(uVar5, 1);\n            if ((iVar3 == 0) || (iVar3 = fcn.00413740(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040ea4b;\n            fcn.0040b6d0(arg_8h_00, *(iVar4 + 0x18), *(extraout_ECX + 0x14));\n            if ((*(extraout_ECX + 0x14) == 4) && (*arg_8h_00 != 0)) goto code_r0x0040e963;\n        }\n    }\n    else {\n        iVar3 = fcn.00413724(uVar5, 1);\n        if ((iVar3 == 0) || (iVar3 = fcn.00413740(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040ea4b;\n        *arg_8h_00 = *(iVar4 + 0x18);\ncode_r0x0040e963:\n        iVar4 = fcn.0040e707();\n        *arg_8h_00 = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x0040ea54:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1049
    },
    "0040ea66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ea66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (in_ECX != 0) {\n        fcn.0040e8ea(arg_8h, unaff_EBX);\n    }\n    if (arg_1ch == 0) {\n        arg_1ch = unaff_ESI;\n    }\n    fcn.0040aa54(arg_1ch, arg_8h);\n    fcn.0040e5f4(unaff_ESI, arg_10h, arg_14h, *unaff_EDI);\n    *(unaff_ESI + 8) = unaff_EDI[1] + 1;\n    iVar1 = fcn.0040e726(arg_8h, unaff_ESI, arg_ch, arg_14h, arg_18h, 0x100);\n    if (iVar1 != 0) {\n        fcn.0040aa1d(iVar1);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0040eacd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040eacd(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_00000024;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*arg_8h != -0x7ffffffd) &&\n       (((iVar1 = fcn.0040ee57(),  *(iVar1 + 0x74) == 0 ||\n         (iVar1 = fcn.0040ab17(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h, unaff_ESI, var_8h, var_4h, \n                               unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                               arg_24h, in_stack_00000024),  iVar1 == 0)) &&\n        (piVar2 = fcn.0040ac90(arg_18h, arg_20h, arg_1ch, &var_4h, &var_8h),  var_4h < var_8h)))) {\n        do {\n            if (((*piVar2 <= arg_1ch) && (arg_1ch <= piVar2[1])) &&\n               ((iVar1 = *(piVar2[3] * 0x10 + piVar2[4] + -0xc),  iVar1 == 0 || (*(iVar1 + 8) == '\\0')))) {\n                fcn.0040ea66(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n            }\n            var_4h = var_4h + 1;\n            piVar2 = piVar2 + 5;\n        } while (var_4h < var_8h);\n    }\n    return;\n}\n",
        "token_count": 549
    },
    "0040eb8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040eb8b(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_1ch = *(arg_ch + 8);\n    _auStack8 = auStack8;\n    if ((var_1ch < -1) || (*(arg_18h + 4) <= var_1ch)) {\n        fcn.0040f133();\n    }\n    if (*arg_8h == -0x1f928c9d) {\n        if ((arg_8h[4] == 3) && (((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)) && (arg_8h[7] == 0)))) {\n            iVar2 = fcn.0040ee57();\n            if (*(iVar2 + 0x7c) == 0) {\n                return;\n            }\n            iVar2 = fcn.0040ee57();\n            arg_8h = *(iVar2 + 0x7c);\n            iVar2 = fcn.0040ee57();\n            arg_10h = *(iVar2 + 0x80);\n            _auStack8 = CONCAT13(1, auStack8);\n            iVar2 = fcn.00413724(arg_8h, 1);\n            if (iVar2 == 0) {\n                fcn.0040f133();\n            }\n            if (*arg_8h != -0x1f928c9d) goto code_r0x0040ed64;\n            if (((arg_8h[4] == 3) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)))) && (arg_8h[7] == 0)) {\n                fcn.0040f133();\n            }\n        }\n        iVar2 = var_1ch;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521))))\n        {\n            piVar3 = fcn.0040ac90(arg_18h, arg_20h, var_1ch, &var_ch, &var_20h);\n            var_8h = piVar3;\n            if (var_ch < var_20h) {\n                do {\n                    if ((*piVar3 == iVar2 || *piVar3 < iVar2) && (iVar2 <= piVar3[1])) {\n                        var_8h = piVar3;\n                        for (var_18h = piVar3[3]; 0 < var_18h; var_18h = var_18h + -1) {\n                            var_10h = *(arg_8h[7] + 0xc);\n                            for (var_14h = *var_10h; var_10h = var_10h + 1,  0 < var_14h; var_14h = var_14h + -1) {\n                                iVar2 = fcn.0040e587(arg_8h[7]);\n                                piVar3 = var_8h;\n                                if (iVar2 != 0) {\n                                    fcn.0040ea66(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n                                    goto code_r0x0040ed37;\n                                }\n                            }\n                        }\n                    }\ncode_r0x0040ed37:\n                    var_ch = var_ch + 1;\n                    piVar3 = piVar3 + 5;\n                    iVar2 = var_1ch;\n                    var_8h = piVar3;\n                } while (var_ch < var_20h);\n            }\n            if (arg_1ch == '\\0') {\n                return;\n            }\n            fcn.0040e6c2(arg_8h);\n            return;\n        }\n    }\ncode_r0x0040ed64:\n    if (arg_1ch == '\\0') {\n        fcn.0040eacd(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, var_1ch, arg_20h, arg_24h);\n        return;\n    }\n    fcn.0040c534(0x441a10, 8);\n    iVar2 = fcn.0040ee57();\n    if (*(iVar2 + 0x6c) != 0) {\n        _auStack8 = 0;\n        iVar2 = fcn.0040ee57();\n        (**(iVar2 + 0x6c))();\n        _auStack8 = 0xffffffff;\n    }\n    fcn.0040fddc(10);\n    fcn.0041535c(0x16);\n    fcn.0040c2be(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1293
    },
    "0040ed8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ed8f(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    uint uVar1;\n    \n    if ((*arg_18h & 0x1fffffff) != 0x19930520) {\n        fcn.0040f133();\n    }\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        if (arg_18h[3] != 0) {\n            if (((*arg_8h == -0x1f928c9d) && (0x19930520 < arg_8h[5])) && (*(arg_8h[7] + 8) != NULL)) {\n                uVar1 = (**(arg_8h[7] + 8))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff)\n                ;\n                return uVar1;\n            }\n            fcn.0040eb8b(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n        }\n    }\n    else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n        fcn.0040e5f4(arg_ch, arg_14h, arg_18h, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 383
    },
    "0040ee3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ee3a(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    if (*0x44c338 != -1) {\n        (**0x44f208)(*0x44c338);\n        *0x44c338 = -1;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    piVar2 = 0x44c210;\n    do {\n        arg_8h = *piVar2;\n        if ((arg_8h != 0) && (piVar2[1] != 1)) {\n            (*pcVar1)(arg_8h);\n            fcn.0040a68c(arg_8h);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44c330);\n    piVar2 = 0x44c210;\n    do {\n        if ((*piVar2 != 0) && (piVar2[1] == 1)) {\n            (*pcVar1)(*piVar2);\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44c330);\n    return;\n}\n",
        "token_count": 288
    },
    "0040f00f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040f00f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0040d631();\n    if (iVar2 == 0) {\n        fcn.0040ee3a();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 != 0) {\n        *0x44f1fc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"FlsAlloc\");\n        *0x44f200 = (*pcVar1)(iVar2, \"FlsGetValue\");\n        *0x44f204 = (*pcVar1)(iVar2, \"FlsSetValue\");\n        *0x44f208 = (*pcVar1)(iVar2, \"FlsFree\");\n        if (*0x44f200 == 0) {\n            *0x44f200 = _sym.imp.KERNEL32.dll_TlsGetValue;\n            *0x44f204 = _sym.imp.KERNEL32.dll_TlsSetValue;\n            *0x44f1fc = 0x40ee31;\n            *0x44f208 = _sym.imp.KERNEL32.dll_TlsFree;\n        }\n    }\n    *0x44c338 = (**0x44f1fc)(0x40eec8);\n    if (((*0x44c338 != -1) && (puVar3 = fcn.0040bfe0(1, 0x8c),  puVar3 != NULL)) &&\n       (iVar2 = (**0x44f204)(*0x44c338, puVar3),  iVar2 != 0)) {\n        puVar3[0x15] = 0x44c428;\n        puVar3[5] = 1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar3[1] = 0xffffffff;\n        *puVar3 = uVar4;\n        return 1;\n    }\n    fcn.0040ee3a();\n    return 0;\n}\n",
        "token_count": 493
    },
    "0040f24d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f24d(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00413b9a(&var_8h, arg_10h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n        return;\n    }\n    fcn.00413bd7(&arg_8h, arg_10h);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 145
    },
    "0040f2a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f2a8(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    \n    if (arg_10h != '\\0') {\n        fcn.0040f28b();\n    }\n    if (*in_EAX == 0x2d) {\n        *unaff_EBX = 0x2d;\n        unaff_EBX = unaff_EBX + 1;\n    }\n    puVar1 = unaff_EBX;\n    if (0 < arg_8h) {\n        puVar1 = unaff_EBX + 1;\n        *unaff_EBX = *puVar1;\n        *puVar1 = *0x44c7b4;\n    }\n    puVar1 = fcn.00412280(puVar1 + arg_8h + (arg_10h == '\\0'), \"e+000\");\n    if (arg_ch != 0) {\n        *puVar1 = 0x45;\n    }\n    if (*in_EAX[3] != '0') {\n        iVar2 = in_EAX[1] + -1;\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n            puVar1[1] = 0x2d;\n        }\n        if (99 < iVar2) {\n            iVar3 = iVar2 / 100;\n            iVar2 = iVar2 % 100;\n            puVar1[2] = puVar1[2] + iVar3;\n        }\n        if (9 < iVar2) {\n            iVar3 = iVar2 / 10;\n            iVar2 = iVar2 % 10;\n            puVar1[3] = puVar1[3] + iVar3;\n        }\n        puVar1[4] = puVar1[4] + iVar2;\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "0040f3c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040f3c2(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uchar *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n        iVar2 = *in_EAX;\n        arg_8h[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n        (arg_8h + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n    }\n    puVar3 = arg_8h;\n    if (*in_EAX == 0x2d) {\n        *arg_8h = 0x2d;\n        puVar3 = arg_8h + 1;\n    }\n    if (in_EAX[1] < 1) {\n        fcn.0040f28b();\n        *puVar3 = 0x30;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        puVar3 = puVar3 + in_EAX[1];\n    }\n    if (0 < arg_ch) {\n        fcn.0040f28b();\n        *puVar3 = *0x44c7b4;\n        iVar1 = in_EAX[1];\n        if (iVar1 < 0) {\n            if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                arg_ch = -iVar1;\n            }\n            fcn.0040f28b();\n            fcn.0040b220(puVar3 + 1, 0x30, arg_ch);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 434
    },
    "0040fddc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040fddc(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uchar auStack272 [260];\n    uchar uStack12;\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x44c390)) break;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x13);\n    if (param_1 == *(uVar1 * 8 + 0x44c390)) {\n        if ((*0x44f004 == 1) || ((*0x44f004 == 0 && (*0x44bf74 == 1)))) {\n            uStack288 = 0;\n            puStack292 = &stack0x00000004;\n            uStack296 = *(uVar1 * 8 + 0x44c394);\n            uStack296 = fcn.0040be00();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (param_1 != 0xfc) {\n            uStack288 = 0x104;\n            puStack292 = &stack0xfffffef0;\n            uStack296 = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.00412280();\n            }\n            iVar2 = fcn.0040be00();\n            if (0x3c < iVar2 + 1U) {\n                fcn.0040be00();\n                fcn.004143b0();\n            }\n            fcn.0040be00();\n            fcn.0040be00();\n            fcn.0040a9e0();\n            fcn.00412280();\n            fcn.00412290();\n            fcn.00412290();\n            fcn.00412290();\n            fcn.004142a8(&stack0xfffffed8, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n        }\n    }\n    uStack288 = 0x40ff48;\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 538
    },
    "0040ff8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ff8c(int32_t arg_8h, uint ExceptionInfo)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = fcn.0040ee57();\n    piVar1 = *(iVar4 + 0x54);\n    piVar7 = piVar1;\n    do {\n        if (*piVar7 == arg_8h) break;\n        piVar7 = piVar7 + 3;\n    } while (piVar7 < piVar1 + *0x44c4ac * 3);\n    if ((piVar1 + *0x44c4ac * 3 <= piVar7) || (*piVar7 != arg_8h)) {\n        piVar7 = NULL;\n    }\n    if ((piVar7 == NULL) || (pcVar2 = piVar7[2],  pcVar2 == NULL)) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    }\n    else if (pcVar2 == 0x5) {\n        piVar7[2] = 0;\n        uVar5 = 1;\n    }\n    else {\n        if (pcVar2 != 0x1) {\n            uVar5 = *(iVar4 + 0x58);\n            *(iVar4 + 0x58) = ExceptionInfo;\n            if (piVar7[1] == 8) {\n                if (*0x44c4a0 < *0x44c4a4 + *0x44c4a0) {\n                    iVar6 = *0x44c4a0 * 0xc;\n                    iVar8 = *0x44c4a0;\n                    do {\n                        *(iVar6 + 8 + *(iVar4 + 0x54)) = 0;\n                        iVar8 = iVar8 + 1;\n                        iVar6 = iVar6 + 0xc;\n                    } while (iVar8 < *0x44c4a4 + *0x44c4a0);\n                }\n                iVar8 = *piVar7;\n                uVar3 = *(iVar4 + 0x5c);\n                if (iVar8 == -0x3fffff72) {\n                    *(iVar4 + 0x5c) = 0x83;\n                }\n                else if (iVar8 == -0x3fffff70) {\n                    *(iVar4 + 0x5c) = 0x81;\n                }\n                else if (iVar8 == -0x3fffff6f) {\n                    *(iVar4 + 0x5c) = 0x84;\n                }\n                else if (iVar8 == -0x3fffff6d) {\n                    *(iVar4 + 0x5c) = 0x85;\n                }\n                else if (iVar8 == -0x3fffff73) {\n                    *(iVar4 + 0x5c) = 0x82;\n                }\n                else if (iVar8 == -0x3fffff71) {\n                    *(iVar4 + 0x5c) = 0x86;\n                }\n                else if (iVar8 == -0x3fffff6e) {\n                    *(iVar4 + 0x5c) = 0x8a;\n                }\n                (*pcVar2)(8, *(iVar4 + 0x5c));\n                *(iVar4 + 0x5c) = uVar3;\n            }\n            else {\n                piVar7[2] = 0;\n                (*pcVar2)(piVar7[1]);\n            }\n            *(iVar4 + 0x58) = uVar5;\n        }\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 869
    },
    "00410214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410214(uint8_t **arg_8h, int32_t *arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint8_t *in_ECX;\n    uint32_t uVar6;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *unaff_ESI = 0;\n    *arg_ch = 1;\n    if (arg_8h != NULL) {\n        *arg_8h = in_ECX;\n        arg_8h = arg_8h + 1;\n    }\n    do {\n        if (*in_EAX == 0x22) {\n            bVar1 = !bVar1;\n            puVar3 = in_EAX + 1;\n            uVar5 = 0x22;\n        }\n        else {\n            *unaff_ESI = *unaff_ESI + 1;\n            if (in_ECX != NULL) {\n                *in_ECX = *in_EAX;\n                in_ECX = in_ECX + 1;\n            }\n            uVar5 = *in_EAX;\n            puVar3 = in_EAX + 1;\n            if ((*(uVar5 + 0x4506a1) & 4) != 0) {\n                *unaff_ESI = *unaff_ESI + 1;\n                if (in_ECX != NULL) {\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar3 = in_EAX + 2;\n            }\n            if (uVar5 == 0) {\n                puVar3 = puVar3 + -1;\n                goto code_r0x0041028d;\n            }\n        }\n        in_EAX = puVar3;\n    } while ((bVar1) || ((uVar5 != 0x20 && (uVar5 != 9))));\n    if (in_ECX != NULL) {\n        in_ECX[-1] = 0;\n    }\ncode_r0x0041028d:\n    bVar1 = false;\n    while (*puVar3 != 0) {\n        for (; (*puVar3 == 0x20 || (*puVar3 == 9)); puVar3 = puVar3 + 1) {\n        }\n        if (*puVar3 == 0) break;\n        if (arg_8h != NULL) {\n            *arg_8h = in_ECX;\n            arg_8h = arg_8h + 1;\n        }\n        *arg_ch = *arg_ch + 1;\n        while( true ) {\n            bVar2 = true;\n            uVar6 = 0;\n            for (; *puVar3 == 0x5c; puVar3 = puVar3 + 1) {\n                uVar6 = uVar6 + 1;\n            }\n            if (*puVar3 == 0x22) {\n                puVar4 = puVar3;\n                if ((uVar6 & 1) == 0) {\n                    if ((!bVar1) || (puVar4 = puVar3 + 1,  *puVar4 != 0x22)) {\n                        bVar2 = false;\n                        puVar4 = puVar3;\n                    }\n                    bVar1 = !bVar1;\n                }\n                uVar6 = uVar6 >> 1;\n                puVar3 = puVar4;\n            }\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                if (in_ECX != NULL) {\n                    *in_ECX = 0x5c;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            uVar5 = *puVar3;\n            if ((uVar5 == 0) || ((!bVar1 && ((uVar5 == 0x20 || (uVar5 == 9)))))) break;\n            if (bVar2) {\n                if (in_ECX == NULL) {\n                    if ((*(uVar5 + 0x4506a1) & 4) != 0) {\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                }\n                else {\n                    if ((*(uVar5 + 0x4506a1) & 4) != 0) {\n                        *in_ECX = uVar5;\n                        in_ECX = in_ECX + 1;\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            puVar3 = puVar3 + 1;\n        }\n        if (in_ECX != NULL) {\n            *in_ECX = 0;\n            in_ECX = in_ECX + 1;\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = NULL;\n    }\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 1216
    },
    "00410544": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00410544(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uchar auStack68 [46];\n    int16_t iStack22;\n    int32_t *piStack20;\n    \n    puVar3 = fcn.0040a67a(0x480);\n    if (puVar3 == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        *0x450544 = 0x20;\n        *0x450560 = puVar3;\n        for (; puVar3 < *0x450560 + 0x120; puVar3 = puVar3 + 9) {\n            *puVar3 = 0xffffffff;\n            puVar3[2] = 0;\n            *(puVar3 + 1) = 0;\n            *(puVar3 + 5) = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack68);\n        if ((iStack22 != 0) && (piStack20 != NULL)) {\n            iVar8 = *piStack20;\n            piStack20 = piStack20 + 1;\n            piVar9 = iVar8 + piStack20;\n            if (0x7ff < iVar8) {\n                iVar8 = 0x800;\n            }\n            iVar6 = iVar8;\n            if (*0x450544 < iVar8) {\n                puVar3 = 0x450564;\n                do {\n                    puVar5 = fcn.0040a67a(0x480);\n                    iVar6 = *0x450544;\n                    if (puVar5 == NULL) break;\n                    *0x450544 = *0x450544 + 0x20;\n                    *puVar3 = puVar5;\n                    puVar2 = puVar5;\n                    for (; puVar5 < puVar2 + 0x120; puVar5 = puVar5 + 9) {\n                        *puVar5 = 0xffffffff;\n                        puVar5[2] = 0;\n                        *(puVar5 + 1) = 0;\n                        *(puVar5 + 5) = 10;\n                        puVar2 = *puVar3;\n                    }\n                    puVar3 = puVar3 + 1;\n                    iVar6 = iVar8;\n                } while (*0x450544 < iVar8);\n            }\n            uVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    if (((*piVar9 != -1) && ((*piStack20 & 1) != 0)) &&\n                       (((*piStack20 & 8) != 0 || (iVar8 = (*_sym.imp.KERNEL32.dll_GetFileType)(*piVar9),  iVar8 != 0)))\n                       ) {\n                        piVar1 = *((uVar7 >> 5) * 4 + 0x450560) + (uVar7 & 0x1f) * 0x24;\n                        *piVar1 = *piVar9;\n                        *(piVar1 + 1) = *piStack20;\n                        iVar8 = fcn.00413699(piVar1 + 3, 4000);\n                        if (iVar8 == 0) {\n                            return 0xffffffff;\n                        }\n                        piVar1[2] = piVar1[2] + 1;\n                    }\n                    piVar9 = piVar9 + 1;\n                    uVar7 = uVar7 + 1;\n                    piStack20 = piStack20 + 1;\n                } while (uVar7 < iVar6);\n            }\n        }\n        iVar8 = 0;\n        do {\n            piVar9 = *0x450560 + iVar8 * 9;\n            if (*piVar9 == -1) {\n                *(piVar9 + 1) = 0x81;\n                if (iVar8 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar8 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(iVar6);\n                if ((iVar6 == -1) || (uVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar6),  uVar7 == 0)) {\n                    *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                }\n                else {\n                    *piVar9 = iVar6;\n                    if ((uVar7 & 0xff) == 2) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                    }\n                    else if ((uVar7 & 0xff) == 3) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 8;\n                    }\n                    iVar6 = fcn.00413699(piVar9 + 3, 4000);\n                    if (iVar6 == 0) {\n                        return 0xffffffff;\n                    }\n                    piVar9[2] = piVar9[2] + 1;\n                }\n            }\n            else {\n                *(piVar9 + 1) = *(piVar9 + 1) | 0x80;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < 3);\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(*0x450544);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1250
    },
    "00410cb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00410cb6(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_EDI;\n    \n    if (((*(unaff_EDI + 0xc) & 0x40) == 0) || (*(unaff_EDI + 8) != 0)) {\n        do {\n            if (param_1 < 1) {\n                return;\n            }\n            param_1 = param_1 + -1;\n            fcn.00410c5f();\n        } while (*in_EAX != -1);\n    }\n    else {\n        *in_EAX = *in_EAX + param_1;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00410ced": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410ced(uint param_1, uint8_t *param_2, int32_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    char *arg_ch;\n    bool bVar11;\n    int64_t iVar12;\n    int32_t *piStack600;\n    int32_t *piStack596;\n    int32_t iStack588;\n    int32_t iStack584;\n    uint uStack580;\n    int32_t iStack576;\n    int32_t iStack572;\n    int32_t *piStack568;\n    int32_t iStack564;\n    int32_t *piStack560;\n    int32_t iStack556;\n    uchar uStack552;\n    char cStack551;\n    int32_t iStack548;\n    int32_t iStack544;\n    int32_t *piStack540;\n    int32_t *piStack536;\n    uint32_t uStack532;\n    int32_t aiStack528 [127];\n    uint uStack17;\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    iStack544 = 0;\n    iStack548 = 0;\n    piStack568 = NULL;\n    uVar10 = *param_2;\n    iVar7 = 0;\n    puVar2 = param_2;\n    ppiVar3 = param_3;\n    do {\n        if ((uVar10 == 0) || (param_2 = puVar2 + 1,  iStack548 < 0)) {\n            fcn.0040bcd7();\n            return;\n        }\n        if ((uVar10 < ' ') || ('x' < uVar10)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(uVar10 + 0x442248) & 0xf;\n        }\n        iStack584 = *(iVar7 + 0x442268 + uVar5 * 8) >> 4;\n        param_3 = ppiVar3;\n    // switch table (8 cases) at 0x4114c7\n        switch(iStack584) {\n        case 0:\ncode_r0x00410f09:\n            iStack564 = 0;\n            if ((*(*0x44ca70 + 1 + uVar10 * 2) & 0x80) != 0) {\n                fcn.00410c5f();\n                param_2 = puVar2 + 2;\n            }\n            fcn.00410c5f();\n            break;\n        case 1:\n            piStack536 = 0xffffffff;\n            uStack580 = 0;\n            iStack572 = 0;\n            piStack560 = NULL;\n            iStack556 = 0;\n            uStack532 = 0;\n            iStack564 = 0;\n            break;\n        case 2:\n            if (uVar10 == 0x20) {\n                uStack532 = uStack532 | 2;\n            }\n            else if (uVar10 == 0x23) {\n                uStack532 = uStack532 | 0x80;\n            }\n            else if (uVar10 == 0x2b) {\n                uStack532 = uStack532 | 1;\n            }\n            else if (uVar10 == 0x2d) {\n                uStack532 = uStack532 | 4;\n            }\n            else if (uVar10 == 0x30) {\n                uStack532 = uStack532 | 8;\n            }\n            break;\n        case 3:\n            if (uVar10 == 0x2a) {\n                piStack560 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack560 < 0) {\n                    uStack532 = uStack532 | 4;\n                    piStack560 = -piStack560;\n                }\n            }\n            else {\n                piStack560 = uVar10 + -0x30 + piStack560 * 10;\n            }\n            break;\n        case 4:\n            piStack536 = NULL;\n            break;\n        case 5:\n            if (uVar10 == 0x2a) {\n                piStack536 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack536 < 0) {\n                    piStack536 = 0xffffffff;\n                }\n            }\n            else {\n                piStack536 = uVar10 + -0x30 + piStack536 * 10;\n            }\n            break;\n        case 6:\n            if (uVar10 == 0x49) {\n                uVar1 = *param_2;\n                if ((uVar1 == 0x36) && (puVar2[2] == 0x34)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 | 0x8000;\n                }\n                else if ((uVar1 == 0x33) && (puVar2[2] == 0x32)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 & 0xffff7fff;\n                }\n                else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                         ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                    iStack584 = 0;\n                    goto code_r0x00410f09;\n                }\n            }\n            else if (uVar10 == 0x68) {\n                uStack532 = uStack532 | 0x20;\n            }\n            else if (uVar10 == 0x6c) {\n                uStack532 = uStack532 | 0x10;\n            }\n            else if (uVar10 == 0x77) {\n                uStack532 = uStack532 | 0x800;\n            }\n            break;\n        case 7:\n            if (uVar10 < 'h') {\n                if (uVar10 < 'e') {\n                    if (uVar10 < 'Y') {\n                        if (uVar10 != 0x58) {\n                            if (uVar10 == 0x43) {\n                                if ((uStack532 & 0x830) == 0) {\n                                    uStack532 = uStack532 | 0x800;\n                                }\n                                goto code_r0x00411012;\n                            }\n                            if ((uVar10 != 0x45) && (uVar10 != 0x47)) {\n                                if (uVar10 == 0x53) {\n                                    if ((uStack532 & 0x830) == 0) {\n                                        uStack532 = uStack532 | 0x800;\n                                    }\n                                    goto code_r0x00410f95;\n                                }\n                                goto code_r0x0041138a;\n                            }\n                            uStack580 = 1;\n                            uVar10 = uVar10 + 0x20;\n                            goto code_r0x00410fe6;\n                        }\ncode_r0x00411230:\n                        iStack576 = 7;\ncode_r0x00411233:\n                        iStack544 = 0x10;\n                        if ((uStack532 & 0x80) != 0) {\n                            cStack551 = iStack576 + 'Q';\n                            uStack552 = 0x30;\n                            iStack556 = 2;\n                        }\n                        goto code_r0x00411063;\n                    }\n                    if (uVar10 == 0x5a) {\n                        param_3 = ppiVar3 + 1;\n                        piVar8 = *ppiVar3;\n                        piVar6 = *0x44c4e0;\n                        piVar4 = *0x44c4e0;\n                        if ((piVar8 == NULL) || (piStack540 = piVar8[1],  piVar4 = *0x44c4e0,  piStack540 == NULL))\n                        goto code_r0x004111a4;\n                        iStack544 = *piVar8;\n                        if ((uStack532 & 0x800) == 0) {\n                            iStack564 = 0;\n                        }\n                        else {\n                            iStack544 = iStack544 / 2;\n                            iStack564 = 1;\n                        }\n                    }\n                    else if (uVar10 == 99) {\ncode_r0x00411012:\n                        if ((uStack532 & 0x810) == 0) {\n                            aiStack528[0]._0_1_ = *ppiVar3;\n                            iStack544 = 1;\n                        }\n                        else {\n                            iStack544 = fcn.00414c65(aiStack528, *ppiVar3);\n                            if (iStack544 < 0) {\n                                iStack572 = 1;\n                            }\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = aiStack528;\n                    }\n                    else if (uVar10 == 100) goto code_r0x00411058;\n                }\n                else {\ncode_r0x00410fe6:\n                    uStack532 = uStack532 | 0x40;\n                    piVar8 = aiStack528;\n                    piVar6 = aiStack528;\n                    if (piStack536 < 0) {\n                        piStack536 = 0x6;\n                    }\n                    else if (piStack536 == NULL) {\n                        if (uVar10 == 0x67) {\n                            piStack536 = 0x1;\n                        }\n                    }\n                    else {\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                        if ((0xa3 < piStack536) &&\n                           (piStack540 = aiStack528,  piStack568 = fcn.0040a67a(piStack536 + 0x15d), \n                           piVar8 = piStack568,  piVar6 = piStack568,  piStack568 == NULL)) {\n                            piStack536 = 0xa3;\n                            piVar8 = aiStack528;\n                            piVar6 = piStack540;\n                        }\n                    }\n                    piStack540 = piVar6;\n                    piStack600 = *ppiVar3;\n                    param_3 = ppiVar3 + 2;\n                    piStack596 = ppiVar3[1];\n                    (**0x44c340)(&piStack600, piVar8, uVar10, piStack536, uStack580);\n                    uVar5 = uStack532 & 0x80;\n                    if ((uVar5 != 0) && (piStack536 == NULL)) {\n                        (**0x44c34c)(piVar8);\n                    }\n                    if ((uVar10 == 0x67) && (uVar5 == 0)) {\n                        (**0x44c344)(piVar8);\n                    }\n                    piVar6 = piVar8;\n                    piVar4 = piStack540;\n                    if (*piVar8 == '-') {\n                        uStack532 = uStack532 | 0x100;\n                        piVar6 = piVar8 + 1;\n                        piVar4 = piVar8 + 1;\n                    }\ncode_r0x004111a4:\n                    piStack540 = piVar4;\n                    iStack544 = fcn.0040be00(piVar6);\n                }\ncode_r0x0041138a:\n                uVar5 = uStack532;\n                if (iStack572 == 0) {\n                    if ((uStack532 & 0x40) != 0) {\n                        if ((uStack532 & 0x100) == 0) {\n                            if ((uStack532 & 1) == 0) {\n                                if ((uStack532 & 2) == 0) goto code_r0x004113c2;\n                                uStack552 = 0x20;\n                            }\n                            else {\n                                uStack552 = 0x2b;\n                            }\n                        }\n                        else {\n                            uStack552 = 0x2d;\n                        }\n                        iStack556 = 1;\n                    }\ncode_r0x004113c2:\n                    arg_ch = piStack560 + (-iStack544 - iStack556);\n                    if ((uStack532 & 0xc) == 0) {\n                        fcn.00410c92(0x20, arg_ch, param_1);\n                    }\n                    fcn.00410cb6(iStack556);\n                    if (((uVar5 & 8) != 0) && ((uVar5 & 4) == 0)) {\n                        fcn.00410c92(0x30, arg_ch, param_1);\n                    }\n                    if ((iStack564 == 0) || (iStack544 < 1)) {\n                        fcn.00410cb6(iStack544);\n                    }\n                    else {\n                        iStack588 = iStack544;\n                        piVar8 = piStack540;\n                        do {\n                            iStack588 = iStack588 + -1;\n                            iVar7 = fcn.00414c65(&uStack17 + 1, *piVar8);\n                            piVar8 = piVar8 + 2;\n                            if (iVar7 < 1) break;\n                            fcn.00410cb6(iVar7);\n                        } while (iStack588 != 0);\n                    }\n                    if ((uStack532 & 4) != 0) {\n                        fcn.00410c92(0x20, arg_ch, param_1);\n                    }\n                }\n            }\n            else {\n                if (uVar10 == 0x69) {\ncode_r0x00411058:\n                    uStack532 = uStack532 | 0x40;\ncode_r0x0041105c:\n                    iStack544 = 10;\ncode_r0x00411063:\n                    if ((uStack532 & 0x8000) == 0) {\n                        param_3 = ppiVar3 + 1;\n                        if ((uStack532 & 0x20) == 0) {\n                            piVar8 = *ppiVar3;\n                            if ((uStack532 & 0x40) == 0) {\n                                piVar6 = NULL;\n                                goto code_r0x004112d4;\n                            }\n                        }\n                        else if ((uStack532 & 0x40) == 0) {\n                            piVar8 = *ppiVar3;\n                        }\n                        else {\n                            piVar8 = *ppiVar3;\n                        }\n                        piVar6 = piVar8 >> 0x1f;\n                    }\n                    else {\n                        piVar8 = *ppiVar3;\n                        piVar6 = ppiVar3[1];\n                        param_3 = ppiVar3 + 2;\n                    }\ncode_r0x004112d4:\n                    if ((((uStack532 & 0x40) != 0) && (piVar6 < 1)) && (piVar6 < 0)) {\n                        bVar11 = piVar8 != NULL;\n                        piVar8 = -piVar8;\n                        piVar6 = -(piVar6 + bVar11);\n                        uStack532 = uStack532 | 0x100;\n                    }\n                    if ((uStack532 & 0x8000) == 0) {\n                        piVar6 = NULL;\n                    }\n                    iVar12 = CONCAT44(piVar6, piVar8);\n                    if (piStack536 < 0) {\n                        piStack536 = 0x1;\n                    }\n                    else {\n                        uStack532 = uStack532 & 0xfffffff7;\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                    }\n                    if ((piVar8 | piVar6) == 0) {\n                        iStack556 = 0;\n                    }\n                    piVar8 = &uStack17;\n                    while( true ) {\n                        iVar7 = iVar12;\n                        piVar6 = piStack536 + -1;\n                        if ((piStack536 < 1) && (iVar12 == 0)) break;\n                        piStack536 = piVar6;\n                        iVar12 = fcn.00414b70();\n                        iVar9 = extraout_ECX + 0x30;\n                        if (0x39 < iVar9) {\n                            iVar9 = iVar9 + iStack576;\n                        }\n                        *piVar8 = iVar9;\n                        piVar8 = piVar8 + -1;\n                        iStack588 = iVar7;\n                    }\n                    iStack544 = &uStack17 + -piVar8;\n                    piStack540 = piVar8 + 1;\n                    piStack536 = piVar6;\n                    if (((uStack532 & 0x200) != 0) && ((*piStack540 != '0' || (iStack544 == 0)))) {\n                        *piVar8 = '0';\n                        iStack544 = &uStack17 + -piVar8 + 1;\n                        piStack540 = piVar8;\n                    }\n                    goto code_r0x0041138a;\n                }\n                if (uVar10 != 0x6e) {\n                    if (uVar10 == 0x6f) {\n                        iStack544 = 8;\n                        if ((uStack532 & 0x80) != 0) {\n                            uStack532 = uStack532 | 0x200;\n                        }\n                        goto code_r0x00411063;\n                    }\n                    if (uVar10 == 0x70) {\n                        piStack536 = 0x8;\n                        goto code_r0x00411230;\n                    }\n                    if (uVar10 == 0x73) {\ncode_r0x00410f95:\n                        piVar8 = piStack536;\n                        if (piStack536 == 0xffffffff) {\n                            piVar8 = 0x7fffffff;\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = *ppiVar3;\n                        if ((uStack532 & 0x810) == 0) {\n                            piVar6 = piStack540;\n                            if (piStack540 == NULL) {\n                                piVar6 = *0x44c4e0;\n                                piStack540 = *0x44c4e0;\n                            }\n                            for (; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != '\\0')); piVar6 = piVar6 + 1) {\n                            }\n                            iStack544 = piVar6 - piStack540;\n                        }\n                        else {\n                            if (piStack540 == NULL) {\n                                piStack540 = *0x44c4e4;\n                            }\n                            iStack564 = 1;\n                            for (piVar6 = piStack540; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != 0));\n                                piVar6 = piVar6 + 2) {\n                            }\n                            iStack544 = piVar6 - piStack540 >> 1;\n                        }\n                        goto code_r0x0041138a;\n                    }\n                    if (uVar10 != 0x75) {\n                        if (uVar10 != 0x78) goto code_r0x0041138a;\n                        iStack576 = 0x27;\n                        goto code_r0x00411233;\n                    }\n                    goto code_r0x0041105c;\n                }\n                param_3 = ppiVar3 + 1;\n                if ((uStack532 & 0x20) == 0) {\n                    **ppiVar3 = iStack548;\n                }\n                else {\n                    **ppiVar3 = iStack548;\n                }\n                iStack572 = 1;\n            }\n            if (piStack568 != NULL) {\n                fcn.0040a68c(piStack568);\n                piStack568 = NULL;\n            }\n        }\n        uVar10 = *param_2;\n        iVar7 = iStack584;\n        puVar2 = param_2;\n        ppiVar3 = param_3;\n    } while( true );\n}\n",
        "token_count": 4465
    },
    "004114fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.004114fd(uint arg_8h_2, uint arg_ch_2, uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    int32_t unaff_EBP;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    char *pcVar18;\n    char *pcVar19;\n    uint *puVar20;\n    uint8_t *puVar21;\n    ulong uVar22;\n    uint var_4h;\n    uint var_1e8h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_194h;\n    uint var_18ch;\n    uint var_184h;\n    uint var_17dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x1cc;\n    var_4h_2 = 0x4422e0;\n    fcn.0040c534();\n    *(unaff_EBP + -0x1c) = *0x44bf78;\n    *(unaff_EBP + -0x1bc) = 0;\n    *(unaff_EBP + -0x1d8) = 0;\n    *(unaff_EBP + -0x1b0) = 0;\n    *(unaff_EBP + -0x194) = 0;\n    *(unaff_EBP + -0x195) = 0;\n    *(unaff_EBP + -0x184) = 0;\n    *(unaff_EBP + -0x1b8) = 0;\ncode_r0x00411540:\n    if (**(unaff_EBP + 0xc) == '\\0') {\ncode_r0x00412232:\n        if (*(unaff_EBP + -0x1d8) == 1) {\n            fcn.0040a68c(*(unaff_EBP + -0x1bc));\n        }\n        *(unaff_EBP + -0x1ec) = 0x412273;\n        fcn.0040bcd7();\n        *(unaff_EBP + -0x1ec) = 0x412278;\n        fcn.0040c56f();\n        return;\n    }\n    iVar7 = fcn.0041360b(**(unaff_EBP + 0xc));\n    if (iVar7 != 0) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        do {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.004114e7();\n            iVar8 = fcn.0041360b(iVar7);\n        } while (iVar8 != 0);\n        if (iVar7 != -1) {\n            fcn.00414d6d(iVar7, *(unaff_EBP + 8));\n        }\n        do {\n            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n            iVar7 = fcn.0041360b(**(unaff_EBP + 0xc));\n        } while (iVar7 != 0);\n        goto code_r0x00411540;\n    }\n    puVar21 = *(unaff_EBP + 0xc);\n    if (*puVar21 != 0x25) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar14 = fcn.004114e7();\n        *(unaff_EBP + -0x194) = uVar14;\n        uVar13 = *puVar21;\n        *(unaff_EBP + 0xc) = puVar21 + 1;\n        if (uVar13 != uVar14) goto code_r0x004121f9;\n        if ((*(*0x44ca70 + 1 + (uVar14 & 0xff) * 2) & 0x80) != 0) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar11 = fcn.004114e7();\n            uVar13 = puVar21[1];\n            *(unaff_EBP + 0xc) = puVar21 + 2;\n            if (uVar13 != uVar11) {\n                if (uVar11 != 0xffffffff) {\n                    fcn.00414d6d(uVar11, *(unaff_EBP + 8));\n                }\n                goto code_r0x004121f9;\n            }\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        }\n        goto code_r0x00412213;\n    }\n    iVar7 = 0;\n    *(unaff_EBP + -0x1a0) = 0;\n    *(unaff_EBP + -0x198) = 0;\n    *(unaff_EBP + -0x19c) = 0;\n    *(unaff_EBP + -0x1b4) = 0;\n    *(unaff_EBP + -0x18c) = 0;\n    *(unaff_EBP + -0x1a1) = 0;\n    *(unaff_EBP + -0x197) = 0;\n    *(unaff_EBP + -0x18e) = 0;\n    *(unaff_EBP + -0x17d) = 0;\n    *(unaff_EBP + -0x196) = 0;\n    *(unaff_EBP + -0x185) = 0;\n    *(unaff_EBP + -0x18d) = 1;\n    *(unaff_EBP + -0x1c8) = 0;\n    do {\n        puVar16 = puVar21 + 1;\n        uVar14 = *puVar16;\n        iVar8 = fcn.00413592(uVar14);\n        puVar17 = puVar16;\n        if (iVar8 == 0) {\n            if (uVar14 < 0x4f) {\n                if (uVar14 != 0x4e) {\n                    if (uVar14 == 0x2a) {\n                        *(unaff_EBP + -0x18e) = *(unaff_EBP + -0x18e) + '\\x01';\n                    }\n                    else if (uVar14 != 0x46) {\n                        if (uVar14 == 0x49) {\n                            uVar13 = puVar21[2];\n                            if ((uVar13 == 0x36) && (puVar21[3] == 0x34)) {\n                                *(unaff_EBP + -0x1c8) = *(unaff_EBP + -0x1c8) + 1;\n                                *(unaff_EBP + -0x1ac) = 0;\n                                *(unaff_EBP + -0x1a8) = 0;\n                                puVar17 = puVar21 + 3;\n                            }\n                            else if (((uVar13 != 0x33) || (puVar17 = puVar21 + 3,  *puVar17 != 0x32)) &&\n                                    ((((puVar17 = puVar16,  uVar13 != 100 && (uVar13 != 0x69)) && (uVar13 != 0x6f)) &&\n                                     ((uVar13 != 0x78 && (uVar13 != 0x58)))))) goto code_r0x004116c7;\n                        }\n                        else if (uVar14 == 0x4c) {\n                            *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                        }\n                        else {\ncode_r0x004116c7:\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                            puVar17 = puVar16;\n                        }\n                    }\n                }\n            }\n            else if (uVar14 == 0x68) {\n                *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + -1;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + -1;\n            }\n            else {\n                if (uVar14 == 0x6c) {\n                    *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                }\n                else if (uVar14 != 0x77) goto code_r0x004116c7;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + '\\x01';\n            }\n        }\n        else {\n            *(unaff_EBP + -0x1b4) = *(unaff_EBP + -0x1b4) + 1;\n            iVar7 = (uVar14 - 0x30) + iVar7 * 10;\n        }\n        puVar21 = puVar17;\n    } while (*(unaff_EBP + -0x17d) == '\\0');\n    *(unaff_EBP + -0x18c) = iVar7;\n    *(unaff_EBP + 0xc) = puVar17;\n    if (*(unaff_EBP + -0x18e) == '\\0') {\n        puVar15 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1dc) = puVar15;\n        *(unaff_EBP + 0x10) = puVar15 + 1;\n        puVar15 = *puVar15;\n        *(unaff_EBP + -0x1b0) = puVar15;\n    }\n    else {\n        puVar15 = *(unaff_EBP + -0x1b0);\n    }\n    *(unaff_EBP + -0x17d) = 0;\n    if ((*(unaff_EBP + -0x185) == '\\0') &&\n       ((uVar13 = *puVar17,  uVar13 == 0x53 || (*(unaff_EBP + -0x185) = 0xff,  uVar13 == 0x43)))) {\n        *(unaff_EBP + -0x185) = 1;\n    }\n    uVar14 = *puVar17 | 0x20;\n    *(unaff_EBP + -0x1c0) = uVar14;\n    if (uVar14 == 0x6e) {\ncode_r0x00411794:\n        uVar9 = *(unaff_EBP + 8);\n    }\n    else {\n        if ((uVar14 != 99) && (uVar14 != 0x7b)) {\n            do {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar9 = fcn.004114e7();\n                iVar7 = fcn.0041360b(uVar9);\n            } while (iVar7 != 0);\n            *(unaff_EBP + -0x194) = uVar9;\n            goto code_r0x00411794;\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar9 = *(unaff_EBP + 8);\n        uVar10 = fcn.004114e7();\n        *(unaff_EBP + -0x194) = uVar10;\n    }\n    iVar7 = *(unaff_EBP + -0x1b4);\n    if ((iVar7 != 0) && (*(unaff_EBP + -0x18c) == 0)) {\ncode_r0x00411aa4:\n        uVar14 = *(unaff_EBP + -0x194);\ncode_r0x004121f9:\n        if (uVar14 != 0xffffffff) {\n            fcn.00414d6d(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n        }\n        goto code_r0x00412232;\n    }\n    if (0x6f < uVar14) {\n        if (uVar14 == 0x70) {\n            *(unaff_EBP + -0x18d) = 1;\ncode_r0x00411e91:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\n            }\n            else if (uVar11 != 0x2b) goto code_r0x00411ed4;\n            piVar1 = unaff_EBP + -0x18c;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (iVar7 != 0)) {\n                *(unaff_EBP + -0x17d) = 1;\n            }\n            else {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.004114e7();\ncode_r0x00411ece:\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n        }\n        else {\n            if (uVar14 == 0x73) {\ncode_r0x00411a57:\n                if ('\\0' < *(unaff_EBP + -0x185)) {\n                    *(unaff_EBP + -0x196) = 1;\n                }\ncode_r0x00411c21:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                puVar20 = puVar15;\n                if (*(unaff_EBP + -0x194) != -1) {\n                    fcn.00414d6d(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n                }\n                do {\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (iVar7 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar7 == 0)\n                       ) goto code_r0x00411e42;\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.004114e7();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if (uVar11 == 0xffffffff) goto code_r0x00411e2c;\n                    uVar13 = uVar11;\n                    if ((uVar14 != 99) && (((uVar14 != 0x73 || ((8 < uVar11 && (uVar11 < 0xe)))) || (uVar11 == 0x20))))\n                    {\n                        if ((uVar14 != 0x7b) ||\n                           (((*((uVar11 >> 3) + *(unaff_EBP + -0x1bc)) ^ *(unaff_EBP + -0x1a1)) & 1 << (uVar13 & 7)) ==\n                            0)) goto code_r0x00411e2c;\n                        uVar14 = *(unaff_EBP + -0x1c0);\n                    }\n                    if (*(unaff_EBP + -0x18e) == '\\0') {\n                        if (*(unaff_EBP + -0x196) == '\\0') {\n                            *puVar15 = uVar13;\n                            puVar15 = puVar15 + 1;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1c4) = uVar13;\n                            if ((*(*0x44ca70 + 1 + (uVar11 & 0xff) * 2) & 0x80) != 0) {\n                                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                                uVar6 = fcn.004114e7();\n                                *(unaff_EBP + -0x1c3) = uVar6;\n                            }\n                            fcn.00414b3f(unaff_EBP + -0x1cc, unaff_EBP + -0x1c4, *0x44c7b0);\n                            *puVar15 = *(unaff_EBP + -0x1cc);\n                            puVar15 = puVar15 + 2;\n                        }\n                        *(unaff_EBP + -0x1b0) = puVar15;\n                    }\n                    else {\n                        puVar20 = puVar20 + 1;\n                    }\n                } while( true );\n            }\n            if (uVar14 == 0x75) goto code_r0x00411e91;\n            if (uVar14 != 0x78) {\n                if (uVar14 == 0x7b) {\n                    if ('\\0' < *(unaff_EBP + -0x185)) {\n                        *(unaff_EBP + -0x196) = 1;\n                    }\n                    iVar7 = *(unaff_EBP + 0xc);\n                    puVar21 = iVar7 + 1;\n                    *(unaff_EBP + 0xc) = puVar21;\n                    *(unaff_EBP + -0x1d0) = puVar21;\n                    if (*puVar21 == 0x5e) {\n                        puVar21 = iVar7 + 2;\n                        *(unaff_EBP + -0x1d0) = puVar21;\n                        *(unaff_EBP + -0x1a1) = 0xff;\n                    }\n                    puVar15 = *(unaff_EBP + -0x1bc);\n                    if (*(unaff_EBP + -0x1bc) == NULL) {\n                        *(unaff_EBP + -4) = 0;\n                        fcn.0040a9e0();\n                        *(unaff_EBP + -0x18) = &fcn.004114fd::var_4h_2;\n                        *(unaff_EBP + -0x1bc) = &fcn.004114fd::var_4h_2;\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        puVar15 = &fcn.004114fd::var_4h_2;\n                    }\n                    fcn.0040b220(puVar15, 0, 0x20);\n                    if (*(unaff_EBP + -0x1c0) != 0x7b) goto code_r0x00411bf5;\n                    if (*puVar21 != 0x5d) goto code_r0x00411bf5;\n                    uVar13 = 0x5d;\n                    puVar21 = puVar21 + 1;\n                    *(puVar15 + 0xb) = 0x20;\n                    while (uVar12 = *puVar21,  uVar12 != 0x5d) {\n                        if (((uVar12 == 0x2d) && (uVar13 != 0)) && (uVar3 = puVar21[1],  uVar3 != 0x5d)) {\n                            puVar21 = puVar21 + 2;\n                            uVar12 = uVar3;\n                            if (uVar13 < uVar3) {\n                                uVar12 = uVar13;\n                                uVar13 = uVar3;\n                            }\n                            if (uVar12 <= uVar13) {\n                                uVar14 = uVar12;\n                                *(unaff_EBP + -0x1d4) = (uVar13 - uVar12) + 1;\n                                do {\n                                    *(puVar15 + (uVar14 >> 3)) = *(puVar15 + (uVar14 >> 3)) | '\\x01' << (uVar14 & 7);\n                                    uVar14 = uVar14 + 1;\n                                    piVar1 = unaff_EBP + -0x1d4;\n                                    *piVar1 = *piVar1 + -1;\n                                } while (*piVar1 != 0);\n                            }\n                            uVar13 = 0;\n                        }\n                        else {\n                            *(unaff_EBP + -0x198) = uVar12;\n                            *(puVar15 + (uVar12 >> 3)) = *(puVar15 + (uVar12 >> 3)) | '\\x01' << (uVar12 & 7);\n                            puVar21 = puVar21 + 1;\ncode_r0x00411bf5:\n                            uVar13 = *(unaff_EBP + -0x198);\n                        }\n                    }\n                    puVar15 = *(unaff_EBP + -0x1b0);\n                    if (*(unaff_EBP + -0x1c0) == 0x7b) {\n                        *(unaff_EBP + 0xc) = puVar21;\n                    }\n                    uVar14 = *(unaff_EBP + -0x1c0);\n                    goto code_r0x00411c21;\n                }\n                goto code_r0x00411a96;\n            }\ncode_r0x0041181e:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\ncode_r0x00411d44:\n                piVar1 = unaff_EBP + -0x18c;\n                *piVar1 = *piVar1 + -1;\n                if ((*piVar1 == 0) && (iVar7 != 0)) {\n                    *(unaff_EBP + -0x17d) = 1;\n                }\n                else {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.004114e7();\n                    *(unaff_EBP + -0x194) = uVar11;\n                }\n            }\n            else if (uVar11 == 0x2b) goto code_r0x00411d44;\n            if (uVar11 == 0x30) {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.004114e7();\n                *(unaff_EBP + -0x194) = uVar11;\n                if ((uVar11 == 'x') || (uVar11 == 'X')) {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.004114e7();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (*(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -2,  *(unaff_EBP + -0x18c) < 1)) {\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    uVar14 = 0x78;\n                }\n                else {\n                    *(unaff_EBP + -0x19c) = 1;\n                    if (uVar14 == 0x78) {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00414d6d(uVar11, uVar9);\n                        }\n                        uVar11 = 0x30;\n                        goto code_r0x00411ece;\n                    }\n                    if (*(unaff_EBP + -0x1b4) != 0) {\n                        piVar1 = unaff_EBP + -0x18c;\n                        *piVar1 = *piVar1 + -1;\n                        if (*piVar1 == 0) {\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                        }\n                    }\n                    uVar14 = 0x6f;\n                }\n            }\n        }\ncode_r0x00411ed4:\n        if (*(unaff_EBP + -0x1c8) == 0) {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.004135cc(uVar11);\n                        if (iVar7 != 0) {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 4;\n                            iVar7 = fcn.00413592(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x004120b1;\n                        }\ncode_r0x004120ab:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.00413592(uVar11);\n                        if (iVar7 == 0) goto code_r0x004120ab;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x004120ab;\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 3;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) * 10;\n                        }\n                    }\ncode_r0x004120b1:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + -0x30 + uVar11;\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x0041210f;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.004114e7();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00414d6d(uVar11, uVar9);\n                        }\n                    }\ncode_r0x0041210f:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                *(unaff_EBP + -0x1a0) = -*(unaff_EBP + -0x1a0);\n            }\n        }\n        else {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.004135cc(uVar11);\n                        if (iVar7 != 0) {\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 4;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 4 | uVar4 >> 0x1c;\n                            iVar7 = fcn.00413592(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x00411f9c;\n                        }\ncode_r0x00411f96:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.00413592(uVar11);\n                        if (iVar7 == 0) goto code_r0x00411f96;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x00411f96;\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 3;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 3 | uVar4 >> 0x1d;\n                        }\n                        else {\n                            var_4h_2 = *(unaff_EBP + -0x1ac);\n                            uVar22 = fcn.0040c500();\n                            *(unaff_EBP + -0x1ac) = uVar22;\n                            *(unaff_EBP + -0x1a8) = uVar22 >> 0x20;\n                        }\n                    }\ncode_r0x00411f9c:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        uVar4 = uVar11 - 0x30;\n                        puVar2 = unaff_EBP + -0x1ac;\n                        uVar5 = *puVar2;\n                        *puVar2 = *puVar2 + uVar4;\n                        *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) + (uVar4 >> 0x1f) + CARRY4(uVar5, uVar4);\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x00411ffa;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.004114e7();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00414d6d(uVar11, uVar9);\n                        }\n                    }\ncode_r0x00411ffa:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                iVar7 = *(unaff_EBP + -0x1ac);\n                *(unaff_EBP + -0x1ac) = -iVar7;\n                *(unaff_EBP + -0x1a8) = -(*(unaff_EBP + -0x1a8) + (iVar7 != 0));\n            }\n        }\n        if (uVar14 == 0x46) {\n            *(unaff_EBP + -0x19c) = 0;\n        }\n        if (*(unaff_EBP + -0x19c) != 0) {\n            if (*(unaff_EBP + -0x18e) == '\\0') {\n                *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n                puVar15 = *(unaff_EBP + -0x1b0);\n                uVar9 = *(unaff_EBP + -0x1a0);\ncode_r0x00412165:\n                if (*(unaff_EBP + -0x1c8) == 0) {\n                    if (*(unaff_EBP + -0x18d) == '\\0') {\n                        *puVar15 = uVar9;\n                    }\n                    else {\n                        *puVar15 = uVar9;\n                    }\n                }\n                else {\n                    *puVar15 = *(unaff_EBP + -0x1ac);\n                    puVar15[1] = *(unaff_EBP + -0x1a8);\n                }\n            }\n            goto code_r0x00412191;\n        }\n        goto code_r0x00412232;\n    }\n    if (uVar14 == 0x6f) goto code_r0x00411e91;\n    if (uVar14 == 99) {\n        if (iVar7 == 0) {\n            *(unaff_EBP + -0x1b4) = 1;\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 1;\n        }\n        goto code_r0x00411a57;\n    }\n    if (uVar14 == 100) goto code_r0x00411e91;\n    if (uVar14 < 0x65) {\ncode_r0x00411a96:\n        if (**(unaff_EBP + 0xc) != *(unaff_EBP + -0x194)) goto code_r0x00411aa4;\n        *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + -1;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + 0x10) = *(unaff_EBP + -0x1dc);\n        }\n    }\n    else {\n        if (0x67 < uVar14) {\n            if (uVar14 == 0x69) {\n                uVar14 = 100;\n                goto code_r0x0041181e;\n            }\n            if (uVar14 != 0x6e) goto code_r0x00411a96;\n            uVar9 = *(unaff_EBP + -0x184);\n            if (*(unaff_EBP + -0x18e) != '\\0') goto code_r0x00412191;\n            goto code_r0x00412165;\n        }\n        pcVar18 = unaff_EBP + -0x17c;\n        iVar7 = *(unaff_EBP + -0x194);\n        if (iVar7 == 0x2d) {\n            *(unaff_EBP + -0x17c) = 0x2d;\n            pcVar18 = unaff_EBP + -0x17b;\ncode_r0x0041185d:\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar9 = *(unaff_EBP + 8);\n            iVar7 = fcn.004114e7();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        else {\n            if (iVar7 == 0x2b) goto code_r0x0041185d;\n            uVar9 = *(unaff_EBP + 8);\n        }\n        if ((*(unaff_EBP + -0x1b4) == 0) || (0x15d < *(unaff_EBP + -0x18c))) {\n            *(unaff_EBP + -0x18c) = 0x15d;\n        }\n        while( true ) {\n            iVar8 = fcn.00413592(iVar7);\n            if ((iVar8 == 0) ||\n               (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0)) break;\n            *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n            *pcVar18 = iVar7;\n            pcVar18 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.004114e7();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        if ((*0x44c7b4 == iVar7) &&\n           (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.004114e7();\n            *pcVar18 = *0x44c7b4;\n            while( true ) {\n                pcVar18 = pcVar18 + 1;\n                *(unaff_EBP + -0x194) = iVar7;\n                iVar8 = fcn.00413592(iVar7);\n                if ((iVar8 == 0) ||\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0))\n                break;\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar18 = iVar7;\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.004114e7();\n            }\n        }\n        pcVar19 = pcVar18;\n        if ((*(unaff_EBP + -0x19c) != 0) &&\n           (((iVar7 == 0x65 || (iVar7 == 0x45)) &&\n            (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)))) {\n            *pcVar18 = 'e';\n            pcVar19 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.004114e7();\n            *(unaff_EBP + -0x194) = iVar7;\n            if (iVar7 == 0x2d) {\n                *pcVar19 = '-';\n                pcVar19 = pcVar18 + 2;\ncode_r0x00411997:\n                iVar8 = *(unaff_EBP + -0x18c);\n                *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n                if (iVar8 != 0) goto code_r0x004119c8;\n                *(unaff_EBP + -0x18c) = 0;\n            }\n            else if (iVar7 == 0x2b) goto code_r0x00411997;\n            while ((iVar8 = fcn.00413592(iVar7),  iVar8 != 0 &&\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0))) {\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar19 = iVar7;\n                pcVar19 = pcVar19 + 1;\ncode_r0x004119c8:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.004114e7();\n                *(unaff_EBP + -0x194) = iVar7;\n            }\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        if (iVar7 != -1) {\n            fcn.00414d6d(iVar7, uVar9);\n        }\n        if (*(unaff_EBP + -0x19c) == 0) goto code_r0x00412232;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n            *pcVar19 = '\\0';\n            (**0x44c348)(*(unaff_EBP + -0x18d) + -1, *(unaff_EBP + -0x1b0), unaff_EBP + -0x17c);\n        }\n    }\ncode_r0x00412191:\n    *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + '\\x01';\n    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\ncode_r0x00412213:\n    if ((*(unaff_EBP + -0x194) == -1) && ((**(unaff_EBP + 0xc) != '%' || ((*(unaff_EBP + 0xc))[1] != 'n'))))\n    goto code_r0x00412232;\n    goto code_r0x00411540;\ncode_r0x00411e2c:\n    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n    if (uVar11 != 0xffffffff) {\n        fcn.00414d6d(uVar11, *(unaff_EBP + 8));\n    }\ncode_r0x00411e42:\n    if (puVar20 == puVar15) goto code_r0x00412232;\n    if ((*(unaff_EBP + -0x18e) == '\\0') &&\n       (*(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1,  *(unaff_EBP + -0x1c0) != 99)) {\n        if (*(unaff_EBP + -0x196) == '\\0') {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n        else {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n    }\n    goto code_r0x00412191;\n}\n",
        "token_count": 10089
    },
    "00412699": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_38h_2\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.00412699(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint CodePage, uint arg_24h, uint arg_8h, \n            uint arg_ch, uint arg_10h, uint cchSrc, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *lpMultiByteStr_00;\n    int32_t unaff_EBP;\n    uchar *arg_8h_00;\n    uint var_2ch;\n    uint var_48h;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpWideCharStr;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_20h_2;\n    uint var_24h_3;\n    uint var_28h;\n    uint var_24h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_18h_2;\n    uint var_4h;\n    uint uVar5;\n    uint uVar6;\n    uint var_38h_2;\n    uint var_34h;\n    uint var_30h_2;\n    uint var_20h;\n    uint lpSrcStr;\n    uint var_44h;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_38h;\n    uint var_54h;\n    uint var_30h;\n    \n    fcn.0040c534();\n    if (*0x44f350 == 0) {\n        lpSrcStr = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x44f350 = 2;\n            }\n        }\n        else {\n            *0x44f350 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        pcVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x004126ff;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x004126ff:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if ((*0x44f350 != 2) && (*0x44f350 != 0)) {\n        if (*0x44f350 != 1) goto code_r0x00412a4c;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        if (*(unaff_EBP + 0x20) == 0) {\n            *(unaff_EBP + 0x20) = *0x44f348;\n        }\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x00412a4c;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040a9e0();\n        *(unaff_EBP + -0x18) = &fcn.00412699::lpSrcStr;\n        *(unaff_EBP + -0x1c) = &fcn.00412699::lpSrcStr;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x1c) == 0) {\n            iVar3 = fcn.0040a67a();\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) goto code_r0x00412a4c;\n            *(unaff_EBP + -0x38) = 1;\n        }\n        var_30h_2 = 1;\n        var_34h = *(unaff_EBP + 0x20);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, 0, 0);\n            *(unaff_EBP + -0x2c) = iVar3;\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0040a9e0();\n                    *(unaff_EBP + -0x18) = &fcn.00412699::var_34h;\n                    *(unaff_EBP + -0x20) = &fcn.00412699::var_34h;\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        iVar4 = fcn.0040a67a(iVar3 * 2);\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) goto code_r0x004128ce;\n                        *(unaff_EBP + -0x34) = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                      (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, \n                                       *(unaff_EBP + -0x20), iVar3);\n                    if (iVar1 != 0) {\n                        if (*(unaff_EBP + 0x1c) == 0) {\n                            uVar6 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            uVar6 = *(unaff_EBP + 0x1c);\n                            uVar5 = *(unaff_EBP + 0x18);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x20), 0, *(unaff_EBP + -0x20), iVar3, uVar5, uVar6, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x1c) != 0) && (iVar3 <= *(unaff_EBP + 0x1c))) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c));\n                }\n            }\n        }\ncode_r0x004128ce:\n        if (*(unaff_EBP + -0x34) != 0) {\n            fcn.0040a68c(*(unaff_EBP + -0x20));\n        }\n        if (*(unaff_EBP + -0x38) != 0) {\n            fcn.0040a68c(*(unaff_EBP + -0x1c));\n        }\n        goto code_r0x00412a4c;\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x44f338;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x44f348;\n    }\n    iVar1 = fcn.004150a1(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x40) = iVar1;\n    if (iVar1 == -1) goto code_r0x00412a4c;\n    if (iVar1 == *(unaff_EBP + 0x20)) {\n        lpSrcStr = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n    }\n    else {\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = fcn.004150e4(lpSrcStr, iVar1, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x442480, 0x38);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) goto code_r0x00412a4c;\n        uVar6 = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        lpMultiByteStr_00 = &fcn.00412699::lpSrcStr;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        *(unaff_EBP + -0x24) = iVar1;\n        arg_8h_00 = NULL;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a9e0();\n            *(unaff_EBP + -0x18) = &fcn.00412699::lpSrcStr;\n            *(unaff_EBP + -0x44) = &fcn.00412699::lpSrcStr;\n            fcn.0040b220();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                lpMultiByteStr_00 = fcn.0040a67a();\n                arg_8h_00 = lpMultiByteStr_00;\n                if (lpMultiByteStr_00 == NULL) goto code_r0x00412a14;\n                fcn.0040b220();\n                *(unaff_EBP + -0x3c) = 1;\n            }\n            var_30h_2 = *(unaff_EBP + 0xc);\n            var_34h = *(unaff_EBP + 8);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            *(unaff_EBP + -0x24) = iVar1;\n            arg_8h_00 = lpMultiByteStr_00;\n            if (iVar1 != 0) {\n                var_30h_2 = *(unaff_EBP + 0x20);\n                var_34h = *(unaff_EBP + -0x40);\n                fcn.004150e4(var_34h, var_30h_2, lpMultiByteStr_00, unaff_EBP + -0x24, *(unaff_EBP + 0x18), \n                             *(unaff_EBP + 0x1c), lpSrcStr, uVar6);\n            }\n        }\ncode_r0x00412a14:\n        if (*(unaff_EBP + -0x3c) != 0) {\n            fcn.0040a68c(arg_8h_00);\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.0040a68c(*(unaff_EBP + -0x28));\n    }\ncode_r0x00412a4c:\n    *(unaff_EBP + -0x58) = 0x412a54;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 3030
    },
    "00412a55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.00412a55(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint noname_7, uint arg_8h, uint lpMultiByteStr, uint cbMultiByte, uint arg_14h, uint CodePage, uint arg_1ch\n            , uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t noname_1_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    int32_t noname_0_00;\n    uint dwInfoType;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    int32_t lpCharType;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.0040c534();\n    iVar3 = 0;\n    if (*0x44f354 == 0) {\n        var_38h = 0x412a7f;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x44f354 = 2;\n            }\n        }\n        else {\n            *0x44f354 = 1;\n        }\n    }\n    if ((*0x44f354 == 2) || (*0x44f354 == 0)) {\n        iVar1 = *(unaff_EBP + 0x1c);\n        if (*(unaff_EBP + 0x1c) == 0) {\n            iVar1 = *0x44f338;\n        }\n        noname_0_00 = *(unaff_EBP + 0x18);\n        if (*(unaff_EBP + 0x18) == 0) {\n            noname_0_00 = *0x44f348;\n        }\n        noname_1_00 = fcn.004150a1(iVar1);\n        if (noname_1_00 != -1) {\n            if (noname_1_00 != noname_0_00) {\n                lpCharType = noname_0_00;\n                var_38h = noname_1_00;\n                iVar3 = fcn.004150e4(noname_0_00, noname_1_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10, 0, 0, 0x4424a8, \n                                     0x1c);\n                if (iVar3 == 0) goto code_r0x00412c06;\n                *(unaff_EBP + 0xc) = iVar3;\n            }\n            lpCharType = 0x412bf7;\n            var_38h = iVar1;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n            if (iVar3 != 0) {\n                lpCharType = iVar3;\n                fcn.0040a68c(iVar3);\n            }\n        }\n    }\n    else if (*0x44f354 == 1) {\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x44f348;\n        }\n        var_38h = (*(unaff_EBP + 0x20) != 0) * 8 + 1;\n        lpCharType = *(unaff_EBP + 0x18);\n        arg_8h_00 = &fcn.00412a55::lpCharType;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x28) = iVar3;\n        if (iVar3 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a9e0();\n            *(unaff_EBP + -0x18) = &fcn.00412a55::lpCharType;\n            *(unaff_EBP + -0x2c) = &fcn.00412a55::lpCharType;\n            fcn.0040b220(&fcn.00412a55::lpCharType, 0, iVar3 * 2);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                arg_8h_00 = fcn.0040bfe0(2, iVar3);\n                if (arg_8h_00 == NULL) goto code_r0x00412c06;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x18), 1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_8h_00, iVar3);\n            if (iVar3 != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)(*(unaff_EBP + 8), arg_8h_00, iVar3, *(unaff_EBP + 0x14))\n                ;\n                *(unaff_EBP + -0x24) = uVar2;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.0040a68c(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00412c06:\n    *(unaff_EBP + -0x3c) = 0x412c0e;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1567
    },
    "00412c3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00412c3d(int64_t *arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    iVar5 = *(arg_8h + 4);\n    iVar4 = *arg_8h;\n    iVar8 = *arg_8h;\n    iVar2 = fcn.0040ee57();\n    if (((iVar5 < 0) || (0x1000 < iVar5)) || ((0xfff < iVar5 && (iVar4 != 0)))) {\n        return NULL;\n    }\n    if (*(iVar2 + 0x44) == 0) {\n        iVar3 = fcn.0040a67a(0x24);\n        *(iVar2 + 0x44) = iVar3;\n        if (iVar3 != 0) goto code_r0x00412ca3;\n        piVar6 = 0x44f358;\n    }\n    else {\ncode_r0x00412ca3:\n        piVar6 = *(iVar2 + 0x44);\n    }\n    iVar4 = fcn.0040d560(iVar4, iVar5, 0x1e13380, 0);\n    var_4h = iVar4 + 0x46;\n    iVar5 = iVar4 + 0x45;\n    iVar7 = fcn.0040c500(iVar4, iVar4 >> 0x1f, 0xfffffe93, 0xffffffff);\n    iVar7 = fcn.0040c500(iVar7 - (((iVar4 + 0x171) / 400 - iVar5 / 100) + -0x11 + iVar5 / 4), 0x15180, 0);\n    iVar7 = iVar7 + iVar8;\n    iVar2 = iVar7;\n    if ((iVar7 < 0x100000000) && (iVar7 < 0)) {\n        iVar7 = iVar7 + 0x1e13380;\n        var_4h = iVar5;\n        if (((iVar5 % 4 != 0) || (iVar5 % 100 == 0)) && ((iVar4 + 0x7b1) % 400 != 0)) goto code_r0x00412d9f;\n        iVar7 = CONCAT44((iVar7 >> 0x20) + (0xfffeae7f < iVar7), iVar2 + 0x1e28500);\n    }\n    else if (((var_4h % 4 != 0) || (var_4h % 100 == 0)) && ((iVar4 + 0x7b2) % 400 != 0)) goto code_r0x00412d9f;\n    bVar1 = true;\ncode_r0x00412d9f:\n    piVar6[5] = var_4h;\n    iVar5 = fcn.0040d560(iVar7, 0x15180, 0);\n    piVar6[7] = iVar5;\n    iVar8 = fcn.0040c500(iVar5, iVar5 >> 0x1f, 0xfffeae80, 0xffffffff);\n    iVar5 = 0x44c740;\n    if (!bVar1) {\n        iVar5 = 0x44c774;\n    }\n    iVar2 = 1;\n    iVar4 = *(iVar5 + 4);\n    while (iVar4 < piVar6[7]) {\n        iVar2 = iVar2 + 1;\n        iVar4 = *(iVar5 + iVar2 * 4);\n    }\n    piVar6[4] = iVar2 + -1;\n    piVar6[3] = piVar6[7] - *(iVar5 + (iVar2 + -1) * 4);\n    iVar5 = fcn.0040d560(*arg_8h, *(arg_8h + 4), 0x15180, 0);\n    piVar6[6] = (iVar5 + 4) % 7;\n    iVar5 = fcn.0040d560(iVar8 + iVar7, 0xe10, 0);\n    piVar6[2] = iVar5;\n    iVar9 = fcn.0040c500(iVar5, iVar5 >> 0x1f, 0xfffff1f0, 0xffffffff);\n    iVar9 = iVar8 + iVar7 + iVar9;\n    iVar5 = fcn.0040d560(iVar9, 0x3c, 0);\n    piVar6[1] = iVar5;\n    *piVar6 = iVar9 + iVar5 * -0x3c;\n    piVar6[8] = 0;\n    return piVar6;\n}\n",
        "token_count": 1128
    },
    "00412e62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00412e62(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    char *pcVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040c534(0x4424f8, 0x18);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0040d784(7);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = *0x44f348;\n    *(unaff_EBP + -0x28) = *0x44f348;\n    *0x44f42c = 0;\n    *0x44c734 = 0xffffffff;\n    *0x44c728 = 0xffffffff;\n    pcVar4 = fcn.004152ad(0x4424f4);\n    *(unaff_EBP + -0x24) = pcVar4;\n    if ((pcVar4 == NULL) || (*pcVar4 == '\\0')) {\n        if (*0x44f430 != 0) {\n            fcn.0040a68c(*0x44f430);\n            *0x44f430 = 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(0x44f380);\n        pcVar2 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        if (iVar5 != -1) {\n            *0x44f42c = 1;\n            *0x44c690 = *0x44f380 * 0x3c;\n            if (*0x44f3c6 != 0) {\n                *0x44c690 = *0x44c690 + *0x44f3d4 * 0x3c;\n            }\n            if ((*0x44f41a == 0) || (*0x44f428 == 0)) {\n                *0x44c694 = 0;\n                *0x44c698 = 0;\n            }\n            else {\n                *0x44c694 = 1;\n                *0x44c698 = (*0x44f428 - *0x44f3d4) * 0x3c;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                              (uVar3, 0, 0x44f384, 0xffffffff, *0x44c720, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44c720 = 0;\n            }\n            else {\n                (*0x44c720)[0x3f] = 0;\n            }\n            iVar5 = (*pcVar2)(uVar3, 0, 0x44f3d8, 0xffffffff, *0x44c724, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44c724 = 0;\n            }\n            else {\n                (*0x44c724)[0x3f] = 0;\n            }\n        }\n    }\n    else {\n        if (*0x44f430 != 0) {\n            iVar5 = fcn.00410a50(pcVar4, *0x44f430);\n            if (iVar5 == 0) goto code_r0x00413066;\n            if (*0x44f430 != 0) {\n                fcn.0040a68c(*0x44f430);\n            }\n        }\n        iVar5 = fcn.0040be00(pcVar4);\n        *0x44f430 = fcn.0040a67a(iVar5 + 1);\n        if (*0x44f430 != 0) {\n            fcn.00412280(*0x44f430, pcVar4);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041307d();\n            fcn.004143b0(*0x44c720, pcVar4, 3);\n            (*0x44c720)[3] = 0;\n            pcVar6 = pcVar4 + 3;\n            if (*pcVar6 == '-') {\n                *(unaff_EBP + -0x20) = 1;\n                pcVar6 = pcVar4 + 4;\n            }\n            *0x44c690 = fcn.0040c75e(pcVar6);\n            *0x44c690 = *0x44c690 * 0xe10;\n            for (; (cVar1 = *pcVar6,  cVar1 == '+' || (('/' < cVar1 && (cVar1 < ':')))); pcVar6 = pcVar6 + 1) {\n            }\n            if (*pcVar6 == ':') {\n                pcVar6 = pcVar6 + 1;\n                iVar5 = fcn.0040c75e(pcVar6);\n                *0x44c690 = *0x44c690 + iVar5 * 0x3c;\n                for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                }\n                if (*pcVar6 == ':') {\n                    pcVar6 = pcVar6 + 1;\n                    iVar5 = fcn.0040c75e(pcVar6);\n                    *0x44c690 = *0x44c690 + iVar5;\n                    for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                *0x44c690 = -*0x44c690;\n            }\n            *0x44c694 = *pcVar6;\n            if (*0x44c694 == 0) {\n                **0x44c724 = 0;\n            }\n            else {\n                fcn.004143b0(*0x44c724, pcVar6, 3);\n                (*0x44c724)[3] = 0;\n            }\n            goto code_r0x00413104;\n        }\n    }\ncode_r0x00413066:\n    fcn.0040a822(unaff_EBP + -0x10, 0xffffffff);\ncode_r0x00413104:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1630
    },
    "0041310a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041310a(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h % 4;\n    if (arg_ch == 1) {\n        if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n            iVar4 = *(in_EAX * 4 + 0x44c73c);\n        }\n        else {\n            iVar4 = *(in_EAX * 4 + 0x44c770);\n        }\n        iVar5 = iVar4 + 1;\n        iVar3 = (arg_10h * 0x16d + -0x63db + (arg_10h + -1) / 4 + iVar5 + ((arg_10h + 299) / 400 - (arg_10h + -1) / 100)\n                ) % 7;\n        iVar1 = (arg_14h * 7 - iVar3) + arg_18h;\n        if (iVar3 <= arg_18h) {\n            iVar5 = iVar4 + -6;\n        }\n        iVar5 = iVar5 + iVar1;\n        if (arg_14h == 5) {\n            if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n                iVar1 = *(in_EAX * 4 + 0x44c740);\n            }\n            else {\n                iVar1 = *(in_EAX * 4 + 0x44c774);\n            }\n            if (iVar1 < iVar5) {\n                iVar5 = iVar5 + -7;\n            }\n        }\n    }\n    else {\n        if (((iVar2 == 0) && (iVar1 = arg_10h / 100,  arg_10h % 100 != 0)) ||\n           (iVar1 = (arg_10h + 0x76c) / 400,  (arg_10h + 0x76c) % 400 == 0)) {\n            iVar5 = *(in_EAX * 4 + 0x44c73c);\n        }\n        else {\n            iVar5 = *(in_EAX * 4 + 0x44c770);\n        }\n        iVar5 = iVar5 + arg_1ch;\n    }\n    iVar2 = (in_ECX * 0x3c + arg_20h) * 0x3c;\n    if (arg_8h == 1) {\n        *0x44c730 = (iVar2 + arg_24h) * 1000 + arg_28h;\n        *0x44c728 = arg_10h;\n        *0x44c72c = iVar5;\n    }\n    else {\n        *0x44c73c = (iVar2 + *0x44c698 + arg_24h) * 1000 + arg_28h;\n        if (*0x44c73c < 0) {\n            *0x44c73c = *0x44c73c + 86400000;\n            *0x44c738 = iVar5 + -1;\n        }\n        else {\n            iVar1 = 86400000;\n            *0x44c738 = iVar5;\n            if (86399999 < *0x44c73c) {\n                *0x44c73c = *0x44c73c + -86400000;\n                *0x44c738 = iVar5 + 1;\n            }\n        }\n        *0x44c734 = arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 948
    },
    "00413592": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00413592(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.00412456(iVar1, param_1, 4);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 4;\n}\n",
        "token_count": 156
    },
    "004135cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004135cc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.00412456(iVar1, param_1, 0x80);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 0x80;\n}\n",
        "token_count": 160
    },
    "0041360b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0041360b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.00412456(iVar1, param_1, 8);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 8;\n}\n",
        "token_count": 157
    },
    "00413699": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413699(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040c534(0x442550, 0x10);\n    if (*0x44f438 == NULL) {\n        if (*0x44f00c != 1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n            if (iVar2 != 0) {\n                *0x44f438 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"InitializeCriticalSectionAndSpinCount\");\n                if (*0x44f438 != NULL) goto code_r0x004136e5;\n            }\n        }\n        *0x44f438 = 0x413689;\n    }\ncode_r0x004136e5:\n    pcVar1 = *0x44f438;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 337
    },
    "0041378c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041378c(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x40 < arg_ch) && (arg_ch < 0x5b)) {\n            return arg_ch + 0x20;\n        }\n    }\n    else {\n        noname_3 = 1;\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 1;\n            }\n            else {\n                uVar3 = fcn.00412456(arg_8h, arg_ch, 1);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.00412699(*(uVar1 + 0x14), 0x100, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_EDI, \n                             unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 836
    },
    "00413876": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00413876(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_2 / 0x20;\n    uVar1 = *(param_1 + iVar2 * 4) & ~(-1 << (0x1fU - param_2 % 0x20 & 0x1f));\n    while( true ) {\n        if (uVar1 != 0) {\n            return 0;\n        }\n        iVar2 = iVar2 + 1;\n        if (2 < iVar2) break;\n        uVar1 = *(param_1 + iVar2 * 4);\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "0041399b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041399b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch % 0x20;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = *(arg_8h + iVar2 * 4);\n        *(arg_8h + iVar2 * 4) = uVar1 >> (uVar3 & 0x1f) | var_4h;\n        var_4h = (uVar1 & ~(-1 << (uVar3 & 0x1f))) << (0x20 - uVar3 & 0x1f);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    iVar2 = 2;\n    puVar4 = arg_8h + (2 - arg_ch / 0x20) * 4;\n    do {\n        if (iVar2 < arg_ch / 0x20) {\n            *(arg_8h + iVar2 * 4) = 0;\n        }\n        else {\n            *(arg_8h + iVar2 * 4) = *puVar4;\n        }\n        iVar2 = iVar2 + -1;\n        puVar4 = puVar4 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 352
    },
    "00413f22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413f22(int32_t arg_8h, int32_t *arg_ch, uint16_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint32_t uStack148;\n    uchar auStack144 [48];\n    ulong uStack96;\n    uint32_t uStack80;\n    uint uStack20;\n    \n    uStack20 = *0x44bf78;\n    uStack148 = *arg_10h;\n    iVar1 = *arg_ch;\n    if (iVar1 == 1) {\ncode_r0x00413f7a:\n        arg_8h_00 = 8;\ncode_r0x00413f7c:\n        iVar1 = fcn.00415ff4(arg_8h_00, arg_ch + 6, uStack148);\n        if (iVar1 == 0) {\n            if (((arg_8h == 0x10) || (arg_8h == 0x16)) || (arg_8h == 0x1d)) {\n                uStack96 = *(arg_ch + 4);\n                uStack80 = uStack80 & 0xffffffe3 | 3;\n            }\n            else {\n                uStack80 = uStack80 & 0xfffffffe;\n            }\n            fcn.00415d4f(auStack144, &uStack148, arg_8h_00, arg_8h, arg_ch + 2, arg_ch + 6);\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            arg_8h_00 = 4;\n            goto code_r0x00413f7c;\n        }\n        if (iVar1 == 3) {\n            arg_8h_00 = 0x11;\n            goto code_r0x00413f7c;\n        }\n        if (iVar1 == 4) {\n            arg_8h_00 = 0x12;\n            goto code_r0x00413f7c;\n        }\n        if (iVar1 == 5) goto code_r0x00413f7a;\n        if (iVar1 == 7) {\n            *arg_ch = 1;\n        }\n        else if (iVar1 == 8) {\n            arg_8h_00 = 0x10;\n            goto code_r0x00413f7c;\n        }\n    }\n    fcn.0041625a(uStack148, 0xffff);\n    if ((*arg_ch != 8) && (*0x44cc60 == 0)) {\n        iVar1 = fcn.00416240(arg_ch);\n        if (iVar1 != 0) goto code_r0x00414007;\n    }\n    fcn.00416218(*arg_ch);\ncode_r0x00414007:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 630
    },
    "004142a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004142a8(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*0x44f43c == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"user32.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar2 == 0) || (*0x44f43c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x443e80),  *0x44f43c == NULL))\n        {\n            return 0;\n        }\n        *0x44f440 = (*pcVar1)(iVar2, 0x443e70);\n        *0x44f444 = (*pcVar1)(iVar2, 0x443e5c);\n        if ((*0x44f00c == 2) && (*0x44f44c = (*pcVar1)(iVar2, \"GetUserObjectInformationA\"),  *0x44f44c != NULL)) {\n            *0x44f448 = (*pcVar1)(iVar2, 0x443e28);\n        }\n    }\n    if ((*0x44f448 == NULL) ||\n       (((iVar2 = (**0x44f448)(),  iVar2 != 0 && (iVar2 = (**0x44f44c)(iVar2, 1, &var_10h, 0xc, &var_4h),  iVar2 != 0))\n        && ((var_8h & 1) != 0)))) {\n        if (((*0x44f440 != NULL) && (iVar4 = (**0x44f440)(),  iVar4 != 0)) && (*0x44f444 != NULL)) {\n            iVar4 = (**0x44f444)(iVar4);\n        }\n    }\n    else if (*0x44f018 < 4) {\n        arg_10h = arg_10h | 0x40000;\n    }\n    else {\n        arg_10h = arg_10h | 0x200000;\n    }\n    uVar3 = (**0x44f43c)(iVar4, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 567
    },
    "004144d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004144d4(uint8_t param_1, uint32_t param_2, uint8_t param_3)\n\n{\n    if ((*(param_1 + 0x4506a1) & param_3) == 0) {\n        if (param_2 == 0) {\n            param_2 = 0;\n        }\n        else {\n            param_2 = *(*0x44ca70 + param_1 * 2) & param_2;\n        }\n        if (param_2 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 133
    },
    "00414a7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414a7f(int32_t arg_8h, uint16_t *lpWideCharStr, uint8_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((arg_10h != NULL) && (arg_14h != 0)) {\n        uVar1 = *arg_10h;\n        if (uVar1 != 0) {\n            if (*(arg_8h + 0x14) == 0) {\n                if (lpWideCharStr != NULL) {\n                    *lpWideCharStr = uVar1;\n                }\n                return 1;\n            }\n            if ((*(*(arg_8h + 0x48) + 1 + uVar1 * 2) & 0x80) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(arg_8h + 4), 9, arg_10h, 1, lpWideCharStr, lpWideCharStr != NULL);\n                if (iVar2 != 0) {\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = *(arg_8h + 0x28);\n                if ((((1 < iVar2) && (iVar2 <= arg_14h)) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (*(arg_8h + 4), 9, arg_10h, iVar2, lpWideCharStr, lpWideCharStr != NULL), \n                    iVar2 != 0)) || ((*(arg_8h + 0x28) <= arg_14h && (arg_10h[1] != 0)))) {\n                    return *(arg_8h + 0x28);\n                }\n            }\n            puVar3 = fcn.0040d4d5();\n            *puVar3 = 0x2a;\n            return 0xffffffff;\n        }\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 482
    },
    "00414d6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00414d6d(uint32_t param_1, char **param_2)\n\n{\n    char *pcVar1;\n    \n    if (param_1 != 0xffffffff) {\n        pcVar1 = param_2[3];\n        if (((pcVar1 & 1) != 0) || ((pcVar1 < '\\0' && ((pcVar1 & 2) == 0)))) {\n            if (param_2[2] == NULL) {\n                fcn.004148b0(param_2);\n            }\n            if (*param_2 == param_2[2]) {\n                if (param_2[1] != NULL) {\n                    return 0xffffffff;\n                }\n                *param_2 = *param_2 + 1;\n            }\n            *param_2 = *param_2 + -1;\n            pcVar1 = *param_2;\n            if ((*(param_2 + 3) & 0x40) == 0) {\n                *pcVar1 = param_1;\n            }\n            else if (*pcVar1 != param_1) {\n                *param_2 = pcVar1 + 1;\n                return 0xffffffff;\n            }\n            param_2[1] = param_2[1] + 1;\n            param_2[3] = param_2[3] & 0xffffffef | 1;\n            return param_1 & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 326
    },
    "004150e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.004150e4(uint noname_0, uint noname_1, uint lpMultiByteStr, uint arg_14h_2, uint arg_8h, uint arg_ch, uint noname_6\n            , uint arg_14h)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *arg_ch_00;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint CodePage;\n    uint var_4h;\n    uint var_48h_2;\n    uint var_54h;\n    uint cbMultiByte;\n    uint var_3ch_2;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x38;\n    var_4h_2 = 0x4444e0;\n    var_18h = 0x4150f0;\n    fcn.0040c534();\n    *(unaff_EBP + -0x1c) = *0x44bf78;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    puVar1 = **(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x40) = puVar1;\n    *(unaff_EBP + -0x3c) = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCPInfo;\n    if (*(unaff_EBP + 8) == *(unaff_EBP + 0xc)) {\n        arg_8h_00 = *(unaff_EBP + -0x48);\n    }\n    else {\n        var_18h = unaff_EBP + -0x30;\n        var_1ch = *(unaff_EBP + 8);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if ((((iVar3 != 0) && (*(unaff_EBP + -0x30) == 1)) &&\n            (iVar3 = (*pcVar2)(*(unaff_EBP + 0xc), unaff_EBP + -0x30),  iVar3 != 0)) && (*(unaff_EBP + -0x30) == 1)) {\n            *(unaff_EBP + -0x3c) = 1;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = *(unaff_EBP + -0x38);\n        }\n        else {\n            arg_ch_00 = puVar1;\n            if (puVar1 == 0xffffffff) {\n                iVar3 = fcn.0040be00(*(unaff_EBP + 0x10));\n                arg_ch_00 = iVar3 + 1;\n            }\n            *(unaff_EBP + -0x38) = arg_ch_00;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), puVar1, 0, 0);\n            *(unaff_EBP + -0x38) = arg_ch_00;\n            if (arg_ch_00 == NULL) goto code_r0x0041529c;\n        }\n        arg_8h_00 = &fcn.004150e4::var_1ch;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040a9e0();\n        *(unaff_EBP + -0x18) = &fcn.004150e4::var_1ch;\n        *(unaff_EBP + -0x48) = &fcn.004150e4::var_1ch;\n        fcn.0040b220(&fcn.004150e4::var_1ch, 0, arg_ch_00 * 2);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x10) {\n            arg_8h_00 = fcn.0040bfe0(2, arg_ch_00);\n            if (arg_8h_00 == NULL) goto code_r0x0041529c;\n            *(unaff_EBP + -0x44) = 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), *(unaff_EBP + -0x40), arg_8h_00, arg_ch_00);\n        if (iVar3 != 0) {\n            if (*(unaff_EBP + 0x18) == 0) {\n                if (*(unaff_EBP + -0x3c) == 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    arg_ch_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                          (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, 0, 0);\n                    if (arg_ch_00 == NULL) goto code_r0x0041528d;\n                }\n                var_1ch = 1;\n                var_18h = arg_ch_00;\n                iVar3 = fcn.0040bfe0(1, arg_ch_00);\n                *(unaff_EBP + -0x34) = iVar3;\n                if (iVar3 != 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, iVar3, arg_ch_00);\n                    if (iVar3 == 0) {\n                        var_18h = *(unaff_EBP + -0x34);\n                        var_1ch = 0x415277;\n                        fcn.0040a68c(var_18h);\n                        *(unaff_EBP + -0x34) = 0;\n                    }\n                    else if (*(unaff_EBP + -0x40) != -1) {\n                        **(unaff_EBP + 0x14) = iVar3;\n                    }\n                }\n            }\n            else {\n                var_18h = NULL;\n                var_1ch = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c)\n                                  );\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x18);\n                }\n            }\n        }\n    }\ncode_r0x0041528d:\n    if (*(unaff_EBP + -0x44) != 0) {\n        var_1ch = 0x415298;\n        var_18h = arg_8h_00;\n        fcn.0040a68c(arg_8h_00);\n    }\ncode_r0x0041529c:\n    *(unaff_EBP + -0x58) = 0x4152a7;\n    fcn.0040bcd7();\n    *(unaff_EBP + -0x58) = 0x4152ac;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1857
    },
    "0041535c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041535c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *extraout_ECX;\n    code *arg_8h_00;\n    int32_t unaff_EBP;\n    code **ppcVar4;\n    code *pcVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x4444f0, 0x20);\n    *(unaff_EBP + -0x1c) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == 2) {\n        ppcVar4 = 0x44f4a8;\n        pcVar5 = *0x44f4a8;\ncode_r0x004153e9:\n        *(unaff_EBP + -0x1c) = 1;\n        iVar1 = *(unaff_EBP + -0x24);\n    }\n    else {\n        if (((iVar1 != 4) && (iVar1 != 8)) && (iVar1 != 0xb)) {\n            if (iVar1 == 0xf) {\n                ppcVar4 = 0x44f4b4;\n                pcVar5 = *0x44f4b4;\n            }\n            else if (iVar1 == 0x15) {\n                ppcVar4 = 0x44f4ac;\n                pcVar5 = *0x44f4ac;\n            }\n            else {\n                if (iVar1 != 0x16) goto code_r0x004154cf;\n                ppcVar4 = 0x44f4b0;\n                pcVar5 = *0x44f4b0;\n            }\n            goto code_r0x004153e9;\n        }\n        iVar1 = fcn.0040ee57();\n        *(unaff_EBP + -0x24) = iVar1;\n        iVar2 = fcn.0041532e();\n        ppcVar4 = iVar2 + 8;\n        pcVar5 = *ppcVar4;\n    }\n    arg_8h_00 = NULL;\n    *(unaff_EBP + -0x20) = pcVar5;\n    if (pcVar5 == 0x1) goto code_r0x004154cf;\n    if (pcVar5 == NULL) {\n        fcn.0040c2be(3);\n        arg_8h_00 = extraout_ECX;\n    }\n    if (*(unaff_EBP + -0x1c) != arg_8h_00) {\n        fcn.0040d784(arg_8h_00);\n        arg_8h_00 = NULL;\n    }\n    *(unaff_EBP + -4) = arg_8h_00;\n    iVar2 = *(unaff_EBP + 8);\n    if (((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar1 + 0x58);\n        *(iVar1 + 0x58) = arg_8h_00;\n        if (iVar2 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar1 + 0x5c);\n            *(iVar1 + 0x5c) = 0x8c;\n            goto code_r0x00415448;\n        }\ncode_r0x00415474:\n        *ppcVar4 = arg_8h_00;\n    }\n    else {\ncode_r0x00415448:\n        iVar3 = *0x44c4a0;\n        if (iVar2 != 8) goto code_r0x00415474;\n        for (; *(unaff_EBP + -0x28) = iVar3,  iVar3 < *0x44c4a4 + *0x44c4a0; iVar3 = iVar3 + 1) {\n            *(*(iVar1 + 0x54) + 8 + iVar3 * 0xc) = arg_8h_00;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00415497();\n    if (*(unaff_EBP + 8) == 8) {\n        (*pcVar5)(8, *(iVar1 + 0x5c));\n    }\n    else {\n        (*pcVar5)(*(unaff_EBP + 8));\n    }\n    iVar2 = *(unaff_EBP + 8);\n    if ((((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) && (*(iVar1 + 0x58) = *(unaff_EBP + -0x2c),  iVar2 == 8)) {\n        *(iVar1 + 0x5c) = *(unaff_EBP + -0x30);\n    }\ncode_r0x004154cf:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 1169
    },
    "0041568d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415963)\n// WARNING: Removing unreachable block (ram,0x004158dd)\n// WARNING: Removing unreachable block (ram,0x00415a3f)\n// WARNING: Removing unreachable block (ram,0x004158ef)\n// WARNING: Removing unreachable block (ram,0x004158f7)\n// WARNING: Removing unreachable block (ram,0x004158fd)\n// WARNING: Removing unreachable block (ram,0x00415900)\n// WARNING: Removing unreachable block (ram,0x00415907)\n// WARNING: Removing unreachable block (ram,0x00415911)\n// WARNING: Removing unreachable block (ram,0x004159db)\n// WARNING: Removing unreachable block (ram,0x004159d5)\n// WARNING: Removing unreachable block (ram,0x004159e1)\n// WARNING: Removing unreachable block (ram,0x004159fe)\n// WARNING: Removing unreachable block (ram,0x00415a00)\n// WARNING: Removing unreachable block (ram,0x00415a08)\n// WARNING: Removing unreachable block (ram,0x00415a0b)\n// WARNING: Removing unreachable block (ram,0x00415a10)\n// WARNING: Removing unreachable block (ram,0x00415a13)\n// WARNING: Removing unreachable block (ram,0x00415a48)\n// WARNING: Removing unreachable block (ram,0x00415a1a)\n// WARNING: Removing unreachable block (ram,0x00415a21)\n// WARNING: Removing unreachable block (ram,0x00415a5f)\n// WARNING: Removing unreachable block (ram,0x00415a66)\n// WARNING: Removing unreachable block (ram,0x00415a6e)\n\nvoid __cdecl\nfcn.0041568d(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004156f0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x415a91\n    (**0x415a91)();\n    return;\n}\n",
        "token_count": 684
    },
    "00415ac1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00415ac1(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    ushort var_10h;\n    uint var_eh;\n    uint32_t var_ah;\n    uchar var_6h;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    uVar3 = arg_10h & 0x7fff;\n    var_1ch._0_1_ = 0xcc;\n    var_1ch._1_1_ = 0xcc;\n    var_1ch._2_1_ = 0xcc;\n    var_1ch._3_1_ = 0xcc;\n    var_18h = 0xcc;\n    var_17h = 0xcc;\n    var_16h = 0xcc;\n    var_15h = 0xcc;\n    var_14h = 0xcc;\n    var_13h = 0xcc;\n    var_12h = 0xfb;\n    var_11h = 0x3f;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar3 == 0) && (arg_ch == 0)) && (arg_8h == 0)) {\ncode_r0x00415c37:\n        *(arg_1ch + 2) = 0x30;\ncode_r0x00415d3a:\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 5) = 0;\n    }\n    else {\n        if (uVar3 == 0x7fff) {\n            *arg_1ch = 1;\n            if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x00415bad;\n                    pcVar8 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) {\ncode_r0x00415bad:\n                        pcVar8 = \"1#QNAN\";\n                        goto code_r0x00415bb2;\n                    }\n                    pcVar8 = \"1#IND\";\n                }\n                fcn.00412280(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 5;\n            }\n            else {\n                pcVar8 = \"1#SNAN\";\ncode_r0x00415bb2:\n                fcn.00412280(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 6;\n            }\n            goto code_r0x00415d1c;\n        }\n        var_10h = 0;\n        iVar6 = ((uVar3 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar3 * 0x4d10 >> 0x10;\n        var_6h = uVar3;\n        var_5h = uVar3 >> 8;\n        var_eh = arg_8h;\n        var_ah = arg_ch;\n        fcn.00416cce(&var_10h, -iVar6, 1);\n        if (0x3ffe < CONCAT11(var_5h, var_6h)) {\n            iVar6 = iVar6 + 1;\n            fcn.00416a9c(&var_10h, &var_1ch);\n        }\n        *arg_1ch = iVar6;\n        if (((arg_18h & 1) != 0) && (arg_14h = arg_14h + iVar6,  arg_14h < 1)) goto code_r0x00415c37;\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_5h, var_6h) - 0x3ffe;\n        var_6h = 0;\n        var_5h = '\\0';\n        arg_10h = 8;\n        do {\n            fcn.00415554(&var_10h);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if (iVar7 < 0) {\n            for (uVar3 = -iVar7 & 0xff; uVar3 != 0; uVar3 = uVar3 - 1) {\n                fcn.00415582(&var_10h);\n            }\n        }\n        arg_10h = arg_14h + 1;\n        piVar4 = arg_1ch + 2;\n        var_30h = piVar4;\n        if (0 < arg_10h) {\n            do {\n                var_ah._2_2_ = var_ah >> 0x10;\n                var_eh._2_2_ = var_eh >> 0x10;\n                var_28h = CONCAT22(var_eh, var_10h);\n                uStack40 = CONCAT22(var_ah, var_eh._2_2_);\n                uStack36 = CONCAT13(var_5h, CONCAT12(var_6h, var_ah._2_2_));\n                fcn.00415554(&var_10h);\n                fcn.00415554(&var_10h);\n                fcn.004154f6(&var_10h, &var_28h);\n                fcn.00415554(&var_10h);\n                piVar4 = var_30h + 1;\n                arg_10h = arg_10h + -1;\n                *var_30h = var_5h + '0';\n                var_5h = '\\0';\n                var_30h = piVar4;\n            } while (arg_10h != 0);\n        }\n        piVar5 = piVar4 + -1;\n        piVar1 = arg_1ch + 2;\n        if (*(piVar4 + -1) < '5') {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '0')); piVar5 = piVar5 + -1) {\n            }\n            if (piVar5 < piVar1) {\n                *piVar1 = 0x30;\n                goto code_r0x00415d3a;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '9')); piVar5 = piVar5 + -1) {\n                *piVar5 = 0x30;\n            }\n            if (piVar5 < piVar1) {\n                piVar5 = piVar5 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar5 = *piVar5 + '\\x01';\n        }\n        cVar2 = (piVar5 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar2;\n        *(cVar2 + 4 + arg_1ch) = 0;\n    }\ncode_r0x00415d1c:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1933
    },
    "004162d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004162d4(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (param_1 < *0x450544) {\n        piVar1 = (param_1 >> 5) * 4 + 0x450560;\n        iVar4 = (param_1 & 0x1f) * 0x24;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x44bf74 == 1) {\n                if (param_1 == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00416330;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x00416330:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\n    puVar3 = fcn.0040d4de();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 361
    },
    "00416574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00416574(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if (((param_1[3] & 3) == 2) && ((param_1[3] & 0x108U) != 0)) {\n        arg_10h = *param_1 - param_1[2];\n        if (0 < arg_10h) {\n            iVar1 = fcn.00414805(param_1[4], param_1[2], arg_10h);\n            if (iVar1 == arg_10h) {\n                if (param_1[3] < '\\0') {\n                    param_1[3] = param_1[3] & 0xfffffffd;\n                }\n            }\n            else {\n                param_1[3] = param_1[3] | 0x20;\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    param_1[1] = 0;\n    *param_1 = param_1[2];\n    return uVar2;\n}\n",
        "token_count": 258
    },
    "004166dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004166dd(uint32_t arg_8h, char *arg_ch, char *nNumberOfBytesToRead)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_8h = NULL;\n    if (nNumberOfBytesToRead != NULL) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x450560;\n        iVar9 = (arg_8h & 0x1f) * 0x24;\n        uVar3 = *(*piVar1 + iVar9 + 4);\n        if ((uVar3 & 2) == 0) {\n            pcVar8 = arg_ch;\n            if (((uVar3 & 0x48) != 0) && (*(*piVar1 + iVar9 + 5) != '\\n')) {\n                nNumberOfBytesToRead = nNumberOfBytesToRead + -1;\n                *arg_ch = *(*piVar1 + 5 + iVar9);\n                pcVar8 = arg_ch + 1;\n                var_8h = 0x1;\n                *(*piVar1 + 5 + iVar9) = 10;\n            }\n            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                              (*(*piVar1 + iVar9), pcVar8, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            if (iVar6 == 0) {\n                iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar9 == 5) {\n                    puVar7 = fcn.0040d4d5();\n                    *puVar7 = 9;\n                    puVar7 = fcn.0040d4de();\n                    *puVar7 = 5;\n                }\n                else {\n                    if (iVar9 == 0x6d) {\n                        return 0;\n                    }\n                    fcn.0040d4e7(iVar9);\n                }\n                return -1;\n            }\n            if ((*(*piVar1 + 4 + iVar9) & 0x80) == 0) {\n                return var_8h + lpNumberOfBytesRead;\n            }\n            if ((lpNumberOfBytesRead == 0) || (*arg_ch != '\\n')) {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 & 0xfb;\n            }\n            else {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 | 4;\n            }\n            var_8h = arg_ch + var_8h + lpNumberOfBytesRead;\n            nNumberOfBytesToRead = arg_ch;\n            pcVar8 = arg_ch;\n            if (arg_ch < var_8h) {\n                do {\n                    cVar4 = *nNumberOfBytesToRead;\n                    if (cVar4 == '\\x1a') {\n                        if ((*(*piVar1 + 4 + iVar9) & 0x40) == 0) {\n                            puVar2 = *piVar1 + 4 + iVar9;\n                            *puVar2 = *puVar2 | 2;\n                        }\n                        break;\n                    }\n                    if (cVar4 == '\\r') {\n                        if (nNumberOfBytesToRead < var_8h + -1) {\n                            if (nNumberOfBytesToRead[1] == '\\n') {\n                                pcVar5 = nNumberOfBytesToRead + 2;\n                                goto code_r0x0041686a;\n                            }\ncode_r0x00416884:\n                            nNumberOfBytesToRead = nNumberOfBytesToRead + 1;\n                            *pcVar8 = '\\r';\n                        }\n                        else {\n                            pcVar5 = nNumberOfBytesToRead + 1;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (*(*piVar1 + iVar9), &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                            if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0)) ||\n                               (lpNumberOfBytesRead == 0)) goto code_r0x00416884;\n                            if ((*(*piVar1 + 4 + iVar9) & 0x48) == 0) {\n                                if ((pcVar8 == arg_ch) && (lpBuffer == '\\n')) goto code_r0x0041686a;\n                                fcn.00414518(arg_8h, 0xffffffff, 1);\n                                if (lpBuffer == '\\n') goto code_r0x00416888;\n                                goto code_r0x00416884;\n                            }\n                            if (lpBuffer == '\\n') {\ncode_r0x0041686a:\n                                nNumberOfBytesToRead = pcVar5;\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*piVar1 + 5 + iVar9) = lpBuffer;\n                                nNumberOfBytesToRead = pcVar5;\n                            }\n                        }\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead;\n                    }\n                    else {\n                        *pcVar8 = cVar4;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead + 1;\n                    }\ncode_r0x00416888:\n                    nNumberOfBytesToRead = pcVar5;\n                } while (nNumberOfBytesToRead < var_8h);\n            }\n            return pcVar8 - arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1324
    },
    "004169be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004169be(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x450690) {\n        iVar1 = fcn.0040cc0b();\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.0041701d(*(iVar1 + 0xc), 1, arg_8h, arg_10h, arg_ch, arg_10h, *(iVar1 + 4), unaff_EBP, unaff_retaddr, \n                         arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n    if (iVar1 == 0) {\n        return 0x7fffffff;\n    }\n    return iVar1 + -2;\n}\n",
        "token_count": 512
    },
    "00416a9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416a9c(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    int32_t var_28h;\n    uint16_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_ch;\n    var_4h = *0x44bf78;\n    var_1ch = 0;\n    var_10h._0_1_ = 0;\n    var_10h._1_1_ = 0;\n    var_10h._2_2_ = 0;\n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    var_8h._3_1_ = 0;\n    uVar6 = *(arg_ch + 10) & 0x7fff;\n    uVar4 = *(arg_8h + 10) & 0x7fff;\n    uVar8 = (*(arg_ch + 10) ^ *(arg_8h + 10)) & 0x8000;\n    uVar2 = uVar6 + uVar4;\n    if (((uVar4 < 0x7fff) && (uVar6 < 0x7fff)) && (uVar2 < 0xbffe)) {\n        if (uVar2 < 0x3fc0) {\ncode_r0x00416b49:\n            arg_8h[2] = 0;\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x00416cc1;\n        }\n        if (uVar4 == 0) {\n            uVar2 = uVar2 + 1;\n            arg_8h._0_2_ = 0;\n            if ((((arg_8h[2] & 0x7fffffffU) != 0) || (arg_8h[1] != 0)) || (*arg_8h != 0)) goto code_r0x00416b33;\n        }\n        else {\ncode_r0x00416b33:\n            if (((uVar6 == 0) && (uVar2 = uVar2 + 1,  (arg_ch[2] & 0x7fffffffU) == 0)) &&\n               ((arg_ch[1] == 0 && (*arg_ch == 0)))) goto code_r0x00416b49;\n            var_18h = 0;\n            var_14h = &var_ch;\n            arg_ch = 0x5;\n            do {\n                if (0 < arg_ch) {\n                    var_24h = var_18h * 2 + arg_8h;\n                    var_20h = piVar3 + 2;\n                    var_28h = arg_ch;\n                    do {\n                        iVar5 = fcn.004154d5(var_14h[-1], *var_20h * *var_24h, var_14h + -1);\n                        if (iVar5 != 0) {\n                            *var_14h = *var_14h + 1;\n                        }\n                        var_24h = var_24h + 1;\n                        var_20h = var_20h + -2;\n                        var_28h = var_28h + -1;\n                    } while (var_28h != 0);\n                }\n                var_14h = var_14h + 2;\n                var_18h = var_18h + 1;\n                arg_ch = arg_ch + -1;\n            } while (0 < arg_ch);\n            arg_8h._0_2_ = uVar2 + 0xc002;\n            if (arg_8h < 1) {\ncode_r0x00416bfd:\n                arg_8h._0_2_ = arg_8h - 1;\n                if (arg_8h < 0) {\n                    uVar7 = -arg_8h;\n                    arg_8h._0_2_ = 0;\n                    do {\n                        if ((var_10h & 1) != 0) {\n                            var_1ch = var_1ch + 1;\n                        }\n                        fcn.00415582(&var_10h);\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                    if (var_1ch != 0) {\n                        var_10h._0_1_ = var_10h | 1;\n                    }\n                }\n            }\n            else {\n                do {\n                    if ((var_8h._3_1_ & 0x80) != 0) break;\n                    fcn.00415554(&var_10h);\n                    arg_8h._0_2_ = arg_8h - 1;\n                } while (0 < arg_8h);\n                if (arg_8h < 1) goto code_r0x00416bfd;\n            }\n            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                    var_10h._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                        var_ch._2_2_ = 0;\n                        var_8h._0_2_ = 0;\n                        if (CONCAT11(var_8h._3_1_, var_8h._2_1_) == -1) {\n                            arg_8h._0_2_ = arg_8h + 1;\n                            var_8h._2_1_ = 0;\n                            var_8h._3_1_ = 0x80;\n                        }\n                        else {\n                            iVar1 = CONCAT11(var_8h._3_1_, var_8h._2_1_) + 1;\n                            var_8h._2_1_ = iVar1;\n                            var_8h._3_1_ = iVar1 >> 8;\n                        }\n                    }\n                    else {\n                        iVar5 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                        var_ch._2_2_ = iVar5;\n                        var_8h._0_2_ = iVar5 >> 0x10;\n                    }\n                }\n                else {\n                    iVar5 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                    var_10h._2_2_ = iVar5;\n                    var_ch._0_2_ = iVar5 >> 0x10;\n                }\n            }\n            if (0x7ffe < arg_8h) goto code_r0x00416ca6;\n            *arg_8h = var_10h._2_2_;\n            *(arg_8h + 2) = CONCAT22(var_ch._2_2_, var_ch);\n            *(arg_8h + 6) = CONCAT13(var_8h._3_1_, CONCAT12(var_8h._2_1_, var_8h));\n            arg_8h._0_2_ = arg_8h | uVar8;\n        }\n        *(arg_8h + 10) = arg_8h;\n    }\n    else {\ncode_r0x00416ca6:\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = (-(uVar8 != 0) & 0x80000000) + 0x7fff8000;\n    }\ncode_r0x00416cc1:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1908
    },
    "00416ed7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416ed7(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x444608, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450544) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450560;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416394(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\ncode_r0x00416f57:\n                puVar3 = fcn.0040d4d5();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00416353(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                else {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    puVar3 = fcn.0040d4de();\n                    *puVar3 = *(unaff_EBP + -0x1c);\n                    goto code_r0x00416f57;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00416f77();\n            goto code_r0x00416f8d;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\ncode_r0x00416f8d:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 591
    },
    "00417001": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00417001(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_1;\n    if (param_1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (*in_EAX == '\\0') goto code_r0x00417015;\n            in_EAX = in_EAX + 1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = iVar1 + -1;\ncode_r0x00417015:\n    return (param_1 - iVar1) + -1;\n}\n",
        "token_count": 141
    },
    "0041701d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_40h_3\n// WARNING: Variable defined which should be unmapped: var_3ch_3\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.0041701d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch, uint lpMultiByteStr, uint cbMultiByte, \n            uint lpString2, uint cchCount2, uint CodePage)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint Locale;\n    uint dwCmpFlags;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpCPInfo;\n    uint var_4h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_4h;\n    uint var_50h;\n    uint var_44h_2;\n    uint var_40h_3;\n    uint var_3ch_3;\n    uint lpString1;\n    uint var_30h_2;\n    uchar auStack48 [2];\n    uint var_2ah;\n    int32_t var_4ch;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_5ch;\n    uint uVar7;\n    \n    uVar7 = 0x40;\n    fcn.0040c534();\n    *(unaff_EBP + -0x1c) = *0x44bf78;\n    iVar6 = 0;\n    if (*0x44f4cc == 0) {\n        var_4ch = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x44f4cc = 2;\n            }\n        }\n        else {\n            *0x44f4cc = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        uVar3 = fcn.00417001();\n        *(unaff_EBP + 0x14) = uVar3;\n    }\n    iVar2 = *(unaff_EBP + 0x1c);\n    if (0 < iVar2) {\n        iVar2 = fcn.00417001();\n        *(unaff_EBP + 0x1c) = iVar2;\n    }\n    if ((*0x44f4cc == 2) || (*0x44f4cc == 0)) {\n        *(unaff_EBP + -0x38) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            *(unaff_EBP + 8) = *0x44f338;\n        }\n        iVar2 = *(unaff_EBP + 0x20);\n        if (*(unaff_EBP + 0x20) == 0) {\n            iVar2 = *0x44f348;\n        }\n        iVar5 = fcn.004150a1(*(unaff_EBP + 8));\n        if (iVar5 == -1) goto code_r0x00417390;\n        if (iVar5 != iVar2) {\n            var_4ch = iVar2;\n            iVar6 = fcn.004150e4(iVar2, iVar5, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x444618, uVar7);\n            if (iVar6 == 0) goto code_r0x00417390;\n            var_4ch = iVar2;\n            iVar2 = fcn.004150e4(iVar2, iVar5, *(unaff_EBP + 0x18), unaff_EBP + 0x1c, 0, 0, 0x444618, uVar7);\n            *(unaff_EBP + -0x38) = iVar2;\n            if (iVar2 == 0) {\n                fcn.0040a68c(iVar6);\n                goto code_r0x00417390;\n            }\n            *(unaff_EBP + 0x10) = iVar6;\n            *(unaff_EBP + 0x18) = *(unaff_EBP + -0x38);\n        }\n        var_4ch = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar6 != 0) {\n            fcn.0040a68c(iVar6);\n            stack0xffffffd4 = 0x41738c;\n            fcn.0040a68c(*(unaff_EBP + -0x38));\n        }\n        goto code_r0x00417390;\n    }\n    if (*0x44f4cc != 1) goto code_r0x00417390;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x44f348;\n    }\n    if ((*(unaff_EBP + 0x14) == 0) || (iVar2 == 0)) {\n        if ((*(unaff_EBP + 0x14) == iVar2) ||\n           (((1 < iVar2 || (1 < *(unaff_EBP + 0x14))) || (iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(),  iVar6 == 0))))\n        goto code_r0x00417390;\n        if (0 < *(unaff_EBP + 0x14)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x10) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x10)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00417390;\n        }\n        if (0 < *(unaff_EBP + 0x1c)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x18) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x18)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00417390;\n        }\n    }\n    var_4ch = *(unaff_EBP + 0x20);\n    iVar6 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    *(unaff_EBP + -0x48) = iVar6;\n    if (iVar6 == 0) goto code_r0x00417390;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040a9e0();\n    *(unaff_EBP + -0x18) = &fcn.0041701d::var_4ch;\n    *(unaff_EBP + -0x34) = &fcn.0041701d::var_4ch;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x34) == 0) {\n        iVar2 = fcn.0040a67a();\n        *(unaff_EBP + -0x34) = iVar2;\n        if (iVar2 == 0) goto code_r0x00417390;\n        *(unaff_EBP + -0x3c) = 1;\n    }\n    unique0x00007a00 = *(unaff_EBP + 0x14);\n    _auStack48 = *(unaff_EBP + 0x10);\n    var_30h_2 = 1;\n    lpString1 = *(unaff_EBP + 0x20);\n    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar2 != 0) {\n        arg_8h_00 = &fcn.0041701d::lpString1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 0x20), 9, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), 0, 0);\n        *(unaff_EBP + -0x4c) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -4) = 1;\n            fcn.0040a9e0();\n            *(unaff_EBP + -0x18) = &fcn.0041701d::lpString1;\n            *(unaff_EBP + -0x50) = &fcn.0041701d::lpString1;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x38) {\n                arg_8h_00 = fcn.0040a67a(iVar2 * 2);\n                if (arg_8h_00 == NULL) goto code_r0x004172cb;\n                *(unaff_EBP + -0x44) = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x20), 1, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), arg_8h_00, iVar2);\n            if (iVar5 != 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                  (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x34), iVar6, arg_8h_00, iVar2);\n                *(unaff_EBP + -0x40) = uVar7;\n            }\n            if (*(unaff_EBP + -0x44) != 0) {\n                fcn.0040a68c(arg_8h_00);\n            }\n        }\n    }\ncode_r0x004172cb:\n    if (*(unaff_EBP + -0x3c) != 0) {\n        fcn.0040a68c(*(unaff_EBP + -0x34));\n    }\ncode_r0x00417390:\n    *(unaff_EBP + -0x60) = 0x41739b;\n    fcn.0040bcd7();\n    *(unaff_EBP + -0x60) = 0x4173a0;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 2863
    },
    "004173ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.004173ee(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (unaff_EDI != NULL) {\n        iVar1 = *unaff_EDI;\n        piVar2 = unaff_EDI;\n        while (iVar1 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = *piVar2;\n        }\n        piVar2 = fcn.0040a67a(iVar3 * 4 + 4);\n        if (piVar2 == NULL) {\n            fcn.0040ba0d(9);\n        }\n        iVar3 = *unaff_EDI;\n        piVar4 = piVar2;\n        while (iVar3 != 0) {\n            iVar3 = fcn.0040c2ed(iVar3);\n            *piVar4 = iVar3;\n            piVar4 = piVar4 + 1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar3 = *unaff_EDI;\n        }\n        *piVar4 = 0;\n        return piVar2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 309
    },
    "00417c77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00417c77(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (param_1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar4 = param_1;\n        puVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(param_1);\n        if (param_1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*pcVar1)(param_1);\n        }\n        if (puVar3 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.GDI32.dll_CreateDCA)(*puVar3 + puVar3, puVar3[1] + puVar3, puVar3[2] + puVar3, uVar2);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            if (param_1 != 0) {\n                (*pcVar1)(param_1);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 292
    },
    "00417ce2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00417ce2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041e00c(0, *(unaff_EBP + 0x10));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CPrintDialog.0;\n    extraout_ECX[0x1c] = extraout_ECX + 0x1d;\n    fcn.0040b220(extraout_ECX + 0x1d, 0, 0x42);\n    *extraout_ECX[0x1c] = 0x42;\n    *(extraout_ECX[0x1c] + 0x14) = *(unaff_EBP + 0xc) | 0x3000;\n    iVar3 = fcn.0041e2ff();\n    if (iVar3 != 0) {\n        extraout_ECX[0x1c][0x15] = extraout_ECX[0x1c][0x15] | 8;\n    }\n    iVar3 = *(unaff_EBP + 8);\n    *(extraout_ECX[0x1c] + 0x2a) = fcn.004183e4;\n    *(extraout_ECX[0x1c] + 0x2e) = fcn.004183e4;\n    if (iVar3 == 0) {\n        extraout_ECX[0x14] = 0x7008;\n        pcVar2 = extraout_ECX[0x1c] + 0x15;\n        *pcVar2 = *pcVar2 | 1;\n    }\n    else {\n        extraout_ECX[0x14] = 0x7009;\n        puVar1 = extraout_ECX[0x1c] + 0x14;\n        *puVar1 = *puVar1 | 0x40;\n    }\n    extraout_ECX[0x1c][0x15] = extraout_ECX[0x1c][0x15] & 0xfd;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 636
    },
    "00417ece": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00417ece(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(*(param_1 + 0x70) + 0x1c));\n    bVar1 = false;\n    fcn.0040b220(*(*(param_1 + 0x70) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x70) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x70);\n    uVar4 = fcn.0041e1d8();\n    *(iVar3 + 4) = uVar4;\n    fcn.0041b542();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x70) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x70) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x70) + 4), 0);\n        }\n    }\n    iVar3 = fcn.004328f8();\n    if ((*(*(param_1 + 0x70) + 0x36) & 8) == 0) {\n        fcn.0041cb73(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x74) == 0) {\n        (*_sym.imp.comdlg32.dll_GetSaveFileNameA)(*(param_1 + 0x70));\n    }\n    else {\n        (*_sym.imp.comdlg32.dll_GetOpenFileNameA)();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x70) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.0041e212();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 605
    },
    "004180fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: lpVersionInformation\n\nvoid __cdecl\nfcn.004180fc(uint arg_8h, uint arg_ch, uint lpString2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a8h;\n    uint lpVersionInformation;\n    uint var_a0h;\n    uint var_94h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = *0x44bf78;\n    *(unaff_EBP + -0xa8) = extraout_ECX;\n    fcn.0041e00c(0, *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CFileDialog.0;\n    fcn.00408d23();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x20) == 0) {\n        fcn.0040b220(unaff_EBP + -0xa4, 0, 0x94);\n        *(unaff_EBP + -0xa4) = 0x94;\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(unaff_EBP + -0xa4);\n        if ((*(unaff_EBP + -0x94) != 2) || (*(unaff_EBP + 0x20) = 0x58,  *(unaff_EBP + -0xa0) < 5)) {\n            *(unaff_EBP + 0x20) = 0x4c;\n        }\n    }\n    pcVar5 = fcn.0040a67a(*(unaff_EBP + 0x20));\n    extraout_ECX[0x1c] = pcVar5;\n    if (pcVar5 == NULL) {\n        pcVar5 = fcn.00417bb3();\n    }\n    fcn.0040b220(pcVar5, 0, *(unaff_EBP + 0x20));\n    pcVar5 = *(unaff_EBP + 8);\n    uVar2 = *(unaff_EBP + 0x20);\n    extraout_ECX[0x1d] = pcVar5;\n    extraout_ECX[0x14] = 0x7005 - (pcVar5 != NULL);\n    extraout_ECX[0x70] = NULL;\n    *(extraout_ECX + 0x1f) = 0;\n    ppcVar1 = extraout_ECX + 0x2f;\n    *ppcVar1 = 0;\n    *extraout_ECX[0x1c] = uVar2;\n    uVar2 = *(unaff_EBP + 0xc);\n    *(extraout_ECX[0x1c] + 0x1c) = ppcVar1;\n    *(extraout_ECX[0x1c] + 0x20) = 0x104;\n    *(extraout_ECX[0x1c] + 0x3c) = uVar2;\n    uVar3 = *(unaff_EBP + 0x14);\n    *(extraout_ECX[0x1c] + 0x24) = extraout_ECX + 0x1f;\n    *(extraout_ECX[0x1c] + 0x28) = 0x40;\n    *(extraout_ECX[0x1c] + 0x34) = *(extraout_ECX[0x1c] + 0x34) | uVar3 | 0x80020;\n    if ((*(unaff_EBP + 0x14) & 0x40) != 0) {\n        extraout_ECX[0x1c][0x36] = extraout_ECX[0x1c][0x36] & 0x7f;\n    }\n    iVar6 = fcn.00432908();\n    iVar4 = *(unaff_EBP + 0x10);\n    *(extraout_ECX[0x1c] + 8) = *(iVar6 + 0xc);\n    *(extraout_ECX[0x1c] + 0x44) = fcn.004183e4;\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(ppcVar1, *(unaff_EBP + 0x10), 0x104);\n    }\n    if (*(unaff_EBP + 0x18) != 0) {\n        fcn.00408e8d(*(unaff_EBP + 0x18));\n        puVar7 = fcn.00408d37(0);\n        while( true ) {\n            puVar7 = fcn.0040bc2b(puVar7, 0x7c);\n            if (puVar7 == NULL) break;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        *(extraout_ECX[0x1c] + 0xc) = extraout_ECX[0x1e];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1309
    },
    "0041829c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041829c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    uVar1 = *(*(extraout_ECX + 0x70) + 0x36);\n    *(unaff_EBP + -0x14) = 0;\n    if (((uVar1 & 8) != 0) && (*(extraout_ECX + 0x1c) != 0)) {\n        piVar3 = fcn.0041fa72();\n        iVar4 = (**(*piVar3 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar4 + 0x10;\n        pcVar2 = _sym.imp.USER32.dll_GetParent;\n        uVar6 = *(extraout_ECX + 0x1c);\n        *(unaff_EBP + -4) = 0;\n        uVar5 = (*pcVar2)(uVar6);\n        uVar5 = fcn.0041b49a(uVar5);\n        *(unaff_EBP + -0x14) = uVar5;\n        uVar5 = fcn.00408d37(0x104);\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(*(*(unaff_EBP + -0x14) + 0x1c), 0x464, 0x104, uVar5);\n        if (iVar4 < 0) {\n            fcn.00408bce();\n        }\n        else {\n            fcn.00408c11(uVar6, 0xffffffff);\n        }\n        if (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n            uVar6 = (*pcVar2)(*(extraout_ECX + 0x1c));\n            iVar4 = fcn.0041b49a(uVar6);\n            uVar6 = fcn.00408d37(0x104);\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x465, 0x104, uVar6);\n            if (-1 < iVar4) {\n                fcn.00408c11(0xffffffff);\n                fcn.00408c4d(unaff_EBP + -0x10);\n                fcn.004089b7();\n                goto code_r0x0041837f;\n            }\n            fcn.00408bce();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004089b7();\n    }\n    fcn.00408f6a(*(*(extraout_ECX + 0x70) + 0x1c));\ncode_r0x0041837f:\n    uVar6 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar6;\n}\n",
        "token_count": 779
    },
    "0041858c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041858c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00419ad1(0x426492);\n        iVar3 = fcn.00419ae3(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fbd7(0x43f048, 0x432ee6, 0x430cd1, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.00419ad1(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x24);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 364
    },
    "0041fc5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.0041fc5b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0041982a(arg_8h_00);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0041982a(arg_8h_00);\n            if (iVar1 == 0) {\n                uVar2 = fcn.00419ad1(0x426492);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar2;\n                iVar1 = fcn.0040a57a();\n                if (iVar1 == 0) {\n                    fcn.00417bb3();\n                }\n                (**(extraout_ECX + 0x14))(iVar1);\n                piVar3 = fcn.004199c9(arg_8h_00);\n                uVar2 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar3 = iVar1;\n                fcn.00419ad1(uVar2);\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n            else {\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 614
    },
    "00418683": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00418683(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CImageList.0;\n    if (param_1[1] == NULL) {\n        return 0;\n    }\n    uVar1 = fcn.00418608();\n    uVar1 = (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 98
    },
    "00418de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418de0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.0043292e();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x38) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.0041a8cb(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n                fcn.0040b220(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x1c);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x38) & arg_ch) == 0) {\n        iVar2 = fcn.00432908();\n        *(iVar2 + 0x1034) = 0x418dd0;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 419
    },
    "004191e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004191e8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.00419283(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 318
    },
    "00419283": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00419283(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.00419ae3(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00417be7();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 142
    },
    "00419586": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00419586(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.00419283(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -0xc + iVar4 * 0x10;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -4;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    if (puVar3 != 0xfffffff8) {\n        fcn.00408d23();\n    }\n    puVar3[3] = 0;\n    return puVar3;\n}\n",
        "token_count": 323
    },
    "00419762": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00419762(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.00419b13(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00419ae3(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040b220(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 195
    },
    "0041997e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041997e(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.00419283(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00419cd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n\nuint __cdecl\nfcn.00419cd4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint lpWndClass;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &lpWndClass;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x40);\n    if (iVar4 != 0) {\n        uVar5 = 1;\n        goto code_r0x00419db4;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n    if (iVar3 == 0) {\ncode_r0x00419d59:\n        uVar5 = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = 1;\n        iVar4 = fcn.00432908();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.00433ab7(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00432908();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            *(unaff_EBP + -0x14) = iVar4 + 0x34;\n            iVar4 = (*pcVar2)(iVar4 + 0x34);\n            iVar6 = (*pcVar2)(*(iVar1 + 0x24));\n            if (0xfff < iVar4 + 2 + iVar6) goto code_r0x00419d59;\n            uVar7 = (*pcVar2)(*(unaff_EBP + -0x14));\n            uVar5 = *(iVar1 + 0x24);\n            *(unaff_EBP + 8) = uVar7;\n            iVar4 = (*pcVar2)(uVar5);\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            if (*(unaff_EBP + 8) + 2 + iVar4 < 0x1000) {\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(*(unaff_EBP + -0x14), *(iVar1 + 0x24));\n                *(unaff_EBP + 10) = 10;\n                *(unaff_EBP + 0xb) = 0;\n                (*pcVar2)(*(unaff_EBP + -0x14), unaff_EBP + 10);\n            }\n            else {\n                uVar5 = *(iVar1 + 0x10);\n                *(unaff_EBP + -0x18) = 0;\n                (*_sym.imp.USER32.dll_UnregisterClassA)(*(iVar1 + 0x24), uVar5);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00433b1a(1);\n        }\n        uVar5 = *(unaff_EBP + -0x18);\n    }\ncode_r0x00419db4:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 926
    },
    "00419e0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00419e0c(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "00419ebd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00419ebd(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[7];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1c);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    (*_sym.imp.USER32.dll_SetScrollInfo)(iVar2, param_2, param_3, param_4);\n    return 1;\n}\n",
        "token_count": 175
    },
    "00419efa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00419efa(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[7];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x1c);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (*_sym.imp.USER32.dll_GetScrollInfo)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 180
    },
    "00419f37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419f37(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "0041a668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a668(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0041a6d7:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.004262d5(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0041a6d7;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 309
    },
    "0041a8cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041a8cb(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0043292e();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x1c),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x7c);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x160))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0041ab8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ab8b(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    \n    if (param_2 == 3) {\n        fcn.0041ab8b(0, param_3);\n        param_2 = 1;\n    }\n    iVar1 = (**(*param_1 + 0x70))(param_2);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_ShowScrollBar)(param_1[7], param_2, unaff_ESI);\n    }\n    else {\n        fcn.0041d8d9();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0041ac15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac15(uint XAmount, int32_t YAmount, int32_t arg_10h, int32_t lpClipRect)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpRect;\n    int32_t Y;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (lpClipRect == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x1c);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &fcn.0041ac15::lpRect);\n            puStack8 = &fcn.0041ac15::lpRect;\n            uStack12 = 0x41ac5a;\n            fcn.00422688();\n            iVar2 = Y;\n            uStack12 = 0x15;\n            Y = 0;\n            lpRect = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, XAmount, iVar2 + YAmount);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x1c), XAmount, YAmount, arg_10h, lpClipRect);\n    }\n    if ((*(in_ECX + 0x48) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x48) + 0x5c))(XAmount, YAmount);\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0041b41e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041b41e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00419ad1(0x426492);\n        iVar3 = fcn.00419ae3(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fbd7(0x43d1a8, 0x430d11, 0x430cd1, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00419ad1(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 370
    },
    "0041b542": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041b542(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00433874(0x430550);\n    iVar2 = fcn.00432908();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 167
    },
    "0041b5df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b5df(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0041eb77();\n    if (iVar2 == 0) goto code_r0x0041b62a;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00432908();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00432908();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.0042fb11();\n                if (iVar3 == 0) goto code_r0x0041b61f;\n            }\n            fcn.00438e08(0);\n        }\ncode_r0x0041b61f:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0041b62a:\n    if (param_1[0x11] != NULL) {\n        (**(*param_1[0x11] + 0x50))();\n        param_1[0x11] = 0;\n    }\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 4))(1);\n    }\n    param_1[0x12] = 0;\n    if ((*(param_1 + 0xe) & 1) != 0) {\n        iVar2 = fcn.0043292e();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.0040b220(&var_30h, 0, 0x30);\n            var_28h = param_1[7];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.0041b3f7();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0041b514();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 746
    },
    "0041b845": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041b845(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.0041b4c1(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0041b49a(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.00419f37(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 951
    },
    "0041ba89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041ba89(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 8) != '\\0') {\n        var_4h = NULL;\n        iVar1 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar1) {\n            return var_4h;\n        }\n    }\n    piVar2 = fcn.0041b3f7();\n    return piVar2;\n}\n",
        "token_count": 165
    },
    "0041bbc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0041bbc4(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.00433874(0x430550);\n    puVar4 = iVar1 + 0x58;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    *(iVar1 + 100) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(iVar1 + 0x5c) = iVar3;\n    *(unaff_EBP + -4) = 0;\n    if ((iVar3 == 2) && (arg_8h[0x12] != 0)) {\n        (**(*arg_8h[0x12] + 0x60))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0041a811(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0041bb4b(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x58;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 774
    },
    "0041bcfc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041bcfc(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x44ea48)) && (extraout_ECX != 0x44ea98)) &&\n       ((extraout_ECX != 0x44eae8 && (extraout_ECX != 0x44eb38)))) {\n        fcn.0041b6f0();\n    }\n    if (extraout_ECX[0x12] != NULL) {\n        (**(*extraout_ECX[0x12] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x13];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041da32();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 357
    },
    "0041be5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041be5a(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0041be1b();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0041be1b();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "0041be9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be9b(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0041b4c1(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041bbc4(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041be9b(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "0041c01e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0041c01e(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_88h;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041dcc4();\n    fcn.0041a7ce();\n    uVar1 = *(extraout_ECX + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.0041bcfc();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x88;\n        iVar4 = fcn.0041b4c1(iVar2);\n        if (((iVar4 == 0) || (iVar4 = fcn.0041db55(0, 0xbd11ffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) &&\n           (iVar4 = fcn.0041db55(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) {\n            iVar4 = *(unaff_EBP + 0xc);\n            if (iVar4 != 0) {\n                uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                if ((uVar3 & 0x2000) != 0) {\n                    uVar3 = fcn.0041d7d1();\n                    uVar3 = uVar3 & 0xf;\n                    if (((uVar3 != 3) && (uVar3 != 6)) && ((uVar3 != 7 && (uVar3 != 9)))) goto code_r0x0041c0ed;\n                }\n                iVar4 = 0;\n            }\ncode_r0x0041c0ed:\n            fcn.0041dcea(*(unaff_EBP + 8), iVar4);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 739
    },
    "0041c12f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041c12f(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041b4db(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0041bcb1);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "0041c18d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c18d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.00409b82(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.00408c11(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041c1cc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x8c))();\n    return;\n}\n",
        "token_count": 206
    },
    "0041c4a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c4a8(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.0041c417();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0041d8fa();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x1c);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x1c));\n            fcn.0041b49a(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 463
    },
    "0041c644": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c644(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            iVar1 = *arg_8h;\n            if (iVar1 == 0) break;\n            iVar3 = arg_8h[1];\n            var_8h = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x0041c6ab:\n                (**0x44b0c0)();\n                var_28h = 0xffffffff;\n                var_2ch = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_2ch;\n                var_24h = puVar5;\ncode_r0x0041c6e6:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), iVar1, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x0041c6e6;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x0041c6ab;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x0041c6e6;\n            }\n            arg_8h = puVar5 + var_8h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0041be9b(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 583
    },
    "0041c954": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c954(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    code **ppcVar9;\n    code *pcVar10;\n    uint var_13ch;\n    uint var_10ch;\n    uchar var_dh;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    iVar4 = fcn.00433874(0x430550);\n    if (arg_8h != 3) {\n        (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), arg_8h, arg_ch, arg_10h);\n        goto code_r0x0041cb66;\n    }\n    piVar2 = *(iVar4 + 0x14);\n    iVar8 = *arg_10h;\n    iVar5 = fcn.00432908();\n    cVar1 = *(iVar5 + 0x14);\n    if ((piVar2 != NULL) || (((*(iVar8 + 0x23) & 0x40) == 0 && (cVar1 == '\\0')))) {\n        if (*0x44ef94 == 0) {\ncode_r0x0041ca17:\n            if (piVar2 == NULL) {\n                if (*0x44eb88 == 0) {\n                    fcn.0040b220(&var_13ch, 0, 0x30);\n                    var_13ch = 0x30;\n                    *0x44eb88 = (*_sym.imp.USER32.dll_GetClassInfoExA)(0, \"#32768\", &var_13ch);\n                    if (*0x44eb88 != 0) goto code_r0x0041ca9d;\n                    iVar8 = (*_sym.imp.USER32.dll_GetClassNameA)(arg_ch, &var_10ch, 0x100);\n                    if (iVar8 != 0) {\n                        var_dh = 0;\n                        iVar8 = fcn.0040bce5(&var_10ch, \"#32768\");\n                        if (iVar8 == 0) goto code_r0x0041cb3c;\n                    }\n                }\n                else {\ncode_r0x0041ca9d:\n                    iVar3 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe0);\n                    if (iVar3 == *0x44eb88) goto code_r0x0041cb3c;\n                }\n                var_ch = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n                pcVar10 = _sym.imp.USER32.dll_GetPropA;\n                if ((var_ch != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar8 == 0))\n                {\n                    (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", var_ch);\n                    uVar6 = (*pcVar10)(arg_ch, \"AfxOldWndProc423\");\n                    if (uVar6 == var_ch) {\n                        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, 0x41c7fc);\n                    }\n                }\n            }\n            else {\n                fcn.0041b4db(arg_ch);\n                (**(*piVar2 + 0x50))();\n                ppcVar9 = (**(*piVar2 + 0xf0))();\n                pcVar10 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, fcn.0041bcb1);\n                if (pcVar10 != fcn.0041bcb1) {\n                    *ppcVar9 = pcVar10;\n                }\n                *(iVar4 + 0x14) = 0;\n            }\n        }\n        else {\n            uVar6 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n            if ((uVar6 & 0x10000) == 0) {\n                puVar7 = *(iVar8 + 0x28);\n                if (puVar7 < 0x10000) {\n                    var_ch = var_ch & 0xffffff00;\n                    (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(*(iVar8 + 0x28), &var_ch, 5);\n                    puVar7 = &var_ch;\n                }\n                iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar7, 0x43dae4);\n                if (iVar8 != 0) goto code_r0x0041ca17;\n            }\n        }\n    }\ncode_r0x0041cb3c:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), 3, arg_ch, arg_10h);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar4 + 0x28));\n        *(iVar4 + 0x28) = 0;\n    }\ncode_r0x0041cb66:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1233
    },
    "0041cb73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041cb73(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00433874(0x430550);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.0041c954, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00417bb3();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041ccf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_74h\n\nuint __cdecl fcn.0041ccf8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t *arg_8h_00;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    int32_t *in_stack_ffffff70;\n    uint in_stack_ffffff84;\n    uint var_74h;\n    uint var_58h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = 0;\n    uVar7 = *(unaff_EBP + 8);\n    if (uVar7 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 == 0) goto code_r0x0041cee3;\ncode_r0x0041d193:\n        *(unaff_EBP + -0x10) = 1;\n        goto code_r0x0041d1eb;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) == 0) goto code_r0x0041cee3;\n        iVar4 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x0041d1b7:\n        if (iVar4 == 0) goto code_r0x0041cee3;\n        goto code_r0x0041d1eb;\n    }\n    puVar9 = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        in_stack_ffffff84 = fcn.0041b49a(puVar9);\n        fcn.0041c725(arg_8h_00, *(unaff_EBP + 0xc), in_stack_ffffff84);\n    }\n    iVar11 = puVar9;\n    if ((uVar7 == 0x20) &&\n       (in_stack_ffffff70 = arg_8h_00,  iVar4 = fcn.0041c786(arg_8h_00, iVar11, puVar9 >> 0x10),  iVar4 != 0))\n    goto code_r0x0041d193;\n    if (((arg_8h_00[0x12] != 0) && (0 < *(arg_8h_00[0x12] + 0x70))) &&\n       ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) ||\n        ((0x280 < uVar7 && (uVar7 < 0x292)))))) {\n        in_stack_ffffff70 = *(unaff_EBP + 0xc);\n        iVar4 = (**(*arg_8h_00[0x12] + 0x94))(uVar7, in_stack_ffffff70, puVar9, unaff_EBP + -0x10);\n        if (iVar4 == 0) goto code_r0x0041cdea;\n        goto code_r0x0041d1eb;\n    }\ncode_r0x0041cdea:\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar7 = *(unaff_EBP + 8);\n    fcn.00433ab7(7);\n    iVar4 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((*(unaff_EBP + 8) != *(iVar4 + 0x44d218)) || (iVar6 != *(iVar4 + 0x44d220))) {\n        *(iVar4 + 0x44d218) = *(unaff_EBP + 8);\n        *(iVar4 + 0x44d220) = iVar6;\n        while (iVar6 != 0) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar6 = fcn.00419e0c(*(*(unaff_EBP + -0x14) + 4), *(unaff_EBP + 8), in_stack_ffffff70, 0);\n                *(unaff_EBP + 0x10) = iVar6;\n                if (iVar6 != 0) {\n                    *(iVar4 + 0x44d21c) = iVar6;\n                    fcn.00433b1a(7);\n                    goto code_r0x0041ce7b;\n                }\n            }\n            else {\n                iVar6 = *(*(unaff_EBP + -0x14) + 4);\n                while( true ) {\n                    iVar6 = fcn.00419e0c(iVar6, 0xc000, 0, in_stack_ffffff84);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 == 0) break;\n                    if (**(*(unaff_EBP + 0x10) + 0x10) == *(unaff_EBP + 8)) {\n                        *(iVar4 + 0x44d21c) = *(unaff_EBP + 0x10);\n                        fcn.00433b1a(7);\n                        goto code_r0x0041d1da;\n                    }\n                    iVar6 = *(unaff_EBP + 0x10) + 0x18;\n                }\n            }\n            iVar6 = **(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x14) = iVar6;\n        }\n        *(iVar4 + 0x44d21c) = 0;\n        fcn.00433b1a(7);\ncode_r0x0041cee3:\n        uVar8 = 0;\n        goto code_r0x0041cee5;\n    }\n    iVar4 = *(iVar4 + 0x44d21c);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.00433b1a(7);\n    if (iVar4 == 0) goto code_r0x0041cee3;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0041d1da:\n        uVar8 = (**(*(unaff_EBP + 0x10) + 0x14))(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0041d1e8;\n    }\ncode_r0x0041ce7b:\n    pcVar1 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar4 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar3 = puVar9 >> 0x10;\n    // switch table (65 cases) at 0x41d1ff\n    switch(iVar4) {\n    case 1:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0042277c(puVar9);\n        goto code_r0x0041d004;\n    case 2:\n    case 3:\n    case 4:\n    case 0x18:\n    case 0x19:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d004;\n    case 5:\n    case 0xc:\n        uVar5 = puVar9 >> 0x10;\n        puVar9 = puVar9 & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041b49a(uVar7, puVar9, uVar5);\n        goto code_r0x0041d028;\n    case 6:\n        uVar7 = fcn.0041b49a(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0041d13d;\n    case 7:\n    case 0xd:\ncode_r0x0041d004:\n        uVar8 = (*pcVar1)(puVar9);\n        goto code_r0x0041d1e8;\n    case 8:\n        fcn.004223bc();\n        uVar8 = puVar9[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar8;\n        fcn.0041a7ce();\n        uVar8 = *puVar9;\n        uVar2 = puVar9[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x58) = uVar8;\n        iVar4 = fcn.0041b4c1(uVar8);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0x12] != 0) && (iVar4 = fcn.0041982a(*(unaff_EBP + -0x58)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x74;\n        }\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, iVar4, uVar2);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041bcfc();\n        goto code_r0x0041cfd3;\n    case 9:\n        fcn.004223bc();\n        uVar8 = puVar9[2];\n        *(unaff_EBP + -0x20) = puVar9[1];\n        *(unaff_EBP + -4) = 2;\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, uVar8);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\ncode_r0x0041cfd3:\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004227f2();\n        break;\n    case 10:\n        uVar7 = fcn.0041b49a(puVar9, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x0041d023;\n    case 0xb:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d13d;\n    case 0xe:\n    case 0x2c:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d13d;\n    case 0xf:\n        puVar9 = fcn.0041f290(puVar9);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0041d023:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0041d028:\n        uVar8 = (*pcVar1)(uVar5, uVar7, puVar9);\n        goto code_r0x0041d1e8;\n    case 0x10:\n        (*pcVar1)();\n        break;\n    case 0x11:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d15d;\n    case 0x12:\n    case 0x1b:\n    case 0x2a:\n    case 0x2f:\n        goto code_r0x0041d150;\n    case 0x13:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d153;\n    case 0x14:\n        puVar9 = iVar3;\n        uVar7 = iVar11;\n        goto code_r0x0041d153;\n    case 0x15:\n    case 0x16:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x0041d181;\n    case 0x17:\n        fcn.0041b49a(puVar9);\ncode_r0x0041d150:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d153;\n    case 0x1a:\n    case 0x25:\n    case 0x2e:\n        uVar8 = (*pcVar1)();\n        goto code_r0x0041d1e8;\n    case 0x1c:\n        puVar10 = *(unaff_EBP + 0xc);\n        uVar7 = fcn.0041b49a(puVar10);\n        fcn.0041b49a(puVar9, uVar7);\n        uVar5 = arg_8h_00[7] == puVar9;\n        goto code_r0x0041d185;\n    case 0x1d:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0042277c(puVar9);\n        goto code_r0x0041d15d;\n    case 0x1e:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0041f290(puVar9);\n        goto code_r0x0041d15d;\n    case 0x1f:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        uVar5 = fcn.0041f290(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x0041d185;\n    case 0x20:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d0c0;\n    case 0x21:\ncode_r0x0041d0c0:\n        fcn.0041b49a(puVar9);\n        goto code_r0x0041d15d;\n    case 0x22:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x0041d0dc;\n    case 0x23:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x0041d0dc:\n        uVar5 = fcn.0041b49a(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x0041d185;\n    case 0x24:\n        uVar7 = fcn.0041b49a(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0041d153;\n    case 0x26:\n        puVar10 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0041b49a(puVar9, puVar10);\n        goto code_r0x0041d16d;\n    case 0x27:\n    case 0x28:\n        *(unaff_EBP + 8) = *(unaff_EBP + 0xc);\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) >> 0x10;\n        if (iVar4 == 0x27) {\n            uVar7 = fcn.0041b49a(puVar9);\n            uVar5 = *(unaff_EBP + 0xc);\n            puVar10 = puVar9;\n            goto code_r0x0041d185;\n        }\n        puVar9 = *(unaff_EBP + 0xc);\n        uVar7 = *(unaff_EBP + 8);\ncode_r0x0041d153:\n        (*pcVar1)(uVar7, puVar9);\n        break;\n    case 0x29:\n    case 0x30:\ncode_r0x0041d15d:\n        (*pcVar1)(puVar9);\n        break;\n    case 0x2b:\n    case 0x33:\n        (*pcVar1)(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0041d193;\n    case 0x2d:\n        uVar7 = iVar11;\n        puVar9 = iVar3;\ncode_r0x0041d13d:\n        uVar8 = (*pcVar1)(uVar7, puVar9);\ncode_r0x0041d1e8:\n        *(unaff_EBP + -0x10) = uVar8;\n        break;\n    case 0x31:\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar10 = puVar9;\ncode_r0x0041d16d:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0041d185;\n    case 0x32:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x0041d181:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0041d185:\n        (*pcVar1)(uVar5, uVar7, puVar10);\n        break;\n    case 0x34:\n        iVar4 = (*pcVar1)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar9 & 0xffff, puVar9 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x0041d1b7;\n    case 0x41:\n        iVar4 = (*pcVar1)();\n        *(unaff_EBP + -0x10) = iVar4;\n        if (iVar4 != 0) goto code_r0x0041cee3;\n    }\ncode_r0x0041d1eb:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar8 = 1;\ncode_r0x0041cee5:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar8;\n}\n",
        "token_count": 4421
    },
    "0041d73f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041d73f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041d74a. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x48) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041d755": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d755(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), param_2);\n        fcn.0041b49a(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d776. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x74))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041d779": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d779(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x48) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(param_1 + 0x1c), param_2, param_3);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d798. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x88))();\n    return;\n}\n",
        "token_count": 142
    },
    "0041d7d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d7d1(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d7e8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 135
    },
    "0041d7eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d7eb(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d802. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 132
    },
    "0041d805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d805(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        fcn.00419bb3(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d829. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 151
    },
    "0041d82f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d82f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        fcn.00419bcd(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d853. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 151
    },
    "0041d859": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d859(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d874. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x88))();\n    return;\n}\n",
        "token_count": 134
    },
    "0041d87a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d87a(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(param_1 + 0x1c), 0xfffffff4, param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d897. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x94))();\n    return;\n}\n",
        "token_count": 142
    },
    "0041d89d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d89d(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d8b8. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa0))();\n    return;\n}\n",
        "token_count": 136
    },
    "0041d8be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d8be(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x1c));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d8d3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa4))();\n    return;\n}\n",
        "token_count": 127
    },
    "0041d8d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d8d9(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d8f4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa8))();\n    return;\n}\n",
        "token_count": 137
    },
    "0041d8fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d8fa(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x1c));\n        fcn.0041b49a(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d915. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xb0))();\n    return;\n}\n",
        "token_count": 148
    },
    "0041d91b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d91b(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x1c);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x1c), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041d951. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x9c))();\n    return;\n}\n",
        "token_count": 200
    },
    "0041d957": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d957(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x4c) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0041982a(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x48) != 0)) {\n            (**(**(iVar2 + 0x48) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041d998": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpString2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041d998(uint lpString1, uint iMaxLength)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpString2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    if (*(extraout_ECX + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x1c), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        piVar2 = fcn.0041fa72();\n        iVar3 = (**(*piVar2 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar3 + 0x10;\n        iVar3 = **(extraout_ECX + 0x4c);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar3 + 0x8c))(unaff_EBP + -0x10);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0xc));\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.004089b7();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 420
    },
    "0041db55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041db55(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar4;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00432908();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        iVar1 = *(arg_10h + 0x30);\n        arg_ch = 0;\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar4 = puVar2[1];\n            while (((piVar4[1] != 0 && (piVar4[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar4[1]) {\n                    if (iVar1 == 0) {\n                        if (*piVar4 == 0) {\ncode_r0x0041dbe1:\n                            *(arg_10h + 4) = piVar4[2];\n                            arg_ch = 1;\n                        }\n                    }\n                    else if ((*piVar4 != 0) && (iVar3 = fcn.00409bb0(iVar1, *piVar4),  iVar3 != 0))\n                    goto code_r0x0041dbe1;\n                }\n                piVar4 = piVar4 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = arg_ch & 0xffff;\n        if (arg_ch_00 != 0) goto code_r0x0041dc1a;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x0041dc1a:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.00419e0c(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.0041da3f(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 666
    },
    "0041e698": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0041e698(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t noname_0;\n    uint noname_1;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x41e6a2;\n    fcn.0040bd7c();\n    iVar1 = extraout_ECX[0x16];\n    noname_0 = extraout_ECX[0x17];\n    *(unaff_EBP + -0x10) = &fcn.0041e698::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = iVar1;\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    hResData = unaff_EBX;\n    iVar1 = fcn.00432908();\n    uVar4 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x15] != 0) {\n        iVar1 = fcn.00432908();\n        uVar4 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, extraout_ECX[0x15], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar4, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        noname_0 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n    }\n    if (noname_0 == 0) {\n        iVar1 = -1;\n    }\n    else {\n        uVar2 = fcn.0041e1d8();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0041b542();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            if (*(unaff_EBP + -0x14) != iVar1) {\n                iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n                if (iVar1 != 0) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                    *(unaff_EBP + -0x20) = 1;\n                }\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.0041cb73();\n        uVar2 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0041b49a();\n        iVar1 = fcn.0041e48b(noname_0, noname_1, uVar4, uVar2, noname_4, var_20h, var_1ch, hResData, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h, param_5, param_6);\n        if (iVar1 != 0) {\n            if ((*(extraout_ECX + 0xe) & 0x10) != 0) {\n                uVar4 = 4;\n                uVar3 = fcn.0041d7d1();\n                if ((uVar3 & 0x100) != 0) {\n                    uVar4 = 5;\n                }\n                fcn.0041af3e(uVar4);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.0041d91b(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar1 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x60))();\n        fcn.0041e212();\n        if (extraout_ECX[0x15] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n        iVar1 = extraout_ECX[0x10];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 1431
    },
    "0041ea1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea1c(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x70) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x70));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x6c) != 0) {\n                fcn.00426462(*(in_ECX + 0x6c));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x6c) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00426462(*(in_ECX + 0x6c));\n                *(in_ECX + 0x6c) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "0041ecfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041ecfd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0043292e();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.0041ec68(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.00405930();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[7];\n    }\n    iVar1 = fcn.0041b98d(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0041b49a(*param_1);\n            piVar4 = fcn.0041c417();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "0041f018": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041f018(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00432908();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.004328f8();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x41ee9a, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0041f19b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041f19b(int32_t param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        for (; param_1 != 0; param_1 = *(param_1 + 0x10)) {\n            if (param_1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0041f214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041f214(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00419ad1(0x426492);\n        iVar3 = fcn.00419ae3(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fbd7(0x43fe7c, 0x4339bd, 0x430cd1, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00419ad1(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "0041f9f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f9f0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.0040bc2b(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.00408bce();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.0040bc2b(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00409b82(iVar2, arg_ch, iVar2);\n        fcn.0040b380(uVar1, iVar2, arg_ch);\n        fcn.00408c11(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 311
    },
    "0041fd1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fd1d(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.004198cb(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.004197ae();\n        fcn.0040a560();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0041fd80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041fd80(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0041eb77(),  iVar2 != 0)) && (*(iVar2 + 0x38) != NULL)) {\n                (**(iVar2 + 0x38))(0, 0);\n            }\n            fcn.0041fd1d();\n            fcn.0041fd1d();\n            fcn.0041fd1d();\n            fcn.0041fd1d();\n            fcn.0041fd1d();\n        }\n        iVar2 = fcn.00432908();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.004334ca();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0040c6e8(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x94))))) &&\n           (*(iVar2 + 0x94) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0040c6e8(*(iVar3 + 0xc));\n                fcn.0040a68c(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.0040a67a(*(iVar2 + 0x94));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.0040a67a(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 543
    },
    "0041ff43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ff43(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar2 = fcn.0041fef8(arg_8h);\n    iVar3 = fcn.0041fe79(arg_8h);\n    if (iVar3 != 0) {\n        iVar2 = iVar2 + (bVar6 * 2 + 1) * 2;\n        iVar3 = fcn.0040c993(iVar2);\n        iVar2 = iVar2 + 2 + iVar3 * 2;\n    }\n    if (bVar6) {\n        uVar1 = *(arg_8h + 0x10);\n    }\n    else {\n        uVar1 = *(arg_8h + 8);\n    }\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n        do {\n            puVar4 = (iVar2 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar4;\n            if ((uVar1 != 0) && (!bVar6)) {\n                uVar1 = uVar1 - 2;\n            }\n            uVar5 = uVar5 - 1;\n            iVar2 = puVar4 + uVar1 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar2 - arg_8h;\n}\n",
        "token_count": 510
    },
    "00420006": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420006(uint lpMultiByteStr, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t arg_ch_00;\n    uint *in_ECX;\n    int32_t iVar6;\n    int16_t iVar7;\n    uint32_t arg_8h;\n    bool bVar8;\n    uint var_54h;\n    uint hMem;\n    uint var_4ch;\n    uint var_48h;\n    uint lpWideCharStr;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar8 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0041fe79(puVar2);\n        iVar1 = bVar8 * 2 + 1;\n        if (bVar8) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpMultiByteStr);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20)\n            ;\n            iVar4 = iVar1 * 2 + iVar4 * 2;\n            puVar5 = fcn.0041fef8(puVar2);\n            iVar6 = 0;\n            if (iVar3 != 0) {\n                iVar3 = fcn.0040c993(puVar5 + iVar1);\n                iVar6 = iVar1 * 2 + 2 + iVar3 * 2;\n            }\n            arg_ch_00 = iVar6 + 3 + puVar5 & 0xfffffffc;\n            arg_8h = puVar5 + iVar4 + 3 & 0xfffffffc;\n            if (bVar8) {\n                iVar7 = *(puVar2 + 4);\n            }\n            else {\n                iVar7 = *(puVar2 + 2);\n            }\n            if ((iVar4 != iVar6) && (iVar7 != 0)) {\n                fcn.0040b6d0(arg_8h, arg_ch_00, puVar2 + (in_ECX[1] - arg_ch_00));\n            }\n            *puVar5 = arg_ch;\n            fcn.0040b6d0(puVar5 + iVar1, &lpWideCharStr, iVar4 + iVar1 * -2);\n            in_ECX[1] = in_ECX[1] + (arg_8h - arg_ch_00);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n            in_ECX[2] = 0;\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 708
    },
    "0042013e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042013e(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    var_4h = *0x44bf78;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x004201b7;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x004201b7:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.00420006(lpMultiByteStr, arg_8h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 422
    },
    "0042026f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042026f(char *lpString, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = fcn.004343de(lpString, 0, 0);\n    iVar3 = iVar3 + -1;\n    pcVar5 = lpString + (iVar2 - iVar3);\n    if (arg_ch < iVar2) {\n        if (arg_ch < iVar3) {\n            if (arg_10h == 0) {\n                pcVar5 = 0x43dae8;\n            }\n        }\n        else {\n            pcVar4 = lpString + 2;\n            if ((*lpString == '\\\\') && (lpString[1] == '\\\\')) {\n                for (; *pcVar4 != '\\\\'; pcVar4 = fcn.0040c9a9(pcVar4)) {\n                }\n            }\n            if (3 < iVar2 - iVar3) {\n                do {\n                    pcVar4 = fcn.0040c9a9(pcVar4);\n                } while (*pcVar4 != '\\\\');\n            }\n            iVar2 = pcVar4 - lpString;\n            if (iVar2 + 5 + iVar3 <= arg_ch) {\n                while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4),  arg_ch < iVar3 + 4 + iVar2) {\n                    do {\n                        pcVar4 = fcn.0040c9a9(pcVar4);\n                    } while (*pcVar4 != '\\\\');\n                }\n                lpString[iVar2] = '\\0';\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, \"\\\\...\");\n                (*pcVar1)(lpString, pcVar4);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, pcVar5);\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "00420b2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420b2a(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_414h);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_61ch);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_414h + iVar2) & 0x80) != 0) && (*(&var_20ch + iVar2) != *(&var_61ch + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.0040c9a9(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 467
    },
    "00420f32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00420f32(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    *(unaff_EBP + -4) = 0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00420e91();\n    }\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 196
    },
    "00421f63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00421f63(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.00421bf8(param_1, param_1, param_2);\n        fcn.00421f1d(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00422700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00422700(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00419ad1(0x426492);\n        iVar3 = fcn.00419ae3(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fbd7(0x43e654, 0x431b91, 0x430cd1, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00419ad1(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "004227f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004227f2(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004227c1();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004229e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004229e7(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = fcn.0043292e();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00419ad1(0x426492);\n        iVar3 = fcn.00419ae3(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fbd7(0x43e5b4, 0x431bad, 0x430cd1, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00419ad1(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "004234bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004234bd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    do {\n        if (var_4h == NULL) {\n            uVar2 = (**(*param_1 + 0x90))();\n            return uVar2;\n        }\n        (**(*param_1 + 100))(&var_4h);\n        iVar1 = fcn.0041be1b();\n    } while ((iVar1 == 0) || (*(iVar1 + 0x54) < 1));\n    return 1;\n}\n",
        "token_count": 169
    },
    "004235f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004235f3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x34);\n    while (iVar1 != 0) {\n        iVar1 = fcn.00419137();\n        *(iVar1 + 0x50) = 0;\n        iVar1 = *(param_1 + 0x34);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0042362d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042362d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n        if ((iVar1 != 0) && (iVar1 = fcn.0041be1b(),  iVar1 != 0)) {\n            *(iVar1 + 0x54) = 0xffffffff;\n        }\n    }\n    var_8h = 0;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n        if (((iVar1 != 0) && (iVar1 = fcn.0041be1b(),  iVar1 != 0)) && (*(iVar1 + 0x54) == -1)) {\n            var_8h = var_8h + 1;\n            *(iVar1 + 0x54) = var_8h;\n        }\n    }\n    iVar1 = 1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar2 = (**(*param_1 + 100))(&var_4h);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar2 + 0x1c));\n        if (((iVar2 != 0) && (piVar3 = fcn.0041be1b(),  piVar3 != NULL)) && (piVar3[0x15] == iVar1)) {\n            if (var_8h == 1) {\n                piVar3[0x15] = 0;\n            }\n            (**(*piVar3 + 0x15c))(1);\n            iVar1 = iVar1 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "0042383c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042383c(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 3;\n    fcn.004235f3();\n    if (*(extraout_ECX + 0x24) != 0) {\n        (**(**(extraout_ECX + 0x24) + 0x60))(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 2;\n    fcn.004191dd();\n    fcn.004089b7();\n    fcn.004089b7();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041da32();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 253
    },
    "00423b09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423b09(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_208h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    if (iVar1 < 0x104) {\n        iVar1 = fcn.004210fa(&var_108h, arg_8h);\n        if (iVar1 != 0) goto code_r0x00423b4c;\n    }\n    fcn.00421f1d(3, 0xffffffff, 0);\ncode_r0x00423b4c:\n    fcn.00408e8d(&var_108h);\n    in_ECX[0x13] = 0;\n    iVar1 = fcn.00420e2a(&var_108h, &var_208h, 0x100);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x50))(&var_208h);\n    }\n    if (arg_ch != 0) {\n        iVar1 = fcn.00432908();\n        (**(**(iVar1 + 4) + 0x8c))(in_ECX[8]);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 326
    },
    "0042445f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042445f(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00424b03(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0040b380(arg_8h, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0040b380(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 932
    },
    "00424603": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424603(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    uint32_t uVar5;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) {\n        uVar5 = *(in_ECX + 0x28);\n        piVar1 = in_ECX + 0x2c;\n        var_4h = *piVar1 - uVar5;\n        uVar2 = arg_8h + var_4h;\n        if (*(in_ECX + 8) == 0) {\n            arg_8h_00 = *(in_ECX + 0x30);\n            if (arg_8h_00 < uVar5) {\n                if (0 < var_4h) {\n                    fcn.0040b6d0(arg_8h_00, uVar5, var_4h);\n                    arg_8h_00 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x28) = arg_8h_00;\n                    *piVar1 = arg_8h_00 + var_4h;\n                }\n                uVar5 = arg_8h;\n                if (*(in_ECX + 0xc) == 0) {\n                    uVar5 = *(in_ECX + 0x20);\n                }\n                iVar4 = uVar5 - var_4h;\n                iVar6 = var_4h + arg_8h_00;\n                do {\n                    iVar3 = (**(**(in_ECX + 0x24) + 0x34))(iVar6, iVar4);\n                    var_4h = var_4h + iVar3;\n                    iVar6 = iVar6 + iVar3;\n                    iVar4 = iVar4 - iVar3;\n                    if ((iVar3 == 0) || (iVar4 == 0)) break;\n                } while (var_4h < arg_8h);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n                *(in_ECX + 0x2c) = *(in_ECX + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(in_ECX + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, piVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x30);\n        }\n        if (uVar2 <= *(in_ECX + 0x2c) - *(in_ECX + 0x28)) {\n            return;\n        }\n        unaff_EBX = 0;\n        unaff_ESI = 3;\n    }\n    fcn.00424b03(unaff_ESI, unaff_EBX);\n    return;\n}\n",
        "token_count": 766
    },
    "004247a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004247a0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00424b03(2, *(in_ECX + 0x14));\n        }\n        arg_10h = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.0040b380(*(in_ECX + 0x28), arg_8h, arg_10h);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.0042458c();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            fcn.0040b380(*(in_ECX + 0x28), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 471
    },
    "004248e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004248e6(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.00424792();\n    }\n    fcn.0042441d();\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 203
    },
    "00424b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00424b4c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x44d210 == 0) {\n        *0x44d210 = 1;\n        if (*0x44ed8c == 0) {\n            *0x44ecd4 = 3;\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x68, 0, 0x44ecd4, 0);\n        }\n        else {\n            if (*0x44ecdc == 0) {\n                *0x44ecd8 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"MSH_SCROLL_LINES_MSG\");\n                if (*0x44ecd8 == 0) {\n                    *0x44ecdc = 1;\n                    return *0x44ecd4;\n                }\n                *0x44ecdc = 2;\n            }\n            if (((*0x44ecdc == 2) &&\n                (iVar1 = (*_sym.imp.USER32.dll_FindWindowA)(\"MouseZ\", \"Magellan MSWHEEL\"),  iVar1 != 0)) &&\n               (*0x44ecd8 != 0)) {\n                *0x44ecd4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar1, *0x44ecd8, 0, 0);\n            }\n        }\n    }\n    return *0x44ecd4;\n}\n",
        "token_count": 303
    },
    "00424d01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424d01(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (iVar1 = fcn.0041b9cf(0),  iVar1 != 0)) {\n        return;\n    }\n    iVar1 = (**(*in_ECX + 0x70))(0);\n    if (arg_10h == iVar1) {\n        (**(*in_ECX + 0x134))(arg_8h & 0xff | 0xff00, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00424d48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424d48(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (iVar1 = fcn.0041b9cf(0),  iVar1 != 0)) {\n        return;\n    }\n    iVar1 = (**(*in_ECX + 0x70))(1);\n    if (arg_10h == iVar1) {\n        (**(*in_ECX + 0x134))((arg_8h & 0xff) << 8 | 0xff, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00425521": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425521(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t lParam;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0x80) == 0) {\n        *(param_1 + 0x80) = 1;\n        var_4h = 1;\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0041b49a(uVar1);\n        if ((iVar2 == 0) ||\n           (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x368, 0, &lParam),  iVar2 == 0)) {\n            iVar3 = fcn.004253eb(&var_18h, &var_10h);\n            iVar2 = var_14h;\n            iVar4 = var_18h;\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 0x1c), &lpRect);\n                if ((0 < var_20h) && (0 < var_1ch)) {\n                    fcn.0041ab8b(3, 0);\n                }\n                *(param_1 + 0x80) = 0;\n                return;\n            }\n        }\n        else {\n            var_4h = 0;\n            fcn.00424ca7();\n            iVar2 = var_2ch - var_34h;\n            iVar4 = var_30h - lParam;\n        }\n        fcn.00425460(iVar4, iVar2, &var_8h, &var_20h, &var_18h, var_4h);\n        if (var_8h != 0) {\n            iVar2 = iVar2 - var_ch;\n        }\n        if (var_4h != 0) {\n            iVar4 = iVar4 - var_10h;\n        }\n        fcn.00424c55(var_18h, var_14h);\n        var_4ch = 0;\n        var_50h = 3;\n        fcn.0041ab8b(0, var_8h);\n        if (var_8h != 0) {\n            var_48h = *(param_1 + 100) + -1;\n            var_44h = iVar4;\n            iVar4 = fcn.00419ebd(0, &var_54h, 1);\n            if (iVar4 == 0) {\n                fcn.0041ab26(0, 0, var_20h, 1);\n            }\n        }\n        fcn.0041ab8b(1, var_4h);\n        if (var_4h != 0) {\n            var_48h = *(param_1 + 0x68) + -1;\n            var_44h = iVar2;\n            iVar2 = fcn.00419ebd(1, &var_54h, 1);\n            if (iVar2 == 0) {\n                fcn.0041ab26(1, 0, var_1ch, 1);\n            }\n        }\n        *(param_1 + 0x80) = 0;\n    }\n    return;\n}\n",
        "token_count": 891
    },
    "004258b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004258b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1[7], &var_28h);\n    iVar1 = param_1[0x1b];\n    uVar6 = 0;\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n        if (var_ch < var_24h) {\n            uVar6 = 30999;\n        }\n        else if (var_1ch < var_ch) {\n            uVar6 = 0x791d;\n        }\n    }\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n        if (var_10h < var_28h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x7919;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 - 1;\n            }\n        }\n        else if (var_20h < var_10h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x791b;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 + 1;\n            }\n        }\n    }\n    if (param_1[0x1a] == 0) {\n        if (uVar6 == 0) {\n            (*_sym.imp.USER32.dll_SetCursor)(param_1[0x1c]);\n        }\n        else {\n            iVar1 = fcn.00432908();\n            uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(*(iVar1 + 0xc), uVar6 & 0xffff);\n            (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n            if ((var_20h < var_10h) || (var_20h = var_28h,  var_10h < var_28h)) {\n                var_8h = var_10h - var_20h;\n            }\n            else {\n                var_8h = 0;\n            }\n            if ((var_1ch < var_ch) || (var_1ch = var_24h,  var_ch < var_24h)) {\n                var_4h = var_ch - var_1ch;\n            }\n            else {\n                var_4h = 0;\n            }\n            piVar3 = fcn.00409b6b();\n            iVar1 = param_1[0x1b];\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n                uVar2 = 1;\n            }\n            else {\n                uVar2 = 0;\n            }\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n            }\n            (**(*piVar3 + 0x180))(&var_18h, var_8h, var_4h, uVar4, uVar2);\n            fcn.0041d89d(0);\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n            uVar2 = fcn.0041b49a(uVar2);\n            piVar5 = fcn.0041f1c8(0x43fcd8, uVar2);\n            if (piVar5 == NULL) {\n                (**(*piVar3 + 0x138))();\n            }\n            else {\n                (**(*piVar5 + 0x178))(piVar3, var_18h, var_14h, 1);\n            }\n            (*_sym.imp.USER32.dll_UpdateWindow)(param_1[7]);\n            fcn.0041d91b(0x44ea48, param_1[0x18] + -0x10, param_1[0x19] + -0x10, 0, 0, 0x51);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_KillTimer)(param_1[7], 0xe000);\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_SetCursor)(0);\n        iVar1 = fcn.00409b6b();\n        (**(*param_1 + 0x60))();\n        if (*(iVar1 + 0x54) != NULL) {\n            (**(**(iVar1 + 0x54) + 4))(1);\n        }\n        *(iVar1 + 0x54) = 0;\n    }\n    return;\n}\n",
        "token_count": 1193
    },
    "00425aa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425aa8(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x58) == -1) {\n        (**(*arg_8h + 0x34))(8);\n        (**(*arg_8h + 0x48))(&var_8h, *(in_ECX + 0x5c), *(in_ECX + 0x60));\n        (**(*arg_8h + 0x40))(&var_10h, *(in_ECX + 100), *(in_ECX + 0x68));\n    }\n    else {\n        (**(*arg_8h + 0x34))(*(in_ECX + 0x58));\n    }\n    iVar2 = 0;\n    var_8h = 0;\n    if (arg_8h[3] == 0) {\n        piVar1 = fcn.004251c5(&var_10h);\n        var_8h = -*piVar1;\n        iVar2 = -piVar1[1];\n        if (*(in_ECX + 0x7c) != 0) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lpRect);\n            if (*(in_ECX + 100) < var_10h - lpRect) {\n                var_8h = ((var_10h - *(in_ECX + 100)) - lpRect) / 2;\n            }\n            if (*(in_ECX + 0x68) < var_ch - var_14h) {\n                iVar2 = ((var_ch - *(in_ECX + 0x68)) - var_14h) / 2;\n            }\n        }\n    }\n    (**(*arg_8h + 0x38))(&var_10h, var_8h, iVar2);\n    fcn.004261ee(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 497
    },
    "00425c11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00425c11(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = *(extraout_ECX + 0x58);\n    *(extraout_ECX + 0x58) = *(unaff_EBP + 8);\n    *(extraout_ECX + 0x5c) = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 0x60) = *(unaff_EBP + 0x10);\n    fcn.004228a8(0);\n    uVar2 = *(extraout_ECX + 0x58);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042219e(uVar2);\n    pcVar5 = _sym.imp.GDI32.dll_LPtoDP;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 100) = *(extraout_ECX + 0x5c);\n    *(extraout_ECX + 0x68) = *(extraout_ECX + 0x60);\n    (*pcVar5)(uVar2, extraout_ECX + 100, 1);\n    iVar3 = (*(unaff_EBP + 0x14))[1];\n    piVar1 = extraout_ECX + 0x6c;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *piVar1 = **(unaff_EBP + 0x14);\n    *(extraout_ECX + 0x70) = iVar3;\n    (*pcVar5)(uVar2, piVar1, 1);\n    uVar2 = (*(unaff_EBP + 0x18))[1];\n    uVar4 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 0x74) = **(unaff_EBP + 0x18);\n    *(extraout_ECX + 0x78) = uVar2;\n    (*pcVar5)(uVar4, extraout_ECX + 0x74, 1);\n    if (*(extraout_ECX + 0x68) < 0) {\n        *(extraout_ECX + 0x68) = -*(extraout_ECX + 0x68);\n    }\n    if (*(extraout_ECX + 0x70) < 0) {\n        *(extraout_ECX + 0x70) = -*(extraout_ECX + 0x70);\n    }\n    if (*(extraout_ECX + 0x78) < 0) {\n        *(extraout_ECX + 0x78) = -*(extraout_ECX + 0x78);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00422903();\n    if (*piVar1 == 0) {\n        *piVar1 = *(extraout_ECX + 100) / 10;\n    }\n    if (*(extraout_ECX + 0x70) == 0) {\n        *(extraout_ECX + 0x70) = *(extraout_ECX + 0x68) / 10;\n    }\n    if (*(extraout_ECX + 0x74) == 0) {\n        *(extraout_ECX + 0x74) = *piVar1 / 10;\n    }\n    if (*(extraout_ECX + 0x78) == 0) {\n        *(extraout_ECX + 0x78) = *(extraout_ECX + 0x70) / 10;\n    }\n    if (*(extraout_ECX + 0x1c) != 0) {\n        fcn.00425521();\n        if (*(unaff_EBP + -0x10) != *(extraout_ECX + 0x58)) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(extraout_ECX + 0x1c), 0, 1);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1059
    },
    "0042606c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042606c(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n    uVar2 = fcn.0041b49a(uVar2);\n    iVar3 = fcn.0041f1bd(0x43fcd8);\n    if (iVar3 != 0) {\n        if (unaff_EBX != 0) {\n            return uVar2;\n        }\n        do {\n            uVar4 = (*pcVar1)(*(param_1 + 0x1c));\n            param_1 = fcn.0041b49a(uVar4);\n            if (param_1 == 0) {\n                return uVar2;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_IsIconic)(*(param_1 + 0x1c));\n        } while (iVar3 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 264
    },
    "004262d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004262d5(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpClassName;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 167
    },
    "00426d78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.00426d78(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t in_stack_ffffffd4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    if ((*(arg_8h_00 + 0x18) & 1) == 0) goto code_r0x00426f40;\n    if ((*(unaff_EBP + 8) != 0) && (*(*(unaff_EBP + 8) + 8) == 0xffff)) {\n        fcn.00417bcd();\n    }\n    fcn.00426bc9(0);\n    fcn.0040a069(unaff_EBP + -0x10);\n    if (*(unaff_EBP + -0x10) == 0x7fff) {\n        fcn.00403fe0(unaff_EBP + -0x18);\n        uVar5 = *(unaff_EBP + -0x18);\n    }\n    else {\n        uVar5 = (*(unaff_EBP + -0x10) & 0xffff8000) << 0x10 | *(unaff_EBP + -0x10) & 0xffff7fff;\n        *(unaff_EBP + -0x18) = uVar5;\n    }\n    if (-1 < uVar5) {\n        if (*(unaff_EBP + 0x10) != NULL) {\n            **(unaff_EBP + 0x10) = uVar5;\n            iVar7 = 0;\n            goto code_r0x00426e09;\n        }\ncode_r0x00426f3b:\n        in_stack_ffffffd4 = *(arg_8h_00 + 0x14);\n        in_stack_ffffffd0 = 5;\n        goto code_r0x00426f40;\n    }\n    if (*(unaff_EBP + -0x10) != -1) {\n        uVar5 = uVar5 & 0x7fffffff;\n        if ((uVar5 == 0) || (*(*(arg_8h_00 + 0x38) + 8) - 1U < uVar5)) goto code_r0x00426f3b;\n        iVar7 = fcn.004039a0(uVar5);\n        iVar2 = *(arg_8h_00 + 0x3c);\n        *(unaff_EBP + -0x14) = 0;\n        if ((iVar2 == 0) || (iVar2 = fcn.00419861(iVar7, unaff_EBP + -0x1c),  iVar2 == 0)) {\n            uVar6 = *(iVar7 + 8) & 0x7fffffff;\n        }\n        else {\n            uVar6 = *(unaff_EBP + -0x1c);\n        }\n        uVar5 = *(unaff_EBP + -0x18);\n        *(unaff_EBP + -0x14) = uVar6;\ncode_r0x00426f02:\n        if (*(unaff_EBP + 8) != 0) {\n            iVar2 = fcn.0041f19b(*(unaff_EBP + 8));\n            if (iVar2 == 0) goto code_r0x00426e34;\n            uVar6 = *(unaff_EBP + -0x14);\n        }\n        if (*(unaff_EBP + 0xc) == NULL) {\n            *(arg_8h_00 + 0x10) = uVar6;\n        }\n        else {\n            **(unaff_EBP + 0xc) = uVar6;\n        }\n        if (*(unaff_EBP + 0x10) != NULL) {\n            **(unaff_EBP + 0x10) = uVar5;\n        }\ncode_r0x00426e09:\n        *in_FS_OFFSET = *(unaff_EBP + -0xc);\n        return iVar7;\n    }\n    in_stack_ffffffd4 = unaff_EBP + -0x14;\n    in_stack_ffffffd0 = arg_8h_00;\n    iVar7 = fcn.00424723(arg_8h_00, in_stack_ffffffd4);\n    if (iVar7 != 0) {\n        if ((*(iVar7 + 8) & 0x7fffffff) != *(unaff_EBP + -0x14)) {\n            if (-1 < *(iVar7 + 8)) goto code_r0x00426f40;\n            if (*(arg_8h_00 + 0x3c) == 0) {\n                iVar2 = fcn.00419ae3(0x1c);\n                *(unaff_EBP + -0x1c) = iVar2;\n                *(unaff_EBP + -4) = 0;\n                if (iVar2 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.00419945(10);\n                }\n                *(unaff_EBP + -4) = 0xffffffff;\n                *(arg_8h_00 + 0x3c) = uVar3;\n            }\n            uVar3 = *(unaff_EBP + -0x14);\n            puVar4 = fcn.004199c9(iVar7);\n            *puVar4 = uVar3;\n            uVar5 = *(unaff_EBP + -0x18);\n        }\n        fcn.00426bb5();\n        iVar2 = *(arg_8h_00 + 0x34);\n        *(arg_8h_00 + 0x34) = iVar2 + 1;\n        fcn.00418fd7(iVar2, iVar7, 1);\n        uVar6 = *(unaff_EBP + -0x14);\n        goto code_r0x00426f02;\n    }\ncode_r0x00426e34:\n    in_stack_ffffffd4 = *(arg_8h_00 + 0x14);\n    in_stack_ffffffd0 = 6;\ncode_r0x00426f40:\n    fcn.00424b03(in_stack_ffffffd0, in_stack_ffffffd4);\n    pcVar1 = swi(3);\n    iVar7 = (*pcVar1)();\n    return iVar7;\n}\n",
        "token_count": 1576
    },
    "00426fdf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00426fdf(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t in_ECX;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) {\n        var_4h = in_ECX;\n        iVar2 = fcn.00426d78(arg_8h, &var_8h, &var_4h);\n        if (iVar2 != 0) goto code_r0x0042704a;\n        if (var_4h <= *(*(in_ECX + 0x38) + 8) - 1U) {\n            piVar3 = fcn.004039a0(var_4h);\n            if (piVar3 == NULL) {\n                return NULL;\n            }\n            if (arg_8h == 0) {\n                return piVar3;\n            }\n            iVar2 = fcn.0041f1bd(arg_8h);\n            if (iVar2 != 0) {\n                return piVar3;\n            }\n            in_stack_ffffffd4 = *(in_ECX + 0x14);\n            in_stack_ffffffd0 = 6;\n        }\n    }\n    fcn.00424b03(in_stack_ffffffd0, in_stack_ffffffd4);\ncode_r0x0042704a:\n    piVar3 = fcn.0041f155();\n    if (piVar3 == NULL) {\n        fcn.00417bb3();\n    }\n    fcn.00426bb5();\n    iVar2 = *(in_ECX + 0x34);\n    *(in_ECX + 0x34) = iVar2 + 1;\n    fcn.00418fd7(iVar2, piVar3, 1);\n    uVar1 = *(in_ECX + 0x10);\n    *(in_ECX + 0x10) = var_8h;\n    (**(*piVar3 + 8))();\n    *(in_ECX + 0x10) = uVar1;\n    return piVar3;\n}\n",
        "token_count": 519
    },
    "00427096": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00427096(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uchar uVar5;\n    uchar extraout_AH;\n    int32_t *piVar6;\n    int32_t *arg_ch;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    uint uVar11;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar6 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    piVar9 = piVar6;\n    if ((piVar6 != NULL) && (arg_ch = (*_sym.imp.KERNEL32.dll_LockResource)(piVar6),  piVar9 = arg_ch,  arg_ch != NULL))\n    {\n        iVar2 = *arg_ch;\n        arg_8h = fcn.0040a67a(iVar2 + 0x40);\n        piVar9 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.0040b380(arg_8h, arg_ch, iVar2 + 0x40);\n            iVar2 = *arg_8h;\n            hResInfo = 0;\n            do {\n                uVar7 = 0;\n                do {\n                    if (*(arg_8h + hResInfo * 4 + iVar2) == *(uVar7 * 8 + 0x43cfd8)) {\n                        if (arg_10h == 0) {\n                            puVar1 = uVar7 * 8 + 0x43cfdc;\n                            (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            uVar7 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            *(arg_8h + hResInfo * 4 + iVar2) = CONCAT11(uVar5, extraout_AH) << 8 | uVar7 >> 0x10 & 0xff;\n                        }\n                        else if (*(uVar7 * 8 + 0x43cfdc) != 0x12) {\n                            *(arg_8h + hResInfo * 4 + iVar2) = 0xffffff;\n                        }\n                        break;\n                    }\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar2 = arg_8h[1];\n            iVar3 = arg_8h[2];\n            uVar8 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar9 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar8, iVar2, iVar3);\n            if (piVar9 != NULL) {\n                uVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar8);\n                pcVar4 = _sym.imp.GDI32.dll_SelectObject;\n                uVar11 = (*_sym.imp.GDI32.dll_SelectObject)(uVar10, piVar9);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar10, 0, 0, iVar2, iVar3, 0, 0, iVar2, iVar3, arg_ch + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10\n                           , arg_8h, 0, 0xcc0020);\n                (*pcVar4)(uVar10, uVar11);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar10);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar8);\n            fcn.0040a68c(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FreeResource)(piVar6);\n        }\n    }\n    return piVar9;\n}\n",
        "token_count": 935
    },
    "004272f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004272f3(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    iVar5 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x0042739e:\n        return var_4h + 1;\n    }\ncode_r0x00427311:\n    piVar1 = arg_8h + iVar6 * 0x14;\n    piVar2 = piVar1 + 2;\n    *piVar2 = *piVar2 & 0xdf;\n    if ((*piVar2 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar3 = *(in_ECX + 0xa8);\n        }\n        else {\n            iVar3 = *piVar1;\n        }\n        iVar5 = iVar3 + iVar5;\n        iVar3 = iVar6;\n        if (arg_10h < iVar5) {\n            for (; (-1 < iVar3 && ((*piVar2 & 0x20) == 0)); piVar2 = piVar2 + -5) {\n                if (((*(piVar2 + 1) & 1) != 0) && ((piVar2[-1] == 0 && ((*piVar2 & 8) == 0)))) goto code_r0x004273b4;\n                iVar3 = iVar3 + -1;\n            }\n            iVar3 = iVar6 + -1;\n            if (-1 < iVar3) {\n                puVar4 = arg_8h + 8 + iVar3 * 0x14;\n                do {\n                    if ((*puVar4 & 0x20) != 0) break;\n                    if (((*puVar4 & 8) == 0) && (((puVar4[1] & 1) == 0 || (*(puVar4 + -4) == 0))))\n                    goto code_r0x004273b4;\n                    iVar3 = iVar3 + -1;\n                    puVar4 = puVar4 + -0x14;\n                } while (-1 < iVar3);\n            }\n        }\n    }\n    goto code_r0x00427393;\ncode_r0x004273b4:\n    puVar4 = arg_8h + 8 + iVar3 * 0x14;\n    *puVar4 = *puVar4 | 0x20;\n    iVar5 = 0;\n    var_4h = var_4h + 1;\n    iVar6 = iVar3;\ncode_r0x00427393:\n    iVar6 = iVar6 + 1;\n    if (arg_ch <= iVar6) goto code_r0x0042739e;\n    goto code_r0x00427311;\n}\n",
        "token_count": 696
    },
    "004276c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004276c5(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    var_18h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = (**(*in_ECX + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar7 = arg_ch + 9;\n        var_4h = arg_10h;\n        do {\n            arg_ch = *(puVar7 + -9);\n            uVar3 = fcn.0041d7d1();\n            if (((uVar3 & 0x800) == 0) && (*0x44b3a4 != 0x40047)) {\n                arg_ch = (arg_ch * 2) / 3;\n            }\n            if ((puVar7[-1] & 8) == 0) {\n                uVar1 = *puVar7;\n                iVar5 = in_ECX[0x2a];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar5 = iVar5 + *0x44b3a8;\n                    }\n                    if (var_10h < var_18h + iVar5) {\n                        var_10h = var_18h + iVar5;\n                    }\n                    iVar4 = in_ECX[0x2b] + iVar6;\ncode_r0x00427794:\n                    if (var_ch < iVar4) {\n                        var_ch = iVar4;\n                    }\n                }\n                else {\n                    if ((puVar7[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2b] + iVar6 + arg_ch;\n                        goto code_r0x00427794;\n                    }\n                    if (var_10h < *(puVar7 + -9) + var_18h) {\n                        var_10h = *(puVar7 + -9) + var_18h;\n                    }\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar5 = *(puVar7 + -9);\n                }\n                var_18h = var_18h + iVar5;\n                if ((puVar7[-1] & 0x20) != 0) {\n                    var_18h = 0;\n                    iVar6 = iVar6 + in_ECX[0x2b];\n                    if ((uVar1 & 1) != 0) {\n                        iVar6 = iVar6 + arg_ch;\n                    }\n                }\n            }\n            puVar7 = puVar7 + 0x14;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return;\n}\n",
        "token_count": 783
    },
    "00427c9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00427c9a(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint *arg_8h_00;\n    int32_t lpRect;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint *var_4h;\n    \n    puVar7 = NULL;\n    arg_8h_00 = 0x418;\n    var_ch = NULL;\n    var_34h = 0;\n    var_30h = 0;\n    iVar2 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    var_1ch = iVar2;\n    if ((iVar2 == 0) || (var_ch = fcn.00419ae3(iVar2 * 0x14),  piVar4 = var_ch,  iVar2 < 1)) goto code_r0x00427f67;\n    do {\n        var_8h = piVar4;\n        arg_8h_00 = puVar7;\n        fcn.0042721e();\n        piVar8 = var_ch;\n        var_8h = var_8h + 5;\n        puVar7 = puVar7 + 1;\n        piVar4 = var_8h;\n    } while (puVar7 < iVar2);\n    if (iVar2 < 1) goto code_r0x00427f67;\n    uVar1 = in_ECX[0x1f];\n    if ((uVar1 & 2) == 0) {\n        var_20h = uVar1 & 4;\n        if (var_20h == 0) {\ncode_r0x00427d8c:\n            var_38h = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                var_38h = 0;\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x00427d8c;\n                        goto code_r0x00427d86;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.00427c9a::lprc);\n                    (**(*in_ECX + 0x13c))(&fcn.00427c9a::lprc, arg_ch & 2);\n                    var_34h = arg_ch & 0x20;\n                    if (var_34h == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    var_38h = var_28h + arg_10h;\n                }\n            }\n            else {\n                var_38h = 0x7fff;\n            }\n        }\n        else {\ncode_r0x00427d86:\n            var_38h = in_ECX[0x1b];\n        }\n        var_40h = piVar8;\n        lpRect = 0x427da5;\n        var_3ch = iVar2;\n        fcn.004277e7(piVar8, iVar2, var_38h, var_34h);\n    }\n    arg_8h_00 = &fcn.00427c9a::var_24h;\n    lpRect = iVar2;\n    puVar3 = fcn.004276c5(arg_8h_00, piVar8, iVar2);\n    var_34h = *puVar3;\n    var_30h = puVar3[1];\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x27];\n        iVar6 = 0;\n        var_4h = NULL;\n        arg_10h = 0;\n        in_ECX[0x27] = 0;\n        if (0 < iVar2) {\n            var_14h = piVar8 + 1;\n            piVar4 = var_14h;\n            iVar5 = iVar2;\n            do {\n                if (((*(piVar4 + 5) & 1) != 0) && (*piVar4 != 0)) {\n                    iVar6 = iVar6 + 1;\n                }\n                piVar4 = piVar4 + 5;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            arg_10h = iVar6;\n            if (0 < iVar6) {\n                puVar7 = fcn.00419ae3(iVar6 * 0x18);\n                if (puVar7 == NULL) {\n                    var_4h = NULL;\n                }\n                else {\n                    arg_8h_00 = puVar7;\n                    fcn.00403af0(puVar7, 0x18, iVar6, 0x427973);\n                    var_4h = puVar7;\n                }\n                arg_10h = 0;\n                var_8h = NULL;\n                var_10h = var_4h + 2;\n                piVar4 = var_10h;\n                do {\n                    piVar8 = piVar4;\n                    if (((*(var_14h + 5) & 1) != 0) && (*var_14h != 0)) {\n                        piVar4[-2] = var_8h;\n                        piVar4[-1] = *var_14h;\n                        (**(*in_ECX + 0x16c))(var_8h, &fcn.00427c9a::lpRect);\n                        arg_8h_00 = &fcn.00427c9a::lpRect;\n                        fcn.004226c4(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        piVar8 = var_10h + 6;\n                        *piVar4 = lpRect;\n                        piVar4[1] = var_40h;\n                        piVar4[2] = var_3ch;\n                        piVar4[3] = var_38h;\n                        iVar2 = var_1ch;\n                        var_10h = piVar8;\n                    }\n                    var_8h = var_8h + 1;\n                    var_14h = var_14h + 5;\n                    piVar4 = piVar8;\n                } while (var_8h < iVar2);\n            }\n        }\n        if (((in_ECX[0x1f] & 1U) != 0) && ((in_ECX[0x1f] & 4U) != 0)) {\n            in_ECX[0x1b] = var_34h;\n        }\n        puVar7 = NULL;\n        if (0 < iVar2) {\n            var_10h = var_ch;\n            do {\n                arg_8h_00 = puVar7;\n                fcn.004274eb(puVar7, var_10h);\n                var_10h = var_10h + 5;\n                puVar7 = puVar7 + 1;\n            } while (puVar7 < iVar2);\n        }\n        if (0 < arg_10h) {\n            piVar4 = var_4h + 2;\n            do {\n                arg_8h_00 = piVar4[-1];\n                var_1ch = fcn.0041d755();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x1c), &fcn.00427c9a::lpRect);\n                    iVar2 = lpRect - *piVar4;\n                    var_14h = var_40h - piVar4[1];\n                    (**(*in_ECX + 0x16c))(piVar4[-2], &fcn.00427c9a::lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.0041d91b(0, lpRect + iVar2, var_14h + var_40h, 0, 0, 0x15);\n                }\n                piVar4 = piVar4 + 6;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n            fcn.00419b13(var_4h, arg_8h_00);\n        }\n        in_ECX[0x27] = var_20h;\n        piVar8 = var_ch;\n    }\n    fcn.00419b13(piVar8);\ncode_r0x00427f67:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.00427c9a::lpRect, arg_8h_00);\n    (**(*in_ECX + 0x13c))(&fcn.00427c9a::lpRect, arg_ch & 2);\n    var_30h = var_40h + (var_30h - var_38h);\n    var_34h = var_34h + (lpRect - var_3ch);\n    fcn.00429c31(&fcn.00427c9a::var_24h, arg_ch & 1, arg_ch & 2);\n    if (var_34h <= var_24h) {\n        var_34h = var_24h;\n    }\n    if (var_30h <= var_20h) {\n        var_30h = var_20h;\n    }\n    *arg_8h = var_34h;\n    arg_8h[1] = var_30h;\n    return;\n}\n",
        "token_count": 2404
    },
    "00428404": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint __cdecl fcn.00428404(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    iVar1 = extraout_ECX[0x1d] + *(unaff_EBP + 8) * 0x14;\n    uVar2 = *(iVar1 + 0xc);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if ((uVar2 & 1) == 0) {\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar3 = *(*(iVar1 + 0x10) + -0xc);\n        }\n        else {\n            iVar3 = fcn.0040bce5(*(iVar1 + 0x10), *(unaff_EBP + 0xc));\n        }\n        if (iVar3 == 0) goto code_r0x004284ad;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.00408bce();\n    }\n    else {\n        fcn.00408e8d(*(unaff_EBP + 0xc));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) == 0) {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) | 1;\n    }\n    else {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) & 0xfffffffe;\n        if ((*(iVar1 + 0xb) & 4) == 0) {\n            uVar4 = *(iVar1 + 0x10);\n        }\n        else {\n            uVar4 = 0;\n        }\n        (**(*extraout_ECX + 0x110))(0x401, *(iVar1 + 8) | *(unaff_EBP + 8), uVar4);\n    }\ncode_r0x004284ad:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 610
    },
    "00428683": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00428683(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(extraout_ECX + 0x80) = *(unaff_EBP + 8);\n    if (*(extraout_ECX + 0x8c) == 0) {\n        iVar1 = fcn.00419ae3(0xb0);\n        *(unaff_EBP + 8) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0042b132(extraout_ECX);\n        }\n        *(extraout_ECX + 0x8c) = uVar2;\n    }\n    if (*(extraout_ECX + 0x34) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(extraout_ECX + 0x1c));\n        *(extraout_ECX + 0x34) = uVar2;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 325
    },
    "00428a71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428a71(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.0041c46b();\n        if ((*(in_ECX + 0x15c) & 0x40) == 0) {\n            iVar2 = 1;\n            iVar1 = 0;\n            do {\n                if (*(in_ECX + 0x17c) <= iVar2) break;\n                iVar1 = fcn.004288fe();\n                iVar2 = iVar2 + 1;\n            } while (iVar1 == 0);\n            (****(iVar1 + 0x8c))(arg_ch, arg_10h);\n            return;\n        }\n    }\n    else if ((9 < arg_8h) && (arg_8h < 0x12)) {\n        fcn.0041c46b();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x17c) <= iVar2) break;\n            iVar1 = fcn.004288fe();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        (**(**(iVar1 + 0x8c) + 4))(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041b3f7();\n    return;\n}\n",
        "token_count": 346
    },
    "00428c3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428c3e(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x1c));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.004288c1(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.00419067(iVar1, 1);\n        piVar2 = fcn.00409c4d(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.00409c4d(iVar1);\n            if (*piVar2 == 0) {\n                fcn.00419067(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "00428ca5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428ca5(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    iVar4 = arg_8h;\n    iVar1 = fcn.004288c1(arg_8h, arg_ch);\n    if (arg_10h == 1) {\n        puVar2 = fcn.00409c4d(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.00409c4d(iVar1);\n        iVar4 = fcn.004288c1(iVar4, iVar1);\n        if (0 < iVar4) {\n            fcn.00419067(iVar1, 1);\n            piVar5 = fcn.00409c4d();\n            if ((*piVar5 == 0) && (piVar5 = fcn.00409c4d(),  *piVar5 == 0)) {\n                fcn.00419067(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.00419067(iVar1, 1);\n        piVar5 = fcn.00409c4d(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.00409c4d(iVar1),  *piVar5 == 0)) {\n            fcn.00419067(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.00428c3e(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x8c) != 0) {\n        piVar5 = fcn.0042d363();\n        if ((in_ECX[0x24] == 0) || (iVar4 = (**(*in_ECX + 0x168))(),  iVar4 != 0)) {\n            piVar5[0x33] = piVar5[0x33] | 0xc;\n        }\n        else {\n            iVar4 = fcn.00428bd6();\n            if (iVar4 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0041d89d(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 590
    },
    "00429580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429580(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint uFlags;\n    uchar auStack300 [16];\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x1c), auStack300);\n    if (*(param_2 + 0x88) == param_1) {\n        if (param_3 == 0) goto code_r0x00429789;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack300, param_3);\n        if (iVar2 != 0) goto code_r0x00429789;\n    }\n    if ((*(param_1 + 0x90) != 0) && ((*(param_2 + 0x80) & 0x40) != 0)) {\n        *(param_1 + 0x7c) = *(param_1 + 0x7c) | 0x40;\n    }\n    *(param_1 + 0x7c) = *(param_1 + 0x7c) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x7c);\n    *(param_1 + 0x7c) = *(param_2 + 0x7c) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041d998(auStack268, 0x104);\n        fcn.0042636a(*(param_1 + 0x1c), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x7c) ^ *(param_1 + 0x7c)) & 0xf000 ^ *(param_2 + 0x7c);\n    if (*(param_1 + 0x90) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00431aa4(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x1c), 0xffffffff);\n    iVar2 = fcn.004288c1(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.00409c4d(iVar2);\n        *piVar4 = param_2;\n    }\n    if (param_3 == 0) {\n        if (iVar2 < 1) {\n            fcn.00418fa5(*(param_1 + 0x9c), param_2);\n            fcn.00418fa5(*(param_1 + 0x9c), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x44ed4c;\n        iStack284 = -*0x44ed48;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, param_3);\n        fcn.00422688();\n        if (iVar2 < 1) {\n            fcn.0042891d(param_2, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284, \n                         (iStack272 - iStack280) / 2 + iStack280);\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0041d91b(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x1c));\n    iVar2 = fcn.0041b49a();\n    if (iVar2 != param_1) {\n        fcn.00409c69(param_1);\n    }\n    if (*(param_2 + 0x88) != 0) {\n        fcn.00428ca5(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x88) = param_1;\n    iVar2 = fcn.0042d363();\n    *(iVar2 + 0xcc) = *(iVar2 + 0xcc) | 0xc;\ncode_r0x00429789:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1117
    },
    "004299bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004299bf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    if ((*(param_1 + 0x1c) != 0) && (iVar1 = fcn.0042d377(),  iVar1 != 0)) {\n        piVar2 = fcn.0042d363();\n    // WARNING: Could not recover jumptable at 0x004299dd. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar3 = (**(*piVar2 + 0x60))();\n        return uVar3;\n    }\n    uVar3 = 0;\n    if (*(param_1 + 0x1c) == 0) {\n        if (*(param_1 + 0x4c) == 0) {\n            return 0;\n        }\n    }\n    else {\n        fcn.0041b41e(0);\n        fcn.0041982a(*(param_1 + 0x1c));\n    }\n    if ((*(param_1 + 0x1c) != 0) || (*(param_1 + 0x4c) != 0)) {\n        if (*(param_1 + 0x4c) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n        }\n        else {\n            uVar3 = (**(**(param_1 + 0x4c) + 0x58))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 360
    },
    "00429b09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429b09(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x7c);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x44ed48;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x44ed4c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x44ed48;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x44ed4c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 0x60);\n        param_2[1] = param_2[1] + *(param_1 + 0x58);\n        param_2[2] = param_2[2] - *(param_1 + 100);\n        param_2[3] = param_2[3] - *(param_1 + 0x5c);\n        if ((*(param_1 + 0x7c) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x58);\n        param_2[1] = param_2[1] + *(param_1 + 0x60);\n        param_2[2] = param_2[2] - *(param_1 + 0x5c);\n        param_2[3] = param_2[3] - *(param_1 + 100);\n        if ((*(param_1 + 0x7c) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00429c99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429c99(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.0043292e();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[7], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x78) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0041c417();\n        iVar5 = fcn.0041c43f();\n        if ((iVar5 == 0) || (iVar5 = fcn.0041d8be(),  iVar5 == 0)) {\n            var_4h = -1;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x1c);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.0041b49a(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[7];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.0041c417(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x00429da0:\n            var_4h = -1;\n            *(var_8h + 0x78) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[7]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[7], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x1c);\n            }\n            if (iVar4 != iVar3) goto code_r0x00429da0;\n        }\n        if (-1 < var_4h) goto code_r0x00429dd0;\n    }\n    if (*(var_8h + 0x78) == -1) {\n        (*pcVar1)(in_ECX[7], 0xe001);\n    }\n    (**(*in_ECX + 0x160))(0xffffffff);\ncode_r0x00429dd0:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[7], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x160))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 884
    },
    "0042a0ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a0ea(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x22] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &arg_ch);\n        (***in_ECX[0x23])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041b3f7();\n    return;\n}\n",
        "token_count": 158
    },
    "0042a16e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042a16e(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x154))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x1f] & 4U) == 0) || ((var_4h[0x1f] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x134))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if ((uVar1 & 0x8000) != 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = var_ch + lprcDst;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.00419f37(arg_ch, var_4h[7], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 868
    },
    "0042a9fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a9fc(int32_t param_1)\n\n{\n    if (*(param_1 + 0x54) != 0) {\n    // WARNING: Could not recover jumptable at 0x0042aa07. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x54) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0042aab5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042aab5(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00405930();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x1f] != 0)) {\n    // WARNING: Could not recover jumptable at 0x0042aadb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(*piVar1[0x1f] + 100))();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0042acb3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042abe6)\n// WARNING: Removing unreachable block (ram,0x0042ac37)\n\nvoid fcn.0042acb3(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [259];\n    uchar uStack9;\n    uint uStack8;\n    \n    uStack8 = 0x42acbb;\n    iVar4 = fcn.00432908();\n    if (*(iVar4 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0042acc7. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar4 + 4) + 0x98))();\n        return;\n    }\n    uStack8 = *0x44bf78;\n    fcn.0042aab5(0);\n    iVar4 = fcn.0042aae2(0, &stack0xfffffef0);\n    if (iVar4 != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 1);\n    }\n    if ((iVar4 == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x376, 0, 0),  piVar1 == NULL)) {\n        piVar1 = NULL;\n    }\n    iStack276 = 0;\n    if ((piVar1 != NULL) && (iStack276 = *piVar1,  param_3 != 0)) {\n        *piVar1 = param_3 + 0x30000;\n    }\n    if (((param_2 & 0xf0) == 0) && ((uVar2 = param_2 & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        param_2 = param_2 | 0x30;\n    }\n    auStack268[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &stack0xfffffef4, 0x104);\n    if (iVar3 == 0x104) {\n        uStack9 = 0;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(iVar4, param_1, &stack0xfffffef4, param_2);\n    if (piVar1 != NULL) {\n        *piVar1 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.0042aab5(1);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 650
    },
    "0042ad48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042ad48(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    if (*(extraout_ECX + 0x54) == 0) {\n        iVar1 = fcn.00419ae3(0x20);\n        *(unaff_EBP + -0x10) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00433c42();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x54) = uVar2;\n    }\n    (**(**(extraout_ECX + 0x54) + 0xc))(*(unaff_EBP + 8));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 286
    },
    "0042ae5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ae5c(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpString;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x43f164, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 100));\n    }\n    else {\n        iVar1 = fcn.00432fc3(lpAppName);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 248
    },
    "0042aede": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042aede(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 100));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.00432f32();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x0042af4a;\n        }\n    }\n    else {\n        iVar1 = fcn.00432fc3(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x0042af4a:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x0042af4a;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "0042af92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042af92(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x0042afee;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.0042fa4d(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x0042afee:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.0042fa4d(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.0042fa4d(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.0042fa4d(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.0042fa4d(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 763
    },
    "0042b338": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b338(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.00422a63(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.0042fbe3();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x75) & 0xf0) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.0042fc82(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 848
    },
    "0042b43f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042b43f(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.0042af92();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.0042b338(0);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "0042b491": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b491(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.0042af92();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.0042b338(0);\n    return;\n}\n",
        "token_count": 308
    },
    "0042b6e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b6e6(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.0042b6a1();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.0042f943(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.0042b0aa(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x75) & 0x50) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x1c));\n        uVar1 = uVar1 & 0xffff;\n        if ((0xe81a < uVar1) && (uVar1 < 0xe81f)) {\n            *(param_1 + 0x90) = uVar1;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.00422688(param_1 + 0x94);\n        }\n        fcn.0042f7ac(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x144))(1);\n    }\n    return;\n}\n",
        "token_count": 784
    },
    "0042bf35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042bf35(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.00409f1b(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 206
    },
    "0042cb02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cb02(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '1') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x0042cb5b;\n                if (uVar1 < ':') goto code_r0x0042cb39;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x0042cb39:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0042cb6a;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x0042cb5b:\n            if ((*(*puVar5 + 0x4506a1) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x0042cb6a:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.00408d37(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.00408c11(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x0042cbd5:\n            if ((*(uVar1 + 0x4506a1) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '1') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x0042cbd5;\n            if (uVar2 < ':') goto code_r0x0042cba5;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x0042cba5:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 899
    },
    "0042d0f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d151)\n// WARNING: Removing unreachable block (ram,0x0042d15d)\n\nvoid fcn.0042d0f5(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.0041b4c1(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.0042cf57(*0x21, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x38) & 2) != 0)) && (*(unaff_EBX + 0xb0) == 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x38) = *(iVar5 + 0x38) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0042d19e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042d19e(int32_t param_1)\n\n{\n    if (*(param_1 + 0x28) == 0) {\n        fcn.0041b0f3(8);\n        *(param_1 + 0x28) = \"AfxFrameOrView70s\";\n    }\n    if (*(param_1 + 0x20) >> 8 < '\\0') {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x4000;\n    }\n    *(param_1 + 0x2d) = *(param_1 + 0x2d) | 2;\n    return 1;\n}\n",
        "token_count": 156
    },
    "0042d284": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d284(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xac);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xac) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x15c))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xac) == 0) && (*(param_1 + 0xac) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x15c))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "0042d377": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d377(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x158))();\n    if (iVar1 != 0) {\n        return param_1[0x24];\n    }\n    if ((param_1[0x22] != 0) && (*(param_1[0x22] + 0x90) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0042d6ff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d6ff(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00432908();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.0040b220(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00432908();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0041a9cb(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "0042d847": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d847(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2c] != NULL) {\n        (*param_1[0x2c])(param_1);\n    }\n    piVar1 = (**(*param_1 + 0x138))();\n    if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x8c))(param_1),  iVar2 == 0)) {\n        return;\n    }\n    iVar2 = fcn.00432908();\n    piVar3 = *(iVar2 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar1 == NULL) && (iVar2 = (**(*piVar3 + 0x94))(),  iVar2 == 0)) {\n            return;\n        }\n        fcn.0042aa41();\n        fcn.0042a9fc();\n        iVar2 = fcn.0042fb11();\n        if (iVar2 == 0) {\n            fcn.0042fb31(0);\n            return;\n        }\n        iVar2 = fcn.00432908();\n        if ((*(iVar2 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.00438e08(0);\n            return;\n        }\n    }\n    if ((piVar1 != NULL) && (piVar1[0x12] != 0)) {\n        var_4h = (**(*piVar1 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar1 + 0x7c))();\n                return;\n            }\n            (**(*piVar1 + 100))(&var_4h);\n            piVar3 = fcn.0041be1b();\n        } while (piVar3 == param_1);\n        (**(*piVar1 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 511
    },
    "0042daa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042daa8(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    \n    fcn.0041b3f7();\n    uVar2 = fcn.0041d7d1();\n    piVar3 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar3 = fcn.0041be5a();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar3 == arg_ch) ||\n       ((piVar4 = fcn.0041be5a(),  piVar3 == piVar4 &&\n        (iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar5 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar3[0xe] = piVar3[0xe] & 0xffffffdf;\n    if (bVar1) {\n        piVar3[0xe] = piVar3[0xe] | 0x20;\n    }\n    fcn.0042d571(!bVar1 * '\\x04' + '\\x04');\n    piVar3 = in_ECX[0x2b];\n    if (piVar3 == NULL) {\n        iVar5 = (**(*in_ECX + 0x13c))();\n        piVar3 = *(iVar5 + 0xac);\n        if (piVar3 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar3 + 0x15c))(1, piVar3, piVar3);\n    }\n    (**(*piVar3 + 0x160))(arg_8h);\n    return;\n}\n",
        "token_count": 491
    },
    "0042db7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042db7b(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041be5a();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 100) == 0) {\ncode_r0x0042dbb7:\n        fcn.0041b3f7();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x0042dbb0:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x0042dbb7;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x0042dbb0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x1c), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "0042dcfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dcfa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t in_ECX;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    uVar4 = fcn.00432908();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0x8c) && (iVar5 == *(iVar1 + 0x8e))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0x8c), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(*(iVar1 + 0x8e), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), *(iVar1 + 0x8c));\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 395
    },
    "0042de9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042de9b(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.0042d363();\n    if (arg_10h == 0) {\n        fcn.0041d91b(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x14c))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.0042d377(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x144))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x14c))(arg_ch);\n        piVar1[0x33] = piVar1[0x33] | 0xc;\n    }\n    iVar2 = fcn.0042d377();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x22] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x22] + 0x168))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x27] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x0042df5e;\n            }\n            piVar1[0x27] = 8;\n            goto code_r0x0042df87;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x27] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x27] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x0042df5e:\n        fcn.0041d89d(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x0042df87:\n    (**(*piVar1 + 0x144))(0);\n    return;\n}\n",
        "token_count": 567
    },
    "0042df97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042df97(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004263eb(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x7c) == 0 || (iVar2 = (**(**(in_ECX + 0x7c) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.0041dcc4();\n        iVar2 = fcn.004328f8();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.0041c417(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0041f290(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.004089fe(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x0042e0fb;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x50) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.0041dcea(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x0042e0fb:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 987
    },
    "0042e111": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e111(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0041be5a();\n    if ((in_ECX[0x1f] != NULL) && (iVar2 = (**(*in_ECX[0x1f] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xe] = in_ECX[0xe] & 0xffffffbf;\n        if (*(iVar1 + 100) == 0) {\n            in_ECX[0x29] = 0xe001;\n        }\n        else {\n            in_ECX[0x29] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x29], 0);\n        iVar1 = (**(*in_ECX + 0x150))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x0042e1e8;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x29] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x29] = 0xef1f;\n                goto code_r0x0042e1e4;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x29] = arg_8h;\n    }\ncode_r0x0042e1e4:\n    *(iVar1 + 0x38) = *(iVar1 + 0x38) | 0x40;\ncode_r0x0042e1e8:\n    if (in_ECX[0x29] != in_ECX[0x2a]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.0041b49a(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 640
    },
    "0042e26c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid fcn.0042e26c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    int32_t *unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iStack80;\n    int32_t *var_48h;\n    uint var_44h;\n    uint uStack68;\n    uint var_2ch;\n    uint var_28h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    uStack68 = 10;\n    var_44h = 0x42e286;\n    fcn.004191ba();\n    *(unaff_EBP + -4) = 0;\n    var_44h = 10;\n    var_48h = 0x42e294;\n    fcn.004191ba();\n    iVar1 = *(extraout_ECX + 0x84);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    var_48h = unaff_EDI;\n    while (iVar1 != 0) {\n        iStack80 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.00409f1b();\n        piVar4 = *ppiVar3;\n        (**(*piVar4 + 0x158))();\n        iStack80 = 0x42e2d3;\n        var_48h = piVar4;\n        fcn.0041923e();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while (puVar5 != NULL) {\n        if (puVar5 == NULL) goto code_r0x00417be7;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if ((*ppiVar3)[0x24] == 0) {\n            var_48h = 0x42e306;\n            (**(**ppiVar3 + 0x60))();\n        }\n        else {\n            var_48h = 0x42e2f8;\n            piVar4 = fcn.0041be1b();\n            var_48h = 0x42e2ff;\n            (**(*piVar4 + 0x60))();\n        }\n    }\n    puVar5 = *(unaff_EBP + -0x28);\n    while( true ) {\n        if (puVar5 == NULL) {\n            *(unaff_EBP + -4) = 0;\n            var_48h = 0x42e333;\n            fcn.004191dd();\n            *(unaff_EBP + -4) = 0xffffffff;\n            var_48h = 0x42e33f;\n            fcn.004191dd();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        if (puVar5 == NULL) break;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if (*ppiVar3 != NULL) {\n            var_48h = 0x42e323;\n            (**(**ppiVar3 + 0x60))();\n        }\n    }\ncode_r0x00417be7:\n    iStack80 = 0x44d178;\n    fcn.0040be8b(&stack0xffffffb0, 0x446a74);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 858
    },
    "0042e351": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042e351(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x84);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.00409f1b(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x1c));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 207
    },
    "0042f943": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f943(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if ((((*(arg_8h + 0x84) == 0) || (iVar1 = *(arg_8h + 0x88),  iVar1 == 0)) || (*(iVar1 + 0x90) == 0)) ||\n       ((iVar2 = fcn.00428bd6(),  iVar2 != 1 || ((*(iVar1 + 0x7c) & arg_14h & 0xf000) == 0)))) {\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x7c) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar4 = fcn.0042f773(arg_14h);\n        fcn.0041d91b(0, arg_ch, arg_10h, 0, 0, 0x15);\n        if (piVar4[0xd] == 0) {\n            piVar4[0xd] = *(arg_8h + 0x1c);\n        }\n        fcn.0041d755(0xe81f);\n        fcn.00429314(arg_8h, 0);\n        (**(*piVar4 + 0x144))(1);\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x1c), 0xfffffff0);\n        if ((uVar5 & 0x10000000) == 0) {\n            return;\n        }\n        fcn.0041d89d(8);\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n        piVar4 = fcn.0041b49a(uVar3);\n        fcn.0041d91b(0, arg_ch, arg_10h, 0, 0, 0x15);\n        (**(*piVar4 + 0x144))(1);\n    }\n    (*_sym.imp.USER32.dll_UpdateWindow)(piVar4[7]);\n    return;\n}\n",
        "token_count": 600
    },
    "0042fa4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0042fa4d(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x84);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.00409f1b(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x158))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[7]),  iVar4 == 0)) ||\n                 ((piVar1[0x1f] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x24] != 0 && ((piVar1[0x1f] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[7], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x1f] & arg_18h;\n}\n",
        "token_count": 546
    },
    "0042fbe3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042fbe3(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.00433ab7(8);\n    if (*0x44ed94 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x44ed94 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x44ed90 == '\\0') {\n        iVar2 = fcn.0040b360(0x42fbae);\n        *0x44ed90 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.00433b1a(8);\n    fcn.00422a63(*0x44ed94);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 323
    },
    "004301a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004301a9(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041d7d1();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    uVar5 = fcn.0041b3f7();\n    if ((var_4h & 0x1000) != 0) {\n        if (uVar5 == 3) {\n            uVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < uVar5) && (uVar5 < 0x12)) || (uVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (uVar5 != 4) {\n                    if (uVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (uVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (uVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (uVar5 != 0x11) {\n                        return uVar5;\n                    }\n                }\n                uVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            uVar5 = 2;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 561
    },
    "004312f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004312f9(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.00409a88();\n    iVar2 = fcn.00432908();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00432908();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.0042fb31(1);\n        iVar2 = fcn.00432908();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x1c) == 0)) {\n            iVar2 = fcn.00432908();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00438e08(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041d8be();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0042fb7e. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x1c) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "00431cab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00431cab(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_28h;\n    int32_t lpType;\n    uint lpcbData;\n    uint32_t hKey;\n    uint32_t lParam;\n    uint lpData;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    var_4h = *0x44bf78;\n    lParam = 0;\n    iVar5 = 0;\n    lpcbData = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetUserDefaultUILanguage\");\n    if (pcVar2 == NULL) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar6 < 0) {\n            hKey = 0;\n            iVar6 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                              (0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019, &hKey);\n            if (iVar6 == 0) {\n                lpcbData = 0x10;\n                iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0, 0, &lpType, &lpData, &lpcbData);\n                if (((iVar6 == 0) && (lpType == 1)) &&\n                   (iVar6 = fcn.0040c0f2(&lpData, 0x43ec88, &var_28h), \n                   pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar6 == 1)) {\n                    lParam = var_28h;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(var_28h & 0xffff);\n                    var_38h = (*pcVar1)(var_28h & 0x3ff);\n                    iVar5 = 2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n        }\n        else {\n            iVar6 = (*pcVar1)(\"ntdll.dll\");\n            if (iVar6 != 0) {\n                lParam = 0;\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar6, 0x10, 1, 0x431c95, &lParam);\n                pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n                if (lParam != 0) {\n                    uVar4 = lParam & 0x3ff;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n                    var_38h = (*pcVar1)(uVar4);\n                    iVar5 = 2;\n                }\n            }\n        }\n    }\n    else {\n        lParam = (*pcVar2)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        hKey = lParam & 0x3ff;\n        var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n        var_38h = (*pcVar1)(hKey);\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetSystemDefaultUILanguage\");\n        lParam = (*pcVar2)();\n        uVar4 = lParam & 0x3ff;\n        var_34h = (*pcVar1)(lParam & 0xffff);\n        var_30h = (*pcVar1)(uVar4);\n        iVar5 = 4;\n    }\n    (&var_3ch)[iVar5] = 0x800;\n    iVar6 = 0;\n    if (iVar5 != -1) {\n        do {\n            iVar3 = fcn.00431c16(arg_8h, (&var_3ch)[iVar6]);\n            if (iVar3 != 0) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar5 + 1);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 998
    },
    "00432325": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432325(int32_t param_1)\n\n{\n    if (*(param_1 + 0x84) != NULL) {\n        (**(**(param_1 + 0x84) + 0x14))();\n    }\n    if (*(param_1 + 0x90) != 0) {\n        fcn.0042ae5c(\"Settings\", \"PreviewPages\", *(param_1 + 0x90));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "004325a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004325a5(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_ch;\n    uint unaff_EDI;\n    \n    if ((*(*(param_1 + 0x14) + -0xc) != 0) &&\n       ((*(param_1 + 0x10) != 3 ||\n        (((*(*(param_1 + 0x18) + -0xc) != 0 && (*(*(param_1 + 0x1c) + -0xc) != 0)) && (*(*(param_1 + 0x20) + -0xc) != 0)\n         ))))) {\n        return;\n    }\n    if (param_2 == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = fcn.0040be00(param_2, unaff_EDI);\n    }\n    fcn.00408dba(param_2, arg_ch);\n    return;\n}\n",
        "token_count": 215
    },
    "00432731": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432731(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x138))();\n    }\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.00419137();\n            fcn.00419b13(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "00433009": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433009(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 100));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00432fc3(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 257
    },
    "00433260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433260(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *piVar5;\n    int32_t extraout_EDX;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    piVar5 = in_ECX;\n    if (iVar3 < 0) {\n        fcn.004010c0(0x80070057);\n        piVar5 = extraout_ECX;\n        iVar3 = extraout_EDX;\n    }\n    if (arg_ch == 0) {\n        fcn.00408c4d(piVar5);\n    }\n    else {\n        iVar2 = *piVar5;\n        uVar1 = iVar2 + iVar3;\n        uVar6 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar6) {\n            iVar3 = fcn.0040c432(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar6) {\n                arg_10h_00 = fcn.0040c4d0(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.004331fb(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n        *arg_10h = -1;\n        uVar4 = (**(**(*in_ECX + -0x10) + 0x10))();\n        fcn.00408c36(uVar4);\n    }\n    return arg_8h;\n}\n",
        "token_count": 458
    },
    "00433368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433368(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0043336f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00433540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433540(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00433786": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433786(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00433578(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 359
    },
    "0043390c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043390c(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_retaddr;\n    \n    puVar3 = *0x44ece4;\n    if (*0x44ece4 != NULL) {\n        puVar1 = *0x44ece4 + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (param_1 == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.00433786(iVar4, unaff_retaddr);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.00433786(iVar4, param_2);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "00433874": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00433874(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    if (*extraout_ECX == 0) {\n        if (*0x44ece4 == 0) {\n            *(unaff_EBP + -0x10) = 0x44ece8;\n            *(unaff_EBP + -4) = 0;\n            *0x44ece4 = fcn.004335bf();\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        iVar1 = fcn.00433378();\n        *extraout_ECX = iVar1;\n    }\n    iVar1 = fcn.00433484(*extraout_ECX);\n    if (iVar1 == 0) {\n        iVar1 = (**(unaff_EBP + 8))();\n        fcn.00433664(*extraout_ECX, iVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 323
    },
    "00433a4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00433a4e(void)\n\n{\n    if (*0x44ef90 == 0) {\n        *0x44ef90 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x44eddc);\n    }\n    return *0x44ef90;\n}\n",
        "token_count": 70
    },
    "00433ab7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433ab7(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x44ef90 == 0) {\n        fcn.00433a4e();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x44ed98;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44eddc);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x44edf8);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44eddc);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x44edf8);\n    return;\n}\n",
        "token_count": 227
    },
    "00433bbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00433bbd(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 305
    },
    "00433dc3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433dc3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    if (arg_8h == 0) {\n        fcn.004010c0(0x80070057);\n    }\n    uVar1 = fcn.0040d03a(arg_8h, arg_ch);\n    arg_8h_00 = fcn.00408d37(uVar1);\n    fcn.0040cfe3(arg_8h_00, arg_8h, arg_ch);\n    fcn.00408abf(uVar1);\n    return;\n}\n",
        "token_count": 149
    },
    "004343de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.004343de(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(param_1);\n    if (param_1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_1, uVar1, param_2);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 148
    },
    "0043440d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043440d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    uchar auStack784 [256];\n    uchar auStack528 [260];\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    iVar1 = fcn.00432908();\n    *(iVar1 + 8) = *(param_1 + 0x40);\n    *(iVar1 + 0xc) = *(param_1 + 0x40);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x40), auStack528, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.004223a2();\n    }\n    puVar3 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)(auStack528);\n    if (puVar3 == NULL) {\n        fcn.004223a2();\n    }\n    *puVar3 = 0;\n    iVar2 = fcn.004343de(auStack528, auStack268, 0x104);\n    if (iVar2 != 0) {\n        fcn.004223a2();\n    }\n    if (*(param_1 + 0x5c) == 0) {\n        uVar4 = fcn.0040c2ed(auStack268);\n        *(param_1 + 0x5c) = uVar4;\n    }\n    if (*(param_1 + 0x4c) == 0) {\n        iVar2 = fcn.0041f99a(0xe000, auStack784, 0x100);\n        if (iVar2 == 0) {\n            puVar5 = *(param_1 + 0x5c);\n        }\n        else {\n            puVar5 = auStack784;\n        }\n        uVar4 = fcn.0040c2ed(puVar5);\n        *(param_1 + 0x4c) = uVar4;\n    }\n    *(iVar1 + 0x10) = *(param_1 + 0x4c);\n    if (*(param_1 + 0x60) == 0) {\n        if (*(param_1 + 0x68) == 1) {\n            pcVar6 = \".CHM\";\n        }\n        else {\n            pcVar6 = \".HLP\";\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar3, pcVar6);\n        uVar4 = fcn.0040c2ed(auStack528);\n        *(param_1 + 0x60) = uVar4;\n        *puVar3 = 0;\n    }\n    if (*(param_1 + 100) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack268, \".INI\");\n        uVar4 = fcn.0040c2ed(auStack268);\n        *(param_1 + 100) = uVar4;\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 726
    },
    "0043455b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043455b(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00432908();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00432908();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x44) = param_1;\n        *(iVar3 + 0x48) = param_2;\n        *(iVar3 + 0x40) = unaff_ESI;\n        fcn.0043440d();\n    }\n    iVar3 = fcn.00432908();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0041f018();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x44ea3c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 335
    },
    "00434840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_128h\n// WARNING: Variable defined which should be unmapped: hMenu\n// WARNING: Variable defined which should be unmapped: var_124h\n// WARNING: Variable defined which should be unmapped: var_130h\n\nvoid __cdecl fcn.00434840(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_130h;\n    uint hMenu;\n    uint var_128h;\n    uint var_124h;\n    uint lpNewItem;\n    uint uIDItem;\n    uint var_118h;\n    uint uPosition;\n    uint lpString;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = *0x44bf78;\n    *(unaff_EBP + -0x128) = 0;\n    *(unaff_EBP + -300) = 0;\n    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x130) = iVar3;\n    *(unaff_EBP + -0x118) = 0;\n    *(unaff_EBP + -0x114) = 0;\n    if (*(unaff_EBP + 0x14) == 1) {\n        *(unaff_EBP + -0x114) = **(unaff_EBP + 0x10);\n    }\n    *(unaff_EBP + -0x11c) = 0;\n    if (0 < iVar3) {\n        do {\n            iVar3 = (*_sym.imp.USER32.dll_GetSubMenu)(*(unaff_EBP + 0xc), *(unaff_EBP + -0x11c));\n            uVar4 = (*_sym.imp.USER32.dll_GetMenuState)(*(unaff_EBP + 0xc), *(unaff_EBP + -0x11c), 0x400);\n            if ((iVar3 == 0) && ((uVar4 & 0x800) != 0)) {\n                iVar3 = *(unaff_EBP + 0x14);\n                puVar2 = *(unaff_EBP + 0x10) + iVar3 * 4;\n                *puVar2 = *(unaff_EBP + -0x118);\n                *(unaff_EBP + -0x118) = 0;\n                if (iVar3 < 5) {\n                    *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + puVar2[1];\n                }\n                *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + 2;\n            }\n            else {\n                *(unaff_EBP + -0x124) = 0;\n                if ((*(unaff_EBP + 0x18) != 0) && ((*(unaff_EBP + 0x14) == 5 && (*(*(unaff_EBP + 0x10) + 0x14) == 1))))\n                {\n                    uVar5 = (*_sym.imp.USER32.dll_GetSubMenu)(*(unaff_EBP + 8), *(unaff_EBP + -0x114));\n                    *(unaff_EBP + -0x124) = uVar5;\n                }\n                iVar6 = (*_sym.imp.USER32.dll_GetMenuStringA)\n                                  (*(unaff_EBP + 0xc), *(unaff_EBP + -0x11c), unaff_EBP + -0x110, 0x100, 0x400);\n                if (iVar3 == 0) {\n                    if (0 < iVar6) {\n                        iVar6 = unaff_EBP + -0x110;\n                        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(unaff_EBP + 0xc), *(unaff_EBP + -0x11c), iVar6);\n                        uVar4 = uVar4 | 0x400;\ncode_r0x00434a29:\n                        (*_sym.imp.USER32.dll_InsertMenuA)(*(unaff_EBP + 8), *(unaff_EBP + -0x114), uVar4, iVar3, iVar6)\n                        ;\n                        *(unaff_EBP + -0x114) = *(unaff_EBP + -0x114) + 1;\n                        *(unaff_EBP + -0x118) = *(unaff_EBP + -0x118) + 1;\n                    }\n                }\n                else if (*(unaff_EBP + -0x124) == 0) {\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar3);\n                    if (iVar6 != 0) {\n                        iVar6 = unaff_EBP + -0x110;\n                        uVar4 = uVar4 & 0xff | 0x410;\n                        goto code_r0x00434a29;\n                    }\n                }\n                else {\n                    iVar6 = fcn.00432908();\n                    fcn.00408f6a(*(iVar6 + 0x10));\n                    iVar6 = *(*(unaff_EBP + -0x120) + -0xc);\n                    *(unaff_EBP + -4) = 0;\n                    if (iVar6 != 0) {\n                        fcn.00408f22(0x20);\n                    }\n                    fcn.00430513(unaff_EBP + -0x110);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(*(unaff_EBP + -0x124), 0x10, iVar3, *(unaff_EBP + -0x120));\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    puVar2 = *(unaff_EBP + 0x10) + *(unaff_EBP + 0x14) * 4;\n                    piVar1 = puVar2 + -1;\n                    *piVar1 = *piVar1 + 1;\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x128) = 1;\n                    *(unaff_EBP + -300) = iVar3;\n                    fcn.004089b7();\n                }\n            }\n            *(unaff_EBP + -0x11c) = *(unaff_EBP + -0x11c) + 1;\n        } while (*(unaff_EBP + -0x11c) < *(unaff_EBP + -0x130));\n        if (*(unaff_EBP + -0x128) != 0) goto code_r0x00434a76;\n    }\n    *(*(unaff_EBP + 0x10) + *(unaff_EBP + 0x14) * 4) = *(unaff_EBP + -0x118);\ncode_r0x00434a76:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1617
    },
    "00434afc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434afc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] != 0) {\n        iVar1 = (**(*param_1[2] + 8))(param_1[2]);\n        return iVar1;\n    }\n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00434bbf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00434bbf(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "0043504d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043504d(int32_t *param_1)\n\n{\n    int32_t *var_4h;\n    \n    if ((param_1[0x33] & 8U) != 0) {\n        var_4h = param_1;\n        (**(*param_1 + 0x144))(param_1[0x33] & 4);\n    }\n    var_4h = param_1[0x21];\n    while (var_4h != NULL) {\n        fcn.00409f1b(&var_4h);\n        fcn.0041bbc4();\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "004359de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004359de(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CPreviewView.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.004227c1();\n    pcVar1 = extraout_ECX[0x4c];\n    if (pcVar1 != NULL) {\n        fcn.004372ac();\n        fcn.00419b13(pcVar1);\n    }\n    fcn.00419b13(extraout_ECX[0x29]);\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    if (extraout_ECX[0x47] != NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n        (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n        (*_sym.imp.USER32.dll_DestroyCursor)(extraout_ECX[0x47]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004227f2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00424c08();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 425
    },
    "00435b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435b50(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    uVar1 = fcn.0041be1b();\n    iVar2 = fcn.0041f1c8(0x43c67c, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.00405930();\n    }\n    uVar1 = fcn.0041f1c8(0x43c67c, uVar1);\n    if ((*(param_1 + 0xa8) != 0) && (*(*(param_1 + 0xa8) + 0x50) != 0)) {\n        iVar2 = fcn.0041f1c8(0x440aa4, uVar1);\n        if ((iVar2 != 0) && (*(param_1 + 0x50) != 0)) {\n            piVar3 = fcn.0041f1c8(0x440a78, *(param_1 + 0x50));\n            if (piVar3 != NULL) {\n                (**(**(param_1 + 0xa8) + 0x60))();\n                *(param_1 + 0xa8) = 0;\n                *(iVar2 + 0x13c) = 0;\n                (**(*piVar3 + 0x110))(1);\n            }\n        }\n    }\n    if (*(param_1 + 0xa8) != NULL) {\n        (**(**(param_1 + 0xa8) + 0x60))();\n    }\n    *(param_1 + 0xa8) = 0;\n    *(*(param_1 + 0x130) + 0x14) = *(param_1 + 0x110);\n    (**(**(param_1 + 0x84) + 0x17c))(*(param_1 + 0x8c), *(param_1 + 0x130), 0, 0, param_1);\n    return;\n}\n",
        "token_count": 468
    },
    "00435c59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435c59(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.004253eb(&var_8h, &var_10h);\n    if (((*(in_ECX + 0x108) == 0) && (*(*(**(in_ECX + 0x130) + 0x70) + 0x1e) != -1)) &&\n       (iVar1 = *(**(in_ECX + 0x130) + 0x70),  *(iVar1 + 0x1e) != *(iVar1 + 0x1c))) {\n        var_8h = var_8h - var_10h;\n    }\n    *(in_ECX + 0x118) = (var_8h + -8) / 2;\n    if (*(in_ECX + 0x114) == 2) {\n        var_8h = (var_8h + -0x18) / 2;\n    }\n    else {\n        var_8h = var_8h + -0x10;\n    }\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h + -0x10;\n    return;\n}\n",
        "token_count": 316
    },
    "00435ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435ce0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t *piVar7;\n    uint xRight;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = arg_8h * 0x28 + *(in_ECX + 0xac);\n    fcn.00435c59(&var_8h);\n    iVar5 = *(iVar6 + 0x24);\n    iVar1 = *(in_ECX + 0x108);\n    bVar2 = iVar5 <= *(iVar6 + 0x20);\n    if (iVar1 == 0) {\n        *(iVar6 + 0x18) = *(iVar6 + 0x20);\n        uVar4 = *(iVar6 + 0x24);\ncode_r0x00435d64:\n        *(iVar6 + 0x1c) = uVar4;\n    }\n    else {\n        if (iVar1 == 1) {\n            *(iVar6 + 0x1c) = iVar5;\n            if (bVar2) {\n                iVar5 = *(iVar6 + 0x20) * 3 - iVar5;\n            }\n            else {\n                iVar5 = *(iVar6 + 0x20) + iVar5;\n            }\n            iVar5 = iVar5 / 2;\n        }\n        else {\n            if (iVar1 != 2) goto code_r0x00435d67;\n            if (!bVar2) {\n                uVar4 = 1;\n                *(iVar6 + 0x18) = 1;\n                goto code_r0x00435d64;\n            }\n            *(iVar6 + 0x1c) = *(iVar6 + 0x24);\n            iVar5 = *(iVar6 + 0x20) * 2 - *(iVar6 + 0x24);\n        }\n        *(iVar6 + 0x18) = iVar5;\n    }\ncode_r0x00435d67:\n    iVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(*(iVar6 + 0x10), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    iVar6 = (*_sym.imp.KERNEL32.dll_MulDiv)(*(iVar6 + 0x14), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    piVar7 = *(in_ECX + 0xac) + arg_8h * 0x28;\n    (*_sym.imp.USER32.dll_SetRect)(piVar7, 8, 8, iVar5 + 0xb, iVar6 + 0xb);\n    pcVar3 = _sym.imp.USER32.dll_OffsetRect;\n    if (*(in_ECX + 0x108) == 0) {\n        (*_sym.imp.USER32.dll_OffsetRect)\n                  (piVar7, (var_8h - (piVar7[2] - *piVar7)) / 2 + -1, (var_4h - (piVar7[3] - piVar7[1])) / 2 + -1);\n        if (arg_8h == 1) {\n            (*pcVar3)(piVar7, *(in_ECX + 0x118), 0);\n        }\n    }\n    else {\n        fcn.00425c11(1, (piVar7[2] - *piVar7) + 0x10, (piVar7[3] - piVar7[1]) + 0x10, &var_8h, 0x43f8d4);\n    }\n    return;\n}\n",
        "token_count": 846
    },
    "00435ef4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435ef4(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 0x108) != 0) {\n        piVar1 = fcn.004251c5(&var_8h);\n        iVar2 = piVar1[1];\n        *arg_8h = *arg_8h + *piVar1;\n        arg_8h[1] = arg_8h[1] + iVar2;\n    }\n    *arg_ch = 0;\n    if (*(in_ECX + 0x114) != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_PtInRect)(*(in_ECX + 0xac) + *arg_ch * 0x28, *arg_8h, arg_8h[1]);\n            if (iVar2 != 0) {\n                iVar2 = *(*(in_ECX + 0xac) + 4 + *arg_ch * 0x28);\n                *arg_8h = *arg_8h - *(*(in_ECX + 0xac) + *arg_ch * 0x28);\n                arg_8h[1] = arg_8h[1] - iVar2;\n                iVar2 = *(in_ECX + 0xac) + *arg_ch * 0x28;\n                iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                *arg_8h = iVar2;\n                iVar2 = *(in_ECX + 0xac) + *arg_ch * 0x28;\n                iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_8h[1], *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                arg_8h[1] = iVar2;\n                return 1;\n            }\n            *arg_ch = *arg_ch + 1;\n        } while (*arg_ch < *(in_ECX + 0x114));\n    }\n    return 0;\n}\n",
        "token_count": 505
    },
    "004360ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004360ac(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *piVar3;\n    uint var_8h;\n    \n    if (arg_ch == 1) {\n        (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x1c), &var_8h);\n        if ((*(in_ECX + 0x108) == 2) || (iVar2 = fcn.00435ef4(&var_8h, &arg_ch),  iVar2 == 0)) {\n            iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n        }\n        else {\n            piVar3 = in_ECX + 0x11c;\n            if (*piVar3 == 0) {\n                iVar2 = fcn.00432908();\n                iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(*(iVar2 + 0xc), 0x7902);\n                *piVar3 = iVar2;\n            }\n            iVar2 = *piVar3;\n        }\n        (*_sym.imp.USER32.dll_SetCursor)(iVar2);\n        return 0;\n    }\n    uVar1 = fcn.0041b3f7();\n    return uVar1;\n}\n",
        "token_count": 326
    },
    "0043697f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043697f(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_stack_0000000c;\n    \n    if (in_ECX[0x42] != 0) {\n        if (((in_stack_0000000c == 0) || (iVar1 = fcn.0041b9cf(0),  iVar1 == 0)) &&\n           (iVar1 = (**(*in_ECX + 0x70))(1),  in_stack_0000000c == iVar1)) {\n            (**(*in_ECX + 0x134))((arg_8h & 0xff) << 8 | 0xff, arg_ch, 1);\n        }\n        return;\n    }\n    if (arg_8h == 0) {\n        arg_ch = in_ECX[0x44] - 1;\n    }\n    else if (arg_8h == 1) {\n        arg_ch = in_ECX[0x44] + 1;\n    }\n    else if (arg_8h == 2) {\n        arg_ch = in_ECX[0x44] - ((*(*(*in_ECX[0x4c] + 0x70) + 0x1e) - *(*(*in_ECX[0x4c] + 0x70) + 0x1c)) + 9) / 10;\n    }\n    else if (arg_8h == 3) {\n        arg_ch = ((*(*(*in_ECX[0x4c] + 0x70) + 0x1e) - *(*(*in_ECX[0x4c] + 0x70) + 0x1c)) + 9) / 10 + in_ECX[0x44];\n    }\n    else if (arg_8h != 4) {\n        if (arg_8h == 6) {\n            arg_ch = *(*(*in_ECX[0x4c] + 0x70) + 0x1c);\n        }\n        else {\n            if (arg_8h != 7) {\n                return;\n            }\n            arg_ch = *(*(*in_ECX[0x4c] + 0x70) + 0x1e);\n        }\n    }\n    fcn.00435fba(arg_ch, 1);\n    return;\n}\n",
        "token_count": 540
    },
    "004370b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004370b1(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    iVar1 = fcn.00435ef4(&arg_ch, &var_4h);\n    if (iVar1 != 0) {\n        if (*(in_ECX + 0x108) == 2) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = *(in_ECX + 0x108) + 1;\n        }\n        fcn.00436f36(iVar1, var_4h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0043814b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043814b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    pcVar2 = _sym.imp.GDI32.dll_GetStockObject;\n    if (param_1[1] != 0) {\n        uVar4 = (*_sym.imp.GDI32.dll_GetStockObject)(7);\n        pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n        uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(param_1[2], uVar4);\n        (*pcVar3)(param_1[2], uVar4);\n        (*pcVar3)(param_1[1], uVar4);\n        uVar4 = (*pcVar2)(4);\n        uVar4 = (*pcVar3)(param_1[2], uVar4);\n        (*pcVar3)(param_1[2], uVar4);\n        (*pcVar3)(param_1[1], uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetROP2)(param_1[2]);\n        fcn.00422113(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetBkMode)(param_1[2]);\n        fcn.004220b7(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetTextAlign)(param_1[2]);\n        fcn.004222d7(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetPolyFillMode)(param_1[2]);\n        fcn.004220e5(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetStretchBltMode)(param_1[2]);\n        fcn.00422141(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetTextColor)(param_1[2]);\n        pcVar2 = _sym.imp.GDI32.dll_GetNearestColor;\n        iVar1 = *param_1;\n        uVar4 = (*_sym.imp.GDI32.dll_GetNearestColor)(param_1[2], uVar4);\n        (**(iVar1 + 0x30))(uVar4);\n        uVar4 = (*_sym.imp.GDI32.dll_GetBkColor)(param_1[2]);\n        iVar1 = *param_1;\n        uVar4 = (*pcVar2)(param_1[2], uVar4);\n        (**(iVar1 + 0x2c))(uVar4);\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00438225": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438225(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t aiStack152 [3];\n    int32_t iStack140;\n    uint uStack132;\n    uint uStack124;\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uint8_t uStack101;\n    uchar uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar auStack84 [4];\n    int32_t iStack80;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack52;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uchar uStack45;\n    uint8_t uStack41;\n    uchar auStack40 [32];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    if (param_1[2] != 0) {\n        if (param_1[0xb] == 0) {\n            (**(*param_1 + 0x24))(0xe);\n        }\n        else if (param_1[1] != 0) {\n            (*_sym.imp.GDI32.dll_GetObjectA)(param_1[0xb], 0x3c, &iStack68);\n            (*_sym.imp.GDI32.dll_GetTextFaceA)(param_1[2], 0x20, auStack40);\n            pcVar2 = _sym.imp.GDI32.dll_GetTextMetricsA;\n            (*_sym.imp.GDI32.dll_GetTextMetricsA)(param_1[2], aiStack152);\n            pcVar1 = _sym.imp.GDI32.dll_CreateFontIndirectA;\n            if (aiStack152[0] < 0) {\n                iStack68 = aiStack152[0];\n            }\n            else {\n                iStack68 = iStack140 - aiStack152[0];\n            }\n            uStack64 = uStack132;\n            uStack52 = uStack124;\n            uStack48 = uStack104;\n            uStack47 = uStack103;\n            uStack46 = uStack102;\n            uStack45 = uStack100;\n            uStack41 = uStack101;\n            iStack88 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&iStack68);\n            (*_sym.imp.GDI32.dll_SelectObject)(param_1[1], iStack88);\n            (*pcVar2)(param_1[1], aiStack152);\n            iVar4 = -iStack68;\n            if (aiStack152[0] < 0) {\n                iStack92 = -aiStack152[0];\n            }\n            else {\n                iStack92 = aiStack152[0] - iStack140;\n            }\n            (*_sym.imp.GDI32.dll_GetWindowExtEx)(param_1[1], auStack76);\n            (*_sym.imp.GDI32.dll_GetViewportExtEx)(param_1[1], auStack84);\n            pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n            if (iStack72 < 0) {\n                iStack72 = -iStack72;\n            }\n            if (iStack80 < 0) {\n                iStack80 = -iStack80;\n            }\n            iStack96 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar4, iStack80, iStack72);\n            iVar3 = (*pcVar2)(iStack92, iStack80, iStack72);\n            iVar4 = iStack88;\n            if (iStack96 < iVar3) {\n                auStack40[0] = 0;\n                uStack41 = ((uStack41 & 0xf0) != 0x50) - 1U & 0x50;\n                iVar4 = (*pcVar1)(&iStack68);\n                (*_sym.imp.GDI32.dll_SelectObject)(param_1[1], iVar4);\n                (*_sym.imp.GDI32.dll_DeleteObject)(iStack88);\n            }\n            fcn.004263d2(param_1 + 10);\n            param_1[10] = iVar4;\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 970
    },
    "004389fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004389fa(int32_t param_1)\n\n{\n    uint X;\n    uint var_ch;\n    int32_t lpPoint;\n    int32_t Y;\n    \n    if ((*(param_1 + 8) != 0) && (*(param_1 + 4) != 0)) {\n        (*_sym.imp.GDI32.dll_GetViewportOrgEx)(*(param_1 + 8), &lpPoint);\n        fcn.004388ec(&lpPoint);\n        Y = Y + *(param_1 + 0x24);\n        lpPoint = lpPoint + *(param_1 + 0x20);\n        (*_sym.imp.GDI32.dll_SetViewportOrgEx)(*(param_1 + 4), lpPoint, Y, 0);\n        (*_sym.imp.GDI32.dll_GetWindowOrgEx)(*(param_1 + 8), &X);\n        (*_sym.imp.GDI32.dll_SetWindowOrgEx)(*(param_1 + 4), X, var_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00438ae4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438ae4(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    if (param_2 != 0) {\n        piVar1 = param_1 + 0x38;\n        (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(param_1 + 8), piVar1);\n        piVar2 = param_1 + 0x30;\n        (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(param_1 + 8), piVar2);\n        while ((((-0x4000 < *piVar2 && (*piVar2 < 0x4000)) && (iVar5 = *piVar1,  -0x4000 < iVar5)) && (iVar5 < 0x4000)))\n        {\n            *piVar2 = *piVar2 * 2;\n            *piVar1 = iVar5 * 2;\n        }\n        while (((pcVar3 = _sym.imp.GDI32.dll_GetDeviceCaps,  -0x4000 < *(param_1 + 0x34) && (*(param_1 + 0x34) < 0x4000)\n                ) && ((iVar5 = *(param_1 + 0x3c),  -0x4000 < iVar5 && (iVar5 < 0x4000))))) {\n            *(param_1 + 0x34) = *(param_1 + 0x34) * 2;\n            *(param_1 + 0x3c) = iVar5 * 2;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(param_1 + 8), 0x58);\n        iVar5 = fcn.00437da0(*piVar1, *(param_1 + 0x10), *0x44ed50, *(param_1 + 0x14), uVar4);\n        *piVar1 = iVar5;\n        uVar4 = (*pcVar3)(*(param_1 + 8), 0x5a);\n        uVar4 = fcn.00437da0(*(param_1 + 0x3c), *(param_1 + 0x10), *0x44ed54, *(param_1 + 0x14), uVar4);\n        *(param_1 + 0x3c) = uVar4;\n    }\n    if (*(param_1 + 4) != 0) {\n        (*_sym.imp.GDI32.dll_SetMapMode)(*(param_1 + 4), 8);\n        (*_sym.imp.GDI32.dll_SetWindowExtEx)(*(param_1 + 4), *(param_1 + 0x30), *(param_1 + 0x34), 0);\n        (*_sym.imp.GDI32.dll_SetViewportExtEx)(*(param_1 + 4), *(param_1 + 0x38), *(param_1 + 0x3c), 0);\n        fcn.004389fa();\n    }\n    return;\n}\n",
        "token_count": 710
    },
    "00438cd4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438cd4(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x10) = param_2;\n    *(param_1 + 0x14) = param_3;\n    if (*(param_1 + 8) != 0) {\n        fcn.00438ae4(1);\n        fcn.00438225();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00438e73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00438e73(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        ppiVar3 = fcn.00409f1b(unaff_EBP + -0x10);\n        piVar2 = *ppiVar3;\n        if (piVar2[7] != 0) {\n            fcn.0041915b(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004191dd();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 412
    },
    "00407010": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407010(int32_t *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    int32_t iStack132;\n    uchar *puStack128;\n    uchar *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    uint uStack96;\n    uint32_t uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint auStack52 [5];\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    auStack52[3] = 0x8024;\n    auStack52[4] = 0x8025;\n    uStack32 = 0x8027;\n    iStack28 = 0x8026;\n    uStack24 = 0x8029;\n    uStack20 = 0xff0000;\n    uStack16 = 0xff;\n    uStack12 = 0x8080;\n    uStack8 = 0x404080;\n    uStack4 = 0xff00ff;\n    uStack76 = 0x40706e;\n    piVar2 = fcn.0041eb77();\n    if (piVar2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        uStack76 = 0x407079;\n        iVar3 = (**(*piVar2 + 0x74))();\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    uStack88 = *(iVar3 + 0x180);\n    uStack76 = 0;\n    uStack80 = param_2;\n    uStack84 = 0x40a;\n    uStack92 = 0x40709a;\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iStack104 = *(iVar3 + 0x180);\n    uStack92 = iVar4 != 0;\n    uStack96 = uStack12;\n    iStack100 = 0x402;\n    iStack108 = 0x4070b6;\n    (*pcVar1)();\n    *(param_1[0x37] + 0x2c) = 0;\n    if ((iVar4 != 0) && (iStack28 == 0x8028)) {\n        iVar4 = 0;\n        do {\n            iStack112 = *(&stack0xffffffb8 + iVar4 * 4);\n            uStack120 = *(iVar3 + 0x180);\n            iStack108 = 0;\n            uStack116 = 0x402;\n            puStack124 = 0x4070e8;\n            (*pcVar1)();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 5);\n        param_1[0x27] = 0;\n        *(param_1[0x37] + 0x2c) = 1;\n        *(param_1[0x37] + 0x14) = 0;\n    }\n    else {\n        iVar4 = 0;\n        do {\n            iStack112 = *(&stack0xffffffb8 + iVar4);\n            uStack120 = *(iVar3 + 0x180);\n            iStack108 = 0;\n            uStack116 = 0x40a;\n            puStack124 = 0x407128;\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                *(param_1[0x37] + 0x14 + *(param_1[0x37] + 0x2c) * 4) = *(&stack0xffffffcc + iVar4);\n                iStack108 = 0;\n                iStack112 = 0x8028;\n                *(param_1[0x37] + 0x2c) = *(param_1[0x37] + 0x2c) + 1;\n                uStack120 = *(iVar3 + 0x180);\n                uStack116 = 0x402;\n                puStack124 = 0x40715f;\n                (*pcVar1)();\n            }\n            iVar4 = iVar4 + 4;\n        } while (iVar4 < 0x14);\n        if (*(param_1[0x37] + 0x2c) == 0) {\n            uStack120 = *(iVar3 + 0x180);\n            iStack108 = 1;\n            iStack112 = 0x8028;\n            uStack116 = 0x402;\n            puStack124 = 0x407189;\n            (*pcVar1)();\n            *(param_1[0x37] + 0x2c) = 1;\n            *(param_1[0x37] + 0x14) = 0;\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_SetRect;\n    iVar3 = *(param_1[0x14] + 0x58);\n    iVar4 = *(param_1[0x37] + 0x2c);\n    iStack108 = 0;\n    iStack112 = 0;\n    *(iVar3 + 0x30) = 0;\n    uStack116 = 0;\n    uStack120 = 0;\n    *(iVar3 + 0x2c) = (*(iVar3 + 0x10) - *(iVar3 + 0x14)) / iVar4;\n    puStack124 = &stack0xffffffa8;\n    *(param_1[0x37] + 0x30) = 0xffffffff;\n    puStack128 = 0x4071e7;\n    (*pcVar1)();\n    puStack128 = &stack0xffffff94;\n    iStack132 = 0x4071f7;\n    (**(*param_1[0x37] + 0x24))();\n    iVar3 = param_1[0x21];\n    iStack144 = param_1[0x22];\n    iStack132 = (iStack100 * iVar3) / iStack144;\n    iStack136 = (iStack104 * iVar3) / iStack144;\n    iStack140 = (iStack108 * iVar3) / iStack144;\n    iStack144 = (iVar3 * iStack112) / iStack144;\n    puStack148 = &stack0xffffff90;\n    iStack152 = 0x407236;\n    (*pcVar1)();\n    iStack152 = param_1[7];\n    uStack156 = 0x407240;\n    uStack156 = (*_sym.imp.USER32.dll_GetDC)();\n    uStack160 = 0x407246;\n    iVar3 = fcn.0042277c();\n    uStack160 = 0;\n    (**(*param_1 + 0x154))(iVar3);\n    (*_sym.imp.GDI32.dll_LPtoDP)(*(iVar3 + 8), &stack0xffffff6c, 2);\n    (*_sym.imp.USER32.dll_InvalidateRect)(param_1[7], &stack0xffffff60, 1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(param_1[7], *(iVar3 + 4));\n    return;\n}\n",
        "token_count": 1723
    },
    "0040ce0a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ce0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x441958, 0x14);\n    *(unaff_EBP + -0x20) = 0xffffffff;\n    fcn.0040d784(0xd);\n    *(unaff_EBP + -4) = 0;\n    *0x44f050 = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == -2) {\n        *0x44f050 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    else if (iVar1 == -3) {\n        *0x44f050 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    else if (iVar1 == -4) {\n        *0x44f050 = 1;\n        iVar1 = *0x44f348;\n    }\n    *(unaff_EBP + 8) = iVar1;\n    arg_8h_00 = *0x450690;\n    if (iVar1 == *0x4507a4) {\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = *0x450690;\n        if ((arg_8h_00 == NULL) || (*arg_8h_00 != 0)) {\n            arg_8h_00 = fcn.0040a67a(0x220);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n        }\n        if (arg_8h_00 != NULL) {\n            iVar1 = fcn.0040cc7a(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *arg_8h_00 = 0;\n                arg_8h_00[1] = *0x4507a4;\n                arg_8h_00[2] = *0x450694;\n                arg_8h_00[3] = *0x45068c;\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 5; iVar1 = iVar1 + 1) {\n                    *(arg_8h_00 + iVar1 * 2 + 0x10) = *(iVar1 * 2 + 0x4507b0);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 0x101; iVar1 = iVar1 + 1) {\n                    *(iVar1 + 0x1c + arg_8h_00) = *(iVar1 + 0x4506a0);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  *0x450690 = arg_8h_00,  iVar1 < 0x100; iVar1 = iVar1 + 1)\n                {\n                    *(iVar1 + 0x11d + arg_8h_00) = *(iVar1 + 0x4507c0);\n                }\n            }\n        }\n        if ((*(unaff_EBP + -0x20) == -1) && (arg_8h_00 != *0x450690)) {\n            fcn.0040a68c(arg_8h_00);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040cf51();\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 914
    },
    "00403fa0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fa0(int32_t param_1)\n\n{\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00424b03(2, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.0042458c();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 167
    },
    "00403fe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fe0(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00424603((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00404df0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00404df0(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((~*(param_2 + 0x18) & 1) != 0) {\n        uVar1 = *(param_1 + 8);\n        if (*(param_2 + 0x2c) < *(param_2 + 0x28) + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        iVar2 = *(param_2 + 0x28) + 4;\n        *(param_2 + 0x28) = iVar2;\n        uVar1 = *(param_1 + 0x10);\n        if ((~*(param_2 + 0x18) & 1) == 0) {\n            iVar2 = fcn.00424b03(2, *(param_2 + 0x14));\n        }\n        if (*(param_2 + 0x2c) < iVar2 + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        iVar2 = *(param_2 + 0x28) + 4;\n        *(param_2 + 0x28) = iVar2;\n        uVar1 = *(param_1 + 0x14);\n        if ((~*(param_2 + 0x18) & 1) == 0) {\n            iVar2 = fcn.00424b03(2, *(param_2 + 0x14));\n        }\n        if (*(param_2 + 0x2c) < iVar2 + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        iVar2 = *(param_2 + 0x28) + 4;\n        *(param_2 + 0x28) = iVar2;\n        uVar1 = *(param_1 + 0x18);\n        if ((~*(param_2 + 0x18) & 1) == 0) {\n            iVar2 = fcn.00424b03(2, *(param_2 + 0x14));\n        }\n        if (*(param_2 + 0x2c) < iVar2 + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        iVar2 = *(param_2 + 0x28) + 4;\n        *(param_2 + 0x28) = iVar2;\n        uVar1 = *(param_1 + 0x1c);\n        if ((~*(param_2 + 0x18) & 1) == 0) {\n            iVar2 = fcn.00424b03(2, *(param_2 + 0x14));\n        }\n        if (*(param_2 + 0x2c) < iVar2 + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        iVar2 = *(param_2 + 0x28) + 4;\n        *(param_2 + 0x28) = iVar2;\n        uVar1 = *(param_1 + 0xc);\n        if ((~*(param_2 + 0x18) & 1) == 0) {\n            iVar2 = fcn.00424b03(2, *(param_2 + 0x14));\n        }\n        if (*(param_2 + 0x2c) < iVar2 + 4U) {\n            fcn.0042458c();\n        }\n        **(param_2 + 0x28) = uVar1;\n        *(param_2 + 0x28) = *(param_2 + 0x28) + 4;\n        return;\n    }\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < *(param_2 + 0x28) + 4U) {\n        fcn.00424603((*(param_2 + 0x28) - *(param_2 + 0x2c)) + 4);\n    }\n    uVar1 = **(param_2 + 0x28);\n    *(param_2 + 0x28) = *(param_2 + 0x28) + 1;\n    *(param_1 + 8) = uVar1;\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < *(param_2 + 0x28) + 4U) {\n        fcn.00424603((*(param_2 + 0x28) - *(param_2 + 0x2c)) + 4);\n    }\n    *(param_1 + 0x10) = **(param_2 + 0x28);\n    iVar2 = *(param_2 + 0x28) + 4;\n    *(param_2 + 0x28) = iVar2;\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        iVar2 = fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < iVar2 + 4U) {\n        fcn.00424603((iVar2 - *(param_2 + 0x2c)) + 4);\n    }\n    *(param_1 + 0x14) = **(param_2 + 0x28);\n    iVar2 = *(param_2 + 0x28) + 4;\n    *(param_2 + 0x28) = iVar2;\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        iVar2 = fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < iVar2 + 4U) {\n        fcn.00424603((iVar2 - *(param_2 + 0x2c)) + 4);\n    }\n    *(param_1 + 0x18) = **(param_2 + 0x28);\n    iVar2 = *(param_2 + 0x28) + 4;\n    *(param_2 + 0x28) = iVar2;\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        iVar2 = fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < iVar2 + 4U) {\n        fcn.00424603((iVar2 - *(param_2 + 0x2c)) + 4);\n    }\n    *(param_1 + 0x1c) = **(param_2 + 0x28);\n    iVar2 = *(param_2 + 0x28) + 4;\n    *(param_2 + 0x28) = iVar2;\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        iVar2 = fcn.00424b03(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < iVar2 + 4U) {\n        fcn.00424603((iVar2 - *(param_2 + 0x2c)) + 4);\n    }\n    *(param_1 + 0xc) = **(param_2 + 0x28);\n    *(param_2 + 0x28) = *(param_2 + 0x28) + 4;\n    return;\n}\n",
        "token_count": 1848
    },
    "004050c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050c0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t in_stack_ffffffac;\n    int32_t iVar5;\n    \n    uVar2 = *(arg_8h + 0x18);\n    iVar3 = 0;\n    if ((~uVar2 & 1) != 0) {\n        uVar1 = in_ECX[5];\n        if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n            in_stack_ffffffac = 0x40512e;\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar3 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar3;\n        uVar1 = in_ECX[4];\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            in_stack_ffffffac = *(arg_8h + 0x14);\n            iVar3 = fcn.00424b03(2, in_stack_ffffffac);\n        }\n        if (*(arg_8h + 0x2c) < iVar3 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar3 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar3;\n        uVar1 = *in_ECX;\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            iVar3 = fcn.00424b03(2, *(arg_8h + 0x14));\n        }\n        if (*(arg_8h + 0x2c) < iVar3 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar3 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar3;\n        uVar1 = in_ECX[2];\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            iVar3 = fcn.00424b03(2, *(arg_8h + 0x14));\n        }\n        if (*(arg_8h + 0x2c) < iVar3 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar3 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar3;\n        uVar1 = in_ECX[1];\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            iVar3 = fcn.00424b03(2, *(arg_8h + 0x14));\n        }\n        if (*(arg_8h + 0x2c) < iVar3 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar3 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar3;\n        uVar1 = in_ECX[3];\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            iVar3 = fcn.00424b03(2, *(arg_8h + 0x14));\n        }\n        if (*(arg_8h + 0x2c) < iVar3 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = uVar1;\n        iVar4 = *(arg_8h + 0x28) + 4;\n        *(arg_8h + 0x28) = iVar4;\n        iVar3 = in_ECX[8];\n        iVar5 = iVar3;\n        if ((~*(arg_8h + 0x18) & 1) == 0) {\n            iVar4 = fcn.00424b03(2, *(arg_8h + 0x14));\n        }\n        if (*(arg_8h + 0x2c) < iVar4 + 4U) {\n            fcn.0042458c();\n        }\n        **(arg_8h + 0x28) = iVar3;\n        iVar3 = 0;\n        *(arg_8h + 0x28) = *(arg_8h + 0x28) + 4;\n        if (iVar5 < 1) {\n            return;\n        }\n        iVar4 = 0;\n        while ((-1 < iVar4 && (iVar3 < in_ECX[8]))) {\n            fcn.00404df0();\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar5 + 0x30;\n            iVar5 = iVar4;\n            if (unaff_ESI <= iVar3) {\n                return;\n            }\n        }\n        uVar2 = fcn.00417be7();\n    }\n    if ((uVar2 & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    in_ECX[5] = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    in_ECX[4] = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    *in_ECX = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    in_ECX[2] = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    in_ECX[1] = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    uVar1 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    in_ECX[3] = uVar1;\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(arg_8h + 0x14));\n    }\n    if (*(arg_8h + 0x2c) < *(arg_8h + 0x28) + 4U) {\n        fcn.00424603((*(arg_8h + 0x28) - *(arg_8h + 0x2c)) + 4);\n    }\n    iVar5 = **(arg_8h + 0x28);\n    *(arg_8h + 0x28) = *(arg_8h + 0x28) + 1;\n    if (0 < iVar5) {\n        do {\n            fcn.00404df0(arg_8h);\n            fcn.00403ef0();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < in_stack_ffffffac);\n    }\n    return;\n}\n",
        "token_count": 2525
    },
    "0040a02d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a02d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00424b03(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.0042458c();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "0040a069": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a069(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00424b03(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00424603((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00410a50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00410a50(uint *param_1, uint8_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    if ((param_1 & 3) != 0) {\n        if ((param_1 & 1) != 0) {\n            uVar3 = *param_1;\n            param_1 = param_1 + 1;\n            bVar4 = uVar3 < *param_2;\n            if (uVar3 != *param_2) goto code_r0x00410a94;\n            param_2 = param_2 + 1;\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((param_1 & 2) == 0) goto code_r0x00410a60;\n        }\n        uVar1 = *param_1;\n        param_1 = param_1 + 2;\n        uVar3 = uVar1;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) goto code_r0x00410a94;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) goto code_r0x00410a94;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        param_2 = param_2 + 2;\n    }\ncode_r0x00410a60:\n    while( true ) {\n        uVar2 = *param_1;\n        uVar3 = uVar2;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x10;\n        bVar4 = uVar3 < param_2[2];\n        if (uVar3 != param_2[2]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x18;\n        bVar4 = uVar3 < param_2[3];\n        if (uVar3 != param_2[3]) break;\n        param_2 = param_2 + 4;\n        param_1 = param_1 + 1;\n        if (uVar3 == 0) {\n            return 0;\n        }\n    }\ncode_r0x00410a94:\n    return bVar4 * -2 + 1;\n}\n",
        "token_count": 678
    },
    "0040bed0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bed0(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    \n    uVar3 = param_3;\n    if (param_3 != 0) {\n        if (((param_1 | param_2) & 3) == 0) {\n            uVar3 = param_3 & 3;\n            param_3 = param_3 >> 2;\n            bVar9 = param_3 == 0;\n            puVar7 = param_1;\n            puVar8 = param_2;\n            if (!bVar9) {\n                do {\n                    param_1 = puVar7;\n                    param_2 = puVar8;\n                    if (param_3 == 0) break;\n                    param_3 = param_3 - 1;\n                    param_2 = puVar8 + 1;\n                    param_1 = puVar7 + 1;\n                    bVar9 = *puVar7 == *puVar8;\n                    puVar7 = param_1;\n                    puVar8 = param_2;\n                } while (bVar9);\n                if (!bVar9) {\n                    uVar3 = param_1[-1];\n                    uVar1 = param_2[-1];\n                    bVar9 = uVar3 < uVar1;\n                    if (((uVar3 == uVar1) &&\n                        (uVar5 = uVar3 >> 8,  uVar6 = uVar1 >> 8,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) &&\n                       (uVar5 = uVar3 >> 0x10,  uVar6 = uVar1 >> 0x10,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) {\n                        bVar9 = uVar3 >> 0x18 < uVar1 >> 0x18;\n                    }\n                    goto code_r0x0040bf50;\n                }\n            }\n            if (uVar3 != 0) {\n                uVar1 = *param_1;\n                uVar2 = *param_2;\n                bVar9 = uVar1 < uVar2;\n                if (uVar1 != uVar2) {\ncode_r0x0040bf50:\n                    return (1 - bVar9) - (bVar9 != 0);\n                }\n                uVar4 = uVar3 - 1;\n                if (uVar4 != 0) {\n                    uVar5 = uVar2 >> 8;\n                    uVar6 = uVar1 >> 8;\n                    bVar9 = uVar6 < uVar5;\n                    if (uVar6 != uVar5) goto code_r0x0040bf50;\n                    uVar4 = uVar3 - 2;\n                    if (uVar4 != 0) {\n                        bVar9 = (uVar1 & 0xff0000) < (uVar2 & 0xff0000);\n                        if ((uVar1 & 0xff0000) != (uVar2 & 0xff0000)) goto code_r0x0040bf50;\n                        uVar4 = uVar3 - 3;\n                    }\n                }\n                return uVar4;\n            }\n        }\n        else {\n            if ((param_3 & 1) == 0) goto code_r0x0040bf03;\n            bVar9 = *param_1 < *param_2;\n            if (*param_1 != *param_2) goto code_r0x0040bf50;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n            for (param_3 = param_3 - 1; uVar3 = param_3,  param_3 != 0; param_3 = param_3 - 2) {\ncode_r0x0040bf03:\n                bVar9 = *param_1 < *param_2;\n                if ((*param_1 != *param_2) ||\n                   (bVar9 = *(param_1 + 1) < *(param_2 + 1),  *(param_1 + 1) != *(param_2 + 1))) goto code_r0x0040bf50;\n                param_2 = param_2 + 2;\n                param_1 = param_1 + 2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1048
    },
    "00410b46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410b46(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_ch;\n    uVar1 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar1 & 0x82) == 0) || ((uVar1 & 0x40) != 0)) {\ncode_r0x00410c52:\n        arg_ch[3] = uVar1 | 0x20;\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar1 & 0x10) == 0) goto code_r0x00410c52;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar1 & 0xfffffffe;\n        }\n        uVar1 = arg_ch[3];\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        piVar2[3] = uVar1 & 0xffffffef | 2;\n        if (((uVar1 & 0x10c) == 0) &&\n           (((piVar2 != 0x44c810 && (piVar2 != 0x44c830)) || (iVar3 = fcn.004148f4(arg_8h_00),  iVar3 == 0)))) {\n            fcn.004148b0(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            iVar3 = 1;\n            arg_ch = fcn.00414805(arg_8h_00, &arg_8h, 1);\n        }\n        else {\n            iVar4 = piVar2[2];\n            iVar3 = *piVar2;\n            *piVar2 = iVar4 + 1;\n            iVar3 = iVar3 - iVar4;\n            piVar2[1] = piVar2[6] + -1;\n            if (iVar3 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar4 = 0x44c4b0;\n                }\n                else {\n                    iVar4 = *((arg_8h_00 >> 5) * 4 + 0x450560) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar4 + 4) & 0x20) != 0) {\n                    fcn.0041458c(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.00414805(arg_8h_00, iVar4, iVar3);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == iVar3) {\n            return arg_8h & 0xff;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 726
    },
    "00413dba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00413dba(void)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t unaff_BX;\n    \n    uVar1 = 0;\n    if ((unaff_BX & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((unaff_BX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_BX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_BX & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((unaff_BX & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((unaff_BX & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar2 = unaff_BX & 0xc00;\n    if ((unaff_BX & 0xc00) != 0) {\n        if (uVar2 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar2 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar2 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((unaff_BX & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((unaff_BX & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((unaff_BX & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "0041458c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041458c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x443e90, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450544) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450560;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416394(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040d4d5();\n                *puVar3 = 9;\n                puVar3 = fcn.0040d4de();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00414518(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00414613();\n            goto code_r0x00414631;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\n    puVar3 = fcn.0040d4de();\n    *puVar3 = 0;\ncode_r0x00414631:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 520
    },
    "00414805": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414805(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x443ea0, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450544) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450560;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416394(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040d4d5();\n                *puVar3 = 9;\n                puVar3 = fcn.0040d4de();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00414637(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041488c();\n            goto code_r0x004148aa;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\n    puVar3 = fcn.0040d4de();\n    *puVar3 = 0;\ncode_r0x004148aa:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 520
    },
    "00416353": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00416353(uint32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 < *0x450544) &&\n       (puVar1 = *((param_1 >> 5) * 4 + 0x450560) + (param_1 & 0x1f) * 0x24,  (*(puVar1 + 1) & 1) != 0)) {\n        return *puVar1;\n    }\n    puVar1 = fcn.0040d4d5();\n    *puVar1 = 9;\n    puVar1 = fcn.0040d4de();\n    *puVar1 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 161
    },
    "004168b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004168b8(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x4445e8, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450544) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450560;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416394(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040d4d5();\n                *puVar3 = 9;\n                puVar3 = fcn.0040d4de();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004166dd(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041693f();\n            goto code_r0x0041695d;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\n    puVar3 = fcn.0040d4de();\n    *puVar3 = 0;\ncode_r0x0041695d:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 524
    },
    "004176a7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004176a7(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x444630, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450544) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450560;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416394(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040d4d5();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00417624(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041771e();\n            goto code_r0x0041773c;\n        }\n    }\n    puVar3 = fcn.0040d4d5();\n    *puVar3 = 9;\n    puVar3 = fcn.0040d4de();\n    *puVar3 = 0;\ncode_r0x0041773c:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 468
    },
    "0041af3e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041af3e(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0041d7d1(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[0xe] = param_1[0xe] | 0x18;\n    iVar6 = fcn.0041eb80();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0041affd:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.0041ee84();\n            if (iVar7 == 0) {\n                fcn.00438e08(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0041d89d(1);\n                (*pcVar3)(param_1[7]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xe] = param_1[0xe] & 0xffffffe7;\n                return param_1[0x10];\n            }\n            iVar7 = fcn.0041edf0(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0041d89d(1);\n        (*pcVar3)(param_1[7]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[7]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x0041afde;\n    goto code_r0x0041aff9;\ncode_r0x0041afde:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[7], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x0041aff9:\n        bVar2 = false;\n    }\n    goto code_r0x0041affd;\n}\n",
        "token_count": 794
    },
    "0041b0f3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.0041b0f3(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00432908();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0040b220(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00432908();\n        noname_11 = *0x44ed78;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.00419cd4(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x44ed78, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd70s\", 8, var_8h, var_4h, unaff_EBP);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.00419cd4(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.00419cd4(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0041b0b2(&var_34h, \"AfxMDIFrame70s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0041b0b2(&var_34h, \"AfxFrameOrView70s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0041a719(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0041a719(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0041a719(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0041a719(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0041a719(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0041a719(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0041a719(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0041a719(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0041a719(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0041a719(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0041a719(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0041a719(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0041a719(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0041a719(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2265
    },
    "0041d79e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041d79e(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x39) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00432908();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0042033e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042033e(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.00408c6b();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.00419b13(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.0040c5de(param_1, 4, *puVar1, fcn.00408c6b);\n        if ((param_2 & 1) != 0) {\n            fcn.00419b13(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "0042458c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042458c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "0042492b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.0042492b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00408d23();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.00417be7();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.00409120(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.004089b7();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.00419ae3(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[10] = iVar4;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 912
    },
    "00426ccd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00426ccd(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    if (param_2 == 0) {\n        arg_ch = *(param_1 + 0x14);\n        arg_8h = 6;\n    }\n    else {\n        if ((~*(param_1 + 0x18) & 1) != 0) goto code_r0x00426cf3;\n        arg_ch = *(param_1 + 0x14);\n        arg_8h = 1;\n    }\n    fcn.00424b03(arg_8h, arg_ch);\ncode_r0x00426cf3:\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00417bcd();\n    }\n    fcn.00426bc9(0);\n    puVar2 = fcn.004199c9(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.0040a02d(0xffff);\n        fcn.004248ac(param_1);\n        fcn.00426bb5();\n        puVar3 = fcn.004199c9(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.0040a02d(uVar1 | 0x8000);\n    }\n    else {\n        fcn.0040a02d(0x7fff);\n        fcn.00403fa0(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "00426f46": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426f46(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.00424b03(2, in_stack_fffffff8);\n    }\n    fcn.00426bc9(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.0040a02d(0);\n    }\n    else {\n        puVar2 = fcn.004199c9(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00426ccd(uVar3);\n            fcn.00426bb5();\n            puVar4 = fcn.004199c9(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.0040a02d(uVar1);\n        }\n        else {\n            fcn.0040a02d(0x7fff);\n            fcn.00403fa0(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0042727c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042727c(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x1f];\n    param_1[0x27] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x134))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 219
    },
    "004274eb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004274eb(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    (**(*in_ECX + 0x110))(0x417, arg_8h, &var_18h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.0040bed0(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        var_20h = fcn.0041d7d1();\n        fcn.0041d805(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x43d, 0, 0);\n        (*pcVar1)(in_ECX[7], 0xb, 0, 0);\n        (*pcVar1)(in_ECX[7], 0x43c, var_1ch + 1, 0);\n        (*pcVar1)(in_ECX[7], 0x43c, var_1ch, 0);\n        (*pcVar1)(in_ECX[7], 0xb, 1, 0);\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0041d805(0, var_20h & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x00427620;\n            puVar3 = &var_30h;\n        }\n        else {\n            puVar3 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[7], puVar3, 1);\n    }\ncode_r0x00427620:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 696
    },
    "00429e44": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429e44(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x1c), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x7d) & 4) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x44ed48, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x44ed48, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x7d) & 8) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x44ed4c, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x44ed4c, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "0042d571": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d571(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0041d7d1();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0041be5a();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0041d8be();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x39) = *(param_1 + 0x39) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x39) = *(param_1 + 0x39) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0042cf57(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00430032": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430032(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0041d7d1();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.0041c4a8(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.0042db7b(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 231
    },
    "0043170c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043170c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t var_8h_3;\n    int32_t var_ch_2;\n    uint var_30h;\n    uint lpRect;\n    uint dy;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t aiStack92 [2];\n    uchar *puStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    int32_t iStack40;\n    int32_t iStack32;\n    int32_t iStack24;\n    int32_t var_ch_3;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    if (var_8h_3 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack68 = -iStack40;\n        puStack72 = &stack0xffffffd8;\n        uStack76 = 0x431745;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        uStack76 = 1;\n        puStack80 = &stack0xffffffd8;\n        puStack84 = 0x431755;\n        (**(*in_ECX + 0x13c))();\n        puStack84 = &stack0xffffffe8;\n        aiStack92[1] = 0;\n        aiStack92[0] = 0x407;\n        var_8h_2 = &stack0xffffffa4;\n        (**(*in_ECX + 0x110))();\n        iVar5 = (iStack32 - iStack40) + var_ch_3;\n        var_8h_3 = 0;\n        iVar4 = in_ECX[0x1c];\n        if (0 < iVar4) {\n            piVar2 = in_ECX[0x1d] + 4;\n            iVar3 = iVar4;\n            do {\n                if ((*(piVar2 + 7) & 8) != 0) {\n                    var_8h_3 = var_8h_3 + 1;\n                }\n                iVar1 = *piVar2;\n                piVar2 = piVar2 + 5;\n                iVar5 = iVar5 + ((-6 - iVar1) - var_ch_3);\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040a9e0();\n        var_4h_2 = 0;\n        if (0 < iVar4) {\n            iVar4 = in_ECX[0x1d] + 8;\n            do {\n                iStack24 = iStack24 + 6 + *(iVar4 + -4);\n                if (((*(iVar4 + 3) & 8) != 0) && (0 < iVar5)) {\n                    iVar3 = iVar5 / var_8h_3;\n                    iStack24 = iStack24 + iVar3;\n                    var_8h_3 = var_8h_3 + -1;\n                    iVar5 = iVar5 - iVar3;\n                }\n                *(&stack0xffffffa4 + var_4h_2 * 4) = iStack24;\n                iStack24 = iStack24 + var_ch_3;\n                iVar4 = iVar4 + 0x14;\n                var_4h_2 = var_4h_2 + 1;\n            } while (var_4h_2 < in_ECX[0x1c]);\n        }\n        (**(*in_ECX + 0x110))(0x404, in_ECX[0x1c], &stack0xffffffa4);\n    }\n    iVar4 = 0;\n    if ((var_ch_2 != 0) && (0 < in_ECX[0x1c])) {\n        puVar6 = in_ECX[0x1d] + 0x10;\n        do {\n            if ((*(puVar6 + -1) & 1) != 0) {\n                iStack68 = 0x431830;\n                fcn.00428404(iVar4, *puVar6, 1, unaff_EDI, unaff_ESI, unaff_EBX);\n            }\n            puVar6 = puVar6 + 5;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_ECX[0x1c]);\n    }\n    return;\n}\n",
        "token_count": 1207
    },
    "00433378": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00433378(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar4 = param_1 + 0x1c;\n    iStack32 = 0x43338f;\n    iStack28 = iVar4;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar2 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar2 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar2);\n            if (iVar7 < iVar2) goto code_r0x0043345a;\n        }\n        iVar2 = iVar2 + 0x20;\n        iStack32 = *(param_1 + 0x10);\n        if (iStack32 == 0) {\n            iStack32 = iVar2 * 8;\n            uStack36 = 2;\n            iStack40 = 0x4333e0;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            uStack36 = 0x4333e9;\n            uStack48 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack40 = 0x4333f3;\n            uStack36 = uStack48;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack40 = 0x2002;\n            puStack44 = iVar2 * 8;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack40 == 0) {\n            iStack40 = *(param_1 + 0x10);\n            if (iStack40 != 0) {\n                puStack44 = 0x433419;\n                puStack44 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                uStack48 = 0x433420;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            puStack44 = 0x433429;\n            iStack40 = iVar4;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            uStack48 = 0x44d048;\n            puStack44 = &stack0xfffffffc;\n            fcn.0040be8b(&stack0xffffffd0, 0x4469ec);\n            pcVar3 = swi(3);\n            iVar4 = (*pcVar3)();\n            return iVar4;\n        }\n        puStack44 = 0x433435;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack32 = (iVar2 - *(param_1 + 4)) * 8;\n        iStack40 = iVar5 + *(param_1 + 4) * 8;\n        uStack36 = 0;\n        puStack44 = 0x43344e;\n        fcn.0040b220();\n        *(param_1 + 4) = iVar2;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x0043345a:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    uStack36 = 0x43347d;\n    iStack32 = iVar4;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 986
    },
    "00402d10": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d10(uint arg_8h)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    dVar1 = *(in_ECX + 0x48) + *(in_ECX + 0x40);\n    fcn.0040af14(dVar1);\n    fcn.0040ae64(dVar1);\n    iVar2 = fcn.0040afb0();\n    iVar3 = fcn.0040afb0();\n    (*_sym.imp.USER32.dll_SetRect)(arg_8h, iVar2 + -5, iVar3 + 5, iVar2 + 5, iVar3 + -5);\n    return;\n}\n",
        "token_count": 165
    },
    "00402dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402dd0(uint *arg_8h, ulong *arg_ch, double *arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) == '\\0') {\n        if (arg_14h != '\\0') {\n            *(in_ECX + 0x40) = *(in_ECX + 0x60) + *(in_ECX + 0x50) + *(in_ECX + 0x40);\n        }\n        uVar1 = *(in_ECX + 0x40);\n        fcn.0040af14(uVar1);\n        fcn.0040ae64(uVar1);\n        uVar2 = fcn.0040afb0();\n        uVar3 = fcn.0040afb0();\n        arg_8h[1] = uVar3;\n        *arg_8h = uVar2;\n        *arg_ch = *(in_ECX + 0x40);\n        *arg_10h = *(in_ECX + 0x60) + *(in_ECX + 0x50);\n    }\n    else {\n        uVar1 = *arg_ch;\n        fcn.0040af14(uVar1);\n        fcn.0040ae64(uVar1);\n        fcn.0040afb0();\n        fcn.0040afb0();\n        if (arg_14h != '\\0') {\n            uVar2 = fcn.0040afb0();\n            uVar3 = fcn.0040afb0();\n            *(in_ECX + 8) = uVar2;\n            *(in_ECX + 0xc) = uVar3;\n            *(in_ECX + 0x40) = *(in_ECX + 0x60) + *(in_ECX + 0x40) + *arg_10h;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "004042a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004042a0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint auStack48 [2];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    ulong uStack16;\n    ulong uStack8;\n    \n    uStack16 = *0x43b8f8;\n    uStack32 = 0;\n    uStack28 = 0;\n    uStack8 = *0x43b8f8;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack40 = param_2;\n    uStack36 = param_3;\n    auStack48[0] = 0x43bd68;\n    fcn.00403ef0(*(param_1 + 0x10), auStack48);\n    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n    return;\n}\n",
        "token_count": 232
    },
    "00404300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall\nfcn.00404300(int32_t *param_1, uint param_2, int32_t param_3, int32_t param_4, uint param_5, uint param_6, ulong param_7\n            , ulong param_8)\n\n{\n    int32_t iVar1;\n    uint auStack48 [2];\n    uint uStack40;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    ulong uStack16;\n    ulong uStack8;\n    \n    uStack16 = param_7;\n    uStack8 = param_8;\n    uStack40 = param_2;\n    uStack24 = param_5;\n    auStack48[0] = 0x43bd68;\n    iStack32 = param_3;\n    iStack28 = param_4;\n    uStack20 = param_6;\n    fcn.00403ef0(param_1[4], auStack48);\n    param_1[4] = param_1[4] + 1;\n    iVar1 = param_3 + -2;\n    if (*param_1 <= param_3 + -2) {\n        iVar1 = *param_1;\n    }\n    *param_1 = iVar1;\n    iVar1 = param_3 + 2;\n    if (param_3 + 2 <= param_1[2]) {\n        iVar1 = param_1[2];\n    }\n    param_1[2] = iVar1;\n    iVar1 = param_4 + 2;\n    if (param_4 + 2 <= param_1[1]) {\n        iVar1 = param_1[1];\n    }\n    param_1[1] = iVar1;\n    if (param_4 + -2 < param_1[3]) {\n        param_1[3] = param_4 + -2;\n        return;\n    }\n    param_1[3] = param_1[3];\n    return;\n}\n",
        "token_count": 440
    },
    "00406d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00406d10(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    int32_t *piVar6;\n    ulong uStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint uStack124;\n    uint uStack120;\n    ulong uStack116;\n    ulong uStack108;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack64;\n    \n    puStack64 = &stack0xfffffffc;\n    piVar6 = *(param_1 + 0xdc);\n    iVar1 = *(*(param_1 + 0x50) + 0x58);\n    *(param_1 + 0xd0) = piVar6[2];\n    *(param_1 + 0xd4) = piVar6[3];\n    uStack76 = 0x406d42;\n    fVar5 = (**(*piVar6 + 0x44))();\n    *(param_1 + 200) = fVar5;\n    uStack76 = 0x406d53;\n    (**(**(param_1 + 0xd8) + 0x44))();\n    uStack76 = 0x406d5e;\n    iVar3 = fcn.004069f0();\n    iVar2 = **(param_1 + 0xdc);\n    uStack76 = 0x406d73;\n    uStack76 = (**(**(param_1 + 0xd8) + 0x40))();\n    uStack80 = 10;\n    uStack84 = 0x406d7f;\n    (**(iVar2 + 0x34))();\n    uStack84 = 0;\n    uStack88 = 10;\n    puStack92 = 0x406d8e;\n    (**(**(param_1 + 0xd8) + 0x34))();\n    puStack92 = &stack0xffffffc0;\n    uStack96 = 0x406d9e;\n    (**(**(param_1 + 0xdc) + 0x20))();\n    uStack96 = *(param_1 + 0xa0);\n    uStack100 = 0;\n    uStack108 = CONCAT44(0x406dae, uStack108);\n    fcn.004042a0();\n    *(*(param_1 + 0xdc) + 0x30) = 0xffffffff;\n    piVar6 = *(param_1 + 0xdc);\n    *(param_1 + 0x9c) = piVar6[5];\n    uStack108 = CONCAT44(0x406dd7, uStack108);\n    fVar5 = (**(**(param_1 + 0xd8) + 0x44))();\n    uStack108 = fVar5;\n    uStack116 = CONCAT44(0x406de4, uStack116);\n    fVar5 = (**(*piVar6 + 0x44))();\n    uStack120 = *(*(param_1 + 0xdc) + 0xc);\n    uStack124 = *(*(param_1 + 0xdc) + 8);\n    uStack116 = fVar5;\n    uStack132 = uStack76;\n    iStack136 = 2;\n    uStack144 = CONCAT44(0x406e0b, uStack144);\n    fcn.00404300();\n    iVar3 = iVar3 / 10;\n    iVar2 = *(*(param_1 + 0xdc) + 0x2c);\n    iVar4 = 0;\n    *(iVar1 + 0x30) = 0;\n    *(iVar1 + 0x2c) = iVar3 / iVar2;\n    if (0 < iVar3) {\n        do {\n            uStack144 = CONCAT44(1, &stack0xffffff98);\n            (**(**(param_1 + 0xd8) + 0x38))();\n            (**(**(param_1 + 0xdc) + 0x38))(&stack0xffffff98, &stack0xffffff90, &stack0xffffff88, 1);\n            (**(**(param_1 + 0xdc) + 0x20))(&stack0xffffff70);\n            piVar6 = *(param_1 + 0xdc);\n            fVar5 = (**(**(param_1 + 0xd8) + 0x44))();\n            fVar5 = (**(*piVar6 + 0x44))(fVar5);\n            uStack120 = *(*(param_1 + 0xdc) + 0xc);\n            uStack124 = *(*(param_1 + 0xdc) + 8);\n            uStack116 = fVar5;\n            uStack132 = uStack76;\n            iStack136 = (iVar4 != 0) + 2;\n            uStack144 = CONCAT44(0x406edc, uStack144);\n            fcn.00404300();\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar3);\n    }\n    iVar1 = *(param_1 + 0xdc);\n    *(iVar1 + 8) = *(param_1 + 0xd0);\n    *(iVar1 + 0xc) = *(param_1 + 0xd4);\n    uStack144 = *(param_1 + 200);\n    (**(**(param_1 + 0xdc) + 0x48))();\n    (**(**(param_1 + 0xd8) + 0x48))(CONCAT44(uStack84, uStack88));\n    return;\n}\n",
        "token_count": 1286
    },
    "00418847": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418847(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_30h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_30h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_10h == 0) && (var_ch != -1)) && (var_ch != 0)) {\n        iVar2 = fcn.00419634(var_ch, &arg_ch);\n        if (iVar2 == 0) {\n            puVar1 = fcn.004196fb(var_ch);\n            *puVar1 = 0;\n        }\n        fcn.0041965b(var_ch, &var_ch);\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_30h);\n    return;\n}\n",
        "token_count": 286
    },
    "0041cbbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0041cbbf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00432908();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0041cb73();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0041b542();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 524
    },
    "00403050": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403050(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    double dVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint32_t unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    float10 fVar5;\n    code **ppcVar6;\n    uchar *puVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    ulong uVar12;\n    double dVar13;\n    uint64_t in_stack_ffffff20;\n    uint64_t uVar14;\n    double dVar15;\n    uint uStack184;\n    ulong uStack180;\n    uint uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    int32_t iStack136;\n    uint uStack128;\n    int32_t iStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    code *apcStack108 [5];\n    uchar auStack88 [8];\n    double dStack80;\n    double dStack72;\n    double dStack64;\n    double dStack56;\n    uint uStack48;\n    uchar uStack28;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x439089;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    uVar14 = in_stack_ffffff20 & 0xffffffff00000000 | unaff_EBX;\n    uVar12 = CONCAT44(unaff_ESI, unaff_EDI);\n    uVar11 = 0;\n    uVar10 = 0;\n    uVar9 = 0;\n    uVar8 = 0;\n    puVar7 = auStack88;\n    (*_sym.imp.USER32.dll_SetRect)();\n    ppcVar6 = apcStack108;\n    iVar4 = arg_ch;\n    (**(*in_ECX + 4))(ppcVar6, arg_ch, arg_10h, puVar7, uVar8, uVar9, uVar10, uVar11, uVar12, uVar14);\n    iVar2 = (**(*arg_8h + 0x58))(&uStack120);\n    if (iVar2 != 0) {\n        uStack48 = 0;\n        uVar8 = uStack120;\n        uVar9 = (*_sym.imp.GDI32.dll_CreateEllipticRgn)(iStack124, uStack120, uStack116, iStack112);\n        fcn.00422a71(uVar9);\n        (*_sym.imp.USER32.dll_SetRect)(&uStack184, 0, 0, 0, 0);\n        iVar2 = in_ECX[0x1a];\n        auStack88[0] = 1;\n        uVar9 = (*_sym.imp.GDI32.dll_CreateEllipticRgn)\n                          (((in_ECX[2] - iVar2) * arg_ch) / arg_10h, ((in_ECX[3] + iVar2) * arg_ch) / arg_10h, \n                           ((in_ECX[2] + iVar2) * arg_ch) / arg_10h, ((in_ECX[3] - iVar2) * arg_ch) / arg_10h);\n        fcn.00422a71(uVar9);\n        (*_sym.imp.GDI32.dll_CombineRgn)(iVar4, iVar4, puVar7, 4);\n        fcn.00422c37(in_ECX[1]);\n        uStack128 = CONCAT31(uStack128._1_3_, 2);\n        (*_sym.imp.GDI32.dll_FillRgn)(arg_8h[1], uVar8, ppcVar6);\n        uStack184 = *0x43b8f8 >> 0x20;\n        uStack180 = *0x43b8f8;\n        fcn.00422be7(0, 2, 0);\n        uStack28 = 3;\n        do {\n            iStack152 = in_ECX[2];\n            iStack148 = in_ECX[3];\n            dVar1 = *0x43ba40 * 0.0 + *0x43b8f0;\n            dVar13 = in_ECX[0x1a];\n            dVar15 = dVar1;\n            fVar5 = fcn.0040af14(dVar1);\n            dStack64 = fVar5 * dVar13;\n            fVar5 = fcn.0040ae64(dVar1);\n            dStack56 = fVar5 * dVar13;\n            uVar8 = fcn.0040afb0();\n            uStack120 = fcn.0040afb0();\n            uStack116 = uVar8;\n            pcVar3 = fcn.0040afb0();\n            iStack112 = fcn.0040afb0();\n            apcStack108[0] = pcVar3;\n            iVar4 = in_ECX[0xd];\n            iVar2 = in_ECX[0x1a];\n            fVar5 = fcn.0040af14(dVar15);\n            dStack80 = fVar5 * (iVar4 - iVar2);\n            fVar5 = fcn.0040ae64();\n            dStack72 = fVar5 * (iVar4 - iVar2);\n            uVar8 = fcn.0040afb0();\n            uStack160 = fcn.0040afb0();\n            uStack156 = uVar8;\n            iVar4 = fcn.0040afb0();\n            uStack128 = fcn.0040afb0();\n            iStack124 = iVar4;\n            iVar4 = iStack124;\n            fcn.0042263c(&uStack48, (iStack112 * arg_ch) / arg_10h, (apcStack108[0] * arg_ch) / arg_10h);\n            fcn.004222a2((iStack140 * arg_ch) / arg_10h, (iStack136 * arg_ch) / arg_10h);\n        } while (iVar4 + 1 < 0x3c);\n        uStack48._0_1_ = 2;\n        apcStack108[0] = vtable.CGdiObject.0;\n        fcn.00422ac8();\n        uStack48._0_1_ = 1;\n        fcn.00422ac8();\n        uStack48 = uStack48._1_3_ << 8;\n        fcn.00422ac8();\n        uStack48 = 0xffffffff;\n        fcn.00422ac8();\n    }\n    *in_FS_OFFSET = dStack56._0_4_;\n    return;\n}\n",
        "token_count": 1560
    },
    "00403b60": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __thiscall fcn.00403b60(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    iVar2 = param_2;\n    iVar7 = 0;\n    if (param_2 < 0) {\n        fcn.00417be7();\n    }\n    if (-1 < param_3) {\n        *(param_1 + 0x10) = param_3;\n    }\n    if (param_2 == 0) {\n        if (*(param_1 + 4) != 0) {\n            fcn.00419b13(*(param_1 + 4));\n            *(param_1 + 4) = 0;\n        }\n        *(param_1 + 0xc) = 0;\n        *(param_1 + 8) = 0;\n        return;\n    }\n    if (*(param_1 + 4) == 0) {\n        iVar7 = *(param_1 + 0x10);\n        if (*(param_1 + 0x10) < param_2) {\n            iVar7 = param_2;\n        }\n        param_2 = iVar7;\n        uVar3 = fcn.00419b0e(param_2 * 0x30);\n        *(param_1 + 4) = uVar3;\n        fcn.0040b220(uVar3, 0, param_2 * 0x30);\n        iVar7 = 0;\n        if (3 < iVar2) {\n            iVar5 = 0;\n            iVar6 = (iVar2 - 4U >> 2) + 1;\n            iVar7 = iVar6 * 4;\n            do {\n                uVar1 = *0x43b8f8;\n                puVar4 = *(param_1 + 4) + iVar5;\n                if (puVar4 != NULL) {\n                    *puVar4 = 0x43bd68;\n                    puVar4[4] = 0;\n                    puVar4[5] = 0;\n                    puVar4[6] = 0;\n                    puVar4[7] = 0;\n                    *(puVar4 + 8) = uVar1;\n                    uVar1 = *0x43b8f8;\n                    puVar4[2] = 0xffffffff;\n                    *(puVar4 + 10) = uVar1;\n                }\n                uVar1 = *0x43b8f8;\n                puVar4 = iVar5 + 0x30 + *(param_1 + 4);\n                if (puVar4 != NULL) {\n                    *puVar4 = 0x43bd68;\n                    puVar4[4] = 0;\n                    puVar4[5] = 0;\n                    puVar4[6] = 0;\n                    puVar4[7] = 0;\n                    *(puVar4 + 8) = uVar1;\n                    uVar1 = *0x43b8f8;\n                    puVar4[2] = 0xffffffff;\n                    *(puVar4 + 10) = uVar1;\n                }\n                uVar1 = *0x43b8f8;\n                puVar4 = iVar5 + 0x60 + *(param_1 + 4);\n                if (puVar4 != NULL) {\n                    *puVar4 = 0x43bd68;\n                    puVar4[4] = 0;\n                    puVar4[5] = 0;\n                    puVar4[6] = 0;\n                    puVar4[7] = 0;\n                    *(puVar4 + 8) = uVar1;\n                    uVar1 = *0x43b8f8;\n                    puVar4[2] = 0xffffffff;\n                    *(puVar4 + 10) = uVar1;\n                }\n                uVar1 = *0x43b8f8;\n                puVar4 = *(param_1 + 4) + iVar5 + 0x90;\n                if (puVar4 != NULL) {\n                    *puVar4 = 0x43bd68;\n                    puVar4[4] = 0;\n                    puVar4[5] = 0;\n                    puVar4[6] = 0;\n                    puVar4[7] = 0;\n                    *(puVar4 + 8) = uVar1;\n                    uVar1 = *0x43b8f8;\n                    puVar4[2] = 0xffffffff;\n                    *(puVar4 + 10) = uVar1;\n                }\n                iVar5 = iVar5 + 0xc0;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        if (iVar7 < iVar2) {\n            iVar5 = iVar7 * 0x30;\n            iVar7 = iVar2 - iVar7;\n            do {\n                uVar1 = *0x43b8f8;\n                puVar4 = *(param_1 + 4) + iVar5;\n                if (puVar4 != NULL) {\n                    *puVar4 = 0x43bd68;\n                    puVar4[4] = 0;\n                    puVar4[5] = 0;\n                    puVar4[6] = 0;\n                    puVar4[7] = 0;\n                    *(puVar4 + 8) = uVar1;\n                    uVar1 = *0x43b8f8;\n                    puVar4[2] = 0xffffffff;\n                    *(puVar4 + 10) = uVar1;\n                }\n                iVar5 = iVar5 + 0x30;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            *(param_1 + 8) = iVar2;\n            *(param_1 + 0xc) = param_2;\n            return;\n        }\n    }\n    else {\n        iVar5 = *(param_1 + 0xc);\n        if (param_2 <= iVar5) {\n            iVar5 = *(param_1 + 8);\n            if ((iVar5 < param_2) &&\n               (fcn.0040b220(iVar5 * 0x30 + *(param_1 + 4), 0, (param_2 - iVar5) * 0x30), \n               param_2 != *(param_1 + 8) && -1 < param_2 - *(param_1 + 8))) {\n                do {\n                    if ((*(param_1 + 8) + iVar7) * 0x30 + *(param_1 + 4) != 0) {\n                        fcn.00403ac0();\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < param_2 - *(param_1 + 8));\n                *(param_1 + 8) = param_2;\n                return;\n            }\n            goto code_r0x00403e7d;\n        }\n        iVar6 = *(param_1 + 0x10);\n        if (iVar6 == 0) {\n            iVar6 = *(param_1 + 8) + (*(param_1 + 8) >> 0x1f & 7U) >> 3;\n            if (iVar6 < 4) {\n                iVar6 = 4;\n            }\n            else if (0x400 < iVar6) {\n                iVar6 = 0x400;\n            }\n        }\n        if (param_2 < iVar6 + iVar5) {\n            param_2 = iVar6 + iVar5;\n        }\n        iVar6 = param_2;\n        if (param_2 < iVar5) {\n            iVar6 = fcn.00417be7();\n        }\n        iVar5 = fcn.00419b0e(iVar6 * 0x30);\n        fcn.0040b380(iVar5, *(param_1 + 4), *(param_1 + 8) * 0x30);\n        fcn.0040b220(*(param_1 + 8) * 0x30 + iVar5, 0, (iVar2 - *(param_1 + 8)) * 0x30);\n        if (iVar2 != *(param_1 + 8) && -1 < iVar2 - *(param_1 + 8)) {\n            do {\n                if ((*(param_1 + 8) + iVar7) * 0x30 + iVar5 != 0) {\n                    fcn.00403ac0();\n                }\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar2 - *(param_1 + 8));\n        }\n        fcn.00419b13(*(param_1 + 4));\n        *(param_1 + 4) = iVar5;\n    }\n    *(param_1 + 0xc) = param_2;\ncode_r0x00403e7d:\n    *(param_1 + 8) = iVar2;\n    return;\n}\n",
        "token_count": 2031
    },
    "00408230": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408230(int32_t param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_retaddr;\n    \n    if ((-1 < param_2) && (0 < param_4)) {\n        if (param_2 < *(param_1 + 8)) {\n            iVar4 = *(param_1 + 8);\n            fcn.00403b60(iVar4 + param_4, 0xffffffff);\n            iVar6 = param_2 * 0x30;\n            fcn.0040b6d0((param_1 + param_2) * 0x30 + *(param_1 + 4), iVar6 + *(param_1 + 4), (iVar4 - param_1) * 0x30);\n            fcn.0040b220(*(param_1 + 4) + iVar6, 0, param_2 * 0x30);\n            iVar4 = 0;\n            if (3 < param_2) {\n                iVar5 = (param_2 - 4U >> 2) + 1;\n                iVar4 = iVar5 * 4;\n                do {\n                    uVar2 = *0x43b8f8;\n                    puVar3 = *(param_1 + 4) + iVar6;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0x43bd68;\n                        puVar3[4] = 0;\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        puVar3[7] = 0;\n                        *(puVar3 + 8) = uVar2;\n                        uVar2 = *0x43b8f8;\n                        puVar3[2] = 0xffffffff;\n                        *(puVar3 + 10) = uVar2;\n                    }\n                    uVar2 = *0x43b8f8;\n                    puVar3 = *(param_1 + 4) + 0x30 + iVar6;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0x43bd68;\n                        puVar3[4] = 0;\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        puVar3[7] = 0;\n                        *(puVar3 + 8) = uVar2;\n                        uVar2 = *0x43b8f8;\n                        puVar3[2] = 0xffffffff;\n                        *(puVar3 + 10) = uVar2;\n                    }\n                    uVar2 = *0x43b8f8;\n                    puVar3 = *(param_1 + 4) + 0x60 + iVar6;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0x43bd68;\n                        puVar3[4] = 0;\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        puVar3[7] = 0;\n                        *(puVar3 + 8) = uVar2;\n                        uVar2 = *0x43b8f8;\n                        puVar3[2] = 0xffffffff;\n                        *(puVar3 + 10) = uVar2;\n                    }\n                    uVar2 = *0x43b8f8;\n                    puVar3 = *(param_1 + 4) + 0x90 + iVar6;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0x43bd68;\n                        puVar3[4] = 0;\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        puVar3[7] = 0;\n                        *(puVar3 + 8) = uVar2;\n                        uVar2 = *0x43b8f8;\n                        puVar3[2] = 0xffffffff;\n                        *(puVar3 + 10) = uVar2;\n                    }\n                    iVar6 = iVar6 + 0xc0;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar6 = param_1;\n            if (iVar4 < param_2) {\n                iVar5 = (iVar4 + param_1) * 0x30;\n                iVar4 = param_2 - iVar4;\n                do {\n                    uVar2 = *0x43b8f8;\n                    puVar3 = *(param_1 + 4) + iVar5;\n                    if (puVar3 != NULL) {\n                        *puVar3 = 0x43bd68;\n                        puVar3[4] = 0;\n                        puVar3[5] = 0;\n                        puVar3[6] = 0;\n                        puVar3[7] = 0;\n                        *(puVar3 + 8) = uVar2;\n                        uVar2 = *0x43b8f8;\n                        puVar3[2] = 0xffffffff;\n                        *(puVar3 + 10) = uVar2;\n                    }\n                    iVar5 = iVar5 + 0x30;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        }\n        else {\n            fcn.00403b60(param_4 + param_2, 0xffffffff);\n            iVar6 = param_2;\n        }\n        iVar6 = iVar6 * 0x30;\n        do {\n            iVar4 = *(param_1 + 4) + iVar6;\n            *(iVar4 + 8) = *(unaff_retaddr + 8);\n            *(iVar4 + 0xc) = *(unaff_retaddr + 0xc);\n            *(iVar4 + 0xc) = *(unaff_retaddr + 0xc);\n            *(iVar4 + 0x10) = *(unaff_retaddr + 0x10);\n            *(iVar4 + 0x14) = *(unaff_retaddr + 0x14);\n            *(iVar4 + 0x18) = *(unaff_retaddr + 0x18);\n            *(iVar4 + 0x1c) = *(unaff_retaddr + 0x1c);\n            *(iVar4 + 0x20) = *(unaff_retaddr + 0x20);\n            iVar6 = iVar6 + 0x30;\n            param_2 = param_2 + -1;\n            *(iVar4 + 0x28) = *(unaff_retaddr + 0x28);\n        } while (param_2 != 0);\n        return;\n    }\n    fcn.00417be7();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1540
    },
    "0040b220": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040b220(uint32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    uVar1 = param_2;\n    puVar4 = param_1;\n    if (3 < param_3) {\n        uVar2 = -param_1 & 3;\n        uVar3 = param_3;\n        if (uVar2 != 0) {\n            uVar3 = param_3 - uVar2;\n            do {\n                *puVar4 = param_2;\n                puVar4 = puVar4 + 1;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar1 = uVar1 * 0x1010101;\n        param_3 = uVar3 & 3;\n        uVar3 = uVar3 >> 2;\n        if (uVar3 != 0) {\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            if (param_3 == 0) {\n                return param_1;\n            }\n        }\n    }\n    do {\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return param_1;\n}\n",
        "token_count": 387
    },
    "0040b380": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040b380(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040b544;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40b668\n            switch(*((arg_10h & 3) * 4 + 0x40b668)) {\n            case 0x40b680:\ncode_r0x0040b680:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40b690:\ncode_r0x0040b690:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40b6a4:\ncode_r0x0040b6a4:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40b668\n            switch(*(arg_10h * 4 + 0x40b668)) {\n            case 0x40b680:\n                goto code_r0x0040b680;\n            case 0x40b690:\n                goto code_r0x0040b690;\n            case 0x40b6a4:\n                goto code_r0x0040b6a4;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40b56c)) {\n            case 0x40b57c:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040b544:\n    // WARNING: Could not recover jumptable at 0x0040b546. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40b618\n                    puVar1 = (**(uVar3 * -4 + 0x40b618))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b668)) {\n                case 0x40b680:\n                    goto code_r0x0040b680;\n                case 0x40b690:\n                    goto code_r0x0040b690;\n                case 0x40b6a4:\n                    goto code_r0x0040b6a4;\n                }\n                break;\n            case 0x40b5a0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040b544;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b668)) {\n                case 0x40b680:\n                    goto code_r0x0040b680;\n                case 0x40b690:\n                    goto code_r0x0040b690;\n                case 0x40b6a4:\n                    goto code_r0x0040b6a4;\n                }\n                break;\n            case 0x40b5c8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040b544;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b668)) {\n                case 0x40b680:\n                    goto code_r0x0040b680;\n                case 0x40b690:\n                    goto code_r0x0040b690;\n                case 0x40b6a4:\n                    goto code_r0x0040b6a4;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040b3dc;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40b4cc\n        switch(*((arg_10h & 3) * 4 + 0x40b4cc)) {\n        case 0x40b4e4:\ncode_r0x0040b4e4:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40b4f0:\ncode_r0x0040b4f0:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40b504:\ncode_r0x0040b504:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40b4dc)) {\n        case 0x40b4e4:\n            goto code_r0x0040b4e4;\n        case 0x40b4f0:\n            goto code_r0x0040b4f0;\n        case 0x40b504:\n            goto code_r0x0040b504;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40b3e0)) {\n        case 0x40b3f0:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040b3dc:\n    // WARNING: Could not recover jumptable at 0x0040b3dc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40b460\n                puVar1 = (**(uVar2 * 4 + 0x40b460))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b4cc)) {\n            case 0x40b4e4:\n                goto code_r0x0040b4e4;\n            case 0x40b4f0:\n                goto code_r0x0040b4f0;\n            case 0x40b504:\n                goto code_r0x0040b504;\n            }\n            break;\n        case 0x40b41c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040b3dc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b4cc)) {\n            case 0x40b4e4:\n                goto code_r0x0040b4e4;\n            case 0x40b4f0:\n                goto code_r0x0040b4f0;\n            case 0x40b504:\n                goto code_r0x0040b504;\n            }\n            break;\n        case 0x40b440:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040b3dc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b4cc)) {\n            case 0x40b4e4:\n                goto code_r0x0040b4e4;\n            case 0x40b4f0:\n                goto code_r0x0040b4f0;\n            case 0x40b504:\n                goto code_r0x0040b504;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2771
    },
    "0040b6d0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040b6d0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040b894;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40b9b8\n            switch(*((arg_10h & 3) * 4 + 0x40b9b8)) {\n            case 0x40b9d0:\ncode_r0x0040b9d0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40b9e0:\ncode_r0x0040b9e0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40b9f4:\ncode_r0x0040b9f4:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40b9b8\n            switch(*(arg_10h * 4 + 0x40b9b8)) {\n            case 0x40b9d0:\n                goto code_r0x0040b9d0;\n            case 0x40b9e0:\n                goto code_r0x0040b9e0;\n            case 0x40b9f4:\n                goto code_r0x0040b9f4;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40b8bc)) {\n            case 0x40b8cc:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040b894:\n    // WARNING: Could not recover jumptable at 0x0040b896. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40b968\n                    puVar1 = (**(uVar3 * -4 + 0x40b968))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b9b8)) {\n                case 0x40b9d0:\n                    goto code_r0x0040b9d0;\n                case 0x40b9e0:\n                    goto code_r0x0040b9e0;\n                case 0x40b9f4:\n                    goto code_r0x0040b9f4;\n                }\n                break;\n            case 0x40b8f0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040b894;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b9b8)) {\n                case 0x40b9d0:\n                    goto code_r0x0040b9d0;\n                case 0x40b9e0:\n                    goto code_r0x0040b9e0;\n                case 0x40b9f4:\n                    goto code_r0x0040b9f4;\n                }\n                break;\n            case 0x40b918:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040b894;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40b9b8)) {\n                case 0x40b9d0:\n                    goto code_r0x0040b9d0;\n                case 0x40b9e0:\n                    goto code_r0x0040b9e0;\n                case 0x40b9f4:\n                    goto code_r0x0040b9f4;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040b72c;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40b81c\n        switch(*((arg_10h & 3) * 4 + 0x40b81c)) {\n        case 0x40b834:\ncode_r0x0040b834:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40b840:\ncode_r0x0040b840:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40b854:\ncode_r0x0040b854:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40b82c)) {\n        case 0x40b834:\n            goto code_r0x0040b834;\n        case 0x40b840:\n            goto code_r0x0040b840;\n        case 0x40b854:\n            goto code_r0x0040b854;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40b730)) {\n        case 0x40b740:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040b72c:\n    // WARNING: Could not recover jumptable at 0x0040b72c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40b7b0\n                puVar1 = (**(uVar2 * 4 + 0x40b7b0))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b81c)) {\n            case 0x40b834:\n                goto code_r0x0040b834;\n            case 0x40b840:\n                goto code_r0x0040b840;\n            case 0x40b854:\n                goto code_r0x0040b854;\n            }\n            break;\n        case 0x40b76c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040b72c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b81c)) {\n            case 0x40b834:\n                goto code_r0x0040b834;\n            case 0x40b840:\n                goto code_r0x0040b840;\n            case 0x40b854:\n                goto code_r0x0040b854;\n            }\n            break;\n        case 0x40b790:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040b72c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b81c)) {\n            case 0x40b834:\n                goto code_r0x0040b834;\n            case 0x40b840:\n                goto code_r0x0040b840;\n            case 0x40b854:\n                goto code_r0x0040b854;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2785
    },
    "004040c0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404161)\n// WARNING: Removing unreachable block (ram,0x00404163)\n// WARNING: Removing unreachable block (ram,0x0040416b)\n// WARNING: Removing unreachable block (ram,0x00404174)\n// WARNING: Removing unreachable block (ram,0x00404220)\n// WARNING: Removing unreachable block (ram,0x004041b8)\n// WARNING: Removing unreachable block (ram,0x00404206)\n\nuint * __cdecl fcn.004040c0(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x43910b;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    (*_sym.imp.USER32.dll_SetRect)();\n    in_ECX[6] = 0x43bd6c;\n    in_ECX[7] = 0;\n    in_ECX[10] = 0;\n    in_ECX[9] = 0;\n    in_ECX[8] = 0;\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    in_ECX[0xb] = arg_8h[0xb];\n    in_ECX[0xc] = arg_8h[0xc];\n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    fcn.00403b60(arg_8h[8], 0xffffffff);\n    *in_FS_OFFSET = uStack48;\n    return in_ECX;\n}\n",
        "token_count": 436
    },
    "00408100": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408100(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack72;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack84 = 0x408114;\n    piVar2 = fcn.0041eb77();\n    if (piVar2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        uStack84 = 0x408121;\n        iVar3 = (**(*piVar2 + 0x74))();\n    }\n    uStack96 = *(iVar3 + 0x180);\n    uStack84 = 0;\n    uStack88 = 0x801f;\n    uStack92 = 0x40a;\n    puStack100 = 0x40813d;\n    iVar3 = (*_sym.imp.USER32.dll_SendMessageA)();\n    *(param_1 + 0xa0) = (iVar3 != 0) + 1;\n    iVar3 = *(*(param_1 + 0x50) + 0x58);\n    if (iVar3 != 0) {\n        iStack104 = 0;\n        puStack72 = 0x43bd68;\n        if (0 < *(iVar3 + 0x20)) {\n            iVar4 = 0;\n            do {\n                if ((iVar4 < 0) || (*(iVar3 + 0x20) <= iStack104)) {\n                    puStack100 = NULL;\n                    iStack104 = 0x44d178;\n                    fcn.0040be8b(&stack0xffffff98, 0x446a74);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (*(*(iVar3 + 0x1c) + 8 + iVar4) == 0) {\n                    puStack100 = &stack0xffffffb8;\n                    fcn.00403e90();\n                    return;\n                }\n                iStack104 = iStack104 + 1;\n                iVar4 = iVar4 + 0x30;\n            } while (iStack104 < *(iVar3 + 0x20));\n        }\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "0041eb80": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0041eb80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004328f8();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 45
    },
    "00408c11": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408c11(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.0040be00(param_2);\n    }\n    fcn.00408abf(param_2);\n    return;\n}\n",
        "token_count": 92
    },
    "0040a3ab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040a3ab(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = arg_1ch;\n    var_20h = arg_18h;\n    var_1ch = arg_14h;\n    var_18h = arg_10h;\n    var_14h = arg_ch + -1;\n    var_10h = arg_8h + -0x76c;\n    var_4h = arg_20h;\n    iVar1 = fcn.0040d2ba(&var_24h);\n    *in_ECX = iVar1;\n    in_ECX[1] = iVar1 >> 0x20;\n    if (iVar1 == -1) {\n        fcn.004010c0(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0040a8d8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a8d8(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.0040e35e(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.0040a7e0(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.0040a822(param_2, iVar5);\n                        fcn.0040a8b6(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.0040a822(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 520
    },
    "00414c8c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00414c8c(uint8_t **param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = param_1[3];\n    if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n        if ((puVar3 & 2) == 0) {\n            param_1[3] = puVar3 | 1;\n            if ((puVar3 & 0x10c) == 0) {\n                fcn.004148b0(param_1);\n            }\n            else {\n                *param_1 = param_1[2];\n            }\n            puVar3 = fcn.004168b8(param_1[4], param_1[2], param_1[6]);\n            param_1[1] = puVar3;\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((param_1[3] & 0x82) == 0) {\n                    puVar2 = param_1[4];\n                    if (puVar2 == 0xffffffff) {\n                        iVar4 = 0x44c4b0;\n                    }\n                    else {\n                        iVar4 = *((puVar2 >> 5) * 4 + 0x450560) + (puVar2 & 0x1f) * 0x24;\n                    }\n                    if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                        param_1[3] = param_1[3] | 0x2000;\n                    }\n                }\n                if (((param_1[6] == 0x200) && ((param_1[3] & 8) != 0)) && ((param_1[3] & 0x400) == 0)) {\n                    param_1[6] = 0x1000;\n                }\n                param_1[1] = puVar3 + -1;\n                uVar1 = **param_1;\n                *param_1 = *param_1 + 1;\n                return uVar1;\n            }\n            param_1[3] = param_1[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n            param_1[1] = NULL;\n        }\n        else {\n            param_1[3] = puVar3 | 0x20;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 581
    },
    "004198cb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004198cb(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                while (piVar3 = *ppiVar1,  piVar3 == NULL) {\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                    if (*(param_1 + 8) <= uVar4) {\n                        *param_2 = NULL;\n                        return;\n                    }\n                }\n            }\n        }\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "00420e91": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420e91(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00408bce();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.00421f63(uVar2);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "00420ed4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420ed4(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    \n    if (*(param_1 + 4) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        *(param_1 + 4) = 0xffffffff;\n    }\n    puVar1 = param_1 + 0xc;\n    uVar2 = *puVar1;\n    uVar5 = uVar2;\n    piVar3 = *(uVar2 - 0x10);\n    if (*(uVar2 - 0xc) != 0) {\n        if (*(uVar2 - 4) < 0) {\n            if (*(uVar2 - 8) < 0) {\n                uVar5 = fcn.004010c0(0x80070057);\n            }\n            *(uVar5 + -0xc) = uVar5 >> 0x20;\n            **puVar1 = uVar5 >> 0x20;\n        }\n        else {\n            fcn.004089b7();\n            iVar4 = (**(*piVar3 + 0xc))();\n            *puVar1 = iVar4 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "004210fa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15ch\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: lpFilePart\n// WARNING: Variable defined which should be unmapped: var_158h\n\nvoid __cdecl fcn.004210fa(uint lpRootPathName, uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_15ch;\n    uint var_158h;\n    uint lpFilePart;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    uVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = *0x44bf78;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x154);\n    if (uVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n    }\n    else if (uVar2 < 0x104) {\n        piVar3 = fcn.0041fa72();\n        iVar4 = (**(*piVar3 + 0xc))();\n        *(unaff_EBP + 8) = iVar4 + 0x10;\n        *(unaff_EBP + -4) = 0;\n        fcn.004210b8(uVar1, unaff_EBP + 8);\n        iVar4 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(*(unaff_EBP + 8));\n        if ((iVar4 == 0) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                              (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x15c, unaff_EBP + -0x158, 0, 0),  iVar4 != 0)) {\n            if ((*(unaff_EBP + -0x158) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if (((((*(unaff_EBP + -0x158) & 4) == 0) &&\n                 (iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x150),  iVar4 != -1)\n                 ) && ((*_sym.imp.KERNEL32.dll_FindClose)(iVar4),  *(unaff_EBP + -0x154) != 0)) &&\n               ((uVar1 <= *(unaff_EBP + -0x154) && *(unaff_EBP + -0x154) != uVar1 &&\n                (iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(unaff_EBP + -0x124), \n                (iVar4 - uVar1) + *(unaff_EBP + -0x154) < 0x104)))) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x154), unaff_EBP + -0x124);\n            }\n        }\n        fcn.004089b7();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 839
    },
    "0042123b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042123b(uint lpFileName, uint32_t dwDesiredAccess, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint uVar6;\n    uint lpSecurityAttributes;\n    uint var_110h;\n    uint32_t var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    uVar1 = dwDesiredAccess;\n    var_4h = *0x44bf78;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    uVar5 = dwDesiredAccess & 0xffff7fff;\n    fcn.00408bce();\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpFileName);\n    if ((0x103 < iVar3) || (iVar3 = fcn.004210fa(&var_108h, lpFileName),  iVar3 == 0)) goto code_r0x004213b5;\n    fcn.00408e8d(&var_108h);\n    uVar4 = dwDesiredAccess & 3;\n    dwDesiredAccess = 0;\n    if (uVar4 == 0) {\n        dwDesiredAccess = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        dwDesiredAccess = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        dwDesiredAccess = 0xc0000000;\n    }\n    uVar4 = uVar1 & 0x70;\n    uVar6 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x004212f2:\n        uVar6 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar6 = 2;\n        }\n        else {\n            uVar6 = 3;\n            if (uVar4 != 0x40) goto code_r0x004212f2;\n        }\n    }\n    var_10ch = ~(uVar5 >> 7) & 1;\n    lpSecurityAttributes = 0xc;\n    var_110h = 0;\n    if ((uVar1 & 0x1000) == 0) {\n        cVar2 = '\\x03';\n    }\n    else {\n        cVar2 = (-((uVar1 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar5 = 0x80;\n    if ((uVar1 & 0x10000) != 0) {\n        uVar5 = 0x20000080;\n    }\n    if ((uVar1 & 0x20000) != 0) {\n        uVar5 = uVar5 | 0x80000000;\n    }\n    if ((uVar1 & 0x40000) != 0) {\n        uVar5 = uVar5 | 0x10000000;\n    }\n    if ((uVar1 & 0x80000) != 0) {\n        uVar5 = uVar5 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)\n                      (lpFileName, dwDesiredAccess, uVar6, &lpSecurityAttributes, cVar2, uVar5, 0);\n    if (iVar3 == -1) {\n        if (arg_10h != 0) {\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0xc) = uVar6;\n            uVar6 = fcn.00421bf8(uVar6);\n            *(arg_10h + 8) = uVar6;\n            fcn.00408e8d(lpFileName);\n        }\n    }\n    else {\n        *(in_ECX + 4) = iVar3;\n        *(in_ECX + 8) = 1;\n    }\ncode_r0x004213b5:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 965
    },
    "004218ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004218ec(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0040b220(arg_8h, 0, 0x128);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x22, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == *0x44094c) {\ncode_r0x004219f3:\n        uVar3 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar2;\n            arg_8h[7] = 0;\n            if (uVar2 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                puVar4 = fcn.0040a463(&lpCreationTime, 0xffffffff);\n                *arg_8h = *puVar4;\n                arg_8h[1] = puVar4[1];\n                puVar4 = fcn.0040a463(&lpLastAccessTime, 0xffffffff);\n                arg_8h[4] = *puVar4;\n                arg_8h[5] = puVar4[1];\n                puVar4 = fcn.0040a463(&lpLastWriteTime, 0xffffffff);\n                arg_8h[2] = *puVar4;\n                arg_8h[3] = puVar4[1];\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x004219f3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 686
    },
    "0042571f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042571f(uint noname_0, uint nNumber)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.00424d93(&var_8h, &var_4h);\n    if ((var_4h == NULL) && (var_8h == NULL)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00424b4c();\n        iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(-nNumber, iVar1, 0x78);\n        if (var_4h == NULL) {\n            if (var_8h == NULL) {\n                return 0;\n            }\n            if (iVar1 == -1) {\n                iVar1 = in_ECX[0x1b];\n                if (0 < nNumber) {\n                    iVar1 = -in_ECX[0x1b];\n                }\n            }\n            else {\n                iVar1 = in_ECX[0x1d] * iVar2;\n                if (in_ECX[0x1b] <= in_ECX[0x1d] * iVar2) {\n                    iVar1 = in_ECX[0x1b];\n                }\n            }\n            iVar3 = 0;\n        }\n        else {\n            if (iVar1 == -1) {\n                iVar3 = in_ECX[0x1c];\n                if (0 < nNumber) {\n                    iVar3 = -in_ECX[0x1c];\n                }\n            }\n            else {\n                iVar3 = in_ECX[0x1e] * iVar2;\n                if (in_ECX[0x1c] <= in_ECX[0x1e] * iVar2) {\n                    iVar3 = in_ECX[0x1c];\n                }\n            }\n            iVar1 = 0;\n        }\n        iVar1 = (**(*in_ECX + 0x138))(iVar1, iVar3, 1);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(in_ECX[7]);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 527
    },
    "00425d43": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425d43(int32_t param_1)\n\n{\n    fcn.0041b3f7();\n    if (*(param_1 + 0x58) == -1) {\n        fcn.00425b86(*(param_1 + 0x5c), *(param_1 + 0x60));\n    }\n    else {\n        fcn.00425521();\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00425f4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00425f4f(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b3f7();\n    if (iVar1 != -1) {\n        if ((*param_2 != 0) && (*(*param_2 + 4) != 0)) {\n            fcn.00423560(param_1);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 114
    },
    "0042acd5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0042acd5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    piVar1 = fcn.0041fa72(extraout_ECX);\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    fcn.00408e21(*(unaff_EBP + 8));\n    iVar2 = *(unaff_EBP + 0x10);\n    if (iVar2 == -1) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    uVar3 = fcn.0042acb3(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), iVar2);\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 341
    },
    "0042d6b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042d6b0(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b3f7();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x158))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x144))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 155
    },
    "004305f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004305f9(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x44b3a4;\n    if (*0x44b3a4 == -1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.0040b220(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x44b3a4 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 264
    },
    "00430667": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00430667(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x44b3a8 == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x44b3a8);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x44b3a8;\n}\n",
        "token_count": 307
    },
    "00431c16": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431c16(uint arg_8h, int32_t Locale)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpLibFileName;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if (Locale == 0x800) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&Locale, 0x43ec78);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &Locale, 4);\n        if (iVar2 == 0) goto code_r0x00431c8b;\n    }\n    uVar1 = fcn.0040c09b(&lpLibFileName, 0x112, arg_8h, &Locale);\n    if ((uVar1 != 0xffffffff) && (uVar1 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x00431c8b:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 251
    },
    "004335bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004335bf(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x44d048;\n        fcn.0040be8b(&stack0xfffffff4, 0x4469ec);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x4335fd;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 259
    },
    "0043391e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043391e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00433786(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 229
    },
    "0040c1ea": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040c27c: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040c281)\n// WARNING: Removing unreachable block (ram,0x0040c2a7)\n// WARNING: Removing unreachable block (ram,0x0040c286)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c1ea(uint uExitCode, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040c534(0x4418d8, 8);\n    fcn.0040d784(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x44f04c == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(*(unaff_EBP + 8));\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    }\n    *0x44f048 = 1;\n    *0x44f044 = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        if (*0x4508c8 != NULL) {\n            while( true ) {\n                *0x4508c4 = *0x4508c4 + -1;\n                if (*0x4508c4 < *0x4508c8) break;\n                if (**0x4508c4 != NULL) {\n                    (***0x4508c4)();\n                }\n            }\n        }\n        fcn.0040c168(0x44b098);\n    }\n    fcn.0040c168(0x44b0a4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040d6cf(8);\n    }\n    return;\n}\n",
        "token_count": 462
    },
    "004138a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004138a8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + (param_2 / 0x20) * 4;\n    iVar1 = fcn.004154d5(*puVar3, 1 << (0x1fU - param_2 % 0x20 & 0x1f), puVar3);\n    iVar2 = param_2 / 0x20 + -1;\n    if (-1 < iVar2) {\n        puVar3 = param_1 + iVar2 * 4;\n        do {\n            if (iVar1 == 0) {\n                return;\n            }\n            iVar1 = fcn.004154d5(*puVar3, 1, puVar3);\n            iVar2 = iVar2 + -1;\n            puVar3 = puVar3 + -1;\n        } while (-1 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0041401a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041401a(ulong *arg_8h, ulong *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    char *var_20h;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    if (0xa1 < arg_14h) {\n        if (arg_14h < 0x3eb) {\n            if (arg_14h != 0x3ea) {\n                if (arg_14h == 0xa2) {\n                    var_24h = 4;\n                    goto code_r0x004141cc;\n                }\n                if (arg_14h == 0xa6) {\n                    var_24h = 3;\n                    var_20h = \"exp10\";\n                }\n                else {\n                    if (arg_14h != 0xaa) {\n                        if (arg_14h == 0xab) {\n                            var_20h = \"log2\";\n                            goto code_r0x00414265;\n                        }\n                        if (arg_14h == 1000) {\n                            var_20h = 0x442604;\n                        }\n                        else {\n                            if (arg_14h != 0x3e9) goto code_r0x0041429d;\n                            var_20h = \"log10\";\n                        }\n                        goto code_r0x0041425b;\n                    }\n                    var_24h = 2;\n                    var_20h = \"log2\";\n                }\n                goto code_r0x004141d3;\n            }\n            var_20h = 0x442610;\n        }\n        else if (arg_14h == 0x3eb) {\n            var_20h = 0x4425c8;\n        }\n        else if (arg_14h == 0x3ec) {\n            var_20h = \"ceil\";\n        }\n        else if (arg_14h == 0x3ed) {\n            var_20h = \"floor\";\n        }\n        else {\n            if (arg_14h == 0x3ee) {\ncode_r0x00414233:\n                var_20h = 0x442600;\n                goto code_r0x00414265;\n            }\n            if (arg_14h != 0x3ef) goto code_r0x0041429d;\n            var_20h = \"modf\";\n        }\ncode_r0x0041425b:\n        *arg_10h = *arg_8h;\n        goto code_r0x00414265;\n    }\n    if (arg_14h == 0xa1) {\n        var_24h = 3;\ncode_r0x004141cc:\n        var_20h = \"exp2\";\n        goto code_r0x004141d3;\n    }\n    if (arg_14h < 0x19) {\n        if (arg_14h == 0x18) {\n            var_24h = 3;\ncode_r0x004140c4:\n            var_20h = 0x442600;\n        }\n        else if (arg_14h == 2) {\n            var_24h = 2;\n            var_20h = 0x442604;\n        }\n        else {\n            if (arg_14h == 3) {\n                var_20h = 0x442604;\ncode_r0x00414265:\n                uStack32 = *arg_8h;\n                var_24h = 1;\n                uStack24 = *arg_ch;\n                uStack16 = *arg_10h;\n                iVar1 = (**0x44c7ec)(&var_24h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0040d4d5();\n                    *puVar2 = 0x21;\n                }\n                goto code_r0x00414298;\n            }\n            if (arg_14h == 8) {\n                var_24h = 2;\n                var_20h = \"log10\";\n            }\n            else {\n                if (arg_14h == 9) {\n                    var_20h = \"log10\";\n                    goto code_r0x00414265;\n                }\n                if (arg_14h != 0xe) {\n                    if (arg_14h != 0xf) goto code_r0x0041429d;\n                    var_20h = 0x442610;\n                    goto code_r0x00414111;\n                }\n                var_24h = 3;\n                var_20h = 0x442610;\n            }\n        }\ncode_r0x004141d3:\n        uStack32 = *arg_8h;\n        uStack24 = *arg_ch;\n        uStack16 = *arg_10h;\n        iVar1 = (**0x44c7ec)(&var_24h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040d4d5();\n            *puVar2 = 0x22;\n        }\n    }\n    else {\n        if (arg_14h != 0x19) {\n            if (arg_14h == 0x1a) {\n                *arg_10h = 0x3ff0000000000000;\n                goto code_r0x0041429d;\n            }\n            if (arg_14h != 0x1b) {\n                if (arg_14h == 0x1c) goto code_r0x00414233;\n                if (arg_14h != 0x1d) goto code_r0x0041429d;\n                var_20h = 0x442600;\n                goto code_r0x0041425b;\n            }\n            var_24h = 2;\n            goto code_r0x004140c4;\n        }\n        var_20h = 0x442600;\ncode_r0x00414111:\n        uStack32 = *arg_8h;\n        uStack24 = *arg_ch;\n        uStack16 = *arg_10h;\n        var_24h = 4;\n        (**0x44c7ec)(&var_24h);\n    }\ncode_r0x00414298:\n    *arg_10h = uStack16;\ncode_r0x0041429d:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1441
    },
    "0040aaa6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040aaa6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ed8f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "004155af": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004155af(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_10h;\n    var_4h = *0x44bf78;\n    iVar1 = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = arg_ch;\n        do {\n            var_10h = *puVar2;\n            var_ch = puVar2[1];\n            var_8h = puVar2[2];\n            fcn.00415554(puVar2);\n            fcn.00415554(puVar2);\n            fcn.004154f6(puVar2, &var_10h);\n            fcn.00415554(puVar2);\n            var_10h = *arg_8h;\n            var_ch = 0;\n            var_8h = 0;\n            fcn.004154f6(puVar2, &var_10h);\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != NULL);\n    }\n    if (puVar2[2] == 0) {\n        do {\n            iVar1 = iVar1 + -0x10;\n            uVar3 = puVar2[1] >> 0x10;\n            puVar2[1] = *puVar2 >> 0x10 | puVar2[1] << 0x10;\n            *puVar2 = *puVar2 << 0x10;\n        } while (uVar3 == 0);\n        puVar2[2] = uVar3;\n    }\n    while ((puVar2[2] & 0x8000) == 0) {\n        fcn.00415554(puVar2);\n        iVar1 = iVar1 + -1;\n    }\n    *(puVar2 + 10) = iVar1;\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 550
    },
    "004183e4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004183e4(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00433874(0x430550);\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.0041b4c1(arg_8h),  iVar4 == 0)) {\n            fcn.0041c12f(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x44ef98 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x44ef9c = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x44efa0 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x44efa4 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x44efa8 = (*pcVar1)(\"commdlg_help\");\n            *0x44efac = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.0041df03(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x44efa8) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (0xbfff < arg_ch) {\n                piVar5 = fcn.0041b4c1(arg_8h);\n                iVar3 = fcn.0041f1bd(0x441028);\n                if ((iVar3 == 0) || (iVar3 = fcn.00417eca(),  (*(iVar3 + 0x36) & 8) == 0)) {\n                    if (arg_ch == *0x44ef9c) {\n                        uVar2 = (**(*piVar5 + 0x158))(arg_14h);\n                        return uVar2;\n                    }\n                    if (arg_ch == *0x44efa0) {\n                        piVar5[0x70] = arg_14h;\n                        uVar2 = (**(*piVar5 + 0x15c))();\n                        piVar5[0x70] = 0;\n                        return uVar2;\n                    }\n                    if (arg_ch == *0x44ef98) {\n                        (**(*piVar5 + 0x160))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                    }\n                    else if (arg_ch == *0x44efa4) {\n                        uVar2 = (**(*piVar5 + 0x158))();\n                        return uVar2;\n                    }\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 775
    },
    "0041b3c2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0041b3c2(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00433874(0x430550);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 140
    },
    "0041c2cc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c2cc(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.00419e90();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0041c310:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00433874(0x430550);\n        if ((*(iVar2 + 0xdc) != in_ECX[7]) && (iVar2 = fcn.0041bf18(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0041c310;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 360
    },
    "0041d303": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d303(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0041db55(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0041d397;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0041db55(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0041d397:\n        uVar1 = fcn.0041ccf8(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0041ccf8(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 537
    },
    "00427668": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427668(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.0042721e(arg_8h, &var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.004274eb(arg_8h, &var_18h);\n        *(in_ECX + 0x9c) = 1;\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 209
    },
    "00427af3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427af3(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar2 = 0;\n    if (0x40046 < *0x44b3a4) {\n        uVar2 = fcn.0041d7d1();\n        iVar3 = fcn.0041d805(0, 0x8800, 0);\n    }\n    iVar1 = fcn.0041b3f7();\n    if (iVar1 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x1c), 0xfffffff0, uVar2);\n    }\n    return iVar1;\n}\n",
        "token_count": 241
    },
    "00431424": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00431424(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint8_t *puStack140;\n    uchar auStack136 [128];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    iStack148 = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < iStack148) {\n        iStack148 = 0x20;\n    }\n    fcn.0040b220(auStack136, 0xff, 0x80);\n    puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar6 * 2;\n    puStack140 = 0x43db2c;\n    iStack144 = 5;\n    do {\n        uVar1 = *puStack140;\n        uVar3 = puStack140 & 0xffff0000;\n        puStack140 = puStack140 + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        *puVar4 = uVar3 >> 8;\n        puVar4[1] = uVar3;\n        puVar4 = puVar4 + iVar6 * 2;\n        iStack144 = iStack144 + -1;\n    } while (iStack144 != 0);\n    *0x44ed88 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, iStack148, 1, 1, auStack136);\n    if (*0x44ed88 == 0) {\n        *0x44ed88 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 551
    },
    "0040cf78": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040cf78(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    \n    puVar5 = NULL;\n    iVar3 = fcn.0040ee57();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x450690) {\n        iVar3 = fcn.0040cc0b();\n    }\n    if (*(iVar3 + 8) != 0) {\n        do {\n            uVar4 = *arg_8h;\n            if ((*(uVar4 + 0x1d + iVar3) & 4) == 0) {\n                bVar7 = arg_ch == uVar4;\ncode_r0x0040cfd3:\n                puVar6 = arg_8h;\n                if (bVar7) {\n                    puVar5 = arg_8h;\n                }\n            }\n            else {\n                puVar6 = arg_8h + 1;\n                uVar1 = *puVar6;\n                if (uVar1 == 0) {\n                    bVar7 = puVar5 == NULL;\n                    arg_8h = puVar6;\n                    uVar4 = uVar1;\n                    goto code_r0x0040cfd3;\n                }\n                uVar2 = CONCAT11(uVar4, uVar1);\n                uVar4 = uVar1;\n                if (arg_ch == uVar2) {\n                    puVar5 = arg_8h;\n                }\n            }\n            arg_8h = puVar6 + 1;\n            if (uVar4 == 0) {\n                return puVar5;\n            }\n        } while( true );\n    }\n    iVar3 = -1;\n    do {\n        puVar5 = arg_8h;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        puVar5 = arg_8h + 1;\n        uVar4 = *arg_8h;\n        arg_8h = puVar5;\n    } while (uVar4 != 0);\n    iVar3 = -(iVar3 + 1);\n    puVar5 = puVar5 + -1;\n    do {\n        puVar6 = puVar5;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        puVar6 = puVar5 + -1;\n        uVar4 = *puVar5;\n        puVar5 = puVar6;\n    } while (arg_ch != uVar4);\n    puVar6 = puVar6 + 1;\n    if (*puVar6 != arg_ch) {\n        puVar6 = NULL;\n    }\n    return puVar6;\n}\n",
        "token_count": 647
    },
    "00413a16": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413a16(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[5];\n    var_ch = *(arg_8h + 3);\n    var_8h = *(arg_8h + 1);\n    var_4h = *arg_8h << 0x10;\n    uVar5 = uVar1 & 0x7fff;\n    iVar6 = uVar5 - 0x3fff;\n    if (iVar6 == -0x3fff) {\n        iVar6 = 0;\n        uVar5 = fcn.00413982();\n        uVar2 = uVar5;\n        if (uVar5 != 0) {\ncode_r0x00413b2e:\n            uVar3 = 0;\n            goto code_r0x00413b30;\n        }\n    }\n    else {\n        fcn.00413967(&var_18h, &var_ch);\n        iVar4 = fcn.004138f5(&var_ch, arg_10h[2]);\n        if (iVar4 != 0) {\n            iVar6 = uVar5 - 0x3ffe;\n        }\n        iVar4 = arg_10h[1];\n        if (iVar6 < iVar4 - arg_10h[2]) {\n            var_ch = 0;\n            var_8h = 0;\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n        else {\n            if (iVar4 < iVar6) {\n                if (*arg_10h <= iVar6) {\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_ch = 0x80000000;\n                    fcn.0041399b(&var_ch, arg_10h[3]);\n                    iVar6 = arg_10h[5] + *arg_10h;\n                    uVar3 = 1;\n                    goto code_r0x00413b30;\n                }\n                var_ch = var_ch & 0x7fffffff;\n                iVar6 = arg_10h[5] + iVar6;\n                fcn.0041399b(&var_ch, arg_10h[3]);\n                goto code_r0x00413b2e;\n            }\n            fcn.00413967(&var_ch, &var_18h);\n            fcn.0041399b(&var_ch, iVar4 - iVar6);\n            fcn.004138f5(&var_ch, arg_10h[2]);\n            fcn.0041399b(&var_ch, arg_10h[3] + 1);\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n    }\n    var_8h = uVar2;\n    var_ch = uVar5;\n    iVar6 = 0;\n    uVar3 = 2;\ncode_r0x00413b30:\n    var_ch = iVar6 << (0x1fU - arg_10h[3] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_ch;\n    if (arg_10h[4] == 0x40) {\n        arg_ch[1] = var_ch;\n        *arg_ch = var_8h;\n    }\n    else if (arg_10h[4] == 0x20) {\n        *arg_ch = var_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 861
    },
    "0041895c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041895c(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x1c), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if ((0x1ff < var_20h) && (var_20h < 0x20a)) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x1c), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 371
    },
    "004272c0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004272c0(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.0042721e(arg_8h, &var_18h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 85
    },
    "004273c2": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004273c2(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.0042721e(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_10h._1_1_;\n    *arg_14h = var_18h;\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 171
    },
    "0042e8b8": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042e8b8(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 422
    },
    "00430a74": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430a74(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xa8) = arg_8h;\n        *(in_ECX + 0xac) = arg_ch;\n        *(in_ECX + 0xa0) = arg_10h;\n        *(in_ECX + 0xa4) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x1c), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "0040dc62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc62(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 << 1) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 764
    },
    "00413c8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413c8b(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6);\n    var_4h = 0x80000000;\n    uVar3 = uVar1 >> 4;\n    uVar4 = uVar3 & 0x7ff;\n    uVar2 = *arg_ch;\n    if ((uVar3 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar2 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = 0;\n            return;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    arg_8h[1] = uVar2 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    *arg_8h = uVar2 << 0xb;\n    while (var_4h == 0) {\n        uVar2 = arg_8h[1];\n        uVar4 = uVar4 - 1;\n        arg_8h[1] = uVar2 << 1 | *arg_8h >> 0x1f;\n        *arg_8h = *arg_8h * 2;\n        var_4h = uVar2 << 1 & 0x80000000;\n    }\n    *(arg_8h + 2) = uVar1 & 0x8000 | uVar4;\n    return;\n}\n",
        "token_count": 481
    },
    "00415554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00415554(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *param_1 = uVar1 * 2;\n    param_1[1] = uVar2 * 2 | uVar1 >> 0x1f;\n    param_1[2] = param_1[2] << 1 | uVar2 >> 0x1f;\n    return;\n}\n",
        "token_count": 125
    },
    "00415d4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00415d4f(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t dwExceptionCode, int32_t arg_14h, ulong *arg_18h, \n            ulong *arg_1ch)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = dwExceptionCode;\n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((dwExceptionCode & 0x10) != 0) {\n        arg_8h[1] = arg_8h[1] | 1;\n        dwExceptionCode = 0xc000008f;\n    }\n    if ((uVar4 & 2) != 0) {\n        arg_8h[1] = arg_8h[1] | 2;\n        dwExceptionCode = 0xc0000093;\n    }\n    if ((uVar4 & 1) != 0) {\n        arg_8h[1] = arg_8h[1] | 4;\n        dwExceptionCode = 0xc0000091;\n    }\n    if ((uVar4 & 4) != 0) {\n        arg_8h[1] = arg_8h[1] | 8;\n        dwExceptionCode = 0xc000008e;\n    }\n    if ((uVar4 & 8) != 0) {\n        arg_8h[1] = arg_8h[1] | 0x10;\n        dwExceptionCode = 0xc0000090;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 1) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00416243();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar4 = *puVar1 & 0xc00;\n    if (uVar4 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar4 == 0x400) {\n            uVar4 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar4 != 0x800) {\n                if (uVar4 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x00415eac;\n            }\n            uVar4 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar4;\n    }\ncode_r0x00415eac:\n    uVar4 = *puVar1 & 0x300;\n    if (uVar4 == 0) {\n        uVar4 = *arg_8h & 0xffffffeb | 8;\ncode_r0x00415ee2:\n        *arg_8h = uVar4;\n    }\n    else {\n        if (uVar4 == 0x200) {\n            uVar4 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x00415ee2;\n        }\n        if (uVar4 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n    *(arg_8h + 4) = *arg_18h;\n    arg_8h[0x18] = arg_8h[0x18] | 1;\n    arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n    *(arg_8h + 0x14) = *arg_1ch;\n    fcn.0041624e();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(dwExceptionCode, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar4 = *arg_8h & 3;\n    if (uVar4 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar4 == 1) {\n            uVar4 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar4 != 2) {\n                if (uVar4 == 3) {\n                    *(puVar1 + 1) = *(puVar1 + 1) | 0xc;\n                }\n                goto code_r0x00415fbb;\n            }\n            uVar4 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar4;\n    }\ncode_r0x00415fbb:\n    uVar4 = *arg_8h >> 2 & 7;\n    if (uVar4 == 0) {\n        uVar4 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar4 != 1) {\n            if (uVar4 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x00415fea;\n        }\n        uVar4 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar4;\ncode_r0x00415fea:\n    *puVar2 = *(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 1903
    },
    "00416d7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00416d7e(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    float10 fVar4;\n    \n    if (CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) == *0x43b8f8) {\n        fVar4 = 0;\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        if (*0x43b8f8 <= CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)))) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        while ((arg_ch._2_1_ & 0x10) == 0) {\n            iVar3 = CONCAT13(arg_ch._3_1_, CONCAT12(arg_ch._2_1_, arg_ch)) << 1;\n            arg_ch._0_2_ = iVar3;\n            arg_ch._2_1_ = iVar3 >> 0x10;\n            arg_ch._3_1_ = iVar3 >> 0x18;\n            if ((arg_8h & 0x80000000) != 0) {\n                arg_ch._0_2_ = arg_ch | 1;\n            }\n            arg_8h = arg_8h << 1;\n        }\n        if (bVar2) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        uVar1 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) & 0xffefffffffffffff;\n        fVar4 = fcn.00416d54(uVar1, uVar1 >> 0x20, 0);\n        iVar3 = extraout_EDX;\n    }\n    else {\n        fVar4 = fcn.00416d54(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0\n                            );\n        iVar3 = ((arg_ch >> 0x10 & 0x7ff0) >> 4) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return fVar4;\n}\n",
        "token_count": 609
    },
    "0040d2c7": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0040d2c7(uint32_t *arg_8h)\n\n{\n    uint32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    int64_t iVar5;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h[1];\n    if (((uVar3 < 0) || (0x1000 < uVar3)) || ((0xfff < uVar3 && (*arg_8h != 0)))) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        fcn.00413449();\n        uVar3 = arg_8h[1];\n        uVar2 = *arg_8h;\n        if ((uVar3 < 0) || ((uVar3 < 1 && (uVar2 < 0x3f481)))) {\n            arg_8h_00 = fcn.00412c3d(arg_8h);\n            if ((*0x44c694 == 0) || (iVar1 = fcn.00413495(arg_8h_00),  iVar1 == 0)) {\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - *0x44c690;\n                var_4h = ((uVar3 >> 0x1f) - (*0x44c690 >> 0x1f)) - (uVar3 < *0x44c690);\n            }\n            else {\n                uVar2 = *0x44c690 + *0x44c698;\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - uVar2;\n                var_4h = ((uVar3 >> 0x1f) - (uVar2 >> 0x1f)) - (uVar3 < uVar2);\n                arg_8h_00[8] = 1;\n            }\n            uVar3 = fcn.004134e0(var_8h, var_4h, 0x3c, 0);\n            *arg_8h_00 = uVar3;\n            if (uVar3 < 0) {\n                *arg_8h_00 = uVar3 + 0x3c;\n                bVar4 = 0x3b < var_8h;\n                var_8h = var_8h - 0x3c;\n                var_4h = var_4h + -1 + bVar4;\n            }\n            _var_8h = fcn.0040d560(var_8h, var_4h, 0x3c, 0);\n            _var_8h = _var_8h + arg_8h_00[1];\n            uVar3 = fcn.004134e0(_var_8h, 0x3c, 0);\n            arg_8h_00[1] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[1] = uVar3 + 0x3c;\n                _var_8h = _var_8h + -0x3c;\n            }\n            iVar5 = fcn.0040d560(_var_8h, 0x3c, 0);\n            _var_8h = iVar5 + arg_8h_00[2];\n            uVar3 = fcn.004134e0(_var_8h, 0x18, 0);\n            arg_8h_00[2] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[2] = uVar3 + 0x18;\n                _var_8h = _var_8h + -0x18;\n            }\n            iVar5 = fcn.0040d560(_var_8h, 0x18, 0);\n            iVar1 = iVar5;\n            if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\n                arg_8h_00[6] = (arg_8h_00[6] + 7 + iVar1) % 7;\n                arg_8h_00[3] = arg_8h_00[3] + iVar1;\n                if (arg_8h_00[3] < 1) {\n                    arg_8h_00[5] = arg_8h_00[5] - 1;\n                    arg_8h_00[3] = arg_8h_00[3] + 0x1f;\n                    arg_8h_00[7] = 0x16c;\n                    arg_8h_00[4] = 0xb;\n                }\n                else {\n                    arg_8h_00[7] = arg_8h_00[7] + iVar1;\n                }\n            }\n        }\n        else {\n            var_8h = uVar2 - *0x44c690;\n            var_4h = (uVar3 - (*0x44c690 >> 0x1f)) - (uVar2 < *0x44c690);\n            arg_8h_00 = fcn.00412c3d(&var_8h);\n            if ((*0x44c694 != 0) && (iVar1 = fcn.00413495(arg_8h_00),  iVar1 != 0)) {\n                bVar4 = var_8h < *0x44c698;\n                var_8h = var_8h - *0x44c698;\n                var_4h = (var_4h - (*0x44c698 >> 0x1f)) - bVar4;\n                arg_8h_00 = fcn.00412c3d(&var_8h);\n                arg_8h_00[8] = 1;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 1355
    },
    "0042d334": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d334(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00430bee": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430bee(uint lpName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint hResData;\n    uint var_4h;\n    \n    iVar2 = fcn.00432908();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, lpName, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar3 != 0)) {\n        arg_8h = fcn.00419ae3(*(iVar3 + 6) << 2);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.004307e7(arg_8h, *(iVar3 + 6));\n        fcn.00419b13(arg_8h);\n        if (iVar4 != 0) {\n            fcn.00430a74(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.00430afb(lpName);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 445
    },
    "00410904": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h_2\n\nvoid __cdecl fcn.00410904(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint var_8h;\n    uint var_ch;\n    uint var_128h_2;\n    uint var_124h_2;\n    uint var_128h;\n    uint lpFilename;\n    uint var_18h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack4;\n    \n    uStack4 = 0x118;\n    var_18h = 0x442258;\n    fcn.0040c534();\n    *(unaff_EBP + -0x1c) = *0x44bf78;\n    pcVar1 = *0x44f31c;\n    if (*0x44f31c == NULL) {\n        if (*(unaff_EBP + 8) == 1) {\n            pcVar4 = \"Buffer overrun detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A buffer overrun has been detected which has corrupted the program\\'s\\ninternal state.  The program cannot safely continue execution and must\\nnow be terminated.\\n\"\n            ;\n        }\n        else {\n            pcVar4 = \"Unknown security failure detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A security error of unknown cause has been detected which has\\ncorrupted the program\\'s internal state.  The program cannot safely\\ncontinue execution and must now be terminated.\\n\"\n            ;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, unaff_EBP + -0x124, 0x104);\n        if (iVar2 == 0) {\n            fcn.00412280(unaff_EBP + -0x124, \"<program name unknown>\");\n        }\n        iVar2 = unaff_EBP + -0x124;\n        iVar3 = fcn.0040be00(iVar2);\n        if (0x3c < iVar3 + 0xbU) {\n            iVar2 = fcn.0040be00(iVar2);\n            iVar2 = iVar2 + unaff_EBP + -0x155;\n            fcn.004143b0(iVar2, 0x442078, 3);\n        }\n        fcn.0040be00(iVar2);\n        fcn.0040a9e0();\n        *(unaff_EBP + -0x18) = &var_18h;\n        fcn.00412280(&var_18h, pcVar4);\n        fcn.00412290(&var_18h, 0x442058);\n        fcn.00412290(&var_18h, \"Program: \");\n        fcn.00412290(&var_18h, iVar2);\n        fcn.00412290(&var_18h, 0x442058);\n        fcn.00412290(&var_18h, *(unaff_EBP + -0x128));\n        fcn.004142a8(&var_18h, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040c2be(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 900
    },
    "00414637": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00414637(uint32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iStack1060;\n    int32_t iStack1056;\n    int32_t iStack1052;\n    char *pcStack1048;\n    int32_t iStack1044;\n    int32_t iStack1040;\n    char acStack1036 [1028];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    iStack1052 = 0;\n    iStack1056 = 0;\n    if (param_3 == 0) goto code_r0x004147f1;\n    piVar1 = (param_1 >> 5) * 4 + 0x450560;\n    iVar8 = (param_1 & 0x1f) * 0x24;\n    if ((*(*piVar1 + 4 + iVar8) & 0x20) != 0) {\n        fcn.00416456(param_1, 0, 0, 2);\n    }\n    if ((*(*piVar1 + iVar8 + 1) & 0x80) == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(*piVar1 + iVar8), param_2, param_3, &iStack1060, 0);\n        if (iVar5 == 0) {\n            iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iStack1040 = 0;\n            iStack1052 = iStack1060;\n        }\ncode_r0x00414753:\n        if (iStack1052 != 0) goto code_r0x004147f1;\n        if (iStack1040 != 0) {\n            if (iStack1040 == 5) {\n                puVar6 = fcn.0040d4d5();\n                *puVar6 = 9;\n                puVar6 = fcn.0040d4de();\n                *puVar6 = 5;\n            }\n            else {\n                fcn.0040d4e7(iStack1040);\n            }\n            goto code_r0x004147f1;\n        }\n    }\n    else {\n        pcStack1048 = param_2;\n        iStack1040 = 0;\n        if (param_3 != 0) {\n            do {\n                uVar7 = pcStack1048 - param_2;\n                pcVar4 = acStack1036;\n                iStack1044 = 0;\n                do {\n                    if (param_3 <= uVar7) break;\n                    pcVar3 = pcStack1048 + 1;\n                    cVar2 = *pcStack1048;\n                    uVar7 = uVar7 + 1;\n                    if (cVar2 == '\\n') {\n                        iStack1056 = iStack1056 + 1;\n                        *pcVar4 = '\\r';\n                        pcVar4 = pcVar4 + 1;\n                        iStack1044 = iStack1044 + 1;\n                    }\n                    *pcVar4 = cVar2;\n                    pcVar4 = pcVar4 + 1;\n                    iStack1044 = iStack1044 + 1;\n                    pcStack1048 = pcVar3;\n                } while (iStack1044 < 0x400);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (*(*piVar1 + iVar8), acStack1036, pcVar4 - acStack1036, &iStack1060, 0);\n                if (iVar5 == 0) {\n                    iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    goto code_r0x00414753;\n                }\n                iStack1052 = iStack1052 + iStack1060;\n                if ((iStack1060 < pcVar4 - acStack1036) || (param_3 <= pcStack1048 - param_2)) goto code_r0x00414753;\n            } while( true );\n        }\n    }\n    if (((*(*piVar1 + 4 + iVar8) & 0x40) == 0) || (*param_2 != '\\x1a')) {\n        puVar6 = fcn.0040d4d5();\n        *puVar6 = 0x1c;\n        puVar6 = fcn.0040d4de();\n        *puVar6 = 0;\n    }\ncode_r0x004147f1:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1062
    },
    "0042b544": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b544(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    uint lprcDst;\n    uint lprcSrc1;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h - *(in_ECX + 4);\n    iVar3 = arg_ch - *(in_ECX + 8);\n    iVar2 = *(in_ECX + 0x8c);\n    uVar4 = 2;\n    if (iVar2 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar1;\n    }\n    else {\n        if (iVar2 != 0xb) {\n            uVar4 = 0x22;\n            if (iVar2 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar3;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar3;\n            }\n            iVar2 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x0042b59c;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar1;\n    }\n    iVar2 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x0042b59c:\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x134))(&var_8h, iVar2, uVar4);\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4, &lprcSrc1);\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((var_10h - *(in_ECX + 0x60)) - var_8h) + *(in_ECX + 0x58);\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.0042b338(0);\n    return;\n}\n",
        "token_count": 1089
    },
    "0040f845": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040f845(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 92
    },
    "0040fa18": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fa5c)\n// WARNING: Removing unreachable block (ram,0x0040fa49)\n\nvoid fcn.0040fa18(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar4;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = var_14h & 0xffffff00;\n    uVar4 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | 0x40 | (in_AF & 1) * 0x10 | 4 |\n            (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar2 = uVar4 ^ 0x200000;\n    if ((((uVar2 & 0x4000) != 0) * 0x4000 | ((uVar2 & 0x400) != 0) * 0x400 | ((uVar2 & 0x200) != 0) * 0x200 |\n         ((uVar2 & 0x100) != 0) * 0x100 | ((uVar2 & 0x40) != 0) * 0x40 | ((uVar2 & 0x10) != 0) * 0x10 |\n         ((uVar2 & 4) != 0) * 4 | ((uVar2 & 0x200000) != 0) * 0x200000 | ((uVar2 & 0x40000) != 0) * 0x40000) != uVar4) {\n        iVar3 = cpuid_basic_info(0);\n        var_14h = *(iVar3 + 4);\n        var_10h = *(iVar3 + 8);\n        var_ch = *(iVar3 + 0xc);\n        piVar1 = cpuid_Version_info(1);\n        var_18h = *piVar1;\n        var_1ch = piVar1[2];\n    }\n    *0x450664 = 0;\n    *0x450660 = 0;\n    if (((var_1ch & 0x4000000) != 0) && (iVar3 = fcn.0040f9e3(),  iVar3 != 0)) {\n        *0x450664 = 1;\n        iVar3 = fcn.00413650(\"AuthenticAMD\", &var_14h, 0xc);\n        if ((iVar3 != 0) || (uVar2 = var_18h >> 8 & 0xf,  (~-(uVar2 != 0xf) & var_18h >> 0x14 & 0xffU) + uVar2 != 0xf))\n        {\n            *0x450660 = 1;\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 845
    },
    "00426462": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00426462(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0041014d": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.0041014d(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*0x4508cc == 0) {\n        fcn.0040cf5a();\n    }\n    iVar4 = 0;\n    pcVar3 = *0x44effc;\n    if (*0x44effc != NULL) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + iVar2 + 1) {\n            if (*pcVar3 != '=') {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = fcn.0040be00(pcVar3);\n        }\n        piVar1 = fcn.0040a67a(iVar4 * 4 + 4);\n        pcVar3 = *0x44effc;\n        *0x44f02c = piVar1;\n        if (piVar1 != NULL) {\n            do {\n                if (*pcVar3 == '\\0') {\n                    fcn.0040a68c(*0x44effc);\n                    *0x44effc = NULL;\n                    *piVar1 = 0;\n                    *0x4508c0 = 1;\n                    return 0;\n                }\n                iVar4 = fcn.0040be00(pcVar3);\n                if (*pcVar3 != '=') {\n                    iVar2 = fcn.0040a67a(iVar4 + 1);\n                    *piVar1 = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.0040a68c(*0x44f02c);\n                        *0x44f02c = NULL;\n                        return 0xffffffff;\n                    }\n                    fcn.00412280(iVar2, pcVar3);\n                    piVar1 = piVar1 + 1;\n                }\n                pcVar3 = pcVar3 + iVar4 + 1;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 450
    },
    "004148f4": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.004148f4(uint32_t param_1)\n\n{\n    if (*0x450544 <= param_1) {\n        return 0;\n    }\n    return *(*((param_1 >> 5) * 4 + 0x450560) + 4 + (param_1 & 0x1f) * 0x24) & 0x40;\n}\n",
        "token_count": 88
    },
    "00416394": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416394(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040c534(0x4445b0, 8);\n    uVar2 = *(unaff_EBP + 8);\n    iVar1 = *((uVar2 >> 5) * 4 + 0x450560) + (uVar2 & 0x1f) * 0x24;\n    if (*(iVar1 + 8) == 0) {\n        fcn.0040d784(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 8) == 0) {\n            iVar3 = fcn.00413699(iVar1 + 0xc, 4000);\n            if (iVar3 == 0) {\n                fcn.0040a822(unaff_EBP + -0x10, 0xffffffff);\n                goto code_r0x00416422;\n            }\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041642b();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar2 >> 5) * 4 + 0x450560) + 0xc + (uVar2 & 0x1f) * 0x24);\ncode_r0x00416422:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 393
    },
    "00416434": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00416434(uint32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((param_1 >> 5) * 4 + 0x450560) + 0xc + (param_1 & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 73
    },
    "00416456": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00416456(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.00416353(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.0040d4d5();\n        *puVar3 = 9;\ncode_r0x004164b0:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 != 0) {\n                fcn.0040d4e7(iVar4);\n                goto code_r0x004164b0;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x450560) + 4 + (arg_8h & 0x1f) * 0x24;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 347
    },
    "00429314": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00429314(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h;\n    uint uStack292;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x1c), &stack0xfffffecc);\n    if (*(param_2 + 0x88) == param_1) {\n        if (param_3 == 0) goto code_r0x00429568;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffecc, param_3);\n        if (iVar2 != 0) goto code_r0x00429568;\n    }\n    if ((*(param_1 + 0x90) != 0) && ((*(param_2 + 0x80) & 0x40) != 0)) {\n        *(param_1 + 0x7c) = *(param_1 + 0x7c) | 0x40;\n    }\n    *(param_1 + 0x7c) = *(param_1 + 0x7c) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x7c);\n    *(param_1 + 0x7c) = *(param_2 + 0x7c) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041d998(auStack268, 0x104);\n        fcn.0042636a(*(param_1 + 0x1c), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x7c) ^ *(param_1 + 0x7c)) & 0xf000 ^ *(param_2 + 0x7c);\n    if (*(param_1 + 0x90) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00431aa4(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x88) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x1c));\n        if (iVar2 != 0) {\n            fcn.0041d91b(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack292 = 0xffffffff;\n    if (param_3 == 0) {\n        fcn.00418fa5(*(param_1 + 0x9c), param_2);\n        fcn.00418fa5(*(param_1 + 0x9c), 0);\n        fcn.0041d91b(0, -*0x44ed48, -*0x44ed4c, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, param_3);\n        fcn.00422688(&iStack284);\n        uStack292 = fcn.0042891d(param_2, iStack284, iStack280, iStack276, iStack272, \n                                 (iStack276 - iStack284) / 2 + iStack284, (iStack272 - iStack280) / 2 + iStack280);\n        fcn.0041d91b(0, iStack284, iStack280, iStack276 - iStack284, iStack272 - iStack280, 0x114);\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x1c));\n    iVar2 = fcn.0041b49a();\n    if (iVar2 != param_1) {\n        fcn.00409c69(param_1);\n    }\n    iVar2 = *(param_2 + 0x88);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x00429533:\n        fcn.00428ca5(param_2, uStack292, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x90) == 0) || (*(iVar2 + 0x90) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack292 = 0xffffffff;\n        goto code_r0x00429533;\n    }\n    *(param_2 + 0x88) = param_1;\n    if (bVar1) {\n        fcn.0041d91b(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.00428c3e(param_2);\n    iVar2 = fcn.0042d363();\n    *(iVar2 + 0xcc) = *(iVar2 + 0xcc) | 0xc;\ncode_r0x00429568:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 1254
    },
    "00436211": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n\nint32_t __cdecl fcn.00436211(uint hDC)\n\n{\n    uint32_t *puVar1;\n    uint8_t *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(extraout_ECX + 0x88) = *(unaff_EBP + 8);\n    iVar5 = fcn.00419ae3(0x40);\n    *(unaff_EBP + 8) = iVar5;\n    *(unaff_EBP + -4) = 0;\n    if (iVar5 == 0) {\n        piVar6 = NULL;\n    }\n    else {\n        piVar6 = fcn.00437220();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(extraout_ECX + 0x130) = piVar6;\n    *(*piVar6 + 0x50) = 0x7009;\n    puVar1 = *(**(extraout_ECX + 0x130) + 0x70) + 0x14;\n    *puVar1 = *puVar1 | 0x40;\n    puVar2 = *(**(extraout_ECX + 0x130) + 0x70) + 0x15;\n    *puVar2 = *puVar2 & 0xfe;\n    *(*(extraout_ECX + 0x130) + 8) = 1;\n    iVar5 = fcn.00419ae3(0x40);\n    *(unaff_EBP + 8) = iVar5;\n    *(unaff_EBP + -4) = 1;\n    if (iVar5 == 0) {\n        uVar7 = 0;\n    }\n    else {\n        uVar7 = fcn.00438103();\n    }\n    piVar6 = *(extraout_ECX + 0x88);\n    uVar3 = *(extraout_ECX + 0x130);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(extraout_ECX + 0x8c) = uVar7;\n    iVar5 = (**(*piVar6 + 0x16c))(uVar3);\n    if (iVar5 != 0) {\n        fcn.0042278a(*(*(**(extraout_ECX + 0x130) + 0x70) + 0x10));\n        (**(**(extraout_ECX + 0x8c) + 0xc))(*(*(**(extraout_ECX + 0x130) + 0x70) + 0x10));\n        *(*(extraout_ECX + 0x8c) + 0xc) = 1;\n        *(extraout_ECX + 0x9c) = 1;\n        (**(*(extraout_ECX + 0x90) + 0x1c))();\n        uVar7 = (*_sym.imp.USER32.dll_GetDC)(*(extraout_ECX + 0x1c));\n        iVar5 = **(extraout_ECX + 0x8c);\n        *(unaff_EBP + 8) = uVar7;\n        (**(iVar5 + 0x10))(uVar7);\n        (**(**(extraout_ECX + 0x88) + 0x170))(*(extraout_ECX + 0x8c), *(extraout_ECX + 0x130));\n        (**(**(extraout_ECX + 0x8c) + 0x18))();\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(extraout_ECX + 0x1c), *(unaff_EBP + 8));\n        (**(*(extraout_ECX + 0x90) + 0x20))(0xffffffff);\n        uVar7 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(extraout_ECX + 0x98), 0x58);\n        *(extraout_ECX + 0x120) = uVar7;\n        uVar7 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(extraout_ECX + 0x98), 0x5a);\n        *(extraout_ECX + 0x124) = uVar7;\n        uVar4 = *(*(extraout_ECX + 0x130) + 0x18);\n        *(extraout_ECX + 0x114) = uVar4;\n        if (uVar4 == 0) {\n            *(extraout_ECX + 0x114) = 1;\n        }\n        else if (*(extraout_ECX + 0x10c) < uVar4) {\n            *(extraout_ECX + 0x114) = *(extraout_ECX + 0x10c);\n        }\n        *(extraout_ECX + 0x104) = *(extraout_ECX + 0x114);\n        fcn.00425c11(1, 1, 1, 0x43f8d4, 0x43f8d4);\n        piVar6 = *(extraout_ECX + 0x130);\n        if ((*(*(*piVar6 + 0x70) + 0x1e) < 0x8000) &&\n           (*(*(*piVar6 + 0x70) + 0x1e) - *(*(*piVar6 + 0x70) + 0x1c) < 0x8000)) {\n            *(unaff_EBP + -0x24) = 3;\n            *(unaff_EBP + -0x20) = *(*(*piVar6 + 0x70) + 0x1c);\n            *(unaff_EBP + -0x1c) = *(*(*piVar6 + 0x70) + 0x1e);\n            *(unaff_EBP + -0x18) = 1;\n            iVar5 = fcn.00419ebd(1, unaff_EBP + -0x28, 0);\n            if (iVar5 == 0) {\n                fcn.0041ab26(1, *(unaff_EBP + -0x20), *(unaff_EBP + -0x1c), 0);\n            }\n        }\n        else {\n            (*_sym.imp.USER32.dll_ShowScrollBar)(*(extraout_ECX + 0x1c), 1, 0);\n        }\n        fcn.00435fba(*(*(extraout_ECX + 0x130) + 0x14), 1);\n        iVar5 = 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar5;\n}\n",
        "token_count": 1626
    },
    "00421727": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00421727(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint8_t in_stack_fffffeb8;\n    uchar auStack324 [8];\n    uchar auStack316 [8];\n    uchar auStack308 [12];\n    uint32_t uStack296;\n    uint uStack8;\n    \n    uStack8 = *0x44bf78;\n    if ((param_1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1),  iVar1 < 0x104)) {\n        iVar1 = fcn.004210fa(param_2 + 0x22, param_1);\n        if (iVar1 == 0) {\n            *(param_2 + 0x22) = 0;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, &stack0xfffffeb8);\n            if (iVar1 != -1) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n                *(param_2 + 8) = in_stack_fffffeb8 & 0x7f;\n                param_2[6] = uStack296;\n                param_2[7] = uStack296 >> 0x1f;\n                puVar2 = fcn.0040a463(auStack324, 0xffffffff);\n                *param_2 = *puVar2;\n                param_2[1] = puVar2[1];\n                puVar2 = fcn.0040a463(auStack316, 0xffffffff);\n                param_2[4] = *puVar2;\n                param_2[5] = puVar2[1];\n                puVar2 = fcn.0040a463(auStack308, 0xffffffff);\n                param_2[2] = *puVar2;\n                param_2[3] = puVar2[1];\n                if ((*param_2 | param_2[1]) == 0) {\n                    *param_2 = *puVar2;\n                    param_2[1] = puVar2[1];\n                }\n                if ((param_2[4] | param_2[5]) == 0) {\n                    param_2[4] = param_2[2];\n                    param_2[5] = param_2[3];\n                }\n            }\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 559
    },
    "00419537": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00419537(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x0041954f;\n    uVar3 = fcn.00417be7();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x0041954f:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 188
    },
    "004019b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004019b0(uint *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    ulong uVar1;\n    \n    *param_1 = 0x43b900;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[1] = param_3;\n    *(param_1 + 4) = 0;\n    param_1[0xb] = 1;\n    param_1[0xc] = 0xffffffff;\n    fcn.0040b220(param_1 + 5, 0, 0x18);\n    *param_1 = 0x43b958;\n    param_1[0x16] = 0;\n    uVar1 = *0x43b8f0;\n    if (*(param_1 + 4) != '\\0') {\n        uVar1 = *0x43b8f8;\n    }\n    *(param_1 + 0x10) = uVar1;\n    param_1[0xe] = param_4;\n    uVar1 = *0x43b8f8;\n    param_1[0xd] = param_2;\n    *(param_1 + 0x14) = uVar1;\n    *(param_1 + 0x12) = *0x43b8f8;\n    *(param_1 + 0x18) = *0x43b8f8;\n    return param_1;\n}\n",
        "token_count": 342
    },
    "00403a30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.00403a30(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *unaff_ESI;\n    int32_t iStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CopyRect;\n    puStack44 = &stack0xffffffe0;\n    iStack48 = 0x403a42;\n    (*_sym.imp.USER32.dll_CopyRect)();\n    iStack48 = iStack4;\n    (*pcVar1)(&stack0xffffffe8);\n    iVar3 = iStack28;\n    iVar2 = iStack32;\n    iVar4 = iStack48;\n    if (iStack40 < iStack48) {\n        iStack48 = iStack40;\n        iStack40 = iVar4;\n    }\n    if (unaff_ESI < puStack44) {\n        puStack44 = unaff_ESI;\n    }\n    if (iStack24 < iStack32) {\n        iStack32 = iStack24;\n        iStack24 = iVar2;\n    }\n    if (iStack20 < iStack28) {\n        iStack28 = iStack20;\n        iStack20 = iVar3;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffffd0, &stack0xffffffd0, &stack0xffffffe0);\n    return iVar4 != 0;\n}\n",
        "token_count": 370
    },
    "00408e41": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e41(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.00408d37(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.0040b380(iVar2 + uVar1, arg_8h, arg_ch);\n    fcn.00408abf(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 183
    },
    "0040a9e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0040a9e0(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 169
    },
    "0040b280": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b280(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    \n    uVar1 = fcn.0040c6e8(*0x4508c8);\n    if (uVar1 < *0x4508c4 + (4 - *0x4508c8)) {\n        uVar3 = 0x800;\n        if (uVar1 < 0x800) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040c7e6(*0x4508c8, uVar3 + uVar1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040c7e6(*0x4508c8, uVar1 + 0x10);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        *0x4508c4 = iVar2 + (*0x4508c4 - *0x4508c8 >> 2) * 4;\n        *0x4508c8 = iVar2;\n    }\n    **0x4508c4 = unaff_EDI;\n    *0x4508c4 = *0x4508c4 + 1;\n    return;\n}\n",
        "token_count": 299
    },
    "0040d868": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d868(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x450670;\n    while( true ) {\n        if (*0x450670 + *0x45066c * 0x14 <= uVar1) {\n            return 0;\n        }\n        if (param_1 - *(uVar1 + 0xc) < 0x100000) break;\n        uVar1 = uVar1 + 0x14;\n    }\n    return uVar1;\n}\n",
        "token_count": 125
    },
    "0040f356": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f356(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.00413d45(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00413c14((0 < arg_10h) + (var_2ch == 0x2d) + arg_ch, arg_10h + 1, &var_2ch);\n    fcn.0040f2a8(arg_10h, arg_14h, 0);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 192
    },
    "0040f45e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f45e(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.00413d45(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00413c14((var_2ch == 0x2d) + arg_ch, var_28h + arg_10h, &var_2ch);\n    fcn.0040f3c2(arg_ch, arg_10h, 0);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 187
    },
    "0040f4c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f4c0(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.00413d45(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    iVar1 = var_28h + -1;\n    arg_8h_00 = (var_2ch == 0x2d) + arg_ch;\n    fcn.00413c14(arg_8h_00, arg_10h, &var_2ch);\n    var_28h = var_28h + -1;\n    if ((var_28h < -4) || (arg_10h <= var_28h)) {\n        fcn.0040f2a8(arg_10h, arg_14h, 1);\n    }\n    else {\n        if (iVar1 < var_28h) {\n            do {\n                pcVar2 = arg_8h_00;\n                arg_8h_00 = pcVar2 + 1;\n            } while (*pcVar2 != '\\0');\n            pcVar2[-1] = '\\0';\n        }\n        fcn.0040f3c2(arg_ch, arg_10h, 1);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 374
    },
    "00416970": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416970(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x004169b6;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x004169b6:\n    return cVar2;\n}\n",
        "token_count": 337
    },
    "00416cce": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00416cce(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_ch_00;\n    uint var_10h;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    iVar4 = 0x44cc50;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            iVar4 = 0x44cdb0;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            uVar1 = arg_ch >> 3;\n            uVar3 = arg_ch & 7;\n            iVar4 = iVar4 + 0x54;\n            arg_ch = uVar1;\n            if (uVar3 != 0) {\n                arg_ch_00 = iVar4 + uVar3 * 0xc;\n                if (0x7fff < *arg_ch_00) {\n                    var_10h._0_2_ = *arg_ch_00;\n                    var_10h._2_2_ = *arg_ch_00 >> 0x10;\n                    uStack16 = arg_ch_00[1];\n                    uStack14 = arg_ch_00[1] >> 0x10;\n                    uStack12 = arg_ch_00[2];\n                    iVar2 = CONCAT22(uStack16, var_10h._2_2_) + -1;\n                    var_10h._2_2_ = iVar2;\n                    uStack16 = iVar2 >> 0x10;\n                    arg_ch_00 = &var_10h;\n                }\n                fcn.00416a9c(arg_8h, arg_ch_00);\n            }\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 481
    },
    "0041744f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "set environment variable"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041744f(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint lpValue;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (arg_8h_00 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0040bc2b(arg_8h_00, 0x3d);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_8h_00 == iVar1) {\n        return 0xffffffff;\n    }\n    bVar5 = *(iVar1 + 1) == '\\0';\n    if (*0x44f02c == *0x44f030) {\n        *0x44f02c = fcn.004173ee();\n    }\n    if (*0x44f02c == NULL) {\n        if ((arg_ch != 0) && (*0x44f034 != NULL)) {\n            iVar2 = fcn.00416a0c();\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x00417504;\n        }\n        if (!bVar5) {\n            *0x44f02c = fcn.0040a67a(4);\n            if (*0x44f02c == NULL) {\n                return 0xffffffff;\n            }\n            **0x44f02c = 0;\n            if (*0x44f034 == NULL) {\n                *0x44f034 = fcn.0040a67a(4);\n                if (*0x44f034 == NULL) {\n                    return 0xffffffff;\n                }\n                **0x44f034 = 0;\n            }\n            goto code_r0x00417504;\n        }\ncode_r0x004174d2:\n        var_10h = 0;\n    }\n    else {\ncode_r0x00417504:\n        piVar3 = *0x44f02c;\n        iVar2 = fcn.004173a1(arg_8h_00);\n        if ((iVar2 < 0) || (*piVar3 == 0)) {\n            if (bVar5) {\n                fcn.0040a68c(arg_8h_00);\n                *arg_8h = 0;\n                goto code_r0x004174d2;\n            }\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n            }\n            piVar3 = fcn.0040c7e6(*0x44f02c, iVar2 * 4 + 8);\n            if (piVar3 == NULL) {\n                return 0xffffffff;\n            }\n            piVar3[iVar2] = arg_8h_00;\n            (piVar3 + iVar2)[1] = 0;\n            *arg_8h = 0;\ncode_r0x004175a1:\n            *0x44f02c = piVar3;\n        }\n        else {\n            piVar3 = piVar3 + iVar2;\n            fcn.0040a68c(*piVar3);\n            if (bVar5) {\n                for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n                    *piVar3 = piVar3[1];\n                    iVar2 = iVar2 + 1;\n                }\n                piVar3 = fcn.0040c7e6(*0x44f02c, iVar2 << 2);\n                if (piVar3 != NULL) goto code_r0x004175a1;\n            }\n            else {\n                *piVar3 = arg_8h_00;\n                *arg_8h = 0;\n            }\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.0040be00(arg_8h_00);\n            iVar2 = fcn.0040a67a(iVar2 + 2);\n            if (iVar2 != 0) {\n                fcn.00412280(iVar2, arg_8h_00);\n                puVar4 = (iVar2 - arg_8h_00) + iVar1;\n                *puVar4 = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(iVar2, ~-bVar5 & puVar4 + 1);\n                if (iVar1 == 0) {\n                    var_10h = 0xffffffff;\n                }\n                fcn.0040a68c(iVar2);\n            }\n        }\n        if (bVar5) {\n            fcn.0040a68c(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1129
    },
    "0041abce": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041abce(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041ab5b(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.00419efa(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 161
    },
    "0041ad89": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ad89(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041d7d1();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00405930();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.0040930d(iVar5, 1);\n            fcn.00409378(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040930d(iVar5, 2);\n            fcn.00409378(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.0041d91b(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1084
    },
    "0041c358": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c358(uint noname_0, uint *hWnd, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = *hWnd;\n    var_4h = (*_sym.imp.USER32.dll_GetDlgCtrlID)(uVar3);\n    var_4h = var_4h & 0xffff;\n    uVar1 = hWnd[2];\n    iVar2 = fcn.00433874(0x430550);\n    if ((*(iVar2 + 0xdc) != in_ECX[7]) && (iVar2 = fcn.0041bf18(uVar3, arg_10h),  iVar2 == 0)) {\n        var_ch = arg_10h;\n        var_8h = hWnd;\n        uVar3 = (**(*in_ECX + 0xc))(var_4h, uVar1 & 0xffff | 0x4e0000, &var_ch, 0);\n        return uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 274
    },
    "0041e48b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nbool __cdecl\nfcn.0041e48b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    char cVar5;\n    bool bVar6;\n    uint var_8h;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = &stack0xffffffb8;\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar1 = fcn.00432908();\n        *(unaff_EBP + 0x10) = *(iVar1 + 0xc);\n    }\n    iVar1 = fcn.00432908();\n    piVar2 = *(iVar1 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar2;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b0f3(0x10);\n    fcn.0041b0f3(0x7c000);\n    if (piVar2 == NULL) {\n        iVar1 = *(unaff_EBP + 8);\ncode_r0x0041e50f:\n        if (iVar1 != 0) {\n            piVar2 = fcn.0041fa72();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x1c) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x18) = 0;\n            iVar3 = fcn.0042020b(iVar1, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n            cVar5 = iVar3 == 0;\n            if (*0x44ed8c == 0) {\ncode_r0x0041e584:\n                if (cVar5 != '\\0') {\ncode_r0x0041e588:\n                    fcn.004201dc(iVar1);\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0042013e(*(unaff_EBP + -0x18));\n                    uVar4 = fcn.0041fef2();\n                    *(unaff_EBP + -0x14) = uVar4;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.0041fee4();\n                    if (*(unaff_EBP + -0x14) != 0) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    }\n                }\n            }\n            else {\n                if (cVar5) goto code_r0x0041e588;\n                iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.0040bce5(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    cVar5 = '\\x01' - (iVar3 != 0);\n                    if (cVar5 != '\\0') {\n                        if (*(unaff_EBP + -0x18) == 8) {\n                            *(unaff_EBP + -0x18) = 0;\n                        }\n                        goto code_r0x0041e584;\n                    }\n                }\n            }\n            extraout_ECX[0x10] = -1;\n            extraout_ECX[0xe] = extraout_ECX[0xe] | 0x10;\n            fcn.0041cb73(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            iVar1 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), iVar1, uVar4, fcn.0041df03, 0);\n            fcn.004089b7();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x28) != NULL) {\n                (**(**(unaff_EBP + -0x28) + 0x14))(unaff_EBP + -0x48);\n                if (iVar1 != 0) {\n                    (**(*extraout_ECX + 300))(0);\n                }\n            }\n            iVar3 = fcn.0041b542();\n            if (iVar3 == 0) {\n                (**(*extraout_ECX + 0x114))();\n            }\n            if ((iVar1 != 0) && ((*(extraout_ECX + 0xe) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(iVar1);\n                iVar1 = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            bVar6 = iVar1 != 0;\n            goto code_r0x0041e687;\n        }\n    }\n    else {\n        iVar1 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar1 != 0) {\n            iVar1 = (**(*piVar2 + 0x10))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n            goto code_r0x0041e50f;\n        }\n    }\n    bVar6 = false;\ncode_r0x0041e687:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar6;\n}\n",
        "token_count": 1626
    },
    "0041f155": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.0041f155(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 273
    },
    "00421833": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421833(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint *puStack44;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint lpLocalFileTime;\n    \n    if (lpFileTime == 0) {\n        puStack44 = 0x44d178;\n        fcn.0040be8b(&stack0xffffffd4, 0x446a74);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    lpSystemTime._0_2_ = fcn.0040a4c1();\n    lpSystemTime._2_2_ = fcn.0040a4d8();\n    puStack44 = 0x421866;\n    iVar2 = fcn.0040d2c7(arg_8h);\n    if (iVar2 == 0) {\n        var_12h._0_2_ = 0;\n    }\n    else {\n        var_12h._0_2_ = *(iVar2 + 0xc);\n    }\n    var_12h._2_2_ = fcn.0040a4eb();\n    var_eh = fcn.0040a4fe();\n    puStack44 = 0x421895;\n    puVar3 = fcn.0040d2c7(arg_8h);\n    if (puVar3 == NULL) {\n        var_ch = 0xffff;\n    }\n    else {\n        var_ch = *puVar3;\n    }\n    puStack44 = &fcn.00421833::lpSystemTime;\n    var_ah = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        puStack44 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00421f63();\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&fcn.00421833::lpLocalFileTime, lpFileTime);\n    if (iVar2 == 0) {\n        uVar4 = (*pcVar1)(0);\n        fcn.00421f63(uVar4);\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "00425008": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hRgn\n\nint32_t __cdecl fcn.00425008(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint hRgn;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    piVar1 = extraout_ECX + 0x18;\n    (*_sym.imp.USER32.dll_ClientToScreen)(*(*(unaff_EBP + 8) + 0x1c), piVar1);\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x25);\n    extraout_ECX[0x15] = extraout_ECX[0x19] - iVar3;\n    iVar3 = (*pcVar2)(0x25);\n    extraout_ECX[0x17] = iVar3 + extraout_ECX[0x19];\n    iVar4 = (*pcVar2)(0x24);\n    iVar3 = *piVar1;\n    extraout_ECX[0x14] = *piVar1 - iVar4;\n    iVar4 = (*pcVar2)(0x24);\n    extraout_ECX[0x16] = iVar4 + iVar3;\n    *(unaff_EBP + -0x10) = *extraout_ECX;\n    uVar5 = fcn.0041a9cb(0x800, 0, 0, 0);\n    iVar3 = (**(*(unaff_EBP + -0x10) + 0x5c))(0x88, uVar5);\n    fcn.004090b7(*(unaff_EBP + 8));\n    if (iVar3 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x18) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar5 = (*_sym.imp.GDI32.dll_CreateEllipticRgn)(0, 0, 0x20, 0x20);\n        fcn.00422a71(uVar5);\n        (*_sym.imp.USER32.dll_SetWindowRgn)(extraout_ECX[7], *(unaff_EBP + -0x14), 1);\n        uVar5 = (*_sym.imp.USER32.dll_SetCapture)(extraout_ECX[7]);\n        fcn.0041b49a(uVar5);\n        (*_sym.imp.USER32.dll_SetTimer)(extraout_ECX[7], 0xe000, 0x32, 0);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n        fcn.00422ac8();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 765
    },
    "00425460": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425460(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.00424ca7(&var_8h);\n    piVar2 = arg_14h;\n    iVar1 = *(in_ECX + 0x68);\n    *arg_14h = *(in_ECX + 100) - arg_8h;\n    arg_14h[1] = iVar1 - arg_ch;\n    piVar3 = fcn.004251c5(&arg_8h);\n    *arg_18h = *piVar3;\n    arg_18h[1] = piVar3[1];\n    uVar5 = 0 < *piVar2;\n    if (uVar5 == 0) {\n        *arg_18h = 0;\n    }\n    else if (arg_1ch != 0) {\n        piVar2[1] = piVar2[1] + var_4h;\n    }\n    uVar4 = 0 < piVar2[1];\n    if (uVar4 == 0) {\n        arg_18h[1] = 0;\n    }\n    else {\n        if (arg_1ch != 0) {\n            *piVar2 = *piVar2 + var_8h;\n        }\n        if (uVar5 == 0) {\n            if (*piVar2 < 1) goto code_r0x00425500;\n            uVar5 = 1;\n            piVar2[1] = piVar2[1] + var_4h;\n        }\n    }\n    iVar1 = *piVar2;\n    if ((0 < iVar1) && (iVar1 <= *arg_18h)) {\n        *arg_18h = iVar1;\n    }\ncode_r0x00425500:\n    iVar1 = piVar2[1];\n    if ((0 < iVar1) && (iVar1 <= arg_18h[1])) {\n        arg_18h[1] = iVar1;\n    }\n    *arg_10h = uVar5;\n    arg_10h[1] = uVar4;\n    return;\n}\n",
        "token_count": 594
    },
    "00425b86": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425b86(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(in_ECX + 0x58) = 0xffffffff;\n    *(in_ECX + 0x5c) = arg_8h;\n    *(in_ECX + 0x60) = arg_ch;\n    if (*(in_ECX + 0x1c) != 0) {\n        uVar1 = fcn.0041d7d1();\n        if ((uVar1 & 0x300000) != 0) {\n            fcn.0041aace(0, 0, 1);\n            fcn.0041aace(1, 0, 1);\n            fcn.0041ab8b(3, 0);\n        }\n    }\n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lpRect);\n    *(in_ECX + 100) = var_8h - lpRect;\n    *(in_ECX + 0x68) = var_4h - var_ch;\n    if (*(in_ECX + 0x1c) != 0) {\n        fcn.00425521();\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "0042636a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042636a(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2);\n            if (iVar3 == 0) goto code_r0x004263c5;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\ncode_r0x004263c5:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 234
    },
    "004277e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004277e7(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.004272f3(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.004272f3(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.004272f3(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.004272f3(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.004276c5(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0042795f:\n        fcn.004272f3(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.004272f3(arg_8h, arg_ch, 0);\n        piVar3 = fcn.004276c5(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.004272f3(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.004276c5(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.004272f3(arg_8h, arg_ch, (iVar4 + iVar1) / 2);\n                piVar3 = fcn.004276c5(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.0040909c(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0042795f;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.0040909c(*piVar3, piVar3[1]);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0042795f;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 853
    },
    "00427a55": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427a55(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00429b09(&var_10h, (*(in_ECX + 0x7c) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x44b3a4 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 227
    },
    "00428811": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428811(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xa8);\n    puVar1 = in_ECX + 0xac;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb0);\n    uVar4 = *(in_ECX + 0xb4);\n    uVar5 = *(in_ECX + 0xb8);\n    *(in_ECX + 0xa8) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.0042a16e(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb0) = uVar3;\n    *(in_ECX + 0xb4) = uVar4;\n    *(in_ECX + 0xb8) = uVar5;\n    *(in_ECX + 0xa8) = uVar6;\n    return;\n}\n",
        "token_count": 309
    },
    "0042891d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0042891d(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar4 = *(in_ECX + 0x7c) & 0xa000;\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x9c)) {\n        do {\n            iVar3 = var_4h;\n            piVar1 = fcn.004288fe();\n            if ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 0x150))(),  iVar2 == 0)) {\n                var_10h = var_10h + (var_8h - *0x44ed4c);\n                var_8h = 0;\n                iVar3 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar3 = arg_1ch;\n                }\n                if (iVar3 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.00418fd7(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x00428a1e;\n                }\ncode_r0x004289ed:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[7], &lpRect, iVar3);\n                fcn.00422688(&lpRect);\n                if (uVar4 == 0) {\n                    iVar3 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar3 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar3) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar3 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar3 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar3 < 0) goto code_r0x004289ed;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x9c));\n    }\n    iVar3 = var_ch + 1;\n    fcn.00418fd7(iVar3, 0, 1);\ncode_r0x00428a1e:\n    fcn.00418fd7(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 854
    },
    "0042d61e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042d61e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0041f155();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0041d7eb();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0041d82f(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 273
    },
    "0042dc10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dc10(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.0041b49a(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar6 = 0;\n    uVar4 = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar5 = fcn.00432908();\n    piVar1 = *(iVar5 + 4);\n    if (uVar4 != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar6, &var_108h, 0x104);\n            (**(*piVar1 + 0x88))(&var_108h);\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar4);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 344
    },
    "0042ddd5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ddd5(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    sub.USER32.dll_UnpackDDElParam(1000, arg_ch, &var_214h, &var_210h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(var_210h);\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n    if (uVar2 < 0x208) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(var_210h);\n        uVar1 = sub.USER32.dll_ReuseDDElParam(arg_ch, 1000, 0x3e4, 0x8000, var_210h);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), uVar1);\n        iVar3 = fcn.0041d8be();\n        if (iVar3 != 0) {\n            iVar3 = fcn.00432908();\n            (**(**(iVar3 + 4) + 0xa0))(&var_20ch);\n        }\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 347
    },
    "0042e731": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e731(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x31] == 0) {\n        uVar1 = in_ECX[0x33];\n        in_ECX[0x31] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x33] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x1f] != NULL)) {\n            (**(*in_ECX[0x1f] + 0x50))();\n        }\n        uVar1 = fcn.0041d7d1();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.0041b845(0, 0xffff, 0xe900, 2, in_ECX + 0x1b, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.0041b845(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.0041b845(0, 0xffff, 0xe900, 2, in_ECX + 0x1b, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0041d91b(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x31] = 0;\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "0042fc82": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.0042fc82(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00409ed6(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.00422a71(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.00422a71(uVar2);\n    fcn.004017f0(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.0042fbe3();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = *(unaff_EBP + 0x20);\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.00422a71(uVar2);\n        fcn.0040a2cc(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.0040a2cc(unaff_EBP + -0x44);\n        fcn.004017f0(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.00422a71(uVar2);\n            fcn.004017f0(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.004225fc(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.00422b4d(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.00422b4d(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.004225fc(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.00422b4d(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.00422b4d(*(unaff_EBP + 0x14));\n    }\n    fcn.004225fc(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.00422ac8();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2001
    },
    "00430747": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00430747(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x26;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x28], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x28];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.004263d2(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "004307e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004307e7(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar4 = arg_8h;\n    var_4h = *0x44bf78;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.0040b220(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x004308d9;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        arg_8h = NULL;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *piVar4;\n                piVar4 = piVar4 + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0041d7d1();\n                    if (((uVar2 & 0x800) == 0) && (*0x44b3a4 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = arg_8h;\n                    arg_8h = arg_8h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x004308d9;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1c] = iVar1;\n    in_ECX[0x27] = 1;\ncode_r0x004308d9:\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 728
    },
    "00433b38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00433b38(void)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 100
    },
    "00436ab0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436ab0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    pcVar2 = _sym.imp.USER32.dll_ShowScrollBar;\n    if (*(in_ECX + 0x108) == 0) {\n        *(in_ECX + 0x114) = *(in_ECX + 0x104);\n        (*pcVar2)(*(in_ECX + 0x1c), 0);\n        if ((0x7fff < *(*(**(in_ECX + 0x130) + 0x70) + 0x1e)) ||\n           (iVar3 = *(**(in_ECX + 0x130) + 0x70),  arg_8h = 1,  0x7fff < *(iVar3 + 0x1e) - *(iVar3 + 0x1c))) {\n            arg_8h = 0;\n        }\n        (*pcVar2)(*(in_ECX + 0x1c), 1, arg_8h);\n        if (arg_8h != 0) {\n            var_18h = 3;\n            var_14h = *(*(**(in_ECX + 0x130) + 0x70) + 0x1c);\n            var_10h = *(*(**(in_ECX + 0x130) + 0x70) + 0x1e);\n            var_ch = 1;\n            iVar3 = fcn.00419ebd(1, &var_1ch, 0);\n            if (iVar3 == 0) {\n                fcn.0041ab26(1, var_14h, var_10h, 0);\n            }\n        }\n        fcn.00435fba(*(in_ECX + 0x110), 1);\n    }\n    else {\n        iVar3 = *(in_ECX + 0xac);\n        *(in_ECX + 0x114) = 1;\n        iVar4 = arg_8h * 0x28;\n        *(iVar3 + 0x20) = *(iVar3 + 0x20 + iVar4);\n        *(iVar3 + 0x24) = *(iVar3 + 0x24 + iVar4);\n        iVar3 = *(in_ECX + 0xac);\n        *(iVar3 + 0x10) = *(iVar3 + 0x10 + iVar4);\n        *(iVar3 + 0x14) = *(iVar3 + 0x14 + iVar4);\n        fcn.00435fba(*(in_ECX + 0x110) + arg_8h, 0);\n        fcn.00435ce0(0);\n        pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n        puVar1 = iVar4 + 0x18 + *(in_ECX + 0xac);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_ch, *puVar1, puVar1[1]);\n        iVar4 = (*pcVar2)(arg_10h, *puVar1, puVar1[1]);\n        fcn.0042534f(iVar3 + **(in_ECX + 0xac), iVar4 + (*(in_ECX + 0xac))[1]);\n    }\n    return;\n}\n",
        "token_count": 804
    },
    "00438002": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438002(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    \n    arg_8h = arg_8h - arg_14h;\n    uVar1 = 0;\n    if (arg_ch != 0) {\n        do {\n            if (*arg_10h != arg_8h && arg_8h <= *arg_10h) {\n                arg_18h = *arg_10h;\n                goto code_r0x0043802b;\n            }\n            uVar1 = uVar1 + 1;\n            arg_10h = arg_10h + 1;\n        } while (uVar1 < arg_ch);\n    }\n    arg_18h = (arg_8h / arg_18h + 1) * arg_18h;\ncode_r0x0043802b:\n    return arg_18h + arg_14h;\n}\n",
        "token_count": 235
    },
    "004010f0": {
        "rules": [
            "PEB access",
            "access PEB ldr_data",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004010f0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar4 = *(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc);\n    iVar5 = piVar4[6];\n    if (iVar5 == 0) {\n        return 0;\n    }\n    do {\n        iVar1 = *(*(iVar5 + 0x3c) + 0x78 + iVar5);\n        piVar4 = *piVar4;\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x18 + iVar5);\n            piVar6 = *(iVar1 + 0x20 + iVar5) + iVar5;\n            var_4h = 0;\n            if (uVar2 != 0) {\n                do {\n                    iVar3 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    uVar8 = 0;\n                    puVar7 = iVar3 + iVar5;\n                    while( true ) {\n                        if (*puVar7 == 0) break;\n                        uVar8 = (uVar8 >> 0xd | uVar8 << 0x13) + *puVar7;\n                        puVar7 = puVar7 + 1;\n                    }\n                    if (uVar8 == arg_8h) {\n                        return *(*(iVar1 + 0x1c + iVar5) + *(*(iVar1 + 0x24 + iVar5) + var_4h * 2 + iVar5) * 4 + iVar5)\n                               + iVar5;\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar2);\n            }\n        }\n        iVar5 = piVar4[6];\n        if (iVar5 == 0) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 519
    },
    "00404030": {
        "rules": [
            "PEB access",
            "access PEB ldr_data",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404030(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43912b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uVar1 = 0;\n    (*_sym.imp.USER32.dll_SetRect)(param_1, 9000, 0, 0, 9000);\n    *(param_1 + 0x18) = 0x43bd6c;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x28) = 2000;\n    if (*(param_1 + 0x1c) != 0) {\n        fcn.00419b13(*(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n    }\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *in_FS_OFFSET = uVar1;\n    return param_1;\n}\n",
        "token_count": 391
    },
    "00432e89": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** fcn.00432e89(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041da18();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CWinThread.0;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    fcn.00432e30();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 196
    },
    "004011b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve function by hash"
        ],
        "decompiled_code": "\nuint32_t fcn.004011b0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint unaff_EBX;\n    uint uVar7;\n    int32_t iStack112;\n    uchar *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uchar auStack64 [4];\n    code *pcStack60;\n    code *pcStack48;\n    code *pcStack32;\n    uint uStack28;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    pcVar1 = fcn.004010f0(0x5d866970);\n    pcVar2 = fcn.004010f0(0x91afca54);\n    pcVar3 = fcn.004010f0(0x43c28bda);\n    pcVar4 = fcn.004010f0(0xd9242588);\n    uStack12 = fcn.004010f0(0x4105a130);\n    uStack8 = fcn.004010f0(0xc2122629);\n    iStack112 = 0x40120d;\n    uStack4 = fcn.004010f0(0xb56d274a);\n    uVar10 = 0;\n    uVar9 = 1;\n    puVar8 = &stack0xffffffc0;\n    iStack112 = (*pcVar3)();\n    if (((iStack112 == 0) && (iStack112 = (*pcVar3)(&stack0xffffffac, 0),  iStack112 == 0)) &&\n       (iVar5 = (*pcVar3)(&stack0xffffffac, 0),  iVar5 == 0)) {\n        return 0;\n    }\n    iStack112 = 0;\n    uVar7 = 0x8003;\n    uVar11 = uVar10;\n    iVar5 = (*pcStack32)(uVar10, 0x8003);\n    if (((iVar5 != 0) && (iVar5 = (*pcStack48)(puVar8, uStack28, 0x10, 1),  iVar5 != 0)) &&\n       (iVar5 = (*pcStack60)(uVar10, 0x6801, uVar7, 1, &stack0xffffff90),  iVar5 != 0)) {\n        uVar6 = (*pcVar2)(0, unaff_EBX, 0x1000, 0x40);\n        (*pcVar1)(uVar6, uVar9, uVar11);\n        iVar5 = (*pcVar4)(uVar7, 0, 1, 0, uVar6, &stack0xffffffac, uVar11);\n        return -(iVar5 != 0) & uVar6;\n    }\n    return 0;\n}\n",
        "token_count": 654
    },
    "004013b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.004013b0(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x438fc4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0042ed70();\n    uStack4 = 0;\n    *param_1 = 0x43b770;\n    fcn.0043150c();\n    uStack4._0_1_ = 1;\n    fcn.00430969();\n    uStack4 = CONCAT31(uStack4._1_3_, 2);\n    fcn.00430969();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 200
    },
    "00401420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401420(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x438fc4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43b770;\n    uStack4 = 2;\n    fcn.004306f3();\n    uStack4._0_1_ = 1;\n    fcn.004306f3();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.004316b5();\n    uStack4 = 0xffffffff;\n    fcn.0042ee35();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 196
    },
    "004018a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.004018a0(double *param_1)\n\n{\n    float10 fVar1;\n    double dStack8;\n    \n    if (*param_1 == *0x43b8f8) {\n        if (((param_1[1] < *0x43b8f8) << 8 | (param_1[1] == *0x43b8f8) << 0xe) == 0) {\n            return *0x43b8f0;\n        }\n        if (*param_1 == *0x43b8f8) {\n            if (param_1[1] < *0x43b8f8) {\n                return *0x43b8e8;\n            }\n            if ((*param_1 == *0x43b8f8) && (param_1[1] == *0x43b8f8)) {\n                return *0x43b8f8;\n            }\n        }\n    }\n    fVar1 = fcn.0040b030(param_1[1] / *param_1);\n    dStack8 = fVar1;\n    if (((param_1[1] < *0x43b8f8 != (param_1[1] == *0x43b8f8)) && (*param_1 < *0x43b8f8)) ||\n       ((((param_1[1] < *0x43b8f8) << 8 | (param_1[1] == *0x43b8f8) << 0xe) == 0 && (*param_1 < *0x43b8f8)))) {\n        dStack8 = dStack8 + *0x43b8e0;\n    }\n    return dStack8;\n}\n",
        "token_count": 390
    },
    "00402c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402c80(int32_t param_1, uint param_2, uint param_3, ulong param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.0040af14(param_4);\n    fcn.0040ae64(param_4);\n    uVar1 = fcn.0040afb0();\n    uVar2 = fcn.0040afb0();\n    *(param_1 + 8) = uVar1;\n    *(param_1 + 0xc) = uVar2;\n    return;\n}\n",
        "token_count": 131
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fa0(uint *arg_8h)\n\n{\n    double dVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    dVar1 = *(in_ECX + 0x48) + *(in_ECX + 0x40);\n    fcn.0040af14(dVar1);\n    fcn.0040ae64(dVar1);\n    uVar2 = fcn.0040afb0();\n    uVar3 = fcn.0040afb0();\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar3;\n    return;\n}\n",
        "token_count": 150
    },
    "004034b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034b0(uint *arg_8h, double *arg_ch, double *arg_10h, uint arg_14h)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x6c) == '\\0') {\n        fcn.00402dd0(arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    if (arg_14h != '\\0') {\n        *(in_ECX + 0x40) = *(in_ECX + 0x60) + *(in_ECX + 0x50) + *(in_ECX + 0x40);\n    }\n    uVar1 = *(in_ECX + 0x40);\n    fcn.0040af14(uVar1);\n    fcn.0040ae64(uVar1);\n    uVar2 = fcn.0040afb0();\n    uVar3 = fcn.0040afb0();\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar3;\n    *arg_ch = *(in_ECX + 0x40) + *0x43b8e0;\n    *arg_10h = *(in_ECX + 0x60) + *(in_ECX + 0x50);\n    return;\n}\n",
        "token_count": 317
    },
    "004035c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004035c0(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4390a8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0043240d(0);\n    uStack8 = 0;\n    *param_1 = 0x43bae8;\n    fcn.0041857f();\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 147
    },
    "00403610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403610(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4390a8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.00418683();\n    uStack4 = 0xffffffff;\n    fcn.004321fd();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 118
    },
    "00403af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403af0(uint param_1, uint param_2, int32_t param_3, code *param_4)\n\n{\n    if (-1 < param_3 + -1) {\n        do {\n            (*param_4)();\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00403e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403e90(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (param_2 < *(param_1 + 8))) {\n        iVar2 = param_2 * 0x30 + *(param_1 + 4);\n        *(iVar2 + 8) = *(param_3 + 8);\n        *(iVar2 + 0xc) = *(param_3 + 0xc);\n        *(iVar2 + 0xc) = *(param_3 + 0xc);\n        *(iVar2 + 0x10) = *(param_3 + 0x10);\n        *(iVar2 + 0x14) = *(param_3 + 0x14);\n        *(iVar2 + 0x18) = *(param_3 + 0x18);\n        *(iVar2 + 0x1c) = *(param_3 + 0x1c);\n        *(iVar2 + 0x20) = *(param_3 + 0x20);\n        *(iVar2 + 0x28) = *(param_3 + 0x28);\n        return;\n    }\n    fcn.00417be7();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 312
    },
    "00403ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403ef0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 0) {\n        fcn.00417be7();\n    }\n    if (*(param_1 + 8) <= param_2) {\n        fcn.00403b60(param_2 + 1, 0xffffffff);\n    }\n    iVar1 = param_2 * 0x30 + *(param_1 + 4);\n    *(iVar1 + 8) = *(unaff_retaddr + 8);\n    *(iVar1 + 0xc) = *(unaff_retaddr + 0xc);\n    *(iVar1 + 0xc) = *(unaff_retaddr + 0xc);\n    *(iVar1 + 0x10) = *(unaff_retaddr + 0x10);\n    *(iVar1 + 0x14) = *(unaff_retaddr + 0x14);\n    *(iVar1 + 0x18) = *(unaff_retaddr + 0x18);\n    *(iVar1 + 0x1c) = *(unaff_retaddr + 0x1c);\n    *(iVar1 + 0x20) = *(unaff_retaddr + 0x20);\n    *(iVar1 + 0x28) = *(unaff_retaddr + 0x28);\n    return;\n}\n",
        "token_count": 320
    },
    "00404230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404230(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43912b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    if (*(param_1 + 0x1c) != 0) {\n        fcn.00419b13(*(param_1 + 0x1c));\n        *(param_1 + 0x1c) = 0;\n    }\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x18) = 0x43bd6c;\n    uStack4 = 0xffffffff;\n    if (*(param_1 + 0x1c) != 0) {\n        fcn.00419b13(*(param_1 + 0x1c));\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 252
    },
    "004043b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043b0(uint *param_1)\n\n{\n    uint unaff_EDI;\n    uchar auStack16 [16];\n    \n    (*_sym.imp.USER32.dll_SetRect)(auStack16, 0x4b0);\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 18000;\n    param_1[4] = 0;\n    param_1[3] = unaff_EDI;\n    fcn.00403b60(0, 0xffffffff);\n    fcn.00403b60(0, 2000);\n    return;\n}\n",
        "token_count": 146
    },
    "00404900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00404900(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43917e;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004237e2();\n    *param_1 = 0x43bd78;\n    uStack4 = 0;\n    param_1[0x14] = 0x44c;\n    param_1[0x15] = 0x6a4;\n    fcn.004190b2();\n    uStack4._0_1_ = 1;\n    *(param_1 + 0x1c) = 0;\n    iVar1 = fcn.00419ae3(0x34);\n    uStack4 = CONCAT31(uStack4._1_3_, 2);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00404030();\n        param_1[0x16] = uVar2;\n        *in_FS_OFFSET = uStack12;\n        return param_1;\n    }\n    param_1[0x16] = 0;\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 328
    },
    "004049c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004049c0(uint *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t unaff_EBX;\n    int32_t iVar3;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x4391a3;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43bd78;\n    uStack4 = 1;\n    if (param_1[0x16] != 0) {\n        fcn.00404230();\n        fcn.00419b13();\n    }\n    iVar1 = param_1[0x19];\n    iVar3 = 0;\n    if (-1 < iVar1 + -1) {\n        do {\n            if ((iVar3 < 0) || (param_1[0x19] <= iVar3)) {\n                fcn.0040be8b(&stack0xffffffd8, 0x446a74);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(param_1[0x18] + iVar3 * 4) != 0) {\n                fcn.00404230();\n                fcn.00419b13();\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1 + -1);\n    }\n    fcn.00418e8b(0, 0xffffffff);\n    uStack12 = uStack12 & 0xffffff00;\n    fcn.004190c9();\n    uStack12 = 0xffffffff;\n    fcn.0042383c();\n    *in_FS_OFFSET = unaff_EBX;\n    return;\n}\n",
        "token_count": 409
    },
    "00405c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c70(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x439238;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43c470;\n    uStack4 = 0;\n    fcn.00419b13(param_1[0x36]);\n    fcn.00419b13(param_1[0x37]);\n    if (param_1[0x2b] != 0) {\n        iVar1 = param_1[0x2d];\n        if (iVar1 != 0) {\n            iVar1 = *(iVar1 + 4);\n        }\n        fcn.00422afa(*(param_1[0x2b] + 4), iVar1);\n        if (param_1[0x2b] != NULL) {\n            (**(*param_1[0x2b] + 4))(1);\n        }\n        if (param_1[0x2c] != NULL) {\n            (**(*param_1[0x2c] + 4))(1);\n        }\n    }\n    uStack12 = 0xffffffff;\n    fcn.00424c08();\n    *in_FS_OFFSET = unaff_ESI;\n    return;\n}\n",
        "token_count": 327
    },
    "004067b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067b0(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    int32_t iStack36;\n    int32_t **ppiStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x439288;\n    ppiStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &ppiStack12;\n    iStack36 = param_1[7];\n    uStack4 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)();\n    iVar3 = fcn.0042277c(uVar2);\n    (**(*param_1 + 0x154))(iVar3, 0);\n    ppiVar1 = ppiStack12;\n    uVar2 = 1;\n    iVar4 = iVar3;\n    (**(**ppiStack12 + 0x18))(iVar3, &iStack36, param_1[0x21], param_1[0x22], 1);\n    (*_sym.imp.USER32.dll_InvalidateRgn)(param_1[7], uVar2, 1);\n    fcn.00419b13(*ppiVar1);\n    *ppiVar1 = NULL;\n    (*_sym.imp.USER32.dll_ReleaseDC)(param_1[7], *(iVar3 + 4));\n    fcn.00404b30();\n    *(param_1 + 0x8e) = 0;\n    fcn.00422ac8();\n    *in_FS_OFFSET = iVar4;\n    return;\n}\n",
        "token_count": 374
    },
    "00406910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406910(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x84) = (*(param_1 + 0x84) << 2) / *(param_1 + 0x88) + param_2;\n    *(param_1 + 0x88) = 4;\n    if (4 % *(param_1 + 0x84) == 0) {\n        *(param_1 + 0x88) = 4 / *(param_1 + 0x84);\n        *(param_1 + 0x84) = 1;\n    }\n    fcn.00425c11(4, (*(*(param_1 + 0x50) + 0x50) * *(param_1 + 0x84)) / *(param_1 + 0x88), \n                 (*(*(param_1 + 0x50) + 0x54) * *(param_1 + 0x84)) / *(param_1 + 0x88), 0x43f8d4, 0x43f8d4);\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x1c), 0, 1);\n    return;\n}\n",
        "token_count": 287
    },
    "0040892c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040892c(uint hModule, uint hResInfo, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, hResInfo);\n        puVar3 = iVar1 + puVar2;\n        for (arg_10h = arg_10h & 0xf; arg_10h != 0; arg_10h = arg_10h - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "00408988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408988(uint param_1, uint32_t param_2)\n\n{\n    int32_t hResInfo;\n    \n    hResInfo = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1);\n    if (hResInfo == 0) {\n        return;\n    }\n    fcn.0040892c((param_2 >> 4) + 1 & 0xffff, hResInfo, 6);\n    return;\n}\n",
        "token_count": 102
    },
    "00408a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00408a1c(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004328f8();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 128
    },
    "00408b8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00408b8a(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(**(*param_1 + -0x10) + 8))(*param_1 + -0x10, param_2, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00408b25();\n    }\n    *param_1 = iVar1 + 0x10;\n    return;\n}\n",
        "token_count": 114
    },
    "00408bce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408bce(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.004010c0(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.004089b7();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00408c36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408c36(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 76
    },
    "00408c4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408c4d(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408b30(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 83
    },
    "00408c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408c75(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = *in_ECX;\n    iVar1 = *(arg_ch + -0xc);\n    puVar2 = (**(**(arg_ch + -0x10) + 0x10))();\n    iVar3 = (***puVar2)(arg_8h, 1);\n    if (iVar3 == 0) {\n        fcn.00408b25();\n    }\n    if (iVar1 < arg_8h) {\n        arg_8h = iVar1;\n    }\n    fcn.0040b380(iVar3 + 0x10, arg_ch, arg_8h + 1);\n    *(iVar3 + 4) = iVar1;\n    fcn.004089b7();\n    *in_ECX = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 245
    },
    "00409378": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409378(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.004091c7();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch + 10, \"DISPLAY\", 0x20);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x44ea28)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 420
    },
    "00409bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409bb0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040bed0(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 61
    },
    "00409c29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409c29(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "00409f1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00409f1b(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00417be7();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 108
    },
    "00409fc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409fc9(uint param_1)\n\n{\n    fcn.0040b220(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 44
    },
    "0040a247": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040a247(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004328f8();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xe8);\n    *param_1 = *(iVar1 + 0xe4);\n    *(iVar1 + 0xe4) = param_2;\n    *(param_1[1] + 0xe8) = param_1;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "0040a4c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a4c1(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040d2c7(param_1);\n    if (iVar1 != 0) {\n        return *(iVar1 + 0x14) + 0x76c;\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "0040aa1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040aa1d(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x0040aa46. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 90
    },
    "0040afb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040afb0(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0040bf88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040bf88(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.00410ced(&var_20h, arg_ch, &arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410b46(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 220
    },
    "0040c09b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c09b(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = arg_ch;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.00410ced(&var_20h, arg_10h, &arg_14h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410b46(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "0040c0f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c0f2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_14h = 0x49;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    var_1ch = fcn.0040be00();\n    fcn.004114fd(&var_20h, arg_ch, &arg_10h, arg_8h);\n    return;\n}\n",
        "token_count": 137
    },
    "0040c180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040c180(uint param_1)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    \n    if (*0x44bf18 != NULL) {\n        (**0x44bf18)(param_1);\n    }\n    iVar1 = 0;\n    ppcVar2 = 0x44b074;\n    do {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*ppcVar2 != NULL) {\n            iVar1 = (**ppcVar2)();\n        }\n        ppcVar2 = ppcVar2 + 1;\n    } while (ppcVar2 < 0x44b08c);\n    if (iVar1 == 0) {\n        fcn.0040b360(0x410786);\n        ppcVar2 = 0x44b000;\n        do {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n            ppcVar2 = ppcVar2 + 1;\n        } while (ppcVar2 < 0x44b070);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 258
    },
    "0040c432": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c432(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x450690) {\n        iVar1 = fcn.0040cc0b();\n    }\n    fcn.0040c3bb(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "0040c4d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c4d0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x450690) {\n        iVar1 = fcn.0040cc0b();\n    }\n    fcn.0040c459(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "0040c5de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c5de(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0xc;\n    fcn.0040c534();\n    *(unaff_EBP + -0x1c) = 0;\n    iVar2 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + 8) = *(unaff_EBP + 8) + iVar2 * *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        piVar1 = unaff_EBP + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) break;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) - iVar2;\n        (**(unaff_EBP + 0x14))();\n    }\n    *(unaff_EBP + -0x1c) = 1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c626(0x4418f8, arg_ch_00, unaff_retaddr, arg_8h);\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 368
    },
    "0040c9c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c9c5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x10;\n    fcn.0040c534();\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    while (*(unaff_EBP + -0x1c) < *(unaff_EBP + 0x10)) {\n        iVar1 = *(unaff_EBP + 8);\n        (**(unaff_EBP + 0x14))();\n        *(unaff_EBP + 8) = iVar1 + *(unaff_EBP + 0xc);\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n    }\n    *(unaff_EBP + -0x20) = 1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040ca0f(0x441938, arg_ch_00, unaff_retaddr, arg_8h, arg_ch);\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 359
    },
    "0040cfe3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cfe3(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.00410ced(&var_20h, arg_ch, arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410b46(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 220
    },
    "0040d03a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d03a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_18h = 0;\n    var_20h = 0;\n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    fcn.00410ced(&var_20h, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 118
    },
    "0040d4d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d4d5(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    return iVar1 + 8;\n}\n",
        "token_count": 45
    },
    "0040d4de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040d4de(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    return iVar1 + 0xc;\n}\n",
        "token_count": 45
    },
    "0040d6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040d6e4(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040c534(0x441968, 8);\n    piVar1 = *(unaff_EBP + 8) * 8 + 0x44c210;\n    if (*piVar1 == 0) {\n        arg_8h_00 = fcn.0040a67a(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.0040d4d5();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0040d784(10);\n            *(unaff_EBP + -4) = 0;\n            if (*piVar1 == 0) {\n                iVar3 = fcn.00413699(arg_8h_00, 4000);\n                if (iVar3 == 0) {\n                    fcn.0040a68c(arg_8h_00);\n                    puVar2 = fcn.0040d4d5();\n                    *puVar2 = 0xc;\n                    fcn.0040a822(unaff_EBP + -0x10, 0xffffffff);\n                    goto code_r0x0040d775;\n                }\n                *piVar1 = arg_8h_00;\n            }\n            else {\n                fcn.0040a68c(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040d77b();\n        }\n    }\ncode_r0x0040d775:\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 459
    },
    "0040dbab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040dbab(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*0x45066c == *0x45067c) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450684, 0, *0x450670, (*0x45067c * 5 + 0x50) * 4);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        *0x45067c = *0x45067c + 0x10;\n        *0x450670 = iVar2;\n    }\n    puVar1 = *0x450670 + *0x45066c * 0x14;\n    iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450684, 8, 0x41c4);\n    puVar1[4] = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x100000, 0x2000, 4);\n        puVar1[3] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[2] = 0xffffffff;\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *0x45066c = *0x45066c + 1;\n            *puVar1[4] = 0xffffffff;\n            return puVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450684, 0, puVar1[4]);\n    }\n    return NULL;\n}\n",
        "token_count": 377
    },
    "0040e726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e726(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040c534(0x4419a0, 0x40);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = arg_10h_00;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x38) = *(arg_8h_00 + -4);\n    uVar1 = fcn.0040ad0a(unaff_EBP + -0x50, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x3c) = uVar1;\n    iVar2 = fcn.0040ee57();\n    *(unaff_EBP + -0x40) = *(iVar2 + 0x7c);\n    iVar2 = fcn.0040ee57();\n    *(unaff_EBP + -0x44) = *(iVar2 + 0x80);\n    iVar2 = fcn.0040ee57();\n    *(iVar2 + 0x7c) = iVar3;\n    iVar3 = fcn.0040ee57();\n    *(iVar3 + 0x80) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0040ad9f(arg_8h_00, *(unaff_EBP + 0x14), arg_10h_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -0x20) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040e87b();\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 619
    },
    "0040fb0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040fdb2)\n\nfloat10 fcn.0040fb0e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x441af0;\n    dVar3 = in_XMM7_Qa & *0x441af8;\n    if (*0x441c60 <= dVar2) {\n        return *0x441c80 + *((param_1._4_4_ >> 0x1f) * -8 + 0x441b00);\n    }\n    if (*0x441c40 <= dVar2) {\n        if (*0x441c30 <= dVar2) {\n            if (*0x441c20 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x441bf0 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x441c10 >> 0x2c) - *0x441b10;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x442628);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x441c00);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x441bd0 * dVar6 + *0x441bc0) * dVar6 + *0x441bb0) * dVar6 + *0x441ba0) * dVar5;\n            auVar7 = CONCAT88(((*0x441bd8 * dVar8 + *0x441bc8) * dVar8 + *0x441bb8) * dVar8 + *0x441ba8, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x442618) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x442620)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x441b90 * dVar5 + *0x441b80) * dVar5 + *0x441b70) * dVar5 + *0x441b60) * dVar5 + *0x441b50) *\n                   dVar5 + *0x441b40) * dVar5 + *0x441b30) * dVar5 + _str.RUUUUU) * dVar2;\n        auVar7 = CONCAT88(((((((*0x441b98 * dVar3 + *0x441b88) * dVar3 + *0x441b78) * dVar3 + *0x441b68) * dVar3 +\n                            *0x441b58) * dVar3 + *0x441b48) * dVar3 + *0x441b38) * dVar3 + *0x441b28, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x441c50 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x441bd0 * dVar5 + *0x441bc0) * dVar5 + *0x441bb0) * dVar5 + *0x441ba0) * dVar2;\n        auVar7 = CONCAT88(((*0x441bd8 * dVar3 + *0x441bc8) * dVar3 + *0x441bb8) * dVar3 + *0x441ba8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x441be0) {\n        if (*0x441c70 <= dVar2) {\n            return *0x441c80 * *0x441c80 + param_1;\n        }\n        return *0x441c80 * *0x441c80 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1203
    },
    "00410742": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00410742(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040c534(0x442098, 0xc);\n    *(unaff_EBP + -0x1c) = 0x4461fc;\n    while (*(unaff_EBP + -0x1c) < 0x4461fc) {\n        *(unaff_EBP + -4) = 0;\n        if (**(unaff_EBP + -0x1c) != NULL) {\n            (***(unaff_EBP + -0x1c))();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n    }\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 224
    },
    "00412290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00412290(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x004122e3;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x004122f5;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x004122f5;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x004122f5;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x004122e3:\n    puVar5 = puVar3 + -1;\ncode_r0x004122f5:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00412370;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x00412370:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 749
    },
    "00412280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.00412280(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x00412370;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x00412370:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "00412456": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.00412456(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint noname_2;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t var_4h;\n    \n    if (arg_ch + 1 < 0x101) {\n        arg_ch._2_2_ = *(*(arg_8h + 0x48) + arg_ch * 2);\n    }\n    else {\n        if ((*(*(arg_8h + 0x48) + 1 + (arg_ch >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            var_4h = in_ECX & 0xffff0000 | arg_ch & 0xff;\n            noname_2 = 1;\n        }\n        else {\n            var_4h = CONCAT11(arg_ch, arg_ch >> 8);\n            var_4h = in_ECX & 0xff000000 | var_4h;\n            noname_2 = 2;\n        }\n        iVar1 = fcn.00412a55(1, &var_4h, noname_2, &arg_ch + 2, *(arg_8h + 4), *(arg_8h + 0x14), 1, var_4h, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return arg_ch._2_2_ & arg_10h;\n}\n",
        "token_count": 428
    },
    "004132c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.004132c2(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    uint32_t uVar6;\n    \n    if (*0x44c694 == 0) {\n        return false;\n    }\n    iVar1 = unaff_EBX[5];\n    if ((iVar1 != *0x44c728) || (iVar1 != *0x44c734)) {\n        if (*0x44f42c == 0) {\n            fcn.0041310a(1, 1, iVar1, 1, 0, 0, 0, 0, 0);\n            fcn.0041310a(0, 1, iVar1, 5, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x44f418 != 0) {\n                uVar6 = *0x44f41e;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x44f41c;\n                uVar6 = 0;\n                uVar4 = *0x44f41e;\n            }\n            fcn.0041310a(1, *0x44f418 == 0, iVar1, uVar4, uVar3, uVar6, *0x44f422, *0x44f424, *0x44f426);\n            if (*0x44f3c4 != 0) {\n                uVar6 = *0x44f3ca;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x44f3c8;\n                uVar6 = 0;\n                uVar4 = *0x44f3ca;\n            }\n            fcn.0041310a(0, *0x44f3c4 == 0, iVar1, uVar4, uVar3, uVar6, *0x44f3ce, *0x44f3d0, *0x44f3d2);\n        }\n    }\n    iVar1 = unaff_EBX[7];\n    if (*0x44c72c < *0x44c738) {\n        if ((iVar1 < *0x44c72c) || (*0x44c738 < iVar1)) {\n            return false;\n        }\n        if ((*0x44c72c < iVar1) && (iVar1 < *0x44c738)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar1 < *0x44c738) {\n            return true;\n        }\n        if (*0x44c72c < iVar1) {\n            return true;\n        }\n        if ((*0x44c738 < iVar1) && (iVar1 < *0x44c72c)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EBX[2] * 0x3c + unaff_EBX[1]) * 0x3c + *unaff_EBX) * 1000;\n    if (iVar1 == *0x44c72c) {\n        bVar2 = *0x44c730 <= iVar5;\n    }\n    else {\n        bVar2 = iVar5 < *0x44c73c;\n    }\n    return bVar2;\n}\n",
        "token_count": 782
    },
    "00413650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00413650(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = arg_10h;\n    pcVar6 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = arg_10h - uVar4;\n        do {\n            pcVar6 = arg_ch;\n            pcVar7 = arg_8h;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar7 = arg_8h + 1;\n            pcVar6 = arg_ch + 1;\n            cVar1 = *arg_ch;\n            cVar2 = *arg_8h;\n            arg_ch = pcVar6;\n            arg_8h = pcVar7;\n        } while (cVar1 == cVar2);\n        uVar3 = pcVar6[-1];\n        arg_10h = 0;\n        bVar8 = uVar3 == pcVar7[-1];\n        if (uVar3 < pcVar7[-1] || bVar8) {\n            if (bVar8) {\n                return 0;\n            }\n            arg_10h = 0xfffffffe;\n        }\n        arg_10h = ~arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 414
    },
    "00413b6e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b6e(uint param_1, uint param_2)\n\n{\n    fcn.00413a16(param_1, param_2, 0x44c7bc);\n    return;\n}\n",
        "token_count": 49
    },
    "00413b84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413b84(uint param_1, uint param_2)\n\n{\n    fcn.00413a16(param_1, param_2, 0x44c7d4);\n    return;\n}\n",
        "token_count": 49
    },
    "00413b9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413b9a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.0041568d(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00413b6e(&var_10h, arg_8h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 126
    },
    "00413bd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413bd7(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    fcn.0041568d(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00413b84(&var_10h, arg_8h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 124
    },
    "00413c14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00413c14(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    \n    arg_8h_00 = arg_8h;\n    pcVar3 = *(arg_10h + 0xc);\n    arg_ch_00 = arg_8h + 1;\n    *arg_8h = '0';\n    pcVar1 = arg_ch_00;\n    if (0 < arg_ch) {\n        arg_8h = arg_ch;\n        arg_ch = 0;\n        do {\n            cVar4 = *pcVar3;\n            if (cVar4 == '\\0') {\n                cVar4 = '0';\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            *pcVar1 = cVar4;\n            pcVar1 = pcVar1 + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != NULL);\n    }\n    *pcVar1 = '\\0';\n    if ((-1 < arg_ch) && ('4' < *pcVar3)) {\n        while (pcVar1 = pcVar1 + -1,  *pcVar1 == '9') {\n            *pcVar1 = '0';\n        }\n        *pcVar1 = *pcVar1 + '\\x01';\n    }\n    if (*arg_8h_00 == '1') {\n        *(arg_10h + 4) = *(arg_10h + 4) + 1;\n    }\n    else {\n        iVar2 = fcn.0040be00(arg_ch_00);\n        fcn.0040b6d0(arg_8h_00, arg_ch_00, iVar2 + 1);\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "00413d45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413d45(uint arg_8h, uint noname_1, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffb8;\n    ushort uVar4;\n    uint var_2ch;\n    uchar var_28h [24];\n    uint var_10h;\n    uint uStack16;\n    ushort uStack12;\n    uint var_4h;\n    \n    uVar4 = in_stack_ffffffb8 >> 0x10;\n    var_4h = *0x44bf78;\n    fcn.00413c8b(&var_10h, &arg_8h);\n    iVar3 = fcn.00415ac1(var_10h, uStack16, CONCAT22(uVar4, uStack12), 0x11, 0, &var_2ch);\n    iVar2 = arg_14h;\n    piVar1 = arg_10h;\n    arg_10h[2] = iVar3;\n    *arg_10h = var_2ch._2_1_;\n    arg_10h[1] = var_2ch;\n    fcn.00412280(arg_14h, var_28h);\n    piVar1[3] = iVar2;\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 329
    },
    "00414b3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414b3f(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    fcn.00414a7f(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 115
    },
    "00414c65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414c65(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ee57();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44c54c) {\n        iVar1 = fcn.0041265e();\n    }\n    fcn.00414c05(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 104
    },
    "0041532e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041532e(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = param_2;\n    do {\n        if (*(uVar1 + 4) == unaff_ESI) break;\n        uVar1 = uVar1 + 0xc;\n    } while (uVar1 < param_2 + *0x44c4ac * 0xc);\n    if ((param_2 + *0x44c4ac * 0xc <= uVar1) || (*(uVar1 + 4) != unaff_ESI)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "00416a0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00416a0c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    var_4h = 0;\n    iVar2 = **0x44f034;\n    piVar3 = *0x44f034;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(0, 0, iVar2, 0xffffffff, 0, 0, 0, 0);\n        if ((iVar2 == 0) || (var_4h = fcn.0040a67a(iVar2),  var_4h == 0)) break;\n        iVar2 = (*pcVar1)(0, 0, *piVar3, 0xffffffff, var_4h, iVar2, 0, 0);\n        if (iVar2 == 0) {\n            fcn.0040a68c(var_4h);\n            return 0xffffffff;\n        }\n        iVar2 = fcn.0041744f(&var_4h, 0);\n        if ((iVar2 < 0) && (var_4h != 0)) {\n            fcn.0040a68c(var_4h);\n            var_4h = 0;\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = *piVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 363
    },
    "00416fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416fa0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x00416ff1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x00416ff1:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 364
    },
    "00417e35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00417e35(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *(*(in_ECX + 0x70) + 0xc);\n    if (arg_8h_00 != 0) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_8h_00, 0);\n        arg_8h_00 = *puVar1 + puVar1;\n    }\n    fcn.00408f6a(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "00417e66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00417e66(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x70) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.00408f6a(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "00417e98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00417e98(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x70) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.00408f6a(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "00418e8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418e8b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    \n    iVar1 = arg_8h;\n    iVar5 = 0;\n    if (arg_8h < 0) {\ncode_r0x00418f51:\n        iVar4 = fcn.00417be7();\n    }\n    else {\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h == 0) {\n            fcn.00419b13(*(in_ECX + 4));\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            goto code_r0x00418f9b;\n        }\n        if (*(in_ECX + 4) == 0) {\n            uVar3 = fcn.00419ae3(arg_8h << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.0040b220(uVar3, 0, arg_8h << 2);\n            *(in_ECX + 0xc) = arg_8h;\ncode_r0x00418ee6:\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        iVar5 = *(in_ECX + 0xc);\n        if (arg_8h <= iVar5) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < arg_8h) {\n                fcn.0040b220(*(in_ECX + 4) + iVar1 * 4, 0, (arg_8h - iVar1) * 4);\n            }\n            goto code_r0x00418ee6;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) / 8;\n            if (iVar4 < 4) {\ncode_r0x00418f3b:\n                iVar4 = 4;\n            }\n            else if (iVar4 < 0x401) {\n                if (iVar4 < 4) goto code_r0x00418f3b;\n            }\n            else {\n                iVar4 = 0x400;\n            }\n        }\n        iVar2 = iVar4 + iVar5;\n        if (iVar4 + iVar5 <= arg_8h) {\n            iVar2 = arg_8h;\n        }\n        arg_8h = iVar2;\n        iVar4 = arg_8h;\n        if (arg_8h < iVar5) goto code_r0x00418f51;\n    }\n    iVar5 = fcn.00419ae3(iVar4 << 2);\n    fcn.0040b380(iVar5, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0040b220(iVar5 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.00419b13(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00418f9b:\n    *(in_ECX + 4) = iVar5;\n    return;\n}\n",
        "token_count": 801
    },
    "00418fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418fd7(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00418e8b(arg_10h + iVar1, 0xffffffff);\n            fcn.0040b6d0(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.0040b220(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00418e8b(arg_10h + arg_8h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00417be7();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 366
    },
    "00419067": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00419067(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (-1 < param_3)) {\n        if (param_2 + param_3 <= *(param_1 + 8)) {\n            iVar2 = (*(param_1 + 8) - param_2) - param_3;\n            if (iVar2 != 0) {\n                fcn.0040b6d0(*(param_1 + 4) + param_2 * 4, *(param_1 + 4) + (param_2 + param_3) * 4, iVar2 * 4);\n            }\n            *(param_1 + 8) = *(param_1 + 8) - param_3;\n            return;\n        }\n    }\n    fcn.00417be7();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 234
    },
    "004192ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004192ca(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    \n    iVar1 = arg_8h;\n    iVar5 = 0;\n    if (arg_8h < 0) {\ncode_r0x00419384:\n        fcn.00417be7();\n    }\n    else {\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h == 0) {\n            fcn.00419b13(*(in_ECX + 4));\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            goto code_r0x004193c5;\n        }\n        if (*(in_ECX + 4) == 0) {\n            uVar3 = fcn.00419ae3(arg_8h);\n            *(in_ECX + 4) = uVar3;\n            fcn.0040b220(uVar3, 0, arg_8h);\n            *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041931f:\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        iVar5 = *(in_ECX + 0xc);\n        if (arg_8h <= iVar5) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < arg_8h) {\n                fcn.0040b220(iVar1 + *(in_ECX + 4), 0, arg_8h - iVar1);\n            }\n            goto code_r0x0041931f;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) / 8;\n            if (iVar4 < 4) {\ncode_r0x00419370:\n                iVar4 = 4;\n            }\n            else if (iVar4 < 0x401) {\n                if (iVar4 < 4) goto code_r0x00419370;\n            }\n            else {\n                iVar4 = 0x400;\n            }\n        }\n        iVar2 = iVar4 + iVar5;\n        if (iVar4 + iVar5 <= arg_8h) {\n            iVar2 = arg_8h;\n        }\n        arg_8h = iVar2;\n        if (arg_8h < iVar5) goto code_r0x00419384;\n    }\n    iVar5 = fcn.00419ae3(arg_8h);\n    fcn.0040b380(iVar5, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.0040b220(*(in_ECX + 8) + iVar5, 0, iVar1 - *(in_ECX + 8));\n    fcn.00419b13(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004193c5:\n    *(in_ECX + 4) = iVar5;\n    return;\n}\n",
        "token_count": 750
    },
    "004199c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004199c9(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.004197f2(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00419762(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0041997e();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 216
    },
    "0041a9cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0041a9cb(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004328f8();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.00432908();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        fcn.0040bf88(iVar1, \"Afx:%p:%x\", var_18h);\n    }\n    else {\n        fcn.0040bf88(iVar1, \"Afx:%p:%x:%p:%p:%p\", var_18h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.00419cd4(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0, iVar1, \n                             unaff_EBP);\n        if (iVar2 == 0) {\n            fcn.00422388();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 756
    },
    "0041b4c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041b4c1(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0041b41e(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "0041da32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041da32(int32_t param_1)\n\n{\n    if (*(param_1 + 0x10) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041da3b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*(param_1 + 0x10) + 0x1c))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0041da3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0041da3f(uint arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, uint *arg_20h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x35U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x41db25\n    switch(*((arg_1ch - 0x35U) * 4 + 0x41db25)) {\n    case 0x41da76:\n        (*arg_14h)();\n        break;\n    case 0x41da81:\n        uVar1 = (*arg_14h)();\n        break;\n    case 0x41da8c:\n        arg_18h = arg_ch;\n        goto code_r0x0041db06;\n    case 0x41da91:\n        arg_18h = arg_ch;\n        goto code_r0x0041db11;\n    case 0x41da96:\n        (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x41daa6:\n        uVar1 = (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x41dab6:\n        (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x41dac9:\n        uVar1 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x41dadc:\n        (*arg_14h)(arg_18h);\n        goto code_r0x0041daf5;\n    case 0x41dae8:\n        (*arg_14h)(arg_18h, arg_ch);\ncode_r0x0041daf5:\n        uVar1 = arg_18h[7] == 0;\n        arg_18h[7] = 0;\n        break;\n    case 0x41db03:\ncode_r0x0041db06:\n        (*arg_14h)(arg_18h);\n        break;\n    case 0x41db0e:\ncode_r0x0041db11:\n        uVar1 = (*arg_14h)(arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 608
    },
    "0041df43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0041df43(code **param_1)\n\n{\n    fcn.0041a7ce();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040b220(param_1 + 0x14, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 74
    },
    "0041e00c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041e00c(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0041a7ce();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040b220(param_1 + 0x14, 0, 0x20);\n    param_1[0x19] = param_3;\n    param_1[0x14] = param_2;\n    param_1[0x15] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 134
    },
    "0041ec68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041ec68(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    \n    puVar1 = (**(*param_1 + 0x28))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.00419e0c(puVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0041ec9d:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            iVar2 = puVar1[1];\n            while (iVar2 = fcn.00419e0c(iVar2, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x0041ec9d;\n                iVar2 = iVar2 + 0x18;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 320
    },
    "0041f046": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0041f046(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if (((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar1 != 0)) {\n            fcn.0041bbc4(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n            fcn.0041be9b(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00432908();\n        arg_8h = 0x43047a;\n        iVar1 = fcn.00433874(0x43047a);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x68)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x9c) == 0) {\n                    fcn.0041d89d(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x9c))) {\n                    fcn.0041bbc4(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.0041be9b(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x9c);\n                if (0 < iVar2) {\n                    fcn.0041d89d();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x9c) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00432908();\n        iVar3 = fcn.00433874(0x43047a);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.0041fbce();\n            fcn.0041fd80(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 631
    },
    "0041f29e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041f29e(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0041f214(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "0041f99a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041f99a(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    \n    if (param_2 != NULL) {\n        iVar1 = fcn.00432908();\n        puVar2 = fcn.00408988(*(iVar1 + 0xc), param_1);\n        if (puVar2 != NULL) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar2 + 1, *puVar2, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar1] = 0;\n            return iVar1;\n        }\n        *param_2 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0041fe90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041fe90(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.0040b380(arg_8h, param_3 + 0x40, param_1[1]);\n        iVar1 = fcn.0041fe79(arg_8h);\n        param_1[2] = iVar1 == 0;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "0041fef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fef8(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "00420595": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00420595(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t arg_ch_00;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(unaff_EBP + 0xc);\n    piVar3 = (**(**(*piVar1 + -0x10) + 0x10))();\n    iVar4 = (**(*piVar3 + 0xc))();\n    *(unaff_EBP + 0xc) = iVar4 + 0x10;\n    iVar4 = **(unaff_EBP + 0x10);\n    uVar2 = *(iVar4 + -0xc);\n    arg_ch_00 = *piVar1;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042ad9b(unaff_EBP + 0xc, arg_ch_00, *(arg_ch_00 + -0xc), iVar4, uVar2);\n    fcn.00408c4d(unaff_EBP + 0xc);\n    fcn.004089b7();\n    uVar2 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "004206dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.004206dd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *arg_10h_00;\n    uint uVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CRecentFileList.0;\n    fcn.00408d23();\n    *(unaff_EBP + -4) = 0;\n    fcn.00408d23();\n    fcn.00408d23();\n    arg_10h_00 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 2;\n    ppcVar2 = fcn.00419ae3(arg_10h_00 * 4 + 4);\n    if (ppcVar2 == NULL) {\n        pcVar3 = NULL;\n    }\n    else {\n        *ppcVar2 = arg_10h_00;\n        *(unaff_EBP + 0x14) = ppcVar2 + 1;\n        fcn.0040c9c5(ppcVar2 + 1, 4, arg_10h_00, fcn.00408d23);\n        pcVar3 = *(unaff_EBP + 0x14);\n    }\n    uVar1 = *(unaff_EBP + 0xc);\n    extraout_ECX[2] = pcVar3;\n    pcVar3 = *(unaff_EBP + 8);\n    extraout_ECX[1] = arg_10h_00;\n    extraout_ECX[5] = pcVar3;\n    fcn.00408e8d(uVar1);\n    fcn.00408e8d(*(unaff_EBP + 0x10));\n    uVar1 = *(unaff_EBP + -0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x18);\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 574
    },
    "004210b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004210b8(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00408d37(0x104);\n    fcn.0040b220(uVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, unaff_retaddr, 0x104);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.00408c11(0xffffffff);\n    return;\n}\n",
        "token_count": 128
    },
    "00421438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.00421438(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (&var_104h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), *(arg_ch + 6), \n               *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), *(arg_ch + 0xd), \n               *(arg_ch + 0xe), *(arg_ch + 0xf), 0);\n    fcn.00408f6a(&var_104h);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 240
    },
    "004214ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004214ba(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.00421438(unaff_EBP + -0x10, *(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    piVar2 = fcn.0041fa72();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *(unaff_EBP + 0x10) = iVar3 + 0x10;\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.00421008(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"DllGetClassObject\");\n            if (pcVar4 == NULL) {\n                uVar5 = 0x800401f9;\n            }\n            else {\n                uVar5 = (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n            }\n            goto code_r0x0042153a;\n        }\n    }\n    uVar5 = 0x80040154;\ncode_r0x0042153a:\n    fcn.004089b7();\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 526
    },
    "00421bf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00421bf8(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x421dd6\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x00421cf3;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x00421cf3;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x00421cf3;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x00421cf3:\n                return 5;\n            case 0xb:\ncode_r0x00421cf3:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x00421cf3:\n                return 10;\n            default:\n                goto code_r0x00421cf3;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x421e3a\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x00421cf3;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x00421cf3;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x00421cf3;\n            case 0x3c:\n                goto code_r0x00421cf3;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00421d3f:\n        if (iVar1 == 1) {\ncode_r0x00421cf3:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x00421cf3:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00421d3f;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x00421cf3:\n            return 3;\n        }\n    }\ncode_r0x00421cf3:\n    return 1;\n}\n",
        "token_count": 1735
    },
    "0042517e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0042517e(code **param_1)\n\n{\n    fcn.00425d9d();\n    *param_1 = vtable.CScrollView.0;\n    fcn.0040b220(param_1 + 0x15, 0, 0x30);\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    return param_1;\n}\n",
        "token_count": 98
    },
    "004253eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004253eb(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint lpRect;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lpRect);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    uVar1 = fcn.0041d7d1();\n    fcn.00424ca7(arg_ch);\n    if ((*arg_ch != 0) && ((uVar1 & 0x200000) != 0)) {\n        *arg_8h = *arg_8h + *arg_ch;\n    }\n    if ((arg_ch[1] != 0) && ((uVar1 & 0x100000) != 0)) {\n        arg_8h[1] = arg_8h[1] + arg_ch[1];\n    }\n    if ((*arg_ch < *arg_8h) && (arg_ch[1] < arg_8h[1])) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 307
    },
    "004282d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004282d6(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00429b09(&var_10h, 1);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch + -2;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 168
    },
    "00428877": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428877(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x13c))(&var_10h, in_ECX[0x1f] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 190
    },
    "004288fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004288fe(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004039a0(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 57
    },
    "00428b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00428b64(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x27];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar2 = fcn.004288fe();\n            if ((iVar2 != 0) && (*(iVar2 + 0x88) == extraout_ECX)) {\n                *(iVar2 + 0x88) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x27]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004190c9();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00429bac();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 331
    },
    "0042ad9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ad9b(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.00408d37(arg_10h + arg_18h);\n    fcn.0040b380(arg_8h_00, arg_ch, arg_10h);\n    fcn.0040b380(arg_8h_00 + arg_10h, arg_14h, arg_18h);\n    fcn.00408abf(arg_10h + arg_18h);\n    return;\n}\n",
        "token_count": 157
    },
    "0042b27c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b27c(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x80);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x7c) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.0041b49a(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x1c));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x1c), 0, uVar3);\n            uVar3 = fcn.0042277c(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x42b2b4;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "0042b6a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b6a1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.0042b338(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.0041b49a(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x1c), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0042eb3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eb3e(uint param_1)\n\n{\n    fcn.00432908();\n    fcn.00433874(0x43047a);\n    fcn.00433565(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "0042eb62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042eb62(uint param_1)\n\n{\n    fcn.00432908();\n    fcn.00433874(0x43047a);\n    fcn.00433578(param_1);\n    return;\n}\n",
        "token_count": 54
    },
    "0042f02d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: lpmi\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_9ch_2\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_68h_2\n// WARNING: Variable defined which should be unmapped: hmenu\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: dy\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h_2\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_4h_2\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: item\n// WARNING: Variable defined which should be unmapped: var_10h_2\n\nuint __cdecl\nfcn.0042f02d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, uint noname_91, \n            uint noname_92, uint noname_93, uint noname_94, uint noname_95, uint noname_96, uint noname_97, \n            uint noname_98, uint noname_99, uint noname_100, uint noname_101, uint noname_102, uint noname_103, \n            uint noname_104, uint noname_105, uint noname_106, uint noname_107, uint noname_108, uint noname_109, \n            uint noname_110, uint noname_111, uint noname_112, uint noname_113, uint noname_114, uint noname_115, \n            uint noname_116, uint noname_117, uint noname_118, uint noname_119, uint noname_120, uint arg_8h, uint hWnd)\n\n{\n    uint *noname_1_00;\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_7_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    code **ppcVar8;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar9;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_8h;\n    uint item;\n    uint var_10h_2;\n    uint var_168h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_13ch;\n    uint lprcDst;\n    uint lprcSrc2;\n    uint var_cch;\n    uint var_9ch;\n    uint lprcSrc1;\n    uint var_70h;\n    uint var_68h;\n    uint var_48h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint noname_5_00;\n    char *noname_10_00;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint var_fch;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint var_ech;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint lpmi;\n    uint var_c8h;\n    uint var_c4h;\n    uint in_stack_ffffff3c;\n    uint var_bch;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint var_ach;\n    uint var_a8h;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint var_9ch_2;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint var_88h;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint var_7ch;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint var_68h_2;\n    uint hmenu;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint lprc;\n    uint dy;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h_2;\n    uint var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint var_38h;\n    uint var_34h_2;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint var_4h_2;\n    uint noname_97_00;\n    \n    noname_97_00 = 0x42f037;\n    fcn.0040bd7c();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar2 = fcn.0041fa72();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar3 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    noname_10_00 = \"ReBarWindow32\";\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    iVar4 = iVar4 + 1;\n    iVar3 = iVar4;\n    noname_7_00 = fcn.00408d37();\n    noname_1_00 = *(unaff_EBP + 0xc);\n    uVar7 = *noname_1_00;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    noname_5_00 = 0xffffffff;\n    fcn.00408c11();\n    noname_4_00 = *noname_1_00;\n    iVar5 = fcn.0041b4c1();\n    *(unaff_EBP + 0xc) = iVar5;\n    iVar6 = fcn.0040bce5(*(unaff_EBP + -0x10), \"ReBarWindow32\");\n    if ((iVar6 == 0) && (iVar5 != 0)) {\n        noname_3_00 = 0x43fee0;\n        iVar6 = fcn.0041f1bd();\n        if (iVar6 != 0) {\n            iVar6 = fcn.0041be1b();\n            if ((iVar6 != 0) && (*(unaff_EBP + -0x14) != iVar6)) {\n                uVar7 = fcn.0042f02d(*(unaff_EBP + 8), noname_1_00, *(unaff_EBP + 0x10), noname_3_00, noname_4_00, \n                                     noname_5_00, uVar7, noname_7_00, iVar4, iVar3, noname_10_00, unaff_EDI, unaff_ESI, \n                                     unaff_EBX, in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, \n                                     in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, \n                                     in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, in_stack_fffffed8, \n                                     in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4, in_stack_fffffee8, \n                                     in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4, in_stack_fffffef8, \n                                     in_stack_fffffefc, var_fch, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c\n                                     , var_ech, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                                     in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, lpmi, \n                                     var_c8h, var_c4h, in_stack_ffffff3c, var_bch, in_stack_ffffff44, in_stack_ffffff48\n                                     , in_stack_ffffff4c, var_ach, var_a8h, in_stack_ffffff58, in_stack_ffffff5c, \n                                     var_9ch_2, in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, \n                                     in_stack_ffffff70, var_88h, in_stack_ffffff78, in_stack_ffffff7c, var_7ch, \n                                     in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                     var_68h_2, hmenu, in_stack_ffffff9c, in_stack_ffffffa0, lprc, dy, var_50h, var_4ch\n                                     , var_48h_2, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, var_38h, var_34h_2, \n                                     var_30h, var_2ch, var_28h_2, var_24h_2, var_20h, var_1ch_2, var_18h_2, var_14h_2, \n                                     in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, var_4h_2, noname_97_00, \n                                     unaff_retaddr, var_8h, item, var_10h_2, noname_3, noname_4, noname_5, noname_6, \n                                     noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, noname_13, noname_14\n                                     , noname_15, noname_16, noname_17, noname_18, noname_19, noname_20, noname_21, \n                                     noname_22, noname_23);\n                goto code_r0x0042f50d;\n            }\n            fcn.0041f325();\n            *(unaff_EBP + -4) = 1;\n            piVar2 = fcn.0041fa72();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + 8) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 2;\n            piVar2 = fcn.0041fa72();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x18) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 3;\n            fcn.004223bc();\n            *(unaff_EBP + -4) = 4;\n            fcn.0042280b(*(unaff_EBP + -0x14));\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x15c) = 0x50;\n            *(unaff_EBP + -0x158) = 0x10;\n            (*pcVar1)();\n            (*pcVar1)(*(iVar5 + 0x1c), 0x409, noname_1_00[3], unaff_EBP + -0x78);\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"ToolbarWindow32\");\n            uVar7 = fcn.00408d37(iVar3 + 1, iVar3 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0x13c), uVar7);\n            fcn.00408c11();\n            uVar7 = fcn.0041b4c1();\n            *(unaff_EBP + -0x28) = uVar7;\n            iVar3 = fcn.0040bce5(*(unaff_EBP + -0x10), \"ToolbarWindow32\");\n            if ((iVar3 == 0) && (iVar3 = *(unaff_EBP + -0x28),  iVar3 != 0)) {\n                iVar4 = fcn.0041f1bd();\n                if (iVar4 != 0) {\n                    *(unaff_EBP + -0x70) = noname_1_00[6];\n                    *(unaff_EBP + -0x34) = noname_1_00 + 6;\n                    fcn.004226c4();\n                    fcn.00422688();\n                    iVar4 = fcn.00408a6c();\n                    *(unaff_EBP + -0x1c) = iVar4;\n                    do {\n                        iVar4 = iVar4 + -1;\n                        uVar7 = *(iVar3 + 0x1c);\n                        *(unaff_EBP + 0xc) = iVar4;\n                        (*pcVar1)(uVar7, 0x41d, iVar4, unaff_EBP + -0xdc);\n                        iVar5 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x10c, unaff_EBP + -0x78, unaff_EBP + -0xdc);\n                        if (iVar5 != 0) break;\n                    } while (iVar4 != 0);\n                    fcn.0040b220(unaff_EBP + -0xcc, 0, 0x30);\n                    *(unaff_EBP + -0xcc) = 0x30;\n                    iVar4 = fcn.00408aa6();\n                    iVar3 = *(unaff_EBP + -0x1c);\n                    uVar10 = *(unaff_EBP + 0xc);\n                    fcn.0040a9e0();\n                    *(unaff_EBP + -0x24) = &stack0xfffffe70;\n                    uVar9 = 0;\n                    fcn.0040b220(*(unaff_EBP + -0x24), 0, (iVar3 - uVar10) * 4);\n                    uVar7 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.0041f2b8(uVar7);\n                    fcn.004059a0(unaff_EBP + -0x9c);\n                    pcVar1 = _sym.imp.USER32.dll_CopyRect;\n                    *(unaff_EBP + -0x20) = 0;\n                    if (uVar10 < *(unaff_EBP + -0x1c)) {\n                        do {\n                            fcn.004273c2(*(unaff_EBP + 0xc), unaff_EBP + -0x30, unaff_EBP + -0x38, unaff_EBP + -0x2c);\n                            if ((*(unaff_EBP + -0x38) & 1) == 0) {\n                                *(unaff_EBP + -200) = 0x162;\n                                fcn.00408e21(*(unaff_EBP + -0x30));\n                                fcn.0041f9f0(unaff_EBP + -0x18, *(unaff_EBP + 8), 1, 10);\n                                ppcVar8 = fcn.00419ae3(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                piVar2 = *(unaff_EBP + -0x24) + uVar9 * 4;\n                                *piVar2 = ppcVar8;\n                                (*_sym.imp.COMCTL32.dll_ImageList_GetImageInfo)\n                                          (*(iVar4 + 4), *(unaff_EBP + -0x2c), unaff_EBP + -0xfc);\n                                (*pcVar1)(unaff_EBP + -0x58, unaff_EBP + -0xec);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + -0x58, -*(unaff_EBP + -0x58), -*(unaff_EBP + -0x54));\n                                fcn.00405970(unaff_EBP + -0x9c, *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c));\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.00422afa(*(unaff_EBP + -0x44), iVar3);\n                                *piVar2 = iVar3;\n                                (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.0042fbb9();\n                                fcn.00408a7f(unaff_EBP + -0x48, *(unaff_EBP + -0x2c), 0, 0, 1);\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.00422afa(*(unaff_EBP + -0x44), iVar3);\n                                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                                *piVar2 = iVar3;\n                                *(unaff_EBP + -0xa8) = *(unaff_EBP + -0x18);\n                                *(unaff_EBP + -0xbc) = *(unaff_EBP + -0x30);\n                                *(unaff_EBP + -0xc4) = 0x100;\n                                uVar9 = *(unaff_EBP + -0x20);\n                                *(unaff_EBP + -0xac) = *piVar2;\ncode_r0x0042f414:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + -100), *(unaff_EBP + 0xc), 1, unaff_EBP + -0xcc);\n                            }\n                            else if (uVar9 != 0) {\n                                *(unaff_EBP + -200) = 0x100;\n                                *(unaff_EBP + -0xc4) = 0x800;\n                                goto code_r0x0042f414;\n                            }\n                            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n                        } while (*(unaff_EBP + 0xc) < *(unaff_EBP + -0x1c));\n                    }\n                    (*pcVar1)(unaff_EBP + -0x88, *(unaff_EBP + -0x34));\n                    fcn.004226c4();\n                    fcn.0041a91c(0, *(unaff_EBP + -0x88), *(unaff_EBP + -0x7c), *(unaff_EBP + -0x14), 0);\n                    uVar10 = 0;\n                    **(unaff_EBP + 0x10) = 0;\n                    if (uVar9 != 0) {\n                        do {\n                            piVar2 = *(*(unaff_EBP + -0x24) + uVar10 * 4);\n                            if (piVar2 != NULL) {\n                                (**(*piVar2 + 4))();\n                            }\n                            uVar10 = uVar10 + 1;\n                        } while (uVar10 < uVar9);\n                    }\n                    *(unaff_EBP + -4) = 4;\n                    fcn.00422866();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.004227f2();\n                    fcn.004089b7();\n                    fcn.004089b7();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0042e95b();\n                    uVar7 = 1;\n                    goto code_r0x0042f50d;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.00422866();\n            *(unaff_EBP + -4) = 3;\n            fcn.004227f2();\n            fcn.004089b7();\n            fcn.004089b7();\n            *(unaff_EBP + -4) = 0;\n            fcn.0042e95b();\n        }\n    }\n    uVar7 = 0;\ncode_r0x0042f50d:\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 5881
    },
    "0042f5db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: ARG_0\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.0042f5db(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint ARG_0;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = *0x44bf78;\n    piVar1 = fcn.0041fa72();\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x34) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0041d7d1();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.004304fb(extraout_ECX + 0xc0);\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00430513(0x43ccfc);\n            fcn.00430513(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x43cd00, *(extraout_ECX + 0x54));\n                fcn.00430513(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00430513(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x43cd00, *(extraout_ECX + 0x54));\n                fcn.00430513(unaff_EBP + -0x30);\n            }\n            fcn.00430513(0x43ccfc);\n        }\n        fcn.004304fb();\n    }\n    fcn.0042636a(*(extraout_ECX + 0x1c), *(unaff_EBP + -0x34));\n    fcn.004089b7();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 607
    },
    "0042f802": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f802(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (arg_ch == 0) {\n        puVar3 = 0x43dedc;\n        do {\n            iVar2 = fcn.0042e351(*puVar3);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c), 0xffffffff);\n                iVar2 = fcn.004288c1(uVar1);\n                if (0 < iVar2) break;\n            }\n            if (((puVar3[1] ^ *(arg_8h + 0x7c)) & 0xf000) == 0) {\n                fcn.0042e351(*puVar3);\n            }\n            puVar3 = puVar3 + 2;\n        } while (puVar3 < 0x43defc);\n    }\n    fcn.00429580(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 262
    },
    "0042fb21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042fb21(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432908();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 57
    },
    "0042ff1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ff1b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 208
    },
    "0042ff67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ff67(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0042ff1b(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0042ff1b(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0042ff1b(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0042ff1b(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 204
    },
    "00431656": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00431656(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x70)) {\n        do {\n            fcn.00408c6b();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x70));\n    }\n    iVar2 = fcn.00431ad5(param_2, param_3);\n    if (iVar2 != 0) {\n        iVar2 = 0;\n        if (0 < *(param_1 + 0x70)) {\n            iVar1 = *(param_1 + 0x74) + 0x10;\n            do {\n                if (iVar1 != 0) {\n                    fcn.00408d23();\n                }\n                iVar1 = iVar1 + 0x14;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(param_1 + 0x70));\n        }\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 263
    },
    "004321fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004321fd(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x15];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x21] != NULL) {\n        (**(*extraout_ECX[0x21] + 0x18))(1);\n    }\n    iVar3 = fcn.00432908();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x44ecc4 != NULL) {\n            (**(**0x44ecc4 + 4))(1);\n            *0x44ecc4 = NULL;\n        }\n        if (*0x44ecc0 != NULL) {\n            (**(**0x44ecc0 + 4))(1);\n            *0x44ecc0 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1b] != NULL) {\n        fcn.00426462(extraout_ECX[0x1b]);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00426462(extraout_ECX[0x1c]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x23) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x23));\n    }\n    if (*(extraout_ECX + 0x8e) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x8e));\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 4))(1);\n    }\n    iVar3 = fcn.00432908();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x13]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0040a68c(extraout_ECX[0x13]);\n    fcn.0040a68c(extraout_ECX[0x14]);\n    fcn.0040a68c(extraout_ECX[0x17]);\n    fcn.0040a68c(extraout_ECX[0x18]);\n    fcn.0040a68c(extraout_ECX[0x19]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.00438e24();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 793
    },
    "0043292e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043292e(void)\n\n{\n    fcn.00432908();\n    fcn.00433874(0x43047a);\n    return;\n}\n",
        "token_count": 38
    },
    "00432e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432e30(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    iVar1 = fcn.004328f8();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x24) = 1;\n    return;\n}\n",
        "token_count": 200
    },
    "00432f01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432f01(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0040a68c(*(param_1 + 0x50));\n    uVar1 = fcn.0040c2ed(param_2);\n    *(param_1 + 0x50) = uVar1;\n    fcn.0040a68c(*(param_1 + 100));\n    uVar1 = fcn.0040c2ed(*(param_1 + 0x4c));\n    *(param_1 + 100) = uVar1;\n    return;\n}\n",
        "token_count": 143
    },
    "004331fb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004331fb(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch + arg_10h) {\n        arg_10h = iVar2 - arg_ch;\n    }\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.00408c4d();\n    }\n    else {\n        uVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n        fcn.004331e1(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 273
    },
    "00433664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433664(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint lpCriticalSection;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((arg_8h < 1) || (in_ECX[3] <= arg_8h)) goto code_r0x0043375e;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00433350(0x10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004335b6();\n        }\n        *(iVar2 + 8) = 0;\n        *(iVar2 + 0xc) = 0;\n        *(iVar2 + in_ECX[6]) = in_ECX[5];\n        in_ECX[5] = iVar2;\ncode_r0x004336df:\n        if (*(iVar2 + 0xc) == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(*(iVar2 + 0xc), in_ECX[3] << 2, 2);\n        }\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n            iVar3 = fcn.00417bb3();\n        }\n        *(iVar2 + 0xc) = iVar3;\n        fcn.0040b220(iVar3 + *(iVar2 + 8) * 4, 0, (in_ECX[3] - *(iVar2 + 8)) * 4);\n        *(iVar2 + 8) = in_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, iVar2);\n    }\n    else if ((*(iVar2 + 8) <= arg_8h) && (arg_ch != 0)) goto code_r0x004336df;\n    if ((*(iVar2 + 0xc) != 0) && (arg_8h < *(iVar2 + 8))) {\n        *(*(iVar2 + 0xc) + arg_8h * 4) = arg_ch;\n    }\ncode_r0x0043375e:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return;\n}\n",
        "token_count": 606
    },
    "00433c75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00433c75(int32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.0040bc2b(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 123
    },
    "00433cdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433cdb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n        fcn.004331e1((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.00408c4d();\n    }\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "004351f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004351f8(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*in_ECX + 0x138))();\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_CopyRect)(&var_10h, arg_ch);\n        uVar2 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        fcn.0041b49a(uVar2);\n        fcn.004226c4(&var_10h);\n        fcn.00422688(&var_10h);\n        piVar3 = fcn.0041d755(0xe900);\n        var_20h = in_ECX[0x46];\n        var_1ch = in_ECX[0x47];\n        var_18h = in_ECX[0x48];\n        var_14h = in_ECX[0x49];\n        (**(*piVar3 + 0x68))(&var_20h, 1);\n        var_10h = var_10h + (in_ECX[0x46] - var_20h);\n        var_ch = var_ch + (in_ECX[0x47] - var_1ch);\n        var_8h = var_8h + (in_ECX[0x48] - var_18h);\n        var_4h = var_4h + (in_ECX[0x49] - var_14h);\n        (**(*in_ECX + 0x18c))(&var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 452
    },
    "00435fba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00435fba(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    *(param_1 + 0x110) = param_2;\n    uVar1 = *(*(**(param_1 + 0x130) + 0x70) + 0x1e);\n    if (uVar1 < param_2) {\n        *(param_1 + 0x110) = uVar1;\n    }\n    uVar1 = *(*(**(param_1 + 0x130) + 0x70) + 0x1c);\n    if (*(param_1 + 0x110) < uVar1) {\n        *(param_1 + 0x110) = uVar1;\n    }\n    if (*(param_1 + 0x108) == 0) {\n        fcn.0041aace(1, *(param_1 + 0x110), 1);\n    }\n    if (unaff_ESI != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x10c) != 0) {\n            iVar2 = 0;\n            do {\n                *(*(param_1 + 0xac) + 0x18 + iVar2) = 0;\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x28;\n            } while (uVar1 < *(param_1 + 0x10c));\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x1c), 0, 1);\n    return;\n}\n",
        "token_count": 389
    },
    "00436c42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_44h\n\nuint __cdecl fcn.00436c42(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    piVar1 = fcn.0041be1b();\n    iVar2 = fcn.0041f1c8(0x43c67c, piVar1);\n    if (iVar2 == 0) {\n        piVar1 = fcn.00405930();\n    }\n    fcn.0040b220(unaff_EBP + -0x48, 0, 0x14);\n    uVar4 = *(extraout_ECX + 0x50);\n    *(unaff_EBP + -0x38) = piVar1;\n    *(unaff_EBP + -0x44) = uVar4;\n    *(unaff_EBP + -0x3c) = extraout_ECX;\n    piVar3 = fcn.0041f155();\n    if (piVar3 != NULL) {\n        iVar2 = *(unaff_EBP + 0x14);\n        piVar3[0x29] = iVar2;\n        (**(*piVar1 + 0x14c))(1, iVar2);\n        iVar2 = fcn.00419ae3(0xa0);\n        *(unaff_EBP + 0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.0042cc7f();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        piVar3[0x2a] = iVar2;\n        uVar4 = (**(*piVar1 + 0x13c))();\n        iVar2 = fcn.0041f1c8(0x440aa4, uVar4);\n        *(unaff_EBP + 0x10) = iVar2;\n        if (iVar2 == 0) {\n            iVar2 = (**(*piVar3[0x2a] + 0x168))(piVar1, *(unaff_EBP + 8), 0x2800, 0xe802);\n            if (iVar2 == 0) goto code_r0x00436d20;\n            *(piVar3[0x2a] + 0x54) = 1;\ncode_r0x00436e5b:\n            iVar2 = *piVar3;\n            *(unaff_EBP + -0x24) = 0;\n            *(unaff_EBP + -0x20) = 0;\n            *(unaff_EBP + -0x1c) = 0;\n            *(unaff_EBP + -0x18) = 0;\n            iVar2 = (**(iVar2 + 0x54))(0, 0, 0x50800000, unaff_EBP + -0x24, piVar1, 0xe900, unaff_EBP + -0x48);\n            if (iVar2 != 0) {\n                uVar4 = fcn.0042d27d();\n                *(*(unaff_EBP + 0x14) + 0xc) = uVar4;\n                (**(*piVar1 + 0x13c))();\n                piVar5 = fcn.0042d27d();\n                if (piVar5 != NULL) {\n                    (**(*piVar5 + 0x15c))(0, piVar5, piVar5);\n                }\n                iVar2 = fcn.00436211(*(unaff_EBP + 0xc));\n                if (iVar2 == 0) {\n                    fcn.00435b50();\n                }\n                else {\n                    fcn.0042d284(piVar3, 1);\n                    (*_sym.imp.USER32.dll_SendMessageA)(*(piVar3[0x2a] + 0x1c), 0x363, 1, 0);\n                    (**(*piVar1 + 0x144))(1);\n                    (*_sym.imp.USER32.dll_UpdateWindow)(piVar1[7]);\n                }\n                uVar4 = 1;\n                goto code_r0x00436f25;\n            }\n            (**(*piVar1 + 0x14c))(0, *(unaff_EBP + 0x14));\n        }\n        else {\n            piVar5 = fcn.0041f1c8(0x440a78, *(*(unaff_EBP + -0x10) + 0x50));\n            *(unaff_EBP + -0x14) = piVar5;\n            if (piVar5 != NULL) {\n                iVar2 = *(*(unaff_EBP + 0x10) + 0xf4);\n                *(unaff_EBP + -0x10) = iVar2;\n                if (iVar2 == 0) {\n                    *(unaff_EBP + -0x10) = *(*(unaff_EBP + 0x10) + 0xf0);\n                }\n                (**(*piVar5 + 0x110))(0);\n                if (*(unaff_EBP + -0x10) != 0) {\n                    iVar2 = (**(*piVar3[0x2a] + 0x168))(*(unaff_EBP + -0x10), *(unaff_EBP + 8), 0x2800, 0xe802);\n                    if (iVar2 != 0) {\n                        uVar4 = *(unaff_EBP + 0x10);\n                        *(piVar3[0x2a] + 0x54) = 1;\n                        fcn.00431a0c(uVar4);\n                        *(unaff_EBP + -0x10) = 0;\n                        *(unaff_EBP + 8) = 0;\n                        iVar2 = unaff_EBP + 8;\n                        *(unaff_EBP + -4) = 1;\n                        iVar6 = fcn.0040a185();\n                        if (iVar6 < 0) {\n                            iVar2 = unaff_EBP + 8;\n                            fcn.0040a159();\n                            *(unaff_EBP + -0x10) = 1;\n                        }\n                        piVar5 = *(unaff_EBP + 8);\n                        if (piVar5 != NULL) {\n                            (**(*piVar5 + 0x14))(piVar5, unaff_EBP + -0x34, iVar2);\n                            (**(**(unaff_EBP + -0x14) + 300))(unaff_EBP + -0x34, *(unaff_EBP + 8), *(unaff_EBP + -0x10))\n                            ;\n                            piVar5 = *(unaff_EBP + 8);\n                        }\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        *(*(unaff_EBP + 0x10) + 0x13c) = 1;\n                        if (piVar5 != NULL) {\n                            (**(*piVar5 + 8))(piVar5);\n                        }\n                        goto code_r0x00436e5b;\n                    }\n                }\n            }\ncode_r0x00436d20:\n            (**(*piVar1 + 0x14c))(0, *(unaff_EBP + 0x14));\n            if (piVar3[0x2a] != NULL) {\n                (**(*piVar3[0x2a] + 4))(1);\n            }\n            piVar3[0x2a] = 0;\n        }\n        piVar3[0x29] = 0;\n        (**(*piVar3 + 4))(1);\n    }\n    uVar4 = 0;\ncode_r0x00436f25:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 1961
    },
    "0043735a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0043735a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004334e4(0x4371ef);\n    while ((*(iVar1 + 4) == 0 &&\n           (iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(&stack0xffffffe0, 0, 0, 0, 0),  iVar2 != 0))) {\n        iVar2 = fcn.0041ee84();\n        if (iVar2 == 0) {\n            return false;\n        }\n    }\n    return *(iVar1 + 4) == 0;\n}\n",
        "token_count": 148
    },
    "00437da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437da0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = arg_ch * arg_10h;\n    iVar4 = iVar8 >> 0x20;\n    iVar1 = iVar8;\n    iVar7 = arg_14h * arg_18h;\n    iVar5 = iVar7 >> 0x20;\n    iVar9 = iVar8;\n    if ((iVar4 == 0 || iVar8 < 0) && (iVar8 < 0)) {\n        iVar9 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    iVar6 = 0;\n    while (iVar9 != 0) {\n        iVar9 = fcn.0040d610();\n        iVar6 = iVar6 + 1;\n    }\n    iVar2 = arg_8h;\n    if (arg_8h < 0) {\n        iVar2 = -arg_8h;\n    }\n    arg_ch = 0;\n    iVar9 = iVar2;\n    while (iVar9 != 0) {\n        iVar9 = fcn.0040d610();\n        arg_ch = arg_ch + 1;\n    }\n    iVar6 = iVar6 + arg_ch;\n    if ((iVar5 == 0 || iVar7 < 0) && (iVar7 < 0)) {\n        iVar7 = CONCAT44(-(iVar5 + (iVar7 != 0)), -iVar7);\n        iVar8 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    while (0x1f < iVar6) {\n        iVar8 = fcn.0040d610();\n        iVar7 = fcn.0040d610();\n        iVar1 = iVar6 + -2;\n        if (iVar6 + -1 < 0x20) break;\n        iVar8 = fcn.0040d610();\n        iVar7 = fcn.0040d610();\n        iVar6 = iVar6 + -3;\n        if (iVar1 < 0x20) break;\n        arg_8h = arg_8h >> 1;\n        iVar7 = fcn.0040d610();\n    }\n    iVar8 = fcn.0040c500(arg_8h, arg_8h >> 0x1f, iVar8);\n    if (iVar7 == 0) {\n        if ((iVar8 < 0x100000000) && (iVar8 < 0)) {\n            uVar3 = 0x80000000;\n        }\n        else {\n            uVar3 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar9 = fcn.0040d560(iVar7, 2, 0);\n        uVar3 = fcn.0040d560(iVar9 + iVar8, iVar7);\n    }\n    return uVar3;\n}\n",
        "token_count": 724
    },
    "00438bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438bdc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    nRightRect = param_1;\n    nBottomRect = param_1;\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(param_1 + 8), 10);\n    nRightRect = (*pcVar1)(*(param_1 + 8), 8);\n    nBottomRect = iVar2;\n    fcn.004388ec(&nRightRect);\n    (*_sym.imp.GDI32.dll_SetMapMode)(*(param_1 + 4), 1);\n    (*_sym.imp.GDI32.dll_SetWindowOrgEx)(*(param_1 + 4), 0, 0, 0);\n    (*_sym.imp.GDI32.dll_SetViewportOrgEx)(*(param_1 + 4), *(param_1 + 0x20), *(param_1 + 0x24), 0);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(*(param_1 + 4), 0xffffffff, 0xffffffff, nRightRect + 2, nBottomRect + 2);\n    fcn.00438ae4(0);\n    return;\n}\n",
        "token_count": 311
    },
    "00438eea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00438eea(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00432908();\n    fcn.00433ab7(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.0040bc2b(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00432908();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.00433b1a(1);\n    iVar2 = fcn.00432908();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x38),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0043292e();\n    if (*(iVar2 + 0x3c) != NULL) {\n        iVar4 = (**(**(iVar2 + 0x3c) + 0x138))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0x3c) = 0;\n        }\n    }\n    iVar2 = fcn.004328f8();\n    iVar4 = fcn.00432908();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00403ac0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ac0(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = *0x43b8f8;\n    *param_1 = 0x43bd68;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    *(param_1 + 8) = uVar1;\n    uVar1 = *0x43b8f8;\n    param_1[2] = 0xffffffff;\n    *(param_1 + 10) = uVar1;\n    return;\n}\n",
        "token_count": 154
    },
    "004191ba": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004191ba(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "00419558": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00419558(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 131
    },
    "00419945": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00419945(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 131
    },
    "0041da18": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041da18(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0041dcc4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dcc4(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "0041ed84": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0041ed84(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.004328f8();\n        iVar2 = fcn.004017c0(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "0041fbd7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0041fbd7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    uVar2 = *(pcVar1 + 4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040a536(uVar2, 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00419945(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00419945(4);\n    *(unaff_EBP + -4) = 2;\n    fcn.00419762(7, 0);\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    pcVar3 = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    extraout_ECX[0x17] = pcVar3;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 454
    },
    "00424c55": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00424c55(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0041aafe(0);\n    iVar3 = 0;\n    fcn.0041aace(0, unaff_retaddr, 1);\n    iVar2 = fcn.0041aafe(1);\n    fcn.0041aace(1, unaff_EDI, 1);\n    fcn.0041ac15(iVar1 - iVar3, iVar2 - unaff_retaddr, 0, 0);\n    return;\n}\n",
        "token_count": 156
    },
    "004324e5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004324e5(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00408d23();\n    fcn.00408d23();\n    fcn.00408d23();\n    fcn.00408d23();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "00432524": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432524(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.004089b7();\n    fcn.004089b7();\n    fcn.004089b7();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "004327ef": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004327ef(code **param_1, uchar param_2)\n\n{\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 238
    },
    "00434752": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434752(uint param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetMenuItemCount;\n    (*_sym.imp.USER32.dll_GetMenuItemCount)(param_3);\n    iVar2 = (*pcVar1)(unaff_retaddr);\n    pcVar1 = _sym.imp.USER32.dll_GetSubMenu;\njoined_r0x0043476f:\n    do {\n        do {\n            iVar2 = iVar2 + -1;\n            if (iVar2 < 0) {\n                return;\n            }\n            iVar3 = (*pcVar1)(param_1, iVar2);\n            iVar6 = 0;\n        } while (iVar3 == 0);\n        if (param_2 != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar3);\n            if (0 < iVar4) {\n                do {\n                    iVar5 = (*pcVar1)(iVar3, iVar6);\n                    if (iVar5 == param_2) {\n                        (*_sym.imp.USER32.dll_RemoveMenu)(iVar3, iVar6, 0x400);\n                        param_2 = 0;\n                        break;\n                    }\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < iVar4);\n            }\n            goto joined_r0x0043476f;\n        }\n        if (0 < unaff_ESI) {\n            do {\n                iVar4 = (*pcVar1)(unaff_retaddr, iVar6);\n                if (iVar4 == iVar3) {\n                    (*_sym.imp.USER32.dll_RemoveMenu)(param_1, iVar2, 0x400);\n                    break;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < unaff_ESI);\n        }\n    } while( true );\n}\n",
        "token_count": 457
    },
    "00417b3a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417b3a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0041f99a(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 100
    },
    "004190f5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004190f5(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.004192b4();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "004195df": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004195df(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar2 = fcn.00419537(param_2);\n    *param_3 = uVar2;\n    uVar2 = uVar2 % *(param_1 + 8);\n    *param_2 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (cVar1 = fcn.004304ae(puVar3 + 2, unaff_retaddr),  cVar1 != '\\0')) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 238
    },
    "004196d4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004196d4(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    fcn.00408c6b();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        fcn.00419b13(param_1[1]);\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    fcn.004192b4();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 232
    },
    "004197ae": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197ae(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.00419b13(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.004192b4();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 121
    },
    "00422945": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00422945(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint hWnd;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x1c);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.0042278a(uVar2);\n    if (iVar3 == 0) {\n        fcn.00422388();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 339
    },
    "004312b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004312b0(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.0042fb21();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "00437220": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t * fcn.00437220(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00408d23();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00419ae3(0xb8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 1;\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00417ce2(0, 0x40004, 0);\n    }\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = iVar2;\n    *(*(iVar2 + 0x70) + 0x1c) = 1;\n    *(*(*extraout_ECX + 0x70) + 0x1e) = 0xffff;\n    extraout_ECX[0xd] = -1;\n    extraout_ECX[8] = 0;\n    extraout_ECX[2] = 0;\n    extraout_ECX[3] = 0;\n    extraout_ECX[1] = 0;\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[5] = 1;\n    extraout_ECX[4] = 1;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 471
    },
    "00417b04": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.00417b04(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0041eb77();\n    iVar3 = fcn.00432908();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.0043455b(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x90))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != 0) {\n                (**(*piVar2[7] + 0x60))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.00438eea();\n    return uVar4;\n}\n",
        "token_count": 291
    },
    "00423560": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423560(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0041923e(param_2);\n    *(param_2 + 0x50) = param_1;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 72
    },
    "00423580": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423580(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041919b(param_2, 0);\n    fcn.0041915b(uVar1);\n    *(param_2 + 0x50) = 0;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 97
    },
    "0042b7e9": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b7e9(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.0042b6a1();\n    (**(**(param_1 + 0x68) + 0x134))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.0042f943(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 182
    },
    "00432f32": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00432f32(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x50), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 100), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 379
    },
    "0040a40b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a40b(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0040a3ab(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00422c81": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.00422c81(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.00422c37(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.00422c37(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.0042278a(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.0042278a(uVar2);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.00422ac8();\n            uVar2 = *(unaff_EBP + -0x60);\n            iVar4 = fcn.00409e63(uVar2, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.00422a71();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.00422afa(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    uVar2 = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.00422afa(uVar2, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.00422088(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.00422088(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.00422afa(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.0042ff1b(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.00422088(0xffffff);\n                            uVar2 = fcn.00422b4d(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00422b4d(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00422b4d(*(unaff_EBP + 0xc));\n                            fcn.00422088(*(unaff_EBP + -0x10));\n                        }\n                        fcn.00422afa(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        uVar2 = *(*(unaff_EBP + 8) + 4);\n                        fcn.00422afa(*(unaff_EBP + -0x38), uVar2);\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.00422ac8(uVar2);\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00422ac8();\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 0;\n    fcn.004227f2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004227f2();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1885
    },
    "00422f05": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n\nvoid __cdecl fcn.00422f05(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.0042278a(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.0042278a(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.0042278a(uVar2);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78);\n                if (iVar3 != 0) {\n                    fcn.00422ac8();\n                    iVar3 = fcn.00409e63(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                         *(unaff_EBP + -0x66), 0);\n                    pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                    if (iVar3 != 0) {\n                        uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x43e944);\n                        fcn.00422a71(uVar2);\n                        fcn.00409e42(unaff_EBP + -0x18);\n                        fcn.00422ac8();\n                        uVar2 = (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                        fcn.00422a71(uVar2);\n                        uVar2 = fcn.00422afa(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        *(unaff_EBP + 8) = uVar2;\n                        iVar3 = fcn.00422afa(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                        *(unaff_EBP + -0x10) = iVar3;\n                        if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                            uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                            uVar2 = fcn.00422088(uVar2);\n                            pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                            (*_sym.imp.GDI32.dll_BitBlt)\n                                      (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                       *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                            fcn.00422088(0xffffff);\n                            (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                            fcn.00422088(uVar2);\n                            if (*(unaff_EBP + 0xc) == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            iVar3 = fcn.00422afa(*(unaff_EBP + -0x2c), uVar2);\n                            *(unaff_EBP + 0xc) = iVar3;\n                            if (iVar3 == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = fcn.0042216f(*(unaff_EBP + 0x10));\n                                uVar4 = fcn.00422088(*(unaff_EBP + 0x14));\n                                *(unaff_EBP + 0x14) = uVar4;\n                                *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                                *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                                *(unaff_EBP + -0x60) = 0;\n                                *(unaff_EBP + -0x5c) = 0;\n                                (*_sym.imp.USER32.dll_FillRect)\n                                          (*(unaff_EBP + -0x2c), unaff_EBP + -0x60, *(unaff_EBP + -0x1c));\n                                fcn.0042216f(uVar2);\n                                fcn.00422088(*(unaff_EBP + 0x14));\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            fcn.00422afa(*(unaff_EBP + -0x2c), uVar2);\n                            fcn.00422afa(*(unaff_EBP + -0x4c), *(*(unaff_EBP + -0x10) + 4));\n                            fcn.00422afa(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.00422ac8();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00422ac8();\n    *(unaff_EBP + -4) = 1;\n    fcn.004227f2();\n    *(unaff_EBP + -4) = 0;\n    fcn.004227f2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004227f2();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2292
    },
    "00426a11": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426a11(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (*(*(param_1 + 0x60) + -0xc) == 0) {\n        fcn.00408e21(*(param_1 + 0x3c));\n    }\n    pcVar2 = _sym.imp.USER32.dll_LoadAcceleratorsA;\n    pcVar1 = _sym.imp.USER32.dll_LoadMenuA;\n    if ((*(param_1 + 0x44) != 0) && (*(param_1 + 0x2c) == 0)) {\n        iVar3 = fcn.00432908();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x2c) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x30) = uVar5;\n    }\n    if ((*(param_1 + 0x40) != 0) && (*(param_1 + 0x34) == 0)) {\n        iVar3 = fcn.00432908();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x40));\n        *(param_1 + 0x34) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x40));\n        *(param_1 + 0x38) = uVar5;\n    }\n    if ((*(param_1 + 0x48) != 0) && (*(param_1 + 0x24) == 0)) {\n        iVar3 = fcn.00432908();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x24) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x28) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00421008": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00421008(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.00408d37(0x104);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x43dae8, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    fcn.00408c11(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 399
    },
    "00432afe": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00432afe(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint lpSubKey)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint hKey;\n    uint var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint phkResult;\n    uint var_120h;\n    uint var_11ch;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x14) = *0x44bf78;\n    uVar1 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x10) = &phkResult;\n    phkResult = unaff_EDI;\n    var_120h = unaff_ESI;\n    var_11ch = unaff_EBX;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(*(unaff_EBP + 8), uVar1, unaff_EBP + -0x124);\n    if (iVar2 == 0) {\n        while( true ) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(*(unaff_EBP + -0x124), 0, unaff_EBP + -0x11c, 0x104);\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = unaff_EBP + -0x11c;\n            fcn.00408f6a(iVar2);\n            *(unaff_EBP + -4) = 1;\n            iVar2 = fcn.00432afe(*(unaff_EBP + -0x124), unaff_EBP + -0x120, iVar2, phkResult, var_120h, var_11ch, \n                                 in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0, \n                                 in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, in_stack_ffffff00, \n                                 in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                                 in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, \n                                 in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                                 in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                                 in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, \n                                 in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, \n                                 in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, in_stack_ffffff70, \n                                 in_stack_ffffff74, in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, \n                                 in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                 in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c, in_stack_ffffffa0, \n                                 in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, \n                                 in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, \n                                 in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, \n                                 in_stack_ffffffe4, var_14h_2, in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h);\n            *(unaff_EBP + -4) = 0;\n            fcn.004089b7();\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if ((iVar2 == 0x103) || (iVar2 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*(unaff_EBP + 8), **(unaff_EBP + 0xc));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x124));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 2236
    },
    "00432fc3": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00432fc3(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00432f32();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "0040ad32": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040ad32(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0040ee57();\n    piVar2 = *(iVar1 + 0x88);\n    while( true ) {\n        if (piVar2 == NULL) {\n            return 1;\n        }\n        if (*piVar2 == param_1) break;\n        piVar2 = piVar2[1];\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "0040ae64": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040ae64(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar4;\n    uint64_t uVar5;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar5 = fcn.0040f845();\n    arg_8h = uVar5 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((uVar5 & 0xfffff) == 0) && (param_1 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0040f82c();\n        }\n        if (*0x44eff0 == 0) {\n            uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_1, param_2);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fsin(extraout_ST0);\n        uVar1 = uVar5 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x441a7a) * *0x441a7a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fsin(fVar4);\n        }\n        if (*0x44eff0 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_1, param_2);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 618
    },
    "0040af14": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040af14(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar4;\n    uint64_t uVar5;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar5 = fcn.0040f845();\n    arg_8h = uVar5 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((uVar5 & 0xfffff) == 0) && (param_1 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0040f82c();\n        }\n        if (*0x44eff0 == 0) {\n            uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_1, param_2);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(extraout_ST0);\n        uVar1 = uVar5 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x441a7a) * *0x441a7a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x44eff0 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.0040f9a7(arg_8h, unaff_retaddr, param_1, param_2);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 618
    },
    "0040c318": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c318(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    \n    if (*(arg_8h + 8) == 0) {\n        uVar2 = fcn.00412380(arg_ch, arg_10h);\n    }\n    else {\n        puVar4 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040c36b:\n            do {\n                if (*puVar4 != 0) {\n                    uVar1 = *puVar4;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar3 = puVar4;\n                        if (uVar1 != *arg_ch) goto code_r0x0040c36a;\n                    }\n                    else if (((uVar1 != *arg_ch) || (puVar4[1] != arg_ch[1])) && (puVar3 = puVar4 + 1,  *puVar3 != 0)) {\ncode_r0x0040c36a:\n                        puVar4 = puVar3 + 1;\n                        goto code_r0x0040c36b;\n                    }\n                }\n                if (((*puVar4 != 0) || (((*(*arg_ch + 0x1d + arg_8h) & 4) != 0 && (arg_ch = arg_ch + 1,  *arg_ch == 0)))\n                    ) || (arg_ch = arg_ch + 1,  puVar4 = arg_10h,  *arg_ch == 0)) break;\n            } while( true );\n        }\n        uVar2 = -(*arg_ch != 0) & arg_ch;\n    }\n    return uVar2;\n}\n",
        "token_count": 437
    },
    "0040c3bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c3bb(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.004123c0(arg_ch, arg_10h);\n    }\n    else {\n        puVar3 = arg_ch;\n        puVar5 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040c40e:\n            do {\n                if (*puVar5 != 0) {\n                    uVar1 = *puVar5;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar4 = puVar5;\n                        if (uVar1 != *puVar3) goto code_r0x0040c40d;\n                    }\n                    else if (((uVar1 != *puVar3) || (puVar5[1] != puVar3[1])) && (puVar4 = puVar5 + 1,  *puVar4 != 0)) {\ncode_r0x0040c40d:\n                        puVar5 = puVar4 + 1;\n                        goto code_r0x0040c40e;\n                    }\n                }\n                if (((*puVar5 == 0) || (((*(*puVar3 + 0x1d + arg_8h) & 4) != 0 && (puVar3 = puVar3 + 1,  *puVar3 == 0)))\n                    ) || (puVar3 = puVar3 + 1,  puVar5 = arg_10h,  *puVar3 == 0)) break;\n            } while( true );\n        }\n        iVar2 = puVar3 - arg_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 457
    },
    "0040c459": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c459(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.00412410(arg_ch, arg_10h);\n    }\n    else {\n        puVar3 = arg_ch;\n        puVar5 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040c4ac:\n            do {\n                if (*puVar5 != 0) {\n                    uVar1 = *puVar5;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar4 = puVar5;\n                        if (uVar1 != *puVar3) goto code_r0x0040c4ab;\n                    }\n                    else if (((uVar1 != *puVar3) || (puVar5[1] != puVar3[1])) && (puVar4 = puVar5 + 1,  *puVar4 != 0)) {\ncode_r0x0040c4ab:\n                        puVar5 = puVar4 + 1;\n                        goto code_r0x0040c4ac;\n                    }\n                }\n                if (((*puVar5 != 0) || (((*(*puVar3 + 0x1d + arg_8h) & 4) != 0 && (puVar3 = puVar3 + 1,  *puVar3 == 0)))\n                    ) || (puVar3 = puVar3 + 1,  puVar5 = arg_10h,  *puVar3 == 0)) break;\n            } while( true );\n        }\n        iVar2 = puVar3 - arg_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 455
    },
    "0040c580": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c580(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040c534(0x4418e8, 0x14);\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        piVar1 = unaff_EBP + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) break;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) - *(unaff_EBP + 0xc);\n        (**(unaff_EBP + 0x14))();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c56f();\n    return;\n}\n",
        "token_count": 234
    },
    "0040d4e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d4e7(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040ee57();\n    *(iVar1 + 0xc) = param_1;\n    uVar2 = 0;\n    do {\n        if (param_1 == *(uVar2 * 8 + 0x44c0a8)) {\n            iVar1 = fcn.0040ee57();\n            *(iVar1 + 8) = *(uVar2 * 8 + 0x44c0ac);\n            return;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x2d);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        iVar1 = fcn.0040ee57();\n        *(iVar1 + 8) = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        iVar1 = fcn.0040ee57();\n        *(iVar1 + 8) = 8;\n        return;\n    }\n    iVar1 = fcn.0040ee57();\n    *(iVar1 + 8) = 0x16;\n    return;\n}\n",
        "token_count": 298
    },
    "0041919b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041919b(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x004191b1;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x004191b1:\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004192b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004192b4(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.00419b13(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004197f2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004197f2(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "0041982a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041982a(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "00419888": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00419888(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.004197d9(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 218
    },
    "00419ae3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00419ae3(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040a67a(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44b3a0 == NULL) break;\n        iVar1 = (**0x44b3a0)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 121
    },
    "00419b0e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00419b0e(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0040a67a(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44b3a0 == NULL) break;\n        iVar1 = (**0x44b3a0)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 122
    },
    "0041a970": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041a970(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.004089fe(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar3);\n                if (iVar2 == param_1) {\n                    iVar1 = fcn.0041f29e(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar2 = fcn.0041a970(iVar2, unaff_retaddr);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "0041b78a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b78a(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x1c),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.0041b49a(iVar5);\n    return uVar4;\n}\n",
        "token_count": 238
    },
    "0041b7ce": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b7ce(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0041b7ce(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0041b49a();\n            return;\n        }\n        iVar2 = fcn.0041b4c1(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0041b7ce(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0041b98d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041b98d(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0041b4c1(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 189
    },
    "0041bae4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041bae4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0041b3f7();\n    return;\n}\n",
        "token_count": 130
    },
    "0041be1b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041be1b(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x1c),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0041b49a(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[7];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 197
    },
    "0041c417": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041c417(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0041c3d2(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041b49a(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 151
    },
    "0041f1bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041f1bd(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (***param_1)();\n    if (param_2 != 0) {\n        for (; iVar1 != 0; iVar1 = *(iVar1 + 0x10)) {\n            if (iVar1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "004246eb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.004246eb(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00432908();\n    fcn.00433ab7(0);\n    for (puVar2 = *(iVar1 + 0x1c); puVar2 != NULL; puVar2 = puVar2[5]) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n    }\n    fcn.00433b1a(0);\n    return puVar2;\n}\n",
        "token_count": 148
    },
    "00425edd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00425edd(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.004328f8();\n    iVar1 = *(iVar3 + 0xe4);\n    while (iVar1 == extraout_ECX) {\n        puVar2 = *(iVar3 + 0xe8);\n        *(puVar2[1] + 0xe4) = *puVar2;\n        *(puVar2[1] + 0xe8) = puVar2[2];\n        puVar2[1] = 0;\n        iVar1 = *(iVar3 + 0xe4);\n    }\n    if (*(extraout_ECX + 0x50) != 0) {\n        fcn.00423580(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bcfc();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 329
    },
    "004264df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004264df(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 299
    },
    "004288c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004288c1(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.00409c4d(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x9c));\n    }\n    return -1;\n}\n",
        "token_count": 170
    },
    "00428bd6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00428bd6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            iVar1 = fcn.004288fe();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x9c));\n    }\n    return iVar2;\n}\n",
        "token_count": 146
    },
    "00429266": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429266(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            arg_8h = fcn.004288fe(iVar1);\n            if (arg_8h != 0) {\n                fcn.0042d363();\n                fcn.0042de9b(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x9c));\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0042aae2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042aae2(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x0042ab11;\n    iVar3 = fcn.0042aaa9();\n    if ((iVar3 == 0) && (iVar3 = fcn.00405930(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x0042ab11:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 485
    },
    "0042b82d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042b82d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x1c));\n        fcn.0041b49a(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.0041b49a(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.00438e08(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042b510(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042b510(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0042b544(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.0042b491(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0042b7e9();\n                        }\n                        else {\n                            fcn.0042b6e6();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.0041b49a(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.0042b6a1();\n    }\n    return 0;\n}\n",
        "token_count": 661
    },
    "0042cf57": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042cf57(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0041c3d2();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 78
    },
    "0042ee35": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042ee35(void)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042eb62();\n    iVar3 = fcn.004328f8();\n    ppcVar1 = *(iVar3 + 0xec);\n    while (ppcVar1 == extraout_ECX) {\n        puVar2 = *(iVar3 + 0xf0);\n        *(puVar2[1] + 0xec) = *puVar2;\n        *(puVar2[1] + 0xf0) = puVar2[2];\n        puVar2[1] = 0;\n        ppcVar1 = *(iVar3 + 0xec);\n    }\n    if (extraout_ECX[0x2e] != NULL) {\n        fcn.00419b13(extraout_ECX[0x2e]);\n    }\n    fcn.004089b7();\n    *(unaff_EBP + -4) = 0;\n    fcn.004191dd();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bcfc();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 393
    },
    "0042f7ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f7ac(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x43dee0) & 0xf000) == (*(arg_8h + 0x7c) & 0xf000)) {\n                fcn.0042e351(*(iVar1 * 8 + 0x43dedc));\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n    }\n    fcn.00429314(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 181
    },
    "00433578": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00433578(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_1;\n    uVar3 = 0;\n    if (iVar4 != 0) {\n        if (iVar4 == param_2) {\n            *param_1 = *(param_2 + param_1[1]);\n        }\n        else {\n            iVar1 = param_1[1];\n            do {\n                iVar2 = *(iVar1 + iVar4);\n                if (iVar2 == param_2) break;\n                iVar4 = iVar2;\n            } while (iVar2 != 0);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(iVar1 + iVar4) = *(iVar1 + param_2);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "00433601": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433601(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0041d4df": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0041d4df(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.00432908();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0041c644(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 263
    },
    "0041e840": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041e840(uint lpName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint noname_4;\n    uint uVar2;\n    uint in_ECX;\n    uint unaff_EBX;\n    uint noname_0;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint noname_3;\n    uint noname_5;\n    uint noname_6;\n    uint noname_7;\n    uint var_4h;\n    \n    noname_0 = 0;\n    iVar1 = fcn.00432908();\n    uVar2 = *(iVar1 + 0xc);\n    noname_7 = 5;\n    noname_5 = uVar2;\n    noname_6 = lpName;\n    noname_4 = (*_sym.imp.KERNEL32.dll_FindResourceA)();\n    noname_3 = uVar2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    if (iVar1 != 0) {\n        noname_0 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    }\n    uVar2 = fcn.0041e48b(noname_0, arg_ch, uVar2, noname_3, noname_4, noname_5, noname_6, noname_7, unaff_EDI, unaff_ESI\n                         , unaff_EBX, in_ECX, unaff_EBP, unaff_retaddr, lpName, arg_ch, in_stack_0000000c, \n                         in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 472
    },
    "0041e896": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0041e896(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.0041e815(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 75
    },
    "004091c7": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.004091c7(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x44ea34 != 0) {\n        return *0x44ea28 != 0;\n    }\n    *0x44ea38 = fcn.0040917a();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x44ea18 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x43d594),  *0x44ea18 != 0)) &&\n         (*0x44ea1c = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x44ea1c != 0)) &&\n        ((*0x44ea20 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x44ea20 != 0 &&\n         (*0x44ea24 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x44ea24 != 0)))) &&\n       ((*0x44ea2c = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x44ea2c != 0 &&\n        ((*0x44ea28 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x44ea28 != 0 &&\n         (*0x44ea30 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x44ea30 != 0)))))) {\n        *0x44ea34 = 1;\n        return true;\n    }\n    *0x44ea18 = 0;\n    *0x44ea1c = 0;\n    *0x44ea20 = 0;\n    *0x44ea24 = 0;\n    *0x44ea28 = 0;\n    *0x44ea2c = 0;\n    *0x44ea30 = 0;\n    *0x44ea34 = 1;\n    return false;\n}\n",
        "token_count": 471
    },
    "0040c126": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0040c126(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"mscoree.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_retaddr);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(unaff_retaddr);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 153
    },
    "0041a719": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0041a719(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t unaff_ESI;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x43d978);\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 334
    },
    "0042230c": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042230c(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00422342": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00422342(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 189
    },
    "0040a1b1": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a1b1(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_FindWindowA)(\"MouseZ\", \"Magellan MSWHEEL\");\n    pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n    uVar3 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"MSWHEEL_ROLLMSG\");\n    *arg_8h = uVar3;\n    iVar4 = (*pcVar1)(\"MSH_WHEELSUPPORT_MSG\");\n    *arg_ch = iVar4;\n    iVar4 = (*pcVar1)(\"MSH_SCROLL_LINES_MSG\");\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    *arg_10h = iVar4;\n    if (*arg_ch == 0) {\n        *arg_14h = 0;\n    }\n    else {\n        uVar3 = (*pcVar1)(uVar2, *arg_ch, 0, 0);\n        *arg_14h = uVar3;\n    }\n    if (*arg_10h == 0) {\n        *arg_18h = 3;\n    }\n    else {\n        uVar3 = (*pcVar1)(uVar2, *arg_10h, 0, 0);\n        *arg_18h = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 362
    },
    "004150a1": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004150a1(uint Locale)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    uchar var_6h;\n    uint var_4h;\n    \n    var_4h = *0x44bf78;\n    var_6h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 0x1004, &lpLCData, 6);\n    if (iVar1 != 0) {\n        fcn.0040c75e(&lpLCData);\n    }\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 137
    },
    "0043268e": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043268e(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0040a68c(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00420ae4": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00420ae4(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, param_2);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(param_2);\n        fcn.00421f63(uVar2);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00420b09": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.00420b09(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(unaff_retaddr);\n        fcn.00421f63(uVar2);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00433072": {
        "rules": [
            "query or enumerate registry value",
            "read .ini file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00433072(uint arg_8h, uint lpAppName, uint lpKeyName, uint lpDefault)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1020h;\n    uint var_101ch;\n    uint var_1018h;\n    uint hKey;\n    uint lpReturnedString;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.0040bd7c();\n    fcn.0040a9e0();\n    uVar4 = *0x44bf78;\n    *(unaff_EBP + -0x101c) = 0;\n    iVar2 = *(extraout_ECX + 0x50);\n    *(unaff_EBP + -0x10) = uVar4;\n    if (iVar2 == 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            *(unaff_EBP + 0x14) = 0x43dae8;\n        }\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), unaff_EBP + -0x1010, 0x1000, \n                   *(extraout_ECX + 100));\n        var_ch = unaff_EBP + -0x1010;\n    }\n    else {\n        iVar2 = fcn.00432fc3(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x1014) = iVar2;\n        if (iVar2 != 0) {\n            piVar3 = fcn.0041fa72();\n            iVar2 = (**(*piVar3 + 0xc))();\n            *(unaff_EBP + 0xc) = iVar2 + 0x10;\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (*pcVar1)(*(unaff_EBP + -0x1014), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x101c, 0, \n                              unaff_EBP + -0x1020);\n            *(unaff_EBP + -0x1018) = iVar2;\n            if (iVar2 == 0) {\n                uVar4 = fcn.00408d37(*(unaff_EBP + -0x1020), unaff_EBP + -0x1020);\n                uVar4 = (*pcVar1)(*(unaff_EBP + -0x1014), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x101c, uVar4);\n                *(unaff_EBP + -0x1018) = uVar4;\n                fcn.00408c11(0xffffffff);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x1014));\n            if (*(unaff_EBP + -0x1018) == 0) {\n                fcn.00408c4d(unaff_EBP + 0xc);\n            }\n            else {\n                fcn.00408f6a(*(unaff_EBP + 0x14));\n            }\n            fcn.004089b7();\n            goto code_r0x004331a6;\n        }\n        var_ch = *(unaff_EBP + 0x14);\n    }\n    fcn.00408f6a(var_ch);\ncode_r0x004331a6:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040bcd7();\n    return;\n}\n",
        "token_count": 928
    },
    "00433484": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00433484(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if ((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if ((iVar1 != 0) && (unaff_retaddr < *(iVar1 + 8))) {\n            uVar2 = *(*(iVar1 + 0xc) + unaff_retaddr * 4);\n            goto code_r0x004334bb;\n        }\n    }\n    uVar2 = 0;\ncode_r0x004334bb:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return uVar2;\n}\n",
        "token_count": 207
    }
}