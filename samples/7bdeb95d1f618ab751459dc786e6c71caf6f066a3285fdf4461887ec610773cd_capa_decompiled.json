{
    "00401000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    // [00] -r-x section size 12288 named .text\n    if (arg_14h == 0) {\n        iVar1 = *(arg_18h + 0x3c);\n        var_38h = 0;\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + var_38h) = *(arg_ch + var_38h);\n                var_38h = var_38h + 1;\n            } while (var_38h != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0xc);\n    iVar2 = *(arg_10h + 0x10);\n    iVar3 = *(arg_10h + 0x14);\n    var_24h = 0;\n    if (iVar2 != 0) {\n        do {\n            *(arg_8h + iVar1 + var_24h) = *(arg_ch + iVar3 + var_24h);\n            var_24h = var_24h + 1;\n        } while (var_24h != iVar2);\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "004010c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010c3(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 102
    },
    "00401218": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401218(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_8h;\n    \n    if (arg_ch == 0) {\n        *0x405314 = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x405324 = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 97
    },
    "00401394": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401394(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x405314 = 0;\n    *0x405324 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x405314 = 1;\n        }\n        else {\n            *0x405314 = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x405324 = arg_ch + 4;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004015a9)\n// WARNING: Removing unreachable block (ram,0x004015ae)\n// WARNING: Removing unreachable block (ram,0x004015c0)\n// WARNING: Removing unreachable block (ram,0x004015ca)\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nbool __cdecl entry0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401394(unaff_ESI, &stack0xfffffffc);\n    (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.00401522();\n    *0x405320 = arg_ch;\n    *0x405318 = arg_8h;\n    *0x40531c = unaff_retaddr;\n    fcn.00401406();\n    fcn.00401522();\n    iVar1 = fcn.00402951(_sym.imp.GDI32.dll_SetBkColor);\n    if (iVar1 == 0) {\n        fcn.004026be();\n        (*_sym.imp.GDI32.dll_GetCurrentObject)(0xab48f, 0xb3);\n        (*_sym.imp.GDI32.dll_SetColorSpace)(0xd97ede, 0x97f91);\n    }\n    else {\n        fcn.004012a4();\n        fcn.00401151();\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 469
    },
    "004016a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004016a1(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 73
    },
    "00401707": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00401707(void)\n\n{\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    int32_t var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6bh;\n    uint var_5ah;\n    ushort var_12h;\n    int32_t var_10h;\n    \n    var_80h = &var_6bh;\n    var_10h = 0x6ee52f70;\n    var_12h = 0x32f9;\n    fcn.00401869(var_80h, 0x4041fc, 0xe);\n    var_88h = 0;\n    var_84h = &var_5ah;\n    do {\n        if (*var_80h == '\\0') {\n            *var_84h = 0;\n            break;\n        }\n        *var_84h = *var_80h;\n        var_84h = var_84h + 2;\n        var_88h = var_88h + 1;\n        var_80h = var_80h + 1;\n    } while (var_88h != 0x6ee52f81 - var_10h);\n    fcn.004021f8(&var_5ah, 0);\n    return;\n}\n",
        "token_count": 336
    },
    "00401869": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401869(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_1ch = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_1ch) = *(arg_ch + var_1ch) - *((var_1ch & 7) + 0x404296);\n            var_1ch = var_1ch + 1;\n        } while (var_1ch != arg_10h);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "004018cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Removing unreachable block (ram,0x0040195f)\n\nint32_t __cdecl fcn.004018cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iStack48;\n    uint var_8h;\n    \n    iStack48 = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + iStack48) = *(arg_ch + iStack48);\n            iStack48 = iStack48 + 1;\n        } while (iStack48 != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 161
    },
    "004019f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00401b49)\n\nbool fcn.004019f0(void)\n\n{\n    uint arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    uint var_ch;\n    \n    arg_ch = fcn.0040250b();\n    fcn.004021f8(0, arg_ch);\n    pcVar1 = fcn.00402df4();\n    bVar3 = false;\n    if (pcVar1 != NULL) {\n        (*pcVar1)();\n        iVar2 = *(in_FS_OFFSET + 0x18);\n        if (iVar2 == 0) {\n            iVar2 = -1;\n        }\n        bVar3 = *(iVar2 + 0x34) != 0xc1;\n    }\n    return bVar3;\n}\n",
        "token_count": 205
    },
    "00401c71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00401c71(int32_t arg_8h)\n\n{\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_10h = fcn.00403050;\n    if (arg_8h == 0) {\n        for (; ((var_1ch = var_10h,  *var_10h != 0x5a4d || (*(var_10h + *(var_10h + 0x3c)) != 'P')) ||\n               (*(var_10h + *(var_10h + 0x3c) + 1) != 'E')); var_10h = var_10h + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_1ch = fcn.004021f8(arg_8h, 0);\n    }\n    return var_1ch;\n}\n",
        "token_count": 240
    },
    "00401f61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nint32_t __cdecl fcn.00401f61(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint16_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    iVar4 = fcn.0040250b();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_3ch = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_40h = 0;\n        do {\n            var_4ch = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_40h * 4) + var_4ch);\n                cVar2 = *(arg_8h + var_4ch);\n                if (cVar1 == '\\0') break;\n                var_4ch = var_4ch + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && var_4ch < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_3ch * 4);\n            }\n            var_40h = var_40h + 1;\n            var_3ch = var_3ch + 1;\n        } while (var_40h < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 552
    },
    "004020b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004020b9(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    code *pcVar2;\n    int32_t arg_8h_01;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_10h;\n    \n    var_10h = 0x369e89fa;\n    fcn.00401869(&var_30h, 0x404222, 0xe);\n    var_40h = 0;\n    if (var_30h == 'V') {\n        arg_8h_00 = fcn.00401707();\n        pcVar2 = fcn.00402e3f(arg_8h_00, &var_30h);\n        var_40h = 0;\n        if (0xff < pcVar2) {\n            arg_8h_01 = (*pcVar2)(0, 0x17000, 0x1000, 0x40);\n            var_40h = 0;\n            if (arg_8h_01 != 0) {\n                iVar1 = 0x365e89fa - var_10h;\n                fcn.0040284b(arg_8h_01, arg_ch);\n                *(arg_8h + 0x54) = arg_8h_01;\n                *(arg_8h + 0x58) = arg_8h_01 + iVar1;\n                var_40h = arg_8h_01 + 0x2a70;\n            }\n        }\n    }\n    return var_40h;\n}\n",
        "token_count": 424
    },
    "004021f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint32_t * __cdecl fcn.004021f8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_FS_OFFSET;\n    bool bVar4;\n    uint var_4dh;\n    int32_t *var_45h;\n    uint var_40h;\n    uint var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    iVar2 = *(*(iVar2 + 0x30) + 0xc);\n    piVar3 = iVar2 + 0x14;\n    unique0x00007a00 = *(iVar2 + 0x14);\n    if (unique0x00007a00 != piVar3) {\n        do {\n            if (arg_ch != NULL && stack0xffffffb8[4] == arg_ch) {\n                return stack0xffffffb8 + -2;\n            }\n            if (arg_8h != 0) {\n                var_34h = 0;\n                if (*(stack0xffffffb8 + 9) >> 1 != 0) {\n                    do {\n                        iVar1 = *(stack0xffffffb8[10] + var_34h * 2);\n                        if (iVar1 - 0x41U < 0x1a) {\n                            iVar1 = iVar1 + 0x20;\n                        }\n                        bVar4 = *(arg_8h + var_34h * 2) == iVar1;\n                        var_34h = var_34h + 1;\n                    } while ((bVar4 && iVar1 != 0) && var_34h < *(stack0xffffffb8 + 9) >> 1);\n                    if (bVar4) {\n                        return stack0xffffffb8[4];\n                    }\n                }\n            }\n            unique0x00007a00 = *stack0xffffffb8;\n        } while (unique0x00007a00 != piVar3);\n    }\n    return NULL;\n}\n",
        "token_count": 554
    },
    "0040250b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040250b(void)\n\n{\n    uint var_9ch;\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint *var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6eh;\n    uint var_28h;\n    uint32_t var_14h;\n    uint var_dh;\n    \n    var_80h = &var_28h;\n    var_dh._0_1_ = 0x5c;\n    var_14h = 0x61e66c9c;\n    fcn.00401869(var_80h, 0x4041f1, 0xb);\n    var_88h = 0;\n    var_84h = &var_6eh;\n    do {\n        if (*var_80h == '\\0') {\n            *var_84h = 0;\n            break;\n        }\n        *var_84h = *var_80h;\n        var_84h = var_84h + 2;\n        var_88h = var_88h + 1;\n        var_80h = var_80h + 1;\n    } while (var_88h != (var_14h ^ 0x61e66c88));\n    fcn.004021f8(&var_6eh, 0);\n    return;\n}\n",
        "token_count": 360
    },
    "00402617": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402617(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 79
    },
    "0040263c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.0040263c(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar2 = fcn.0040250b();\n    iVar3 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar3 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar4 = true;\n    if (uVar1 != 5) {\n        bVar4 = 0x549352b9 < *(iVar3 + 8) && uVar1 < 6;\n    }\n    return bVar4;\n}\n",
        "token_count": 246
    },
    "004026be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool fcn.004026be(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    code *var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_8ch;\n    uint var_58h;\n    int32_t var_54h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_11h;\n    uint32_t var_10h;\n    \n    var_10h = 0x1fcd77d2;\n    var_11h = 0x95;\n    fcn.00401d0f(&var_9ch);\n    var_58h = var_9ch;\n    var_54h = var_10h + 0xe0339e2e;\n    var_20h = *0x405314;\n    var_1ch = *0x405318;\n    var_18h = *0x40531c;\n    var_24h = *0x405320;\n    var_28h = *0x405324;\n    for (var_ach = fcn.00403050;\n        ((var_40h = var_ach,  *var_ach != 0x5a4d ||\n         (iVar2 = var_ach + *(var_ach + 0x3c),  *(var_ach + *(var_ach + 0x3c)) != 'P')) || (*(iVar2 + 1) != 'E'));\n        var_ach = var_ach + -0x1000 & (var_10h ^ 0xe03287d2)) {\n    }\n    iVar3 = 0;\n    if (*(iVar2 + 1) == 'E') {\n        iVar3 = iVar2;\n    }\n    var_3ch = *(iVar3 + 0x50);\n    pcVar1 = fcn.004020b9(&var_8ch, var_94h);\n    if (pcVar1 != NULL) {\n        (*pcVar1)(&var_8ch);\n    }\n    return pcVar1 != NULL;\n}\n",
        "token_count": 559
    },
    "0040284b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nvoid __cdecl fcn.0040284b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (iVar1 = arg_ch + *(arg_ch + 0x3c),  *(arg_ch + *(arg_ch + 0x3c)) == 'P')) &&\n       (iVar1 != 0 && *(iVar1 + 1) == 'E')) {\n        if (*(iVar1 + 6) != 0) {\n            var_30h = iVar1 + 0x18 + *(iVar1 + 0x14);\n            var_2ch = 0;\n            do {\n                fcn.00401000(arg_8h, arg_ch, var_30h, var_2ch, iVar1 + 0x18);\n                var_30h = var_30h + 0x28;\n                var_2ch = var_2ch + 1;\n            } while (var_2ch < *(iVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "00402951": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402951(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0040237c(arg_8h);\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040263c();\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.004019f0();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 146
    },
    "00402e3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402e3f(uint arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    ushort uStack120;\n    ushort uStack118;\n    int32_t iStack116;\n    uint32_t uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint32_t uStack100;\n    uint uStack96;\n    uchar auStack92 [36];\n    uint32_t uStack56;\n    int32_t iStack52;\n    uint uStack44;\n    uint uStack40;\n    ushort uStack34;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint var_ch;\n    \n    uStack28 = 0;\n    uStack32 = 0x7c35cce1;\n    uStack34 = 0x1808;\n    uStack40 = 0x208babfd;\n    iStack52 = 0;\n    uStack56 = 0x5ab443fa;\n    uStack44 = 0;\n    if (arg_ch != 0) {\n        fcn.00401869(auStack92, 0x40420a, 0x18);\n        pcVar2 = fcn.00401f61(auStack92);\n        uStack44 = 0;\n        if (pcVar2 != NULL) {\n            piStack104 = &iStack116;\n            uVar3 = (uStack56 * 0x25591bb8 >> 0x20) + iStack52 * 0x25591bb8;\n            bVar1 = (uStack32 ^ 0x651424a3) < uStack56 * 0x25591bb8;\n            if (uVar3 != uStack28) {\n                bVar1 = uStack28 < uVar3;\n            }\n            uStack44 = 0;\n            if (bVar1) {\n                iStack116 = arg_ch;\n                uStack100 = 0;\n                uVar3 = uStack100;\n                do {\n                    uStack100 = uVar3;\n                    uStack112 = uStack100;\n                    uVar3 = uStack100 + 1;\n                } while (*(arg_ch + uStack100) != '\\0');\n                uStack120 = uStack100;\n                uStack96 = 0;\n                if ((uStack100 & 0xffff) != 0) {\n                    uStack108 = 0;\n                    uStack118 = uStack120;\n                    uStack100 = uStack100 + 1;\n                    (*pcVar2)(arg_8h, &uStack120, 0, &uStack108);\n                    uStack96 = uStack108;\n                }\n                uStack44 = uStack96;\n            }\n        }\n    }\n    return uStack44;\n}\n",
        "token_count": 636
    },
    "0040237c": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Removing unreachable block (ram,0x00402422)\n// WARNING: Removing unreachable block (ram,0x0040243b)\n// WARNING: Removing unreachable block (ram,0x004024c2)\n\nbool __cdecl fcn.0040237c(char *arg_8h)\n\n{\n    char cVar1;\n    bool bStack38;\n    uint var_bp_4h;\n    \n    cVar1 = *arg_8h;\n    while( true ) {\n        if (cVar1 != -1) {\n            bStack38 = false;\n            if ((cVar1 == -0x48) && (bStack38 = false,  arg_8h[3] == 'P')) {\n                bStack38 = arg_8h[4] == -0x33;\n            }\n            return bStack38;\n        }\n        if (arg_8h[1] != '%') break;\n        arg_8h = **(arg_8h + 2);\n        cVar1 = *arg_8h;\n    }\n    return false;\n}\n",
        "token_count": 249
    },
    "00401b62": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b62(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 4;\n    var_24h = 0;\n    do {\n        for (uVar2 = *(var_24h + 0x404263); uVar2 < arg_10h; uVar2 = uVar2 + 0x33) {\n            uVar1 = var_20h + uVar2;\n            uVar3 = uVar2 & 3;\n            if (2 < var_20h) {\n                uVar3 = uVar2 % 0x32;\n            }\n            *(arg_8h + uVar2) = *(arg_ch + uVar2) - *(uVar3 + 0x404230);\n            var_20h = uVar1;\n        }\n        var_24h = var_24h + 1;\n    } while (var_20h != 0 && var_24h < 0x33);\n    return;\n}\n",
        "token_count": 368
    },
    "00401406": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401406(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    int32_t var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    \n    var_10h = 0x4c38359a;\n    (*_sym.imp.KERNEL32.dll_GetFileTime)(0x6a139d, &var_20h, &var_18h, &var_28h);\n    var_1f0h = 0;\n    do {\n        (*_sym.imp.USER32.dll_GetMenu)(0x42a67c);\n        iVar2 = var_10h + -0x4c38359a;\n        iVar3 = var_1f0h + 1;\n        iVar1 = (*_sym.imp.USER32.dll_IsCharLowerA)(var_1f0h + (var_10h ^ 0xd3));\n        if (iVar1 != iVar2) {\n            return;\n        }\n        (*_sym.imp.USER32.dll_GetListBoxInfo)(0x497646);\n        (*_sym.imp.KERNEL32.dll_GetDynamicTimeZoneInformation)(&var_1d8h);\n        var_1f0h = iVar3;\n    } while (iVar3 < 0xa7);\n    return;\n}\n",
        "token_count": 404
    },
    "00401d0f": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401d47)\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00401d0f(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    code *pcVar3;\n    int32_t arg_8h_01;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    int32_t iStack116;\n    uint32_t uStack108;\n    int32_t iStack104;\n    int32_t iStack84;\n    uchar auStack72 [16];\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint var_ch;\n    \n    iStack24 = 0x33b7b15b;\n    iStack84 = 0;\n    iStack104 = 0;\n    do {\n        iStack84 = (*(iStack104 * 0x48 + 0x405078) ^ *(iStack104 * 0x48 + 0x405074)) + iStack84;\n        iStack104 = iStack104 + 1;\n    } while (iStack104 != 10);\n    uVar6 = 0xe;\n    iStack32 = iStack84;\n    fcn.00401869(auStack72, 0x404222, 0xe);\n    arg_8h_00 = fcn.00401707();\n    pcVar3 = fcn.00402e3f(arg_8h_00, auStack72);\n    piVar5 = 0x1000;\n    iStack116 = 0;\n    arg_8h_01 = (*pcVar3)(0, iStack32, 0x1000, iStack24 + -0x33b7b157, 0x33b7b15b - iStack24, uVar6, arg_8h);\n    iStack44 = 0;\n    do {\n        iStack56 = *(iStack116 * 0x48 + 0x405070);\n        uVar1 = *(iStack116 * 0x48 + 0x405078);\n        uVar2 = *(iStack116 * 0x48 + 0x405074);\n        uVar4 = uVar2 ^ uVar1;\n        iStack52 = iStack44 + arg_8h_01;\n        uStack108 = 0;\n        if (uVar1 != uVar2) {\n            do {\n                *(iStack52 + uStack108) = *(iStack56 + uStack108);\n                uStack108 = uStack108 + 1;\n            } while (uStack108 != uVar4);\n        }\n        iStack44 = uVar4 + iStack44;\n        iStack116 = iStack116 + 1;\n    } while (iStack116 != 10);\n    fcn.00401b62(arg_8h_01, arg_8h_01, uStack48);\n    *piVar5 = arg_8h_01 + 0x4975;\n    piVar5[1] = uStack40 ^ 0x33b6a75b;\n    piVar5[2] = arg_8h_01 + 0xa3;\n    piVar5[3] = 0x48a0;\n    return 0x33b7b15b - uStack40;\n}\n",
        "token_count": 803
    },
    "004021b6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nint32_t __cdecl fcn.004021b6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_5h;\n    \n    iVar2 = arg_8h + *(arg_8h + 0x3c);\n    if (*(arg_8h + *(arg_8h + 0x3c)) != 'P') {\n        return 0;\n    }\n    iVar1 = 0;\n    if (*(iVar2 + 1) == 'E') {\n        iVar1 = iVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "0040110a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040110a(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00401869(&var_20h, 0x4042af, 0x10);\n    arg_8h = fcn.00401707();\n    fcn.00402e3f(arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 103
    },
    "00401151": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004011f6)\n\nvoid fcn.00401151(void)\n\n{\n    char16_t *pcVar1;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack12;\n    \n    uStack12 = 0x3c40a7e;\n    uStack20 = 0;\n    uStack24 = 0x42666c84;\n    (*_sym.imp.GDI32.dll_SetTextJustification)(0x2b2ec5, 0x68d, 0x68d);\n    uStack28 = 0xddc;\n    pcVar1 = L\"!NMdu7%aKhVC02^q?94\";\n    (*_sym.imp.KERNEL32.dll_FindNLSString)\n              (0xdae, 0x5f5, L\"!NMdu7%aKhVC02^q?94\", 0x5b7, L\"!NMdu7%aKhVC02^q?94\", 0xddc, &uStack28);\n    (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(pcVar1, 0xe0d1d9);\n    return;\n}\n",
        "token_count": 269
    },
    "00401522": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401522(void)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(0x58fbee);\n    var_4h = 0x5c0;\n    (*_sym.imp.KERNEL32.dll_GetNumberOfConsoleInputEvents)(0x7a62af, &var_4h);\n    (*_sym.imp.USER32.dll_GetLastActivePopup)(0x79c39f);\n    return uVar1;\n}\n",
        "token_count": 134
    },
    "004016bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004016bb(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_ch = -1;\n    if ((iVar1 != 0) && (var_ch = iVar1,  iVar1 == 1)) {\n        var_ch = 0;\n    }\n    return var_ch;\n}\n",
        "token_count": 118
    },
    "00401814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401814(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 141
    },
    "004019a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n\nint32_t __cdecl fcn.004019a2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    var_14h = 0;\n    iVar1 = var_14h;\n    do {\n        var_14h = iVar1;\n        iVar1 = var_14h + 1;\n    } while (*(arg_8h + var_14h) != '\\0');\n    return var_14h;\n}\n",
        "token_count": 149
    },
    "004024ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024ed(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401707();\n    fcn.00402e3f(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "00402df4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402df4(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    var_4h = 0x70927815;\n    fcn.00401869(&var_24h, 0x40429f, 0x10);\n    arg_8h = fcn.00401707();\n    fcn.00402e3f(arg_8h, &var_24h);\n    return;\n}\n",
        "token_count": 116
    },
    "004029b3": {
        "rules": [
            "access the Windows event log"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid fcn.004029b3(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uchar *unaff_EDI;\n    int32_t in_GS_OFFSET;\n    uint8_t uVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = &stack0xfffffffc < 0x14;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_ReportEventW)();\n    piVar1 = unaff_ESI + 0x7d6a686;\n    *piVar1 = (*piVar1 - unaff_EBX) - uVar3;\n    if (*piVar1 != 0) {\n        unaff_EDI[in_GS_OFFSET + iVar2 + 0x6d] = unaff_EDI[in_GS_OFFSET + iVar2 + 0x6d] & extraout_CH;\n        *0xfa3daec6 = iVar2 + 0x4d;\n        *unaff_EDI = iVar2 + 0x4d;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar3 = 0;\n    LOCK();\n    iVar2 = (*_sym.imp.USER32.dll_EqualRect)();\n    piVar1 = unaff_ESI + 0x7d6a686;\n    *piVar1 = (*piVar1 - unaff_EBX) - uVar3;\n    *0xfa3daec6 = iVar2 + 0x4d;\n    if (*piVar1 != 0) {\n        unaff_EDI[in_GS_OFFSET + iVar2 + 0x6d] = unaff_EDI[in_GS_OFFSET + iVar2 + 0x6d] & extraout_CH_00;\n        *unaff_EDI = *0xfa3daec6;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    *unaff_EDI = *0xfa3daec6;\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 512
    }
}