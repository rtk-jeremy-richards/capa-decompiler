{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_ch;\n    \n    uVar5 = *0x44e854;\n    // [00] -r-x section size 36864 named .text\n    iVar1 = *0x44e7fc;\n    if (arg_ch == 0xf) {\n        uVar5 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_74h);\n        var_24h = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_34h);\n        iVar3 = var_28h;\n        var_28h = 0;\n        while( true ) {\n            if (iVar3 <= var_30h) break;\n            iVar6 = iVar3 - var_30h;\n            var_20h = (((*(iVar1 + 0x50) >> 8 & 0xff) * iVar6 + (*(iVar1 + 0x54) >> 8 & 0xff) * var_30h) / iVar3 & 0xffU\n                      ) << 8 | (*(iVar1 + 0x50) * iVar6 + *(iVar1 + 0x54) * var_30h) / iVar3 & 0xffU |\n                      (((*(iVar1 + 0x54) >> 0x10 & 0xffU) * var_30h + (*(iVar1 + 0x50) >> 0x10 & 0xffU) * iVar6) / iVar3\n                      & 0xffU) << 0x10;\n            uVar4 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_24h);\n            var_28h = var_28h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar5, &var_34h, uVar4);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar4);\n            var_30h = var_30h + 4;\n        }\n        if (*(iVar1 + 0x58) != -1) {\n            iVar3 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar1 + 0x34));\n            if (iVar3 != 0) {\n                var_34h = 0x10;\n                var_30h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar5, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar5, *(iVar1 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(uVar5, iVar3);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar5, 0x44e85c, 0xffffffff, &var_34h, 0x820);\n                (*pcVar2)(uVar5, uVar4);\n                (*_sym.imp.GDI32.dll_DeleteObject)(iVar3, extraout_ECX);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_74h);\n        uVar5 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = uVar5;\n        }\n        uVar5 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar5;\n}\n",
        "token_count": 971
    },
    "0040164f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040164f(void)\n\n{\n    uint *in_EAX;\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    char *pcVar3;\n    char *pcVar4;\n    code *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t *arg_10h;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t iVar15;\n    char cVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    bool bVar21;\n    int64_t iVar22;\n    ulong uVar23;\n    uint in_stack_fffffe1c;\n    uint in_stack_fffffe20;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint lptstrFilename;\n    int32_t lpszLongPath;\n    uint var_18ch;\n    int32_t var_180h;\n    uint var_17ch;\n    int32_t var_178h;\n    int32_t var_174h;\n    uint var_170h;\n    uint var_166h;\n    uint var_154h;\n    int32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t lpLastWriteTime;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    char *var_24h;\n    int32_t *hKey;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    var_180h = *0x44e854;\n    ppiVar2 = *0x418004;\n    puVar20 = &fcn.0040164f::var_40h;\n    for (iVar14 = 7; iVar14 != 0; iVar14 = iVar14 + -1) {\n        *puVar20 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar20 = puVar20 + 1;\n    }\n    iVar14 = var_38h * 0x2000;\n    iVar15 = iVar14 + 0x459000;\n    *0x40e000 = &fcn.0040164f::var_3ch;\n    iVar17 = var_3ch * 0x2000;\n    pcVar6 = iVar17 + 0x459000;\n    if (0x41 < var_40h - 2U) {\ncode_r0x004037d3:\n        uVar19 = 0;\n        goto code_r0x004037d9;\n    }\n    // switch table (66 cases) at 0x40b004\n    switch(*((var_40h - 2U) * 4 + 0x40b004)) {\n    case 0x4016ba:\ncode_r0x00401cb1:\n        fcn.00406bb6(in_stack_fffffe1c, in_stack_fffffe20);\n        return 0x7fffffff;\n    case 0x4016ca:\n        *0x45285c = *0x45285c + 1;\n        if (*0x44e854 != 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            return 0x7fffffff;\n        }\n        return 0x7fffffff;\n    case 0x4016f5:\n        iVar14 = fcn.0040160f(var_3ch);\n        uVar19 = fcn.004037eb(iVar14 + -1, 0);\n        return uVar19;\n    case 0x401718:\n        uVar19 = 0;\n        fcn.00406bb6(var_3ch, 0);\n        break;\n    case 0x401731:\n        iVar15 = fcn.00401463();\n        iVar14 = 1;\n        if (0 < iVar15) {\n            iVar14 = iVar15;\n        }\n        uVar19 = 0;\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar14);\n        break;\n    case 0x401753:\n        uVar19 = 0;\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x44e854);\n        break;\n    case 0x40176a:\n        if (var_34h == 0) {\n            *(var_3ch * 4 + 0x44e784) = *(var_3ch * 4 + 0x44e7bc);\n            uVar13 = fcn.00401463();\n            *(var_3ch * 4 + 0x44e7bc) = uVar13;\n            uVar19 = 0;\n        }\n        else {\n            *(var_3ch * 4 + 0x44e7bc) = *(var_3ch * 4 + 0x44e784);\n            uVar19 = 0;\n        }\n        break;\n    case 0x4017ab:\n        uVar19 = *(var_34h * 4 + 0x44e7bc);\n        uVar12 = (&fcn.0040164f::var_3ch)[uVar19 == 0];\n        *(var_34h * 4 + 0x44e7bc) = uVar19 & lpLastWriteTime;\n        return uVar12;\n    case 0x4017cf:\n        uVar19 = 0;\n        fcn.00407751(pcVar6, *(var_38h * 4 + 0x44e7bc));\n        break;\n    case 0x4017eb:\n        if (*0x452860 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x452860, var_38h);\n        }\n        uVar19 = 0;\n        if (*0x452864 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x452864, var_3ch);\n        }\n        break;\n    case 0x40182a:\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar13, var_38h);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x401855:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        pcVar6 = fcn.00407490(uVar13);\n        pcVar5 = _sym.imp.KERNEL32.dll_CreateDirectoryA;\n        if (pcVar6 != NULL) {\n            do {\n                pcVar6 = fcn.004073f4(pcVar6, 0x5c);\n                cVar16 = *pcVar6;\n                *pcVar6 = '\\0';\n                uVar23 = (*pcVar5)(uVar13, 0);\n                uVar9 = uVar23 >> 0x20;\n                if (uVar23 == 0) {\n                    iVar14 = (*_sym.imp.KERNEL32.dll_GetLastError)(uVar9, uVar9);\n                    if (iVar14 == 0xb7) {\n                        uVar12 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar13);\n                        uVar19 = uVar19 + ((uVar12 & 0x10) == 0);\n                    }\n                    else {\n                        uVar19 = uVar19 + 1;\n                    }\n                }\n                *pcVar6 = cVar16;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar16 != '\\0');\n        }\n        if (var_38h == 0) {\n            fcn.00401630(0xfffffff5);\n        }\n        else {\n            fcn.00401630(0xffffffe6);\n            uVar9 = fcn.00407815(0x485000, uVar13);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar13, uVar9);\n        }\n        break;\n    case 0x40193a:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.00407c08(uVar13);\n        lpLastWriteTime = var_38h;\n        goto joined_r0x00401f73;\n    case 0x40194e:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar13, uVar9);\n        if (iVar14 == 0) {\n            uVar19 = 1;\n            if ((var_34h != 0) && (iVar14 = fcn.00407c08(uVar13),  iVar14 != 0)) {\n                uVar19 = 0;\n                fcn.00407d4a(uVar13, uVar9);\n                fcn.00401630(0xffffffe4);\n            }\n        }\n        else {\n            uVar19 = 0;\n            fcn.00401630(0xffffffe3);\n        }\n        break;\n    case 0x4019da:\n        pcVar6 = fcn.00401414();\n        iVar17 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(pcVar6, 0x2000, iVar15, &fcn.0040164f::var_24h);\n        if (iVar17 == 0) {\n            *(iVar14 + 0x459000) = 0;\ncode_r0x00401a59:\n            uVar19 = 1;\n        }\n        else {\n            uVar19 = 0;\n            if ((pcVar6 < var_24h) && (*var_24h != '\\0')) {\n                iVar17 = fcn.00407c08(pcVar6);\n                if (iVar17 == 0) {\n                    *(iVar14 + 0x459000) = 0;\n                    goto code_r0x00401a59;\n                }\n                fcn.00407815(var_24h, iVar17 + 0x2c);\n            }\n        }\n        if (var_34h == 0) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(iVar15, iVar15, 0x2000);\n        }\n        break;\n    case 0x401a8b:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar13, 0, 0x2000, pcVar6, &fcn.0040164f::var_24h);\n        if (iVar14 == 0) {\n            *(iVar17 + 0x459000) = 0;\n            uVar19 = 1;\n        }\n        break;\n    case 0x401adc:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.00407636(pcVar6, uVar13);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x401b02:\n        uVar13 = fcn.00401414();\n        uVar19 = var_3ch & 7;\n        iVar14 = fcn.00407462(uVar13);\n        if (iVar14 == 0) {\n            uVar23 = fcn.00407815(0x40e004, 0x485000);\n            uVar8 = uVar23 >> 0x20;\n            uVar9 = fcn.004073ae(uVar23);\n            fcn.00407848(uVar9, uVar13, uVar8);\n        }\n        else {\n            fcn.00407815(0x40e004, uVar13);\n        }\n        uVar9 = fcn.00407853(0x40e004);\n        if (2 < uVar19) {\n            iVar14 = fcn.00407c08(0x401b7e);\n            iVar22 = extraout_ECX << 0x20;\n            if (iVar14 != 0) {\n                iVar22 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar14 + 0x14);\n            }\n            uVar9 = iVar22 >> 0x20;\n            uVar19 = (iVar22 & (uVar19 - 3 | 0x80000000)) == 0;\n        }\n        if (uVar19 != 0) {\n            iVar14 = (uVar19 != 1) + 1;\n            goto code_r0x00401bce;\n        }\n        do {\n            uVar9 = 0x40e004;\n            fcn.004075a8(0x40e004);\n            iVar14 = 2;\ncode_r0x00401bce:\n            iVar14 = fcn.004075da(0x40e004, 0x40000000, iVar14);\n            if (iVar14 != -1) {\n                fcn.00406bb6(0xffffffea, uVar13);\n                *0x44e7f0 = *0x44e7f0 + 1;\n                iVar15 = fcn.00403a93(var_34h, iVar14, 0, 0);\n                *0x44e7f0 = *0x44e7f0 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_2ch != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (iVar14, &fcn.0040164f::lpLastWriteTime, 0, &fcn.0040164f::lpLastWriteTime);\n                }\n                uVar19 = 0;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14);\n                if (-1 < iVar15) goto code_r0x004037d9;\n                if (iVar15 == -2) {\n                    fcn.00407927(0x40e004, 0xffffffe9);\n                    fcn.00407848(uVar9, uVar13, 0x40e004);\n                }\n                else {\n                    fcn.00407927(0x40e004, 0xffffffee);\n                }\n                uVar13 = 0x40e004;\n                goto code_r0x00402c26;\n            }\n            if (uVar19 != 0) {\n                fcn.00406bb6(0xffffffe2, uVar13);\n                uVar19 = uVar19 == 2;\n                goto code_r0x004037d9;\n            }\n            fcn.00407815(0x412004, 0x459000);\n            fcn.00407815(0x459000, 0x40e004);\n            fcn.00407927(0x410004, var_28h);\n            fcn.00407815(0x459000, 0x412004);\n            iVar14 = fcn.0040733a(0x410004, var_3ch >> 3);\n        } while (iVar14 == 4);\n        if (iVar14 != 5) {\n            in_stack_fffffe20 = 0x40e004;\n            in_stack_fffffe1c = 0xfffffffa;\n            goto code_r0x00401cb1;\n        }\n        *0x44e7c4 = *0x44e7c4 + 1;\n        goto code_r0x004037df;\n    case 0x401d9a:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        fcn.00407feb(uVar13, var_38h);\n        break;\n    case 0x401db9:\n        uVar19 = 1;\n        uVar13 = fcn.00401414();\n        uVar12 = fcn.0040733a(uVar13, var_3ch);\n        if (uVar12 != 0) {\n            if (uVar12 == var_34h) {\n                return lpLastWriteTime;\n            }\n            uVar19 = 0;\n            if (uVar12 == var_2ch) {\n                return var_28h;\n            }\n        }\n        break;\n    case 0x401dfd:\n        uVar13 = fcn.00401414();\n        fcn.00407feb(uVar13, var_38h);\n        uVar19 = 0;\n        break;\n    case 0x401e1f:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        uVar13 = fcn.0040783d(uVar13);\n        fcn.00407751(pcVar6, uVar13);\n        break;\n    case 0x401e47:\n        lpszLongPath = fcn.00401463();\n        iVar14 = fcn.00401463();\n        iVar15 = fcn.00401414();\n        *(iVar17 + 0x459000) = 0;\n        if ((lpszLongPath != 0) || (uVar19 = 0,  var_34h == 0)) {\n            iVar10 = fcn.0040783d(iVar15);\n            if (iVar14 < 0) {\n                uVar19 = 0;\n                iVar14 = iVar14 + iVar10;\n                if (iVar14 < 0) break;\n            }\n            if (iVar10 < iVar14) {\n                iVar14 = iVar10;\n            }\n            uVar19 = 0;\n            uVar13 = fcn.00407815(pcVar6, iVar15 + iVar14);\n            if (lpszLongPath != 0) {\n                if (lpszLongPath < 0) {\n                    iVar14 = fcn.0040783d(pcVar6, uVar13);\n                    lpszLongPath = lpszLongPath + iVar14;\n                    if (-1 < lpszLongPath) goto code_r0x00401f0b;\n                    lpszLongPath = 0;\n                }\n                else {\ncode_r0x00401f0b:\n                    uVar19 = 0;\n                    if (0x1fff < lpszLongPath) break;\n                }\n                uVar19 = 0;\n                *(lpszLongPath + 0x459000 + iVar17) = 0;\n            }\n        }\n        break;\n    case 0x401f3e:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        if (var_2ch == 0) {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar13, uVar9);\n        }\n        goto joined_r0x00401f73;\n    case 0x401f7e:\n        uVar13 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(uVar13, pcVar6, 0x2000);\n        if ((iVar14 == 0) ||\n           ((uVar19 = 0,  var_34h != 0 && (iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar13, pcVar6),  iVar14 == 0))))\n        {\n            *(iVar17 + 0x459000) = 0;\n            uVar19 = 1;\n        }\n        *(iVar17 + 0x45afff) = 0;\n        break;\n    case 0x401fe3:\n        uVar19 = fcn.00401463();\n        uVar12 = fcn.00401463();\n        if (var_28h != 0) {\n            if (uVar19 < uVar12) {\n                return lpLastWriteTime;\n            }\n            if (uVar19 <= uVar12) {\n                return var_34h;\n            }\n            return var_2ch;\n        }\n        if (uVar19 < uVar12) {\n            return lpLastWriteTime;\n        }\n        if (uVar19 <= uVar12) {\n            return var_34h;\n        }\n        return var_2ch;\n    case 0x402022:\n        uVar19 = 0;\n        uVar12 = fcn.00401463();\n        uVar1 = fcn.00401463();\n        if (0xc < lpLastWriteTime) goto code_r0x004020b3;\n    // switch table (13 cases) at 0x40b10c\n        switch(*(lpLastWriteTime * 4 + 0x40b10c)) {\n        case 0x40204c:\n            uVar12 = uVar12 + uVar1;\n            break;\n        case 0x402050:\n            uVar12 = uVar12 - uVar1;\n            break;\n        case 0x402054:\n            uVar12 = uVar12 * uVar1;\n            break;\n        case 0x402059:\n            if (uVar1 == 0) {\ncode_r0x004020ac:\n                uVar12 = 0;\n                uVar19 = 1;\n                goto code_r0x004020b3;\n            }\n            uVar12 = uVar12 / uVar1;\n            break;\n        case 0x402066:\n            uVar12 = uVar12 | uVar1;\n            break;\n        case 0x40206a:\n            uVar12 = uVar12 & uVar1;\n            break;\n        case 0x40206e:\n            uVar12 = uVar12 ^ uVar1;\n            break;\n        case 0x402072:\n            bVar21 = uVar12 == 0;\n            goto code_r0x0040207e;\n        case 0x402079:\n            bVar21 = (uVar1 | uVar12) != 0;\ncode_r0x0040207e:\n            uVar12 = bVar21;\n            break;\n        case 0x402083:\n            uVar12 = uVar1 != 0 && uVar12 != 0;\n            break;\n        case 0x402095:\n            if (uVar1 == 0) goto code_r0x004020ac;\n            uVar12 = uVar12 % uVar1;\n            break;\n        case 0x4020a2:\n            uVar12 = uVar12 << (uVar1 & 0x1f);\n            break;\n        case 0x4020a6:\n            uVar12 = uVar12 >> (uVar1 & 0x1f);\n        }\n        uVar19 = 0;\ncode_r0x004020b3:\n        fcn.00407751(pcVar6, uVar12);\n        break;\n    case 0x4020c6:\n        uVar19 = 0;\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401463();\n        (*_sym.imp.USER32.dll_wsprintfA)(pcVar6, uVar13, uVar9);\n        break;\n    case 0x4020f4:\n        if (var_34h == 0) {\n            if (var_38h == 0) {\n                uVar19 = 0;\n                ppiVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x2004);\n                fcn.00407927(ppiVar2 + 1, var_3ch);\n                *ppiVar2 = *0x418004;\n                *0x418004 = ppiVar2;\n            }\n            else {\n                uVar19 = 1;\n                if (*0x418004 != NULL) {\n                    uVar19 = 0;\n                    fcn.00407815(pcVar6, *0x418004 + 1);\n                    *0x418004 = *ppiVar2;\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar2, pcVar6);\n                }\n            }\n        }\n        else {\n            do {\n                var_34h = var_34h - 1;\n                if (ppiVar2 == NULL) goto code_r0x00402c05;\n                ppiVar2 = *ppiVar2;\n            } while (var_34h != 0);\n            if (ppiVar2 == NULL) goto code_r0x00402c05;\n            uVar19 = 0;\n            fcn.00407815(0x40e004, ppiVar2 + 1);\n            fcn.00407815(ppiVar2 + 1, *0x418004 + 1);\n            fcn.00407815(*0x418004 + 1, 0x40e004);\n        }\n        break;\n    case 0x4021e5:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        if ((var_28h & 1) != 0) {\n            uVar13 = fcn.00401414();\n        }\n        if ((var_28h & 2) != 0) {\n            uVar9 = fcn.00401414();\n        }\n        if (var_40h == 0x21) {\n            uVar8 = fcn.00401463();\n            uVar7 = fcn.00401463();\n            if (var_28h >> 2 == 0) {\n                var_24h = (*_sym.imp.USER32.dll_SendMessageA)(uVar8, uVar7, uVar13, uVar9);\n                goto code_r0x004022ea;\n            }\n            iVar14 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                               (uVar8, uVar7, uVar13, uVar9, 0, var_28h >> 2, &fcn.0040164f::var_24h);\n            uVar19 = iVar14 == 0;\n        }\n        else {\n            pcVar4 = fcn.00401414();\n            pcVar3 = fcn.00401414();\n            if (*pcVar3 == '\\0') {\n                pcVar3 = NULL;\n            }\n            if (*pcVar4 == '\\0') {\n                pcVar4 = NULL;\n            }\n            var_24h = (*_sym.imp.USER32.dll_FindWindowExA)(uVar13, uVar9, pcVar4, pcVar3);\ncode_r0x004022ea:\n            uVar19 = 0;\n        }\n        if (-1 < var_3ch) {\n            fcn.00407751(pcVar6, var_24h);\n        }\n        break;\n    case 0x402312:\n        uVar13 = fcn.00401463();\n        iVar14 = (*_sym.imp.USER32.dll_IsWindow)(uVar13);\n        lpLastWriteTime = var_38h;\njoined_r0x00401f73:\n        if (iVar14 == 0) {\n            return var_34h;\n        }\n        return lpLastWriteTime;\n    case 0x402337:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(uVar9, uVar13);\n        fcn.00407751(pcVar6, uVar13);\n        uVar19 = 0;\n        break;\n    case 0x402371:\n        uVar19 = 0;\n        iVar14 = *0x44e828 + var_38h;\n        uVar13 = fcn.00401463();\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar13, 0xffffffeb, iVar14);\n        break;\n    case 0x40239f:\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x44e854, var_38h);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar13, &fcn.0040164f::var_180h);\n        uVar9 = fcn.00401414(extraout_ECX_00, extraout_ECX_00);\n        uVar19 = 0;\n        uVar9 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar9, 0, var_34h * var_178h, var_174h * var_34h, 0x10);\n        iVar14 = (*_sym.imp.USER32.dll_SendMessageA)(uVar13, 0x172, 0, uVar9);\n        if (iVar14 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar14);\n        }\n        break;\n    case 0x40244a:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(*0x44e854);\n        uVar13 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13, 0x5a);\n        uVar9 = fcn.00401463(extraout_ECX_01, extraout_ECX_01);\n        *0x418008 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar9, uVar13, 0x48);\n        *0x418008 = -*0x418008;\n        *0x418018 = fcn.00401463();\n        *0x41801f = 1;\n        *0x41801c = var_2ch & 1;\n        *0x41801e = var_2ch & 4;\n        *0x41801d = var_2ch & 2;\n        fcn.00407927(0x418024, var_38h);\n        uVar13 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x418008, uVar13);\n        uVar19 = 0;\n        fcn.00407751(pcVar6, uVar13);\n        break;\n    case 0x402507:\n        uVar13 = fcn.00401463();\n        uVar9 = fcn.00401463();\n        if (lpLastWriteTime == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n            uVar19 = 0;\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar13, uVar9);\n            uVar19 = 0;\n        }\n        break;\n    case 0x402545:\n        pcVar6 = fcn.00401414();\n        uVar13 = fcn.00401414();\n        pcVar4 = fcn.00401414();\n        fcn.00401414();\n        fcn.00401630(0xffffffec);\n        if (*pcVar4 == '\\0') {\n            pcVar4 = NULL;\n        }\n        if (*pcVar6 == '\\0') {\n            pcVar6 = NULL;\n        }\n        iVar14 = (*_sym.imp.SHELL32.DLL_ShellExecuteA)(var_180h, pcVar6, uVar13, pcVar4, 0x485000, lpLastWriteTime);\n        uVar19 = iVar14 < 0x21;\n        break;\n    case 0x4025c7:\n        pcVar4 = fcn.00401414();\n        fcn.00406bb6(0xffffffeb, pcVar4);\n        uVar19 = 1;\n        iVar14 = fcn.0040727c(pcVar4);\n        pcVar5 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (iVar14 != 0) {\n            if (var_34h == 0) {\ncode_r0x0040265a:\n                uVar19 = 0;\n                pcVar6 = pcVar4;\n            }\n            else {\n                while( true ) {\n                    uVar23 = (*pcVar5)(iVar14, 100, var_3ch);\n                    var_3ch = uVar23 >> 0x20;\n                    if (uVar23 != 0x102) break;\n                    fcn.00408298(0xf);\n                }\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(iVar14, &fcn.0040164f::var_24h);\n                if (-1 < var_38h) {\n                    fcn.00407751(iVar15, var_24h);\n                    pcVar4 = var_24h;\n                    goto code_r0x0040265a;\n                }\n                uVar19 = var_24h != NULL;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14, pcVar6);\n        }\n        break;\n    case 0x402678:\n        uVar13 = fcn.00401414();\n        iVar10 = fcn.00407c08(uVar13);\n        if (iVar10 == 0) {\n            uVar19 = 1;\n            *(iVar17 + 0x459000) = 0;\n            *(iVar14 + 0x459000) = 0;\n        }\n        else {\n            fcn.00407751(iVar15, *(iVar10 + 0x14));\n            fcn.00407751(pcVar6, *(iVar10 + 0x18));\n            uVar19 = 0;\n        }\n        break;\n    case 0x4026de:\n        uVar19 = 1;\n        uVar13 = fcn.00401414();\n        iVar10 = sub.VERSION.dll_GetFileVersionInfoSizeA(uVar13, &fcn.0040164f::hKey);\n        *(iVar17 + 0x459000) = 0;\n        *(iVar14 + 0x459000) = 0;\n        if ((iVar10 != 0) && (iVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar10),  iVar14 != 0)) {\n            iVar17 = sub.VERSION.dll_GetFileVersionInfoA(uVar13, 0, iVar10, iVar14);\n            if ((iVar17 != 0) &&\n               (iVar17 = sub.VERSION.dll_VerQueryValueA\n                                   (iVar14, 0x40b000, &fcn.0040164f::var_24h, &fcn.0040164f::var_1ch),  iVar17 != 0)) {\n                uVar19 = 0;\n                fcn.00407751(pcVar6, *(var_24h + 8));\n                fcn.00407751(iVar15, *(var_24h + 0xc));\n            }\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar14);\n        }\n        break;\n    case 0x4027d9:\n        if (*0x44e7f4 < 0) {\n            fcn.00401630(0xffffffe7);\n            uVar19 = 1;\n        }\n        else {\n            uVar13 = fcn.00401414();\n            uVar9 = fcn.00401414();\n            if (((var_2ch == 0) || (iVar14 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar13),  iVar14 == 0)) &&\n               (iVar14 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar13, 0, 8),  iVar14 == 0)) {\n                uVar19 = 1;\n                fcn.00401630(0xfffffff6);\n            }\n            else {\n                pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar14, uVar9);\n                if (pcVar5 == NULL) {\n                    uVar19 = 1;\n                    fcn.00406bb6(0xfffffff7, uVar9);\n                }\n                else if (var_34h == 0) {\n                    uVar19 = 0;\n                    (*pcVar5)(var_180h, 0x2000, 0x459000, 0x418004, 0x40a000);\n                }\n                else {\n                    fcn.00401630(var_34h);\n                    iVar15 = (*pcVar5)(uVar9, var_34h, uVar13);\n                    uVar19 = iVar15 != 0;\n                }\n                if ((lpLastWriteTime == 0) && (iVar15 = fcn.00404727(iVar14),  iVar15 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar14);\n                }\n            }\n        }\n        break;\n    case 0x40290a:\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar8 = fcn.00401414();\n        pcVar6 = fcn.00401414();\n        uVar7 = fcn.00401414();\n        iVar14 = fcn.00407462(uVar9);\n        if (iVar14 == 0) {\n            fcn.00401414(iVar17);\n        }\n        iVar14 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x40bae0, 0, 1, 0x40cdc0, &fcn.0040164f::var_1ch);\n        if (-1 < iVar14) {\n            iVar14 = (***var_1ch)(var_1ch, 0x40c880, &fcn.0040164f::hKey);\n            if (-1 < iVar14) {\n                iVar14 = (**(*var_1ch + 0x50))(var_1ch, uVar9);\n                (**(*var_1ch + 0x24))(var_1ch, 0x485000);\n                uVar19 = var_2ch >> 8 & 0xff;\n                if (uVar19 != 0) {\n                    (**(*var_1ch + 0x3c))(var_1ch, uVar19);\n                }\n                (**(*var_1ch + 0x34))(var_1ch, var_2ch >> 0x10);\n                if (*pcVar6 != '\\0') {\n                    (**(*var_1ch + 0x44))(var_1ch, pcVar6, var_2ch & 0xff);\n                }\n                (**(*var_1ch + 0x2c))(var_1ch, uVar8);\n                uVar9 = (**(*var_1ch + 0x1c))(var_1ch, uVar7);\n                if (-1 < iVar14) {\n                    iVar14 = -0x7fffbffb;\n                    uVar9 = 0;\n                    iVar15 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar13, 0xffffffff, 0x418044, 0x400);\n                    if (iVar15 != 0) {\n                        uVar9 = 0x418044;\n                        iVar14 = (**(*hKey + 0x18))(hKey, 0x418044, 1);\n                    }\n                }\n                (**(*hKey + 8))(hKey, uVar9);\n            }\n            (**(*var_1ch + 8))(var_1ch);\n            if (-1 < iVar14) {\n                uVar19 = 0;\n                fcn.00401630(0xfffffff4);\n                break;\n            }\n        }\n        uVar19 = 1;\n        fcn.00401630(0xfffffff0);\n        break;\n    case 0x402b16:\n        iVar14 = fcn.00401414();\n        var_174h = fcn.00401414();\n        var_166h = fcn.00401414();\n        iVar15 = fcn.00407c08(iVar14);\n        if (iVar15 == 0) {\n            uVar19 = 1;\n            fcn.00406bb6(0xfffffff9, 0);\n        }\n        else {\n            var_17ch = 2;\n            iVar15 = fcn.0040783d(iVar14);\n            *(iVar14 + 1 + iVar15) = 0;\n            iVar15 = fcn.0040783d(var_174h);\n            *(var_174h + 1 + iVar15) = 0;\n            var_170h._0_2_ = var_34h;\n            var_178h = iVar14;\n            fcn.00406bb6(0, var_166h);\n            iVar14 = (*_sym.imp.SHELL32.DLL_SHFileOperationA)(&fcn.0040164f::var_180h, iVar14);\n            uVar19 = 0;\n            if (iVar14 != 0) {\n                uVar19 = 1;\n                fcn.00406bb6(0xfffffff9, 0);\n            }\n        }\n        break;\n    case 0x402bfd:\n        if (var_3ch != 0xbadf00d) {\ncode_r0x00402c05:\n            uVar13 = fcn.00407927(0, 0xffffffe8);\ncode_r0x00402c26:\n            fcn.0040733a(uVar13, 0x200010);\n            return 0x7fffffff;\n        }\n        *0x44e7d0 = *0x44e7d0 + 1;\n        uVar19 = 0;\n        break;\n    case 0x402c3d:\n        uVar13 = 0;\n        if (var_3ch != 0) {\n            uVar13 = fcn.00401414();\n        }\n        uVar9 = 0;\n        if (var_38h != 0) {\n            uVar9 = fcn.00401414();\n        }\n        uVar8 = 0;\n        if (var_2ch != 0) {\n            uVar8 = fcn.00401414();\n        }\n        uVar7 = fcn.00401414();\n        iVar14 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar13, uVar9, uVar8, uVar7);\n        uVar19 = iVar14 == 0;\n        break;\n    case 0x402ca4:\n        hKey = 0x7e4e21;\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar8 = fcn.00401414();\n        uVar19 = 0;\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar13, uVar9, &fcn.0040164f::hKey, pcVar6, 0x1fff, uVar8);\n        if (*(iVar17 + 0x459000) == hKey) {\n            *(iVar17 + 0x459000) = 0;\n            uVar19 = 1;\n        }\n        break;\n    case 0x402d21:\n        if (var_2ch == 0) {\n            iVar15 = fcn.0040148f();\n            if (iVar15 != 0) {\n                uVar13 = fcn.00401414();\n                iVar14 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar15, uVar13);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar15, extraout_ECX_02);\n                goto code_r0x00402d88;\n            }\n        }\n        else {\n            fcn.00401414();\n            iVar14 = fcn.004014f3();\ncode_r0x00402d88:\n            uVar19 = 0;\n            if (iVar14 == 0) break;\n        }\n        uVar19 = 1;\n        break;\n    case 0x402d9c:\n        if (var_3ch == 0) {\n            var_3ch = *0x44e7c0 + 0x80000001;\n        }\n        uVar13 = fcn.00401414();\n        uVar9 = fcn.00401414();\n        uVar19 = 1;\n        iVar14 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                           (var_3ch, uVar9, 0, 0, 0, *0x44e7ec | 2, 0, &fcn.0040164f::hKey, 0);\n        if (iVar14 == 0) {\n            if (var_2ch == 1) {\n                fcn.00401414();\n                iVar14 = fcn.0040783d(0x412004);\n                iVar14 = iVar14 + 1;\n            }\n            else if (var_2ch == 4) {\n                *0x412004 = fcn.00401463();\n                iVar14 = 4;\n            }\n            else {\n                iVar14 = 0;\n                if (var_2ch == 3) {\n                    iVar14 = fcn.00403a93(lpLastWriteTime, 0, 0x412004, 0x6000);\n                }\n            }\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, uVar13, 0, var_28h, 0x412004, iVar14);\n            uVar19 = iVar14 != 0;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        break;\n    case 0x402ed7:\n        uVar19 = 1;\n        iVar14 = fcn.0040148f();\n        uVar13 = fcn.00401414();\n        *(iVar17 + 0x459000) = 0;\n        if (iVar14 != 0) {\n            hKey = 0x1fff;\n            iVar15 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                               (iVar14, uVar13, 0, &fcn.0040164f::var_1ch, pcVar6, &fcn.0040164f::hKey);\n            if (iVar15 == 0) {\n                if ((var_1ch == 0x1) || (var_1ch == 0x4)) {\n                    if (var_1ch == 0x4) {\n                        uVar19 = var_2ch == 0;\n                        fcn.00407751(pcVar6, *(iVar17 + 0x459000));\n                        goto code_r0x00402f99;\n                    }\n                }\n                else if (var_1ch != 0x2) goto code_r0x00402f57;\n                *(iVar17 + 0x459000 + hKey) = 0;\n                uVar19 = var_2ch;\n            }\n            else {\ncode_r0x00402f57:\n                *(iVar17 + 0x459000) = 0;\n                uVar19 = 1;\n            }\ncode_r0x00402f99:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar14);\n        }\n        break;\n    case 0x402fae:\n        uVar19 = 1;\n        iVar14 = fcn.0040148f();\n        uVar13 = fcn.00401463();\n        *(iVar17 + 0x459000) = 0;\n        if (iVar14 != 0) {\n            var_1ch = 0x1fff;\n            if (var_2ch == 0) {\n                iVar15 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (iVar14, uVar13, pcVar6, &fcn.0040164f::var_1ch, 0, 0, 0, 0);\n                if (iVar15 != 0) break;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(iVar14, uVar13, pcVar6, 0x1fff);\n            }\n            uVar19 = 0;\n            *(iVar17 + 0x45afff) = 0;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar14);\n        }\n        break;\n    case 0x403079:\n        uVar19 = 0;\n        if (*(iVar17 + 0x459000) != '\\0') {\n            uVar13 = fcn.00407776(pcVar6);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar13);\n        }\n        break;\n    case 0x4030a0:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.004075da(uVar13, var_38h, var_34h);\n        if (iVar14 == -1) {\n            *(iVar17 + 0x459000) = 0;\n            uVar19 = 1;\n        }\n        else {\n            uVar19 = 0;\n            fcn.00407751(pcVar6, iVar14);\n        }\n        break;\n    case 0x4030ee:\n        if (var_34h == 0) {\n            uVar13 = fcn.00401414();\n            uVar13 = fcn.0040783d(uVar13);\n        }\n        else {\n            *0x410004 = fcn.00401463();\n            uVar13 = 1;\n        }\n        uVar19 = 1;\n        if (*(iVar17 + 0x459000) != '\\0') {\n            uVar9 = fcn.00407776(pcVar6);\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar9, 0x410004, uVar13, &fcn.0040164f::var_1ch, 0);\n            uVar19 = iVar14 == 0;\n        }\n        break;\n    case 0x40317b:\n        iVar10 = fcn.00401463();\n        if (iVar10 < 1) {\n            uVar19 = 0;\n        }\n        else {\n            if (0x1fff < iVar10) {\n                iVar10 = 0x1fff;\n            }\n            iVar18 = 0;\n            if (*(iVar17 + 0x459000) != '\\0') {\n                uVar13 = fcn.00407776(pcVar6);\n                cVar16 = '\\0';\n                while( true ) {\n                    iVar17 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                       (uVar13, &fcn.0040164f::hKey, 1, &fcn.0040164f::var_1ch, 0);\n                    if ((iVar17 == 0) || (var_1ch != 0x1)) goto code_r0x004032a7;\n                    if (lpLastWriteTime != 0) {\n                        fcn.00407751(iVar15, hKey & 0xff);\n                        goto code_r0x004037df;\n                    }\n                    if ((cVar16 == '\\n') || (cVar16 == '\\r')) break;\n                    *(iVar15 + iVar18) = hKey;\n                    iVar18 = iVar18 + 1;\n                    if ((hKey == '\\0') || (cVar16 = hKey,  iVar10 <= iVar18)) goto code_r0x004032a7;\n                }\n                if ((cVar16 == hKey) || ((hKey != '\\n' && (hKey != '\\r')))) {\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar13, 0xffffffff, 0, 1);\n                }\n                else {\n                    *(iVar18 + 0x459000 + iVar14) = hKey;\n                    iVar18 = iVar18 + 1;\n                }\n            }\ncode_r0x004032a7:\n            uVar19 = iVar18 == 0;\n            *(iVar18 + 0x459000 + iVar14) = 0;\n        }\n        break;\n    case 0x4032c3:\n        uVar19 = 0;\n        if (*(iVar17 + 0x459000) != '\\0') {\n            uVar13 = fcn.00401463();\n            uVar9 = fcn.00407776(pcVar6);\n            uVar13 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar9, uVar13, 0, lpLastWriteTime);\n            if (-1 < var_38h) {\n                fcn.00407751(iVar15, uVar13);\n            }\n        }\n        break;\n    case 0x403333:\n        uVar19 = 0;\n        if (*(iVar17 + 0x459000) != '\\0') {\n            uVar13 = fcn.00407776(pcVar6);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar13);\n        }\n        break;\n    case 0x40335a:\n        if (*(iVar14 + 0x459000) != '\\0') {\n            uVar13 = fcn.00407776(iVar15);\n            iVar14 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar13, &fcn.0040164f::var_180h);\n            if (iVar14 != 0) {\n                uVar19 = 0;\n                fcn.00407815(pcVar6, &fcn.0040164f::var_154h);\n                break;\n            }\n        }\n        *(iVar17 + 0x459000) = 0;\n        uVar19 = 1;\n        break;\n    case 0x4033bd:\n        uVar13 = fcn.00401414();\n        iVar10 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar13, &fcn.0040164f::var_180h);\n        if (iVar10 == -1) {\n            uVar19 = 1;\n            *(iVar14 + 0x459000) = 0;\n            *(iVar17 + 0x459000) = 0;\n        }\n        else {\n            uVar19 = 0;\n            fcn.00407751(iVar15, iVar10);\n            fcn.00407815(pcVar6, &fcn.0040164f::var_154h);\n        }\n        break;\n    case 0x40342e:\n        uVar13 = fcn.00401414();\n        iVar14 = fcn.00407462(uVar13);\n        if (iVar14 == 0) {\n            fcn.00401414(pcVar6);\n        }\n        fcn.004075a8(uVar13);\n        iVar14 = fcn.004075da(uVar13, 0x40000000, 2);\n        pcVar5 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        uVar9 = *0x44e84c;\n        if (iVar14 == -1) {\ncode_r0x004035ed:\n            uVar19 = 1;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(uVar13);\n            uVar13 = 0xffffffef;\n        }\n        else {\n            iVar15 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x44e84c);\n            iVar17 = -0x29a;\n            uVar8 = extraout_ECX_03;\n            if (iVar15 != 0) {\n                fcn.00403a61(0);\n                fcn.00403a15(iVar15, uVar9);\n                arg_10h = (*pcVar5)(0x40, var_34h);\n                if (arg_10h != NULL) {\n                    fcn.00403a93(var_38h, 0, arg_10h, var_34h);\n                    for (piVar11 = arg_10h; *piVar11 != '\\0'; piVar11 = piVar11 + 2 + iVar17) {\n                        iVar17 = *piVar11;\n                        fcn.0040757f(piVar11[1] + iVar15, piVar11 + 2, iVar17);\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_10h);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar14, iVar15, uVar9, &fcn.0040164f::hKey, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar15);\n                iVar17 = fcn.00403a93(0xffffffff, iVar14, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar14, uVar8);\n            if (iVar17 < 0) goto code_r0x004035ed;\n            uVar13 = 0xfffffff3;\n            uVar19 = 0;\n        }\n        fcn.00401630(uVar13);\n        break;\n    case 0x403618:\n        uVar19 = 1;\n        uVar12 = fcn.00401463();\n        if (uVar12 < *0x44e80c) {\n            iVar14 = uVar12 * 0x2018 + *0x44e808;\n            if (var_34h < 0) {\n                var_34h = ~var_34h;\n                if (var_34h == 0) {\n                    fcn.00407927(iVar14 + 0x18, var_2ch);\n                    *(iVar14 + 8) = *(iVar14 + 8) | 0x100;\n                }\n                else {\n                    var_38h = fcn.00401463();\n                }\n                uVar19 = 0;\n                *(iVar14 + var_34h * 4) = var_38h;\n                if (lpLastWriteTime != 0) {\n                    fcn.00401220(uVar12);\n                }\n            }\n            else if (var_34h == 0) {\n                uVar19 = 0;\n                fcn.00407815(iVar15, iVar14 + 0x18);\n            }\n            else {\n                uVar19 = 0;\n                fcn.00407751(iVar15, *(iVar14 + var_34h * 4));\n            }\n        }\n        break;\n    case 0x4036db:\n        uVar19 = 1;\n        uVar12 = fcn.00401463();\n        if (uVar12 < 0x20) {\n            if (lpLastWriteTime == 0) {\n                if (var_34h == 0) {\n                    uVar19 = 0;\n                    fcn.00407927(iVar15, *(*0x44e7fc + 4 + (uVar12 + 0x24) * 4));\n                }\n                else {\n                    uVar19 = 0;\n                    *(*0x44e7fc + 4 + (uVar12 + 0x24) * 4) = var_38h;\n                }\n            }\n            else if (var_34h == 0) {\n                uVar19 = 0;\n                uVar13 = fcn.00401388(0);\n                fcn.00407751(iVar15, uVar13);\n            }\n            else {\n                uVar19 = 0;\n                fcn.0040133f(uVar12);\n                fcn.0040128f(0, 0);\n            }\n        }\n        break;\n    case 0x403781:\n        uVar19 = 0;\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x44e854, 0xb, var_3ch & *0x438414, 0);\n        if (var_3ch != 0) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(var_180h, 0, 0);\n        }\n        break;\n    case 0x4037d3:\n        goto code_r0x004037d3;\n    case 0x4037e1:\n        goto code_r0x004037e1;\n    }\ncode_r0x004037d9:\n    *0x44e7c4 = *0x44e7c4 + uVar19;\ncode_r0x004037df:\n    var_3ch = 0;\ncode_r0x004037e1:\n    return var_3ch;\n}\n",
        "token_count": 13335
    },
    "00403d5c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nchar * __cdecl fcn.00403d5c(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_10h;\n    char *pcVar5;\n    uint32_t arg_ch;\n    uint uVar6;\n    uint uVar7;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    pcVar5 = 0x40b163;\n    *0x44e840 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x44e840 = *0x44e840 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x48f000, 0x2000);\n    iVar1 = fcn.004075da(0x48f000, 0x80000000, 3);\n    *0x40a010 = iVar1;\n    if (iVar1 != -1) {\n        fcn.00407815(0x487000, 0x48f000);\n        uVar7 = 0x40b163;\n        uVar2 = fcn.00407424(0x487000);\n        uVar6 = 0x491000;\n        fcn.00407815(0x491000, uVar2);\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0, uVar6, uVar2, uVar7);\n        var_40h = 0;\n        var_3ch = 0;\n        *0x418844 = uVar3;\n        for (; 0 < uVar3; uVar3 = uVar3 - arg_ch) {\n            arg_ch = (-(*0x44e84c == 0) & 0xffff8200) + 0x8000;\n            if (uVar3 < arg_ch) {\n                arg_ch = uVar3;\n            }\n            iVar4 = fcn.00403a15(0x418850, arg_ch);\n            if (iVar4 == 0) {\n                fcn.00403979(1);\ncode_r0x00404075:\n                return \n                \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n                ;\n            }\n            if (*0x44e84c == 0) {\n                fcn.0040757f(&var_38h, 0x418850, 0x1c);\n                if (((((var_38h & 0xfffffff0) == 0) && (var_34h == -0x21524111)) && (var_28h == 0x74736e49)) &&\n                   ((var_2ch == 0x74666f73 && (var_30h == 0x6c6c754e)))) {\n                    arg_8h = arg_8h | var_38h;\n                    *0x44e7dc = *0x44e7dc | arg_8h & 2;\n                    *0x44e84c = *0x418848;\n                    if (uVar3 < var_20h) goto code_r0x00404075;\n                    if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                    uVar3 = var_20h - 4;\n                    var_40h = var_40h + 1;\n                    if (uVar3 < arg_ch) {\n                        arg_ch = uVar3;\n                    }\n                }\n            }\n            else if ((arg_8h & 2) == 0) {\n                fcn.00403979(0);\n            }\n            if (uVar3 < *0x418844) {\n                var_3ch = fcn.004082e8(var_3ch, 0x418850, arg_ch);\n            }\n            *0x418848 = *0x418848 + arg_ch;\n        }\n        pcVar5 = \n        \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n        ;\n        fcn.00403979(1);\n        if (*0x44e84c != 0) {\n            if (var_40h != 0) {\n                fcn.00403a61(*0x418848);\n                iVar4 = fcn.00403a15(&var_1ch, 4);\n                if (iVar4 == 0) {\n                    return pcVar5;\n                }\n                if (var_3ch != var_1ch) {\n                    return pcVar5;\n                }\n            }\n            pcVar5 = \n            \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n            ;\n            arg_10h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, var_24h);\n            fcn.00403a61(*0x44e84c + 0x1c);\n            iVar4 = fcn.00403a93(0xffffffff, 0, arg_10h, var_24h);\n            if (iVar4 == var_24h) {\n                *0x44e844 = *arg_10h;\n                *0x44e848 = (*0x44e848 + 1) - ((var_38h & 1) == 0);\n                iVar4 = 8;\n                *0x44e7fc = arg_10h;\n                do {\n                    iVar4 = iVar4 + -1;\n                    arg_10h[iVar4 * 2 + 1] = arg_10h[iVar4 * 2 + 1] + arg_10h;\n                } while (iVar4 != 0);\n                pcVar5 = NULL;\n                uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar1, 0, 0, 1);\n                arg_10h[0xf] = uVar2;\n                fcn.0040757f(0x44e800, arg_10h + 1, 0x40);\n            }\n        }\n    }\n    return pcVar5;\n}\n",
        "token_count": 1541
    },
    "004040ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004040ec(void)\n\n{\n    if (*0x40a010 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a010);\n        *0x40a010 = -1;\n    }\n    fcn.004046d0();\n    fcn.00407feb(0x48d000, 7);\n    return;\n}\n",
        "token_count": 85
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    uint uVar1;\n    char *arg_ch;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char cVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    code *extraout_EDX;\n    code *pcVar9;\n    code *pcVar10;\n    uint uVar11;\n    uint arg_ch_00;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_17ch;\n    uint var_178h;\n    uint var_170h;\n    uint var_1ch;\n    \n    (*_sym.imp.COMCTL32.DLL_InitCommonControls)();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(0x8001);\n    *0x44e7f4 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x44e850 = fcn.00407cf7(8);\n    (*_sym.imp.SHELL32.DLL_SHGetFileInfoA)(0x40b2a9, 0, &entry0::var_17ch, 0x160, 0);\n    uVar1 = fcn.00407815(0x44e85c, \"NSIS Error\");\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)(uVar1, uVar1);\n    uVar1 = fcn.00407815(0x481000, uVar1);\n    *0x44e858 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0, uVar1);\n    uVar1 = 0x481000;\n    if (*0x481000 == '\\\"') {\n        uVar1 = 0x481001;\n    }\n    uVar1 = fcn.004073f4(uVar1, (*0x481000 == '\\\"') * '\\x02' + ' ');\n    arg_ch = (*_sym.imp.USER32.dll_CharNextA)(uVar1, extraout_ECX);\n    pcVar9 = NULL;\n    pcVar5 = arg_ch;\n    do {\n        if (*pcVar5 == '\\0') {\ncode_r0x004042ba:\n            pcVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x2000, 0x48b000);\n            iVar3 = fcn.00404088(pcVar2, pcVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x48b000, 0x1ffb);\n                pcVar4 = fcn.00407848(0x48b000, \"\\\\Temp\");\n                pcVar2 = pcVar4;\n                iVar3 = fcn.00404088(pcVar4, pcVar4);\n                if (iVar3 == 0) {\n                    pcVar5 = \"Error writing temporary file. Make sure your temp folder is valid.\";\n                    goto code_r0x0040452e;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x489000);\n            pcVar5 = fcn.00403d5c(pcVar9);\n            pcVar10 = NULL;\n            pcVar4 = pcVar9;\n            if (pcVar5 != NULL) goto code_r0x00404530;\n            if (*0x44e848 == 0) goto code_r0x0040450f;\n            pcVar4 = 0x481000;\n            piVar6 = fcn.004073f4(0x481000, 0);\n            while( true ) {\n                if (piVar6 < 0x481000) {\n                    fcn.00407848(0x48b000, \"~nsu.tmp\");\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x48b000, 0x487000);\n                    pcVar2 = NULL;\n                    pcVar4 = NULL;\n                    if (iVar3 == 0) goto code_r0x00404529;\n                    uVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x48b000, 0);\n                    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x48b000, uVar1);\n                    if (*0x483000 == '\\0') {\n                        fcn.00407815(0x483000, 0x487000);\n                    }\n                    iVar3 = 0x1a;\n                    pcVar5 = \"Error launching installer\";\n                    uVar1 = 0x459000;\n                    fcn.00407815(0x459000, arg_ch);\n                    pcVar9 = _sym.imp.KERNEL32.dll_DeleteFileA;\n                    pcVar4 = _sym.imp.KERNEL32.dll_CopyFileA;\n                    *0x45b000 = 0x41;\n                    do {\n                        arg_ch_00 = *(*0x44e7fc + 0x120);\n                        uVar11 = 0x436410;\n                        fcn.00407927(0x436410, arg_ch_00);\n                        (*pcVar9)(0x436410, extraout_ECX_00, uVar11, arg_ch_00, uVar1);\n                        if (pcVar5 != NULL) {\n                            uVar1 = 1;\n                            iVar7 = (*pcVar4)(0x48f000, 0x436410);\n                            if (iVar7 != 0) {\n                                fcn.00407d4a(0x436410, 0);\n                                uVar1 = fcn.00407927(0x436410, *(*0x44e7fc + 0x124));\n                                iVar7 = fcn.0040727c(0x436410);\n                                if (iVar7 != 0) {\n                                    pcVar5 = NULL;\n                                    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                                }\n                            }\n                        }\n                        *0x45b000 = *0x45b000 + 1;\n                        *0x45b000 = *0x45b000 & 0xff00 | *0x45b000;\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != 0);\n                    fcn.00407d4a(0x48b000, 0);\n                    pcVar2 = pcVar4;\n                    goto code_r0x0040452e;\n                }\n                if (*piVar6 == 0x3d3f5f20) break;\n                piVar6 = piVar6 + -1;\n            }\n            do {\n                *piVar6 = 0;\n                piVar6 = piVar6 + 1;\n                iVar3 = fcn.00407c40(piVar6);\n                if (iVar3 == 0) {\ncode_r0x00404529:\n                    pcVar5 = \"Error launching installer\";\ncode_r0x0040452e:\n                    pcVar10 = NULL;\n                }\n                else {\n                    fcn.00407815(0x483000, piVar6);\n                    fcn.00407815(0x485000, piVar6);\n                    pcVar9 = extraout_EDX;\n                    pcVar2 = extraout_EDX;\ncode_r0x0040450f:\n                    *0x44e7e8 = 0xffffffff;\n                    pcVar10 = fcn.00405c9d(pcVar9, pcVar2);\n                    pcVar4 = pcVar9;\n                }\ncode_r0x00404530:\n                fcn.004040ec(pcVar4, pcVar2);\n                (*_sym.imp.ole32.dll_OleUninitialize)();\n                if (pcVar5 == NULL) {\n                    if (*0x44e7d0 != 0) {\n                        pcVar9 = fcn.00407cf7(3);\n                        pcVar4 = fcn.00407cf7(4);\n                        pcVar5 = fcn.00407cf7(5);\n                        if (((pcVar4 != NULL) && (pcVar9 != NULL)) && (pcVar5 != NULL)) {\n                            uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(extraout_ECX_01);\n                            iVar3 = (*pcVar9)(uVar1, 0x28, &entry0::var_1ch);\n                            if (iVar3 != 0) {\n                                (*pcVar4)(0, \"SeShutdownPrivilege\", &entry0::var_178h);\n                                var_17ch = 1;\n                                var_170h = 2;\n                                (*pcVar5)(var_1ch, 0, &entry0::var_17ch, 0, 0, 0);\n                            }\n                        }\n                        iVar3 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n                        if (iVar3 == 0) {\n                            fcn.0040389b(0x404677);\n                        }\n                    }\n                    pcVar4 = pcVar10;\n                    if (*0x44e7e8 != 0xffffffff) {\n                        pcVar4 = *0x44e7e8;\n                    }\n                }\n                else {\n                    pcVar2 = 0x200010;\n                    pcVar4 = pcVar5;\n                    fcn.0040733a(pcVar5, 0x200010);\n                }\n                piVar6 = (*_sym.imp.KERNEL32.dll_ExitProcess)();\n            } while( true );\n        }\n        for (; *pcVar5 == ' '; pcVar5 = pcVar5 + 1) {\n        }\n        cVar8 = ' ';\n        if (*pcVar5 == '\\\"') {\n            pcVar5 = pcVar5 + 1;\n            cVar8 = '\\\"';\n        }\n        if (*pcVar5 == '/') {\n            if ((pcVar5[1] == 'S') && ((pcVar5[2] | 0x20U) == 0x20)) {\n                pcVar9 = pcVar9 | 2;\n            }\n            if ((*(pcVar5 + 1) == 0x4352434e) && ((pcVar5[5] | 0x20U) == 0x20)) {\n                pcVar9 = pcVar9 | 4;\n            }\n            if (*(pcVar5 + -1) == 0x3d442f20) {\n                *(pcVar5 + -1) = 0;\n                fcn.00407815(0x483000, pcVar5 + 3);\n                goto code_r0x004042ba;\n            }\n            pcVar5 = pcVar5 + 1;\n        }\n        pcVar5 = fcn.004073f4(pcVar5, cVar8);\n        pcVar5 = pcVar5 + (*pcVar5 == '\\\"');\n    } while( true );\n}\n",
        "token_count": 2396
    },
    "004047a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004047a8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x44e80c;\n    iVar3 = *0x44e808;\n    while (iVar2 = iVar2 + -1,  iVar2 != -1) {\n        if ((*(iVar3 + 8) & 1) != 0) {\n            iVar1 = iVar1 + *(iVar3 + in_EAX * 4);\n        }\n        iVar3 = iVar3 + 0x2018;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "00404b00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00404b00(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = fcn.00407776(0x489000);\n    uVar5 = 0xffff;\n    iVar3 = *0x44e824;\ncode_r0x00404b64:\n    iVar3 = iVar3 + -1;\n    if (iVar3 != -1) goto code_r0x00404b36;\n    goto code_r0x00404b6a;\ncode_r0x00404b36:\n    puVar4 = *(*0x44e7fc + 100) * iVar3 + *0x44e820;\n    if (((uVar1 ^ *puVar4) & uVar5) == 0) {\n        *0x452878 = *(puVar4 + 1);\n        *0x44e7e4 = *(puVar4 + 3);\n        *0x452880 = puVar4 + 5;\n        if (*0x452880 != NULL) {\n            fcn.00407751(0x489000, *puVar4);\n            uVar2 = fcn.00407927(0x44e85c, 0xfffffffe);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x440440, uVar2);\n            piVar6 = *0x44e808;\n            for (iVar3 = *0x44e80c; iVar3 != 0; iVar3 = iVar3 + -1) {\n                if (*piVar6 != 0) {\n                    fcn.00407927(piVar6 + 6, *piVar6);\n                }\n                piVar6 = piVar6 + 0x806;\n            }\n            return;\n        }\ncode_r0x00404b6a:\n        bVar7 = uVar5 == 0xffff;\n        uVar5 = 0;\n        iVar3 = *0x44e824;\n        if (bVar7) {\n            uVar5 = 0x3ff;\n        }\n    }\n    goto code_r0x00404b64;\n}\n",
        "token_count": 537
    },
    "00405c9d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint fcn.00405c9d(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_bp_10h;\n    uint var_bp_ch;\n    uint var_bp_8h;\n    \n    iVar8 = *0x44e7fc;\n    pcVar2 = fcn.00407cf7(6);\n    if (pcVar2 == NULL) {\n        *0x489000 = 0x7830;\n        fcn.004076a8(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x438418, 0);\n        if (*0x438418 == '\\0') {\n            fcn.004076a8(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x438418, 0);\n        }\n        fcn.00407848(0x489000, 0x438418);\n    }\n    else {\n        uVar3 = (*pcVar2)(extraout_ECX);\n        fcn.00407751(0x489000, uVar3 & 0xffff);\n    }\n    fcn.00404b00();\n    *0x44e7d8 = 0x10000;\n    *0x44e7bc = *0x44e844 & 0x20;\n    iVar4 = fcn.00407c40(0x483000);\n    if (((iVar4 == 0) && (*(iVar8 + 0x48) != 0)) &&\n       (fcn.004076a8(*(iVar8 + 0x44), *0x44e818 + *(iVar8 + 0x48), *(iVar8 + 0x4c) + *0x44e818, 0x452884, 0), \n       *0x452884 != '\\0')) {\n        uVar3 = 0x452884;\n        if (*0x452884 == '\\\"') {\n            uVar3 = 0x452885;\n            puVar5 = fcn.004073f4(0x452885, 0x22);\n            *puVar5 = 0;\n        }\n        iVar4 = fcn.0040783d(uVar3);\n        uVar6 = (uVar3 - 4) + iVar4;\n        if (((uVar3 < uVar6) && (iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar6, \".exe\"),  iVar4 == 0)) &&\n           ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar3, extraout_ECX_00),  uVar6 == 0xffffffff ||\n            ((uVar6 & 0x10) == 0)))) {\n            fcn.00407424(0x405e42);\n        }\n        uVar7 = fcn.004073ae(uVar3);\n        fcn.00407815(0x483000, uVar7);\n    }\n    iVar4 = fcn.00407c40(0x483000);\n    if (iVar4 == 0) {\n        fcn.00407927(0x483000, *(iVar8 + 0x118));\n    }\n    *0x45286c = (*_sym.imp.USER32.dll_LoadImageA)(*0x44e858, 0x67, 1, 0, 0, 0x8040);\n    if (*(iVar8 + 0x50) != -1) {\n        var_bp_ch = 0x624e5f;\n        *0x44041c = fcn.00401000;\n        *0x440428 = *0x44e858;\n        *0x44042c = *0x45286c;\n        *0x44043c = &fcn.00405c9d::var_bp_ch;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(0x440418);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &fcn.00405c9d::var_1ch, 0);\n        *0x440440 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                              (0x80, &fcn.00405c9d::var_bp_ch, 0, 0x80000000, var_1ch, var_18h, var_14h - var_1ch, \n                               var_bp_10h - var_18h, 0, 0, *0x44e858, 0);\n    }\n    uVar7 = 2;\n    iVar8 = fcn.0040389b(0);\n    if (iVar8 == 0) {\n        fcn.00404b00(extraout_ECX_01);\n        if (*0x44e7dc == 0) {\n            uVar7 = (*_sym.imp.USER32.dll_ShowWindow)(*0x440440, 5);\n            pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n            iVar8 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\", uVar7);\n            if (iVar8 == 0) {\n                (*pcVar2)(\"RichEd32\");\n            }\n            pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n            iVar8 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x440418);\n            if (iVar8 == 0) {\n                (*pcVar2)(0, \"RichEdit\", 0x440418);\n                *0x44043c = \"RichEdit20A\";\n                (*_sym.imp.USER32.dll_RegisterClassA)(0x440418);\n            }\n            uVar7 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x44e858, *0x452878 + 0x69U & 0xffff, 0, fcn.00404d6e, 0);\n            fcn.0040389b(5);\n            fcn.004046a8(1);\n        }\n        else {\n            iVar8 = fcn.00404952(0);\n            if (iVar8 == 0) {\n                fcn.0040389b(1);\n                uVar7 = 0;\n            }\n            else if (*0x45285c == 0) {\n                fcn.0040389b(2);\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 1548
    },
    "004061b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004061b4(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *arg_8h_00;\n    code *arg_ch_00;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    code *extraout_ECX;\n    uint *puVar10;\n    code *extraout_ECX_00;\n    int32_t iVar11;\n    code *extraout_ECX_01;\n    uint32_t uVar12;\n    int32_t iVar13;\n    bool bVar14;\n    code *pcVar15;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    uint var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint32_t var_64h;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_ch;\n    \n    pcVar15 = _sym.imp.USER32.dll_GetDlgItem;\n    pcVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    arg_8h_00 = (*pcVar15)(arg_8h, 0x408);\n    iVar9 = *0x44e808;\n    iVar13 = *0x44e7fc;\n    if (arg_ch == 0x110) {\n        arg_ch_00 = *0x44e80c << 2;\n        *0x44e7f8 = arg_8h;\n        *0x44445c = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, arg_ch_00);\n        uVar5 = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x44e858, 0x6e);\n        *0x444460 = 0xffffffff;\n        *0x444464 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h_00, 0xfffffffc, fcn.00406ac5);\n        *0x444468 = (*_sym.imp.COMCTL32.DLL_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.DLL_ImageList_AddMasked)(*0x444468, uVar5, 0xff00ff);\n        pcVar15 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1109, 2, *0x444468);\n        iVar6 = (*pcVar15)(arg_8h_00, 0x111c, 0, 0);\n        if (iVar6 < 0x10) {\n            (*pcVar15)(arg_8h_00, 0x111b, 0x10, 0);\n        }\n        iVar6 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar5);\n        bVar14 = true;\n        pcVar15 = extraout_ECX;\n        do {\n            iVar11 = *(iVar13 + 0x94 + iVar6 * 4);\n            if (iVar11 != 0) {\n                bVar2 = false;\n                if (iVar6 == 0x20) {\n                    bVar2 = bVar14;\n                }\n                bVar14 = bVar2;\n                arg_ch_00 = fcn.00407927(0, iVar11);\n                pcVar15 = NULL;\n                uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x143, 0, arg_ch_00);\n                (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x151, uVar5, iVar6);\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 != 0x21);\n        uVar5 = 0;\n        fcn.00404914(pcVar15);\n        fcn.00404914();\n        var_90h = 0;\n        bVar2 = false;\n        iVar6 = iVar9;\n        for (var_8ch = 0; var_8ch < *0x44e80c; var_8ch = var_8ch + 1) {\n            if (*(iVar6 + 0x18) != '\\0') {\n                var_5ch = iVar6 + 0x18;\n                var_70h = 0xffff0002;\n                var_6ch = 0xd;\n                var_60h = 0x20;\n                var_48h = var_8ch;\n                var_64h = *(iVar6 + 8) & 0x20;\n                var_74h = uVar5;\n                if ((*(iVar6 + 8) & 2) == 0) {\n                    if ((*(iVar6 + 8) & 4) == 0) {\n                        puVar10 = var_90h + *0x44445c;\n                        arg_ch_00 = 0x1100;\n                        pcVar15 = arg_8h_00;\n                        uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1100, 0, &var_74h);\n                        *puVar10 = uVar7;\n                    }\n                    else {\n                        arg_ch_00 = 0x110a;\n                        pcVar15 = arg_8h_00;\n                        uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x110a, 3, uVar5);\n                    }\n                }\n                else {\n                    puVar10 = var_90h + *0x44445c;\n                    var_6ch = 0x4d;\n                    var_4ch = 1;\n                    arg_ch_00 = 0x1100;\n                    pcVar15 = arg_8h_00;\n                    uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1100, 0, &var_74h);\n                    bVar2 = true;\n                    *puVar10 = uVar5;\n                }\n            }\n            iVar6 = iVar6 + 0x2018;\n            var_90h = var_90h + 4;\n        }\n        if (!bVar2) {\n            arg_ch_00 = 0xfffffff0;\n            uVar8 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h_00, 0xfffffff0);\n            pcVar15 = uVar8 & 0xfffffffb;\n            (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h_00, 0xfffffff0, pcVar15);\n        }\n        if (!bVar14) {\n            (*_sym.imp.USER32.dll_ShowWindow)(pcVar4, 5);\n            pcVar15 = extraout_ECX_00;\n            arg_ch_00 = extraout_ECX_00;\n        }\n        fcn.0040481a(pcVar15, arg_ch_00);\n    }\n    else {\n        arg_ch_00 = pcVar15;\n        if (arg_ch == 0x405) {\n            arg_14h = 1;\n            arg_10h = 0;\n            arg_ch = 0x40f;\n        }\n    }\n    bVar14 = arg_ch == 0x413;\n    uVar8 = arg_14h;\n    if (((bVar14) || (arg_ch == 0x4e)) && ((bVar14 || (*(arg_14h + 4) == 0x408)))) {\n        if (((*0x44e845 & 2) == 0) && ((bVar14 || (*(arg_14h + 8) == -2)))) {\n            arg_ch_00 = arg_ch != 0x413;\n            pcVar15 = arg_8h_00;\n            iVar6 = fcn.004060f6(arg_8h_00, arg_ch_00);\n            if (-1 < iVar6) {\n                iVar11 = iVar6 * 0x2018 + iVar9;\n                uVar12 = *(iVar11 + 8);\n                if ((uVar12 & 0x10) == 0) {\n                    uVar8 = uVar12 ^ 1;\n                    if ((uVar12 & 0x40) != 0) {\n                        uVar12 = uVar12 ^ 0x80;\n                        uVar8 = uVar12 | 1;\n                        if ((uVar12 & 0x80) == 0) {\n                            uVar8 = uVar12 & 0xfffffffe;\n                        }\n                    }\n                    *(iVar11 + 8) = uVar8;\n                    fcn.00401220(iVar6);\n                    arg_10h = 1;\n                    arg_ch = 0x40f;\n                    uVar8 = (*0x44e845 & 1) == 0;\n                }\n            }\n        }\n        if (arg_14h != 0) {\n            if (*(arg_14h + 8) == -0x192) {\n                arg_ch_00 = 0x419;\n                pcVar15 = arg_8h_00;\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x419, 0, *(arg_14h + 0x5c));\n            }\n            if (*(arg_14h + 8) == -0x196) {\n                if (*(arg_14h + 0xc) == 2) {\n                    puVar1 = iVar9 + 8 + *(arg_14h + 0x5c) * 0x2018;\n                    *puVar1 = *puVar1 | 0x20;\n                }\n                else {\n                    puVar1 = iVar9 + 8 + *(arg_14h + 0x5c) * 0x2018;\n                    *puVar1 = *puVar1 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 0x111) {\n        if ((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) goto code_r0x00406aae;\n        arg_ch_00 = 0x147;\n        pcVar15 = pcVar4;\n        iVar9 = (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x147, 0, 0);\n        if (iVar9 == -1) goto code_r0x00406aae;\n        iVar9 = (*pcVar3)(pcVar4, 0x150, iVar9, 0);\n        if (iVar9 == -1) {\n            iVar9 = 0x20;\n        }\n        else if (*(iVar13 + 0x94 + iVar9 * 4) == 0) {\n            iVar9 = 0x20;\n        }\n        fcn.0040133f(iVar9);\n        uVar8 = 0;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x420, 0, iVar9);\n        arg_10h = 1;\n        arg_ch = 0x40f;\ncode_r0x00406880:\n        arg_ch_00 = NULL;\n        pcVar15 = NULL;\n        uVar5 = fcn.0040128f(0, 0);\n        if (arg_10h != 0) {\n            fcn.0040389b(8);\n        }\n        if (uVar8 != 0) {\n            uVar8 = fcn.00401388(*0x44445c);\n            fcn.0040133f(uVar8);\n            iVar6 = 0;\n            for (iVar9 = 0; iVar9 < uVar8; iVar9 = iVar9 + 1) {\n                iVar6 = (iVar6 + 1) - (*(iVar13 + 0x94 + iVar9 * 4) == 0);\n            }\n            (*_sym.imp.USER32.dll_SendMessageA)(pcVar4, 0x14e, iVar6, 0, uVar5);\n            arg_ch = 0x420;\n        }\n        fcn.0040128f(0, 0);\n        iVar13 = *0x44445c;\n        var_34h = 0xf030;\n        iVar9 = *0x44e808;\n        for (var_84h = 0; var_84h < *0x44e80c; var_84h = var_84h + 1) {\n            iVar6 = *(iVar13 + var_84h * 4);\n            if (iVar6 != 0) {\n                uVar12 = *(iVar9 + 8);\n                var_40h = 8;\n                if ((uVar12 & 0x100) != 0) {\n                    var_30h = iVar9 + 0x18;\n                    var_40h = 9;\n                    *(iVar9 + 8) = *(iVar9 + 8) & 0xfffffeff;\n                }\n                iVar11 = 3;\n                if ((uVar12 & 0x40) == 0) {\n                    iVar11 = (uVar12 & 1) + 1;\n                    if ((uVar12 & 0x10) != 0) {\n                        iVar11 = (uVar12 & 1) + 4;\n                    }\n                }\n                var_38h = (uVar12 & 8) * 2 | uVar12 & 0x20 | iVar11 << 0xc;\n                var_3ch = iVar6;\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x1102, ((uVar12 & 0x20) >> 5) + 1, iVar6);\n                (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x110d, 0, &var_40h);\n            }\n            iVar9 = iVar9 + 0x2018;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(arg_8h_00, 0, 1);\n        if (*(*0x452880 + 0x10) != 0) {\n            fcn.004047a8();\n            fcn.004049de();\n        }\n    }\n    else {\n        if (arg_ch == 0x200) {\n            arg_ch_00 = 0x200;\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, 0x200, 0, 0);\n            pcVar15 = arg_8h_00;\n            goto code_r0x00406aae;\n        }\n        if (arg_ch == 0x40b) {\n            if (*0x444468 != 0) {\n                pcVar15 = (*_sym.imp.COMCTL32.DLL_ImageList_Destroy)(*0x444468, arg_ch_00);\n            }\n            if (*0x44445c != 0) {\n                pcVar15 = (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x44445c);\n            }\n            *0x444468 = 0;\n            *0x44445c = 0;\n            *0x44e7f8 = 0;\n            goto code_r0x00406aae;\n        }\n        if (arg_ch == 0x40f) goto code_r0x00406880;\n    }\n    pcVar4 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x44e845 & 1) != 0)) {\n        iVar13 = (uVar8 == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h_00, iVar13);\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe);\n        (*pcVar4)(uVar5, iVar13);\n        pcVar15 = extraout_ECX_01;\n        arg_ch_00 = extraout_ECX_01;\n    }\ncode_r0x00406aae:\n    fcn.00404c92(pcVar15, arg_ch_00);\n    return;\n}\n",
        "token_count": 3793
    },
    "00406cf6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00406cf6(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    ushort *puVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    ulong uVar12;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    int32_t var_58h;\n    ushort *var_4ch;\n    uint var_48h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_ch;\n    \n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar10 = *0x452864;\n    if (arg_ch == 0x110) {\n        puVar11 = &var_60h;\n        for (iVar10 = 8; iVar10 != 0; iVar10 = iVar10 + -1) {\n            *puVar11 = 0;\n            puVar11 = puVar11 + 1;\n        }\n        var_60h = 2;\n        var_58h = 0xffffffff;\n        var_4ch = 0xffffffff;\n        iVar10 = *(*0x44e7fc + 0x5c);\n        iVar7 = *(*0x44e7fc + 0x60);\n        *0x452860 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x45287c = (*pcVar1)(arg_8h, 0x3ee);\n        iVar3 = (*pcVar1)(arg_8h, 0x3f8);\n        *0x452864 = iVar3;\n        fcn.0040481a(pcVar1, pcVar1);\n        *0x452870 = fcn.004047a8();\n        *0x452868 = 0;\n        uVar4 = (*_sym.imp.USER32.dll_GetClientRect)(iVar3, &var_2ch);\n        var_58h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15, uVar4);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_58h = var_24h - var_58h;\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x101b, 0, &var_60h);\n        (*pcVar1)(iVar3, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar1)(iVar3, 0x1001, 0, iVar10);\n            (*pcVar1)(iVar3, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar7) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1024, 0, iVar7);\n        }\n        fcn.00404914();\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if ((*0x44e844 & 3) != 0) {\n            iVar5 = (*_sym.imp.USER32.dll_ShowWindow)(*0x452860, 0);\n            if ((*0x44e844 & 2) == 0) {\n                (*pcVar1)(iVar3, 8);\n                iVar5 = iVar3;\n            }\n            else {\n                *0x452860 = 0;\n            }\n            fcn.0040481a(iVar5, iVar5);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x401, 0, 0x75300000);\n        uVar4 = 0;\n        if ((*0x44e844 & 4) != 0) {\n            (*pcVar1)(uVar6, 0x409, 0, iVar7);\n            (*pcVar1)(uVar6, 0x2001, 0, iVar10);\n            uVar4 = 0;\n        }\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec);\n            uVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404952, uVar4, 0, &var_1ch);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar4);\n        }\n        else if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x452860, 0);\n                uVar4 = (*pcVar2)(iVar10, 8);\n                fcn.0040481a(uVar4, uVar4);\n            }\n        }\n        else if (arg_ch == 0x404) {\n            if (*0x45285c == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x44e854, 8);\n                if (*0x44e7c8 == 0) {\n                    fcn.00406bb6(*(*0x440454 + 0x34), 0);\n                }\n            }\n            else {\n                *0x440450 = 2;\n            }\n            fcn.00404879();\n        }\n        if ((iVar10 == arg_10h) && (arg_ch == 0x7b)) {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar10, 0x1004, 0, 0);\n            uVar4 = 0;\n            if (0 < iVar7) {\n                uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                uVar6 = fcn.00407927(0, 0xffffffe1);\n                (*_sym.imp.USER32.dll_AppendMenuA)(uVar4, 0, 1, uVar6);\n                if (arg_14h == -1) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(iVar10, &var_2ch);\n                }\n                else {\n                    var_2ch = arg_14h;\n                    var_28h = arg_14h >> 0x10;\n                }\n                iVar3 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar4, 0x180, var_2ch, var_28h, 0, arg_8h, 0);\n                pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                uVar4 = 0;\n                if (iVar3 == 1) {\n                    iVar3 = 1;\n                    var_58h = 0;\n                    var_4ch = 0x438418;\n                    var_48h = 0x7fff;\n                    iVar5 = iVar7;\n                    do {\n                        iVar5 = iVar5 + -1;\n                        iVar8 = (*pcVar1)(iVar10, 0x102d, iVar5, &var_60h);\n                        iVar3 = iVar8 + 2 + iVar3;\n                    } while (iVar5 != 0);\n                    uVar4 = (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                    (*_sym.imp.USER32.dll_EmptyClipboard)(uVar4);\n                    uVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar3);\n                    puVar9 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar12);\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                    do {\n                        iVar8 = iVar5 + 1;\n                        var_4ch = puVar9;\n                        iVar3 = (*pcVar1)(iVar10, 0x102d, iVar5, &var_60h);\n                        *(puVar9 + iVar3) = 0xa0d;\n                        puVar9 = puVar9 + iVar3 + 1;\n                        iVar5 = iVar8;\n                    } while (iVar8 != iVar7);\n                    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar12);\n                    uVar4 = (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar12);\n                    (*_sym.imp.USER32.dll_CloseClipboard)(uVar4, uVar4);\n                    uVar4 = 0;\n                }\n            }\n        }\n        else {\n            uVar4 = fcn.00404c92();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 2010
    },
    "004075a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004075a8(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(lpFileName, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004075da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004075da(uint lpFileName, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(lpFileName);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, arg_ch, 1, 0, arg_10h, iVar1, 0);\n    return;\n}\n",
        "token_count": 137
    },
    "00407c08": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407c08(uint lpFileName)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(lpFileName, 0x44d0b8);\n    uVar1 = 0;\n    if (uVar2 != -1) {\n        (*_sym.imp.KERNEL32.dll_FindClose)(uVar2);\n        uVar1 = 0x44d0b8;\n    }\n    return uVar1;\n}\n",
        "token_count": 117
    },
    "00407d4a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407d4a(char *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *arg_8h_00;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *lpNumberOfBytesWritten;\n    uint var_ch;\n    \n    pcVar1 = fcn.00407cf7(1);\n    if ((pcVar1 == NULL) || (iVar2 = (*pcVar1)(arg_8h, arg_ch, 5),  iVar2 == 0)) {\n        *0x44c4b8 = 0x4c554e;\n        if (arg_ch != 0) {\n            uVar3 = fcn.004075da(arg_ch, 0, 1);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_ch, 0x44c4b8, 0x400);\n            if (0x400 < iVar2) {\n                return;\n            }\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(arg_8h, 0x44c8b8, 0x400);\n        if (0x400 < iVar2) {\n            return;\n        }\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_wsprintfA)(0x44ccb8, \"%s=%s\\r\\n\", 0x44c4b8, 0x44c8b8);\n        fcn.00407927(0x44c8b8, *(*0x44e7fc + 0x128));\n        iVar4 = fcn.004075da(0x44c8b8, 0xc0000000, 4);\n        if (iVar4 != -1) {\n            pcVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, pcVar5 + iVar2 + 10);\n            if (((arg_8h_00 != NULL) &&\n                (arg_8h = arg_8h_00, \n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, arg_8h_00, pcVar5, &lpNumberOfBytesWritten, 0), \n                iVar6 != 0)) && (pcVar5 == lpNumberOfBytesWritten)) {\n                arg_8h = \"[Rename]\\r\\n\";\n                iVar6 = fcn.00407512(arg_8h_00, \"[Rename]\\r\\n\");\n                if (iVar6 == 0) {\n                    pcVar8 = arg_8h_00 + pcVar5;\n                    pcVar5 = pcVar5 + 10;\n                    fcn.00407815(pcVar8, \"[Rename]\\r\\n\");\n                    pcVar8 = pcVar5;\n                }\n                else {\n                    pcVar7 = fcn.00407512(iVar6 + 10, 0x40b397);\n                    pcVar8 = pcVar5;\n                    if (pcVar7 != NULL) {\n                        pcVar8 = pcVar7;\n                        while (pcVar8 = pcVar8 + 1,  pcVar8 < arg_8h_00 + pcVar5) {\n                            pcVar8[iVar2] = *pcVar8;\n                        }\n                        pcVar8 = pcVar7 + (1 - arg_8h_00);\n                    }\n                }\n                fcn.0040757f(pcVar8 + arg_8h_00, 0x44ccb8, iVar2);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar4, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar4, arg_8h_00, pcVar5 + iVar2, &lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h_00);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4, arg_8h);\n        }\n    }\n    *0x44e7cc = *0x44e7cc + 1;\n    return;\n}\n",
        "token_count": 1035
    },
    "00407feb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407feb(char *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *lpString1;\n    uint *arg_ch_00;\n    int32_t iVar6;\n    uint extraout_ECX;\n    char cVar7;\n    ulong uVar8;\n    uint uVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_12ch;\n    uint var_28h;\n    uint var_ch;\n    \n    iVar1 = fcn.00407c40(arg_8h);\n    iVar5 = *0x44e7c4;\n    if ((arg_ch & 8) != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h);\n        *0x44e7c4 = iVar5 + (iVar1 == 0);\n        return;\n    }\n    uVar2 = arg_ch & 1;\n    if (uVar2 == 0) {\ncode_r0x0040805f:\n        pcVar3 = fcn.00407815(0x4484b8, arg_8h);\n        if (uVar2 == 0) {\n            pcVar4 = arg_8h;\n            fcn.00407424(arg_8h);\n        }\n        else {\n            pcVar3 = \"\\\\*.*\";\n            pcVar4 = (*_sym.imp.KERNEL32.dll_lstrcatA)(0x4484b8, \"\\\\*.*\");\n        }\n        if ((*arg_8h != '\\0') || (*0x4484b8 == '\\\\')) {\n            pcVar4 = (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_8h, 0x40b384, pcVar3);\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h, pcVar4);\n        lpString1 = arg_8h + iVar5;\n        iVar5 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x4484b8, &var_158h);\n        if (iVar5 != -1) {\n            do {\n                uVar8 = fcn.004073f4(&var_12ch, 0x3f);\n                puVar10 = uVar8 >> 0x20;\n                if ((*uVar8 == '\\0') || (arg_ch_00 = &var_28h,  cVar7 = var_28h,  var_28h == '\\0')) {\n                    arg_ch_00 = &var_12ch;\n                    cVar7 = var_12ch;\n                }\n                if ((cVar7 != '.') ||\n                   ((puVar11 = puVar10,  *(arg_ch_00 + 1) != '\\0' &&\n                    ((*(arg_ch_00 + 1) != '.' || (*(arg_ch_00 + 2) != '\\0')))))) {\n                    puVar10 = lpString1;\n                    fcn.00407815(lpString1, arg_ch_00);\n                    if ((var_158h & 0x10) == 0) {\n                        pcVar3 = arg_8h;\n                        uVar9 = extraout_ECX;\n                        fcn.004075a8(arg_8h);\n                        iVar6 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(arg_8h, pcVar3, uVar9);\n                        if (iVar6 == 0) {\n                            if ((arg_ch & 4) == 0) {\n                                *0x44e7c4 = *0x44e7c4 + 1;\n                                puVar11 = arg_ch_00;\n                            }\n                            else {\n                                fcn.00406bb6(0xfffffff1, arg_8h);\n                                fcn.00407d4a(arg_8h, 0);\n                                puVar11 = arg_ch_00;\n                            }\n                        }\n                        else {\n                            fcn.00406bb6(0xfffffff2, arg_8h);\n                            puVar11 = arg_ch_00;\n                        }\n                    }\n                    else {\n                        puVar11 = arg_ch_00;\n                        if ((arg_ch & 3) == 3) {\n                            fcn.00407feb(arg_8h, arg_ch);\n                            puVar11 = arg_ch_00;\n                        }\n                    }\n                }\n                uVar8 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar5, &var_158h, puVar10, puVar11);\n            } while (uVar8 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar5, uVar8 >> 0x20);\n        }\n        if (uVar2 == 0) {\n            return;\n        }\n        *(lpString1 + -1) = '\\0';\n        if (iVar1 == 0) goto code_r0x00408274;\n    }\n    else {\n        if (iVar1 == 0) goto code_r0x00408274;\n        if ((arg_ch & 2) != 0) goto code_r0x0040805f;\n    }\n    iVar5 = fcn.00407c08(arg_8h);\n    if (iVar5 == 0) {\n        return;\n    }\n    fcn.004073ae(arg_8h);\n    fcn.004075a8(arg_8h);\n    iVar5 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(arg_8h);\n    if (iVar5 != 0) {\n        fcn.00406bb6(0xffffffe5, arg_8h);\n        return;\n    }\n    if ((arg_ch & 4) != 0) {\n        fcn.00406bb6(0xfffffff1, arg_8h);\n        fcn.00407d4a(arg_8h, 0);\n        return;\n    }\ncode_r0x00408274:\n    *0x44e7c4 = *0x44e7c4 + 1;\n    return;\n}\n",
        "token_count": 1400
    },
    "00401220": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401220(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    uVar1 = *(*0x44e808 + 8 + arg_8h * 0x2018);\n    if ((uVar1 & 2) != 0) {\n        iVar4 = 0;\n        iVar3 = 0;\n        iVar5 = arg_8h * 0x2018 + *0x44e808;\n        while (arg_8h = arg_8h + 1,  arg_8h < *0x44e80c) {\n            uVar2 = *(iVar5 + 0x2020 + iVar4);\n            if ((uVar2 & 2) == 0) {\n                if ((uVar2 & 4) == 0) {\n                    if ((uVar2 & 0x10) == 0) {\n                        *(iVar5 + 0x2020 + iVar4) = uVar2 & 0xfffffffe | uVar1 & 1;\n                    }\n                }\n                else {\n                    if (iVar3 == 0) {\n                        return;\n                    }\n                    iVar3 = iVar3 + -1;\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar4 = iVar4 + 0x2018;\n        }\n    }\n    return;\n}\n",
        "token_count": 333
    },
    "0040128f": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.0040128f(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar1 = *0x44e808;\n    iVar4 = arg_8h * 0x2018 + *0x44e808;\n    if (((*(iVar4 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar4 + 8) = *(iVar4 + 8) & 0xffffffbe;\n    }\n    iVar6 = 0;\n    iVar5 = 0;\n    while( true ) {\n        if (*0x44e80c <= arg_8h) {\n            return 0;\n        }\n        iVar3 = arg_8h * 0x2018 + iVar1;\n        uVar2 = *(iVar3 + 8);\n        if ((uVar2 & 2) == 0) {\n            arg_8h = arg_8h + 1;\n        }\n        else {\n            arg_8h = fcn.0040128f(arg_8h, 1);\n            uVar2 = *(iVar3 + 8);\n        }\n        if ((uVar2 & 4) != 0) break;\n        iVar5 = (iVar5 + 1) - ((uVar2 & 0x40) == 0);\n        if ((uVar2 & 1) == 0) {\n            iVar6 = iVar6 + 1;\n        }\n        else {\n            iVar5 = iVar5 + 1;\n        }\n    }\n    if (iVar5 == 0) {\n        return arg_8h;\n    }\n    if (iVar6 != 0) {\n        *(iVar4 + 8) = *(iVar4 + 8) | 0x40;\n        return arg_8h;\n    }\n    *(iVar4 + 8) = *(iVar4 + 8) & 0xffffff00 | *(iVar4 + 8) & 0x7f | 1;\n    return arg_8h;\n}\n",
        "token_count": 538
    },
    "00401388": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401388(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar1 = 0;\n    do {\n        if (*(*0x44e7fc + 0x94 + iVar1 * 4) != 0) {\n            iVar2 = 0;\n            iVar3 = *0x44e808;\n            while( true ) {\n                if (iVar2 == *0x44e80c) {\n                    return iVar1;\n                }\n                if (((*(iVar3 + 8) & 6) == 0) &&\n                   (((arg_8h == 0 || (*(arg_8h + iVar2 * 4) != 0)) &&\n                    ((1 << (iVar1 & 0x1f) & *(iVar3 + 4)) != (*(iVar3 + 8) & 1) << (iVar1 & 0x1f))))) break;\n                iVar2 = iVar2 + 1;\n                iVar3 = iVar3 + 0x2018;\n            }\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x20);\n    return 0x20;\n}\n",
        "token_count": 305
    },
    "004058e7": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004058e7(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    char *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint extraout_ECX;\n    ulong uVar9;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char *var_24h;\n    int32_t var_20h;\n    code *var_1ch;\n    uint var_ch;\n    \n    iVar6 = *0x440454;\n    if (arg_ch == 0x110) {\n        uVar8 = *(arg_14h + 0x30);\n        if (uVar8 < 0) {\n            uVar8 = *(*0x452880 + ~uVar8 * 4);\n        }\n        cVar1 = *(uVar8 + *0x44e818);\n        pcVar4 = uVar8 + *0x44e818 + 1;\n        uVar8 = *(arg_14h + 0x14);\n        var_20h = 0;\n        var_1ch = fcn.004048b1;\n        var_24h = pcVar4;\n        fcn.00404914();\n        fcn.00404914();\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, 0x40b - (uVar8 & 1 | (uVar8 & 0x20) == 0), 1);\n        fcn.004048f8();\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.0040481a(extraout_ECX, extraout_ECX);\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0x45b, 1, 0);\n        iVar6 = *(*0x44e7fc + 0x68);\n        if (iVar6 < 0) {\n            iVar6 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar6);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0x443, 0, iVar6);\n        (*pcVar2)(uVar5, 0x445, 0, 0x4010000);\n        *0x44446c = 0;\n        uVar7 = fcn.0040783d(pcVar4);\n        (*pcVar2)(uVar5, 0x435, 0, uVar7);\n        (*pcVar2)(uVar5, 0x449, cVar1, &var_24h);\n        uVar5 = 0;\n        *0x444470 = 0;\n    }\n    else {\n        if (arg_ch == 0x111) {\n            if (((arg_10h >> 0x10 == 0) && (*0x444470 == 0)) && ((*(*0x440454 + 0x14) & 0x20) != 0)) {\n                uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a);\n                uVar8 = (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 0xf0, 0, 0);\n                *(iVar6 + 0x14) = *(iVar6 + 0x14) & 0xfffffffe | uVar8 & 1;\n                fcn.004048f8();\n                fcn.004047db();\n            }\n        }\n        else if (arg_ch == 0x4e) {\n            uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n            if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n                var_24h = *(arg_14h + 0x18);\n                var_20h = *(arg_14h + 0x1c);\n                var_1ch = 0x452884;\n                if (var_20h - var_24h < 0x4000) {\n                    (*_sym.imp.USER32.dll_SendMessageA)(uVar5, 1099, 0, &var_24h);\n                    pcVar2 = _sym.imp.USER32.dll_LoadCursorA;\n                    uVar9 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                    pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                    (*_sym.imp.USER32.dll_SetCursor)(uVar9);\n                    (*_sym.imp.SHELL32.DLL_ShellExecuteA)(arg_8h, \"open\", var_1ch, 0, 0, 1);\n                    uVar5 = (*pcVar2)(0, 0x7f00);\n                    (*pcVar3)(uVar5, arg_8h);\n                }\n            }\n            if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n                if (*(arg_14h + 0x10) == 0xd) {\n                    (*_sym.imp.USER32.dll_SendMessageA)(*0x44e854, 0x111, 1, 0);\n                }\n                if (*(arg_14h + 0x10) != 0x1b) {\n                    return 1;\n                }\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x44e854, 0x10, 0, 0);\n                return 1;\n            }\n        }\n        else if (arg_ch == 0x40b) {\n            *0x444470 = *0x444470 + 1;\n        }\n        uVar5 = fcn.00404c92();\n    }\n    return uVar5;\n}\n",
        "token_count": 1377
    },
    "00406bb6": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00406bb6(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_5ch;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_ch;\n    \n    iVar2 = *0x452864;\n    uVar1 = *0x44e7f0;\n    if (*0x452864 != 0) {\n        uVar6 = *0x44e7f0 & 1;\n        if (uVar6 == 0) {\n            fcn.00407927(0x444474, arg_8h);\n        }\n        iVar4 = fcn.0040783d(0x444474);\n        if (arg_ch != 0) {\n            iVar5 = fcn.0040783d(arg_ch);\n            if (0x3fff < iVar5 + iVar4) {\n                return;\n            }\n            fcn.00407848(0x444474, arg_ch);\n        }\n        if ((uVar1 & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x45287c, 0x444474);\n        }\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        if ((uVar1 & 2) == 0) {\n            var_4ch = 1;\n            var_38h = 0x444474;\n            var_48h = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x1004, 0, 0);\n            var_44h = 0;\n            var_48h = var_48h - uVar6;\n            (*pcVar3)(iVar2, 0x1007 - uVar6, 0, &var_4ch);\n            (*pcVar3)(iVar2, 0x1013, var_48h, 0);\n        }\n        if (uVar6 != 0) {\n            *(iVar4 + 0x444474) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 523
    },
    "004082e8": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004082e8(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    if (*0x44d1fc == 0) {\n        uVar3 = 0;\n        do {\n            iVar4 = 8;\n            uVar2 = uVar3;\n            do {\n                uVar2 = -(uVar2 & 1) & 0xedb88320 ^ uVar2 >> 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *(uVar3 * 4 + 0x44d1f8) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 0x100);\n    }\n    arg_8h = ~arg_8h;\n    for (; arg_10h != 0; arg_10h = arg_10h + -1) {\n        uVar1 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        arg_8h = arg_8h >> 8 ^ *(((uVar1 ^ arg_8h) & 0xff) * 4 + 0x44d1f8);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 321
    },
    "004088f3": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004088f3(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_18h;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    char cVar12;\n    uint8_t *puVar13;\n    uint8_t **ppuVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint8_t *var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint8_t *var_50h;\n    uint8_t *var_4ch;\n    uint8_t **var_48h;\n    uint var_44h;\n    uint8_t *var_40h;\n    uint8_t **var_3ch;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint var_ch;\n    \n    var_50h = *arg_8h;\n    var_3ch = arg_8h[0x26ee];\n    puVar16 = arg_8h[0x14b];\n    var_40h = arg_8h[1];\n    if (var_3ch < arg_8h[0x26ed]) {\n        var_48h = arg_8h[0x26ed] + (-1 - var_3ch);\n    }\n    else {\n        var_48h = arg_8h[0x26ec] + -var_3ch;\n    }\n    ppuVar1 = arg_8h + 0x6ec;\n    arg_18h = arg_8h + 0x14c;\n    puVar15 = arg_8h[0x14a];\ncode_r0x00408956:\n    if (0xf < arg_8h[4]) {\ncode_r0x004094d8:\n        arg_8h[0x14a] = puVar15;\n        arg_8h[4] = 0x11;\n        arg_8h[0x14b] = puVar16;\n        arg_8h[1] = var_40h;\n        *arg_8h = var_50h;\ncode_r0x004094f6:\n        arg_8h[0x26ee] = var_3ch;\n        fcn.00408874();\n        return 0xffffffff;\n    }\n    // switch table (16 cases) at 0x40b4d0\n    puVar11 = var_48h;\n    switch(*(arg_8h[4] * 4 + 0x40b4d0)) {\n    case 0x40896a:\n        for (; puVar15 < 0xe; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        arg_8h[5] = puVar16 & 0x3fff;\n        if (((puVar16 & 0x1f) < 0x1e) && (((puVar16 & 0x3fff) >> 5 & 0x1f) < 0x1e)) {\n            puVar16 = puVar16 >> 0xe;\n            puVar15 = puVar15 + -0xe;\n            arg_8h[6] = NULL;\n            arg_8h[4] = 0xc;\n            goto code_r0x00408cf6;\n        }\n        arg_8h[0x14a] = puVar15;\n        arg_8h[4] = 0x11;\n        arg_8h[0x14b] = puVar16;\n        *arg_8h = var_50h;\n        arg_8h[1] = var_40h;\n        goto code_r0x004094f6;\n    case 0x408972:\n        for (; puVar15 < 0x3; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        puVar15 = puVar15 + -3;\n        uVar5 = puVar16 & 7;\n        uVar4 = puVar16 & 1;\n        puVar16 = puVar16 >> 3;\n        uVar5 = uVar5 >> 1;\n        arg_8h[0x149] = (-(uVar4 == 0) & 0xfffffff9) + 0xf;\n        if (uVar5 == 2) {\n            arg_8h[4] = 0xb;\n            goto code_r0x00408956;\n        }\n        if (uVar5 == 3) goto code_r0x004094d8;\n        if (uVar5 != 1) {\n            puVar16 = puVar16 >> (puVar15 & 7);\n            arg_8h[4] = 0x9;\n            puVar15 = puVar15 & 0xfffffff8;\n            goto code_r0x00408956;\n        }\n        if (*0x44d5f8 == '\\0') {\n            var_2ch = 0;\n            iVar8 = 0;\n            cVar12 = '\\b';\n            while( true ) {\n                *(iVar8 * 4 + 0x44d5fc) = cVar12;\n                iVar8 = iVar8 + 1;\n                if (iVar8 == 0x120) break;\n                cVar12 = '\\b';\n                if ((0x8f < iVar8) && (cVar12 = '\\t',  0xff < iVar8)) {\n                    cVar12 = (0x117 < iVar8) + '\\a';\n                }\n            }\n            fcn.00408350(0x40b510, 0x40b550, 0x44da7c, 0x40a088, 0x44da80, &var_2ch);\n            iVar8 = 0;\n            do {\n                *(iVar8 * 4 + 0x44d5fc) = 5;\n                iVar8 = iVar8 + 1;\n            } while (iVar8 != 0x1e);\n            fcn.00408350(0x40b590, 0x40b5cc, 0x44e300, 0x40a08c, 0x44da80, &var_2ch);\n            *0x44d5f8 = '\\x01';\n        }\n        *(arg_8h + 8) = *0x40a088;\n        *(arg_8h + 0x21) = *0x40a08c;\n        arg_8h[9] = *0x44da7c;\n        arg_8h[10] = *0x44e300;\n        break;\n    case 0x408b1e:\n        for (; puVar15 < 0x20; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        puVar15 = 0xa;\n        arg_8h[5] = puVar16 & 0xffff;\n        if ((puVar16 & 0xffff) == NULL) {\n            puVar15 = arg_8h[0x149];\n        }\n        arg_8h[4] = puVar15;\n        puVar16 = NULL;\n        puVar15 = NULL;\n        goto code_r0x00408956;\n    case 0x408b4d:\n        if (var_40h == NULL) {\n            arg_8h[0x14a] = puVar15;\n            arg_8h[0x14b] = puVar16;\n            arg_8h[1] = NULL;\n            var_4ch = var_50h;\n            goto code_r0x00408b69;\n        }\n        if (var_48h == NULL) {\n            if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 = arg_8h[0x26ed],  ppuVar14 != ppuVar1)) {\n                var_48h = var_3ch - ppuVar1;\n                if (ppuVar1 < ppuVar14) {\n                    var_48h = ppuVar14 + (-1 - ppuVar1);\n                }\n                var_3ch = ppuVar1;\n                if (var_48h != NULL) goto code_r0x00408c22;\n            }\n            arg_8h[0x26ee] = var_3ch;\n            fcn.00408874();\n            var_3ch = arg_8h[0x26ee];\n            ppuVar14 = arg_8h[0x26ed];\n            if (var_3ch < ppuVar14) {\n                var_48h = ppuVar14 + (-1 - var_3ch);\n            }\n            else {\n                var_48h = arg_8h[0x26ec] + -var_3ch;\n            }\n            if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 != ppuVar1)) {\n                if (ppuVar1 < ppuVar14) {\n                    var_48h = ppuVar14 + (-1 - ppuVar1);\n                    var_3ch = ppuVar1;\n                }\n                else {\n                    var_48h = var_3ch - ppuVar1;\n                    var_3ch = ppuVar1;\n                }\n            }\n            if (var_48h == NULL) {\ncode_r0x00409304:\n                arg_8h[0x14a] = puVar15;\n                arg_8h[0x14b] = puVar16;\n                arg_8h[0x26ee] = var_3ch;\n                arg_8h[1] = var_40h;\n                *arg_8h = var_50h;\n                goto code_r0x00408b74;\n            }\n        }\ncode_r0x00408c22:\n        puVar11 = arg_8h[5];\n        if (var_40h <= arg_8h[5]) {\n            puVar11 = var_40h;\n        }\n        if (var_48h < puVar11) {\n            puVar11 = var_48h;\n        }\n        fcn.0040757f(var_3ch, var_50h, puVar11);\n        var_50h = var_50h + puVar11;\n        var_40h = var_40h + -puVar11;\n        var_48h = var_48h + -puVar11;\n        var_3ch = var_3ch + puVar11;\n        puVar13 = arg_8h[5];\n        arg_8h[5] = puVar13 + -puVar11;\n        if (puVar13 + -puVar11 == NULL) {\n            arg_8h[4] = arg_8h[0x149];\n        }\n        goto code_r0x00408956;\n    case 0x408cf6:\ncode_r0x00408cf6:\n        puVar11 = arg_8h[5];\n        while (puVar13 = arg_8h[6],  puVar13 < (puVar11 >> 10) + 4) {\n            for (; puVar15 < 0x3; puVar15 = puVar15 + 8) {\n                if (var_40h == NULL) goto code_r0x00409205;\n                uVar2 = *var_50h;\n                var_50h = var_50h + 1;\n                var_40h = var_40h + -1;\n                puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n            }\n            puVar6 = puVar16 & 7;\n            puVar15 = puVar15 + -3;\n            puVar16 = puVar16 >> 3;\n            arg_8h[puVar13[0x40b608] + 7] = puVar6;\n            arg_8h[6] = puVar13 + 1;\n        }\n        while (puVar11 = arg_8h[6],  puVar11 < 0x13) {\n            arg_8h[puVar11[0x40b608] + 7] = NULL;\n            arg_8h[6] = puVar11 + 1;\n        }\n        arg_8h[0x147] = 0x7;\n        var_2ch = 0;\n        iVar8 = fcn.00408350(0, 0, arg_8h + 0x148, arg_8h + 0x147, arg_18h, &var_2ch);\n        if ((iVar8 != 0) || (arg_8h[0x147] == NULL)) goto code_r0x00408dd3;\n        arg_8h[6] = NULL;\n        arg_8h[4] = 0xd;\ncode_r0x00408ded:\n        uVar4 = arg_8h[5] & 0x1f;\n        puVar11 = uVar4 + 0x102 + (arg_8h[5] >> 5 & 0x1f);\n        while (puVar13 = arg_8h[6],  puVar13 < puVar11) {\n            var_4ch = var_50h;\n            for (; var_50h = var_4ch,  puVar15 < arg_8h[0x147]; puVar15 = puVar15 + 8) {\n                if (var_40h == NULL) goto code_r0x00408ebc;\n                var_40h = var_40h + -1;\n                puVar16 = puVar16 | *var_4ch << (puVar15 & 0x1f);\n                var_4ch = var_4ch + 1;\n            }\n            uVar5 = *(arg_8h[0x147] * 2 + 0x40b61c) & puVar16;\n            uVar2 = arg_8h[0x148][uVar5 * 4 + 1];\n            uVar9 = uVar2;\n            puVar6 = *(arg_8h[0x148] + uVar5 * 4 + 2);\n            if (puVar6 < 0x10) {\n                arg_8h[puVar13 + 7] = puVar6;\n                puVar15 = puVar15 + -uVar9;\n                puVar16 = puVar16 >> (uVar2 & 0x1f);\n                arg_8h[6] = puVar13 + 1;\n            }\n            else {\n                if (puVar6 == 0x12) {\n                    var_70h = 0xb;\n                    var_5ch = 0x7;\n                }\n                else {\n                    var_70h = 3;\n                    var_5ch = puVar6 + -0xe;\n                }\n                for (; var_50h = var_4ch,  puVar15 < var_5ch + uVar9; puVar15 = puVar15 + 8) {\n                    if (var_40h == NULL) goto code_r0x00408ebc;\n                    var_40h = var_40h + -1;\n                    puVar16 = puVar16 | *var_4ch << (puVar15 & 0x1f);\n                    var_4ch = var_4ch + 1;\n                }\n                uVar5 = puVar16 >> (uVar2 & 0x1f);\n                puVar15 = puVar15 + (-var_5ch - uVar9);\n                var_54h = (*(var_5ch * 2 + 0x40b61c) & uVar5) + var_70h;\n                puVar16 = uVar5 >> (var_5ch & 0x1f);\n                puVar10 = puVar13 + var_54h;\n                if (puVar11 < puVar10) {\ncode_r0x00408f2b:\n                    arg_8h[0x14a] = puVar15;\n                    arg_8h[4] = 0x11;\n                    arg_8h[0x14b] = puVar16;\n                    *arg_8h = var_4ch;\n                    arg_8h[1] = var_40h;\n                    goto code_r0x004094f6;\n                }\n                puVar7 = NULL;\n                if (puVar6 == 0x10) {\n                    if (puVar13 == NULL) goto code_r0x00408f2b;\n                    puVar7 = arg_8h[puVar13 + 6];\n                }\n                do {\n                    arg_8h[puVar13 + 7] = puVar7;\n                    puVar13 = puVar13 + 1;\n                    var_54h = var_54h + -1;\n                } while (var_54h != 0);\n                arg_8h[6] = puVar10;\n            }\n        }\n        arg_8h[0x148] = NULL;\n        var_2ch = 0;\n        var_28h = 9;\n        var_24h = 6;\n        iVar8 = fcn.00408350(0x40b510, 0x40b550, &var_20h, &var_28h, arg_18h, &var_2ch);\n        if ((((var_28h == 0) || (iVar8 != 0)) ||\n            (iVar8 = fcn.00408350(0x40b590, 0x40b5cc, &var_1ch, &var_24h, arg_18h, &var_2ch),  iVar8 != 0)) ||\n           ((0x101 < uVar4 + 0x101 && (var_24h == 0)))) goto code_r0x004094d8;\n        *(arg_8h + 0x21) = var_24h;\n        arg_8h[9] = var_20h;\n        *(arg_8h + 8) = var_28h;\n        arg_8h[10] = var_1ch;\ncode_r0x00409065:\n        arg_8h[4] = 0x1;\n        arg_8h[7] = *(arg_8h + 8);\n        arg_8h[6] = arg_8h[9];\ncode_r0x00409079:\n        for (; puVar15 < arg_8h[7]; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        puVar11 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40b61c) & puVar16) * 4;\n        puVar15 = puVar15 + -puVar11[1];\n        uVar2 = *puVar11;\n        puVar13 = uVar2;\n        puVar16 = puVar16 >> (puVar11[1] & 0x1f);\n        if (puVar13 == NULL) {\n            uVar3 = *(puVar11 + 2);\n            arg_8h[4] = 0x6;\n            arg_8h[6] = uVar3;\n        }\n        else if ((uVar2 & 0x10) == 0) {\n            if ((uVar2 & 0x40) == 0) goto code_r0x004091e2;\n            if ((uVar2 & 0x20) == 0) goto code_r0x004094d8;\n            arg_8h[4] = 0x7;\n        }\n        else {\n            arg_8h[6] = puVar13 & 0xf;\n            uVar3 = *(puVar11 + 2);\n            arg_8h[4] = 0x2;\n            arg_8h[5] = uVar3;\n        }\n        goto code_r0x00408956;\n    case 0x408ded:\n        goto code_r0x00408ded;\n    case 0x409065:\n        goto code_r0x00409065;\n    case 0x409079:\n        goto code_r0x00409079;\n    case 0x409119:\n        puVar11 = arg_8h[6];\n        for (; puVar15 < puVar11; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        arg_8h[4] = 0x3;\n        puVar15 = puVar15 + -puVar11;\n        arg_8h[5] = arg_8h[5] + (*(puVar11 * 2 + 0x40b61c) & puVar16);\n        puVar16 = puVar16 >> (puVar11 & 0x1f);\n        arg_8h[7] = *(arg_8h + 0x21);\n        arg_8h[6] = arg_8h[10];\n    case 0x40916e:\n        for (; puVar15 < arg_8h[7]; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        puVar11 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40b61c) & puVar16) * 4;\n        puVar15 = puVar15 + -puVar11[1];\n        uVar2 = *puVar11;\n        puVar13 = uVar2;\n        puVar16 = puVar16 >> (puVar11[1] & 0x1f);\n        if ((uVar2 & 0x10) == 0) {\n            if ((uVar2 & 0x40) != 0) goto code_r0x004094d8;\ncode_r0x004091e2:\n            arg_8h[7] = puVar13;\n            arg_8h[6] = puVar11 + *(puVar11 + 2) * 4;\n        }\n        else {\n            arg_8h[6] = puVar13 & 0xf;\n            uVar3 = *(puVar11 + 2);\n            arg_8h[4] = 0x4;\n            arg_8h[7] = uVar3;\n        }\n        goto code_r0x00408956;\n    case 0x4091f4:\n        puVar13 = arg_8h[6];\n        for (; puVar15 < puVar13; puVar15 = puVar15 + 8) {\n            if (var_40h == NULL) goto code_r0x00409205;\n            uVar2 = *var_50h;\n            var_50h = var_50h + 1;\n            var_40h = var_40h + -1;\n            puVar16 = puVar16 | uVar2 << (puVar15 & 0x1f);\n        }\n        arg_8h[4] = 0x5;\n        puVar15 = puVar15 + -puVar13;\n        arg_8h[7] = arg_8h[7] + (*(puVar13 * 2 + 0x40b61c) & puVar16);\n        puVar16 = puVar16 >> (puVar13 & 0x1f);\n    case 0x409252:\n        puVar13 = arg_8h[7];\n        ppuVar14 = var_3ch - puVar13;\n        if (var_3ch - ppuVar1 < puVar13) {\n            ppuVar14 = arg_8h[0x26ec] + -(puVar13 + (ppuVar1 - var_3ch));\n        }\n        while (var_48h = ppuVar14,  arg_8h[5] != NULL) {\n            if (puVar11 == NULL) {\n                if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 = arg_8h[0x26ed],  ppuVar14 != ppuVar1)) {\n                    puVar11 = var_3ch - ppuVar1;\n                    if (ppuVar1 < ppuVar14) {\n                        puVar11 = ppuVar14 + (-1 - ppuVar1);\n                    }\n                    var_3ch = ppuVar1;\n                    if (puVar11 != NULL) goto code_r0x00409326;\n                }\n                arg_8h[0x26ee] = var_3ch;\n                fcn.00408874();\n                var_3ch = arg_8h[0x26ee];\n                ppuVar14 = arg_8h[0x26ed];\n                if (var_3ch < ppuVar14) {\n                    puVar11 = ppuVar14 + (-1 - var_3ch);\n                }\n                else {\n                    puVar11 = arg_8h[0x26ec] + -var_3ch;\n                }\n                if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 != ppuVar1)) {\n                    if (ppuVar1 < ppuVar14) {\n                        puVar11 = ppuVar14 + (-1 - ppuVar1);\n                        var_3ch = ppuVar1;\n                    }\n                    else {\n                        puVar11 = var_3ch - ppuVar1;\n                        var_3ch = ppuVar1;\n                    }\n                }\n                if (puVar11 == NULL) goto code_r0x00409304;\n            }\ncode_r0x00409326:\n            *var_3ch = *var_48h;\n            var_3ch = var_3ch + 1;\n            ppuVar14 = ppuVar1;\n            if (var_48h + 1U != arg_8h[0x26ec]) {\n                ppuVar14 = var_48h + 1U;\n            }\n            arg_8h[5] = arg_8h[5] + -1;\n            puVar11 = puVar11 + -1;\n        }\n        break;\n    case 0x40936d:\n        if (var_48h == NULL) {\n            if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 = arg_8h[0x26ed],  ppuVar14 != ppuVar1)) {\n                var_48h = var_3ch - ppuVar1;\n                if (ppuVar1 < ppuVar14) {\n                    var_48h = ppuVar14 + (-1 - ppuVar1);\n                }\n                var_3ch = ppuVar1;\n                if (var_48h != NULL) goto code_r0x0040942f;\n            }\n            arg_8h[0x26ee] = var_3ch;\n            fcn.00408874();\n            var_3ch = arg_8h[0x26ee];\n            ppuVar14 = arg_8h[0x26ed];\n            if (var_3ch < ppuVar14) {\n                var_48h = ppuVar14 + (-1 - var_3ch);\n            }\n            else {\n                var_48h = arg_8h[0x26ec] + -var_3ch;\n            }\n            if ((var_3ch == arg_8h[0x26ec]) && (ppuVar14 != ppuVar1)) {\n                if (ppuVar1 < ppuVar14) {\n                    var_48h = ppuVar14 + (-1 - ppuVar1);\n                    var_3ch = ppuVar1;\n                }\n                else {\n                    var_48h = var_3ch - ppuVar1;\n                    var_3ch = ppuVar1;\n                }\n            }\n            if (var_48h == NULL) {\n                arg_8h[0x14a] = puVar15;\n                arg_8h[0x14b] = puVar16;\n                arg_8h[0x26ee] = var_3ch;\n                arg_8h[1] = var_40h;\n                *arg_8h = var_50h;\n                goto code_r0x00408b74;\n            }\n        }\ncode_r0x0040942f:\n        *var_3ch = arg_8h[6];\n        var_3ch = var_3ch + 1;\n        puVar11 = var_48h + -1;\n        break;\n    case 0x409447:\n        if (0x7 < puVar15) {\n            var_40h = var_40h + 1;\n            puVar15 = puVar15 + -8;\n            var_50h = var_50h + -1;\n        }\n    case 0x409455:\n        arg_8h[0x26ee] = var_3ch;\n        fcn.00408874();\n        var_3ch = arg_8h[0x26ee];\n        if ((var_3ch < arg_8h[0x26ed]) || (var_3ch != arg_8h[0x26ed])) {\n            arg_8h[0x14a] = puVar15;\n            arg_8h[0x14b] = puVar16;\n            arg_8h[1] = var_40h;\n            *arg_8h = var_50h;\n            goto code_r0x00408b74;\n        }\n        arg_8h[4] = arg_8h[0x149];\n        if (arg_8h[0x149] != 0x8) {\n            arg_8h[0x14a] = puVar15;\n            arg_8h[0x14b] = puVar16;\n            arg_8h[1] = var_40h;\n            *arg_8h = var_50h;\n            fcn.00408874();\n            return 1;\n        }\n        var_48h = arg_8h[0x26ec] + -var_3ch;\n        goto code_r0x00408956;\n    case 0x4094d8:\n        goto code_r0x004094d8;\n    }\n    var_48h = puVar11;\n    arg_8h[4] = NULL;\n    goto code_r0x00408956;\ncode_r0x00408dd3:\n    arg_8h[4] = 0x11;\n    goto code_r0x00408956;\ncode_r0x00409205:\n    arg_8h[0x14b] = puVar16;\n    arg_8h[0x14a] = puVar15;\n    arg_8h[1] = NULL;\n    *arg_8h = var_50h;\n    goto code_r0x00408b6b;\ncode_r0x00408ebc:\n    arg_8h[0x14a] = puVar15;\n    arg_8h[0x14b] = puVar16;\n    arg_8h[1] = NULL;\ncode_r0x00408b69:\n    *arg_8h = var_4ch;\ncode_r0x00408b6b:\n    arg_8h[0x26ee] = var_3ch;\ncode_r0x00408b74:\n    fcn.00408874();\n    return 0;\n}\n",
        "token_count": 7624
    },
    "00403a93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00403a93(int32_t arg_8h, uint hFile, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    int32_t var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint ARG_0;\n    uint32_t nNumber;\n    uint32_t var_1ch;\n    uint var_ch;\n    \n    uVar7 = 0x8000;\n    var_70h = 0x424850;\n    if (arg_10h != 0) {\n        uVar7 = arg_14h;\n        var_70h = arg_10h;\n    }\n    if (-1 < arg_8h) {\n        fcn.00403a61(arg_8h + *0x44e838);\n    }\n    iVar2 = fcn.00403a15(&nNumber, 4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    uVar5 = 0xfffffffd;\n    if (iVar2 != 0) {\n        if (nNumber < 0) {\n            uVar5 = 0;\n            var_78h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x42c860 = 8;\n            *0x42cd7c = 0;\n            *0x42cd78 = 0;\n            uVar4 = nNumber & 0x7fffffff;\n            *0x436408 = 0x42e400;\n            *0x436404 = 0x42e400;\n            *0x436400 = 0x436400;\n            nNumber = uVar4;\n            while (0 < nNumber) {\n                uVar6 = 0x4000;\n                if (nNumber < 0x4001) {\n                    uVar6 = nNumber;\n                }\n                iVar2 = fcn.00403a15(0x420850, uVar6);\n                if (iVar2 == 0) {\n                    return 0xfffffffd;\n                }\n                nNumber = nNumber - uVar6;\n                *0x42c850 = 0x420850;\n                *0x42c854 = uVar6;\n                while( true ) {\n                    *0x42c858 = var_70h;\n                    *0x42c85c = uVar7;\n                    uVar8 = fcn.004088f3(0x42c850);\n                    if (uVar8 < 0) {\n                        return 0xfffffffc;\n                    }\n                    uVar6 = *0x42c858 - var_70h;\n                    iVar2 = (*pcVar1)(uVar8 >> 0x20);\n                    if (((*0x44e7f0 & 1) != 0) && ((200 < iVar2 - var_78h || (nNumber == 0)))) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar4 - nNumber, 100, uVar4);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, \"... %d%%\", uVar3);\n                        fcn.00406bb6(0, &ARG_0);\n                        var_78h = iVar2;\n                    }\n                    if (uVar6 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, var_70h, uVar6, &var_1ch, 0);\n                        if (iVar2 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (var_1ch != uVar6) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        uVar7 = uVar7 - uVar6;\n                        var_70h = *0x42c858;\n                    }\n                    uVar5 = uVar5 + uVar6;\n                    if (uVar8 == 1) {\n                        return uVar5;\n                    }\n                }\n            }\n        }\n        else if (arg_10h == 0) {\n            uVar5 = 0;\n            for (; 0 < nNumber; nNumber = nNumber - uVar4) {\n                uVar4 = nNumber;\n                if (uVar7 <= nNumber) {\n                    uVar4 = uVar7;\n                }\n                iVar2 = fcn.00403a15(0x420850, uVar4);\n                if (iVar2 == 0) {\n                    return 0xfffffffd;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x420850, uVar4, &var_1ch, 0);\n                if ((iVar2 == 0) || (uVar4 != var_1ch)) {\n                    return 0xfffffffe;\n                }\n                uVar5 = uVar5 + uVar4;\n            }\n        }\n        else {\n            if (nNumber < arg_14h) {\n                arg_14h = nNumber;\n            }\n            iVar2 = fcn.00403a15(arg_10h, arg_14h);\n            if (iVar2 != 0) {\n                uVar5 = arg_14h;\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1267
    },
    "00404952": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00404952(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint arg_8h_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar4 = *0x44e80c;\n    iVar3 = *0x44e808;\n    uVar1 = *0x44e7f4;\n    uVar5 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    arg_8h_00 = uVar5 >> 0x20;\n    *0x44e7f4 = uVar5 | uVar1;\n    fcn.00404847(arg_8h_00);\n    do {\n        if (iVar4 == 0) {\ncode_r0x004049bf:\n            fcn.00404847(arg_8h_00);\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            return *0x44e7c8;\n        }\n        if ((*(iVar3 + 8) & 1) != 0) {\n            arg_8h_00 = *(iVar3 + 0xc);\n            iVar2 = fcn.004037eb(arg_8h_00, arg_8h);\n            if (iVar2 != 0) {\n                *0x44e7c8 = *0x44e7c8 + 1;\n                goto code_r0x004049bf;\n            }\n        }\n        iVar3 = iVar3 + 0x2018;\n        iVar4 = iVar4 + -1;\n    } while( true );\n}\n",
        "token_count": 390
    },
    "00404c92": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __fastcall fcn.00404c92(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    if (in_EAX - 0x133U < 6) {\n        puVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1, 0xffffffeb);\n        if (puVar1 != NULL) {\n            uVar2 = *puVar1;\n            if ((*(puVar1 + 5) & 2) != 0) {\n                uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(uVar2, extraout_ECX);\n            }\n            if ((*(puVar1 + 5) & 1) != 0) {\n                (*_sym.imp.GDI32.dll_SetTextColor)(param_2, uVar2);\n            }\n            uVar2 = (*_sym.imp.GDI32.dll_SetBkMode)(param_2, puVar1[4]);\n            var_20h = puVar1[1];\n            if ((*(puVar1 + 5) & 8) != 0) {\n                var_20h = (*_sym.imp.USER32.dll_GetSysColor)(var_20h, uVar2);\n            }\n            if ((*(puVar1 + 5) & 4) != 0) {\n                (*_sym.imp.GDI32.dll_SetBkColor)(param_2, var_20h);\n                uVar2 = param_2;\n            }\n            if ((*(puVar1 + 5) & 0x10) != 0) {\n                var_24h = puVar1[2];\n                if (puVar1[3] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(puVar1[3], uVar2);\n                }\n                uVar2 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_24h);\n                puVar1[3] = uVar2;\n            }\n            uVar2 = puVar1[3];\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 518
    },
    "004014f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t __fastcall fcn.004014f3(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint var_130h;\n    uint var_12ch;\n    uint var_121h;\n    uint hKey;\n    uint var_bp_ch;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    pcVar3 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (uVar1 == 0) {\n        do {\n            iVar2 = (*pcVar3)(hKey, 0, &var_121h, 0x105);\n            if (iVar2 != 0) break;\n            if (param_1 != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return 1;\n            }\n            iVar2 = fcn.004014f3();\n        } while (iVar2 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        pcVar3 = fcn.00407cf7(2);\n        if (pcVar3 == NULL) {\n            uVar1 = 1;\n            if (*0x44e7ec == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n                uVar1 = iVar2 != 0;\n            }\n        }\n        else {\n            uVar1 = (*pcVar3)();\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 358
    },
    "004037eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004037eb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    while ((-1 < arg_8h && (*(arg_8h * 0x1c + *0x44e810) != 1))) {\n        iVar2 = fcn.0040164f();\n        if (iVar2 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar2 = fcn.0040160f(iVar2);\n        if (iVar2 == 0) {\n            iVar2 = arg_8h + 1;\n            iVar3 = 1;\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            iVar3 = iVar2 - arg_8h;\n        }\n        arg_8h = iVar2;\n        if (arg_ch != 0) {\n            *0x452868 = iVar3 + *0x452868;\n            iVar2 = *0x452868;\n            uVar5 = *0x452870;\n            uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n            (*pcVar1)(arg_ch, 0x402, uVar4, 0, iVar2, uVar5);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 347
    },
    "00403979": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403979(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    if (arg_8h == 0) {\n        if (*0x41884c == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x44e840 < uVar1) {\n                *0x41884c = (*_sym.imp.USER32.dll_CreateDialogParamA)(*0x44e858, 0x6f, 0, fcn.004038c4, 0);\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x41884c, 5);\n            }\n        }\n        else {\n            fcn.00408298(0);\n        }\n    }\n    else {\n        if (*0x41884c != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x41884c);\n        }\n        *0x41884c = 0;\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "004047db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004047db(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x44044c;\n    if (*0x44e7c8 == 0) {\n        uVar1 = *0x440448;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 89
    },
    "00404bf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00404bf8(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    \n    if (arg_ch == 1) {\n        fcn.00407309(0x3fb, arg_14h);\n        uVar3 = 1;\n        uVar2 = 0x466;\n    }\n    else {\n        if (arg_ch != 2) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        arg_14h = 0;\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040389b(0x404c5f);\n            arg_14h = iVar1 == 0;\n        }\n        uVar3 = 0;\n        uVar2 = 0x465;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, uVar2, uVar3, arg_14h);\n    return 0;\n}\n",
        "token_count": 288
    },
    "00404d6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00404d6e(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if ((arg_ch == 0x408) || (arg_ch == 0x110)) {\n        *0x440444 = arg_10h;\n        if (arg_ch == 0x110) {\n            *0x44e854 = arg_8h;\n            *0x440448 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1);\n            *0x44044c = (*pcVar1)(arg_8h, 2);\n            fcn.00404914(pcVar1, pcVar1);\n            (*_sym.imp.USER32.dll_SetClassLongA)(arg_8h, 0xfffffff2, *0x45286c);\n            *0x45285c = fcn.0040389b(4);\n            *0x440444 = 1;\n        }\n        piVar6 = *0x40a014 * 0x40 + *0x44e800;\n        if (-1 < *0x40a014) {\n            if ((*0x440444 == 1) && (iVar2 = fcn.004037eb(piVar6[4], 0),  iVar2 != 0)) {\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x452874, 0x40f, 0, 1);\n                return *0x45285c == 0;\n            }\n            if (*piVar6 == 0) {\n                return 0;\n            }\n        }\n        fcn.00404847();\n        while( true ) {\n            uVar7 = *0x440444;\n            *0x40a014 = *0x40a014 + *0x440444;\n            if (*0x40a014 == *0x44e804) {\n                fcn.0040389b(1);\n            }\n            if ((*0x45285c != 0) || (*0x44e804 <= *0x40a014)) break;\n            piVar6 = piVar6 + uVar7 * 0x10;\n            uVar7 = piVar6[5];\n            uVar3 = fcn.00407927(0x495000, piVar6[9]);\n            fcn.00404914(uVar3, uVar3);\n            fcn.00404914();\n            fcn.00404914();\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 3);\n            if (*0x44e7c8 != 0) {\n                uVar7 = uVar7 & 0xfffffefd | 4;\n            }\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, uVar7 & 8);\n            pcVar1 = _sym.imp.USER32.dll_EnableWindow;\n            uVar4 = (*_sym.imp.USER32.dll_EnableWindow)(uVar3, uVar7 & 0x100);\n            uVar7 = uVar7 & 4;\n            fcn.004048f8(uVar4, uVar4);\n            (*pcVar1)(*0x44044c, uVar7);\n            if (uVar7 == 0) {\n                uVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)(arg_8h, 0);\n            }\n            else {\n                uVar4 = (*_sym.imp.USER32.dll_GetSystemMenu)(arg_8h, 0);\n            }\n            (*_sym.imp.USER32.dll_EnableMenuItem)(uVar4, 0xf060, uVar7 == 0);\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(uVar3, 0xf4, 0, 1);\n            if (*0x44e7c8 != 0) {\n                (*pcVar1)(arg_8h, 0x401, 2, 0);\n            }\n            fcn.0040481a();\n            uVar3 = fcn.00407815(0x438418, 0x44e85c);\n            iVar2 = piVar6[6];\n            iVar5 = fcn.0040783d(0x438418, uVar3);\n            fcn.00407927(iVar5 + 0x438418, iVar2);\n            (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, 0x438418);\n            uVar8 = fcn.004037eb(piVar6[2], 0);\n            if ((uVar8 == 0) && (*piVar6 != 0)) {\n                if (piVar6[1] != 5) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(*0x452874, uVar8 >> 0x20);\n                    *0x440454 = piVar6;\n                    if ((0 < *piVar6) &&\n                       (*0x452874 = (*_sym.imp.USER32.dll_CreateDialogParamA)\n                                              (*0x44e858, *piVar6 + *0x452878 & 0xffff, arg_8h, \n                                               *(piVar6[1] * 4 + 0x40b370), piVar6),  *0x452874 != 0)) {\n                        fcn.00404914();\n                        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fa);\n                        (*_sym.imp.USER32.dll_GetWindowRect)(uVar3, &var_28h);\n                        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &var_28h);\n                        (*_sym.imp.USER32.dll_SetWindowPos)(*0x452874, 0, var_28h, var_24h, 0, 0, 0x15);\n                        fcn.004037eb(piVar6[3], 0);\n                        if (*0x45285c != 0) {\n                            return 0;\n                        }\n                        uVar3 = (*_sym.imp.USER32.dll_ShowWindow)(*0x452874, 8);\n                        fcn.00404847(uVar3, uVar3);\n                    }\n                    goto code_r0x0040523a;\n                }\n                if ((*0x44e7c8 != 0) || (*0x44e7bc == 0)) {\n                    return 0;\n                }\n            }\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x452874);\n        *0x44e854 = 0;\n        (*_sym.imp.USER32.dll_EndDialog)(arg_8h, *0x440450);\ncode_r0x0040523a:\n        if (*0x438414 != 0) {\n            return 0;\n        }\n        if (*0x452874 == 0) {\n            return 0;\n        }\n        (*_sym.imp.USER32.dll_ShowWindow)(arg_8h, 10);\n        *0x438414 = 1;\n        return 0;\n    }\n    if (arg_ch == 0x47) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*0x440440, arg_8h, 0, 0, 0, 0, 0x13);\n        goto code_r0x0040542d;\n    }\n    if (arg_ch == 5) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x440440, (arg_10h != 1) * '\\x05');\n        goto code_r0x0040542d;\n    }\n    if (arg_ch == 0x40d) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x452874);\n        *0x452874 = arg_10h;\n        goto code_r0x0040523a;\n    }\n    if (arg_ch == 0x11) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_8h, 0, 0);\n        return 1;\n    }\n    if (arg_ch != 0x111) goto code_r0x0040542d;\n    uVar7 = arg_10h & 0xffff;\n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, uVar7);\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0xf3, 0, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar2);\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    if (uVar7 != 1) {\n        if (uVar7 == 3) {\n            if (*0x40a014 < 1) {\ncode_r0x00405409:\n                (*_sym.imp.USER32.dll_SendMessageA)(*0x452874, 0x111, arg_10h, arg_14h);\n                goto code_r0x0040542d;\n            }\n        }\n        else {\n            if (uVar7 != 2) goto code_r0x00405409;\n            if (*0x44e7c8 == 0) {\n                iVar2 = fcn.0040389b(3);\n                if (iVar2 != 0) goto code_r0x0040542d;\n                *0x440450 = 1;\n            }\n            else {\n                fcn.0040389b(2);\n                *0x440450 = 2;\n            }\n        }\n    }\n    fcn.00404879();\ncode_r0x0040542d:\n    uVar7 = fcn.00404c92();\n    return uVar7;\n}\n",
        "token_count": 2269
    },
    "004054ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004054ad(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint extraout_ECX;\n    int32_t iVar12;\n    ushort *puVar13;\n    ulong uVar14;\n    int32_t iVar15;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_6ch;\n    uint *var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    code *var_4ch;\n    int32_t var_48h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    iVar2 = *0x440454;\n    uVar5 = *(*0x440454 + 0x38);\n    iVar12 = *(*0x440454 + 0x3c) * 0x2000 + 0x459000;\n    iVar6 = arg_ch;\n    if (arg_ch == 0x40b) {\n        fcn.00407309(0x3fb, iVar12);\n        fcn.00407853(iVar12);\n    }\n    else if (arg_ch == 0x110) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar15 = iVar12;\n        uVar5 = extraout_ECX;\n        uVar14 = fcn.00407462(iVar12);\n        iVar8 = uVar14 >> 0x20;\n        if ((uVar14 != 0) && (iVar8 = iVar12,  iVar4 = fcn.00407490(iVar12),  iVar4 == 0)) {\n            fcn.004073ae(iVar12);\n        }\n        *0x452874 = arg_8h;\n        uVar5 = (*_sym.imp.USER32.dll_SetWindowTextA)(uVar3, iVar12, iVar8, iVar15, uVar5);\n        fcn.00404914(uVar5, uVar5);\n        fcn.00404914();\n        fcn.0040481a();\n        pcVar7 = fcn.00407cf7(7);\n        if (pcVar7 != NULL) {\n            (*pcVar7)(uVar3, 1);\n        }\n    }\n    else if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            iVar6 = 0x40f;\n            if (arg_10h >> 0x10 != 0x300) {\n                iVar6 = arg_ch;\n            }\n        }\n        else if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar10 = &var_60h;\n            for (iVar8 = 8; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n            var_60h = arg_8h;\n            var_58h = 0x438418;\n            var_4ch = fcn.00404bf8;\n            var_48h = iVar12;\n            uVar14 = fcn.00407927(0x440458, uVar5);\n            var_54h = uVar14;\n            var_50h = 0x41;\n            iVar8 = (*_sym.imp.SHELL32.DLL_SHBrowseForFolderA)(&var_60h, uVar14 >> 0x20);\n            if (iVar8 == 0) {\n                arg_ch = 0x40f;\n                iVar6 = arg_ch;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar8);\n                fcn.004073ae(iVar12);\n                if ((*(*0x44e7fc + 0x11c) != 0) && (iVar12 == 0x483000)) {\n                    fcn.00407927(0, *(*0x44e7fc + 0x11c));\n                    iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x452884, 0x438418);\n                    if (iVar8 != 0) {\n                        fcn.00407848();\n                    }\n                }\n                *0x442458 = *0x442458 + 1;\n                fcn.004072fe(arg_8h, 0x3fb, iVar12);\n            }\n        }\n    }\n    arg_ch = iVar6;\n    if ((arg_ch == 0x405) || (arg_ch == 0x40f)) {\n        fcn.00407309(0x3fb, iVar12);\n        iVar6 = fcn.00407c40(iVar12);\n        fcn.00407815(0x44245c, iVar12);\n        pcVar7 = fcn.00407cf7(0);\n        if (pcVar7 != NULL) {\n            puVar13 = NULL;\n            do {\n                puVar10 = &var_40h;\n                iVar8 = (*pcVar7)(0x44245c, puVar10, &var_38h, &var_30h);\n                if (iVar8 != 0) {\n                    bVar1 = true;\n                    var_6ch = var_40h >> 10 | var_3ch << 0x16;\n                    goto code_r0x0040580e;\n                }\n                if (puVar13 != NULL) {\n                    *puVar13 = 0;\n                }\n                iVar8 = fcn.00407424(0x44245c);\n                puVar13 = iVar8 + -1;\n                *(iVar8 + -1) = 0x5c;\n            } while (puVar13 != 0x44245c);\n        }\n        fcn.00407815(0x44245c, iVar12);\n        puVar9 = fcn.00407490(0x44245c);\n        if (puVar9 != NULL) {\n            *puVar9 = 0;\n        }\n        puVar10 = &var_1ch;\n        bVar1 = false;\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)(0x44245c, &var_28h, &var_24h, &var_20h, puVar10);\n        if (iVar12 != 0) {\n            bVar1 = true;\n            puVar10 = var_28h * var_24h;\n            var_6ch = (*_sym.imp.KERNEL32.dll_MulDiv)(puVar10, var_20h, 0x400);\n        }\ncode_r0x0040580e:\n        uVar11 = fcn.004047a8();\n        if ((uVar11 <= var_6ch) || (uVar11 = 2,  !bVar1)) {\n            uVar11 = iVar6 == 0;\n        }\n        if (*(*0x452880 + 0x10) != 0) {\n            fcn.004049de();\n            if (bVar1) {\n                fcn.004049de();\n            }\n            else {\n                fcn.004072fe(arg_8h, 0x400, 0x40b2e2);\n                puVar10 = arg_8h;\n            }\n        }\n        uVar14 = CONCAT44(puVar10, uVar11);\n        *0x44e7e0 = uVar11;\n        if (uVar11 == 0) {\n            uVar14 = fcn.0040389b(7);\n        }\n        iVar6 = uVar14;\n        if ((*(iVar2 + 0x15) & 4) != 0) {\n            iVar6 = 0;\n        }\n        fcn.004048f8(uVar14 >> 0x20);\n        if ((iVar6 == 0) && (*0x442458 == 0)) {\n            fcn.004047db();\n        }\n        *0x442458 = 0;\n    }\n    fcn.00404c92();\n    return;\n}\n",
        "token_count": 1951
    },
    "004060f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004060f6(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint var_50h;\n    uint var_4ch;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_4ch = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        var_24h = (*_sym.imp.USER32.dll_GetMessagePos)();\n        var_28h = var_24h;\n        var_24h = var_24h >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &var_28h);\n        (*pcVar1)(arg_8h, 0x1111, 0, &var_28h);\n        var_4ch = var_1ch;\n        if ((var_20h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_50h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110c, 0, &var_50h);\n    return var_2ch;\n}\n",
        "token_count": 357
    },
    "0040733a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040733a(uint arg_8h, uint32_t arg_ch)\n\n{\n    if ((*0x44e7dc == 0) || (arg_ch >> 0x15 == 0)) {\n        *0x40a070 = 0x44e85c;\n        *0x40a074 = arg_ch & 0x1fffff;\n        if (*0x44e7e4 != 0) {\n            *0x40a074 = arg_ch & 0x1fffff ^ 0x180000;\n        }\n        *0x40a064 = *0x44e854;\n        *0x40a068 = *0x44e858;\n        *0x40a06c = arg_8h;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x40a060);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00407490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nchar * __cdecl fcn.00407490(int16_t *arg_8h)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int16_t *piVar1;\n    uint arg_8h_00;\n    char *pcVar2;\n    char *pcVar3;\n    uint var_ch;\n    \n    UNRECOVERED_JUMPTABLE = _sym.imp.USER32.dll_CharNextA;\n    piVar1 = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    arg_8h_00 = (*UNRECOVERED_JUMPTABLE)(piVar1);\n    if ((*arg_8h != '\\0') && (*piVar1 == 0x5c3a)) {\n    // WARNING: Could not recover jumptable at 0x004074c8. Too many branches\n    // WARNING: Treating indirect jump as call\n        pcVar2 = (*UNRECOVERED_JUMPTABLE)();\n        return pcVar2;\n    }\n    pcVar2 = NULL;\n    if (*arg_8h == 0x5c5c) {\n        pcVar3 = fcn.004073f4(arg_8h_00, 0x5c);\n        if (*pcVar3 != '\\0') {\n            pcVar3 = fcn.004073f4(pcVar3 + 1, 0x5c);\n            if (*pcVar3 != '\\0') {\n                pcVar2 = pcVar3 + 1;\n            }\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 352
    },
    "004076a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004076a8(uint hKey, uint arg_ch, uint arg_10h, uchar *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    uint var_bp_10h;\n    int32_t var_bp_ch;\n    uint var_bp_4h;\n    \n    *arg_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, arg_ch, 0, (-(arg_18h == 0) & 0xffffff00) + 0x20119, &var_14h);\n    if (iVar1 == 0) {\n        var_bp_10h = 0x2000;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_14h, arg_10h, 0, &var_bp_ch, arg_14h, &var_bp_10h);\n        if ((iVar1 != 0) || (1 < var_bp_ch - 1U)) {\n            *arg_14h = 0;\n        }\n        arg_14h[0x1fff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_14h);\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00407853": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407853(uint8_t *arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint8_t *arg_ch;\n    uint8_t *puVar6;\n    ulong uVar7;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((((*arg_8h == 0x5c) && (arg_8h[1] == 0x5c)) && (arg_8h[2] == 0x3f)) && (arg_8h[3] == 0x5c)) {\n        arg_8h = arg_8h + 4;\n    }\n    arg_ch = arg_8h;\n    pcVar3 = _sym.imp.USER32.dll_CharNextA;\n    puVar6 = arg_8h;\n    if (*arg_8h != 0) {\n        iVar5 = fcn.00407462(arg_8h);\n        puVar1 = arg_8h + 2;\n        pcVar3 = _sym.imp.USER32.dll_CharNextA;\n        if (iVar5 != 0) {\n            arg_8h = puVar1;\n            arg_ch = puVar1;\n            puVar6 = puVar1;\n        }\n    }\n    for (; pcVar4 = _sym.imp.USER32.dll_CharPrevA,  uVar2 = *arg_ch,  uVar2 != 0; arg_ch = (*pcVar3)(arg_ch)) {\n        if (0x1f < uVar2) {\n            uVar7 = fcn.004073f4(\"*?|<>/\\\":\", uVar2);\n            if (*uVar7 == '\\0') {\n                iVar5 = (*_sym.imp.USER32.dll_CharNextA)(arg_ch, uVar7 >> 0x20);\n                fcn.0040757f(arg_8h, arg_ch, iVar5 - arg_ch);\n                arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n            }\n        }\n    }\n    *arg_8h = 0;\n    while( true ) {\n        arg_8h = (*pcVar4)(puVar6, arg_8h);\n        if ((*arg_8h != 0x5c) && (*arg_8h != 0x20)) break;\n        *arg_8h = 0;\n        if (arg_8h <= puVar6) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "00407927": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00407927(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *arg_8h_00;\n    uint8_t *puVar8;\n    ulong uVar9;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint pidl;\n    uint var_ch;\n    \n    puVar1 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x452880 + ~arg_ch * 4);\n    }\n    puVar8 = arg_ch + *0x44e818;\n    arg_8h_00 = 0x452884;\n    if (arg_8h + -0x452884 < 0x4000) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar1;\n    }\n    do {\n        while( true ) {\n            uVar3 = *puVar8;\n            if ((uVar3 == 0) || (0x1fff < arg_8h_00 + -0x452884)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00407815(arg_8h, 0x452884);\n                }\n                return;\n            }\n            if (0xfc < uVar3) break;\n            if (uVar3 == 0xfc) {\n                puVar1 = puVar8 + 1;\n                puVar8 = puVar8 + 2;\n                *arg_8h_00 = *puVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n            else {\n                *arg_8h_00 = uVar3;\n                puVar8 = puVar8 + 1;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n        }\n        uVar7 = puVar8[1];\n        uVar6 = puVar8[2];\n        puVar8 = puVar8 + 3;\n        var_2ch = uVar7 | 0x8000;\n        var_24h = uVar6 | 0x8000;\n        var_28h = uVar7;\n        var_20h = uVar6;\n        if (uVar3 == 0xfe) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            bVar2 = true;\n            if ((iVar4 < 0) && (iVar4 != 0x5a04)) {\n                bVar2 = uVar6 == 0x2e || uVar6 == 0x23;\n            }\n            iVar4 = (-(*0x44e7c0 == 0) & 0xfffffffe) + 4;\n            if ((uVar7 & 0x80) == 0) {\n                if (uVar7 == 0x25) {\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(arg_8h_00, 0x2000);\n                }\n                else {\n                    if (uVar7 != 0x24) goto code_r0x00407b11;\n                    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(arg_8h_00, 0x2000);\n                }\n                iVar4 = 0;\n            }\n            else {\n                iVar4 = 0;\n                fcn.004076a8(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", (uVar7 & 0x3f) + *0x44e818, \n                             arg_8h_00, uVar7 & 0x40);\n                if (*arg_8h_00 == 0) {\n                    fcn.00407927(arg_8h_00, uVar6);\n                }\n            }\ncode_r0x00407b11:\n            while (iVar4 != 0) {\n                iVar4 = iVar4 + -1;\n                if ((bVar2) && (*0x44e850 != NULL)) {\n                    iVar5 = (**0x44e850)(*0x44e854, (&var_2ch)[iVar4], 0, 0, arg_8h_00);\n                    if (iVar5 == 0) break;\n                }\n                iVar5 = (*_sym.imp.SHELL32.DLL_SHGetSpecialFolderLocation)(*0x44e854, (&var_2ch)[iVar4], &pidl);\n                if (iVar5 == 0) {\n                    uVar9 = (*_sym.imp.SHELL32.DLL_SHGetPathFromIDListA)(pidl, arg_8h_00);\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(pidl, uVar9 >> 0x20);\n                    if (uVar9 != 0) break;\n                }\n                *arg_8h_00 = 0;\n            }\n            if ((*arg_8h_00 != 0) && (var_20h == 0x1a)) {\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(arg_8h_00, \"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\n            }\ncode_r0x00407b82:\n            fcn.00407853(arg_8h_00);\n        }\n        else {\n            uVar6 = (uVar6 & 0x7f) << 7 | uVar7 & 0x7f;\n            if (uVar3 == 0xfd) {\n                if (uVar6 == 0x1d) {\n                    fcn.00407751(arg_8h_00, *0x44e854);\n                }\n                else {\n                    fcn.00407815(arg_8h_00, uVar6 * 0x2000 + 0x459000);\n                }\n                if (uVar6 - 0x15 < 7) goto code_r0x00407b82;\n            }\n            else if (uVar3 == 0xff) {\n                fcn.00407927(arg_8h_00, ~uVar6);\n            }\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00);\n        arg_8h_00 = arg_8h_00 + iVar4;\n    } while( true );\n}\n",
        "token_count": 1500
    },
    "00408350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00408350(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h, int32_t arg_18h, int32_t *arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    uint8_t uVar10;\n    uint32_t in_EDX;\n    int32_t *piVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    int32_t var_f4h;\n    int16_t var_eeh;\n    int32_t var_ech;\n    uint32_t var_e8h;\n    int32_t var_e4h;\n    uint32_t var_e0h;\n    int32_t var_dch;\n    uint32_t *var_d8h;\n    uint32_t var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_c8h;\n    uint32_t auStack200 [15];\n    uint var_88h;\n    uint var_84h;\n    int32_t aiStack132 [13];\n    int32_t iStack80;\n    uint var_48h;\n    \n    iVar5 = 0;\n    do {\n        *(auStack200 + iVar5 + -4) = 0;\n        iVar5 = iVar5 + 4;\n        uVar6 = in_EDX;\n        piVar11 = in_EAX;\n    } while (iVar5 != 0x40);\n    do {\n        auStack200[*piVar11 + -1] = auStack200[*piVar11 + -1] + 1;\n        uVar6 = uVar6 - 1;\n        piVar11 = piVar11 + 1;\n    } while (uVar6 != 0);\n    if (var_c8h == in_EDX) {\n        *arg_10h = 0;\n        *arg_14h = 0;\n    }\n    else {\n        var_d4h = 1;\n        do {\n            if (auStack200[var_d4h - 1] != 0) break;\n            var_d4h = var_d4h + 1;\n        } while (var_d4h != 0x10);\n        uVar12 = 0xf;\n        uVar6 = *arg_14h;\n        if (*arg_14h < var_d4h) {\n            uVar6 = var_d4h;\n        }\n        do {\n            if (auStack200[uVar12 - 1] != 0) break;\n            uVar12 = uVar12 - 1;\n        } while (uVar12 != 0);\n        if (uVar12 < uVar6) {\n            uVar6 = uVar12;\n        }\n        *arg_14h = uVar6;\n        uVar15 = 1 << (var_d4h & 0x1f);\n        for (uVar7 = var_d4h; uVar7 < uVar12; uVar7 = uVar7 + 1) {\n            if (uVar15 - auStack200[uVar7 - 1] < 0) {\n                return 0xffffffff;\n            }\n            uVar15 = (uVar15 - auStack200[uVar7 - 1]) * 2;\n        }\n        uVar7 = auStack200[uVar12 - 1];\n        if (uVar15 - uVar7 < 0) {\n            return 0xffffffff;\n        }\n        auStack200[uVar12 - 1] = uVar15;\n        iVar8 = 0;\n        var_84h = 0;\n        iVar5 = 0;\n        var_d0h = uVar12;\n        while( true ) {\n            var_d0h = var_d0h - 1;\n            if (var_d0h == 0) break;\n            iVar8 = iVar8 + *(auStack200 + iVar5);\n            *(aiStack132 + iVar5) = iVar8;\n            iVar5 = iVar5 + 4;\n        }\n        uVar3 = 0;\n        do {\n            iVar5 = in_EAX[uVar3];\n            if (iVar5 != 0) {\n                iVar8 = (&var_88h)[iVar5];\n                *(iVar8 * 4 + 0x44e304) = uVar3;\n                (&var_88h)[iVar5] = iVar8 + 1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < in_EDX);\n        iVar5 = (&var_88h)[uVar12];\n        iVar4 = -uVar6;\n        var_88h = 0;\n        var_48h = 0;\n        var_e0h = 0;\n        var_dch = 0;\n        var_d8h = 0x44e304;\n        var_e4h = -1;\n        iVar8 = iVar4;\n        for (; var_d4h <= uVar12; var_d4h = var_d4h + 1) {\n            cVar1 = var_d4h;\n            for (var_e8h = auStack200[var_d4h - 1]; var_e8h != 0; var_e8h = var_e8h - 1) {\n                uVar3 = var_d4h - (iVar8 + uVar6);\n                var_ech = uVar3 * -4;\n                while( true ) {\n                    uVar2 = iVar8;\n                    if (var_d4h <= iVar8 + uVar6) break;\n                    uVar13 = 1 << (uVar3 & 0x1f);\n                    uVar14 = uVar3;\n                    if (var_e8h < uVar13) {\n                        uVar16 = (uVar12 - var_d4h) + uVar3;\n                        if (uVar6 < uVar16) {\n                            uVar16 = uVar6;\n                        }\n                        if (uVar3 < uVar16) {\n                            var_f4h = uVar13 - var_e8h;\n                            while (uVar14 = uVar14 + 1,  uVar14 < uVar16) {\n                                uVar13 = *(auStack200 + uVar14 * 4 + var_ech + var_d4h * 4 + -4);\n                                if (var_f4h * 2 <= uVar13) break;\n                                var_f4h = var_f4h * 2 - uVar13;\n                            }\n                        }\n                    }\n                    var_e0h = 1 << (uVar14 & 0x1f);\n                    if (0x5a0 < var_e0h + *arg_1ch) {\n                        return 0xffffffff;\n                    }\n                    iVar17 = var_e4h + 1;\n                    var_dch = arg_18h + *arg_1ch * 4;\n                    (&var_48h)[iVar17] = var_dch;\n                    *arg_1ch = *arg_1ch + var_e0h;\n                    if (iVar17 == 0) {\n                        *arg_10h = var_dch;\n                    }\n                    else {\n                        (&var_88h)[iVar17] = var_d0h;\n                        uVar13 = var_d0h >> (uVar2 & 0x1f);\n                        var_eeh = (var_dch - (&var_48h)[var_e4h] >> 2) - uVar13;\n                        puVar9 = (&var_48h)[var_e4h] + uVar13 * 4;\n                        *puVar9 = uVar14;\n                        puVar9[1] = uVar6;\n                        *(puVar9 + 2) = var_eeh;\n                    }\n                    var_ech = var_ech + uVar6 * 4;\n                    uVar3 = uVar3 + iVar4;\n                    iVar8 = iVar8 + uVar6;\n                    var_e4h = iVar17;\n                }\n                uVar10 = 0xc0;\n                if (var_d8h < iVar5 * 4 + 0x44e304U) {\n                    uVar3 = *var_d8h;\n                    if (uVar3 < in_ECX) {\n                        var_d8h = var_d8h + 1;\n                        uVar10 = ~-(uVar3 < 0x100) & 0x60;\n                        var_eeh = uVar3;\n                    }\n                    else {\n                        var_d8h = var_d8h + 1;\n                        var_eeh = *(arg_8h + (uVar3 - in_ECX) * 2);\n                        uVar10 = *(arg_ch + (uVar3 - in_ECX) * 2) + 0x50;\n                    }\n                }\n                iVar17 = 1 << (cVar1 - uVar2 & 0x1f);\n                uVar3 = var_d0h >> (uVar2 & 0x1f);\n                puVar9 = var_dch + uVar3 * 4;\n                for (; uVar14 = 1 << (cVar1 - 1U & 0x1f),  uVar3 < var_e0h; uVar3 = uVar3 + iVar17) {\n                    *puVar9 = uVar10;\n                    puVar9[1] = cVar1 - uVar2;\n                    *(puVar9 + 2) = var_eeh;\n                    puVar9 = puVar9 + iVar17 * 4;\n                }\n                while ((var_d0h & uVar14) != 0) {\n                    var_d0h = var_d0h ^ uVar14;\n                    uVar14 = uVar14 >> 1;\n                }\n                var_d0h = var_d0h ^ uVar14;\n                for (; ((1 << (iVar8 & 0x1f)) - 1U & var_d0h) != (&var_88h)[var_e4h]; var_e4h = var_e4h + -1) {\n                    iVar8 = iVar8 + iVar4;\n                }\n            }\n        }\n        if ((uVar15 != uVar7) && (uVar12 != 1)) {\n            return 0xffffffff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2433
    },
    "00401414": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.00401414(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint arg_8h;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    uVar1 = (in_EAX >> 0x1f ^ in_EAX) - (in_EAX >> 0x1f);\n    arg_8h = fcn.00407927((uVar1 >> 4) * 0x2000 + 0x40e004, *(*0x40e000 + (uVar1 & 0xf) * 4));\n    if (in_EAX < 0) {\n        fcn.00407853(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "0040160f": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040160f(uint32_t arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    if (-1 < arg_8h) {\n        return arg_8h;\n    }\n    pcVar1 = ~arg_8h * 0x2000 + 0x459000;\n    iVar8 = 1;\n    if (*pcVar1 == '-') {\n        pcVar1 = ~arg_8h * 0x2000 + 0x459001;\n        iVar8 = -1;\n    }\n    if (*pcVar1 == '0') {\n        uVar3 = pcVar1[1] - 0x30;\n        cVar5 = (-(uVar3 < 8) & 0xfeU) + 0x39;\n        cVar4 = (-(uVar3 < 8) & 0xfeU) + 10;\n        if ((pcVar1[1] & 0xdfU) == 0x58) {\n            pcVar1 = pcVar1 + 2;\n            cVar4 = '\\x10';\n        }\n        else {\n            pcVar1 = pcVar1 + 1;\n        }\n    }\n    else {\n        cVar5 = '9';\n        cVar4 = '\\n';\n    }\n    iVar2 = 0;\n    do {\n        uVar6 = *pcVar1;\n        pcVar1 = pcVar1 + 1;\n        if ((uVar6 < 0x30) || (cVar5 < uVar6)) {\n            if ((cVar4 != '\\x10') || (((uVar6 & 0xffffffdf) < 0x41 || (0x46 < (uVar6 & 0xffffffdf))))) {\n                return iVar2 * iVar8;\n            }\n            iVar7 = (uVar6 & 7) + 9;\n        }\n        else {\n            iVar7 = uVar6 - 0x30;\n        }\n        iVar2 = iVar2 * cVar4 + iVar7;\n    } while( true );\n}\n",
        "token_count": 500
    },
    "0040544c": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0040544c(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint var_ch;\n    \n    if (arg_ch == 0x110) {\n        fcn.00404914();\n        fcn.004072fe(arg_8h, 1000, *(arg_14h + 0x3c) * 0x2000 + 0x459000);\n    }\n    fcn.00404c92();\n    return;\n}\n",
        "token_count": 134
    },
    "00407776": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407776(char *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    char cVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar7 = 1;\n    if (*arg_8h == '-') {\n        arg_8h = arg_8h + 1;\n        iVar7 = -1;\n    }\n    if (*arg_8h == '0') {\n        uVar2 = arg_8h[1] - 0x30;\n        cVar4 = (-(uVar2 < 8) & 0xfeU) + 0x39;\n        cVar3 = (-(uVar2 < 8) & 0xfeU) + 10;\n        if ((arg_8h[1] & 0xdfU) == 0x58) {\n            arg_8h = arg_8h + 2;\n            cVar3 = '\\x10';\n        }\n        else {\n            arg_8h = arg_8h + 1;\n        }\n    }\n    else {\n        cVar4 = '9';\n        cVar3 = '\\n';\n    }\n    iVar1 = 0;\n    do {\n        uVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        if ((uVar5 < 0x30) || (cVar4 < uVar5)) {\n            if ((cVar3 != '\\x10') || (((uVar5 & 0xffffffdf) < 0x41 || (0x46 < (uVar5 & 0xffffffdf))))) {\n                return iVar1 * iVar7;\n            }\n            iVar6 = (uVar5 & 7) + 9;\n        }\n        else {\n            iVar6 = uVar5 - 0x30;\n        }\n        iVar1 = iVar1 * cVar3 + iVar6;\n    } while( true );\n}\n",
        "token_count": 464
    },
    "004038c4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.004038c4(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_48h;\n    uint var_8h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n    }\n    else if (arg_ch != 0x113) {\n        return 0;\n    }\n    iVar1 = *0x418844;\n    if (*0x418848 <= *0x418844) {\n        iVar1 = *0x418848;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar1, 100, *0x418844);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_48h, \"verifying installer: %d%%\", uVar2);\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_48h);\n    fcn.004072fe(arg_8h, 0x406, &var_48h);\n    return 0;\n}\n",
        "token_count": 277
    },
    "00404879": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00404879(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0x78) {\n        *0x45285c = *0x45285c + 1;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*0x44e854, 0x408);\n    return;\n}\n",
        "token_count": 80
    },
    "004049de": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __fastcall fcn.004049de(uint32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_38h;\n    uint var_bp_ch;\n    \n    if (param_1 < 0x100000) {\n        iVar4 = ~-(param_1 < 0x400) - 0x22;\n        uVar1 = ~-(param_1 < 0x400) & 10;\n    }\n    else {\n        iVar4 = -0x24;\n        uVar5 = 0x14;\n        uVar1 = 0x14;\n        if (0xffff3332 < param_1) goto code_r0x00404a38;\n    }\n    uVar5 = uVar1;\n    param_1 = param_1 + (1 << uVar5) / 0x14;\ncode_r0x00404a38:\n    fcn.00407927(0x438418, param_2);\n    uVar2 = fcn.00407927(&var_38h, 0xffffffdf);\n    uVar3 = fcn.00407927(&var_58h, iVar4);\n    iVar4 = fcn.0040783d(0x438418, extraout_ECX);\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (iVar4 + 0x438418, \"%u.%u%s%s\", param_1 >> uVar5, ((param_1 & 0xffffff) * 10 >> uVar5) % 10, uVar3, uVar2)\n    ;\n    fcn.004072fe(*0x452874, in_EAX, 0x438418);\n    return;\n}\n",
        "token_count": 465
    },
    "00406ac5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00406ac5(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_bp_ch;\n    \n    if ((arg_10h == 0x20) && (arg_ch == 0x102)) {\n        fcn.00404847();\n        return 0;\n    }\n    if (arg_ch == 0x200) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if (iVar1 == 0) goto code_r0x00406b88;\n        arg_14h = fcn.004060f6(arg_8h, 1);\n    }\n    else if (arg_ch != 0x419) goto code_r0x00406b88;\n    arg_ch = 0x419;\n    if (*0x444460 != arg_14h) {\n        *0x444460 = arg_14h;\n        fcn.00407815(0x438418, 0x459000);\n        fcn.00407751(0x459000, arg_14h);\n        fcn.0040389b(6);\n        fcn.00407815(0x459000, 0x438418);\n    }\ncode_r0x00406b88:\n    uVar2 = (*_sym.imp.USER32.dll_CallWindowProcA)(*0x444464, arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar2;\n}\n",
        "token_count": 370
    },
    "004073ae": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nint32_t __cdecl fcn.004073ae(int32_t lpString)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(lpString, iVar1 + lpString);\n    if (*pcVar2 != '\\\\') {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, 0x40b384);\n    }\n    return lpString;\n}\n",
        "token_count": 145
    },
    "00407462": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00407462(int16_t *arg_8h)\n\n{\n    bool bVar1;\n    \n    bVar1 = true;\n    if ((*arg_8h != 0x5c5c) && (bVar1 = false,  (*arg_8h | 0x20) + 0x9f < 0x1a)) {\n        bVar1 = *(arg_8h + 1) == 0x3a;\n    }\n    return bVar1;\n}\n",
        "token_count": 114
    },
    "00408874": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00408874(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint32_t arg_ch;\n    uint32_t uVar3;\n    uint32_t arg_10h;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = in_EAX + 0x1bb0;\n    arg_ch = *(in_EAX + 0x9bb4);\n    while( true ) {\n        uVar3 = *(in_EAX + 0x9bb8);\n        if (uVar3 < arg_ch) {\n            uVar3 = *(in_EAX + 0x9bb0);\n        }\n        uVar2 = *(in_EAX + 0xc);\n        arg_10h = uVar3 - arg_ch;\n        if (uVar2 < uVar3 - arg_ch) {\n            arg_10h = uVar2;\n        }\n        *(in_EAX + 0xc) = uVar2 - arg_10h;\n        fcn.0040757f(*(in_EAX + 8), arg_ch, arg_10h);\n        *(in_EAX + 8) = *(in_EAX + 8) + arg_10h;\n        iVar4 = arg_10h + arg_ch;\n        if (iVar4 != *(in_EAX + 0x9bb0)) break;\n        arg_ch = uVar1;\n        if (*(in_EAX + 0x9bb8) == iVar4) {\n            *(in_EAX + 0x9bb8) = uVar1;\n        }\n    }\n    *(in_EAX + 0x9bb4) = iVar4;\n    return;\n}\n",
        "token_count": 402
    },
    "0040133f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040133f(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_8h < 0x20) {\n        iVar2 = *0x44e808;\n        for (uVar1 = 0; uVar1 < *0x44e80c; uVar1 = uVar1 + 1) {\n            uVar3 = *(iVar2 + 8);\n            if ((uVar3 & 6) == 0) {\n                if ((*(iVar2 + 4) & 1 << (arg_8h & 0x1f)) == 0) {\n                    uVar3 = uVar3 & 0xfffffffe;\n                }\n                else {\n                    uVar3 = uVar3 | 1;\n                }\n                *(iVar2 + 8) = uVar3;\n            }\n            iVar2 = iVar2 + 0x2018;\n        }\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "004046a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046a8(uint arg_8h)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x438410; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "004048b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.004048b1(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_bp_4h;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, arg_8h + *0x44446c, arg_10h);\n    iVar1 = fcn.0040783d(arg_ch);\n    *0x44446c = *0x44446c + iVar1;\n    *arg_14h = iVar1;\n    return 0;\n}\n",
        "token_count": 155
    },
    "00404914": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __fastcall fcn.00404914(uint param_1)\n\n{\n    uint var_bp_8h;\n    \n    fcn.00407927(0, param_1);\n    fcn.004072fe();\n    return;\n}\n",
        "token_count": 68
    },
    "00407424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nchar * __cdecl fcn.00407424(char *lpString)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_8h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    pcVar1 = _sym.imp.USER32.dll_CharPrevA;\n    pcVar3 = lpString + iVar2;\n    do {\n        if (*pcVar3 == '\\\\') break;\n        pcVar3 = (*pcVar1)(lpString, pcVar3);\n    } while (lpString < pcVar3);\n    *pcVar3 = '\\0';\n    return pcVar3 + 1;\n}\n",
        "token_count": 168
    },
    "00407636": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00407636(uchar *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_1ch;\n    uint var_bp_ch;\n    \n    iVar3 = 0x65;\n    do {\n        iVar3 = iVar3 + -1;\n        if (iVar3 == 0) {\n            *arg_8h = 0;\n            return NULL;\n        }\n        var_1ch = 0x61736e;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_30h._0_1_ = uVar1 % 0x1a;\n        var_1ch._0_3_ = CONCAT12(var_30h + 'a', var_1ch);\n        var_1ch = var_1ch & 0xff000000 | var_1ch;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &var_1ch, 0, arg_8h);\n    } while (iVar2 == 0);\n    return arg_8h;\n}\n",
        "token_count": 301
    },
    "0040148f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.0040148f(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    uVar3 = *0x44e7ec | in_EAX;\n    uVar1 = fcn.00401414();\n    iVar2 = *(*0x40e000 + 4);\n    if (iVar2 == 0) {\n        iVar2 = *0x44e7c0 + -0x7fffffff;\n    }\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(iVar2, uVar1, 0, uVar3, &var_ch);\n    uVar1 = 0;\n    if (iVar2 == 0) {\n        uVar1 = var_ch;\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "00407c40": {
        "rules": [
            "get file attributes"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nbool __cdecl fcn.00407c40(uint arg_8h)\n\n{\n    code *pcVar1;\n    char *arg_8h_00;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint var_8h;\n    \n    fcn.00407815(0x44a4b8, arg_8h);\n    arg_8h_00 = fcn.00407490(0x44a4b8);\n    bVar4 = false;\n    if (arg_8h_00 != NULL) {\n        fcn.00407853(arg_8h_00);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        if (((*0x44e844 & 0x80) == 0) || ((*arg_8h_00 != '\\\\' && (*arg_8h_00 != '\\0')))) {\n            while (iVar3 = (*pcVar1)(0x44a4b8),  arg_8h_00 + -0x44a4b8 < iVar3) {\n                puVar2 = fcn.00407c08(0x44a4b8);\n                if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) goto code_r0x00407cec;\n                fcn.00407424(0x44a4b8);\n            }\n            fcn.004073ae(0x44a4b8);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x44a4b8);\n            bVar4 = iVar3 != -1;\n        }\n        else {\ncode_r0x00407cec:\n            bVar4 = false;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 413
    },
    "0040727c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create process on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040727c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_18h;\n    uint hObject;\n    \n    *0x448474 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, arg_8h, 0, 0, 0, 0, 0, 0, 0x448474, &var_18h);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        uVar2 = var_18h;\n    }\n    return uVar2;\n}\n",
        "token_count": 160
    },
    "004046d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004046d0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar4 = *0x438410;\n    fcn.004046a8(0);\n    pcVar3 = _sym.imp.KERNEL32.dll_GlobalFree;\n    pcVar2 = _sym.imp.KERNEL32.dll_FreeLibrary;\n    while (puVar4 != NULL) {\n        puVar1 = *puVar4;\n        (*pcVar2)(puVar4[2]);\n        (*pcVar3)(puVar4);\n        puVar4 = puVar1;\n    }\n    *0x438410 = NULL;\n    return;\n}\n",
        "token_count": 185
    },
    "00404727": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404727(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x438410;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == arg_8h) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "004073f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004073f4(char *arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint var_9h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    while( true ) {\n        if ((*arg_8h == '\\0') || (*arg_8h == arg_ch)) break;\n        arg_8h = (*pcVar1)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00407512": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00407512(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    while( true ) {\n        iVar5 = (*pcVar3)(arg_8h);\n        if (iVar5 < iVar4) {\n            return 0;\n        }\n        puVar1 = arg_8h + iVar4;\n        uVar2 = *puVar1;\n        *puVar1 = 0;\n        uVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, arg_ch);\n        *puVar1 = uVar2;\n        if (uVar6 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h, uVar6 >> 0x20);\n    }\n    return arg_8h;\n}\n",
        "token_count": 292
    },
    "0040757f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040757f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = 0; arg_10h != iVar1 && -1 < arg_10h - iVar1; iVar1 = iVar1 + 1) {\n        *(arg_8h + iVar1) = *(arg_ch + iVar1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00408298": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00408298(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_34h;\n    uint var_bp_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&var_34h, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&var_34h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00403a15": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nbool __cdecl fcn.00403a15(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40a010, arg_8h, arg_ch, &var_ch, 0);\n    return iVar1 != 0 && var_ch == arg_ch;\n}\n",
        "token_count": 115
    },
    "00407cf7": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00407cf7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    uVar2 = *(arg_8h * 8 + 0x40a018);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2);\n    if ((iVar1 == 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar2),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, *(arg_8h * 8 + 0x40a01c));\n    return uVar2;\n}\n",
        "token_count": 187
    },
    "00404088": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint fcn.00404088(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    fcn.00407853(0x48b000);\n    iVar1 = fcn.00407462(0x48b000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        fcn.004073ae(0x48b000);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x48b000, 0);\n        uVar2 = fcn.00407636(0x489000, 0x48b000);\n    }\n    return uVar2;\n}\n",
        "token_count": 143
    }
}