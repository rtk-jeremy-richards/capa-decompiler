{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040117d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.0040117d(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    for (; *param_1 != 0; param_1 = param_1 + 1) {\n        iVar1 = iVar1 + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 76
    },
    "00401b82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00401b82(char *param_1)\n\n{\n    char cVar1;\n    \n    do {\n        cVar1 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 63
    },
    "004075a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004075a7(int32_t param_1, ushort param_2, ushort param_3)\n\n{\n    code *pcVar1;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(param_1 + 0x40) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x401, 0, CONCAT22(param_3, param_2));\n        (*pcVar1)(*(param_1 + 0x20), 0x404, unaff_ESI, 0);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004075e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004075e8(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    sub.MFC42.DLL_CWnd::ModifyStyle(0, 0x10000000, 0);\n    if (*(param_1 + 0x40) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x402, uVar1, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "0040761b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040761b(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    sub.MFC42.DLL_CWnd::ModifyStyle(0, 0x10000000, 0);\n    if (*(param_1 + 0x40) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x404, uVar1, 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "00407878": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a4h\n\nuint __cdecl fcn.00407878(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    int32_t arg_10h_00;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_58h;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    iVar2 = sub.MFC42.DLL_CWnd::GetDlgItem(0);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x1200, 0, 0);\n    if (*(unaff_EBP + 8) < iVar2) {\n        if (*(unaff_EBP + 0x14) == -1) {\n            iVar2 = (*pcVar1)(*(extraout_ECX + 0x20), 0x1004, 0, 0);\n            *(unaff_EBP + 0x14) = iVar2 + -1;\n        }\n        iVar2 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x20) = iVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + 0x14);\n        sub.MFC42.DLL_CString::CString();\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 < *(unaff_EBP + 0x14)) {\n            uVar3 = sub.MFC42.DLL_CListCtrl::GetItemText\n                              (unaff_EBP + -0x24, (*(unaff_EBP + 0x14) + iVar2) / 2, *(unaff_EBP + 8));\n            *(unaff_EBP + -4) = 1;\n            sub.MFC42.DLL_CString::operator_1(uVar3);\n            *(unaff_EBP + -4) = 0;\n            fcn.00407dae();\n            arg_10h_00 = iVar2;\n            if (iVar2 <= *(unaff_EBP + 0x14)) {\n                do {\n                    sub.MFC42.DLL_CStringArray::CStringArray();\n                    *(unaff_EBP + -4) = 2;\n                    if (*(unaff_EBP + 0xc) == 0) {\n                        if (arg_10h_00 < *(unaff_EBP + 0x14)) {\n                            do {\n                                uVar3 = *(unaff_EBP + -0x1c);\n                                puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText\n                                                   (unaff_EBP + -0x44, arg_10h_00, *(unaff_EBP + 8));\n                                iVar2 = (*_sym.imp.MSVCRT.dll__mbsicmp)(*puVar4, uVar3);\n                                *(unaff_EBP + -0xd) = 0 < iVar2;\n                                fcn.00407dae();\n                                if (*(unaff_EBP + -0xd) == '\\0') goto code_r0x00407a0f;\n                                arg_10h_00 = arg_10h_00 + 1;\n                                *(unaff_EBP + -0x20) = arg_10h_00;\n                            } while (arg_10h_00 < *(unaff_EBP + 0x14));\n                            goto code_r0x004079bc;\n                        }\ncode_r0x00407a0f:\n                        if (*(unaff_EBP + -0x14) != *(unaff_EBP + 0x10) && *(unaff_EBP + 0x10) <= *(unaff_EBP + -0x14))\n                        {\n                            do {\n                                uVar3 = *(unaff_EBP + -0x1c);\n                                puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText\n                                                   (unaff_EBP + -0x40, *(unaff_EBP + -0x14), *(unaff_EBP + 8));\n                                iVar2 = (*_sym.imp.MSVCRT.dll__mbsicmp)(*puVar4, uVar3);\n                                *(unaff_EBP + -0xd) = iVar2 < 0;\n                                fcn.00407dae();\n                                if (*(unaff_EBP + -0xd) == '\\0') break;\n                                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n                            } while (*(unaff_EBP + 0x10) < *(unaff_EBP + -0x14));\n                        }\n                    }\n                    else {\n                        while (arg_10h_00 < *(unaff_EBP + 0x14)) {\n                            uVar3 = *(unaff_EBP + -0x1c);\n                            puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText\n                                               (unaff_EBP + -0x34, arg_10h_00, *(unaff_EBP + 8));\n                            iVar2 = (*_sym.imp.MSVCRT.dll__mbsicmp)(*puVar4, uVar3);\n                            *(unaff_EBP + -0xd) = iVar2 < 0;\n                            fcn.00407dae();\n                            if (*(unaff_EBP + -0xd) == '\\0') break;\n                            arg_10h_00 = arg_10h_00 + 1;\n                            *(unaff_EBP + -0x20) = arg_10h_00;\n                        }\ncode_r0x004079bc:\n                        if (*(unaff_EBP + 0xc) == 0) goto code_r0x00407a0f;\n                        if (*(unaff_EBP + -0x14) != *(unaff_EBP + 0x10) && *(unaff_EBP + 0x10) <= *(unaff_EBP + -0x14))\n                        {\n                            do {\n                                uVar3 = *(unaff_EBP + -0x1c);\n                                puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText\n                                                   (unaff_EBP + -0x28, *(unaff_EBP + -0x14), *(unaff_EBP + 8));\n                                iVar2 = (*_sym.imp.MSVCRT.dll__mbsicmp)(*puVar4, uVar3);\n                                *(unaff_EBP + -0xd) = 0 < iVar2;\n                                fcn.00407dae();\n                                if (*(unaff_EBP + -0xd) == '\\0') break;\n                                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n                            } while (*(unaff_EBP + 0x10) < *(unaff_EBP + -0x14));\n                        }\n                    }\n                    if (arg_10h_00 <= *(unaff_EBP + -0x14)) {\n                        puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText\n                                           (unaff_EBP + -0x2c, *(unaff_EBP + -0x14), *(unaff_EBP + 8));\n                        uVar3 = *puVar4;\n                        *(unaff_EBP + -4) = 3;\n                        puVar4 = sub.MFC42.DLL_CListCtrl::GetItemText(unaff_EBP + -0x3c, arg_10h_00, *(unaff_EBP + 8));\n                        iVar2 = (*_sym.imp.MSVCRT.dll__mbsicmp)(*puVar4, uVar3);\n                        *(unaff_EBP + -0xd) = iVar2 != 0;\n                        fcn.00407dae();\n                        *(unaff_EBP + -4) = 2;\n                        fcn.00407dae();\n                        if (*(unaff_EBP + -0xd) != '\\0') {\n                            iVar5 = 0;\n                            iVar2 = sub.MFC42.DLL_CWnd::GetDlgItem(0);\n                            uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x1200, 0, 0);\n                            *(unaff_EBP + -0x18) = uVar3;\n                            sub.MFC42.DLL_CStringArray::SetSize(uVar3, 0xffffffff);\n                            if (0 < *(unaff_EBP + -0x18)) {\n                                do {\n                                    uVar3 = sub.MFC42.DLL_CListCtrl::GetItemText(unaff_EBP + -0x30, arg_10h_00, iVar5);\n                                    *(unaff_EBP + -4) = 4;\n                                    sub.MFC42.DLL_CString::operator_1();\n                                    *(unaff_EBP + -4) = 2;\n                                    fcn.00407dae();\n                                    iVar5 = iVar5 + 1;\n                                } while (iVar5 < *(unaff_EBP + -0x18));\n                            }\n                            *(unaff_EBP + -0x78) = 0;\n                            uVar7 = *(unaff_EBP + -0x14);\n                            *(unaff_EBP + -0x7c) = arg_10h_00;\n                            *(unaff_EBP + -0x80) = 0xe;\n                            *(unaff_EBP + -0x70) = 0xff0f;\n                            puVar4 = unaff_EBP + -0x80;\n                            puVar6 = unaff_EBP + -0xa8;\n                            for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                *puVar6 = *puVar4;\n                                puVar4 = puVar4 + 1;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *(unaff_EBP + -0xa4) = uVar7;\n                            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n                            (*_sym.imp.USER32.dll_SendMessageA)\n                                      (*(extraout_ECX + 0x20), 0x1005, 0, unaff_EBP + -0x80, uVar3);\n                            uVar3 = *(extraout_ECX + 0x20);\n                            (*pcVar1)(uVar3, 0x1005, 0, unaff_EBP + -0xa8);\n                            iVar2 = 0;\n                            if (0 < *(unaff_EBP + -0x18)) {\n                                do {\n                                    sub.MFC42.DLL_CListCtrl::GetItemText(unaff_EBP + -0x38, *(unaff_EBP + -0x14), iVar2)\n                                    ;\n                                    *(unaff_EBP + -4) = 5;\n                                    uVar3 = *(unaff_EBP + -0x20);\n                                    sub.MFC42.DLL_CListCtrl::SetItemText();\n                                    *(unaff_EBP + -4) = 2;\n                                    fcn.00407dae();\n                                    iVar2 = iVar2 + 1;\n                                } while (iVar2 < *(unaff_EBP + -0x18));\n                            }\n                            *(unaff_EBP + -0xa4) = *(unaff_EBP + -0x20);\n                            uVar7 = *(extraout_ECX + 0x20);\n                            (*pcVar1)(uVar7, 0x1006, 0, unaff_EBP + -0xa8, uVar3);\n                            *(unaff_EBP + -0x24) = 0;\n                            if (0 < *(unaff_EBP + -0x18)) {\n                                do {\n                                    uVar7 = *(unaff_EBP + -0x14);\n                                    sub.MFC42.DLL_CListCtrl::SetItemText();\n                                    *(unaff_EBP + -0x24) = *(unaff_EBP + -0x24) + 1;\n                                } while (*(unaff_EBP + -0x24) < *(unaff_EBP + -0x18));\n                            }\n                            *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x14);\n                            (*pcVar1)(*(extraout_ECX + 0x20), 0x1006, 0, unaff_EBP + -0x80, uVar7);\n                            arg_10h_00 = *(unaff_EBP + -0x20);\n                        }\n                        arg_10h_00 = arg_10h_00 + 1;\n                        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + -1;\n                        *(unaff_EBP + -0x20) = arg_10h_00;\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00407f58();\n                } while (arg_10h_00 <= *(unaff_EBP + -0x14));\n                iVar2 = *(unaff_EBP + 0x10);\n            }\n            if (iVar2 < *(unaff_EBP + -0x14)) {\n                fcn.00407878(*(unaff_EBP + 8), *(unaff_EBP + 0xc), iVar2, *(unaff_EBP + -0x14));\n            }\n            if (arg_10h_00 < *(unaff_EBP + 0x14)) {\n                fcn.00407878(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_10h_00, *(unaff_EBP + 0x14));\n            }\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00407dae();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 3313
    },
    "004071a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004071a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = sub.MFC42.DLL_CFrameWnd::OnCreate(arg_8h);\n    if ((iVar1 != -1) && (iVar1 = sub.MFC42.DLL_CToolBar::CreateEx(),  iVar1 != 0)) {\n        iVar1 = sub.MFC42.DLL_CToolBar::LoadToolBar(0x80);\n        if ((iVar1 != 0) &&\n           ((iVar1 = sub.MFC42.DLL_CStatusBar::Create(),  iVar1 != 0 &&\n            (iVar1 = sub.MFC42.DLL_CStatusBar::SetIndicators(0x40c220, 5),  iVar1 != 0)))) {\n            sub.MFC42.DLL_CControlBar::EnableDocking(0xf000);\n            sub.MFC42.DLL_CFrameWnd::EnableDocking(0xf000);\n            sub.MFC42.DLL_CFrameWnd::DockControlBar(in_ECX + 0x140, 0, 0);\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 285
    },
    "0040118f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040118f(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    \n    iVar2 = fcn.0040117d(param_1);\n    iVar3 = fcn.0040117d(param_2);\n    if (iVar2 == iVar3) {\n        uVar7 = 0;\n        iVar2 = fcn.0040117d(param_1);\n        if (iVar2 != 0) {\n            do {\n                uVar1 = *param_1;\n                uVar6 = *param_2;\n                if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                    uVar1 = uVar1 + 0x20;\n                }\n                if ((0x40 < uVar6) && (uVar6 < 0x5b)) {\n                    uVar6 = uVar6 + 0x20;\n                }\n                if (uVar1 != uVar6) goto code_r0x004011fa;\n                uVar7 = uVar7 + 1;\n                param_1 = param_1 + 1;\n                param_2 = param_2 + 1;\n                uVar4 = fcn.0040117d(param_1);\n            } while (uVar7 < uVar4);\n        }\n        uVar5 = 0;\n    }\n    else {\ncode_r0x004011fa:\n        uVar5 = 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 379
    },
    "0040122f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x00401b3f)\n\nuint __cdecl fcn.0040122f(uint32_t arg_8h, uint32_t arg_ch, uint8_t *arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    uint8_t auStack71740 [71720];\n    uint var_10h;\n    uint8_t *var_ch;\n    uint8_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.004082c0();\n    pcVar2 = _sym.imp.USER32.dll_SetRectEmpty;\n    if (arg_14h != 0) {\n        uVar3 = 0;\n        do {\n            auStack71740[uVar3] = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x11825);\n        uVar3 = 0;\n        var_4h = 0;\n        do {\n            uVar1 = auStack71740[var_4h];\n            uVar3 = (uVar1 + uVar3 + *(arg_8h + (var_4h % arg_ch) * 2)) % 0x11825;\n            auStack71740[var_4h] = auStack71740[uVar3];\n            auStack71740[uVar3] = uVar1;\n            var_4h = var_4h + 1;\n        } while (var_4h < 0x11825);\n        var_8h = auStack71740;\n        arg_8h = 0;\n        var_4h = 0;\n        puVar4 = auStack71740;\n        var_ch = arg_10h;\n        do {\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            *puVar4 = *var_8h;\n            *var_8h = auStack71740[0];\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            uVar1 = *puVar4;\n            *puVar4 = auStack71740[0];\n            *var_8h = uVar1;\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            var_4h = (var_4h + 1) % 0x11825;\n            uVar1 = auStack71740[var_4h];\n            puVar4 = auStack71740 + var_4h;\n            arg_8h = (uVar1 + arg_8h) % 0x11825;\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            var_8h = auStack71740 + arg_8h;\n            *puVar4 = auStack71740[arg_8h];\n            *var_8h = uVar1;\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            (*pcVar2)();\n            auStack71740[0] = *puVar4;\n            *var_ch = *var_ch ^ auStack71740[(auStack71740[0] + uVar1) % 0x11825];\n            var_ch = var_ch + 1;\n        } while( true );\n    }\n    return 0;\n}\n",
        "token_count": 4708
    },
    "00401b4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401b4b(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t arg_10h;\n    \n    arg_10h = sub.MFC42.DLL_operatornew(param_3 + 1);\n    *(arg_10h + param_3) = 0;\n    sub.MSVCRT.dll_memcpy(arg_10h, param_2, param_3);\n    fcn.0040122f(param_1, param_4, arg_10h, param_3);\n    return arg_10h;\n}\n",
        "token_count": 135
    },
    "00401b9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401b9f(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    fcn.0040117d(*0x40c038);\n    iVar2 = fcn.004011ff();\n    piVar1 = *(*(iVar2 + 0xc) + 0xc);\n    iVar2 = fcn.0040118f(piVar1[0xc], param_1);\n    piVar3 = piVar1;\n    while( true ) {\n        if (iVar2 == 0) {\n            return piVar3[6];\n        }\n        piVar3 = *piVar3;\n        if (piVar3 == piVar1) break;\n        iVar2 = fcn.0040118f(piVar3[0xc], param_1);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "00401bec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401bec(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar9 = arg_8h;\n    uVar6 = fcn.0040117d(*0x40c038);\n    piVar1 = *0x40c03c + arg_8h;\n    arg_8h = 0;\n    iVar7 = *(*piVar1 + *0x40c040 + iVar9) + iVar9;\n    uVar2 = *(*0x40c044 + iVar7);\n    iVar3 = *(*0x40c048 + iVar7);\n    iVar4 = *(*0x40c050 + iVar7);\n    var_4h = *(*0x40c04c + iVar7) + iVar9;\n    if (uVar2 != 0) {\n        do {\n            iVar7 = *var_4h;\n            uVar8 = sub.MSVCRT.dll_strlen(iVar9 + iVar7, uVar6);\n            uVar8 = fcn.00401b4b(*0x40c038, iVar9 + iVar7, uVar8);\n            iVar7 = fcn.00401b82(uVar8);\n            if (iVar7 == arg_ch) break;\n            arg_8h = arg_8h + 1;\n            var_4h = var_4h + 1;\n        } while (arg_8h < uVar2);\n    }\n    pcVar5 = _sym.imp.USER32.dll_SetRectEmpty;\n    if (arg_8h == uVar2) {\n        iVar9 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetRectEmpty)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        (*pcVar5)(0);\n        iVar9 = *(iVar3 + iVar9 + *(iVar4 + iVar9 + arg_8h * 2) * 4) + iVar9;\n    }\n    return iVar9;\n}\n",
        "token_count": 8376
    },
    "00405859": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405859(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    uVar1 = *(extraout_ECX + 0x5c);\n    *(unaff_EBP + -4) = 0;\n    sub.MFC42.DLL_CStringArray::SetAtGrow(uVar1, unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00407dae();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 189
    },
    "00405891": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00405891(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    *(unaff_EBP + -0x10) = 0;\n    uVar1 = fcn.004058e4(unaff_EBP + 0xc, *(unaff_EBP + 0xc));\n    *(unaff_EBP + -4) = 1;\n    sub.MFC42.DLL_CString::CString_1(uVar1);\n    *(unaff_EBP + -0x10) = 1;\n    *(unaff_EBP + -4) = 0;\n    fcn.00407dae();\n    uVar1 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 274
    },
    "004065bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nuint __cdecl fcn.004065bf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 1;\n    sub.MFC42.DLL_CString::CString();\n    *(unaff_EBP + -4) = 2;\n    sub.MFC42.DLL_CString::Format(unaff_EBP + -0x10, 0x40c14c, *(unaff_EBP + 0xc));\n    iVar5 = *(*(unaff_EBP + -0x10) + -8);\n    iVar2 = (iVar5 + -1) / 3;\n    if (iVar2 == 0) {\n        sub.MFC42.DLL_CString::CString_1(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x14) = 1;\n    }\n    else {\n        if (0 < iVar2) {\n            *(unaff_EBP + 0xc) = iVar2;\n            do {\n                iVar5 = iVar5 + -3;\n                uVar3 = sub.MFC42.DLL_CString::Right();\n                *(unaff_EBP + -4) = 3;\n                uVar4 = sub.MFC42.DLL_CString::Left(unaff_EBP + -0x20, iVar5);\n                *(unaff_EBP + -4) = 4;\n                uVar4 = sub.MFC42.DLL_operator(unaff_EBP + -0x1c, uVar4, unaff_EBP + 0x10);\n                *(unaff_EBP + -4) = 5;\n                uVar3 = sub.MFC42.DLL_operator(unaff_EBP + -0x18, uVar4, uVar3);\n                *(unaff_EBP + -4) = 6;\n                sub.MFC42.DLL_CString::operator_1(uVar3);\n                *(unaff_EBP + -4) = 5;\n                fcn.00407dae();\n                *(unaff_EBP + -4) = 4;\n                fcn.00407dae();\n                *(unaff_EBP + -4) = 3;\n                fcn.00407dae();\n                *(unaff_EBP + -4) = 2;\n                fcn.00407dae();\n                piVar1 = unaff_EBP + 0xc;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n        sub.MFC42.DLL_CString::CString_1(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x14) = 1;\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.00407dae();\n    *(unaff_EBP + -4) = 0;\n    fcn.00407dae();\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 927
    },
    "0040764e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid fcn.0040764e(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_48h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    sub.MSVCRT.dll__EH_prolog();\n    iVar2 = fcn.00407485();\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(extraout_ECX + 0x20));\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(extraout_ECX + 0x20));\n            if (iVar3 != 0) {\n                sub.MFC42.DLL_CWnd::SetWindowTextA(*(extraout_ECX + 0x48));\n                (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar2 + 0x20));\n            }\n        }\n        sub.MFC42.DLL_CClientDC::CClientDC(iVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar4 = fcn.0040732e();\n        uVar4 = sub.MFC42.DLL_CDC::SelectObject(uVar4);\n        *(unaff_EBP + -0x14) = uVar4;\n        pcVar1 = _sym.imp.GDI32.dll_GetTextExtentPoint32A;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (*(unaff_EBP + -0x40), *(extraout_ECX + 0x48), *(*(extraout_ECX + 0x48) + -8), unaff_EBP + -0x24);\n        sub.MFC42.DLL_CString::CString_2(0x40c250);\n        (*pcVar1)(*(unaff_EBP + -0x40), *(unaff_EBP + -0x10), *(*(unaff_EBP + -0x10) + -8), unaff_EBP + -0x1c);\n        iVar2 = *(unaff_EBP + -0x1c);\n        fcn.00407dae();\n        sub.MFC42.DLL_CDC::SelectObject(*(unaff_EBP + -0x14));\n        sub.MFC42.DLL_CStatusBar::GetItemRect(0, unaff_EBP + -0x34);\n        iVar2 = *(unaff_EBP + -0x24) + iVar2 * 2;\n        iVar3 = *(extraout_ECX + 0x44);\n        *(unaff_EBP + -0x34) = iVar2;\n        iVar3 = ((*(unaff_EBP + -0x2c) - iVar2) * iVar3) / 100 + iVar2;\n        *(unaff_EBP + -0x2c) = iVar3;\n        if (iVar3 < iVar2) {\n            *(unaff_EBP + -0x2c) = iVar2;\n        }\n        uVar4 = *(extraout_ECX + 0x20);\n        iVar2 = (*(unaff_EBP + -0x28) - *(unaff_EBP + -0x30)) / 10;\n        *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) - iVar2;\n        *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + iVar2;\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar4);\n        if (iVar2 != 0) {\n            sub.MFC42.DLL_CWnd::MoveWindow\n                      (*(unaff_EBP + -0x34), *(unaff_EBP + -0x30), *(unaff_EBP + -0x2c) - *(unaff_EBP + -0x34), \n                       *(unaff_EBP + -0x28) - *(unaff_EBP + -0x30), 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004081da();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1042
    },
    "004011ff": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.004011ff(void)\n\n{\n    int32_t in_FS_OFFSET;\n    uint var_4h;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 40
    },
    "004074cb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004074cb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(in_ECX + 0x40) = 0;\n    iVar1 = fcn.00407485();\n    if (iVar1 != 0) {\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        iVar1 = sub.MFC42.DLL_CProgressCtrl::Create(0x50000001, &var_10h, iVar1, 1);\n        *(in_ECX + 0x40) = iVar1;\n        if (iVar1 != 0) {\n            fcn.004075a7(0, arg_10h, 1);\n            fcn.0040761b(1);\n            fcn.00407dba(arg_8h);\n            *(in_ECX + 0x44) = arg_ch;\n            fcn.0040764e();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00401211": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401211(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00402848": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.00402848(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"ADVAPI32.DLL\", \"CryptAcquireContextA\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    var_4h = 0;\n    uVar3 = (*pcVar2)(&var_4h, 0, 0, 1, 0);\n    if (uVar3 != 0) {\n        iVar4 = (*pcVar2)(&var_4h, 0, 0, 1, 8);\n        uVar3 = iVar4 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 196
    }
}